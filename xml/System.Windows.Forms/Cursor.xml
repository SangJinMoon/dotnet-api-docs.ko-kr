<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Cursor.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e8cf468bc493a426f0c909ac5571fe37cd37eb18.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e8cf468bc493a426f0c909ac5571fe37cd37eb18</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Cursor">
          <source>Represents the image used to paint the mouse pointer.</source>
          <target state="translated">마우스 포인터를 그리는 데 사용되는 이미지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>A cursor is a small picture whose location on the screen is controlled by a pointing device, such as a mouse, pen, or trackball.</source>
          <target state="translated">커서가 작은 사진을 위치 화면에 있는 트랙볼, 펜, 마우스 등 포인팅 장치에 의해 제어 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>When the user moves the pointing device, the operating system moves the cursor accordingly.</source>
          <target state="translated">포인팅 장치를 이동할 때 운영 체제에 따라 커서를 이동 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>Different cursor shapes are used to inform the user what operation the mouse will have.</source>
          <target state="translated">다양 한 커서 모양은 마우스가 작업은 사용자에 게 알리는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>For example, when editing or selecting text, a <ph id="ph1">&lt;xref:System.Windows.Forms.Cursors.IBeam%2A?displayProperty=nameWithType&gt;</ph> cursor is typically displayed.</source>
          <target state="translated">예를 들어, 편집 하거나 텍스트를 선택할 때는 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursors.IBeam%2A?displayProperty=nameWithType&gt;</ph> 커서는 일반적으로 표시 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>A wait cursor is commonly used to inform the user that a process is currently running.</source>
          <target state="translated">대기 커서를 현재 실행 중인 프로세스를 사용자에 게에 주로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>Examples of processes you might have the user wait for are opening a file, saving a file, or filling a control such as a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> with a large amount of data.</source>
          <target state="translated">사용자를 대기 중일 수 있는 프로세스의 예로 파일을 저장 또는 같은 컨트롤을 채우는 파일을 열는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> 많은 양의 데이터를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>All controls that derive from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class have a <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property.</source>
          <target state="translated">파생 되는 모든 컨트롤은 <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> 클래스는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>To change the cursor displayed by the mouse pointer when it is within the bounds of the control, assign a <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property of the control.</source>
          <target state="translated">컨트롤의 범위 내에 없을 때 마우스 포인터에 의해 표시 되는 커서를 변경 하려면 할당 한 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> 컨트롤의 속성입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>Alternatively, you can display cursors at the application level by assigning a <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> property.</source>
          <target state="translated">할당 하 여 응용 프로그램 수준에서 커서를 표시할 수는 또한는 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>For example, if the purpose of your application is to edit a text file, you might set the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.Cursors.WaitCursor%2A?displayProperty=nameWithType&gt;</ph> to display a wait cursor over the application while the file loads or saves to prevent any mouse events from being processed.</source>
          <target state="translated">예를 들어 응용 프로그램의 용도 텍스트 파일을 편집 하려면 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursors.WaitCursor%2A?displayProperty=nameWithType&gt;</ph> 파일 로드 하거나 처리 되지 않도록 모든 마우스 이벤트를 방지 하기 위해 저장 하는 동안 응용 프로그램이 대기 커서를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>When the process is complete, set the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.Cursors.Default%2A?displayProperty=nameWithType&gt;</ph> for the application to display the appropriate cursor over each control type.</source>
          <target state="translated">프로세스가 완료 되 면 설정 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursors.Default%2A?displayProperty=nameWithType&gt;</ph> 각 컨트롤 형식에 대해 적절 한 커서를 표시 하려면 응용 프로그램에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType&gt;</ph> before resetting the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> property back to the <ph id="ph3">&lt;xref:System.Windows.Forms.Cursors.Default%2A?displayProperty=nameWithType&gt;</ph> cursor, the application will resume listening for mouse events and will resume displaying the appropriate <ph id="ph4">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> for each control in the application.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType&gt;</ph> 다시 설정 하기 전에 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> 속성을 다시는 <ph id="ph3">&lt;xref:System.Windows.Forms.Cursors.Default%2A?displayProperty=nameWithType&gt;</ph> 커서 응용 프로그램 마우스 이벤트를 수신 대기 하는 다시 시작 됩니다 및 다시 적절 한 표시 되기 시작 <ph id="ph4">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> 응용 프로그램의 각 컨트롤에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>Cursor objects can be created from several sources, such as the handle of an existing <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>, a standard <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> file, a resource, or a data stream.</source>
          <target state="translated">커서 개체의 기존 핸들 등의 여러 원본에서 만들 수 있습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>, 표준 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> 파일, 리소스 또는 데이터 스트림에서 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> class does not support animated cursors (.ani files) or cursors with colors other than black and white.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> 애니메이션된 커서 (.ani 파일) 또는 커서 흑백 아닌 색을 가진 클래스를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>If the image you are using as a cursor is too small, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.DrawStretched%2A&gt;</ph> method to force the image to fill the bounds of the cursor.</source>
          <target state="translated">커서를 사용 하는 이미지가 너무 작으면 경우 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.DrawStretched%2A&gt;</ph> 메서드를 이미지 커서의 범위를 채웁니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>You can temporarily hide the cursor by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Hide%2A&gt;</ph> method, and restore it by calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Show%2A&gt;</ph> method.</source>
          <target state="translated">호출 하 여 커서를 임시로 숨길 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Hide%2A&gt;</ph> 메서드를 호출 하 여 복원할 수는 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Show%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>Starting with the .NET Framework 4.5.2, the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> will be resized based on the system DPI setting when the app.config file contains the following entry:</source>
          <target state="translated">.NET Framework 4.5.2부터는 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> app.config 파일에 다음 항목이 포함 되어 있으면 시스템 DPI 설정에 따라 조정 됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>The following code example displays a form that demonstrates using a custom cursor.</source>
          <target state="translated">다음 코드 예제에서는 사용자 지정 커서를 사용 하 여 보여 주는 폼을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>The custom <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> is embedded in the application's resource file.</source>
          <target state="translated">사용자 지정 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> 응용 프로그램의 리소스 파일에 포함 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>The example requires a cursor contained in a cursor file named <ph id="ph1">`MyCursor.cur`</ph>.</source>
          <target state="translated">이 예제에서는 명명 된 커서 파일에 포함 된 커서 <ph id="ph1">`MyCursor.cur`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>To compile this example using the command line, include the following flag: <ph id="ph1">`/res:MyCursor.Cur, CustomCursor.MyCursor.Cur`</ph></source>
          <target state="translated">명령줄을 사용 하 여이 예제를 컴파일하려면 다음 플래그를 포함 합니다. <ph id="ph1">`/res:MyCursor.Cur, CustomCursor.MyCursor.Cur`</ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>The following code example displays customer information in a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서 고객 정보를 표시 한 <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer.</source>
          <target state="translated">트리 루트 노드는 고객 이름이 표시 하 고 자식 트리 노드를 각 고객에 게 할당 된 주문 번호를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>In this example, 1,000 customers are displayed with 15 orders each.</source>
          <target state="translated">이 예제에서는 1000 명의 고객이 15 주문이 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>The repainting of the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> is suppressed by using the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.BeginUpdate%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.EndUpdate%2A&gt;</ph> methods, and a wait <ph id="ph4">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> is displayed while the <ph id="ph5">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> creates and paints the <ph id="ph6">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> objects.</source>
          <target state="translated">다시는 <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> 를 사용 하 여 표시 되지 않는지는 <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.BeginUpdate%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.EndUpdate%2A&gt;</ph> 메서드 및 대기 <ph id="ph4">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> 표시 됩니다는 동안는 <ph id="ph5">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> 만들고 그리는 <ph id="ph6">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>This example requires that you have a cursor file named <ph id="ph1">`MyWait.cur`</ph> in the application directory.</source>
          <target state="translated">이 예제를 실행 하려면 명명 된 커서 파일 <ph id="ph1">`MyWait.cur`</ph> 응용 프로그램 디렉터리에 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Cursor">
          <source>It also requires a <ph id="ph1">`Customer`</ph> object that can hold a collection of <ph id="ph2">`Order`</ph> objects, and that you have created an instance of a <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control on a <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">또한는 <ph id="ph1">`Customer`</ph> 개체의 컬렉션을 저장할 수 있는 <ph id="ph2">`Order`</ph> 개체 및의 인스턴스를 만든는 <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> 컨트롤에 <ph id="ph4">&lt;xref:System.Windows.Forms.Form&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Cursor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.#ctor(System.IntPtr)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> that represents the Windows handle of the cursor to create.</source>
          <target state="translated">만들 커서의 창 핸들을 나타내는 <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.#ctor(System.IntPtr)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> class from the specified Windows handle.</source>
          <target state="translated">지정된 창 핸들에서 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IntPtr)">
          <source>You must free the cursor handle when you are done with it.</source>
          <target state="translated">완료 되 면 커서 핸들을 해제 해야 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IntPtr)">
          <source>For more information about disposing of resources, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">리소스를 삭제 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IntPtr)">
          <source>The following code example creates a cursor from the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> cursor's <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Handle%2A&gt;</ph>, changes its position and clipping rectangle.</source>
          <target state="translated">커서를 만들고 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> 커서의 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Handle%2A&gt;</ph>, 해당 위치 및 클리핑 사각형을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IntPtr)">
          <source>The result is the cursor will move up and to the left 50 pixels from where it is when the code is executed.</source>
          <target state="translated">결과 커서 위치에서 코드를 실행할 때 왼쪽된 50 픽셀 위쪽과 이동 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IntPtr)">
          <source>Additionally, the cursor's clipping rectangle is changed to the bounds of the form (by default it is the user's whole screen).</source>
          <target state="translated">커서의 클리핑 사각형 폼의 경계도 변경 되는 또한 (기본적으로는 사용자의 전체 화면).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IntPtr)">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> to call this code when it is clicked.</source>
          <target state="translated">이 예제를 실행 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 를 클릭할 때이 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.#ctor(System.IntPtr)">
          <source><ph id="ph1">&lt;paramref name="handle" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="handle" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.#ctor(System.IO.Stream)">
          <source>The data stream to load the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>를 로드할 데이터 스트림입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> class from the specified data stream.</source>
          <target state="translated">지정된 데이터 스트림에서 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IO.Stream)">
          <source>The data stream specified by <ph id="ph1">`stream`</ph> must contain a cursor (.cur) file.</source>
          <target state="translated">지정한 데이터 스트림에 <ph id="ph1">`stream`</ph> 커서 (.cur) 파일을 포함 해야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IO.Stream)">
          <source>Animated cursors (.ani files) are not supported by the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> class.</source>
          <target state="translated">애니메이션된 커서 (.ani 파일)에서 지원 되지 않는 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IO.Stream)">
          <source>The following code example loads a cursor from a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> created by the <ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A&gt;</ph> method of an <ph id="ph3">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서 커서를 로드 한 <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> 에서 만든는 <ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IO.Stream)">
          <source>When the method is called, an <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> is displayed to the user and when a.</source>
          <target state="translated">메서드가 호출 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> 사용자에 게 표시 및 시기는 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.IO.Stream)">
          <source>CUR file is selected and the dialog closed, the file is opened and the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> returned is used to create a <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>.</source>
          <target state="translated">현재 파일을 선택 하 고 대화 상자 닫을 파일이 열릴 및 <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> 반환 만드는 데 사용 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.#ctor(System.String)">
          <source>The cursor file to load.</source>
          <target state="translated">로드할 커서 파일입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> class from the specified file.</source>
          <target state="translated">지정된 파일에서 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.String)">
          <source>The <ph id="ph1">`fileName`</ph> parameter must reference a standard cursor (.cur) file.</source>
          <target state="translated"><ph id="ph1">`fileName`</ph> 매개 변수는 표준 커서 (.cur) 파일을 참조 해야 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.String)">
          <source>Animated cursors (.ani files) are not supported by the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> class.</source>
          <target state="translated">애니메이션된 커서 (.ani 파일)에서 지원 되지 않는 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.String)">
          <source>The following code example displays customer information in a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서 고객 정보를 표시 한 <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.String)">
          <source>The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer.</source>
          <target state="translated">트리 루트 노드는 고객 이름이 표시 하 고 자식 트리 노드를 각 고객에 게 할당 된 주문 번호를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.String)">
          <source>In this example, 1,000 customers are displayed with 15 orders each.</source>
          <target state="translated">이 예제에서는 1000 명의 고객이 15 주문이 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.String)">
          <source>The repainting of the <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> is suppressed by using the <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.BeginUpdate%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.EndUpdate%2A&gt;</ph> methods, and a wait <ph id="ph4">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> is displayed while the <ph id="ph5">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> creates and paints the <ph id="ph6">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> objects.</source>
          <target state="translated">다시는 <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> 를 사용 하 여 표시 되지 않는지는 <ph id="ph2">&lt;xref:System.Windows.Forms.TreeView.BeginUpdate%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.TreeView.EndUpdate%2A&gt;</ph> 메서드 및 대기 <ph id="ph4">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> 표시 됩니다는 동안는 <ph id="ph5">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> 만들고 그리는 <ph id="ph6">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.String)">
          <source>This example requires that you have a <ph id="ph1">`Customer`</ph> object that can hold a collection of <ph id="ph2">`Order`</ph> objects.</source>
          <target state="translated">이 예제를 실행 하려면는 <ph id="ph1">`Customer`</ph> 개체의 컬렉션을 저장할 수 있는 <ph id="ph2">`Order`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.String)">
          <source>It also requires that you have created an instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> control on a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">인스턴스를 만든 위해서는 <ph id="ph1">&lt;xref:System.Windows.Forms.TreeView&gt;</ph> 컨트롤에 <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>The resource <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">리소스 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>The name of the resource.</source>
          <target state="translated">리소스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> class from the specified resource with the specified resource type.</source>
          <target state="translated">지정된 리소스 유형을 사용하여 지정된 리소스에서 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>The following is an example of how to embed a cursor as a resource within your application.</source>
          <target state="translated">다음은 응용 프로그램 내에서 자원으로 커서를 포함 하는 방법의 예입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>To embed the resource, reference the resource name followed by a comma, then its full assembly path.</source>
          <target state="translated">리소스를 포함 하려면 쉼표를 전체 어셈블리 경로 리소스 이름을 참조 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>See the Example section to learn how to load the cursor from the embedded resource.</source>
          <target state="translated">포함된 된 리소스에서 커서를 로드 하는 방법은 예제 섹션을 참조 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>The resource reference when compiling as well as when referencing it in code, is case sensitive for both the C# and Visual Basic compilers.</source>
          <target state="translated">리소스 참조를 컴파일할 때 뿐만 아니라 코드에서 참조 하는 경우는 대/소문자 구분 C# 및 Visual Basic 컴파일러에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>The following code example displays a form that demonstrates using a custom cursor by using the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">다음 코드 예제에서는 표시를 사용 하 여 사용자 지정 커서를 사용 하 여 보여 주는 폼에서 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>The custom <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> is embedded in the application's resource file.</source>
          <target state="translated">사용자 지정 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> 응용 프로그램의 리소스 파일에 포함 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>The example requires that you have a cursor contained in a cursor file named <ph id="ph1">`MyCursor.cur`</ph>.</source>
          <target state="translated">이 예제에서는 커서가 라는 커서 파일에 포함 되어 있다고 <ph id="ph1">`MyCursor.cur`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.#ctor(System.Type,System.String)">
          <source>To compile this example using the command line, include the following flag: <ph id="ph1">`/res:MyCursor.Cur, CustomCursor.MyCursor.Cur`</ph></source>
          <target state="translated">명령줄을 사용 하 여이 예제를 컴파일하려면 다음 플래그를 포함 합니다. <ph id="ph1">`/res:MyCursor.Cur, CustomCursor.MyCursor.Cur`</ph></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>Gets or sets the bounds that represent the clipping rectangle for the cursor.</source>
          <target state="translated">커서의 클리핑 사각형을 나타내는 범위를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the clipping rectangle for the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>, in screen coordinates.</source>
          <target state="translated">화면 좌표에서 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>에 대한 클리핑 사각형을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>A clipped cursor is allowed to move only within its clipping rectangle.</source>
          <target state="translated">클리핑된 커서 클리핑 사각형 내 에서만 이동할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>Generally, the system allows this only if the mouse is currently captured.</source>
          <target state="translated">일반적으로 시스템에서는 마우스 현재 캡처된 경우에이 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>If the cursor is not currently clipped, the resulting rectangle contains the dimensions of the entire screen.</source>
          <target state="translated">커서 잘리지 않습니다. 현재 결과 사각형 전체 화면 크기를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>The following code example creates a cursor from the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> cursor's <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Handle%2A&gt;</ph>, changes its position and clipping rectangle.</source>
          <target state="translated">커서를 만들고 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> 커서의 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Handle%2A&gt;</ph>, 해당 위치 및 클리핑 사각형을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>The result is the cursor will move up and to the left 50 pixels from where it is when the code is executed.</source>
          <target state="translated">결과 커서 위치에서 코드를 실행할 때 왼쪽된 50 픽셀 위쪽과 이동 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>Additionally, the cursor's clipping rectangle is changed to the bounds of the form (by default it is the user's whole screen).</source>
          <target state="translated">커서의 클리핑 사각형 폼의 경계도 변경 되는 또한 (기본적으로는 사용자의 전체 화면).</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> to call this code when it is clicked.</source>
          <target state="translated">이 예제를 실행 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 를 클릭할 때이 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>for all windows to set this property.</source>
          <target state="translated">이 속성을 설정 하는 모든 창입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Clip">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.CopyHandle">
          <source>Copies the handle of this <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>의 핸들을 복사합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.CopyHandle">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> that represents the cursor's handle.</source>
          <target state="translated">커서의 핸들을 나타내는 <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.CopyHandle">
          <source>The handle created as a result of calling this method must be disposed of when you are done with it because it will not be disposed of by the garbage collector.</source>
          <target state="translated">이 메서드를 호출 하 여 만들어진 핸들 됩니다 하지 수 삭제의 가비지 수집기에 의해 함께 완료 되 면 삭제 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Cursor.Current">
          <source>Gets or sets a cursor object that represents the mouse cursor.</source>
          <target state="translated">마우스 커서를 나타내는 커서 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Current">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> that represents the mouse cursor.</source>
          <target state="translated">마우스 커서를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Current">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the mouse cursor is not visible.</source>
          <target state="translated">마우스 커서가 표시되지 않으면 기본값이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Current">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> property changes the cursor currently displayed.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> 속성이 현재 표시 되는 커서를 변경 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Current">
          <source>The application may or may not continue to listen for mouse events.</source>
          <target state="translated">응용 프로그램 수도 있습니다 마우스 이벤트를 수신 대기를 계속할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Current">
          <source>To signal that the application should not respond to mouse events during a long-running operation, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.UseWaitCursor%2A&gt;</ph> property.</source>
          <target state="translated">장기 실행 작업 중 응용 프로그램 마우스 이벤트에 응답 하지 않도록 신호를 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.Application.UseWaitCursor%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Current">
          <source>In most cases, however, it's better to use a background thread to manage a long-running operation, and leave your user interface accessible to the user.</source>
          <target state="translated">그러나 대부분의 경우에서, 되기을 사용 하는 백그라운드 스레드가 장기 실행 작업을 관리 하 고 사용자 인터페이스를 사용자에 게 액세스할 수 있는 상태로 둡니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Current">
          <source>For more information on easily implementing a background task, see <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph>.</source>
          <target state="translated">백그라운드 작업을 쉽게 구현에 대 한 자세한 내용은 참조 하십시오. <ph id="ph1">&lt;xref:System.ComponentModel.BackgroundWorker&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Current">
          <source>for safe subwindows to set this property.</source>
          <target state="translated">이 속성을 설정 하려면 하위 창에서 안전 하 게 보호 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Current">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>에서 사용하는 모든 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Dispose%2A&gt;</ph> 사용을 마치면 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>를 사용할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> was occupying.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Dispose%2A&gt;</ph>에 대 한 모든 참조를 해제 해야는 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> 차지한 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Dispose%2A&gt;</ph>에 대한 마지막 참조를 해제하기 전에 반드시 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>를 호출하십시오.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector frees it.</source>
          <target state="translated">이렇게 하지 않으면 가비지 수집기가 될 때까지 사용 중인 리소스가 해제 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Dispose">
          <source>The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</source>
          <target state="translated">다음 코드 예제에서는 보통 크기의 늘이기 모드를 두 번 형식에 지정된 된 커서를 그립니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Dispose">
          <source>This example requires a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> to pass into the method when it is called.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> 를 호출할 때 메서드에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> surface on which to draw the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>를 그릴 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 표면입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the bounds of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>의 범위를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>Draws the cursor on the specified surface, within the specified bounds.</source>
          <target state="translated">지정된 범위 내의 지정된 표면에 커서를 그립니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The drawing command originates on the graphics surface represented by the <ph id="ph1">`g`</ph> parameter, but a <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> does not contain information about how to render a given image, so it passes the call to the <ph id="ph3">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>.</source>
          <target state="translated">그리기 명령은 나타내는 그래픽 표면에서 시작 된 <ph id="ph1">`g`</ph> 매개 변수를 하지만 <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> 에 대 한 호출을 전달 하도록 지정된 된 이미지를 렌더링 하는 방법에 대 한 정보를 포함 하지 않습니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Draw%2A&gt;</ph> method crops the image to the given dimensions and allows you to specify a <ph id="ph2">&lt;xref:System.Drawing.Rectangle&gt;</ph> within which to draw the <ph id="ph3">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Draw%2A&gt;</ph> 이미지 지정한 크기를 잘라내는 메서드와 지정할 수 있습니다는 <ph id="ph2">&lt;xref:System.Drawing.Rectangle&gt;</ph> 를 그릴는 <ph id="ph3">&lt;xref:System.Windows.Forms.Cursor&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>This method is typically used if you want to draw the cursor on a Graphics surface.</source>
          <target state="translated">이 메서드는 커서 그래픽 표면에 그리는 하려는 경우에 일반적으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>For example, you might have a dialog that allows the user to select cursors from a <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> control, or a group of <ph id="ph2">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> controls.</source>
          <target state="translated">예를 들어 사용자가 커서에서 선택할 수 있는 대화 상자를 할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> 컨트롤 또는 그룹을 <ph id="ph2">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</source>
          <target state="translated">다음 코드 예제에서는 보통 크기의 늘이기 모드를 두 번 형식에 지정된 된 커서를 그립니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> object to pass into the method when it is called.</source>
          <target state="translated">이 예제를 실행 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> 개체를 호출할 때 메서드에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.DrawStretched(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> surface on which to draw the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>를 그릴 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 표면입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.DrawStretched(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the bounds of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>의 범위를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.DrawStretched(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>Draws the cursor in a stretched format on the specified surface, within the specified bounds.</source>
          <target state="translated">지정된 범위 내의 지정된 표면에 늘이기 형식으로 커서를 그립니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.DrawStretched(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The drawing command originates on the graphics surface represented by the <ph id="ph1">`g`</ph> parameter, but a <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> object does not contain information about how to render a given image, so it passes the call to the <ph id="ph3">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> object.</source>
          <target state="translated">그리기 명령은 나타내는 그래픽 표면에서 시작 된 <ph id="ph1">`g`</ph> 매개 변수를 하지만 <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> 개체에 대 한 호출을 전달 하도록 지정된 된 이미지를 렌더링 하는 방법에 대 한 정보를 포함 하지 않습니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.DrawStretched(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.DrawStretched%2A&gt;</ph> method stretches the image to fill the specified <ph id="ph2">&lt;xref:System.Drawing.Rectangle&gt;</ph> when the cursor is drawn.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.DrawStretched%2A&gt;</ph> 를 채우도록 지정 된 이미지를 확장 하는 메서드 <ph id="ph2">&lt;xref:System.Drawing.Rectangle&gt;</ph> 커서를 그립니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.DrawStretched(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</source>
          <target state="translated">다음 코드 예제에서는 보통 크기의 늘이기 모드를 두 번 형식에 지정된 된 커서를 그립니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.DrawStretched(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> object to pass into the method when it is called.</source>
          <target state="translated">이 예제를 실행 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> 개체를 호출할 때 메서드에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> to compare.</source>
          <target state="translated">비교할 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.Equals(System.Object)">
          <source>Returns a value indicating whether this cursor is equal to the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated">커서가 지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>와 같은지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this cursor is equal to the specified <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 커서가 지정된 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>와 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Equals(System.Object)">
          <source>The following code example creates a cursor from the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> cursor's <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Handle%2A&gt;</ph>, changes its position and clipping rectangle.</source>
          <target state="translated">커서를 만들고 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> 커서의 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Handle%2A&gt;</ph>, 해당 위치 및 클리핑 사각형을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Equals(System.Object)">
          <source>The result is the cursor will move up and to the left 50 pixels from where it is when the code is executed.</source>
          <target state="translated">결과 커서 위치에서 코드를 실행할 때 왼쪽된 50 픽셀 위쪽과 이동 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Equals(System.Object)">
          <source>Additionally, the cursor's clipping rectangle is changed to the bounds of the form (by default it is the user's whole screen).</source>
          <target state="translated">커서의 클리핑 사각형 폼의 경계도 변경 되는 또한 (기본적으로는 사용자의 전체 화면).</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Equals(System.Object)">
          <source>This example requires a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> to call this code when it is clicked.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 를 클릭할 때이 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.GetHashCode">
          <source>Retrieves the hash code for the current <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>에 대한 해시 코드를 검색합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>에 대한 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Cursor.Handle">
          <source>Gets the handle of the cursor.</source>
          <target state="translated">커서의 핸들을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Handle">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> that represents the cursor's handle.</source>
          <target state="translated">커서의 핸들을 나타내는 <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Handle">
          <source>This is not a copy of the handle; do not dispose of it.</source>
          <target state="translated">핸들의 복사본이 아닙니다. 삭제 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Handle">
          <source>The following code example creates a cursor from the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> cursor's <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Handle%2A&gt;</ph>, changes its position and clipping rectangle.</source>
          <target state="translated">커서를 만들고 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> 커서의 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Handle%2A&gt;</ph>, 해당 위치 및 클리핑 사각형을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Handle">
          <source>The result is the cursor will move up and to the left 50 pixels from where it is when the code is executed.</source>
          <target state="translated">결과 커서 위치에서 코드를 실행할 때 왼쪽된 50 픽셀 위쪽과 이동 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Handle">
          <source>Additionally, the cursor's clipping rectangle is changed to the bounds of the form (by default it is the user's whole screen).</source>
          <target state="translated">커서의 클리핑 사각형 폼의 경계도 변경 되는 또한 (기본적으로는 사용자의 전체 화면).</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Handle">
          <source>This example requires a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> to call this code when it is clicked.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 를 클릭할 때이 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Cursor.Handle">
          <source>The handle value is <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph>.</source>
          <target state="translated">핸들 값이 <ph id="ph1">&lt;see cref="F:System.IntPtr.Zero" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.Hide">
          <source>Hides the cursor.</source>
          <target state="translated">커서를 숨깁니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Hide">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Show%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Hide%2A&gt;</ph> method calls must be balanced.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Show%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Hide%2A&gt;</ph> 메서드 호출 균형을 맞춰야 합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Hide">
          <source>For every call to the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Hide%2A&gt;</ph> method there must be a corresponding call to the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Show%2A&gt;</ph> method.</source>
          <target state="translated">호출할 때마다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Hide%2A&gt;</ph> 해당 호출 해야 하는 메서드는 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Show%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Hide">
          <source>The following code example hides the cursor when the mouse pointer enters the button's client area.</source>
          <target state="translated">다음 코드 예제에서는 마우스 포인터가 단추의 클라이언트 영역에 들어갈 때 커서를 숨깁니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Hide">
          <source>Likewise, when the mouse pointer leaves the button's client area, the cursor is shown again.</source>
          <target state="translated">마찬가지로, 마우스 포인터 단추의 클라이언트 영역을 벗어나면 커서 다시 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Hide">
          <source>This example requires a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> named <ph id="ph3">`myButton`</ph>.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 라는 <ph id="ph3">`myButton`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Hide">
          <source>for all windows call this method.</source>
          <target state="translated">모든 창에 대해이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Hide">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Cursor.HotSpot">
          <source>Gets the cursor hot spot.</source>
          <target state="translated">커서 핫 스폿을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.HotSpot">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> representing the cursor hot spot.</source>
          <target state="translated">커서 핫 스폿을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.HotSpot">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.HotSpot%2A&gt;</ph> is the <ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph> in the cursor that interacts with other elements on the screen.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.HotSpot%2A&gt;</ph> 는 <ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph> 화면에 다른 요소와 상호 작용 하는 커서의 합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.op_Equality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> to compare.</source>
          <target state="translated">@FSHO2@비교할 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.op_Equality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> to compare.</source>
          <target state="translated">@FSHO2@비교할 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.op_Equality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>Returns a value indicating whether two instances of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> class are equal.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> 클래스의 두 인스턴스가 같은지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.op_Equality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if two instances of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> class are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> 클래스의 두 인스턴스가 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.op_Equality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.op_Equality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</source>
          <target state="translated">다음 코드 예제에서는 보통 크기의 늘이기 모드를 두 번 형식에 지정된 된 커서를 그립니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.op_Equality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>This example requires a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> object to pass into the method when it is called.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> 개체를 호출할 때 메서드에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.op_Inequality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> to compare.</source>
          <target state="translated">@FSHO2@비교할 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.op_Inequality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> to compare.</source>
          <target state="translated">@FSHO2@비교할 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.op_Inequality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>Returns a value indicating whether two instances of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> class are not equal.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> 클래스의 두 인스턴스가 같지 않은지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.op_Inequality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if two instances of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> class are not equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> 클래스의 두 인스턴스가 같지 않으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.op_Inequality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">이 연산자는 해당 하는 방법은 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.op_Inequality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</source>
          <target state="translated">다음 코드 예제에서는 보통 크기의 늘이기 모드를 두 번 형식에 지정된 된 커서를 그립니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.op_Inequality(System.Windows.Forms.Cursor,System.Windows.Forms.Cursor)">
          <source>This example requires a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> to pass into the method when it is called.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> 를 호출할 때 메서드에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Cursor.Position">
          <source>Gets or sets the cursor's position.</source>
          <target state="translated">커서의 위치를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Position">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the cursor's position in screen coordinates.</source>
          <target state="translated">화면 좌표에서 커서의 위치를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Position">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Position%2A&gt;</ph> property is identical to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MousePosition%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Position%2A&gt;</ph> 속성은 동일는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MousePosition%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Position">
          <source>The following code example creates a cursor from the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> cursor's <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Handle%2A&gt;</ph>, changes its position and clipping rectangle.</source>
          <target state="translated">커서를 만들고 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Current%2A&gt;</ph> 커서의 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Handle%2A&gt;</ph>, 해당 위치 및 클리핑 사각형을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Position">
          <source>The result is the cursor will move up and to the left 50 pixels from where it is when the code is executed.</source>
          <target state="translated">결과 커서 위치에서 코드를 실행할 때 왼쪽된 50 픽셀 위쪽과 이동 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Position">
          <source>Additionally, the cursor's clipping rectangle is changed to the bounds of the form (by default it is the user's whole screen).</source>
          <target state="translated">커서의 클리핑 사각형 폼의 경계도 변경 되는 또한 (기본적으로는 사용자의 전체 화면).</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Position">
          <source>This example requires a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> to call this code when it is clicked.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 를 클릭할 때이 코드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.Show">
          <source>Displays the cursor.</source>
          <target state="translated">커서를 표시합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Show">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Show%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Hide%2A&gt;</ph> method calls must be balanced.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Show%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Hide%2A&gt;</ph> 메서드 호출 균형을 맞춰야 합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Show">
          <source>For every call to the <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Hide%2A&gt;</ph> method there must be a corresponding call to the <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Show%2A&gt;</ph> method.</source>
          <target state="translated">호출할 때마다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor.Hide%2A&gt;</ph> 해당 호출 해야 하는 메서드는 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor.Show%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Show">
          <source>The following code example hides the cursor when the mouse pointer enters the button's client area.</source>
          <target state="translated">다음 코드 예제에서는 마우스 포인터가 단추의 클라이언트 영역에 들어갈 때 커서를 숨깁니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Show">
          <source>Likewise, when the mouse pointer leaves the button's client area, the cursor is shown again.</source>
          <target state="translated">마찬가지로, 마우스 포인터 단추의 클라이언트 영역을 벗어나면 커서 다시 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Cursor.Show">
          <source>This example requires a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> named <ph id="ph3">`myButton`</ph>.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 라는 <ph id="ph3">`myButton`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Cursor.Size">
          <source>Gets the size of the cursor object.</source>
          <target state="translated">커서 개체의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Size">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the width and height of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>의 너비 및 높이를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Size">
          <source>The following code example draws the specified cursor on the form in its normal size, and in stretched mode, twice its size.</source>
          <target state="translated">다음 코드 예제에서는 보통 크기의 늘이기 모드를 두 번 형식에 지정된 된 커서를 그립니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Size">
          <source>This example requires a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> object to pass into the method when it is called.</source>
          <target state="translated">이 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> 개체를 호출할 때 메서드에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Serializes the object.</source>
          <target state="translated">개체를 serialize합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Cursor.Tag">
          <source>Gets or sets the object that contains data about the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>에 대한 데이터가 들어 있는 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Tag">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains data about the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>에 대한 데이터가 들어 있는 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Cursor.Tag">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.ToString">
          <source>Retrieves a human readable string representing this <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>를 나타내는 사람이 인식할 수 있는 문자열을 검색합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Cursor.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents this <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>를 나타내는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>