<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ButtonBase.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f2ab47ff0f1e3bc63542e0709a05a11ecc31904e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f2ab47ff0f1e3bc63542e0709a05a11ecc31904e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.ButtonBase">
          <source>Implements the basic functionality common to button controls.</source>
          <target state="translated">단추 컨트롤에 일반적으로 적용되는 기본 기능을 구현합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ButtonBase">
          <source>You do not typically inherit from <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase&gt;</ph>.</source>
          <target state="translated">일반적으로 상속 되지 않는 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ButtonBase">
          <source>To create your own button class, inherit from the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> class.</source>
          <target state="translated">사용자 지정 클래스를 만들려면에서 상속 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ButtonBase">
          <source>To have the derived button control display an image, set the <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> property or the <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> properties.</source>
          <target state="translated">파생된 단추 제어 이미지를 표시 하려면 설정는 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> 속성 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ButtonBase">
          <source>The image can be aligned on the button control by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.ImageAlign%2A&gt;</ph> property.</source>
          <target state="translated">이미지를 설정 하 여 단추 컨트롤에 정렬 될 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.ImageAlign%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ButtonBase">
          <source>Likewise, to align the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> displayed on the button control, set the <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.TextAlign%2A&gt;</ph> property.</source>
          <target state="translated">마찬가지로,에 맞게는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> 설정 단추 컨트롤에 표시 된 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.TextAlign%2A&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ButtonBase">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt;</ph> property determines the style and appearance of the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt;</ph> 속성 유형과 컨트롤의 모양을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ButtonBase">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType&gt;</ph>, the user's operating system determines the appearance of the control.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt;</ph> 속성이 <ph id="ph2">&lt;xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType&gt;</ph>, 사용자의 운영 체제에는 컨트롤의 모양을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ButtonBase" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ButtonBase" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.AutoEllipsis">
          <source>Gets or sets a value indicating whether the ellipsis character (...) appears at the right edge of the control, denoting that the control text extends beyond the specified length of the control.</source>
          <target state="translated">컨트롤의 오른쪽 가장자리에 줄임표 문자(...)가 표시되는지를 나타내는 값을 가져오거나 설정합니다. 줄임표 문자는 컨트롤 텍스트가 지정된 컨트롤의 길이를 초과하여 확장됨을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.AutoEllipsis">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the additional label text is to be indicated by an ellipsis; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">줄임표로 추가 레이블 텍스트가 있음을 나타내면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.AutoEllipsis">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.AutoEllipsis">
          <source>Set <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.AutoEllipsis%2A&gt;</ph> to <ph id="ph2">`true`</ph> to display text that extends beyond the width of the control when the user passes over the control with the mouse.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.AutoEllipsis%2A&gt;</ph> 를 <ph id="ph2">`true`</ph> 사용자 컨트롤을 마우스로 위로 이동할 때 컨트롤의 너비 보다 긴 텍스트를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.AutoEllipsis">
          <source>You must set the control's <ph id="ph1">`AutoSize`</ph> property to <ph id="ph2">`false`</ph> if you want <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.AutoEllipsis%2A&gt;</ph> to be <ph id="ph4">`true`</ph>.</source>
          <target state="translated">컨트롤의 설정 해야 <ph id="ph1">`AutoSize`</ph> 속성을 <ph id="ph2">`false`</ph> 하려는 경우 <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.AutoEllipsis%2A&gt;</ph> 되도록 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.AutoEllipsis">
          <source>If <ph id="ph1">`AutoSize`</ph> is <ph id="ph2">`true`</ph>, the control will grow to fit the text and an ellipsis will not appear.</source>
          <target state="translated">경우 <ph id="ph1">`AutoSize`</ph> 은 <ph id="ph2">`true`</ph>, 컨트롤이 텍스트에 맞게 늘어나는지 및 줄임표가 표시 되지 것입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.AutoSize">
          <source>Gets or sets a value that indicates whether the control resizes based on its contents.</source>
          <target state="translated">내용에 따라 컨트롤 크기가 조정되는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.AutoSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control automatically resizes based on its contents; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">내용에 따라 컨트롤 크기가 자동으로 조정되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.AutoSize">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.ButtonBase.AutoSizeChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.ButtonBase.AutoSize" /&gt;</ph> property changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.ButtonBase.AutoSize" /&gt;</ph> 속성 값이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ButtonBase.AutoSizeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ButtonBase.AutoSizeChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ButtonBase.AutoSizeChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.AutoSizeChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.AutoSizeChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ButtonBase.AutoSizeChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ButtonBase.AutoSizeChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ButtonBase.AutoSizeChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase&gt;</ph>와 같은 한 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ButtonBase.AutoSizeChanged">
          <source>Then name the instance <ph id="ph1">`ButtonBase1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.AutoSizeChanged&gt;</ph> event.</source>
          <target state="translated">다음 인스턴스 이름을 <ph id="ph1">`ButtonBase1`</ph> 이벤트 처리기가 연결 확인 하 고는 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.AutoSizeChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.BackColor">
          <source>Gets or sets the background color of the control.</source>
          <target state="translated">컨트롤의 배경색을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.BackColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> value representing the background color.</source>
          <target state="translated">배경색을 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.CreateAccessibilityInstance">
          <source>Creates a new accessibility object for the control.</source>
          <target state="translated">컨트롤의 액세스 가능성 개체를 새로 만듭니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.CreateAccessibilityInstance">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph> for the control.</source>
          <target state="translated">컨트롤의 새로운 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AccessibleObject" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.CreateParams">
          <source>Gets the required creation parameters when the control handle is created.</source>
          <target state="translated">컨트롤 핸들이 만들어지는 경우 필요한 작성 매개 변수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.CreateParams">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> that contains the required creation parameters when the handle to the control is created.</source>
          <target state="translated">컨트롤 핸들을 만들 때 필요한 작성 매개 변수가 포함된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.CreateParams">
          <source>for operating with unmanaged code.</source>
          <target state="translated">에 비관리 코드와 작동 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.CreateParams">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.DefaultImeMode">
          <source>Gets the default Input Method Editor (IME) mode supported by this control.</source>
          <target state="translated">이 컨트롤에서 지원하는 기본 IME(입력기) 모드를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.DefaultImeMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.DefaultImeMode">
          <source>As implemented in the <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase&gt;</ph> class, this property always returns the <ph id="ph2">`Disable`</ph> value of <ph id="ph3">&lt;xref:System.Windows.Forms.ImeMode?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">구현 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase&gt;</ph> 클래스,이 속성은 항상 반환는 <ph id="ph2">`Disable`</ph> 값 <ph id="ph3">&lt;xref:System.Windows.Forms.ImeMode?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.DefaultSize">
          <source>Gets the default size of the control.</source>
          <target state="translated">컨트롤의 기본 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.DefaultSize">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> of the control.</source>
          <target state="translated">컨트롤의 기본 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ButtonBase" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ButtonBase" /&gt;</ph>에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 public <ph id="ph1">`Dispose`</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 보호 된 호출 <ph id="ph2">`Dispose(Boolean)`</ph> 메서드는 <ph id="ph3">`disposing`</ph> 매개 변수 설정 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 호출 <ph id="ph2">`Dispose`</ph> 와 <ph id="ph3">`disposing`</ph> 로 설정 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase&gt;</ph> references.</source>
          <target state="translated">경우는 <ph id="ph1">`disposing`</ph> 매개 변수가 true 이면이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase&gt;</ph> 참조 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드는 참조되는 각 개체의 <ph id="ph1">`Dispose`</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>는 다른 개체에서 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">구현 하는 방법에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>Dispose 메서드를 구현<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Finalize 메서드를 재정의<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.FlatAppearance">
          <source>Gets the appearance of the border and the colors used to indicate check state and mouse state.</source>
          <target state="translated">선택 상태 및 마우스 상태를 나타내는 데 사용되는 색 및 테두리 모양을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.FlatAppearance">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FlatButtonAppearance" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.FlatButtonAppearance" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.FlatAppearance">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.FlatAppearance%2A&gt;</ph> property only with <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls whose <ph id="ph3">&lt;xref:System.Windows.Forms.FlatStyle&gt;</ph> is <ph id="ph4">&lt;xref:System.Windows.Forms.FlatStyle.Flat&gt;</ph>.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.FlatAppearance%2A&gt;</ph> 속성 에서만 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 컨트롤 <ph id="ph3">&lt;xref:System.Windows.Forms.FlatStyle&gt;</ph> 은 <ph id="ph4">&lt;xref:System.Windows.Forms.FlatStyle.Flat&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.FlatStyle">
          <source>Gets or sets the flat style appearance of the button control.</source>
          <target state="translated">단추 컨트롤의 평면 스타일 모양을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.FlatStyle">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FlatStyle" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.FlatStyle" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.FlatStyle">
          <source>The default value is <ph id="ph1">&lt;see langword="Standard" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="Standard" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.FlatStyle">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> classes is set to <ph id="ph4">`System`</ph>, the control is drawn by the user's operating system and the check alignment is based upon the <ph id="ph5">`CheckAlign`</ph> and <ph id="ph6">&lt;xref:System.Windows.Forms.ButtonBase.TextAlign%2A&gt;</ph> property values.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Windows.Forms.RadioButton&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> 클래스로 설정 되어 <ph id="ph4">`System`</ph>, 운영 체제에서 컨트롤을 그리는 확인란 맞춤에 기반을 두고는 <ph id="ph5">`CheckAlign`</ph> 및 <ph id="ph6">&lt;xref:System.Windows.Forms.ButtonBase.TextAlign%2A&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.FlatStyle">
          <source>The <ph id="ph1">`CheckAlign`</ph> property value is not changed, but the appearance of the control can be affected.</source>
          <target state="translated"><ph id="ph1">`CheckAlign`</ph> 속성 값은 변경 되지 않지만 컨트롤의 모양에 영향이 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.FlatStyle">
          <source>The check box is horizontally aligned with either the left or right edge of the control (a left or center alignment appears left aligned, right remains unchanged), and vertically aligned the same as the descriptive text.</source>
          <target state="translated">확인란 (왼쪽 또는 가운데 맞춤은 왼쪽 맞춤, 오른쪽 변경 되지 않은) 컨트롤의 왼쪽 또는 오른쪽 가장자리에 맞춰 가로로 정렬 되 고 세로로 정렬 된 설명 텍스트와 동일 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.FlatStyle">
          <source>For example, if you have a <ph id="ph1">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> control with a <ph id="ph2">`CheckAlign`</ph> property value of <ph id="ph3">`ContentAlignment`</ph>.</source>
          <target state="translated">예를 들어 한 <ph id="ph1">&lt;xref:System.Windows.Forms.CheckBox&gt;</ph> 보호로 <ph id="ph2">`CheckAlign`</ph> 속성 값이 <ph id="ph3">`ContentAlignment`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.FlatStyle">
          <source><ph id="ph1">`MiddleCenter`</ph>, a <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.TextAlign%2A&gt;</ph> property value of <ph id="ph3">`ContentAlignment.TopRight`</ph>, and the <ph id="ph4">&lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt;</ph> property value is set to <ph id="ph5">`System`</ph>, the check box alignment will appear to be <ph id="ph6">`ContentAlignment.TopLeft`</ph> while the text alignment remains unchanged.</source>
          <target state="translated"><ph id="ph1">`MiddleCenter`</ph>는 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.TextAlign%2A&gt;</ph> 속성 값이 <ph id="ph3">`ContentAlignment.TopRight`</ph>, 및 <ph id="ph4">&lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt;</ph> 속성 값으로 설정 됩니다 <ph id="ph5">`System`</ph>, 확인란 맞춤 인 것으로 표시 <ph id="ph6">`ContentAlignment.TopLeft`</ph> 텍스트 맞춤을 변경 되지 않은 상태로 유지 하면서 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.FlatStyle">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt;</ph> property is set to <ph id="ph2">`FlatStyle.System`</ph>, any images assigned to the <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> property are not displayed.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt;</ph> 속성이 <ph id="ph2">`FlatStyle.System`</ph>에 지정 된 이미지가 <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> 속성은 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.FlatStyle">
          <source>The following code example uses the derived class, <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> and sets some of its common properties.</source>
          <target state="translated">다음 코드 예제에서는 파생된 클래스를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 공통 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.FlatStyle">
          <source>The result will be a flat button with text on the left and an image on the right.</source>
          <target state="translated">결과 텍스트 왼쪽 및 오른쪽에 있는 이미지 플랫 단추 됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.FlatStyle">
          <source>This code requires that you have a bitmap image named <ph id="ph1">`MyBitMap.bmp`</ph> stored in the <ph id="ph2">`C:\Graphics`</ph> directory, and that a reference to the <ph id="ph3">&lt;xref:System.Drawing?displayProperty=nameWithType&gt;</ph> namespace is included.</source>
          <target state="translated">이 코드를 실행 하려면 명명 된 비트맵 이미지 있는지 <ph id="ph1">`MyBitMap.bmp`</ph> 에 저장 된는 <ph id="ph2">`C:\Graphics`</ph> 디렉터리에 대 한 참조는 <ph id="ph3">&lt;xref:System.Drawing?displayProperty=nameWithType&gt;</ph> 네임 스페이스는 포함 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.FlatStyle">
          <source>The value assigned is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FlatStyle" /&gt;</ph> values.</source>
          <target state="translated">할당된 값이 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FlatStyle" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.GetPreferredSize(System.Drawing.Size)">
          <source>The custom-sized area for a control.</source>
          <target state="translated">컨트롤의 사용자 지정 크기 영역입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.GetPreferredSize(System.Drawing.Size)">
          <source>Retrieves the size of a rectangular area into which a control can be fitted.</source>
          <target state="translated">컨트롤이 들어갈 수 있는 사각형 영역의 크기를 검색합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.GetPreferredSize(System.Drawing.Size)">
          <source>An ordered pair of type <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> representing the width and height of a rectangle.</source>
          <target state="translated">사각형의 너비와 높이를 나타내는 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> 형식의 정렬된 쌍입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.GetPreferredSize(System.Drawing.Size)">
          <source>The behavior of <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.GetPreferredSize%2A&gt;</ph> differs by control.</source>
          <target state="translated">동작은 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.GetPreferredSize%2A&gt;</ph> 컨트롤에 따라 다릅니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.GetPreferredSize(System.Drawing.Size)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.LayoutEngine%2A&gt;</ph> might be unable to assign the returned size to the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.LayoutEngine%2A&gt;</ph> 컨트롤에 반환 되는 크기를 할당할 수 수 있습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.GetPreferredSize(System.Drawing.Size)">
          <source>You can return a size larger than the constraints indicated in the <ph id="ph1">`proposedSize`</ph> parameter, but <ph id="ph2">`proposedSize`</ph> should decrease as the constraint decreases.</source>
          <target state="translated">에 표시 된 제약 조건 보다 큰 크기를 반환할 수 있습니다는 <ph id="ph1">`proposedSize`</ph> 매개 변수를 있지만 <ph id="ph2">`proposedSize`</ph> 감소 하는 제약 조건으로 감소 해야 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.GetPreferredSize(System.Drawing.Size)">
          <source>For example, <ph id="ph1">`GetPreferredSize(new Size(100, 0))`</ph> should not be wider than <ph id="ph2">`GetPreferredSize(new Size(200, 0))`</ph>.</source>
          <target state="translated">예를 들어 <ph id="ph1">`GetPreferredSize(new Size(100, 0))`</ph> 보다 넓은 되어서는 안 <ph id="ph2">`GetPreferredSize(new Size(200, 0))`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.GetPreferredSize(System.Drawing.Size)">
          <source>The exception is a <ph id="ph1">`proposedSize`</ph> of 0 or <ph id="ph2">`Size.Empty`</ph>, which are defined as unconstrained.</source>
          <target state="translated">예외는는 <ph id="ph1">`proposedSize`</ph> 0 또는 <ph id="ph2">`Size.Empty`</ph>, 제약 없이로 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.Image">
          <source>Gets or sets the image that is displayed on a button control.</source>
          <target state="translated">단추 컨트롤에 표시되는 이미지를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.Image">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> displayed on the button control.</source>
          <target state="translated">단추 컨트롤에 표시되는 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.Image">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.Image">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> property is set, the <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> property will be set to <ph id="ph3">`null`</ph>, and the <ph id="ph4">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> property will be set to its default, -1.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> 속성이 설정 되어는 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> 속성으로 설정 됩니다 <ph id="ph3">`null`</ph>, 및 <ph id="ph4">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> 속성 기본값-1로 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.Image">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt;</ph> property is set to <ph id="ph2">`FlatStyle.System`</ph>, any images assigned to the <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> property are not displayed.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.FlatStyle%2A&gt;</ph> 속성이 <ph id="ph2">`FlatStyle.System`</ph>에 지정 된 이미지가 <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> 속성은 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.Image">
          <source>The following code example uses the derived class, <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> and sets some of its common properties.</source>
          <target state="translated">다음 코드 예제에서는 파생된 클래스를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 공통 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.Image">
          <source>The result will be a flat button with text on the left and an image on the right.</source>
          <target state="translated">결과 텍스트 왼쪽 및 오른쪽에 있는 이미지 플랫 단추 됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.Image">
          <source>This code requires that you have a bitmap image named <ph id="ph1">`MyBitMap.bmp`</ph> stored in the <ph id="ph2">`C:\Graphics`</ph> directory, and that a reference to the <ph id="ph3">&lt;xref:System.Drawing?displayProperty=nameWithType&gt;</ph> namespace is included.</source>
          <target state="translated">이 코드를 실행 하려면 명명 된 비트맵 이미지 있는지 <ph id="ph1">`MyBitMap.bmp`</ph> 에 저장 된는 <ph id="ph2">`C:\Graphics`</ph> 디렉터리에 대 한 참조는 <ph id="ph3">&lt;xref:System.Drawing?displayProperty=nameWithType&gt;</ph> 네임 스페이스는 포함 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.ImageAlign">
          <source>Gets or sets the alignment of the image on the button control.</source>
          <target state="translated">단추 컨트롤의 이미지 맞춤을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageAlign">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageAlign">
          <source>The default value is <ph id="ph1">&lt;see langword="MiddleCenter" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="MiddleCenter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageAlign">
          <source>The following code example uses the derived class, <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> and sets some of its common properties.</source>
          <target state="translated">다음 코드 예제에서는 파생된 클래스를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 공통 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageAlign">
          <source>The result will be a flat button with text on the left and an image on the right.</source>
          <target state="translated">결과 텍스트 왼쪽 및 오른쪽에 있는 이미지 플랫 단추 됩니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageAlign">
          <source>This code requires that you have a bitmap image named <ph id="ph1">`MyBitMap.bmp`</ph> stored in the <ph id="ph2">`C:\Graphics`</ph> directory, and that a reference to the <ph id="ph3">&lt;xref:System.Drawing?displayProperty=nameWithType&gt;</ph> namespace is included.</source>
          <target state="translated">이 코드를 실행 하려면 명명 된 비트맵 이미지 있는지 <ph id="ph1">`MyBitMap.bmp`</ph> 에 저장 된는 <ph id="ph2">`C:\Graphics`</ph> 디렉터리에 대 한 참조는 <ph id="ph3">&lt;xref:System.Drawing?displayProperty=nameWithType&gt;</ph> 네임 스페이스는 포함 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.ImageAlign">
          <source>The value assigned is not one of the <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> values.</source>
          <target state="translated">할당된 값이 <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.ImageIndex">
          <source>Gets or sets the image list index value of the image displayed on the button control.</source>
          <target state="translated">단추 컨트롤에 표시된 이미지의 이미지 목록 인덱스 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageIndex">
          <source>A zero-based index, which represents the image position in an <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageList" /&gt;</ph>.</source>
          <target state="translated">0부터 시작하는 인덱스이며, <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageList" /&gt;</ph>에서 이미지의 위치를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageIndex">
          <source>The default is -1.</source>
          <target state="translated">기본값은 -1입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageIndex">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> properties are set, the <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> property is set to its default value, <ph id="ph4">`null`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> 속성이 설정 되는 <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> 속성이 해당 기본값으로 설정 되어 <ph id="ph4">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageIndex">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> property value is changed to <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> property returns its default value, -1.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> 속성 값 변경 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> 속성 기본 값-1을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageIndex">
          <source>However, the assigned <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> value is retained internally and used when another <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> object is assigned to the <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> property.</source>
          <target state="translated">그러나 할당 된 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> 값을 내부적으로 유지 하 고 다른 때 사용 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> 개체에 할당 된 <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageIndex">
          <source>If the new <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> assigned to the <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> property has an <ph id="ph3">&lt;xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A?displayProperty=nameWithType&gt;</ph> property value that is less than or equal to the value assigned to the <ph id="ph4">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> property minus one (to account for the collection being a zero-based index), the <ph id="ph5">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> property value is adjusted to one less than the <ph id="ph6">&lt;xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A&gt;</ph> property value.</source>
          <target state="translated">하는 경우 새 <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> 에 할당 된는 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> 속성에는 <ph id="ph3">&lt;xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A?displayProperty=nameWithType&gt;</ph> 속성 값에 할당 된 값 보다 작지는 <ph id="ph4">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> (인덱스 0부터 시작 되는 컬렉션에 대 한 계정)에 1을 뺀 값 속성에서 <ph id="ph5">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph>하나에 속성 값은 조정 보다 작은 <ph id="ph6">&lt;xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageIndex">
          <source>For example, consider a button control whose <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> has three images and whose <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> property is set to 2.</source>
          <target state="translated">예를 들어 단추 컨트롤 <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> 에 세 개의 이미지와 해당 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> 속성이 2로 설정 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageIndex">
          <source>If a new <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> that has only two images is assigned to the button, the <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> value changes to 1.</source>
          <target state="translated">새 <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> 에 있는 두 개의 이미지가 있는 단추에 할당 된는 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> 값이 1로 변경 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageIndex">
          <source>The following code example uses the derived class, <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에서는 파생된 클래스를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 설정 하 고는 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageIndex">
          <source>This code requires that an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> has been created and a minimum of one <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> has been assigned to it.</source>
          <target state="translated">이 코드를 실행 하려면 프로그램 <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> 를 만든 후 하나 이상 <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> 에 할당 되었습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageIndex">
          <source>This code also requires that you have a bitmap image named <ph id="ph1">`MyBitMap.bmp`</ph> stored in the <ph id="ph2">`C:\Graphics`</ph> directory.</source>
          <target state="translated">이 코드는 또한 라는 비트맵 이미지가 있어야 <ph id="ph1">`MyBitMap.bmp`</ph> 에 저장 된 <ph id="ph2">`C:\Graphics`</ph> 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.ImageIndex">
          <source>The assigned value is less than the lower bounds of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.ButtonBase.ImageIndex" /&gt;</ph>.</source>
          <target state="translated">할당된 값이 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.ButtonBase.ImageIndex" /&gt;</ph>의 하한값보다 작은 경우</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.ImageKey">
          <source>Gets or sets the key accessor for the image in the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.ButtonBase.ImageList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.ButtonBase.ImageList" /&gt;</ph>의 이미지에 대한 키 접근자를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageKey">
          <source>A string representing the key of the image.</source>
          <target state="translated">해당 이미지의 키를 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageKey">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.ImageKey%2A&gt;</ph> property specifies the image from the image list to display on the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.ImageKey%2A&gt;</ph> 속성 컨트롤에 표시할 이미지 목록에서 이미지를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.ImageList">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageList" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> displayed on a button control.</source>
          <target state="translated">단추 컨트롤에 표시된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageList" /&gt;</ph>를 포함하는 <ph id="ph2">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageList" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageList">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageList">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> property is set, the <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> property is set <ph id="ph4">`null`</ph>, which is its default value.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> 속성이 설정 되어는 <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.Image%2A&gt;</ph> 속성이 설정 되어 <ph id="ph4">`null`</ph>, 해당 기본값은입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageList">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> property value is changed to <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> property returns its default value, -1.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> 속성 값 변경 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> 속성 기본 값-1을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageList">
          <source>However, the assigned <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> value is retained internally and used when another <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> is assigned to the <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> property.</source>
          <target state="translated">그러나 할당 된 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> 값을 내부적으로 유지 하 고 다른 때 사용 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> 에 할당 되는 <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageList">
          <source>If the new <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> assigned to the <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> property has an <ph id="ph3">&lt;xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A?displayProperty=nameWithType&gt;</ph> property value that is less than or equal to the value assigned to the <ph id="ph4">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> property minus one (because the collection is a zero-based index), the <ph id="ph5">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> property value is adjusted to one less than the <ph id="ph6">&lt;xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A&gt;</ph> property value.</source>
          <target state="translated">경우 새 <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> 에 할당 된는 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> 속성에는 <ph id="ph3">&lt;xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A?displayProperty=nameWithType&gt;</ph> 속성 값에 할당 된 값 보다 작지는 <ph id="ph4">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> 1을 뺀 값 속성 (컬렉션이 인덱스 0부터 시작) 이므로, <ph id="ph5">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> 속성 값은 하나에 조정 됩니다 보다 작은 <ph id="ph6">&lt;xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageList">
          <source>For example, consider a button control whose <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> has three images and whose <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> property is set to 2.</source>
          <target state="translated">예를 들어 단추 컨트롤 <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> 에 세 개의 이미지와 해당 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> 속성이 2로 설정 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageList">
          <source>If a new <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> that has only two images is assigned to the button, the <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> value changes to 1.</source>
          <target state="translated">새 <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> 에 있는 두 개의 이미지가 있는 단추에 할당 된는 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> 값이 1로 변경 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageList">
          <source>The following code example uses the derived class, <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> properties.</source>
          <target state="translated">다음 코드 예제에서는 파생된 클래스를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 설정 하 고는 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.ImageList%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.ImageIndex%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageList">
          <source>This code requires that an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> has been created and a minimum of one <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> has been assigned to it.</source>
          <target state="translated">이 코드를 실행 하려면 프로그램 <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> 를 만든 후 하나 이상 <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph> 에 할당 되었습니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImageList">
          <source>This code also requires that you have a bitmap image named <ph id="ph1">`MyBitMap.bmp`</ph> stored in the <ph id="ph2">`C:\Graphics`</ph> directory.</source>
          <target state="translated">이 코드는 또한 라는 비트맵 이미지가 있어야 <ph id="ph1">`MyBitMap.bmp`</ph> 에 저장 된 <ph id="ph2">`C:\Graphics`</ph> 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.ImeMode">
          <source>Gets or sets the Input Method Editor (IME) mode supported by this control.</source>
          <target state="translated">이 컨트롤에서 지원하는 IME(입력기) 모드를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.ImeMode">
          <source>This property is not relevant for this class.</source>
          <target state="translated">이 속성은 이 클래스와 관련이 없습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImeMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.ImeMode">
          <source>This property is not relevant for this class.</source>
          <target state="translated">이 속성은 이 클래스와 관련이 없습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.ButtonBase.ImeModeChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.ButtonBase.ImeMode" /&gt;</ph> property is changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.ButtonBase.ImeMode" /&gt;</ph> 속성이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.ButtonBase.ImeModeChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">이 이벤트는 이 클래스와 관련이 없습니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ButtonBase.ImeModeChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">이 이벤트는 이 클래스와 관련이 없습니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.IsDefault">
          <source>Gets or sets a value indicating whether the button control is the default button.</source>
          <target state="translated">단추 컨트롤이 기본 단추인지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.IsDefault">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the button control is the default button; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">단추 컨트롤이 기본 단추이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.IsDefault">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.IsDefault%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the button is the default button for the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.IsDefault%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph>, 단추에 대 한 기본 단추로 사용 되는 <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.IsDefault">
          <source>This means that the button is clicked when the ENTER key is pressed if no other button or any other control that captures the ENTER key has focus.</source>
          <target state="translated">이 의미 하는 경우 단추가 없는 ENTER 키를 누르면 또는 ENTER 키를 캡처하는 다른 컨트롤에 포커스가 때 단추를 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.IsDefault">
          <source>To specify the default button of a form, set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph> property of the form to the desired button.</source>
          <target state="translated">폼의 기본 단추를 지정 하려면 설정는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph> 원하는 단추에 폼의 속성입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnEnabledChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnEnabledChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GotFocus" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.GotFocus" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnGotFocus%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnGotFocus%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>Do not call <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A&gt;</ph> if the button is disabled (this includes calls to the base class's <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A&gt;</ph> method when you override <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A&gt;</ph> in a derived class).</source>
          <target state="translated">호출 하지 마십시오 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A&gt;</ph> 단추가 비활성화 되는 경우 (여기에 기본 클래스에 대 한 호출 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A&gt;</ph> 메서드를 재정의할 때 <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A&gt;</ph> 파생된 클래스에서).</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>When disabling the button in an override of <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A&gt;</ph>, call the base class's <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A&gt;</ph> method before disabling the button, or do not call it at all.</source>
          <target state="translated">재정의에서 단추를 사용 하지 않을 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A&gt;</ph>, 기본 클래스를 호출 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A&gt;</ph> 단추를 비활성화 하기 전에 메서드 또는 전혀 호출 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnKeyUp%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnKeyUp%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnLostFocus%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnLostFocus%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>Do not call <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A&gt;</ph> if the button is disabled (this includes calls to the base class's <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A&gt;</ph> method when you override <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A&gt;</ph> in a derived class).</source>
          <target state="translated">호출 하지 마십시오 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A&gt;</ph> 단추가 비활성화 되는 경우 (여기에 기본 클래스에 대 한 호출 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A&gt;</ph> 메서드를 재정의할 때 <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A&gt;</ph> 파생된 클래스에서).</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>When disabling the button in an override of <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A&gt;</ph>, call the base class's <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A&gt;</ph> method before disabling the button, or do not call it at all.</source>
          <target state="translated">재정의에서 단추를 사용 하지 않을 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A&gt;</ph>, 기본 클래스를 호출 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A&gt;</ph> 단추를 비활성화 하기 전에 메서드 또는 전혀 호출 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)">
          <source>Do not call <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A&gt;</ph> if the button is disabled (this includes call to the base class's <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A&gt;</ph> method when you override <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A&gt;</ph> in a derived class).</source>
          <target state="translated">호출 하지 마십시오 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A&gt;</ph> 단추가 비활성화 되는 경우 (여기에 기본 클래스를 호출 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A&gt;</ph> 메서드를 재정의할 때 <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A&gt;</ph> 파생된 클래스에서).</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)">
          <source>When disabling the button in an override of <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A&gt;</ph>, call the base class's <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A&gt;</ph> method before disabling the button, or do not call it at all.</source>
          <target state="translated">재정의에서 단추를 사용 하지 않을 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A&gt;</ph>, 기본 클래스를 호출 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A&gt;</ph> 단추를 비활성화 하기 전에 메서드 또는 전혀 호출 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseLeave%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>Do not call <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A&gt;</ph> if the button is disabled (this includes calls to the base class's <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A&gt;</ph> method when you override <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A&gt;</ph> in a derived class).</source>
          <target state="translated">호출 하지 마십시오 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A&gt;</ph> 단추가 비활성화 되는 경우 (여기에 기본 클래스에 대 한 호출 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A&gt;</ph> 메서드를 재정의할 때 <ph id="ph3">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A&gt;</ph> 파생된 클래스에서).</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>When disabling the button in an override of <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A&gt;</ph>, call the base class's <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A&gt;</ph> method before disabling the button, or do not call it at all.</source>
          <target state="translated">재정의에서 단추를 사용 하지 않을 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A&gt;</ph>, 기본 클래스를 호출 <ph id="ph2">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A&gt;</ph> 단추를 비활성화 하기 전에 메서드 또는 전혀 호출 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MouseEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseUp%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnMouseUp%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnPaint%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.ButtonBase.OnPaint%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnParentChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnParentChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ParentChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.ParentChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnTextChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnTextChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnVisibleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> object that contains the event data.</source>
          <target state="translated">이벤트 데이터가 포함된 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.OnVisibleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.ResetFlagsandPaint">
          <source>Resets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph> control to the state before it is pressed and redraws it.</source>
          <target state="translated">누르기 전 상태로 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph> 컨트롤을 다시 설정한 다음 다시 그립니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.Text">
          <source>Gets or sets the text associated with this control.</source>
          <target state="translated">이 컨트롤과 관련된 텍스트를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.Text">
          <source>The text associated with this control.</source>
          <target state="translated">이 컨트롤과 관련된 텍스트입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.TextAlign">
          <source>Gets or sets the alignment of the text on the button control.</source>
          <target state="translated">단추 컨트롤의 텍스트 맞춤을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.TextAlign">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.TextAlign">
          <source>The default is <ph id="ph1">&lt;see langword="MiddleCenter" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="MiddleCenter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.TextAlign">
          <source>The following code example uses the derived class, <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> and sets some of its common properties.</source>
          <target state="translated">다음 코드 예제에서는 파생된 클래스를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> 공통 속성 중 일부를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.TextAlign">
          <source>The result will be a flat button with text on the left and an image on the right.</source>
          <target state="translated">결과 텍스트 왼쪽 및 오른쪽에 있는 이미지 플랫 단추 됩니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.TextAlign">
          <source>This code requires that you have a bitmap image named <ph id="ph1">`MyBitMap.bmp`</ph> stored in the <ph id="ph2">`C:\Graphics`</ph> directory, and that a reference to the <ph id="ph3">&lt;xref:System.Drawing?displayProperty=nameWithType&gt;</ph> namespace is included.</source>
          <target state="translated">이 코드를 실행 하려면 명명 된 비트맵 이미지 있는지 <ph id="ph1">`MyBitMap.bmp`</ph> 에 저장 된는 <ph id="ph2">`C:\Graphics`</ph> 디렉터리에 대 한 참조는 <ph id="ph3">&lt;xref:System.Drawing?displayProperty=nameWithType&gt;</ph> 네임 스페이스는 포함 합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.TextAlign">
          <source>The value assigned is not one of the <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> values.</source>
          <target state="translated">할당된 값이 <ph id="ph1">&lt;see cref="T:System.Drawing.ContentAlignment" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.TextImageRelation">
          <source>Gets or sets the position of text and image relative to each other.</source>
          <target state="translated">텍스트와 이미지의 서로 상대적인 위치를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.TextImageRelation">
          <source>One of the values of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextImageRelation" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextImageRelation" /&gt;</ph>의 다음 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.TextImageRelation">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.TextImageRelation.Overlay" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.TextImageRelation.Overlay" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.TextImageRelation">
          <source>The value is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextImageRelation" /&gt;</ph> values.</source>
          <target state="translated">값이 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextImageRelation" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.UseCompatibleTextRendering">
          <source>Gets or sets a value that determines whether to use the <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> class (<ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>) or the <ph id="ph3">&lt;see cref="T:System.Windows.Forms.TextRenderer" /&gt;</ph> class (<ph id="ph4">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph>) to render text.</source>
          <target state="translated">텍스트 렌더링에 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 클래스(<ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>)를 사용할지 아니면 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.TextRenderer" /&gt;</ph> 클래스(<ph id="ph4">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph>)를 사용할지를 결정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.UseCompatibleTextRendering">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> class should be used to perform text rendering for compatibility with versions 1.0 and 1.1.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 경우는 <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 버전 1.0 및 1.1 호환을 위해 텍스트 렌더링을 수행 하려면 클래스를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.UseCompatibleTextRendering">
          <source>of the .NET Framework; otherwise, <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">.NET framework; 그렇지 않으면 <ph id="ph1">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.UseCompatibleTextRendering">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.UseCompatibleTextRendering">
          <source>The <ph id="ph1">`UseCompatibleTextRendering`</ph> property is intended to provide visual compatibility between Windows Forms controls that render text using the <ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> class and <ph id="ph3">[!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)]</ph> and <ph id="ph4">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph> applications that perform custom text rendering using the <ph id="ph5">&lt;xref:System.Drawing.Graphics&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">`UseCompatibleTextRendering`</ph> 속성은 해당 렌더링 텍스트를 사용 하 여 Windows Forms 컨트롤 간의 시각적 호환성을 제공 하기 위한는 <ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> 클래스 및 <ph id="ph3">[!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)]</ph> 및 <ph id="ph4">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph> 는 를사용하여사용자지정텍스트렌더링을수행하는응용프로그램<ph id="ph5">&lt;xref:System.Drawing.Graphics&gt;</ph>클래스입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.UseCompatibleTextRendering">
          <source>In most cases, if your application is not being upgraded from <ph id="ph1">[!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)]</ph> or <ph id="ph2">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph>, it is recommended that you leave <ph id="ph3">`UseCompatibleTextRendering`</ph> set to the default value of <ph id="ph4">`false`</ph>.</source>
          <target state="translated">대부분의 경우에서 응용 프로그램을 업그레이드 하는 경우 <ph id="ph1">[!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)]</ph> 또는 <ph id="ph2">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph>를 그대로 사용 하는 것이 좋습니다. <ph id="ph3">`UseCompatibleTextRendering`</ph> 의 기본값으로 설정 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.UseCompatibleTextRendering">
          <source>The <ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> based <ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> class was introduced in the <ph id="ph3">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> to improve performance, make text look better, and improve support for international fonts.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> 기반 <ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> 클래스에 도입 된는 <ph id="ph3">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> 성능 향상을 위해 텍스트를 더 보기 좋게 및 국가별 글꼴에 대 한 지원 향상을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.UseCompatibleTextRendering">
          <source>In earlier versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, the <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> based <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> class was used to perform all text rendering.</source>
          <target state="translated">이전 버전의 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph> 기반 <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> 클래스는 모든 텍스트 렌더링을 수행 하는 데 사용 되었습니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.UseCompatibleTextRendering">
          <source><ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> calculates character spacing and word wrapping differently from <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]</ph> 문자 간격 및 줄 바꿈 다르게에서 계산 <ph id="ph2">[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.UseCompatibleTextRendering">
          <source>In a Windows Forms application that uses the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> class to render text, this could cause the text for controls that use <ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> to appear different from the other text in the application.</source>
          <target state="translated">사용 하는 Windows Forms 응용 프로그램에는 <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> 텍스트를 렌더링 하는 클래스를 사용 하는 컨트롤에 대 한 텍스트 될 수 <ph id="ph2">&lt;xref:System.Windows.Forms.TextRenderer&gt;</ph> 다른 응용 프로그램에 다른 텍스트를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.UseCompatibleTextRendering">
          <source>To resolve this incompatibility, you can set the <ph id="ph1">`UseCompatibleTextRendering`</ph> property to <ph id="ph2">`true`</ph> for a specific control.</source>
          <target state="translated">이러한 호환성 문제를 해결 하려면 설정할 수 있습니다는 <ph id="ph1">`UseCompatibleTextRendering`</ph> 속성을 <ph id="ph2">`true`</ph> 특정 컨트롤에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.UseCompatibleTextRendering">
          <source>To set <ph id="ph1">`UseCompatibleTextRendering`</ph> to <ph id="ph2">`true`</ph> for all supported controls in the application, call the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A?displayProperty=nameWithType&gt;</ph> method with a parameter of <ph id="ph4">`true`</ph>.</source>
          <target state="translated">설정 하려면 <ph id="ph1">`UseCompatibleTextRendering`</ph> 를 <ph id="ph2">`true`</ph> 응용 프로그램에서 지원 되는 모든 컨트롤에 대 한 호출의 <ph id="ph3">&lt;xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A?displayProperty=nameWithType&gt;</ph> 의 매개 변수를 사용 하 여 메서드 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.UseMnemonic">
          <source>Gets or sets a value indicating whether the first character that is preceded by an ampersand (<ph id="ph1">&amp;amp;</ph>) is used as the mnemonic key of the control.</source>
          <target state="translated">앰퍼샌드(<ph id="ph1">&amp;amp;</ph>) 다음에 오는 첫 번째 문자가 컨트롤의 니모닉 키로 사용되는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.UseMnemonic">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the first character that is preceded by an ampersand (<ph id="ph2">&amp;amp;</ph>) is used as the mnemonic key of the control; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 첫 번째 문자의 경우은 앞에 앰퍼샌드 (<ph id="ph2">&amp;amp;</ph>) 컨트롤의 니모닉 키로 사용 되 고, 그러지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.UseMnemonic">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ButtonBase.UseVisualStyleBackColor">
          <source>Gets or sets a value that determines if the background is drawn using visual styles, if supported.</source>
          <target state="translated">지원되는 경우 비주얼 스타일을 사용하여 배경색을 그릴지를 결정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.UseVisualStyleBackColor">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the background is drawn using visual styles; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">비주얼 스타일을 사용하여 배경을 그리면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.UseVisualStyleBackColor">
          <source>Visual styles are specifications for the appearance of controls.</source>
          <target state="translated">비주얼 스타일은 컨트롤의 모양에 대 한 사양입니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.UseVisualStyleBackColor">
          <source>For example, visual styles can define the color, size, and font of controls, and they enable you to configure the visual interface to coordinate with your application interface.</source>
          <target state="translated">예를 들어 색, 크기 및 컨트롤의 글꼴 비주얼 스타일을 정의할 수 있습니다 및 응용 프로그램 인터페이스와 조정 하기 위해 시각적 인터페이스를 구성할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ButtonBase.UseVisualStyleBackColor">
          <source>Additionally, they provide a mechanism for all Windows-based applications to have visual styles applied.</source>
          <target state="translated">또한, 비주얼 스타일을 적용 하 여 모든 Windows 기반 응용 프로그램에 대 한 메커니즘을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.WndProc(System.Windows.Forms.Message@)">
          <source>The Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> to process.</source>
          <target state="translated">처리할 Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ButtonBase.WndProc(System.Windows.Forms.Message@)">
          <source>Processes Windows messages.</source>
          <target state="translated">Windows 메시지를 처리합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>