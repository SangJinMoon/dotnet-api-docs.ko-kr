<Type Name="SendKeys" FullName="System.Windows.Forms.SendKeys">
  <TypeSignature Language="C#" Value="public class SendKeys" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi SendKeys extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.SendKeys" />
  <TypeSignature Language="VB.NET" Value="Public Class SendKeys" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendKeys" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3860b-101">응용 프로그램에 대한 키 입력 메서드를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-101">Provides methods for sending keystrokes to an application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3860b-102">사용 하 여 <xref:System.Windows.Forms.SendKeys> 키 입력 보내기 및 키 입력의 활성 응용 프로그램 조합을 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-102">Use <xref:System.Windows.Forms.SendKeys> to send keystrokes and keystroke combinations to the active application.</span></span> <span data-ttu-id="3860b-103">이 클래스는 인스턴스화할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-103">This class cannot be instantiated.</span></span> <span data-ttu-id="3860b-104">클래스 키 입력 보내기 즉시 프로그램의 흐름을 계속 사용 하 여을 <xref:System.Windows.Forms.SendKeys.Send%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-104">To send a keystroke to a class and immediately continue with the flow of your program, use <xref:System.Windows.Forms.SendKeys.Send%2A>.</span></span> <span data-ttu-id="3860b-105">사용 하 여 키 입력으로 시작 된 프로세스에 대해 기다려야 <xref:System.Windows.Forms.SendKeys.SendWait%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-105">To wait for any processes started by the keystroke, use <xref:System.Windows.Forms.SendKeys.SendWait%2A>.</span></span>  
  
 <span data-ttu-id="3860b-106">각 키는 하나 이상의 문자로 표현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-106">Each key is represented by one or more characters.</span></span> <span data-ttu-id="3860b-107">단일 키보드 문자를 지정 하려면 문자 자체를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-107">To specify a single keyboard character, use the character itself.</span></span> <span data-ttu-id="3860b-108">예를 들어 "A" 문자열에서 문자 A를 나타내려면 메서드에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-108">For example, to represent the letter A, pass in the string "A" to the method.</span></span> <span data-ttu-id="3860b-109">둘 이상의 문자를 나타내기 각 추가 문자 앞에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-109">To represent more than one character, append each additional character to the one preceding it.</span></span> <span data-ttu-id="3860b-110">문자 A, B, C를 나타내기 위해 "ABC"와 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-110">To represent the letters A, B, and C, specify the parameter as "ABC".</span></span>  
  
 <span data-ttu-id="3860b-111">더하기 기호 (+), 캐럿 (^), 백분율 기호 (%), 물결표 (~) 및 괄호 ()을 특별 한 의미가 있는 <xref:System.Windows.Forms.SendKeys>합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-111">The plus sign (+), caret (^), percent sign (%), tilde (~), and parentheses () have special meanings to <xref:System.Windows.Forms.SendKeys>.</span></span> <span data-ttu-id="3860b-112">이러한 문자 중 하나를 지정 하려면 중괄호 ({}) 안에 묶습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-112">To specify one of these characters, enclose it within braces ({}).</span></span> <span data-ttu-id="3860b-113">예를 들어 더하기 기호를 지정 하려면 "{+}"를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-113">For example, to specify the plus sign, use "{+}".</span></span> <span data-ttu-id="3860b-114">중괄호 "{{}"를 사용 하 고 "{}}"를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-114">To specify brace characters, use "{{}" and "{}}".</span></span> <span data-ttu-id="3860b-115">대괄호 ()에 없는 특별 한 의미를 갖는 <xref:System.Windows.Forms.SendKeys>, 있지만 중괄호로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-115">Brackets ([ ]) have no special meaning to <xref:System.Windows.Forms.SendKeys>, but you must enclose them in braces.</span></span> <span data-ttu-id="3860b-116">다른 응용 프로그램에서 대괄호 않습니다는 특별 한 의미가 동적 데이터 교환 DDE ()가 발생 하는 경우 중요 한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-116">In other applications, brackets do have a special meaning that might be significant when dynamic data exchange (DDE) occurs.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3860b-117">다양한 키보드를 통해 전 세계에서 사용하기 위한 응용 프로그램인 경우 <xref:System.Windows.Forms.SendKeys.Send%2A>를 사용하면 예기치 않은 결과가 발생할 수 있으며 피해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-117">If your application is intended for international use with a variety of keyboards, the use of <xref:System.Windows.Forms.SendKeys.Send%2A> could yield unpredictable results and should be avoided.</span></span>  
  
 <span data-ttu-id="3860b-118">ENTER 또는 탭 및 문자를 사용 하지 않고 작업을 나타내는 키와 같은 키를 누를 때 표시 되지 않는 문자를 지정 하려면 다음 테이블에 코드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-118">To specify characters that aren't displayed when you press a key, such as ENTER or TAB, and keys that represent actions rather than characters, use the codes in the following table.</span></span>  
  
|<span data-ttu-id="3860b-119">Key</span><span class="sxs-lookup"><span data-stu-id="3860b-119">Key</span></span>|<span data-ttu-id="3860b-120">코드</span><span class="sxs-lookup"><span data-stu-id="3860b-120">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="3860b-121">백스페이스</span><span class="sxs-lookup"><span data-stu-id="3860b-121">BACKSPACE</span></span>|<span data-ttu-id="3860b-122">{백스페이스} {BS} 또는 {BKSP}</span><span class="sxs-lookup"><span data-stu-id="3860b-122">{BACKSPACE}, {BS}, or {BKSP}</span></span>|  
|<span data-ttu-id="3860b-123">나누기</span><span class="sxs-lookup"><span data-stu-id="3860b-123">BREAK</span></span>|<span data-ttu-id="3860b-124">{철회}</span><span class="sxs-lookup"><span data-stu-id="3860b-124">{BREAK}</span></span>|  
|<span data-ttu-id="3860b-125">CAPS LOCK</span><span class="sxs-lookup"><span data-stu-id="3860b-125">CAPS LOCK</span></span>|<span data-ttu-id="3860b-126">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="3860b-126">{CAPSLOCK}</span></span>|  
|<span data-ttu-id="3860b-127">DEL 또는 삭제</span><span class="sxs-lookup"><span data-stu-id="3860b-127">DEL or DELETE</span></span>|<span data-ttu-id="3860b-128">{삭제} 또는 {삭제}</span><span class="sxs-lookup"><span data-stu-id="3860b-128">{DELETE} or {DEL}</span></span>|  
|<span data-ttu-id="3860b-129">아래쪽 화살표</span><span class="sxs-lookup"><span data-stu-id="3860b-129">DOWN ARROW</span></span>|<span data-ttu-id="3860b-130">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="3860b-130">{DOWN}</span></span>|  
|<span data-ttu-id="3860b-131">End </span><span class="sxs-lookup"><span data-stu-id="3860b-131">END</span></span>|<span data-ttu-id="3860b-132">{끝}</span><span class="sxs-lookup"><span data-stu-id="3860b-132">{END}</span></span>|  
|<span data-ttu-id="3860b-133">Enter 키</span><span class="sxs-lookup"><span data-stu-id="3860b-133">ENTER</span></span>|<span data-ttu-id="3860b-134">{입력} 또는 ~</span><span class="sxs-lookup"><span data-stu-id="3860b-134">{ENTER}or ~</span></span>|  
|<span data-ttu-id="3860b-135">Esc 키</span><span class="sxs-lookup"><span data-stu-id="3860b-135">ESC</span></span>|<span data-ttu-id="3860b-136">{ESC}</span><span class="sxs-lookup"><span data-stu-id="3860b-136">{ESC}</span></span>|  
|<span data-ttu-id="3860b-137">도움말</span><span class="sxs-lookup"><span data-stu-id="3860b-137">HELP</span></span>|<span data-ttu-id="3860b-138">{HELP}</span><span class="sxs-lookup"><span data-stu-id="3860b-138">{HELP}</span></span>|  
|<span data-ttu-id="3860b-139">홈</span><span class="sxs-lookup"><span data-stu-id="3860b-139">HOME</span></span>|<span data-ttu-id="3860b-140">{홈}</span><span class="sxs-lookup"><span data-stu-id="3860b-140">{HOME}</span></span>|  
|<span data-ttu-id="3860b-141">기능 또는 삽입</span><span class="sxs-lookup"><span data-stu-id="3860b-141">INS or INSERT</span></span>|<span data-ttu-id="3860b-142">{삽입} 또는 {기능}</span><span class="sxs-lookup"><span data-stu-id="3860b-142">{INSERT} or {INS}</span></span>|  
|<span data-ttu-id="3860b-143">왼쪽 화살표</span><span class="sxs-lookup"><span data-stu-id="3860b-143">LEFT ARROW</span></span>|<span data-ttu-id="3860b-144">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="3860b-144">{LEFT}</span></span>|  
|<span data-ttu-id="3860b-145">NUM LOCK</span><span class="sxs-lookup"><span data-stu-id="3860b-145">NUM LOCK</span></span>|<span data-ttu-id="3860b-146">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="3860b-146">{NUMLOCK}</span></span>|  
|<span data-ttu-id="3860b-147">Page Down</span><span class="sxs-lookup"><span data-stu-id="3860b-147">PAGE DOWN</span></span>|<span data-ttu-id="3860b-148">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="3860b-148">{PGDN}</span></span>|  
|<span data-ttu-id="3860b-149">Page Up</span><span class="sxs-lookup"><span data-stu-id="3860b-149">PAGE UP</span></span>|<span data-ttu-id="3860b-150">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="3860b-150">{PGUP}</span></span>|  
|<span data-ttu-id="3860b-151">화면 인쇄</span><span class="sxs-lookup"><span data-stu-id="3860b-151">PRINT SCREEN</span></span>|<span data-ttu-id="3860b-152">{PRTSC} (나중에 사용할 예약 됨)</span><span class="sxs-lookup"><span data-stu-id="3860b-152">{PRTSC} (reserved for future use)</span></span>|  
|<span data-ttu-id="3860b-153">오른쪽 화살표</span><span class="sxs-lookup"><span data-stu-id="3860b-153">RIGHT ARROW</span></span>|<span data-ttu-id="3860b-154">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="3860b-154">{RIGHT}</span></span>|  
|<span data-ttu-id="3860b-155">스크롤 잠금</span><span class="sxs-lookup"><span data-stu-id="3860b-155">SCROLL LOCK</span></span>|<span data-ttu-id="3860b-156">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="3860b-156">{SCROLLLOCK}</span></span>|  
|<span data-ttu-id="3860b-157">Tab</span><span class="sxs-lookup"><span data-stu-id="3860b-157">TAB</span></span>|<span data-ttu-id="3860b-158">{TAB}</span><span class="sxs-lookup"><span data-stu-id="3860b-158">{TAB}</span></span>|  
|<span data-ttu-id="3860b-159">위쪽 화살표</span><span class="sxs-lookup"><span data-stu-id="3860b-159">UP ARROW</span></span>|<span data-ttu-id="3860b-160">{UP}</span><span class="sxs-lookup"><span data-stu-id="3860b-160">{UP}</span></span>|  
|<span data-ttu-id="3860b-161">F1</span><span class="sxs-lookup"><span data-stu-id="3860b-161">F1</span></span>|<span data-ttu-id="3860b-162">{F1}</span><span class="sxs-lookup"><span data-stu-id="3860b-162">{F1}</span></span>|  
|<span data-ttu-id="3860b-163">F2</span><span class="sxs-lookup"><span data-stu-id="3860b-163">F2</span></span>|<span data-ttu-id="3860b-164">{F2}</span><span class="sxs-lookup"><span data-stu-id="3860b-164">{F2}</span></span>|  
|<span data-ttu-id="3860b-165">F3</span><span class="sxs-lookup"><span data-stu-id="3860b-165">F3</span></span>|<span data-ttu-id="3860b-166">{F3}</span><span class="sxs-lookup"><span data-stu-id="3860b-166">{F3}</span></span>|  
|<span data-ttu-id="3860b-167">F4</span><span class="sxs-lookup"><span data-stu-id="3860b-167">F4</span></span>|<span data-ttu-id="3860b-168">{F4}</span><span class="sxs-lookup"><span data-stu-id="3860b-168">{F4}</span></span>|  
|<span data-ttu-id="3860b-169">F5</span><span class="sxs-lookup"><span data-stu-id="3860b-169">F5</span></span>|<span data-ttu-id="3860b-170">{F5}</span><span class="sxs-lookup"><span data-stu-id="3860b-170">{F5}</span></span>|  
|<span data-ttu-id="3860b-171">F6</span><span class="sxs-lookup"><span data-stu-id="3860b-171">F6</span></span>|<span data-ttu-id="3860b-172">{F6}</span><span class="sxs-lookup"><span data-stu-id="3860b-172">{F6}</span></span>|  
|<span data-ttu-id="3860b-173">F7</span><span class="sxs-lookup"><span data-stu-id="3860b-173">F7</span></span>|<span data-ttu-id="3860b-174">{F7}</span><span class="sxs-lookup"><span data-stu-id="3860b-174">{F7}</span></span>|  
|<span data-ttu-id="3860b-175">F8</span><span class="sxs-lookup"><span data-stu-id="3860b-175">F8</span></span>|<span data-ttu-id="3860b-176">{F8}</span><span class="sxs-lookup"><span data-stu-id="3860b-176">{F8}</span></span>|  
|<span data-ttu-id="3860b-177">F9</span><span class="sxs-lookup"><span data-stu-id="3860b-177">F9</span></span>|<span data-ttu-id="3860b-178">{F9}</span><span class="sxs-lookup"><span data-stu-id="3860b-178">{F9}</span></span>|  
|<span data-ttu-id="3860b-179">F10</span><span class="sxs-lookup"><span data-stu-id="3860b-179">F10</span></span>|<span data-ttu-id="3860b-180">{F10}</span><span class="sxs-lookup"><span data-stu-id="3860b-180">{F10}</span></span>|  
|<span data-ttu-id="3860b-181">F11</span><span class="sxs-lookup"><span data-stu-id="3860b-181">F11</span></span>|<span data-ttu-id="3860b-182">{F11}</span><span class="sxs-lookup"><span data-stu-id="3860b-182">{F11}</span></span>|  
|<span data-ttu-id="3860b-183">F12</span><span class="sxs-lookup"><span data-stu-id="3860b-183">F12</span></span>|<span data-ttu-id="3860b-184">{F12}</span><span class="sxs-lookup"><span data-stu-id="3860b-184">{F12}</span></span>|  
|<span data-ttu-id="3860b-185">F13</span><span class="sxs-lookup"><span data-stu-id="3860b-185">F13</span></span>|<span data-ttu-id="3860b-186">{F13}</span><span class="sxs-lookup"><span data-stu-id="3860b-186">{F13}</span></span>|  
|<span data-ttu-id="3860b-187">F14</span><span class="sxs-lookup"><span data-stu-id="3860b-187">F14</span></span>|<span data-ttu-id="3860b-188">{F14}</span><span class="sxs-lookup"><span data-stu-id="3860b-188">{F14}</span></span>|  
|<span data-ttu-id="3860b-189">F15</span><span class="sxs-lookup"><span data-stu-id="3860b-189">F15</span></span>|<span data-ttu-id="3860b-190">{F15}</span><span class="sxs-lookup"><span data-stu-id="3860b-190">{F15}</span></span>|  
|<span data-ttu-id="3860b-191">F16</span><span class="sxs-lookup"><span data-stu-id="3860b-191">F16</span></span>|<span data-ttu-id="3860b-192">{F16}</span><span class="sxs-lookup"><span data-stu-id="3860b-192">{F16}</span></span>|  
|<span data-ttu-id="3860b-193">키패드 추가</span><span class="sxs-lookup"><span data-stu-id="3860b-193">Keypad add</span></span>|<span data-ttu-id="3860b-194">{추가할}</span><span class="sxs-lookup"><span data-stu-id="3860b-194">{ADD}</span></span>|  
|<span data-ttu-id="3860b-195">키패드 빼기</span><span class="sxs-lookup"><span data-stu-id="3860b-195">Keypad subtract</span></span>|<span data-ttu-id="3860b-196">{SUBTRACT}</span><span class="sxs-lookup"><span data-stu-id="3860b-196">{SUBTRACT}</span></span>|  
|<span data-ttu-id="3860b-197">키패드 곱하기</span><span class="sxs-lookup"><span data-stu-id="3860b-197">Keypad multiply</span></span>|<span data-ttu-id="3860b-198">{곱하기}</span><span class="sxs-lookup"><span data-stu-id="3860b-198">{MULTIPLY}</span></span>|  
|<span data-ttu-id="3860b-199">키패드 나누기</span><span class="sxs-lookup"><span data-stu-id="3860b-199">Keypad divide</span></span>|<span data-ttu-id="3860b-200">{나누기}</span><span class="sxs-lookup"><span data-stu-id="3860b-200">{DIVIDE}</span></span>|  
  
 <span data-ttu-id="3860b-201">SHIFT, CTRL 및 ALT 키와 결합 된 키를 지정 하려면 다음 코드 중 하나 이상과 키 코드를 앞에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-201">To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys, precede the key code with one or more of the following codes.</span></span>  
  
|<span data-ttu-id="3860b-202">Key</span><span class="sxs-lookup"><span data-stu-id="3860b-202">Key</span></span>|<span data-ttu-id="3860b-203">코드</span><span class="sxs-lookup"><span data-stu-id="3860b-203">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="3860b-204">SHIFT 키</span><span class="sxs-lookup"><span data-stu-id="3860b-204">SHIFT</span></span>|+|  
|<span data-ttu-id="3860b-205">CTRL</span><span class="sxs-lookup"><span data-stu-id="3860b-205">CTRL</span></span>|^|  
|<span data-ttu-id="3860b-206">ALT</span><span class="sxs-lookup"><span data-stu-id="3860b-206">ALT</span></span>|%|  
  
 <span data-ttu-id="3860b-207">를 여러 다른 키를 누르면 동안 SHIFT, CTRL 및 alt 키의 조합이 유지 하도록 지정 하려면 해당 키에 대 한 코드를 괄호로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-207">To specify that any combination of SHIFT, CTRL, and ALT should be held down while several other keys are pressed, enclose the code for those keys in parentheses.</span></span> <span data-ttu-id="3860b-208">Shift 키를 누른 상태 E와 C를 누르면를 지정 하려면 사용 예를 들어 "+ (EC)"입니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-208">For example, to specify to hold down SHIFT while E and C are pressed, use "+(EC)".</span></span> <span data-ttu-id="3860b-209">Shift 키를 누른 다음 않고 c 키를 E를 누른 상태를 지정 하려면 "+ EC"입니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-209">To specify to hold down SHIFT while E is pressed, followed by C without SHIFT, use "+EC".</span></span>  
  
 <span data-ttu-id="3860b-210">반복 되는 키를 지정 하려면 양식 {키 번호}를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-210">To specify repeating keys, use the form {key number}.</span></span> <span data-ttu-id="3860b-211">키와 숫자 사이 공백을 넣어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-211">You must put a space between key and number.</span></span> <span data-ttu-id="3860b-212">예를 들어 {왼쪽 42} 의미 42 배; 왼쪽 화살표 키를 눌러 {h 10} 키를 눌러 H 10 시간을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-212">For example, {LEFT 42} means press the LEFT ARROW key 42 times; {h 10} means press H 10 times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3860b-213">다른 응용 프로그램을 활성화 하는 관리 되는 메서드가 없습니다 이기 때문에 현재 응용 프로그램 내에서이 클래스를 사용 하거나 네이티브 Windows 메서드를 사용 하 여 같은 `FindWindow` 및 `SetForegroundWindow`, 다른 응용 프로그램에 포커스를 둡니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-213">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3860b-214"><xref:System.Windows.Forms.SendKeys> 클래스는 Windows Vista에서 실행되는 응용 프로그램에서 사용할 수 있도록 .NET Framework 3.0에서 업데이트되었습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-214">The <xref:System.Windows.Forms.SendKeys> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</span></span> <span data-ttu-id="3860b-215">Windows Vista의 향상된 보안(사용자 계정 컨트롤 또는 UAC라고 함) 때문에 이전 구현이 예상대로 작동하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-215">The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</span></span>  
>   
>  <span data-ttu-id="3860b-216"><xref:System.Windows.Forms.SendKeys> 클래스는 타이밍 문제에 취약하며, 이를 해결하기 위해 일부 개발자가 노력해야 했습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-216">The <xref:System.Windows.Forms.SendKeys> class is susceptible to timing issues, which some developers have had to work around.</span></span> <span data-ttu-id="3860b-217">업데이트된 구현도 타이밍 문제에 취약하지만 약간 더 빠르며 해결 방법에 대한 변경이 필요할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-217">The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</span></span> <span data-ttu-id="3860b-218"><xref:System.Windows.Forms.SendKeys> 클래스는 먼저 이전 구현을 사용하려고 시도하며, 실패할 경우 새 구현을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-218">The <xref:System.Windows.Forms.SendKeys> class tries to use the previous implementation first, and if that fails, uses the new implementation.</span></span> <span data-ttu-id="3860b-219">따라서 <xref:System.Windows.Forms.SendKeys> 클래스는 운영 체제마다 다르게 동작할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-219">As a result, the <xref:System.Windows.Forms.SendKeys> class may behave differently on different operating systems.</span></span> <span data-ttu-id="3860b-220">또한 <xref:System.Windows.Forms.SendKeys> 클래스가 새 구현을 사용하는 경우 <xref:System.Windows.Forms.SendKeys.SendWait%2A> 메서드는 다른 프로세스로 전송된 메시지가 처리될 때까지 기다리지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-220">Additionally, when the <xref:System.Windows.Forms.SendKeys> class uses the new implementation, the <xref:System.Windows.Forms.SendKeys.SendWait%2A> method will not wait for messages to be processed when they are sent to another process.</span></span>  
>   
>  <span data-ttu-id="3860b-221">응용 프로그램이 운영 체제와 관계없이 일관된 동작에 의존하는 경우 app.config 파일에 다음 응용 프로그램 설정을 추가하여 <xref:System.Windows.Forms.SendKeys> 클래스에서 새 구현을 사용하도록 강제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-221">If your application relies on consistent behavior regardless of the operating system, you can force the <xref:System.Windows.Forms.SendKeys> class to use the new implementation by adding the following application setting to your app.config file.</span></span>  
>   
>  `<appSettings>`  
>   
>  `<add key="SendKeys" value="SendInput"/>`  
>   
>  `</appSettings>`  
>   
>  <span data-ttu-id="3860b-222"><xref:System.Windows.Forms.SendKeys> 클래스에서 이전 구현을 사용하도록 강제하려면 `"JournalHook"` 값을 대신 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-222">To force the <xref:System.Windows.Forms.SendKeys> class to use the previous implementation, use the value `"JournalHook"` instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3860b-223">다음 코드 예제에서는 <xref:System.Windows.Forms.SendKeys.Send%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-223">The following code example demonstrates how to use the <xref:System.Windows.Forms.SendKeys.Send%2A> method.</span></span> <span data-ttu-id="3860b-224">예제를 실행 하려면 다음 코드를 붙여 단추가 포함 된 Form1 이라는 형태로 Button1 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-224">To run the example, paste the following code in a form called Form1 containing a button called Button1.</span></span> <span data-ttu-id="3860b-225">Click 이벤트의 이벤트 처리 메서드이 예제에서와 연결 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-225">Ensure the click events are associated with their event-handling methods in this example.</span></span> <span data-ttu-id="3860b-226">단추 컨트롤의 <xref:System.Windows.Forms.Control.TabIndex%2A> 속성을 0으로 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-226">The button control's <xref:System.Windows.Forms.Control.TabIndex%2A> property should be set to 0.</span></span> <span data-ttu-id="3860b-227">예제를 실행 하는 경우 단추의 click 트리거할 폼을 두 번 클릭 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-227">When the example is running, double-click the form to trigger the button's click event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.SendKeys#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.SendKeys#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.SendKeys#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SendKeys.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3860b-228">현재 메시지 큐에 있는 모든 Windows 메시지를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-228">Processes all the Windows messages currently in the message queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3860b-229">사용 하 여 <xref:System.Windows.Forms.SendKeys.Flush%2A> 키 입력 메시지 및 메시지 큐에 있는 다른 운영 체제 메시지 처리 응용 프로그램에 대해 기다려야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-229">Use <xref:System.Windows.Forms.SendKeys.Flush%2A> to wait for the application to process keystrokes and other operating system messages that are in the message queue.</span></span> <span data-ttu-id="3860b-230">이 호출에 해당 하는 <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType> 사항이 추가 키를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-230">This is equivalent to calling <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType> until there are no more keys to process.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3860b-231">다른 응용 프로그램을 활성화 하는 관리 되는 메서드가 없습니다 이기 때문에 현재 응용 프로그램 내에서이 클래스를 사용 하거나 네이티브 Windows 메서드를 사용 하 여 같은 `FindWindow` 및 `SetForegroundWindow`, 다른 응용 프로그램에 포커스를 둡니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-231">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public static void Send (string keys);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Send(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SendKeys.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Send (keys As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Send(System::String ^ keys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="3860b-232">보낼 키 입력의 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-232">The string of keystrokes to send.</span></span></param>
        <summary><span data-ttu-id="3860b-233">키 입력을 활성 응용 프로그램에 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-233">Sends keystrokes to the active application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3860b-234">각 키는 하나 이상의 문자로 표현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-234">Each key is represented by one or more characters.</span></span> <span data-ttu-id="3860b-235">단일 키보드 문자를 지정 하려면 문자 자체를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-235">To specify a single keyboard character, use the character itself.</span></span> <span data-ttu-id="3860b-236">예를 들어 "A" 문자열에서 문자 A를 나타내려면 메서드에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-236">For example, to represent the letter A, pass in the string "A" to the method.</span></span> <span data-ttu-id="3860b-237">둘 이상의 문자를 나타내기 각 추가 문자 앞에 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-237">To represent more than one character, append each additional character to the one preceding it.</span></span> <span data-ttu-id="3860b-238">문자 A, B, C를 나타내기 위해 "ABC"와 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-238">To represent the letters A, B, and C, specify the parameter as "ABC".</span></span>  
  
 <span data-ttu-id="3860b-239">더하기 기호 (+), 캐럿 (^), 백분율 기호 (%), 물결표 (~) 및 괄호 ()을 특별 한 의미가 있는 <xref:System.Windows.Forms.SendKeys>합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-239">The plus sign (+), caret (^), percent sign (%), tilde (~), and parentheses () have special meanings to <xref:System.Windows.Forms.SendKeys>.</span></span> <span data-ttu-id="3860b-240">이러한 문자 중 하나를 지정 하려면 중괄호 ({}) 안에 묶습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-240">To specify one of these characters, enclose it within braces ({}).</span></span> <span data-ttu-id="3860b-241">예를 들어 더하기 기호를 지정 하려면 "{+}"를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-241">For example, to specify the plus sign, use "{+}".</span></span> <span data-ttu-id="3860b-242">중괄호 "{{}"를 사용 하 고 "{}}"를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-242">To specify brace characters, use "{{}" and "{}}".</span></span> <span data-ttu-id="3860b-243">대괄호 ()에 없는 특별 한 의미를 갖는 <xref:System.Windows.Forms.SendKeys>, 있지만 중괄호로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-243">Brackets ([ ]) have no special meaning to <xref:System.Windows.Forms.SendKeys>, but you must enclose them in braces.</span></span> <span data-ttu-id="3860b-244">다른 응용 프로그램에서 대괄호 않습니다는 특별 한 의미가 동적 데이터 교환 DDE ()가 발생 하는 경우 중요 한 것입니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-244">In other applications, brackets do have a special meaning that might be significant when dynamic data exchange (DDE) occurs.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="3860b-245">다양한 키보드를 통해 전 세계에서 사용하기 위한 응용 프로그램인 경우 <xref:System.Windows.Forms.SendKeys.Send%2A>를 사용하면 예기치 않은 결과가 발생할 수 있으며 피해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-245">If your application is intended for international use with a variety of keyboards, the use of <xref:System.Windows.Forms.SendKeys.Send%2A> could yield unpredictable results and should be avoided.</span></span>  
  
 <span data-ttu-id="3860b-246">ENTER 또는 탭 및 문자를 사용 하지 않고 작업을 나타내는 키와 같은 키를 누를 때 표시 되지 않는 문자를 지정 하려면 다음 테이블에 코드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-246">To specify characters that aren't displayed when you press a key, such as ENTER or TAB, and keys that represent actions rather than characters, use the codes in the following table.</span></span>  
  
|<span data-ttu-id="3860b-247">Key</span><span class="sxs-lookup"><span data-stu-id="3860b-247">Key</span></span>|<span data-ttu-id="3860b-248">코드</span><span class="sxs-lookup"><span data-stu-id="3860b-248">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="3860b-249">백스페이스</span><span class="sxs-lookup"><span data-stu-id="3860b-249">BACKSPACE</span></span>|<span data-ttu-id="3860b-250">{백스페이스} {BS} 또는 {BKSP}</span><span class="sxs-lookup"><span data-stu-id="3860b-250">{BACKSPACE}, {BS}, or {BKSP}</span></span>|  
|<span data-ttu-id="3860b-251">나누기</span><span class="sxs-lookup"><span data-stu-id="3860b-251">BREAK</span></span>|<span data-ttu-id="3860b-252">{철회}</span><span class="sxs-lookup"><span data-stu-id="3860b-252">{BREAK}</span></span>|  
|<span data-ttu-id="3860b-253">CAPS LOCK</span><span class="sxs-lookup"><span data-stu-id="3860b-253">CAPS LOCK</span></span>|<span data-ttu-id="3860b-254">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="3860b-254">{CAPSLOCK}</span></span>|  
|<span data-ttu-id="3860b-255">DEL 또는 삭제</span><span class="sxs-lookup"><span data-stu-id="3860b-255">DEL or DELETE</span></span>|<span data-ttu-id="3860b-256">{삭제} 또는 {삭제}</span><span class="sxs-lookup"><span data-stu-id="3860b-256">{DELETE} or {DEL}</span></span>|  
|<span data-ttu-id="3860b-257">아래쪽 화살표</span><span class="sxs-lookup"><span data-stu-id="3860b-257">DOWN ARROW</span></span>|<span data-ttu-id="3860b-258">{DOWN}</span><span class="sxs-lookup"><span data-stu-id="3860b-258">{DOWN}</span></span>|  
|<span data-ttu-id="3860b-259">End </span><span class="sxs-lookup"><span data-stu-id="3860b-259">END</span></span>|<span data-ttu-id="3860b-260">{끝}</span><span class="sxs-lookup"><span data-stu-id="3860b-260">{END}</span></span>|  
|<span data-ttu-id="3860b-261">Enter 키</span><span class="sxs-lookup"><span data-stu-id="3860b-261">ENTER</span></span>|<span data-ttu-id="3860b-262">{입력} 또는 ~</span><span class="sxs-lookup"><span data-stu-id="3860b-262">{ENTER}or ~</span></span>|  
|<span data-ttu-id="3860b-263">Esc 키</span><span class="sxs-lookup"><span data-stu-id="3860b-263">ESC</span></span>|<span data-ttu-id="3860b-264">{ESC}</span><span class="sxs-lookup"><span data-stu-id="3860b-264">{ESC}</span></span>|  
|<span data-ttu-id="3860b-265">도움말</span><span class="sxs-lookup"><span data-stu-id="3860b-265">HELP</span></span>|<span data-ttu-id="3860b-266">{HELP}</span><span class="sxs-lookup"><span data-stu-id="3860b-266">{HELP}</span></span>|  
|<span data-ttu-id="3860b-267">홈</span><span class="sxs-lookup"><span data-stu-id="3860b-267">HOME</span></span>|<span data-ttu-id="3860b-268">{홈}</span><span class="sxs-lookup"><span data-stu-id="3860b-268">{HOME}</span></span>|  
|<span data-ttu-id="3860b-269">기능 또는 삽입</span><span class="sxs-lookup"><span data-stu-id="3860b-269">INS or INSERT</span></span>|<span data-ttu-id="3860b-270">{삽입} 또는 {기능}</span><span class="sxs-lookup"><span data-stu-id="3860b-270">{INSERT} or {INS}</span></span>|  
|<span data-ttu-id="3860b-271">왼쪽 화살표</span><span class="sxs-lookup"><span data-stu-id="3860b-271">LEFT ARROW</span></span>|<span data-ttu-id="3860b-272">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="3860b-272">{LEFT}</span></span>|  
|<span data-ttu-id="3860b-273">NUM LOCK</span><span class="sxs-lookup"><span data-stu-id="3860b-273">NUM LOCK</span></span>|<span data-ttu-id="3860b-274">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="3860b-274">{NUMLOCK}</span></span>|  
|<span data-ttu-id="3860b-275">Page Down</span><span class="sxs-lookup"><span data-stu-id="3860b-275">PAGE DOWN</span></span>|<span data-ttu-id="3860b-276">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="3860b-276">{PGDN}</span></span>|  
|<span data-ttu-id="3860b-277">Page Up</span><span class="sxs-lookup"><span data-stu-id="3860b-277">PAGE UP</span></span>|<span data-ttu-id="3860b-278">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="3860b-278">{PGUP}</span></span>|  
|<span data-ttu-id="3860b-279">화면 인쇄</span><span class="sxs-lookup"><span data-stu-id="3860b-279">PRINT SCREEN</span></span>|<span data-ttu-id="3860b-280">{PRTSC} (나중에 사용할 예약 됨)</span><span class="sxs-lookup"><span data-stu-id="3860b-280">{PRTSC} (reserved for future use)</span></span>|  
|<span data-ttu-id="3860b-281">오른쪽 화살표</span><span class="sxs-lookup"><span data-stu-id="3860b-281">RIGHT ARROW</span></span>|<span data-ttu-id="3860b-282">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="3860b-282">{RIGHT}</span></span>|  
|<span data-ttu-id="3860b-283">스크롤 잠금</span><span class="sxs-lookup"><span data-stu-id="3860b-283">SCROLL LOCK</span></span>|<span data-ttu-id="3860b-284">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="3860b-284">{SCROLLLOCK}</span></span>|  
|<span data-ttu-id="3860b-285">Tab</span><span class="sxs-lookup"><span data-stu-id="3860b-285">TAB</span></span>|<span data-ttu-id="3860b-286">{TAB}</span><span class="sxs-lookup"><span data-stu-id="3860b-286">{TAB}</span></span>|  
|<span data-ttu-id="3860b-287">위쪽 화살표</span><span class="sxs-lookup"><span data-stu-id="3860b-287">UP ARROW</span></span>|<span data-ttu-id="3860b-288">{UP}</span><span class="sxs-lookup"><span data-stu-id="3860b-288">{UP}</span></span>|  
|<span data-ttu-id="3860b-289">F1</span><span class="sxs-lookup"><span data-stu-id="3860b-289">F1</span></span>|<span data-ttu-id="3860b-290">{F1}</span><span class="sxs-lookup"><span data-stu-id="3860b-290">{F1}</span></span>|  
|<span data-ttu-id="3860b-291">F2</span><span class="sxs-lookup"><span data-stu-id="3860b-291">F2</span></span>|<span data-ttu-id="3860b-292">{F2}</span><span class="sxs-lookup"><span data-stu-id="3860b-292">{F2}</span></span>|  
|<span data-ttu-id="3860b-293">F3</span><span class="sxs-lookup"><span data-stu-id="3860b-293">F3</span></span>|<span data-ttu-id="3860b-294">{F3}</span><span class="sxs-lookup"><span data-stu-id="3860b-294">{F3}</span></span>|  
|<span data-ttu-id="3860b-295">F4</span><span class="sxs-lookup"><span data-stu-id="3860b-295">F4</span></span>|<span data-ttu-id="3860b-296">{F4}</span><span class="sxs-lookup"><span data-stu-id="3860b-296">{F4}</span></span>|  
|<span data-ttu-id="3860b-297">F5</span><span class="sxs-lookup"><span data-stu-id="3860b-297">F5</span></span>|<span data-ttu-id="3860b-298">{F5}</span><span class="sxs-lookup"><span data-stu-id="3860b-298">{F5}</span></span>|  
|<span data-ttu-id="3860b-299">F6</span><span class="sxs-lookup"><span data-stu-id="3860b-299">F6</span></span>|<span data-ttu-id="3860b-300">{F6}</span><span class="sxs-lookup"><span data-stu-id="3860b-300">{F6}</span></span>|  
|<span data-ttu-id="3860b-301">F7</span><span class="sxs-lookup"><span data-stu-id="3860b-301">F7</span></span>|<span data-ttu-id="3860b-302">{F7}</span><span class="sxs-lookup"><span data-stu-id="3860b-302">{F7}</span></span>|  
|<span data-ttu-id="3860b-303">F8</span><span class="sxs-lookup"><span data-stu-id="3860b-303">F8</span></span>|<span data-ttu-id="3860b-304">{F8}</span><span class="sxs-lookup"><span data-stu-id="3860b-304">{F8}</span></span>|  
|<span data-ttu-id="3860b-305">F9</span><span class="sxs-lookup"><span data-stu-id="3860b-305">F9</span></span>|<span data-ttu-id="3860b-306">{F9}</span><span class="sxs-lookup"><span data-stu-id="3860b-306">{F9}</span></span>|  
|<span data-ttu-id="3860b-307">F10</span><span class="sxs-lookup"><span data-stu-id="3860b-307">F10</span></span>|<span data-ttu-id="3860b-308">{F10}</span><span class="sxs-lookup"><span data-stu-id="3860b-308">{F10}</span></span>|  
|<span data-ttu-id="3860b-309">F11</span><span class="sxs-lookup"><span data-stu-id="3860b-309">F11</span></span>|<span data-ttu-id="3860b-310">{F11}</span><span class="sxs-lookup"><span data-stu-id="3860b-310">{F11}</span></span>|  
|<span data-ttu-id="3860b-311">F12</span><span class="sxs-lookup"><span data-stu-id="3860b-311">F12</span></span>|<span data-ttu-id="3860b-312">{F12}</span><span class="sxs-lookup"><span data-stu-id="3860b-312">{F12}</span></span>|  
|<span data-ttu-id="3860b-313">F13</span><span class="sxs-lookup"><span data-stu-id="3860b-313">F13</span></span>|<span data-ttu-id="3860b-314">{F13}</span><span class="sxs-lookup"><span data-stu-id="3860b-314">{F13}</span></span>|  
|<span data-ttu-id="3860b-315">F14</span><span class="sxs-lookup"><span data-stu-id="3860b-315">F14</span></span>|<span data-ttu-id="3860b-316">{F14}</span><span class="sxs-lookup"><span data-stu-id="3860b-316">{F14}</span></span>|  
|<span data-ttu-id="3860b-317">F15</span><span class="sxs-lookup"><span data-stu-id="3860b-317">F15</span></span>|<span data-ttu-id="3860b-318">{F15}</span><span class="sxs-lookup"><span data-stu-id="3860b-318">{F15}</span></span>|  
|<span data-ttu-id="3860b-319">F16</span><span class="sxs-lookup"><span data-stu-id="3860b-319">F16</span></span>|<span data-ttu-id="3860b-320">{F16}</span><span class="sxs-lookup"><span data-stu-id="3860b-320">{F16}</span></span>|  
|<span data-ttu-id="3860b-321">키패드 추가</span><span class="sxs-lookup"><span data-stu-id="3860b-321">Keypad add</span></span>|<span data-ttu-id="3860b-322">{추가할}</span><span class="sxs-lookup"><span data-stu-id="3860b-322">{ADD}</span></span>|  
|<span data-ttu-id="3860b-323">키패드 빼기</span><span class="sxs-lookup"><span data-stu-id="3860b-323">Keypad subtract</span></span>|<span data-ttu-id="3860b-324">{SUBTRACT}</span><span class="sxs-lookup"><span data-stu-id="3860b-324">{SUBTRACT}</span></span>|  
|<span data-ttu-id="3860b-325">키패드 곱하기</span><span class="sxs-lookup"><span data-stu-id="3860b-325">Keypad multiply</span></span>|<span data-ttu-id="3860b-326">{곱하기}</span><span class="sxs-lookup"><span data-stu-id="3860b-326">{MULTIPLY}</span></span>|  
|<span data-ttu-id="3860b-327">키패드 나누기</span><span class="sxs-lookup"><span data-stu-id="3860b-327">Keypad divide</span></span>|<span data-ttu-id="3860b-328">{나누기}</span><span class="sxs-lookup"><span data-stu-id="3860b-328">{DIVIDE}</span></span>|  
  
 <span data-ttu-id="3860b-329">SHIFT, CTRL 및 ALT 키와 결합 된 키를 지정 하려면 다음 코드 중 하나 이상과 키 코드를 앞에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-329">To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys, precede the key code with one or more of the following codes.</span></span>  
  
|<span data-ttu-id="3860b-330">Key</span><span class="sxs-lookup"><span data-stu-id="3860b-330">Key</span></span>|<span data-ttu-id="3860b-331">코드</span><span class="sxs-lookup"><span data-stu-id="3860b-331">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="3860b-332">SHIFT 키</span><span class="sxs-lookup"><span data-stu-id="3860b-332">SHIFT</span></span>|+|  
|<span data-ttu-id="3860b-333">CTRL</span><span class="sxs-lookup"><span data-stu-id="3860b-333">CTRL</span></span>|^|  
|<span data-ttu-id="3860b-334">ALT</span><span class="sxs-lookup"><span data-stu-id="3860b-334">ALT</span></span>|%|  
  
 <span data-ttu-id="3860b-335">를 여러 다른 키를 누르면 동안 SHIFT, CTRL 및 alt 키의 조합이 유지 하도록 지정 하려면 해당 키에 대 한 코드를 괄호로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-335">To specify that any combination of SHIFT, CTRL, and ALT should be held down while several other keys are pressed, enclose the code for those keys in parentheses.</span></span> <span data-ttu-id="3860b-336">Shift 키를 누른 상태 E와 C를 누르면를 지정 하려면 사용 예를 들어 "+ (EC)"입니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-336">For example, to specify to hold down SHIFT while E and C are pressed, use "+(EC)".</span></span> <span data-ttu-id="3860b-337">Shift 키를 누른 다음 않고 c 키를 E를 누른 상태를 지정 하려면 "+ EC"입니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-337">To specify to hold down SHIFT while E is pressed, followed by C without SHIFT, use "+EC".</span></span>  
  
 <span data-ttu-id="3860b-338">반복 되는 키를 지정 하려면 양식 {키 번호}를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-338">To specify repeating keys, use the form {key number}.</span></span> <span data-ttu-id="3860b-339">키와 숫자 사이 공백을 넣어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-339">You must put a space between key and number.</span></span> <span data-ttu-id="3860b-340">예를 들어 {왼쪽 42} 의미 42 배; 왼쪽 화살표 키를 눌러 {h 10} 키를 눌러 H 10 시간을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-340">For example, {LEFT 42} means press the LEFT ARROW key 42 times; {h 10} means press H 10 times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3860b-341">다른 응용 프로그램을 활성화 하는 관리 되는 메서드가 없습니다 이기 때문에 현재 응용 프로그램 내에서이 클래스를 사용 하거나 네이티브 Windows 메서드를 사용 하 여 같은 `FindWindow` 및 `SetForegroundWindow`, 다른 응용 프로그램에 포커스를 둡니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-341">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3860b-342"><xref:System.Windows.Forms.SendKeys> 클래스는 Windows Vista에서 실행되는 응용 프로그램에서 사용할 수 있도록 .NET Framework 3.0에서 업데이트되었습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-342">The <xref:System.Windows.Forms.SendKeys> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</span></span> <span data-ttu-id="3860b-343">Windows Vista의 향상된 보안(사용자 계정 컨트롤 또는 UAC라고 함) 때문에 이전 구현이 예상대로 작동하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-343">The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</span></span>  
>   
>  <span data-ttu-id="3860b-344"><xref:System.Windows.Forms.SendKeys> 클래스는 타이밍 문제에 취약하며, 이를 해결하기 위해 일부 개발자가 노력해야 했습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-344">The <xref:System.Windows.Forms.SendKeys> class is susceptible to timing issues, which some developers have had to work around.</span></span> <span data-ttu-id="3860b-345">업데이트된 구현도 타이밍 문제에 취약하지만 약간 더 빠르며 해결 방법에 대한 변경이 필요할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-345">The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</span></span> <span data-ttu-id="3860b-346"><xref:System.Windows.Forms.SendKeys> 클래스는 먼저 이전 구현을 사용하려고 시도하며, 실패할 경우 새 구현을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-346">The <xref:System.Windows.Forms.SendKeys> class tries to use the previous implementation first, and if that fails, uses the new implementation.</span></span> <span data-ttu-id="3860b-347">따라서 <xref:System.Windows.Forms.SendKeys> 클래스는 운영 체제마다 다르게 동작할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-347">As a result, the <xref:System.Windows.Forms.SendKeys> class may behave differently on different operating systems.</span></span> <span data-ttu-id="3860b-348">또한 <xref:System.Windows.Forms.SendKeys> 클래스가 새 구현을 사용하는 경우 <xref:System.Windows.Forms.SendKeys.SendWait%2A> 메서드는 다른 프로세스로 전송된 메시지가 처리될 때까지 기다리지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-348">Additionally, when the <xref:System.Windows.Forms.SendKeys> class uses the new implementation, the <xref:System.Windows.Forms.SendKeys.SendWait%2A> method will not wait for messages to be processed when they are sent to another process.</span></span>  
>   
>  <span data-ttu-id="3860b-349">응용 프로그램이 운영 체제와 관계없이 일관된 동작에 의존하는 경우 app.config 파일에 다음 응용 프로그램 설정을 추가하여 <xref:System.Windows.Forms.SendKeys> 클래스에서 새 구현을 사용하도록 강제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-349">If your application relies on consistent behavior regardless of the operating system, you can force the <xref:System.Windows.Forms.SendKeys> class to use the new implementation by adding the following application setting to your app.config file.</span></span>  
>   
>  `<appSettings>`  
>   
>  `<add key="SendKeys" value="SendInput"/>`  
>   
>  `</appSettings>`  
>   
>  <span data-ttu-id="3860b-350"><xref:System.Windows.Forms.SendKeys> 클래스에서 이전 구현을 사용하도록 강제하려면 `"JournalHook"` 값을 대신 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-350">To force the <xref:System.Windows.Forms.SendKeys> class to use the previous implementation, use the value `"JournalHook"` instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3860b-351">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.SendKeys.Send%2A> 메서드. 예제를 실행 하려면 다음 코드를 붙여 단추가 포함 된 Form1 이라는 형태로 Button1 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-351">The following code example demonstrates how to use the <xref:System.Windows.Forms.SendKeys.Send%2A> method.To run the example, paste the following code in a form called Form1 containing a button called Button1.</span></span> <span data-ttu-id="3860b-352">Click 이벤트의 이벤트 처리 메서드이 예제에서와 연결 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-352">Ensure the click events are associated with their event-handling methods in this example.</span></span> <span data-ttu-id="3860b-353">단추 컨트롤의 <xref:System.Windows.Forms.Control.TabIndex%2A> 속성을 0으로 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-353">The button control's <xref:System.Windows.Forms.Control.TabIndex%2A> property should be set to 0.</span></span> <span data-ttu-id="3860b-354">예제를 실행 하는 경우 단추의 click 트리거할 폼을 두 번 클릭 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-354">When the example is running, double-click the form to trigger the button's click event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.SendKeys#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.SendKeys#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.SendKeys#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3860b-355">키 입력을 보낼 활성 응용 프로그램이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-355">There is not an active application to send keystrokes to.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3860b-356"><paramref name="keys" />는 유효한 키 입력을 나타내지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-356"><paramref name="keys" /> does not represent valid keystrokes</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3860b-357">이 메서드를 호출 하는 관리 되지 않는 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-357">for unmanaged code to call this method.</span></span> <span data-ttu-id="3860b-358">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3860b-358">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendWait">
      <MemberSignature Language="C#" Value="public static void SendWait (string keys);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendWait(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SendKeys.SendWait(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SendWait (keys As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SendWait(System::String ^ keys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="3860b-359">보낼 키 입력의 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-359">The string of keystrokes to send.</span></span></param>
        <summary><span data-ttu-id="3860b-360">지정한 키를 활성 응용 프로그램에 보낸 다음 메시지가 처리되기를 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-360">Sends the given keys to the active application, and then waits for the messages to be processed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3860b-361">사용 하 여 <xref:System.Windows.Forms.SendKeys.SendWait%2A> 활성 응용 프로그램에 키 입력의 조합 또는 키 입력 보내고 키 입력 메시지가 처리 될 때까지 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-361">Use <xref:System.Windows.Forms.SendKeys.SendWait%2A> to send keystrokes or combinations of keystrokes to the active application and wait for the keystroke messages to be processed.</span></span> <span data-ttu-id="3860b-362">응용 프로그램에 키 입력 보내기 하 고 완료 하는 데 다음 키 입력으로 시작 되는 모든 프로세스를 기다리는이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-362">You can use this method to send keystrokes to an application and wait for any processes that are started by the keystrokes to be completed.</span></span> <span data-ttu-id="3860b-363">이 응용 프로그램 계속 하려면 다른 응용 프로그램을 완료 해야 하는 경우 중요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-363">This can be important if the other application must finish before your application can continue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3860b-364">다른 응용 프로그램을 활성화 하는 관리 되는 메서드가 없습니다 이기 때문에 현재 응용 프로그램 내에서이 클래스를 사용 하거나 네이티브 Windows 메서드를 사용 하 여 같은 `FindWindow` 및 `SetForegroundWindow`, 다른 응용 프로그램에 포커스를 둡니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-364">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3860b-365"><xref:System.Windows.Forms.SendKeys> 클래스는 Windows Vista에서 실행되는 응용 프로그램에서 사용할 수 있도록 .NET Framework 3.0에서 업데이트되었습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-365">The <xref:System.Windows.Forms.SendKeys> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</span></span> <span data-ttu-id="3860b-366">Windows Vista의 향상된 보안(사용자 계정 컨트롤 또는 UAC라고 함) 때문에 이전 구현이 예상대로 작동하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-366">The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</span></span>  
>   
>  <span data-ttu-id="3860b-367"><xref:System.Windows.Forms.SendKeys> 클래스는 타이밍 문제에 취약하며, 이를 해결하기 위해 일부 개발자가 노력해야 했습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-367">The <xref:System.Windows.Forms.SendKeys> class is susceptible to timing issues, which some developers have had to work around.</span></span> <span data-ttu-id="3860b-368">업데이트된 구현도 타이밍 문제에 취약하지만 약간 더 빠르며 해결 방법에 대한 변경이 필요할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-368">The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</span></span> <span data-ttu-id="3860b-369"><xref:System.Windows.Forms.SendKeys> 클래스는 먼저 이전 구현을 사용하려고 시도하며, 실패할 경우 새 구현을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-369">The <xref:System.Windows.Forms.SendKeys> class tries to use the previous implementation first, and if that fails, uses the new implementation.</span></span> <span data-ttu-id="3860b-370">따라서 <xref:System.Windows.Forms.SendKeys> 클래스는 운영 체제마다 다르게 동작할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-370">As a result, the <xref:System.Windows.Forms.SendKeys> class may behave differently on different operating systems.</span></span> <span data-ttu-id="3860b-371">또한 <xref:System.Windows.Forms.SendKeys> 클래스가 새 구현을 사용하는 경우 <xref:System.Windows.Forms.SendKeys.SendWait%2A> 메서드는 다른 프로세스로 전송된 메시지가 처리될 때까지 기다리지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-371">Additionally, when the <xref:System.Windows.Forms.SendKeys> class uses the new implementation, the <xref:System.Windows.Forms.SendKeys.SendWait%2A> method will not wait for messages to be processed when they are sent to another process.</span></span>  
>   
>  <span data-ttu-id="3860b-372">응용 프로그램이 운영 체제와 관계없이 일관된 동작에 의존하는 경우 app.config 파일에 다음 응용 프로그램 설정을 추가하여 <xref:System.Windows.Forms.SendKeys> 클래스에서 새 구현을 사용하도록 강제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-372">If your application relies on consistent behavior regardless of the operating system, you can force the <xref:System.Windows.Forms.SendKeys> class to use the new implementation by adding the following application setting to your app.config file.</span></span>  
>   
>  `<appSettings>`  
>   
>  `<add key="SendKeys" value="SendInput"/>`  
>   
>  `</appSettings>`  
>   
>  <span data-ttu-id="3860b-373"><xref:System.Windows.Forms.SendKeys> 클래스에서 이전 구현을 사용하도록 강제하려면 `"JournalHook"` 값을 대신 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-373">To force the <xref:System.Windows.Forms.SendKeys> class to use the previous implementation, use the value `"JournalHook"` instead.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3860b-374">이 메서드를 호출 하는 관리 되지 않는 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="3860b-374">for unmanaged code to call this method.</span></span> <span data-ttu-id="3860b-375">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3860b-375">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>