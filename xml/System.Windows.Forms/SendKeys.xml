<Type Name="SendKeys" FullName="System.Windows.Forms.SendKeys">
  <Metadata><Meta Name="ms.openlocfilehash" Value="928cd476312384e2f7d1033542661ae526636e6f" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51310796" /></Metadata><TypeSignature Language="C#" Value="public class SendKeys" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi SendKeys extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.SendKeys" />
  <TypeSignature Language="VB.NET" Value="Public Class SendKeys" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendKeys" />
  <TypeSignature Language="F#" Value="type SendKeys = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0469c-101">응용 프로그램에 대한 키 입력 메서드를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-101">Provides methods for sending keystrokes to an application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0469c-102">사용 하 여 <xref:System.Windows.Forms.SendKeys> 키 입력을 보내고 활성 응용 프로그램 조합을 키 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-102">Use <xref:System.Windows.Forms.SendKeys> to send keystrokes and keystroke combinations to the active application.</span></span> <span data-ttu-id="0469c-103">이 클래스는 인스턴스화할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-103">This class cannot be instantiated.</span></span> <span data-ttu-id="0469c-104">클래스에 키 입력을 전달 하 고 프로그램의 흐름을 사용 하 여 즉시 계속 하려면 <xref:System.Windows.Forms.SendKeys.Send%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-104">To send a keystroke to a class and immediately continue with the flow of your program, use <xref:System.Windows.Forms.SendKeys.Send%2A>.</span></span> <span data-ttu-id="0469c-105">키 입력으로 시작 하는 모든 프로세스에 대 한 대기를 사용 하 여 <xref:System.Windows.Forms.SendKeys.SendWait%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-105">To wait for any processes started by the keystroke, use <xref:System.Windows.Forms.SendKeys.SendWait%2A>.</span></span>  
  
 <span data-ttu-id="0469c-106">각 키는 하나 이상의 문자로 표현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-106">Each key is represented by one or more characters.</span></span> <span data-ttu-id="0469c-107">단일 키보드 문자를 지정 하려면 문자 자체를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-107">To specify a single keyboard character, use the character itself.</span></span> <span data-ttu-id="0469c-108">예를 들어 "A" 문자열에서 문자 A을 나타내기 위해 메서드에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-108">For example, to represent the letter A, pass in the string "A" to the method.</span></span> <span data-ttu-id="0469c-109">둘 이상의 문자를 나타내기를 앞에 각 추가 문자를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-109">To represent more than one character, append each additional character to the one preceding it.</span></span> <span data-ttu-id="0469c-110">문자 A, B 및 C을 나타내기 위해 "ABC"와 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-110">To represent the letters A, B, and C, specify the parameter as "ABC".</span></span>  
  
 <span data-ttu-id="0469c-111">더하기 기호 (+), 캐럿 (^), 백분율 기호 (%), 물결표 (~) 및 괄호 ()을 특별 한 의미를 갖습니다 <xref:System.Windows.Forms.SendKeys>합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-111">The plus sign (+), caret (^), percent sign (%), tilde (~), and parentheses () have special meanings to <xref:System.Windows.Forms.SendKeys>.</span></span> <span data-ttu-id="0469c-112">이러한 문자 중 하나를 지정 하려면 중괄호 안에 묶습니다 ({}).</span><span class="sxs-lookup"><span data-stu-id="0469c-112">To specify one of these characters, enclose it within braces ({}).</span></span> <span data-ttu-id="0469c-113">예를 들어 더하기 기호를 지정 하려면 "{+}"를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-113">For example, to specify the plus sign, use "{+}".</span></span> <span data-ttu-id="0469c-114">중괄호 문자를 지정 하려면 사용 하 여 "{{}"및"{}}".</span><span class="sxs-lookup"><span data-stu-id="0469c-114">To specify brace characters, use "{{}" and "{}}".</span></span> <span data-ttu-id="0469c-115">대괄호 () 없는 특별 한 의미가 <xref:System.Windows.Forms.SendKeys>, 있지만 중괄호로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-115">Brackets ([ ]) have no special meaning to <xref:System.Windows.Forms.SendKeys>, but you must enclose them in braces.</span></span> <span data-ttu-id="0469c-116">다른 응용 프로그램에서 대괄호 수행 특별 한 의미가 동적 데이터 교환 DDE ()가 발생할 때 상당히 클 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-116">In other applications, brackets do have a special meaning that might be significant when dynamic data exchange (DDE) occurs.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0469c-117">다양한 키보드를 통해 전 세계에서 사용하기 위한 응용 프로그램인 경우 <xref:System.Windows.Forms.SendKeys.Send%2A> 를 사용하면 예기치 않은 결과가 발생할 수 있으며 피해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-117">If your application is intended for international use with a variety of keyboards, the use of <xref:System.Windows.Forms.SendKeys.Send%2A> could yield unpredictable results and should be avoided.</span></span>  
  
 <span data-ttu-id="0469c-118">ENTER 또는 탭 문자 대신 작업을 나타내는 키 등의 키를 누를 때 표시 되지 않는 문자를 지정 하려면 다음 표에 코드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-118">To specify characters that aren't displayed when you press a key, such as ENTER or TAB, and keys that represent actions rather than characters, use the codes in the following table.</span></span>  
  
|<span data-ttu-id="0469c-119">Key</span><span class="sxs-lookup"><span data-stu-id="0469c-119">Key</span></span>|<span data-ttu-id="0469c-120">코드</span><span class="sxs-lookup"><span data-stu-id="0469c-120">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="0469c-121">백스페이스</span><span class="sxs-lookup"><span data-stu-id="0469c-121">BACKSPACE</span></span>|<span data-ttu-id="0469c-122">{백스페이스}, {B} 또는 {BKSP}</span><span class="sxs-lookup"><span data-stu-id="0469c-122">{BACKSPACE}, {BS}, or {BKSP}</span></span>|  
|<span data-ttu-id="0469c-123">중단</span><span class="sxs-lookup"><span data-stu-id="0469c-123">BREAK</span></span>|<span data-ttu-id="0469c-124">{중단}</span><span class="sxs-lookup"><span data-stu-id="0469c-124">{BREAK}</span></span>|  
|<span data-ttu-id="0469c-125">CAPS LOCK</span><span class="sxs-lookup"><span data-stu-id="0469c-125">CAPS LOCK</span></span>|<span data-ttu-id="0469c-126">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="0469c-126">{CAPSLOCK}</span></span>|  
|<span data-ttu-id="0469c-127">DEL 또는 삭제</span><span class="sxs-lookup"><span data-stu-id="0469c-127">DEL or DELETE</span></span>|<span data-ttu-id="0469c-128">{삭제} 또는 {삭제}</span><span class="sxs-lookup"><span data-stu-id="0469c-128">{DELETE} or {DEL}</span></span>|  
|<span data-ttu-id="0469c-129">아래쪽 화살표</span><span class="sxs-lookup"><span data-stu-id="0469c-129">DOWN ARROW</span></span>|<span data-ttu-id="0469c-130">{를}</span><span class="sxs-lookup"><span data-stu-id="0469c-130">{DOWN}</span></span>|  
|<span data-ttu-id="0469c-131">End </span><span class="sxs-lookup"><span data-stu-id="0469c-131">END</span></span>|<span data-ttu-id="0469c-132">{END}</span><span class="sxs-lookup"><span data-stu-id="0469c-132">{END}</span></span>|  
|<span data-ttu-id="0469c-133">Enter 키</span><span class="sxs-lookup"><span data-stu-id="0469c-133">ENTER</span></span>|<span data-ttu-id="0469c-134">{0} 입력} 또는 ~</span><span class="sxs-lookup"><span data-stu-id="0469c-134">{ENTER} or ~</span></span>|  
|<span data-ttu-id="0469c-135">Esc 키</span><span class="sxs-lookup"><span data-stu-id="0469c-135">ESC</span></span>|<span data-ttu-id="0469c-136">{ESC}</span><span class="sxs-lookup"><span data-stu-id="0469c-136">{ESC}</span></span>|  
|<span data-ttu-id="0469c-137">도움말</span><span class="sxs-lookup"><span data-stu-id="0469c-137">HELP</span></span>|<span data-ttu-id="0469c-138">{도움말}</span><span class="sxs-lookup"><span data-stu-id="0469c-138">{HELP}</span></span>|  
|<span data-ttu-id="0469c-139">홈</span><span class="sxs-lookup"><span data-stu-id="0469c-139">HOME</span></span>|<span data-ttu-id="0469c-140">{0} 홈}</span><span class="sxs-lookup"><span data-stu-id="0469c-140">{HOME}</span></span>|  
|<span data-ttu-id="0469c-141">기능 또는 삽입</span><span class="sxs-lookup"><span data-stu-id="0469c-141">INS or INSERT</span></span>|<span data-ttu-id="0469c-142">{삽입} 또는 {기능}</span><span class="sxs-lookup"><span data-stu-id="0469c-142">{INSERT} or {INS}</span></span>|  
|<span data-ttu-id="0469c-143">왼쪽 화살표</span><span class="sxs-lookup"><span data-stu-id="0469c-143">LEFT ARROW</span></span>|<span data-ttu-id="0469c-144">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="0469c-144">{LEFT}</span></span>|  
|<span data-ttu-id="0469c-145">NUM LOCK</span><span class="sxs-lookup"><span data-stu-id="0469c-145">NUM LOCK</span></span>|<span data-ttu-id="0469c-146">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="0469c-146">{NUMLOCK}</span></span>|  
|<span data-ttu-id="0469c-147">Page Down</span><span class="sxs-lookup"><span data-stu-id="0469c-147">PAGE DOWN</span></span>|<span data-ttu-id="0469c-148">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="0469c-148">{PGDN}</span></span>|  
|<span data-ttu-id="0469c-149">Page Up</span><span class="sxs-lookup"><span data-stu-id="0469c-149">PAGE UP</span></span>|<span data-ttu-id="0469c-150">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="0469c-150">{PGUP}</span></span>|  
|<span data-ttu-id="0469c-151">PRINT SCREEN</span><span class="sxs-lookup"><span data-stu-id="0469c-151">PRINT SCREEN</span></span>|<span data-ttu-id="0469c-152">{PRTSC} (사용 하도록 예약)</span><span class="sxs-lookup"><span data-stu-id="0469c-152">{PRTSC} (reserved for future use)</span></span>|  
|<span data-ttu-id="0469c-153">오른쪽 화살표</span><span class="sxs-lookup"><span data-stu-id="0469c-153">RIGHT ARROW</span></span>|<span data-ttu-id="0469c-154">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="0469c-154">{RIGHT}</span></span>|  
|<span data-ttu-id="0469c-155">스크롤 잠금</span><span class="sxs-lookup"><span data-stu-id="0469c-155">SCROLL LOCK</span></span>|<span data-ttu-id="0469c-156">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="0469c-156">{SCROLLLOCK}</span></span>|  
|<span data-ttu-id="0469c-157">Tab</span><span class="sxs-lookup"><span data-stu-id="0469c-157">TAB</span></span>|<span data-ttu-id="0469c-158">{TAB}</span><span class="sxs-lookup"><span data-stu-id="0469c-158">{TAB}</span></span>|  
|<span data-ttu-id="0469c-159">위쪽 화살표</span><span class="sxs-lookup"><span data-stu-id="0469c-159">UP ARROW</span></span>|<span data-ttu-id="0469c-160">{UP}</span><span class="sxs-lookup"><span data-stu-id="0469c-160">{UP}</span></span>|  
|<span data-ttu-id="0469c-161">F1</span><span class="sxs-lookup"><span data-stu-id="0469c-161">F1</span></span>|<span data-ttu-id="0469c-162">{F1}</span><span class="sxs-lookup"><span data-stu-id="0469c-162">{F1}</span></span>|  
|<span data-ttu-id="0469c-163">F2</span><span class="sxs-lookup"><span data-stu-id="0469c-163">F2</span></span>|<span data-ttu-id="0469c-164">{F2}</span><span class="sxs-lookup"><span data-stu-id="0469c-164">{F2}</span></span>|  
|<span data-ttu-id="0469c-165">F3</span><span class="sxs-lookup"><span data-stu-id="0469c-165">F3</span></span>|<span data-ttu-id="0469c-166">{F3}</span><span class="sxs-lookup"><span data-stu-id="0469c-166">{F3}</span></span>|  
|<span data-ttu-id="0469c-167">F4</span><span class="sxs-lookup"><span data-stu-id="0469c-167">F4</span></span>|<span data-ttu-id="0469c-168">{F4}</span><span class="sxs-lookup"><span data-stu-id="0469c-168">{F4}</span></span>|  
|<span data-ttu-id="0469c-169">F5</span><span class="sxs-lookup"><span data-stu-id="0469c-169">F5</span></span>|<span data-ttu-id="0469c-170">{F5}</span><span class="sxs-lookup"><span data-stu-id="0469c-170">{F5}</span></span>|  
|<span data-ttu-id="0469c-171">F6</span><span class="sxs-lookup"><span data-stu-id="0469c-171">F6</span></span>|<span data-ttu-id="0469c-172">{F6}</span><span class="sxs-lookup"><span data-stu-id="0469c-172">{F6}</span></span>|  
|<span data-ttu-id="0469c-173">F7</span><span class="sxs-lookup"><span data-stu-id="0469c-173">F7</span></span>|<span data-ttu-id="0469c-174">{F7}</span><span class="sxs-lookup"><span data-stu-id="0469c-174">{F7}</span></span>|  
|<span data-ttu-id="0469c-175">F8</span><span class="sxs-lookup"><span data-stu-id="0469c-175">F8</span></span>|<span data-ttu-id="0469c-176">{F8}</span><span class="sxs-lookup"><span data-stu-id="0469c-176">{F8}</span></span>|  
|<span data-ttu-id="0469c-177">F9</span><span class="sxs-lookup"><span data-stu-id="0469c-177">F9</span></span>|<span data-ttu-id="0469c-178">{F9}</span><span class="sxs-lookup"><span data-stu-id="0469c-178">{F9}</span></span>|  
|<span data-ttu-id="0469c-179">F10</span><span class="sxs-lookup"><span data-stu-id="0469c-179">F10</span></span>|<span data-ttu-id="0469c-180">{F10}</span><span class="sxs-lookup"><span data-stu-id="0469c-180">{F10}</span></span>|  
|<span data-ttu-id="0469c-181">F11</span><span class="sxs-lookup"><span data-stu-id="0469c-181">F11</span></span>|<span data-ttu-id="0469c-182">{F11}</span><span class="sxs-lookup"><span data-stu-id="0469c-182">{F11}</span></span>|  
|<span data-ttu-id="0469c-183">F12</span><span class="sxs-lookup"><span data-stu-id="0469c-183">F12</span></span>|<span data-ttu-id="0469c-184">{F12}</span><span class="sxs-lookup"><span data-stu-id="0469c-184">{F12}</span></span>|  
|<span data-ttu-id="0469c-185">F13</span><span class="sxs-lookup"><span data-stu-id="0469c-185">F13</span></span>|<span data-ttu-id="0469c-186">{F13}</span><span class="sxs-lookup"><span data-stu-id="0469c-186">{F13}</span></span>|  
|<span data-ttu-id="0469c-187">F14</span><span class="sxs-lookup"><span data-stu-id="0469c-187">F14</span></span>|<span data-ttu-id="0469c-188">{F14}</span><span class="sxs-lookup"><span data-stu-id="0469c-188">{F14}</span></span>|  
|<span data-ttu-id="0469c-189">F15</span><span class="sxs-lookup"><span data-stu-id="0469c-189">F15</span></span>|<span data-ttu-id="0469c-190">{F15}</span><span class="sxs-lookup"><span data-stu-id="0469c-190">{F15}</span></span>|  
|<span data-ttu-id="0469c-191">F16</span><span class="sxs-lookup"><span data-stu-id="0469c-191">F16</span></span>|<span data-ttu-id="0469c-192">{F16}</span><span class="sxs-lookup"><span data-stu-id="0469c-192">{F16}</span></span>|  
|<span data-ttu-id="0469c-193">키패드 추가</span><span class="sxs-lookup"><span data-stu-id="0469c-193">Keypad add</span></span>|<span data-ttu-id="0469c-194">{0} 추가}</span><span class="sxs-lookup"><span data-stu-id="0469c-194">{ADD}</span></span>|  
|<span data-ttu-id="0469c-195">키패드 빼기</span><span class="sxs-lookup"><span data-stu-id="0469c-195">Keypad subtract</span></span>|<span data-ttu-id="0469c-196">{빼기}</span><span class="sxs-lookup"><span data-stu-id="0469c-196">{SUBTRACT}</span></span>|  
|<span data-ttu-id="0469c-197">키패드 곱하기</span><span class="sxs-lookup"><span data-stu-id="0469c-197">Keypad multiply</span></span>|<span data-ttu-id="0469c-198">{곱하기}</span><span class="sxs-lookup"><span data-stu-id="0469c-198">{MULTIPLY}</span></span>|  
|<span data-ttu-id="0469c-199">키패드 나누기</span><span class="sxs-lookup"><span data-stu-id="0469c-199">Keypad divide</span></span>|<span data-ttu-id="0469c-200">{나누기}</span><span class="sxs-lookup"><span data-stu-id="0469c-200">{DIVIDE}</span></span>|  
  
 <span data-ttu-id="0469c-201">SHIFT, CTRL 및 ALT 키 조합을 사용 하 여 결합 된 키를 지정 하려면 하나 이상의 다음 코드를 사용 하 여 키 코드 앞에 야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-201">To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys, precede the key code with one or more of the following codes.</span></span>  
  
|<span data-ttu-id="0469c-202">Key</span><span class="sxs-lookup"><span data-stu-id="0469c-202">Key</span></span>|<span data-ttu-id="0469c-203">코드</span><span class="sxs-lookup"><span data-stu-id="0469c-203">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="0469c-204">SHIFT</span><span class="sxs-lookup"><span data-stu-id="0469c-204">SHIFT</span></span>|+|  
|<span data-ttu-id="0469c-205">CTRL</span><span class="sxs-lookup"><span data-stu-id="0469c-205">CTRL</span></span>|^|  
|<span data-ttu-id="0469c-206">ALT</span><span class="sxs-lookup"><span data-stu-id="0469c-206">ALT</span></span>|%|  
  
 <span data-ttu-id="0469c-207">SHIFT, CTRL 및 alt 키 조합을 다른 여러 키를 누르면 동안 보관 해야를 지정 하려면 해당 키에 대 한 코드를 괄호로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-207">To specify that any combination of SHIFT, CTRL, and ALT should be held down while several other keys are pressed, enclose the code for those keys in parentheses.</span></span> <span data-ttu-id="0469c-208">Shift 키를 누른 상태 E 및 C를 누르면를 지정 하려면 사용 예를 들어, "+ (EC)".</span><span class="sxs-lookup"><span data-stu-id="0469c-208">For example, to specify to hold down SHIFT while E and C are pressed, use "+(EC)".</span></span> <span data-ttu-id="0469c-209">Shift 키를 누른 뒤에, shift 키 없이 C, E를 누른 상태를 지정 하려면 "+ EC"입니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-209">To specify to hold down SHIFT while E is pressed, followed by C without SHIFT, use "+EC".</span></span>  
  
 <span data-ttu-id="0469c-210">반복 되는 키를 지정 하려면 형식을 {키 number 개를} 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-210">To specify repeating keys, use the form {key number}.</span></span> <span data-ttu-id="0469c-211">키와 숫자 사이 공백을 넣어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-211">You must put a space between key and number.</span></span> <span data-ttu-id="0469c-212">예를 들어 {왼쪽 42} 의미 42 번씩; 왼쪽 화살표 키를 눌러 {h 10} 키를 눌러 H 10 시간을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-212">For example, {LEFT 42} means press the LEFT ARROW key 42 times; {h 10} means press H 10 times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0469c-213">다른 응용 프로그램을 활성화 하려면 관리 되는 메서드가 없습니다 이기 때문에 현재 응용 프로그램 내에서이 클래스를 사용 하거나 같은 네이티브 Windows 메서드를 사용 하 여 `FindWindow` 고 `SetForegroundWindow`, 다른 응용 프로그램에 포커스를 둡니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-213">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0469c-214"><xref:System.Windows.Forms.SendKeys> 클래스는 Windows Vista에서 실행되는 응용 프로그램에서 사용할 수 있도록 .NET Framework 3.0에서 업데이트되었습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-214">The <xref:System.Windows.Forms.SendKeys> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</span></span> <span data-ttu-id="0469c-215">Windows Vista의 향상된 보안(사용자 계정 컨트롤 또는 UAC라고 함) 때문에 이전 구현이 예상대로 작동하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-215">The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</span></span>  
>   
>  <span data-ttu-id="0469c-216"><xref:System.Windows.Forms.SendKeys> 클래스는 타이밍 문제에 취약하며, 이를 해결하기 위해 일부 개발자가 노력해야 했습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-216">The <xref:System.Windows.Forms.SendKeys> class is susceptible to timing issues, which some developers have had to work around.</span></span> <span data-ttu-id="0469c-217">업데이트된 구현도 타이밍 문제에 취약하지만 약간 더 빠르며 해결 방법에 대한 변경이 필요할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-217">The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</span></span> <span data-ttu-id="0469c-218"><xref:System.Windows.Forms.SendKeys> 클래스는 먼저 이전 구현을 사용하려고 시도하며, 실패할 경우 새 구현을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-218">The <xref:System.Windows.Forms.SendKeys> class tries to use the previous implementation first, and if that fails, uses the new implementation.</span></span> <span data-ttu-id="0469c-219">따라서 <xref:System.Windows.Forms.SendKeys> 클래스는 운영 체제마다 다르게 동작할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-219">As a result, the <xref:System.Windows.Forms.SendKeys> class may behave differently on different operating systems.</span></span> <span data-ttu-id="0469c-220">또한 <xref:System.Windows.Forms.SendKeys> 클래스가 새 구현을 사용하는 경우 <xref:System.Windows.Forms.SendKeys.SendWait%2A> 메서드는 다른 프로세스로 전송된 메시지가 처리될 때까지 기다리지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-220">Additionally, when the <xref:System.Windows.Forms.SendKeys> class uses the new implementation, the <xref:System.Windows.Forms.SendKeys.SendWait%2A> method will not wait for messages to be processed when they are sent to another process.</span></span>  
>   
>  <span data-ttu-id="0469c-221">응용 프로그램이 운영 체제와 관계없이 일관된 동작에 의존하는 경우 app.config 파일에 다음 응용 프로그램 설정을 추가하여 <xref:System.Windows.Forms.SendKeys> 클래스에서 새 구현을 사용하도록 강제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-221">If your application relies on consistent behavior regardless of the operating system, you can force the <xref:System.Windows.Forms.SendKeys> class to use the new implementation by adding the following application setting to your app.config file.</span></span>  
>   
>  `<appSettings>`  
>   
>  `<add key="SendKeys" value="SendInput"/>`  
>   
>  `</appSettings>`  
>   
>  <span data-ttu-id="0469c-222"><xref:System.Windows.Forms.SendKeys> 클래스에서 이전 구현을 사용하도록 강제하려면 `"JournalHook"` 값을 대신 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-222">To force the <xref:System.Windows.Forms.SendKeys> class to use the previous implementation, use the value `"JournalHook"` instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0469c-223">다음 코드 예제에서는 <xref:System.Windows.Forms.SendKeys.Send%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-223">The following code example demonstrates how to use the <xref:System.Windows.Forms.SendKeys.Send%2A> method.</span></span> <span data-ttu-id="0469c-224">예제를 실행 하려면 다음 코드를 붙여 넣습니다. Form1 이라는 형태로 Button1 이라는 단추가 들어 있는입니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-224">To run the example, paste the following code in a form called Form1 containing a button called Button1.</span></span> <span data-ttu-id="0469c-225">이 예제에서 해당 이벤트 처리 메서드를 사용 하 여 연결 클릭 이벤트를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-225">Ensure the click events are associated with their event-handling methods in this example.</span></span> <span data-ttu-id="0469c-226">단추 컨트롤의 <xref:System.Windows.Forms.Control.TabIndex%2A> 속성을 0으로 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-226">The button control's <xref:System.Windows.Forms.Control.TabIndex%2A> property should be set to 0.</span></span> <span data-ttu-id="0469c-227">예제를 실행 하는 경우 폼 트리거할 단추 클릭을 두 번 클릭 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-227">When the example is running, double-click the form to trigger the button's click event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.SendKeys#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.SendKeys#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.SendKeys#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SendKeys.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberSignature Language="F#" Value="static member Flush : unit -&gt; unit" Usage="System.Windows.Forms.SendKeys.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0469c-228">현재 메시지 큐에 있는 모든 Windows 메시지를 처리합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-228">Processes all the Windows messages currently in the message queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0469c-229">사용 하 여 <xref:System.Windows.Forms.SendKeys.Flush%2A> 입력과 다른 운영 체제에에서 있는 메시지를 메시지 큐를 처리 하는 데 응용 프로그램에 대 한 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-229">Use <xref:System.Windows.Forms.SendKeys.Flush%2A> to wait for the application to process keystrokes and other operating system messages that are in the message queue.</span></span> <span data-ttu-id="0469c-230">이 설정은 호출 <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType> 처리 하는 데 더 많은 키가 될 때까지 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-230">This is equivalent to calling <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType> until there are no more keys to process.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0469c-231">다른 응용 프로그램을 활성화 하려면 관리 되는 메서드가 없습니다 이기 때문에 현재 응용 프로그램 내에서이 클래스를 사용 하거나 같은 네이티브 Windows 메서드를 사용 하 여 `FindWindow` 고 `SetForegroundWindow`, 다른 응용 프로그램에 포커스를 둡니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-231">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public static void Send (string keys);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Send(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SendKeys.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Send (keys As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Send(System::String ^ keys);" />
      <MemberSignature Language="F#" Value="static member Send : string -&gt; unit" Usage="System.Windows.Forms.SendKeys.Send keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="0469c-232">보낼 키 입력의 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-232">The string of keystrokes to send.</span></span></param>
        <summary><span data-ttu-id="0469c-233">키 입력을 활성 응용 프로그램에 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-233">Sends keystrokes to the active application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0469c-234">각 키는 하나 이상의 문자로 표현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-234">Each key is represented by one or more characters.</span></span> <span data-ttu-id="0469c-235">단일 키보드 문자를 지정 하려면 문자 자체를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-235">To specify a single keyboard character, use the character itself.</span></span> <span data-ttu-id="0469c-236">예를 들어 "A" 문자열에서 문자 A을 나타내기 위해 메서드에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-236">For example, to represent the letter A, pass in the string "A" to the method.</span></span> <span data-ttu-id="0469c-237">둘 이상의 문자를 나타내기를 앞에 각 추가 문자를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-237">To represent more than one character, append each additional character to the one preceding it.</span></span> <span data-ttu-id="0469c-238">문자 A, B 및 C을 나타내기 위해 "ABC"와 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-238">To represent the letters A, B, and C, specify the parameter as "ABC".</span></span>  
  
 <span data-ttu-id="0469c-239">더하기 기호 (+), 캐럿 (^), 백분율 기호 (%), 물결표 (~) 및 괄호 ()을 특별 한 의미를 갖습니다 <xref:System.Windows.Forms.SendKeys>합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-239">The plus sign (+), caret (^), percent sign (%), tilde (~), and parentheses () have special meanings to <xref:System.Windows.Forms.SendKeys>.</span></span> <span data-ttu-id="0469c-240">이러한 문자 중 하나를 지정 하려면 중괄호 안에 묶습니다 ({}).</span><span class="sxs-lookup"><span data-stu-id="0469c-240">To specify one of these characters, enclose it within braces ({}).</span></span> <span data-ttu-id="0469c-241">예를 들어 더하기 기호를 지정 하려면 "{+}"를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-241">For example, to specify the plus sign, use "{+}".</span></span> <span data-ttu-id="0469c-242">중괄호 문자를 지정 하려면 사용 하 여 "{{}"및"{}}".</span><span class="sxs-lookup"><span data-stu-id="0469c-242">To specify brace characters, use "{{}" and "{}}".</span></span> <span data-ttu-id="0469c-243">대괄호 () 없는 특별 한 의미가 <xref:System.Windows.Forms.SendKeys>, 있지만 중괄호로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-243">Brackets ([ ]) have no special meaning to <xref:System.Windows.Forms.SendKeys>, but you must enclose them in braces.</span></span> <span data-ttu-id="0469c-244">다른 응용 프로그램에서 대괄호 수행 특별 한 의미가 동적 데이터 교환 DDE ()가 발생할 때 상당히 클 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-244">In other applications, brackets do have a special meaning that might be significant when dynamic data exchange (DDE) occurs.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0469c-245">다양한 키보드를 통해 전 세계에서 사용하기 위한 응용 프로그램인 경우 <xref:System.Windows.Forms.SendKeys.Send%2A> 를 사용하면 예기치 않은 결과가 발생할 수 있으며 피해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-245">If your application is intended for international use with a variety of keyboards, the use of <xref:System.Windows.Forms.SendKeys.Send%2A> could yield unpredictable results and should be avoided.</span></span>  
  
 <span data-ttu-id="0469c-246">ENTER 또는 탭 문자 대신 작업을 나타내는 키 등의 키를 누를 때 표시 되지 않는 문자를 지정 하려면 다음 표에 코드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-246">To specify characters that aren't displayed when you press a key, such as ENTER or TAB, and keys that represent actions rather than characters, use the codes in the following table.</span></span>  
  
|<span data-ttu-id="0469c-247">Key</span><span class="sxs-lookup"><span data-stu-id="0469c-247">Key</span></span>|<span data-ttu-id="0469c-248">코드</span><span class="sxs-lookup"><span data-stu-id="0469c-248">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="0469c-249">백스페이스</span><span class="sxs-lookup"><span data-stu-id="0469c-249">BACKSPACE</span></span>|<span data-ttu-id="0469c-250">{백스페이스}, {B} 또는 {BKSP}</span><span class="sxs-lookup"><span data-stu-id="0469c-250">{BACKSPACE}, {BS}, or {BKSP}</span></span>|  
|<span data-ttu-id="0469c-251">중단</span><span class="sxs-lookup"><span data-stu-id="0469c-251">BREAK</span></span>|<span data-ttu-id="0469c-252">{중단}</span><span class="sxs-lookup"><span data-stu-id="0469c-252">{BREAK}</span></span>|  
|<span data-ttu-id="0469c-253">CAPS LOCK</span><span class="sxs-lookup"><span data-stu-id="0469c-253">CAPS LOCK</span></span>|<span data-ttu-id="0469c-254">{CAPSLOCK}</span><span class="sxs-lookup"><span data-stu-id="0469c-254">{CAPSLOCK}</span></span>|  
|<span data-ttu-id="0469c-255">DEL 또는 삭제</span><span class="sxs-lookup"><span data-stu-id="0469c-255">DEL or DELETE</span></span>|<span data-ttu-id="0469c-256">{삭제} 또는 {삭제}</span><span class="sxs-lookup"><span data-stu-id="0469c-256">{DELETE} or {DEL}</span></span>|  
|<span data-ttu-id="0469c-257">아래쪽 화살표</span><span class="sxs-lookup"><span data-stu-id="0469c-257">DOWN ARROW</span></span>|<span data-ttu-id="0469c-258">{를}</span><span class="sxs-lookup"><span data-stu-id="0469c-258">{DOWN}</span></span>|  
|<span data-ttu-id="0469c-259">End </span><span class="sxs-lookup"><span data-stu-id="0469c-259">END</span></span>|<span data-ttu-id="0469c-260">{END}</span><span class="sxs-lookup"><span data-stu-id="0469c-260">{END}</span></span>|  
|<span data-ttu-id="0469c-261">Enter 키</span><span class="sxs-lookup"><span data-stu-id="0469c-261">ENTER</span></span>|<span data-ttu-id="0469c-262">{0} 입력} 또는 ~</span><span class="sxs-lookup"><span data-stu-id="0469c-262">{ENTER}or ~</span></span>|  
|<span data-ttu-id="0469c-263">Esc 키</span><span class="sxs-lookup"><span data-stu-id="0469c-263">ESC</span></span>|<span data-ttu-id="0469c-264">{ESC}</span><span class="sxs-lookup"><span data-stu-id="0469c-264">{ESC}</span></span>|  
|<span data-ttu-id="0469c-265">도움말</span><span class="sxs-lookup"><span data-stu-id="0469c-265">HELP</span></span>|<span data-ttu-id="0469c-266">{도움말}</span><span class="sxs-lookup"><span data-stu-id="0469c-266">{HELP}</span></span>|  
|<span data-ttu-id="0469c-267">홈</span><span class="sxs-lookup"><span data-stu-id="0469c-267">HOME</span></span>|<span data-ttu-id="0469c-268">{0} 홈}</span><span class="sxs-lookup"><span data-stu-id="0469c-268">{HOME}</span></span>|  
|<span data-ttu-id="0469c-269">기능 또는 삽입</span><span class="sxs-lookup"><span data-stu-id="0469c-269">INS or INSERT</span></span>|<span data-ttu-id="0469c-270">{삽입} 또는 {기능}</span><span class="sxs-lookup"><span data-stu-id="0469c-270">{INSERT} or {INS}</span></span>|  
|<span data-ttu-id="0469c-271">왼쪽 화살표</span><span class="sxs-lookup"><span data-stu-id="0469c-271">LEFT ARROW</span></span>|<span data-ttu-id="0469c-272">{LEFT}</span><span class="sxs-lookup"><span data-stu-id="0469c-272">{LEFT}</span></span>|  
|<span data-ttu-id="0469c-273">NUM LOCK</span><span class="sxs-lookup"><span data-stu-id="0469c-273">NUM LOCK</span></span>|<span data-ttu-id="0469c-274">{NUMLOCK}</span><span class="sxs-lookup"><span data-stu-id="0469c-274">{NUMLOCK}</span></span>|  
|<span data-ttu-id="0469c-275">Page Down</span><span class="sxs-lookup"><span data-stu-id="0469c-275">PAGE DOWN</span></span>|<span data-ttu-id="0469c-276">{PGDN}</span><span class="sxs-lookup"><span data-stu-id="0469c-276">{PGDN}</span></span>|  
|<span data-ttu-id="0469c-277">Page Up</span><span class="sxs-lookup"><span data-stu-id="0469c-277">PAGE UP</span></span>|<span data-ttu-id="0469c-278">{PGUP}</span><span class="sxs-lookup"><span data-stu-id="0469c-278">{PGUP}</span></span>|  
|<span data-ttu-id="0469c-279">PRINT SCREEN</span><span class="sxs-lookup"><span data-stu-id="0469c-279">PRINT SCREEN</span></span>|<span data-ttu-id="0469c-280">{PRTSC} (사용 하도록 예약)</span><span class="sxs-lookup"><span data-stu-id="0469c-280">{PRTSC} (reserved for future use)</span></span>|  
|<span data-ttu-id="0469c-281">오른쪽 화살표</span><span class="sxs-lookup"><span data-stu-id="0469c-281">RIGHT ARROW</span></span>|<span data-ttu-id="0469c-282">{RIGHT}</span><span class="sxs-lookup"><span data-stu-id="0469c-282">{RIGHT}</span></span>|  
|<span data-ttu-id="0469c-283">스크롤 잠금</span><span class="sxs-lookup"><span data-stu-id="0469c-283">SCROLL LOCK</span></span>|<span data-ttu-id="0469c-284">{SCROLLLOCK}</span><span class="sxs-lookup"><span data-stu-id="0469c-284">{SCROLLLOCK}</span></span>|  
|<span data-ttu-id="0469c-285">Tab</span><span class="sxs-lookup"><span data-stu-id="0469c-285">TAB</span></span>|<span data-ttu-id="0469c-286">{TAB}</span><span class="sxs-lookup"><span data-stu-id="0469c-286">{TAB}</span></span>|  
|<span data-ttu-id="0469c-287">위쪽 화살표</span><span class="sxs-lookup"><span data-stu-id="0469c-287">UP ARROW</span></span>|<span data-ttu-id="0469c-288">{UP}</span><span class="sxs-lookup"><span data-stu-id="0469c-288">{UP}</span></span>|  
|<span data-ttu-id="0469c-289">F1</span><span class="sxs-lookup"><span data-stu-id="0469c-289">F1</span></span>|<span data-ttu-id="0469c-290">{F1}</span><span class="sxs-lookup"><span data-stu-id="0469c-290">{F1}</span></span>|  
|<span data-ttu-id="0469c-291">F2</span><span class="sxs-lookup"><span data-stu-id="0469c-291">F2</span></span>|<span data-ttu-id="0469c-292">{F2}</span><span class="sxs-lookup"><span data-stu-id="0469c-292">{F2}</span></span>|  
|<span data-ttu-id="0469c-293">F3</span><span class="sxs-lookup"><span data-stu-id="0469c-293">F3</span></span>|<span data-ttu-id="0469c-294">{F3}</span><span class="sxs-lookup"><span data-stu-id="0469c-294">{F3}</span></span>|  
|<span data-ttu-id="0469c-295">F4</span><span class="sxs-lookup"><span data-stu-id="0469c-295">F4</span></span>|<span data-ttu-id="0469c-296">{F4}</span><span class="sxs-lookup"><span data-stu-id="0469c-296">{F4}</span></span>|  
|<span data-ttu-id="0469c-297">F5</span><span class="sxs-lookup"><span data-stu-id="0469c-297">F5</span></span>|<span data-ttu-id="0469c-298">{F5}</span><span class="sxs-lookup"><span data-stu-id="0469c-298">{F5}</span></span>|  
|<span data-ttu-id="0469c-299">F6</span><span class="sxs-lookup"><span data-stu-id="0469c-299">F6</span></span>|<span data-ttu-id="0469c-300">{F6}</span><span class="sxs-lookup"><span data-stu-id="0469c-300">{F6}</span></span>|  
|<span data-ttu-id="0469c-301">F7</span><span class="sxs-lookup"><span data-stu-id="0469c-301">F7</span></span>|<span data-ttu-id="0469c-302">{F7}</span><span class="sxs-lookup"><span data-stu-id="0469c-302">{F7}</span></span>|  
|<span data-ttu-id="0469c-303">F8</span><span class="sxs-lookup"><span data-stu-id="0469c-303">F8</span></span>|<span data-ttu-id="0469c-304">{F8}</span><span class="sxs-lookup"><span data-stu-id="0469c-304">{F8}</span></span>|  
|<span data-ttu-id="0469c-305">F9</span><span class="sxs-lookup"><span data-stu-id="0469c-305">F9</span></span>|<span data-ttu-id="0469c-306">{F9}</span><span class="sxs-lookup"><span data-stu-id="0469c-306">{F9}</span></span>|  
|<span data-ttu-id="0469c-307">F10</span><span class="sxs-lookup"><span data-stu-id="0469c-307">F10</span></span>|<span data-ttu-id="0469c-308">{F10}</span><span class="sxs-lookup"><span data-stu-id="0469c-308">{F10}</span></span>|  
|<span data-ttu-id="0469c-309">F11</span><span class="sxs-lookup"><span data-stu-id="0469c-309">F11</span></span>|<span data-ttu-id="0469c-310">{F11}</span><span class="sxs-lookup"><span data-stu-id="0469c-310">{F11}</span></span>|  
|<span data-ttu-id="0469c-311">F12</span><span class="sxs-lookup"><span data-stu-id="0469c-311">F12</span></span>|<span data-ttu-id="0469c-312">{F12}</span><span class="sxs-lookup"><span data-stu-id="0469c-312">{F12}</span></span>|  
|<span data-ttu-id="0469c-313">F13</span><span class="sxs-lookup"><span data-stu-id="0469c-313">F13</span></span>|<span data-ttu-id="0469c-314">{F13}</span><span class="sxs-lookup"><span data-stu-id="0469c-314">{F13}</span></span>|  
|<span data-ttu-id="0469c-315">F14</span><span class="sxs-lookup"><span data-stu-id="0469c-315">F14</span></span>|<span data-ttu-id="0469c-316">{F14}</span><span class="sxs-lookup"><span data-stu-id="0469c-316">{F14}</span></span>|  
|<span data-ttu-id="0469c-317">F15</span><span class="sxs-lookup"><span data-stu-id="0469c-317">F15</span></span>|<span data-ttu-id="0469c-318">{F15}</span><span class="sxs-lookup"><span data-stu-id="0469c-318">{F15}</span></span>|  
|<span data-ttu-id="0469c-319">F16</span><span class="sxs-lookup"><span data-stu-id="0469c-319">F16</span></span>|<span data-ttu-id="0469c-320">{F16}</span><span class="sxs-lookup"><span data-stu-id="0469c-320">{F16}</span></span>|  
|<span data-ttu-id="0469c-321">키패드 추가</span><span class="sxs-lookup"><span data-stu-id="0469c-321">Keypad add</span></span>|<span data-ttu-id="0469c-322">{0} 추가}</span><span class="sxs-lookup"><span data-stu-id="0469c-322">{ADD}</span></span>|  
|<span data-ttu-id="0469c-323">키패드 빼기</span><span class="sxs-lookup"><span data-stu-id="0469c-323">Keypad subtract</span></span>|<span data-ttu-id="0469c-324">{빼기}</span><span class="sxs-lookup"><span data-stu-id="0469c-324">{SUBTRACT}</span></span>|  
|<span data-ttu-id="0469c-325">키패드 곱하기</span><span class="sxs-lookup"><span data-stu-id="0469c-325">Keypad multiply</span></span>|<span data-ttu-id="0469c-326">{곱하기}</span><span class="sxs-lookup"><span data-stu-id="0469c-326">{MULTIPLY}</span></span>|  
|<span data-ttu-id="0469c-327">키패드 나누기</span><span class="sxs-lookup"><span data-stu-id="0469c-327">Keypad divide</span></span>|<span data-ttu-id="0469c-328">{나누기}</span><span class="sxs-lookup"><span data-stu-id="0469c-328">{DIVIDE}</span></span>|  
  
 <span data-ttu-id="0469c-329">SHIFT, CTRL 및 ALT 키 조합을 사용 하 여 결합 된 키를 지정 하려면 하나 이상의 다음 코드를 사용 하 여 키 코드 앞에 야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-329">To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys, precede the key code with one or more of the following codes.</span></span>  
  
|<span data-ttu-id="0469c-330">Key</span><span class="sxs-lookup"><span data-stu-id="0469c-330">Key</span></span>|<span data-ttu-id="0469c-331">코드</span><span class="sxs-lookup"><span data-stu-id="0469c-331">Code</span></span>|  
|---------|----------|  
|<span data-ttu-id="0469c-332">SHIFT</span><span class="sxs-lookup"><span data-stu-id="0469c-332">SHIFT</span></span>|+|  
|<span data-ttu-id="0469c-333">CTRL</span><span class="sxs-lookup"><span data-stu-id="0469c-333">CTRL</span></span>|^|  
|<span data-ttu-id="0469c-334">ALT</span><span class="sxs-lookup"><span data-stu-id="0469c-334">ALT</span></span>|%|  
  
 <span data-ttu-id="0469c-335">SHIFT, CTRL 및 alt 키 조합을 다른 여러 키를 누르면 동안 보관 해야를 지정 하려면 해당 키에 대 한 코드를 괄호로 묶어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-335">To specify that any combination of SHIFT, CTRL, and ALT should be held down while several other keys are pressed, enclose the code for those keys in parentheses.</span></span> <span data-ttu-id="0469c-336">Shift 키를 누른 상태 E 및 C를 누르면를 지정 하려면 사용 예를 들어, "+ (EC)".</span><span class="sxs-lookup"><span data-stu-id="0469c-336">For example, to specify to hold down SHIFT while E and C are pressed, use "+(EC)".</span></span> <span data-ttu-id="0469c-337">Shift 키를 누른 뒤에, shift 키 없이 C, E를 누른 상태를 지정 하려면 "+ EC"입니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-337">To specify to hold down SHIFT while E is pressed, followed by C without SHIFT, use "+EC".</span></span>  
  
 <span data-ttu-id="0469c-338">반복 되는 키를 지정 하려면 형식을 {키 number 개를} 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-338">To specify repeating keys, use the form {key number}.</span></span> <span data-ttu-id="0469c-339">키와 숫자 사이 공백을 넣어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-339">You must put a space between key and number.</span></span> <span data-ttu-id="0469c-340">예를 들어 {왼쪽 42} 의미 42 번씩; 왼쪽 화살표 키를 눌러 {h 10} 키를 눌러 H 10 시간을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-340">For example, {LEFT 42} means press the LEFT ARROW key 42 times; {h 10} means press H 10 times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0469c-341">다른 응용 프로그램을 활성화 하려면 관리 되는 메서드가 없습니다 이기 때문에 현재 응용 프로그램 내에서이 클래스를 사용 하거나 같은 네이티브 Windows 메서드를 사용 하 여 `FindWindow` 고 `SetForegroundWindow`, 다른 응용 프로그램에 포커스를 둡니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-341">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0469c-342"><xref:System.Windows.Forms.SendKeys> 클래스는 Windows Vista에서 실행되는 응용 프로그램에서 사용할 수 있도록 .NET Framework 3.0에서 업데이트되었습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-342">The <xref:System.Windows.Forms.SendKeys> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</span></span> <span data-ttu-id="0469c-343">Windows Vista의 향상된 보안(사용자 계정 컨트롤 또는 UAC라고 함) 때문에 이전 구현이 예상대로 작동하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-343">The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</span></span>  
>   
>  <span data-ttu-id="0469c-344"><xref:System.Windows.Forms.SendKeys> 클래스는 타이밍 문제에 취약하며, 이를 해결하기 위해 일부 개발자가 노력해야 했습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-344">The <xref:System.Windows.Forms.SendKeys> class is susceptible to timing issues, which some developers have had to work around.</span></span> <span data-ttu-id="0469c-345">업데이트된 구현도 타이밍 문제에 취약하지만 약간 더 빠르며 해결 방법에 대한 변경이 필요할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-345">The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</span></span> <span data-ttu-id="0469c-346"><xref:System.Windows.Forms.SendKeys> 클래스는 먼저 이전 구현을 사용하려고 시도하며, 실패할 경우 새 구현을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-346">The <xref:System.Windows.Forms.SendKeys> class tries to use the previous implementation first, and if that fails, uses the new implementation.</span></span> <span data-ttu-id="0469c-347">따라서 <xref:System.Windows.Forms.SendKeys> 클래스는 운영 체제마다 다르게 동작할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-347">As a result, the <xref:System.Windows.Forms.SendKeys> class may behave differently on different operating systems.</span></span> <span data-ttu-id="0469c-348">또한 <xref:System.Windows.Forms.SendKeys> 클래스가 새 구현을 사용하는 경우 <xref:System.Windows.Forms.SendKeys.SendWait%2A> 메서드는 다른 프로세스로 전송된 메시지가 처리될 때까지 기다리지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-348">Additionally, when the <xref:System.Windows.Forms.SendKeys> class uses the new implementation, the <xref:System.Windows.Forms.SendKeys.SendWait%2A> method will not wait for messages to be processed when they are sent to another process.</span></span>  
>   
>  <span data-ttu-id="0469c-349">응용 프로그램이 운영 체제와 관계없이 일관된 동작에 의존하는 경우 app.config 파일에 다음 응용 프로그램 설정을 추가하여 <xref:System.Windows.Forms.SendKeys> 클래스에서 새 구현을 사용하도록 강제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-349">If your application relies on consistent behavior regardless of the operating system, you can force the <xref:System.Windows.Forms.SendKeys> class to use the new implementation by adding the following application setting to your app.config file.</span></span>  
>   
>  `<appSettings>`  
>   
>  `<add key="SendKeys" value="SendInput"/>`  
>   
>  `</appSettings>`  
>   
>  <span data-ttu-id="0469c-350"><xref:System.Windows.Forms.SendKeys> 클래스에서 이전 구현을 사용하도록 강제하려면 `"JournalHook"` 값을 대신 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-350">To force the <xref:System.Windows.Forms.SendKeys> class to use the previous implementation, use the value `"JournalHook"` instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0469c-351">다음 코드 예제를 사용 하는 방법에 설명 합니다 <xref:System.Windows.Forms.SendKeys.Send%2A> 메서드. 예제를 실행 하려면 다음 코드를 붙여 넣습니다. Form1 이라는 형태로 Button1 이라는 단추가 들어 있는입니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-351">The following code example demonstrates how to use the <xref:System.Windows.Forms.SendKeys.Send%2A> method.To run the example, paste the following code in a form called Form1 containing a button called Button1.</span></span> <span data-ttu-id="0469c-352">이 예제에서 해당 이벤트 처리 메서드를 사용 하 여 연결 클릭 이벤트를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-352">Ensure the click events are associated with their event-handling methods in this example.</span></span> <span data-ttu-id="0469c-353">단추 컨트롤의 <xref:System.Windows.Forms.Control.TabIndex%2A> 속성을 0으로 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-353">The button control's <xref:System.Windows.Forms.Control.TabIndex%2A> property should be set to 0.</span></span> <span data-ttu-id="0469c-354">예제를 실행 하는 경우 폼 트리거할 단추 클릭을 두 번 클릭 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-354">When the example is running, double-click the form to trigger the button's click event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.SendKeys#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.SendKeys#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.SendKeys#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.SendKeys/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0469c-355">키 입력을 보낼 활성 응용 프로그램이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-355">There is not an active application to send keystrokes to.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0469c-356"><paramref name="keys" />는 유효한 키 입력을 나타내지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-356"><paramref name="keys" /> does not represent valid keystrokes</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0469c-357">이 메서드를 호출 하는 관리 되지 않는 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-357">for unmanaged code to call this method.</span></span> <span data-ttu-id="0469c-358">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="0469c-358">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SendWait">
      <MemberSignature Language="C#" Value="public static void SendWait (string keys);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendWait(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SendKeys.SendWait(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SendWait (keys As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SendWait(System::String ^ keys);" />
      <MemberSignature Language="F#" Value="static member SendWait : string -&gt; unit" Usage="System.Windows.Forms.SendKeys.SendWait keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="0469c-359">보낼 키 입력의 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-359">The string of keystrokes to send.</span></span></param>
        <summary><span data-ttu-id="0469c-360">지정한 키를 활성 응용 프로그램에 보낸 다음 메시지가 처리되기를 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-360">Sends the given keys to the active application, and then waits for the messages to be processed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0469c-361">사용 하 여 <xref:System.Windows.Forms.SendKeys.SendWait%2A> 활성 응용 프로그램에서 키 입력의 조합 또는 키 입력 보내기 및 키 입력 메시지를 처리할 때까지 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-361">Use <xref:System.Windows.Forms.SendKeys.SendWait%2A> to send keystrokes or combinations of keystrokes to the active application and wait for the keystroke messages to be processed.</span></span> <span data-ttu-id="0469c-362">이 메서드는 응용 프로그램에 키 입력 보내기 완료 될 키 입력으로 시작 되는 모든 프로세스에 대 한 대기를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-362">You can use this method to send keystrokes to an application and wait for any processes that are started by the keystrokes to be completed.</span></span> <span data-ttu-id="0469c-363">이 다른 응용 프로그램에 응용 프로그램을 계속 하기 전에 완료 해야 하는 경우 중요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-363">This can be important if the other application must finish before your application can continue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0469c-364">다른 응용 프로그램을 활성화 하려면 관리 되는 메서드가 없습니다 이기 때문에 현재 응용 프로그램 내에서이 클래스를 사용 하거나 같은 네이티브 Windows 메서드를 사용 하 여 `FindWindow` 고 `SetForegroundWindow`, 다른 응용 프로그램에 포커스를 둡니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-364">Because there is no managed method to activate another application, you can either use this class within the current application or use native Windows methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0469c-365"><xref:System.Windows.Forms.SendKeys> 클래스는 Windows Vista에서 실행되는 응용 프로그램에서 사용할 수 있도록 .NET Framework 3.0에서 업데이트되었습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-365">The <xref:System.Windows.Forms.SendKeys> class has been updated for the .NET Framework 3.0 to enable its use in applications that run on Windows Vista.</span></span> <span data-ttu-id="0469c-366">Windows Vista의 향상된 보안(사용자 계정 컨트롤 또는 UAC라고 함) 때문에 이전 구현이 예상대로 작동하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-366">The enhanced security of Windows Vista (known as User Account Control or UAC) prevents the previous implementation from working as expected.</span></span>  
>   
>  <span data-ttu-id="0469c-367"><xref:System.Windows.Forms.SendKeys> 클래스는 타이밍 문제에 취약하며, 이를 해결하기 위해 일부 개발자가 노력해야 했습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-367">The <xref:System.Windows.Forms.SendKeys> class is susceptible to timing issues, which some developers have had to work around.</span></span> <span data-ttu-id="0469c-368">업데이트된 구현도 타이밍 문제에 취약하지만 약간 더 빠르며 해결 방법에 대한 변경이 필요할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-368">The updated implementation is still susceptible to timing issues, but is slightly faster and may require changes to the workarounds.</span></span> <span data-ttu-id="0469c-369"><xref:System.Windows.Forms.SendKeys> 클래스는 먼저 이전 구현을 사용하려고 시도하며, 실패할 경우 새 구현을 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-369">The <xref:System.Windows.Forms.SendKeys> class tries to use the previous implementation first, and if that fails, uses the new implementation.</span></span> <span data-ttu-id="0469c-370">따라서 <xref:System.Windows.Forms.SendKeys> 클래스는 운영 체제마다 다르게 동작할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-370">As a result, the <xref:System.Windows.Forms.SendKeys> class may behave differently on different operating systems.</span></span> <span data-ttu-id="0469c-371">또한 <xref:System.Windows.Forms.SendKeys> 클래스가 새 구현을 사용하는 경우 <xref:System.Windows.Forms.SendKeys.SendWait%2A> 메서드는 다른 프로세스로 전송된 메시지가 처리될 때까지 기다리지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-371">Additionally, when the <xref:System.Windows.Forms.SendKeys> class uses the new implementation, the <xref:System.Windows.Forms.SendKeys.SendWait%2A> method will not wait for messages to be processed when they are sent to another process.</span></span>  
>   
>  <span data-ttu-id="0469c-372">응용 프로그램이 운영 체제와 관계없이 일관된 동작에 의존하는 경우 app.config 파일에 다음 응용 프로그램 설정을 추가하여 <xref:System.Windows.Forms.SendKeys> 클래스에서 새 구현을 사용하도록 강제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-372">If your application relies on consistent behavior regardless of the operating system, you can force the <xref:System.Windows.Forms.SendKeys> class to use the new implementation by adding the following application setting to your app.config file.</span></span>  
>   
>  `<appSettings>`  
>   
>  `<add key="SendKeys" value="SendInput"/>`  
>   
>  `</appSettings>`  
>   
>  <span data-ttu-id="0469c-373"><xref:System.Windows.Forms.SendKeys> 클래스에서 이전 구현을 사용하도록 강제하려면 `"JournalHook"` 값을 대신 사용합니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-373">To force the <xref:System.Windows.Forms.SendKeys> class to use the previous implementation, use the value `"JournalHook"` instead.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="0469c-374">이 메서드를 호출 하는 관리 되지 않는 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="0469c-374">for unmanaged code to call this method.</span></span> <span data-ttu-id="0469c-375">연결 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="0469c-375">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>