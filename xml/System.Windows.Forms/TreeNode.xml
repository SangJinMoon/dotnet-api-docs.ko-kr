<Type Name="TreeNode" FullName="System.Windows.Forms.TreeNode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8c3c59bc2374dfbb512b90bb51bf71a0628b35fe" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30650987" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TreeNode : MarshalByRefObject, ICloneable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TreeNode extends System.MarshalByRefObject implements class System.ICloneable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TreeNode" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeNode&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNode : MarshalByRefObject, ICloneable, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeNodeConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Windows.Forms.TreeView" />의 노드를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Nodes%2A> 컬렉션 보관 모든 자식 <xref:System.Windows.Forms.TreeNode> 에 현재 할당 된 개체 <xref:System.Windows.Forms.TreeNode>합니다. 추가, 제거 또는 복제는 <xref:System.Windows.Forms.TreeNode>때가이 모든 자식 트리 노드 추가, 제거 또는 복제 작업을 수행 합니다. 각 <xref:System.Windows.Forms.TreeNode> 다른 컬렉션을 포함할 수 <xref:System.Windows.Forms.TreeNode> 개체입니다. 이 어려울 수 있습니다에 위치를 확인 하는 <xref:System.Windows.Forms.TreeView> 컬렉션을 반복 하는 경우. 트리 구조에서의 현재 위치를 확인 하려면 사용 하 여는 <xref:System.Windows.Forms.TreeNode.FullPath%2A> 속성입니다. <xref:System.Windows.Forms.TreeNode.FullPath%2A> 를 사용 하 여 문자열을 구문 분석할 수는 <xref:System.Windows.Forms.TreeView.PathSeparator%2A> 문자열 값 위치를 결정 한 <xref:System.Windows.Forms.TreeNode> 레이블의 시작 및 끝입니다.  
  
 <xref:System.Windows.Forms.TreeNode> 레이블은 설정 하 여 설정 됩니다는 <xref:System.Windows.Forms.TreeNode.Text%2A> 속성이 명시적으로 합니다. 대신 사용 하는 중 하나를 사용 하 여 트리 노드를 만드는 데는 <xref:System.Windows.Forms.TreeNode.%23ctor%2A> 나타내는 문자열 매개 변수를 가진 생성자는 <xref:System.Windows.Forms.TreeNode.Text%2A> 속성입니다. 레이블이 옆에 표시 됩니다는 <xref:System.Windows.Forms.TreeNode> 표시 되 면 이미지입니다.  
  
 트리 노드 옆에 이미지를 표시 하려면 할당는 <xref:System.Windows.Forms.ImageList> 에 <xref:System.Windows.Forms.TreeView.ImageList%2A> 부모 <xref:System.Windows.Forms.TreeView> 제어 하 고 할당 한 <xref:System.Drawing.Image> 에서 인덱스 값을 참조 하 여는 <xref:System.Windows.Forms.ImageList> 속성. 설정의 <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> 속성의 인덱스 값을는 <xref:System.Drawing.Image> 표시할 때는 <xref:System.Windows.Forms.TreeNode> 선택 되지 않은 상태입니다. 마찬가지로, 설정는 <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> 속성의 인덱스 값을는 <xref:System.Drawing.Image> 표시할 때의 <xref:System.Windows.Forms.TreeNode> 을 선택 합니다.  
  
 특정 트리 노드를 선택 하 고을 반복 하는 <xref:System.Windows.Forms.TreeView.Nodes%2A> 다음 속성 값을 사용 하 여 컬렉션을 수행할 수 있습니다: <xref:System.Windows.Forms.TreeNode.FirstNode%2A>, <xref:System.Windows.Forms.TreeNode.LastNode%2A>, <xref:System.Windows.Forms.TreeNode.NextNode%2A>, <xref:System.Windows.Forms.TreeNode.PrevNode%2A>, <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A>, <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A>합니다. 할당의 <xref:System.Windows.Forms.TreeNode> 를 앞에서 언급 한 속성 중 하나에서 반환 되는 <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType> 속성에서 해당 트리 노드를 선택 하는 <xref:System.Windows.Forms.TreeView> 컨트롤입니다.  
  
 다음 수준의 자식 트리 노드를 표시 하려면 트리 노드를 확장할 수 있습니다. 사용자를 확장할 수는 <xref:System.Windows.Forms.TreeNode> 더하기 키를 눌러 (+) 단추 옆에 <xref:System.Windows.Forms.TreeNode>표시 되어 또는 확장할 수 있습니다는 <xref:System.Windows.Forms.TreeNode> 호출 하 여는 <xref:System.Windows.Forms.TreeNode.Expand%2A> 메서드. 모든 자식 트리 노드 수준을 확장 하는 <xref:System.Windows.Forms.TreeNode.Nodes%2A> 컬렉션, 호출 된 <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> 메서드. 자식 축소할 수 <xref:System.Windows.Forms.TreeNode> 호출 하 여 수준는 <xref:System.Windows.Forms.TreeNode.Collapse%2A> 메서드 또는 사용자 빼기를 눌러 수 옆에 있는 (-) 단추가 <xref:System.Windows.Forms.TreeNode>표시 되 면, 합니다. 호출할 수도 있습니다는 <xref:System.Windows.Forms.TreeNode.Toggle%2A> 대체 하는 메서드는 <xref:System.Windows.Forms.TreeNode> 확장 및 축소 된 상태로 합니다.  
  
 트리 노드 확인란을 표시할 수 있습니다. 확인란을 표시 하려면 설정는 <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> 의 속성은 <xref:System.Windows.Forms.TreeView> 를 `true`합니다. <xref:System.Windows.Forms.TreeNode.Checked%2A> 속성이 `true` 선택된 된 상태에 있는 트리 노드에 대 한 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서 고객 정보를 표시 한 <xref:System.Windows.Forms.TreeView> 제어 합니다. 트리 루트 노드는 고객 이름이 표시 하 고 자식 트리 노드를 각 고객에 게 할당 된 주문 번호를 표시 합니다. 이 예제에서는 1000 명의 고객이 15 주문이 표시 됩니다. 다시는 <xref:System.Windows.Forms.TreeView> 를 사용 하 여 표시 되지 않는지는 <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> 및 <xref:System.Windows.Forms.TreeView.EndUpdate%2A> 메서드 및 대기 <xref:System.Windows.Forms.Cursor> 표시 됩니다는 동안는 <xref:System.Windows.Forms.TreeView> 만들고 그리는 <xref:System.Windows.Forms.TreeNode> 개체입니다. 이 예제를 실행 하려면는 `Customer` 개체의 컬렉션을 저장할 수 있는 `Order` 개체입니다. 인스턴스를 만든 위해서는 <xref:System.Windows.Forms.TreeView> 컨트롤에 <xref:System.Windows.Forms.Form>합니다.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TreeView" />
    <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.TreeNode" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.TreeNode" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 자식 트리 노드를 할당 하려면 루트 트리 노드를 만듭니다. 각 자식 트리 노드 `Customer` 개체는 <xref:System.Collections.ArrayList> 각 자식 트리 노드 뿐 아니라 루트 트리 노드의에 추가 됩니다 `Order` 에 할당 된 개체는 `Customer` 개체입니다. `Customer` 개체에 할당 된는 <xref:System.Windows.Forms.TreeNode.Tag%2A> 속성을 나타내는 트리 노드 `Customer` 개체 표시 되며 <xref:System.Drawing.Color.Orange%2A> 텍스트입니다. 이 예제를 실행 하려면는 `Customer` 및 `Order` 개체가 정의 되어 있고는 <xref:System.Windows.Forms.TreeView> 컨트롤에 <xref:System.Windows.Forms.Form>, 및 <xref:System.Collections.ArrayList> 라는 `customerArray` 포함 된 `Customer` 개체입니다.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">새 트리 노드의 레이블 <see cref="P:System.Windows.Forms.TreeNode.Text" />입니다.</param>
        <summary>지정된 레이블 텍스트를 사용하여 <see cref="T:System.Windows.Forms.TreeNode" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `text` 노드의에 매개 변수 값이 할당 <xref:System.Windows.Forms.TreeNode.Text%2A> 속성 고 트리 노드 레이블이 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서 고객 정보를 표시 한 <xref:System.Windows.Forms.TreeView> 제어 합니다. 트리 루트 노드는 고객 이름이 표시 하 고 자식 트리 노드를 각 고객에 게 할당 된 주문 번호를 표시 합니다. 이 예제에서는 1000 명의 고객이 15 주문이 표시 됩니다. 다시는 <xref:System.Windows.Forms.TreeView> 를 사용 하 여 표시 되지 않는지는 <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> 및 <xref:System.Windows.Forms.TreeView.EndUpdate%2A> 메서드 및 대기 <xref:System.Windows.Forms.Cursor> 표시 됩니다는 동안는 <xref:System.Windows.Forms.TreeView> 만들고 그리는 <xref:System.Windows.Forms.TreeNode> 개체입니다. 이 예제를 실행 하려면는 `Customer` 개체의 컬렉션을 저장할 수 있는 `Order` 개체입니다. 인스턴스를 만든 위해서는 <xref:System.Windows.Forms.TreeView> 컨트롤에 <xref:System.Windows.Forms.Form>합니다.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TreeNode (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TreeNode(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">클래스를 deserialize할 데이터가 들어 있는 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
        <param name="context">serialize된 스트림의 소스와 대상이 들어 있는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
        <summary>지정된 serialization 정보와 컨텍스트를 사용하여 <see cref="T:System.Windows.Forms.TreeNode" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, System.Windows.Forms.TreeNode[] children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class System.Windows.Forms.TreeNode[] children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String,System.Windows.Forms.TreeNode[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, children As TreeNode())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, cli::array &lt;System::Windows::Forms::TreeNode ^&gt; ^ children);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="children" Type="System.Windows.Forms.TreeNode[]" />
      </Parameters>
      <Docs>
        <param name="text">새 트리 노드의 레이블 <see cref="P:System.Windows.Forms.TreeNode.Text" />입니다.</param>
        <param name="children">자식 <see cref="T:System.Windows.Forms.TreeNode" /> 개체로 이루어진 배열입니다.</param>
        <summary>지정된 레이블 텍스트와 자식 트리 노드를 사용하여 <see cref="T:System.Windows.Forms.TreeNode" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `text` 노드의에 매개 변수 값이 할당 <xref:System.Windows.Forms.TreeNode.Text%2A> 속성 고 트리 노드 레이블이 됩니다. 에 포함 된 트리 노드는 `children` 배열에 추가 되는 <xref:System.Windows.Forms.TreeNodeCollection> 에 저장 된는 <xref:System.Windows.Forms.TreeNode.Nodes%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 자식 트리 노드를 할당 하려면 루트 트리 노드를 만듭니다. 각 자식 트리 노드 `Customer` 개체는 <xref:System.Collections.ArrayList> 각 자식 트리 노드 뿐 아니라 루트 트리 노드의에 추가 됩니다 `Order` 에 할당 된 개체는 `Customer` 개체입니다. `Customer` 개체에 할당 된는 <xref:System.Windows.Forms.TreeNode.Tag%2A> 속성을 나타내는 트리 노드 `Customer` 개체 표시 되며 <xref:System.Drawing.Color.Orange%2A> 텍스트입니다. 이 예제를 실행 하려면는 `Customer` 및 `Order` 개체가 정의 되어 있고는 <xref:System.Windows.Forms.TreeView> 컨트롤에 <xref:System.Windows.Forms.Form>, 및 <xref:System.Collections.ArrayList> 라는 `customerArray` 포함 된 `Customer` 개체입니다.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 imageIndex, int32 selectedImageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageIndex As Integer, selectedImageIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, int imageIndex, int selectedImageIndex);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="selectedImageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">새 트리 노드의 레이블 <see cref="P:System.Windows.Forms.TreeNode.Text" />입니다.</param>
        <param name="imageIndex">트리 노드를 선택하지 않은 상태일 때 표시할 <see cref="T:System.Drawing.Image" />의 인덱스 값입니다.</param>
        <param name="selectedImageIndex">트리 노드를 선택한 상태일 때 표시할 <see cref="T:System.Drawing.Image" />의 인덱스 값입니다.</param>
        <summary>트리 노드가 선택 상태 또는 선택하지 않은 상태에 있을 때 표시할 지정된 레이블 텍스트와 이미지를 사용하여 <see cref="T:System.Windows.Forms.TreeNode" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `text` 노드의에 매개 변수 값이 할당 <xref:System.Windows.Forms.TreeNode.Text%2A> 속성 고 트리 노드 레이블이 됩니다. `imageIndex` 및 `selectedImageIndex` 값의 인덱스 값은는 <xref:System.Drawing.Image> 에 저장 된 <xref:System.Windows.Forms.ImageList> 에 할당 된는 <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> 속성. 참조 하는 이미지는 `imageIndex` 속성 트리 노드가 선택 되지 않은 경우 표시 됩니다. 참조 된 이미지는 `selectedImageIndex` 속성은 트리 노드가 선택 된 상태에 있을 때 표시 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 만들고 할당는 <xref:System.Windows.Forms.ImageList> 에 <xref:System.Windows.Forms.TreeView> 컨트롤과 채우기는 <xref:System.Windows.Forms.TreeView> 보호로 <xref:System.Windows.Forms.TreeNode> 개체입니다. 트리 노드 이미지에서 할당 되는 <xref:System.Windows.Forms.ImageList> 트리 노드가 선택 되거나 선택 하지 않은 상태에 있을 때 표시 되는 합니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 를 포함 하는 <xref:System.Windows.Forms.TreeView>, 및 <xref:System.Collections.ArrayList> 포함 된 `Customer` 각각 포함 된 개체 `Order` 개체입니다. 또한 해야 하는 `Customer` 및 `Order` 개체를 정의 합니다.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, int imageIndex, int selectedImageIndex, System.Windows.Forms.TreeNode[] children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 imageIndex, int32 selectedImageIndex, class System.Windows.Forms.TreeNode[] children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.#ctor(System.String,System.Int32,System.Int32,System.Windows.Forms.TreeNode[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, imageIndex As Integer, selectedImageIndex As Integer, children As TreeNode())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, int imageIndex, int selectedImageIndex, cli::array &lt;System::Windows::Forms::TreeNode ^&gt; ^ children);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
        <Parameter Name="selectedImageIndex" Type="System.Int32" />
        <Parameter Name="children" Type="System.Windows.Forms.TreeNode[]" />
      </Parameters>
      <Docs>
        <param name="text">새 트리 노드의 레이블 <see cref="P:System.Windows.Forms.TreeNode.Text" />입니다.</param>
        <param name="imageIndex">트리 노드를 선택하지 않은 상태일 때 표시할 <see cref="T:System.Drawing.Image" />의 인덱스 값입니다.</param>
        <param name="selectedImageIndex">트리 노드를 선택한 상태일 때 표시할 <see cref="T:System.Drawing.Image" />의 인덱스 값입니다.</param>
        <param name="children">자식 <see cref="T:System.Windows.Forms.TreeNode" /> 개체로 이루어진 배열입니다.</param>
        <summary>트리 노드가 선택 상태 또는 선택하지 않은 상태에 있을 때 표시할 지정된 레이블 텍스트, 자식 트리 노드 및 이미지를 사용하여 <see cref="T:System.Windows.Forms.TreeNode" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `text` 노드의에 매개 변수 값이 할당 <xref:System.Windows.Forms.TreeNode.Text%2A> 속성 고 트리 노드 레이블이 됩니다. `imageIndex` 및 `selectedImageIndex` 값의 인덱스 값은는 <xref:System.Drawing.Image> 에 저장 된 <xref:System.Windows.Forms.ImageList> 에 할당 된는 <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> 속성. 참조 하는 이미지는 `imageIndex` 트리 노드가 선택 하지 않으면 매개 변수 표시 됩니다. 참조 된 이미지는 `selectedImageIndex` 매개 변수는 트리 노드가 선택 된 상태에 있을 때 표시 됩니다. 에 포함 된 트리 노드는 `children` 배열에 추가 되는 <xref:System.Windows.Forms.TreeNodeCollection> 에 저장 된는 <xref:System.Windows.Forms.TreeNode.Nodes%2A> 속성입니다.  
  
   
  
## Examples  
 다음 코드 예제를 만들고 할당는 <xref:System.Windows.Forms.ImageList> 에 <xref:System.Windows.Forms.TreeView> 컨트롤과 채우기는 <xref:System.Windows.Forms.TreeView> 보호로 <xref:System.Windows.Forms.TreeNode> 개체입니다. 트리 노드 이미지에서 할당 되는 <xref:System.Windows.Forms.ImageList> 트리 노드가 선택 되거나 선택 하지 않은 상태에 있을 때 표시 되는 합니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 를 포함 하는 <xref:System.Windows.Forms.TreeView>, 및 <xref:System.Collections.ArrayList> 포함 된 `Customer` 각각 포함 된 개체 `Order` 개체입니다. 또한 해야 하는 `Customer` 및 `Order` 개체를 정의 합니다.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리 노드의 배경색을 가져오거나 설정합니다.</summary>
        <value>트리 노드의 배경 <see cref="T:System.Drawing.Color" />입니다. 기본값은 <see cref="F:System.Drawing.Color.Empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.TreeNode.BackColor%2A> 속성이로 설정 되어 <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>, <xref:System.Drawing.Color> 는 사용는 <xref:System.Windows.Forms.Control.BackColor%2A> 의 속성 값은 <xref:System.Windows.Forms.TreeView> 트리 노드가 할당 된 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 강조 표시 <xref:System.Windows.Forms.TreeNode> 개체는 <xref:System.Windows.Forms.TreeView> 된 컨트롤을 해당 <xref:System.Windows.Forms.TreeNode.Checked%2A> 속성이로 설정 `true` 설정 하 여 해당 <xref:System.Windows.Forms.TreeNode.BackColor%2A> 속성을 <xref:System.Drawing.Color.Yellow%2A>합니다. 이 코드를 실행 하려면는 <xref:System.Windows.Forms.TreeView> 컨트롤에 <xref:System.Windows.Forms.Form> 컬렉션을 <xref:System.Windows.Forms.TreeNode> 개체입니다.  
  
 [!code-cpp[TreeNode_Checked#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Checked/CPP/treenode_checked.cpp#1)]
 [!code-csharp[TreeNode_Checked#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Checked/CS/treenode_checked.cs#1)]
 [!code-vb[TreeNode_Checked#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Checked/VB/treenode_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>트리 노드 레이블의 편집을 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하는 일반적인 시나리오에서 호출 하는 것은 <xref:System.Windows.Forms.MenuItem.Click> 의 이벤트는 <xref:System.Windows.Forms.MenuItem> 또는 <xref:System.Windows.Forms.ContextMenu>합니다.  
  
> [!NOTE]
>  경우에이 방법을 사용할는 <xref:System.Windows.Forms.TreeView.LabelEdit%2A> 의 속성은 <xref:System.Windows.Forms.TreeView> 로 설정 된 `true`합니다. 경우 <xref:System.Windows.Forms.TreeView.LabelEdit%2A> 로 설정 된 `false`, 예외가 throw 되 고 트리 노드가 편집 가능한 상태에 배치 되지 것입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용자가 사용 하 여 루트가 아닌 트리 노드를 편집할 수 있습니다는 <xref:System.Windows.Forms.ContextMenu>합니다. 마우스 오른쪽 단추로 클릭할 때는 <xref:System.Windows.Forms.TreeNode> 해당 위치가 결정 하 고 이라는 변수에 저장 `mySelectedNode`합니다. 루트가 아닌 트리 노드를 선택 하는 경우 배치 됩니다를 편집 가능한 상태로 노드 레이블을 편집할 수 있도록 허용 합니다. 사용자가 트리 노드 레이블 편집을 후 새 레이블 텍스트 평가 되 고 저장 합니다. 이 예에서는 여러 문자 레이블 텍스트에서 유효 간주 됩니다. 잘못 된 문자 중 하나에 레이블 문자열이 있거나 문자열이 비어, 사용자가 오류의 알림을 하 고 레이블을 이전 텍스트에 반환 됩니다.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Forms.TreeView.LabelEdit" />이 <see langword="false" />로 설정됩니다.</exception>
        <altmember cref="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsEditing" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리 노드의 경계를 가져옵니다.</summary>
        <value>트리 노드의 경계를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 왼쪽 위 모퉁이가 기준 좌표가 <xref:System.Windows.Forms.TreeView> 제어 합니다.  
  
   
  
## Examples  
 크기를 변경 하는 다음 코드 예제에서는 <xref:System.Windows.Forms.TreeNode.NodeFont%2A> 지정된 된 크기를 조정 하 고는 <xref:System.Windows.Forms.TreeView.ItemHeight%2A> 트리 노드의 부모 <xref:System.Windows.Forms.TreeView> 제어 합니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 를 포함 하는 <xref:System.Windows.Forms.TreeView> 컨트롤의 컬렉션을 <xref:System.Windows.Forms.TreeNode> 개체 및 <xref:System.Windows.Forms.ComboBox> 글꼴 크기를 포함 하는 합니다.  
  
 [!code-cpp[TreeNode_Bounds#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#2)]
 [!code-csharp[TreeNode_Bounds#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#2)]
 [!code-vb[TreeNode_Bounds#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리 노드가 선택되어 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          트리 노드가 선택되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 강조 표시 <xref:System.Windows.Forms.TreeNode> 개체는 <xref:System.Windows.Forms.TreeView> 된 컨트롤을 해당 <xref:System.Windows.Forms.TreeNode.Checked%2A> 속성이로 설정 `true` 설정 하 여 해당 <xref:System.Windows.Forms.TreeNode.BackColor%2A> 속성을 <xref:System.Drawing.Color.Yellow%2A>합니다. 이 코드를 실행 하려면는 <xref:System.Windows.Forms.TreeView> 컨트롤에 <xref:System.Windows.Forms.Form> 컬렉션을 <xref:System.Windows.Forms.TreeNode> 개체입니다.  
  
 [!code-cpp[TreeNode_Checked#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Checked/CPP/treenode_checked.cpp#1)]
 [!code-csharp[TreeNode_Checked#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Checked/CS/treenode_checked.cs#1)]
 [!code-vb[TreeNode_Checked#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Checked/VB/treenode_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>트리 노드와 이 트리 노드에서 시작하는 전체 하위 트리를 복사합니다.</summary>
        <returns>복제된 <see cref="T:System.Object" />를 나타내는 <see cref="T:System.Windows.Forms.TreeNode" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 트리 구조 아래 하 고 복제 된 트리 노드에서 복사 됩니다. 에 할당 된 모든 자식 트리 노드는 <xref:System.Windows.Forms.TreeNode> 새 트리 노드 및 하위 트리에 포함 된 복제 중인 합니다.  
  
 <xref:System.Windows.Forms.TreeNode.Clone%2A> 메서드는 노드의 단순 복사본을 수행 합니다. 하는 경우의 값은 <xref:System.Windows.Forms.TreeNode.Tag%2A> 속성은 참조 형식, 원본 및 복제 복사본의 동일한 단일 인스턴스를 가리킵니다는 <xref:System.Windows.Forms.TreeNode.Tag%2A> 값입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 마지막 루트 트리 노드의 마지막 자식 트리 노드를 복제 하 고 첫 번째 루트 트리 노드 삽입는 `TreeNodeCollection`합니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.TreeView> 컨트롤에 <xref:System.Windows.Forms.Form> 의 컬렉션을 포함 하는 <xref:System.Windows.Forms.TreeNode> 개체 및 <xref:System.Windows.Forms.Button>합니다.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#3)]
 [!code-csharp[TreeNode_EnsureVisible_4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#3)]
 [!code-vb[TreeNode_EnsureVisible_4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Remove" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Collapse">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.TreeNode" />를 축소합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Collapse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>트리 노드를 축소합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Collapse%2A> 메서드 축소 현재 <xref:System.Windows.Forms.TreeNode> 및 해당 자식 노드. 현재 축소 하려는 경우 <xref:System.Windows.Forms.TreeNode>를 사용 하 여는 <xref:System.Windows.Forms.TreeNode.Collapse%28System.Boolean%29?displayProperty=nameWithType> 전달 하는 오버 로드 `true` 해당 자식 노드를 무시 하도록 합니다.  
  
> [!NOTE]
>  상태는 <xref:System.Windows.Forms.TreeNode> 유지 됩니다. 예를 들어, 다음 수준의 자식 노드 축소 되지 않았으면 이전에 시기는 <xref:System.Windows.Forms.TreeNode.Expand%2A> 메서드가 호출 되 면 해당 자식 노드는 이전에 확장 된 상태로 나타납니다.  
  
   
  
## Examples  
 다음 코드 예제는 단추를 클릭할 때 선택 된 노드를 전환 합니다. 선택한 노드가 축소 된 확장을 호출 하 여 확장 된 경우는 <xref:System.Windows.Forms.TreeNode.Expand%2A> 메서드를 호출 하 여 축소 된는 <xref:System.Windows.Forms.TreeNode.Collapse%2A> 메서드. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.TreeView> 하나 이상 있는 컨트롤이 <xref:System.Windows.Forms.TreeNode> 하나 이상의 자식으로 <xref:System.Windows.Forms.TreeNode>합니다.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#1)]
 [!code-csharp[TreeNode_EnsureVisible_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#1)]
 [!code-vb[TreeNode_EnsureVisible_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Toggle" />
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse (bool ignoreChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse(bool ignoreChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Collapse(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse (ignoreChildren As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse(bool ignoreChildren);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ignoreChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ignoreChildren">
          자식 노드를 현재 상태로 두려면 <see langword="true" />이고, 자식 노드를 축소하려면 <see langword="false" />입니다.</param>
        <summary>
          <see cref="T:System.Windows.Forms.TreeNode" />를 축소하고 선택적으로 해당 자식을 축소합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Windows.Forms.TreeNode.Collapse%2A> 전달 메서드 `true`노드 축소 하지만 해당 자식 노드는 확장 된 상태로 유지 하려는 경우.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenu ContextMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenu ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenu As ContextMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenu ^ ContextMenu { System::Windows::Forms::ContextMenu ^ get(); void set(System::Windows::Forms::ContextMenu ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 트리 노드와 연결된 바로 가기 메뉴를 가져옵니다.</summary>
        <value>트리 노드와 연결된 <see cref="T:System.Windows.Forms.ContextMenu" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 와 트리 노드 바로 가기 메뉴를 연결 하는 기본 방법은 <xref:System.Windows.Forms.TreeNode.ContextMenuStrip%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStrip">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenuStrip ContextMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ContextMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenuStrip As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenuStrip ^ ContextMenuStrip { System::Windows::Forms::ContextMenuStrip ^ get(); void set(System::Windows::Forms::ContextMenuStrip ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 트리 노드와 연결된 바로 가기 메뉴를 가져오거나 설정합니다.</summary>
        <value>트리 노드와 연결된 <see cref="T:System.Windows.Forms.ContextMenuStrip" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 바로 가기 메뉴에는 트리 노드를 클릭할 때 표시 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="protected virtual void Deserialize (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Deserialize(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Deserialize(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 설명하는 <see cref="T:System.Windows.Forms.TreeNode" />입니다.</param>
        <param name="context">deserialize하는 동안 스트림의 상태를 나타내는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
        <summary>지정된 <see cref="T:System.Windows.Forms.TreeNode" />에서 <see cref="T:System.Runtime.Serialization.SerializationInfo" />의 상태를 로드합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit (cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit(bool cancel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel">
          트리 노드 레이블 텍스트를 편집한 내용이 저장되지 않고 취소되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>트리 노드 레이블의 편집을 마칩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 사용자가 사용 하 여 루트가 아닌 트리 노드를 편집할 수 있습니다는 <xref:System.Windows.Forms.ContextMenu>합니다. 마우스를 마우스 오른쪽 단추로 클릭할 때는 <xref:System.Windows.Forms.TreeNode> 해당 위치가 결정 하 고 이라는 변수에 저장 `mySelectedNode`합니다. 루트가 아닌 트리 노드를 선택 하는 경우 배치 됩니다를 편집 가능한 상태로 노드 레이블을 편집할 수 있도록 허용 합니다. 사용자가 트리 노드 레이블 편집을 후 새 레이블 텍스트 평가 되 고 저장 합니다. 이 예에서는 여러 문자 레이블 텍스트에서 유효 간주 됩니다. 잘못 된 문자 중 하나에 레이블 문자열이 있거나 문자열이 비어, 사용자가 오류의 알림을 하 고 레이블을 이전 텍스트에 반환 됩니다.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsEditing" />
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.EnsureVisible" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureVisible ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureVisible();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>트리 노드가 표시되고 확장되며 트리 뷰 컨트롤이 충분히 스크롤되는지 확인합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.TreeNode.EnsureVisible%2A> 메서드가 호출 되 면 트리 확장 되 고 현재 트리 노드의에 표시 되도록 스크롤되므로 <xref:System.Windows.Forms.TreeView>합니다. 이 메서드는 특정 기준에 따라 코드에서 트리 노드를 선택 하는 경우에 유용 합니다. 이 메서드를 호출한 후 노드를 선택 하 여 사용자는 참조할 수 있으며 선택한 노드와 상호 작용.  
  
> [!NOTE]
>  경우는 <xref:System.Windows.Forms.TreeView.ItemHeight%2A?displayProperty=nameWithType> 속성이이 메서드를 호출 트리 뷰 컨트롤의 높이 보다 큰 값으로 설정 되어 예기치 않은 결과입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 마지막 자식 마지막 루트 트리 노드의 노드를 트리 뷰로 가져옵니다 트리 보기에서 단추를 클릭할 때. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.TreeView> 컨트롤에 <xref:System.Windows.Forms.Form> 의 컬렉션을 포함 하는 <xref:System.Windows.Forms.TreeNode> 개체 및 <xref:System.Windows.Forms.Button>합니다. 트리 뷰 컨트롤에 모두 표시 되므로 트리 노드가 충분히 있어야 합니다.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#2)]
 [!code-csharp[TreeNode_EnsureVisible_4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#2)]
 [!code-vb[TreeNode_EnsureVisible_4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public void Expand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Expand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Expand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Expand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Expand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>트리 노드를 확장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Expand%2A> 메서드는 현재 확장 <xref:System.Windows.Forms.TreeNode> 노드의 다음 수준으로 됩니다.  
  
> [!NOTE]
>  상태는 <xref:System.Windows.Forms.TreeNode> 유지 됩니다. 예를 들어, 다음 수준의 자식 노드 축소 되지 않았으면 이전에 시기는 <xref:System.Windows.Forms.TreeNode.Expand%2A> 메서드가 호출 되 면 해당 자식 노드는 이전에 확장 된 상태로 나타납니다.  
  
   
  
## Examples  
 다음 코드 예제는 단추를 클릭할 때 선택 된 노드를 전환 합니다. 선택한 노드가 축소 된 확장을 호출 하 여 확장 된 경우는 <xref:System.Windows.Forms.TreeNode.Expand%2A> 메서드를 호출 하 여 축소 된는 <xref:System.Windows.Forms.TreeNode.Collapse%2A> 메서드. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.TreeView> 하나 이상 있는 컨트롤이 <xref:System.Windows.Forms.TreeNode> 하나 이상의 자식으로 <xref:System.Windows.Forms.TreeNode>합니다.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#1)]
 [!code-csharp[TreeNode_EnsureVisible_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#1)]
 [!code-vb[TreeNode_EnsureVisible_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Toggle" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>자식 트리 노드를 모두 확장합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> 에 할당 된 모든 자식 트리 노드를 확장 하는 메서드는 <xref:System.Windows.Forms.TreeNode.Nodes%2A> 컬렉션입니다.  
  
> [!NOTE]
>  상태는 <xref:System.Windows.Forms.TreeNode> 유지 됩니다. 예를 들어, 다음 수준의 자식 노드 축소 되지 않았으면 이전에 시기는 <xref:System.Windows.Forms.TreeNode.Expand%2A> 메서드가 호출 되 면 해당 자식 노드는 이전에 확장 된 상태로 나타납니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 확장의 모든 트리 노드는 <xref:System.Windows.Forms.TreeView> 시점을 제어할는 <xref:System.Windows.Forms.CheckBox> 선택 되 고 축소는 <xref:System.Windows.Forms.TreeNode.FirstNode%2A> 때는 <xref:System.Windows.Forms.CheckBox> 지워집니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.CheckBox>, 및 <xref:System.Windows.Forms.TreeView> 보호로 <xref:System.Windows.Forms.TreeNodeCollection> 에 여러 개의 <xref:System.Windows.Forms.TreeNode> 개체 (가급적 3 개 이상의 수준).  
  
 [!code-cpp[TreeNode_ForeColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#1)]
 [!code-csharp[TreeNode_ForeColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#1)]
 [!code-vb[TreeNode_ForeColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Toggle" />
      </Docs>
    </Member>
    <Member MemberName="FirstNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode FirstNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode FirstNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.FirstNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ FirstNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리 노드 컬렉션에 있는 첫째 자식 트리 노드를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNode" /> 컬렉션에 있는 첫째 자식 <see cref="P:System.Windows.Forms.TreeNode.Nodes" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.FirstNode%2A> 첫 번째 자식 <xref:System.Windows.Forms.TreeNode> 에 <xref:System.Windows.Forms.TreeNodeCollection> 에 저장 된는 <xref:System.Windows.Forms.TreeNode.Nodes%2A> 현재 트리 노드의 속성입니다. 경우는 <xref:System.Windows.Forms.TreeNode> 없는 자식 트리 노드는 <xref:System.Windows.Forms.TreeNode.FirstNode%2A> 속성에서 반환 `null`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 적절 한 선택 <xref:System.Windows.Forms.TreeNode> 확인 한 후는 <xref:System.Windows.Forms.TreeNode> 전달 선택 및 <xref:System.Windows.Forms.TreeNode> 을 선택 합니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.TreeView> 된 컨트롤을 한 <xref:System.Windows.Forms.TreeNodeCollection> 몇 개 포함 하 <xref:System.Windows.Forms.TreeNode> 개체입니다. 또한가 있어야는 <xref:System.Windows.Forms.ComboBox> 다음 항목이 포함: "이전", "PreviousVisible", "다음", "NextVisible", "First" 및 "마지막".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리 노드의 전경색을 가져오거나 설정합니다.</summary>
        <value>트리 노드의 전경 <see cref="T:System.Drawing.Color" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 `null`, <xref:System.Drawing.Color> 는 사용는 <xref:System.Windows.Forms.Control.ForeColor%2A> 의 속성 값은 <xref:System.Windows.Forms.TreeView> 트리 노드가 할당 된 컨트롤입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 자식 트리 노드를 할당 하려면 루트 트리 노드를 만듭니다. 각 자식 트리 노드 `Customer` 개체는 <xref:System.Collections.ArrayList> 각 자식 트리 노드 뿐 아니라 루트 트리 노드의에 추가 됩니다 `Order` 에 할당 된 개체는 `Customer` 개체입니다. `Customer` 개체에 할당 된는 <xref:System.Windows.Forms.TreeNode.Tag%2A> 속성을 나타내는 트리 노드 `Customer` 개체 표시 되며 <xref:System.Drawing.Color.Orange%2A> 텍스트입니다. 이 예제를 실행 하려면는 `Customer` 및 `Order` 개체가 정의 되어 있고는 <xref:System.Windows.Forms.TreeView> 컨트롤에 <xref:System.Windows.Forms.Form>, 및 <xref:System.Collections.ArrayList> 라는 `customerArray` 포함 된 `Customer` 개체입니다.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.TreeNode FromHandle (System.Windows.Forms.TreeView tree, IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.TreeNode FromHandle(class System.Windows.Forms.TreeView tree, native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.FromHandle(System.Windows.Forms.TreeView,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (tree As TreeView, handle As IntPtr) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::TreeNode ^ FromHandle(System::Windows::Forms::TreeView ^ tree, IntPtr handle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tree" Type="System.Windows.Forms.TreeView" />
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="tree">트리 노드가 들어 있는 <see cref="T:System.Windows.Forms.TreeView" />입니다.</param>
        <param name="handle">트리 노드의 핸들입니다.</param>
        <summary>지정된 핸들을 사용하여 지정된 트리 뷰 컨트롤에 할당된 트리 노드를 반환합니다.</summary>
        <returns>지정된 핸들을 사용하여 지정된 <see cref="T:System.Windows.Forms.TreeNode" /> 컨트롤에 할당된 트리 노드를 나타내는 <see cref="T:System.Windows.Forms.TreeView" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 노드에 추가 된 경우는 <xref:System.Windows.Forms.TreeView.Nodes%2A?displayProperty=nameWithType> 컬렉션은 <xref:System.Windows.Forms.TreeView> 컨트롤 노드 핸들을 사용할 수 있으려면 NM_CUSTOMDRAW 알림을 보냅니다. 재정의 하는 경우는 <xref:System.Windows.Forms.Control.WndProc%2A> 의 메서드는 <xref:System.Windows.Forms.TreeView> 이 알림에 대 한 응답으로 사용자 지정 그리기를 제공 하려면 항상 확인 해야에 대 한이 메서드의 반환 값 `null` 노드에 액세스 하려고 하기 전에.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.TreeNode> 를 축소 하 고 사용 하 여의 복사본을 만듭니다 해당 <xref:System.Windows.Forms.TreeNode.Handle%2A> 속성입니다. 원래 <xref:System.Windows.Forms.TreeNode> 에서 제거 되는 <xref:System.Windows.Forms.TreeNodeCollection>, 복사본을 컬렉션에 추가 됩니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.TreeView> 컨트롤입니다. <xref:System.Windows.Forms.TreeView> 컨트롤 두 개 이상의 루트 노드를 각각 갖습니다 자식 노드가 하나 이상 필요 합니다.  
  
 [!code-cpp[Windows.Forms.TreeNode#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#3)]
 [!code-csharp[Windows.Forms.TreeNode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#3)]
 [!code-vb[Windows.Forms.TreeNode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.TreeView" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>루트 트리 노드에서 현재 트리 노드까지의 경로를 가져옵니다.</summary>
        <value>루트 트리 노드에서 현재 트리 노드까지의 경로입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경로 루트 트리 노드에서 시작이 트리 노드에를 탐색 해야 하는 모든 트리 노드 레이블 이루어져 있습니다. 노드 레이블을에 지정 된 구분 기호 문자로 구분 됩니다는 <xref:System.Windows.Forms.TreeView.PathSeparator%2A> 속성의는 <xref:System.Windows.Forms.TreeView> 컨트롤이이 노드를 포함 합니다. 트리 뷰 컨트롤의 구분 기호 문자 "Location" 이라는 경우 백슬래시 문자로 설정 하는 예를 들어 (\\), <xref:System.Windows.Forms.TreeNode.FullPath%2A> 속성이 설정 되어 "있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.TreeView.PathSeparator%2A> 속성은 <xref:System.Windows.Forms.TreeView> 에 포함 된 자식 트리 노드 수를 표시 하 고는 <xref:System.Windows.Forms.TreeNodeCollection> 의 <xref:System.Windows.Forms.TreeView.SelectedNode%2A>합니다. 자식 트리 노드 트리 뷰 컨트롤의 전체 트리 노드를 백분율로 표시 됩니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.Button>, 및 <xref:System.Windows.Forms.TreeView> 보호로 <xref:System.Windows.Forms.TreeNodeCollection> 에 여러 개의 <xref:System.Windows.Forms.TreeNode> 개체 (가급적 3 개 이상의 수준).  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Windows.Forms.TreeView" />에 노드가 없는 경우</exception>
        <altmember cref="P:System.Windows.Forms.TreeView.PathSeparator" />
      </Docs>
    </Member>
    <Member MemberName="GetNodeCount">
      <MemberSignature Language="C#" Value="public int GetNodeCount (bool includeSubTrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNodeCount(bool includeSubTrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.GetNodeCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeCount (includeSubTrees As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNodeCount(bool includeSubTrees);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSubTrees" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeSubTrees">
          결과 수에 이 트리 노드에서 시작하는 하위 트리 노드까지 모두 포함되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
        <summary>자식 트리 노드의 수를 반환합니다.</summary>
        <returns>
          <see cref="P:System.Windows.Forms.TreeNode.Nodes" /> 컬렉션에 할당된 자식 트리 노드의 수입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.TreeView.PathSeparator%2A> 속성은 <xref:System.Windows.Forms.TreeView> 에 포함 된 자식 트리 노드 수를 표시 하 고는 <xref:System.Windows.Forms.TreeNodeCollection> 의 <xref:System.Windows.Forms.TreeView.SelectedNode%2A>합니다. 자식 트리 노드 트리 뷰 컨트롤의 전체 트리 노드를 백분율로 표시 됩니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.Button>, 및 <xref:System.Windows.Forms.TreeView> 보호로 <xref:System.Windows.Forms.TreeNodeCollection> 에 여러 개의 <xref:System.Windows.Forms.TreeNode> 개체 (가급적 3 개 이상의 수준).  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.Nodes" />
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리 노드의 핸들을 가져옵니다.</summary>
        <value>트리 노드 핸들입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 핸들을 아직 만들어지지 않았을 경우 시기는 <xref:System.Windows.Forms.TreeNode.Handle%2A> 속성이 나 참조, 생성 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 <xref:System.Windows.Forms.TreeNode> 를 축소 하 고 사용 하 여의 복사본을 만듭니다 해당 <xref:System.Windows.Forms.TreeNode.Handle%2A> 속성입니다. 원래 <xref:System.Windows.Forms.TreeNode> 에서 제거 되는 <xref:System.Windows.Forms.TreeNodeCollection>, 복사본을 컬렉션에 추가 됩니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.TreeView> 컨트롤입니다. <xref:System.Windows.Forms.TreeView> 컨트롤 두 개 이상의 루트 노드를 각각 갖습니다 자식 노드가 하나 이상 필요 합니다.  
  
 [!code-cpp[Windows.Forms.TreeNode#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#3)]
 [!code-csharp[Windows.Forms.TreeNode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#3)]
 [!code-vb[Windows.Forms.TreeNode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리 노드를 선택하지 않은 상태일 때 표시되는 이미지의 이미지 목록 인덱스 값을 가져오거나 설정합니다.</summary>
        <value>할당된 <see cref="T:System.Windows.Forms.ImageList" />에서 이미지의 위치를 나타내는 인덱스(0부터 시작) 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> 값의 인덱스 값은는 <xref:System.Drawing.Image> 에 저장 된 <xref:System.Windows.Forms.ImageList> 에 할당 된는 <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> 속성.  
  
> [!NOTE]
>  기본값인은 <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> 속성은 동일는 <xref:System.Windows.Forms.TreeView.ImageIndex%2A> 속성의는 <xref:System.Windows.Forms.TreeView> 하는 컨트롤을 <xref:System.Windows.Forms.TreeNode> 에 할당 됩니다.  
  
 <xref:System.Windows.Forms.TreeNode.ImageKey%2A> 및 <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> 속성은 함께 사용할 수 없습니다; 따라서 한 속성을 설정 하는 경우 다른은 무시 됩니다. 설정 하는 경우는 <xref:System.Windows.Forms.TreeNode.ImageKey%2A> 속성에는 <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> 속성이-1로 자동 설정 됩니다. 또는 설정한 경우 <xref:System.Windows.Forms.TreeNode.ImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.ImageKey%2A> 빈 문자열을 자동으로 설정 됩니다 ("").  
  
   
  
## Examples  
 다음 코드 예제를 만들고 할당는 <xref:System.Windows.Forms.ImageList> 에 <xref:System.Windows.Forms.TreeView> 컨트롤과 채우기는 <xref:System.Windows.Forms.TreeView> 보호로 <xref:System.Windows.Forms.TreeNode> 개체입니다. 트리 노드 이미지에서 할당 되는 <xref:System.Windows.Forms.ImageList> 트리 노드가 선택 되거나 선택 하지 않은 상태에 있을 때 표시 되는 합니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 를 포함 하는 <xref:System.Windows.Forms.TreeView>, 및 <xref:System.Collections.ArrayList> 포함 된 `Customer` 각각 포함 된 개체 `Order` 개체입니다. 또한 해야 하는 `Customer` 및 `Order` 개체를 정의 합니다.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.TreeView.ImageList" />
        <altmember cref="P:System.Windows.Forms.TreeNode.SelectedImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리 노드가 선택되지 않은 상태일 때 이 트리 노드와 연결된 이미지의 키를 가져오거나 설정합니다.</summary>
        <value>트리 노드가 선택되지 않은 상태일 때 이 트리 노드와 연결된 이미지의 키입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에서 반환 하는 이미지 키에 포함 되어는 <xref:System.Windows.Forms.TreeView.ImageList%2A> 포함 하는 속성 <xref:System.Windows.Forms.TreeView> 제어 합니다.  
  
 <xref:System.Windows.Forms.TreeNode.ImageKey%2A> 대/소문자가 있습니다.  
  
 <xref:System.Windows.Forms.TreeNode.ImageKey%2A> 및 <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> 속성은 함께; 하나의 속성이 설정 되어 다른는 무시 됩니다. 설정 하는 경우는 <xref:System.Windows.Forms.TreeNode.ImageKey%2A> 속성에는 <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> 속성이-1로 자동 설정 됩니다. 또는 설정한 경우 <xref:System.Windows.Forms.TreeNode.ImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.ImageKey%2A> 빈 문자열을 자동으로 설정 됩니다 ("").  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리 노드 컬렉션에 있는 트리 노드의 위치를 가져옵니다.</summary>
        <value>
          <see cref="P:System.Windows.Forms.TreeNode.Nodes" /> 컬렉션에 있는 트리 노드의 위치를 나타내는 인덱스(0부터 시작하는) 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.TreeNode.Text%2A> 및 <xref:System.Windows.Forms.TreeNode.Index%2A> 의 속성 값은 <xref:System.Windows.Forms.TreeNode> 가 나타내는 <xref:System.Windows.Forms.TreeNode.Parent%2A> 속성의는 <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType>합니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.TreeView> 컨트롤입니다. <xref:System.Windows.Forms.TreeView> 자식 노드를 하나 이상 가지 각각는 루트 노드가 두 개 이상 있어야 합니다.  
  
 [!code-cpp[Windows.Forms.TreeNode#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#2)]
 [!code-csharp[Windows.Forms.TreeNode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#2)]
 [!code-vb[Windows.Forms.TreeNode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditing">
      <MemberSignature Language="C#" Value="public bool IsEditing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsEditing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditing { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리 노드가 편집 가능한 상태에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          트리 노드가 편집 가능한 상태이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 사용자가 사용 하 여 루트가 아닌 트리 노드를 편집할 수 있습니다는 <xref:System.Windows.Forms.ContextMenu>합니다. 마우스를 마우스 오른쪽 단추로 클릭할 때는 <xref:System.Windows.Forms.TreeNode> 해당 위치가 결정 하 고 이라는 변수에 저장 `mySelectedNode`합니다. 루트가 아닌 트리 노드를 선택 하는 경우 배치 됩니다를 편집 가능한 상태로 사용자 노드 레이블을 편집할 수 있도록 합니다. 사용자가 트리 노드 레이블 편집을 후 새 레이블 텍스트 평가 되 고 저장 합니다. 이 예에서는 여러 문자 레이블 텍스트에서 유효 간주 됩니다. 잘못 된 문자 중 하나에 레이블 문자열이 있거나 문자열이 비어, 사용자가 오류의 알림을 하 고 레이블을 이전 텍스트에 반환 됩니다.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsExpanded">
      <MemberSignature Language="C#" Value="public bool IsExpanded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpanded" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsExpanded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExpanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExpanded { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리 노드가 확장된 상태에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          트리 노드가 확장된 상태이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제는 단추를 클릭할 때 선택 된 노드를 전환 합니다. 선택한 노드가 축소 된 확장을 호출 하 여 확장 된 경우는 <xref:System.Windows.Forms.TreeNode.Expand%2A> 메서드를 호출 하 여 축소 된는 <xref:System.Windows.Forms.TreeNode.Collapse%2A> 메서드. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.TreeView> 하나 이상 있는 컨트롤이 <xref:System.Windows.Forms.TreeNode> 하나 이상의 자식으로 <xref:System.Windows.Forms.TreeNode>합니다.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#1)]
 [!code-csharp[TreeNode_EnsureVisible_4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#1)]
 [!code-vb[TreeNode_EnsureVisible_4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="IsSelected">
      <MemberSignature Language="C#" Value="public bool IsSelected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsSelected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리 노드가 선택 상태에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          트리 노드가 선택된 상태이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 적절 한 선택 <xref:System.Windows.Forms.TreeNode> 확인 한 후는 <xref:System.Windows.Forms.TreeNode> 전달 선택 및 <xref:System.Windows.Forms.TreeNode> 을 선택 합니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.TreeView> 된 컨트롤을 한 <xref:System.Windows.Forms.TreeNodeCollection> 몇 개 포함 <xref:System.Windows.Forms.TreeNode> 개체입니다. 또한가 있어야는 <xref:System.Windows.Forms.ComboBox> 다음 항목이 포함: "이전", "PreviousVisible", "다음", "NextVisible", "First" 및 "마지막".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisible { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리 노드의 전체 또는 일부가 표시되는지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>
          트리 노드의 전체 또는 일부가 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 마지막 자식 마지막 루트 트리 노드의 노드를 트리 뷰로 가져옵니다 트리 보기에서 단추를 클릭할 때. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.TreeView> 컨트롤에 <xref:System.Windows.Forms.Form> 의 컬렉션을 포함 하는 <xref:System.Windows.Forms.TreeNode> 개체 및 <xref:System.Windows.Forms.Button>합니다. 트리 뷰 컨트롤에 모두 표시 되므로 트리 노드가 충분히 있어야 합니다.  
  
 [!code-cpp[TreeNode_EnsureVisible_4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CPP/treenode_ensurevisible_4.cpp#2)]
 [!code-csharp[TreeNode_EnsureVisible_4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/CS/treenode_ensurevisible_4.cs#2)]
 [!code-vb[TreeNode_EnsureVisible_4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_EnsureVisible_4/VB/treenode_ensurevisible_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
      </Docs>
    </Member>
    <Member MemberName="LastNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode LastNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode LastNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.LastNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ LastNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마지막 자식 트리 노드를 가져옵니다.</summary>
        <value>마지막 자식 트리 노드를 나타내는 <see cref="T:System.Windows.Forms.TreeNode" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.LastNode%2A> 마지막 자식 <xref:System.Windows.Forms.TreeNode> 에 <xref:System.Windows.Forms.TreeNodeCollection> 에 저장 된는 <xref:System.Windows.Forms.TreeNode.Nodes%2A> 현재 트리 노드의 속성입니다. 경우는 <xref:System.Windows.Forms.TreeNode> 없는 자식 트리 노드는 <xref:System.Windows.Forms.TreeNode.LastNode%2A> 속성에서 반환 `null`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 적절 한 선택 <xref:System.Windows.Forms.TreeNode> 확인 한 후는 <xref:System.Windows.Forms.TreeNode> 전달 선택 및 <xref:System.Windows.Forms.TreeNode> 을 선택 합니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.TreeView> 된 컨트롤을 한 <xref:System.Windows.Forms.TreeNodeCollection> 몇 개 포함 하 <xref:System.Windows.Forms.TreeNode> 개체입니다. 또한가 있어야는 <xref:System.Windows.Forms.ComboBox> 다음 항목이 포함: "이전", "PreviousVisible", "다음", "NextVisible", "First" 및 "마지막".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.FirstNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.NextNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevNode" />
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public int Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Level" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Level" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Level As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Level { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.TreeView" /> 컨트롤에 있는 트리 노드의 0부터 시작하는 깊이를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeView" /> 컨트롤에 있는 트리 노드의 0부터 시작하는 깊이입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한는 <xref:System.Windows.Forms.TreeNode.Level%2A> 속성을 루트 노드는 첫 번째 중첩 수준의 것으로 간주 됩니다 및 0을 반환 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리 노드의 이름을 가져오거나 설정합니다.</summary>
        <value>트리 노드의 이름을 나타내는 <see cref="T:System.String" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A> 의 <xref:System.Windows.Forms.TreeNode> 노드의 일부인 경우 해당 노드의 키 이기도 한 <xref:System.Windows.Forms.TreeNodeCollection>합니다. 노드 이름, 없는 경우 <xref:System.Windows.Forms.TreeNode.Name%2A> 빈 문자열을 반환 ("").  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode NextNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode NextNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.NextNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ NextNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>다음 형제 트리 노드를 가져옵니다.</summary>
        <value>다음 형제 트리 노드를 나타내는 <see cref="T:System.Windows.Forms.TreeNode" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.NextNode%2A> 다음 형제 <xref:System.Windows.Forms.TreeNode> 에 <xref:System.Windows.Forms.TreeNodeCollection> 에 저장 된는 <xref:System.Windows.Forms.TreeNode.Nodes%2A> 트리 노드의 부모 속성이 <xref:System.Windows.Forms.TreeNode>합니다. 트리 노드가 없으면 다음 경우는 <xref:System.Windows.Forms.TreeNode.NextNode%2A> 속성에서 반환 `null`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 적절 한 선택 <xref:System.Windows.Forms.TreeNode> 확인 한 후는 <xref:System.Windows.Forms.TreeNode> 전달 선택 및 <xref:System.Windows.Forms.TreeNode> 을 선택 합니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.TreeView> 된 컨트롤을 한 <xref:System.Windows.Forms.TreeNodeCollection> 몇 개 포함 하 <xref:System.Windows.Forms.TreeNode> 개체입니다. 또한가 있어야는 <xref:System.Windows.Forms.ComboBox> 다음 항목이 포함: "이전", "PreviousVisible", "다음", "NextVisible", "First" 및 "마지막".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.LastNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.FirstNode" />
      </Docs>
    </Member>
    <Member MemberName="NextVisibleNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode NextVisibleNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode NextVisibleNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextVisibleNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ NextVisibleNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>다음의 표시되는 트리 노드를 가져옵니다.</summary>
        <value>다음의 표시되는 트리 노드를 나타내는 <see cref="T:System.Windows.Forms.TreeNode" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A> 자식, 형제 또는 다른 분기에서 트리 노드 될 수 있습니다. 트리 노드가 없으면 다음 경우는 <xref:System.Windows.Forms.TreeNode.NextVisibleNode%2A> 속성에서 반환 `null`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 적절 한 선택 <xref:System.Windows.Forms.TreeNode> 확인 한 후는 <xref:System.Windows.Forms.TreeNode> 전달 선택 및 <xref:System.Windows.Forms.TreeNode> 을 선택 합니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.TreeView> 된 컨트롤을 한 <xref:System.Windows.Forms.TreeNodeCollection> 몇 개 포함 하 <xref:System.Windows.Forms.TreeNode> 개체입니다. 또한가 있어야는 <xref:System.Windows.Forms.ComboBox> 다음 항목이 포함: "이전", "PreviousVisible", "다음", "NextVisible", "First" 및 "마지막".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
        <altmember cref="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
      </Docs>
    </Member>
    <Member MemberName="NodeFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font NodeFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font NodeFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.NodeFont" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ NodeFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리 노드의 레이블에 텍스트를 표시하기 위해 사용된 글꼴을 가져오거나 설정합니다.</summary>
        <value>트리 노드의 레이블에 텍스트를 표시하기 위해 사용된 <see cref="T:System.Drawing.Font" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 `null`, <xref:System.Drawing.Font> 는 사용는 <xref:System.Windows.Forms.Control.Font%2A> 의 속성 값은 <xref:System.Windows.Forms.TreeView> 에이 노드에 연결 된 컨트롤입니다.  
  
> [!NOTE]
>  노드 글꼴 보다 큰 경우는 <xref:System.Windows.Forms.Control.Font%2A> 에서 설정 된 속성 값은 <xref:System.Windows.Forms.TreeView> 컨트롤이, 트리 노드 레이블 텍스트가 잘립니다.  
  
   
  
## Examples  
 크기를 변경 하는 다음 코드 예제에서는 <xref:System.Windows.Forms.TreeNode.NodeFont%2A> 지정된 된 크기를 조정 하 고는 <xref:System.Windows.Forms.TreeView.ItemHeight%2A> 트리 노드의 부모 <xref:System.Windows.Forms.TreeView> 제어 합니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.TreeView> 의 컬렉션을 포함 하는 컨트롤 <xref:System.Windows.Forms.TreeNode> 개체 및 <xref:System.Windows.Forms.ComboBox> 글꼴 크기를 포함 하는 합니다.  
  
 [!code-cpp[TreeNode_Bounds#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#2)]
 [!code-csharp[TreeNode_Bounds#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#2)]
 [!code-vb[TreeNode_Bounds#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Font" />
        <altmember cref="P:System.Windows.Forms.TreeNode.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNodeCollection ^ Nodes { System::Windows::Forms::TreeNodeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 트리 노드에 할당된 <see cref="T:System.Windows.Forms.TreeNode" /> 개체의 컬렉션을 가져옵니다.</summary>
        <value>현재 트리 노드에 할당된 트리 노드를 나타내는 <see cref="T:System.Windows.Forms.TreeNodeCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Nodes%2A> 속성의 다른 컬렉션을 저장할 수 <xref:System.Windows.Forms.TreeNode> 개체입니다. 트리 노드 컬렉션의 각 보안 개체는 <xref:System.Windows.Forms.TreeNode.Nodes%2A> 포함할 수 있는 속성 자체 <xref:System.Windows.Forms.TreeNodeCollection>합니다. 트리 노드가이 중첩 트리 구조를 탐색 어려울 수 있습니다. <xref:System.Windows.Forms.TreeNode.FullPath%2A> 속성을 사용 하면 더 쉽게 사용자는 트리 내에서 위치를 확인할 수 있습니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 하나에서 선택 된 트리 노드를 제거 <xref:System.Windows.Forms.TreeView> 두는 읽기 전용으로 하는 경우 다른에 추가 합니다. 때는 <xref:System.Windows.Forms.Button> 를 클릭 하면는 <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType> 하나에서 삭제 됩니다 <xref:System.Windows.Forms.TreeView> 를 사용 하 여는 <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> 메서드에 다른 추가 <xref:System.Windows.Forms.TreeView> 를 사용 하는 <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> 메서드. 이 예제에서는 두 개의 있어야 <xref:System.Windows.Forms.TreeView> 라는 컨트롤 `treeView1` 및 `treeView2`, 및 <xref:System.Windows.Forms.Button> 에 <xref:System.Windows.Forms.Form>합니다.  
  
 [!code-cpp[TreeNodeCollection#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#1)]
 [!code-csharp[TreeNodeCollection#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#1)]
 [!code-vb[TreeNodeCollection#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
        <altmember cref="P:System.Windows.Forms.TreeView.Nodes" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Parent { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 트리 노드의 부모 트리 노드를 가져옵니다.</summary>
        <value>현재 트리 노드의 부모를 나타내는 <see cref="T:System.Windows.Forms.TreeNode" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 트리 노드가 루트 수준에 있으면는 <xref:System.Windows.Forms.TreeNode.Parent%2A> 속성에서 반환 `null`합니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.TreeNode.Text%2A> 및 <xref:System.Windows.Forms.TreeNode.Index%2A> 의 속성 값은 <xref:System.Windows.Forms.TreeNode> 가 나타내는 <xref:System.Windows.Forms.TreeNode.Parent%2A> 속성의는 <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType>합니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.TreeView> 컨트롤입니다. <xref:System.Windows.Forms.TreeView> 자식 노드를 하나 이상 가지 각각는 루트 노드가 두 개 이상 있어야 합니다.  
  
 [!code-cpp[Windows.Forms.TreeNode#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#2)]
 [!code-csharp[Windows.Forms.TreeNode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#2)]
 [!code-vb[Windows.Forms.TreeNode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrevNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode PrevNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode PrevNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.PrevNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrevNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ PrevNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이전 형제 트리 노드를 가져옵니다.</summary>
        <value>이전 형제 트리 노드를 나타내는 <see cref="T:System.Windows.Forms.TreeNode" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.PrevNode%2A> 이전 형제 <xref:System.Windows.Forms.TreeNode> 에 <xref:System.Windows.Forms.TreeNodeCollection> 에 저장 된는 <xref:System.Windows.Forms.TreeNode.Nodes%2A> 트리 노드의 부모 속성이 <xref:System.Windows.Forms.TreeNode>합니다. 트리 노드가 없으면 이전 하는 경우는 <xref:System.Windows.Forms.TreeNode.PrevNode%2A> 속성에서 반환 `null`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 적절 한 선택 <xref:System.Windows.Forms.TreeNode> 확인 한 후는 <xref:System.Windows.Forms.TreeNode> 전달 선택 및 <xref:System.Windows.Forms.TreeNode> 을 선택 합니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.TreeView> 된 컨트롤을 한 <xref:System.Windows.Forms.TreeNodeCollection> 몇 개 포함 하 <xref:System.Windows.Forms.TreeNode> 개체입니다. 또한가 있어야는 <xref:System.Windows.Forms.ComboBox> 다음 항목이 포함: "이전", "PreviousVisible", "다음", "NextVisible", "First" 및 "마지막".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.NextNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.LastNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.FirstNode" />
      </Docs>
    </Member>
    <Member MemberName="PrevVisibleNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode PrevVisibleNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode PrevVisibleNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrevVisibleNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ PrevVisibleNode { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이전에 표시되는 트리 노드를 가져옵니다.</summary>
        <value>이전에 표시되는 트리 노드를 나타내는 <see cref="T:System.Windows.Forms.TreeNode" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A> 자식, 형제 또는 다른 분기에서 트리 노드 될 수 있습니다. 트리 노드가 없으면 이전 하는 경우는 <xref:System.Windows.Forms.TreeNode.PrevVisibleNode%2A> 속성에서 반환 `null`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 적절 한 선택 <xref:System.Windows.Forms.TreeNode> 확인 한 후는 <xref:System.Windows.Forms.TreeNode> 전달 선택 및 <xref:System.Windows.Forms.TreeNode> 을 선택 합니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.TreeView> 된 컨트롤을 한 <xref:System.Windows.Forms.TreeNodeCollection> 몇 개 포함 하 <xref:System.Windows.Forms.TreeNode> 개체입니다. 또한가 있어야는 <xref:System.Windows.Forms.ComboBox> 다음 항목이 포함: "이전", "PreviousVisible", "다음", "NextVisible", "First" 및 "마지막".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>트리 뷰 컨트롤에서 현재 트리 노드를 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Forms.TreeNode.Remove%2A> 트리 노드 및 자식 트리 노드에 할당 된 메서드가 호출 되는 <xref:System.Windows.Forms.TreeNode>에서 제거 되는 <xref:System.Windows.Forms.TreeView>합니다. 제거 된 자식 노드 제거 되는 <xref:System.Windows.Forms.TreeView> 않지만 여전히이 트리 노드에 연결 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 제거 된 <xref:System.Windows.Forms.TreeNode> 사용자 위로 마우스를 마우스 오른쪽 단추로 클릭 하 한에서 설정/해제 하는 경우 확장에 축소 된 위로 마우스 휠을 클릭할 때입니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.TreeView> 컨트롤입니다. <xref:System.Windows.Forms.TreeView> 두 개 이상의 루트 트리 노드가 자식 노드를 하나 이상 가지 각각 갖습니다.  
  
 [!code-cpp[Windows.Forms.TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#1)]
 [!code-csharp[Windows.Forms.TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#1)]
 [!code-vb[Windows.Forms.TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedImageIndex">
      <MemberSignature Language="C#" Value="public int SelectedImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.SelectedImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectedImageIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리 노드를 선택한 상태일 때 표시되는 이미지의 이미지 목록 인덱스 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ImageList" />에서 이미지의 위치를 나타내는 인덱스(0부터 시작) 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> 값의 인덱스 값은는 <xref:System.Drawing.Image> 에 저장 된 <xref:System.Windows.Forms.ImageList> 에 할당 된는 <xref:System.Windows.Forms.TreeView.ImageList%2A?displayProperty=nameWithType> 속성.  
  
> [!NOTE]
>  기본값인은 <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> 속성은 동일는 <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> 속성의는 <xref:System.Windows.Forms.TreeView> 하는 컨트롤을 <xref:System.Windows.Forms.TreeNode> 에 할당 됩니다.  
  
   
  
## Examples  
 다음 코드 예제를 만들고 할당는 <xref:System.Windows.Forms.ImageList> 에 <xref:System.Windows.Forms.TreeView> 컨트롤과 채우기는 <xref:System.Windows.Forms.TreeView> 보호로 <xref:System.Windows.Forms.TreeNode> 개체입니다. 트리 노드 이미지에서 할당 되는 <xref:System.Windows.Forms.ImageList> 트리 노드가 선택 되거나 선택 하지 않은 상태에 있을 때 표시 되는 합니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 포함 하는 <xref:System.Windows.Forms.TreeView>, 및 <xref:System.Collections.ArrayList> 포함 된 `Customer` 각각 포함 된 개체 `Order` 개체입니다. 또한 해야 하는 `Customer` 및 `Order` 개체를 정의 합니다.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.ImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="SelectedImageKey">
      <MemberSignature Language="C#" Value="public string SelectedImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.SelectedImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.ImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리 노드가 선택된 상태일 때 표시되는 이미지의 키를 가져오거나 설정합니다.</summary>
        <value>트리 노드가 선택된 상태일 때 표시되는 이미지의 키입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에서 반환 하는 이미지 키에 포함 되어는 <xref:System.Windows.Forms.TreeView.ImageList%2A> 부모 <xref:System.Windows.Forms.TreeView> 제어 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="protected virtual void Serialize (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Serialize(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Serialize (si As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Serialize(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 설명하는 <see cref="T:System.Windows.Forms.TreeNode" />입니다.</param>
        <param name="context">serialize하는 동안 스트림의 상태를 나타내는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
        <summary>
          <see cref="T:System.Windows.Forms.TreeNode" />의 상태를 지정된 <see cref="T:System.Runtime.Serialization.SerializationInfo" />에 저장합니다.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">serialization 서비스입니다. 연결 된 열거형의 경우: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter" /></permission>
      </Docs>
    </Member>
    <Member MemberName="StateImageIndex">
      <MemberSignature Language="C#" Value="public int StateImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StateImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.StateImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StateImageIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.StateImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>부모 <see cref="T:System.Windows.Forms.TreeNode" />의 <see cref="T:System.Windows.Forms.TreeView" /> 속성이 <see langword="false" />로 설정된 경우 <see cref="P:System.Windows.Forms.TreeView.CheckBoxes" />의 상태를 나타내는 데 사용되는 이미지의 인덱스를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNode" />의 상태를 나타내는 데 사용되는 이미지의 인덱스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에서 반환 되는 이미지 인덱스에 포함 되어는 <xref:System.Windows.Forms.TreeView.StateImageList%2A> 부모 <xref:System.Windows.Forms.TreeView> 제어 합니다.  
  
 경우 부모 <xref:System.Windows.Forms.TreeView> 확인란이 활성화 된 경우에 <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> 는 무시 됩니다 노드의 첫 번째 또는 두 번째 이미지에 표시 됩니다는 <xref:System.Windows.Forms.TreeView.StateImageList%2A> 부모에서 설정 <xref:System.Windows.Forms.TreeView> 검사 되지 않은 선택 된 상태를 각각 나타냅니다. 설정/해제는 <xref:System.Windows.Forms.TreeNode.Checked%2A> 속성의 값에는 영향을 주지는 <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>합니다.  
  
 <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> -1을 반환 설정 되지 않은 경우. <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> 및 <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> 속성은 함께 다른 무시가 설정 된 경우를 의미 합니다. 설정 하는 경우는 <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> 속성에는 <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> 속성이-1로 자동 설정 됩니다. 또는 설정한 경우 <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> 빈 문자열을 자동으로 설정 됩니다 ("").  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">지정된 인덱스가 -1보다 작거나 14보다 큰 경우</exception>
        <altmember cref="P:System.Windows.Forms.TreeNode.StateImageKey" />
      </Docs>
    </Member>
    <Member MemberName="StateImageKey">
      <MemberSignature Language="C#" Value="public string StateImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StateImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.StateImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StateImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Forms.RelatedImageList("TreeView.StateImageList")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>부모 <see cref="T:System.Windows.Forms.TreeNode" />의 <see cref="T:System.Windows.Forms.TreeView" /> 속성이 <see langword="false" />로 설정된 경우 <see cref="P:System.Windows.Forms.TreeView.CheckBoxes" />의 상태를 나타내는 데 사용되는 이미지의 키를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNode" />의 상태를 나타내는 데 사용되는 이미지의 키입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에서 반환 되는 이미지 키에 포함 되어는 <xref:System.Windows.Forms.TreeView.StateImageList%2A> 부모 <xref:System.Windows.Forms.TreeView> 제어 합니다.  
  
 경우 부모 <xref:System.Windows.Forms.TreeView> 확인란이 활성화 된 경우에 <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> 는 무시 됩니다 노드의 첫 번째 또는 두 번째 이미지에 표시 됩니다는 <xref:System.Windows.Forms.TreeView.StateImageList%2A> 부모에서 설정 <xref:System.Windows.Forms.TreeView> 검사 되지 않은 선택 된 상태를 각각 나타냅니다. 설정/해제는 <xref:System.Windows.Forms.TreeNode.Checked%2A> 속성의 값에는 영향을 주지는 <xref:System.Windows.Forms.TreeNode.StateImageKey%2A>합니다.  
  
 <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> 및 <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> 속성은 함께 다른 무시가 설정 된 경우를 의미 합니다. 설정 하는 경우는 <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> 속성에는 <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> 속성이-1로 자동 설정 됩니다. 또는 설정한 경우 <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A>, <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> 빈 문자열을 자동으로 설정 됩니다 (""). 설정 해야는 <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> 0에서 14 사이 해당 인덱스를 사용 하 여 이미지를 합니다. 설정할 수 있습니다는 <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> 인덱스를 사용 하 여 이미지를 이미지 14 (예외가 throw 되지 것입니다), 보다 큰 값 표시 되지 않을  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.StateImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (si As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 serialize할 데이터가 들어 있는 <see cref="T:System.Windows.Forms.TreeNode" />입니다.</param>
        <param name="context">이 serialization의 대상 정보가 들어 있는 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
        <summary>
          <see cref="T:System.Windows.Forms.TreeNode" />을 serialize하는 데 필요한 데이터로 serialization 정보 개체를 채웁니다.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">serialization 서비스입니다. 연결 된 열거형의 경우: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리 노드에 대한 데이터가 들어 있는 개체를 가져오거나 설정합니다.</summary>
        <value>트리 노드에 대한 데이터가 들어 있는 <see cref="T:System.Object" />입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 모든 <xref:System.Object> 파생된 형식을이 속성에 할당할 수 있습니다. Windows Forms 디자이너를 통해이 속성이 설정 되어, 텍스트만 할당할 수 있습니다.  
  
> [!CAUTION]
>  <xref:System.Windows.Forms.TreeNode.Clone%2A> 메서드는 노드의 단순 복사본을 수행 합니다. 하는 경우의 값은 <xref:System.Windows.Forms.TreeNode.Tag%2A> 속성은 참조 형식, 원본 및 복제 복사본의 동일한 단일 인스턴스를 가리킵니다는 <xref:System.Windows.Forms.TreeNode.Tag%2A> 값입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 자식 트리 노드를 할당 하려면 루트 트리 노드를 만듭니다. 각 자식 트리 노드 `Customer` 개체는 <xref:System.Collections.ArrayList> 각 자식 트리 노드 뿐 아니라 루트 트리 노드의에 추가 됩니다 `Order` 에 할당 된 개체는 `Customer` 개체입니다. `Customer` 개체에 할당 된는 <xref:System.Windows.Forms.TreeNode.Tag%2A> 속성을 나타내는 트리 노드 `Customer` 개체 표시 되며 <xref:System.Drawing.Color.Orange%2A> 텍스트입니다. 이 예제를 실행 하려면는 `Customer` 및 `Order` 개체가 정의 되어 있고는 <xref:System.Windows.Forms.TreeView> 컨트롤에 <xref:System.Windows.Forms.Form>, 및 <xref:System.Collections.ArrayList> 라는 `customerArray` 포함 된 `Customer` 개체입니다.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리 노드의 레이블에 표시할 텍스트를 가져오거나 설정합니다.</summary>
        <value>트리 노드 레이블에 표시되는 텍스트입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 최대 문자 수는는 <xref:System.Windows.Forms.TreeNode> 수은 259 표시 합니다. 경우는 <xref:System.String> 259 여러 개 있는 문자는이 속성에 할당 된, 처음 259 문자만 표시 됩니다.  
  
 하는 경우 사용자가이 속성을 설정할 수 없습니다는 <xref:System.Windows.Forms.TreeView.LabelEdit%2A> 부모 <xref:System.Windows.Forms.TreeView> 로 설정 된 `false`합니다. 명시적으로이 속성을 설정 하는 대신 중 하나를 사용 하 여 트리 노드를 만드는 것은 <xref:System.Windows.Forms.TreeNode.%23ctor%2A> 나타내는 문자열 매개 변수를 가진 생성자는 <xref:System.Windows.Forms.TreeNode.Text%2A> 속성입니다. 레이블이 옆에 표시 됩니다는 <xref:System.Windows.Forms.TreeNode> 표시 되 면 이미지입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 자식 트리 노드를 할당 하려면 루트 트리 노드를 만듭니다. 각 자식 트리 노드 `Customer` 개체는 <xref:System.Collections.ArrayList> 각 자식 트리 노드 뿐 아니라 루트 트리 노드의에 추가 됩니다 `Order` 에 할당 된 개체는 `Customer` 개체입니다. `Customer` 개체에 할당 된는 <xref:System.Windows.Forms.TreeNode.Tag%2A> 속성을 나타내는 트리 노드 `Customer` 개체 표시 되며 <xref:System.Drawing.Color.Orange%2A> 텍스트입니다. 이 예제를 실행 하려면는 `Customer` 및 `Order` 개체가 정의 되어 있고는 <xref:System.Windows.Forms.TreeView> 컨트롤에 <xref:System.Windows.Forms.Form>, 및 <xref:System.Collections.ArrayList> 라는 `customerArray` 포함 된 `Customer` 개체입니다.  
  
 [!code-cpp[TreeNode_Bounds#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#1)]
 [!code-csharp[TreeNode_Bounds#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#1)]
 [!code-vb[TreeNode_Bounds#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.LabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsEditing" />
      </Docs>
    </Member>
    <Member MemberName="Toggle">
      <MemberSignature Language="C#" Value="public void Toggle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Toggle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.Toggle" />
      <MemberSignature Language="VB.NET" Value="Public Sub Toggle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Toggle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>트리 노드를 확장된 상태 또는 축소된 상태로 설정/해제합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 트리 노드가 확장 되거나 축소 현재 상태를 반대로 전환 됩니다.  
  
> [!NOTE]
>  상태는 <xref:System.Windows.Forms.TreeNode> 유지 됩니다. 예를 들어, 다음 수준의 자식 노드 축소 되지 않았으면 이전에 시기는 <xref:System.Windows.Forms.TreeNode.Expand%2A> 메서드가 호출 되 면 해당 자식 노드는 이전에 확장 된 상태로 나타납니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 제거 된 <xref:System.Windows.Forms.TreeNode> 사용자 위로 마우스를 마우스 오른쪽 단추로 클릭 하 한에서 설정/해제 하는 경우 확장에 축소 된 위로 마우스 휠을 클릭할 때입니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.TreeView> 컨트롤입니다. <xref:System.Windows.Forms.TreeView> 두 개 이상의 루트 트리 노드가 자식 노드를 하나 이상 가지 각각 갖습니다.  
  
 [!code-cpp[Windows.Forms.TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CPP/treenode.cpp#1)]
 [!code-csharp[Windows.Forms.TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.TreeNode/CS/treenode.cs#1)]
 [!code-vb[Windows.Forms.TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.TreeNode/VB/treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipText">
      <MemberSignature Language="C#" Value="public string ToolTipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTipText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.ToolTipText" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>마우스 포인터로 <see cref="T:System.Windows.Forms.TreeNode" />를 가리키면 나타나는 텍스트를 가져오거나 설정합니다.</summary>
        <value>마우스 포인터로 <see cref="T:System.Windows.Forms.TreeNode" />를 가리키면 나타나는 텍스트를 가져옵니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 해야 합니다는 <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> 부모 <xref:System.Windows.Forms.TreeView> 를 `true` 에 대 한는 <xref:System.Windows.Forms.TreeNode.ToolTipText%2A> 런타임에 표시 되도록 합니다.  
  
 경우는 <xref:System.Windows.Forms.TreeView> 컨트롤 도구 설명도 포함 되어는 <xref:System.Windows.Forms.TreeNode> 올려진는 <xref:System.Windows.Forms.ToolTip>만 <xref:System.Windows.Forms.ToolTip> 노드를 표시 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.TreeNode.ToolTipText%2A> 및 <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> 속성입니다. 이 예제를 실행 하려면 Windows Form과 호출에 다음 코드를 붙여 `InitializeTreeViewWithToolTips` 폼의 생성자 또는 <xref:System.Windows.Forms.Form.Load> 이벤트 처리기입니다.  
  
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNode.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>현재 개체를 나타내는 문자열을 반환합니다.</summary>
        <returns>현재 개체를 나타내는 문자열입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TreeView">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeView TreeView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeView TreeView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNode.TreeView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TreeView As TreeView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeView ^ TreeView { System::Windows::Forms::TreeView ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트리 노드가 할당된 부모 트리 뷰를 가져옵니다.</summary>
        <value>트리 노드가 할당된 부모 트리 뷰를 나타내는 <see cref="T:System.Windows.Forms.TreeView" />이고, 노드가 트리 뷰에 할당되지 않았으면 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 적절 한 선택 <xref:System.Windows.Forms.TreeNode> 확인 한 후는 <xref:System.Windows.Forms.TreeNode> 전달 선택 및 <xref:System.Windows.Forms.TreeNode> 을 선택 합니다. 이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.TreeView> 된 컨트롤을 한 <xref:System.Windows.Forms.TreeNodeCollection> 몇 개 포함 하 <xref:System.Windows.Forms.TreeNode> 개체입니다. 또한가 있어야는 <xref:System.Windows.Forms.ComboBox> 다음 항목이 포함: "이전", "PreviousVisible", "다음", "NextVisible", "First" 및 "마지막".  
  
 [!code-cpp[TreeNode_Parent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Parent/CPP/treenode_parent.cpp#1)]
 [!code-csharp[TreeNode_Parent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Parent/CS/treenode_parent.cs#1)]
 [!code-vb[TreeNode_Parent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Parent/VB/treenode_parent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>