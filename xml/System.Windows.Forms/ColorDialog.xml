<Type Name="ColorDialog" FullName="System.Windows.Forms.ColorDialog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0e9b33a11b6c09b7be36f7c114055178495aae0c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36347605" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ColorDialog : System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ColorDialog extends System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ColorDialog" />
  <TypeSignature Language="VB.NET" Value="Public Class ColorDialog&#xA;Inherits CommonDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class ColorDialog : System::Windows::Forms::CommonDialog" />
  <TypeSignature Language="F#" Value="type ColorDialog = class&#xA;    inherit CommonDialog" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.CommonDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Color")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>사용자가 사용자 지정 색을 정의하는 데 사용할 수 있는 컨트롤과 함께 사용 가능한 색을 표시하는 일반 대화 상자를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 상속 된 멤버 <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> 이 특정 공용 대화 상자를 만들고 호출 되어야 합니다. <xref:System.Windows.Forms.CommonDialog.HookProc%2A> 특정 대화 상자 후크 기능을 구현 하 여 재정의할 수 있습니다. 사용 하 여 <xref:System.Windows.Forms.ColorDialog.Color%2A> 를 사용자가 선택한 색을 검색 합니다.  
  
 인스턴스를 만들 때 <xref:System.Windows.Forms.ColorDialog>, 읽기/쓰기 속성 중 일부를 초기 값으로 설정 됩니다. 이러한 값의 목록에 대 한 참조는 <xref:System.Windows.Forms.ColorDialog.%23ctor%2A> 생성자입니다.  
  
   
  
## Examples  
 다음 예제에서는 새로운 <xref:System.Windows.Forms.ColorDialog>합니다. 이 예제는 메서드가 있는 기존 폼 내에서 호출 되도록 하려면는 <xref:System.Windows.Forms.TextBox> 및 <xref:System.Windows.Forms.Button> 배치 합니다.  
  
 [!code-cpp[Classic ColorDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ColorDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ColorDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ColorDialog Example/CS/source.cs#1)]
 [!code-vb[Classic ColorDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ColorDialog Example/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.CommonDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColorDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ColorDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ColorDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ColorDialog" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스를 만들 때 <xref:System.Windows.Forms.ColorDialog>, 다음 읽기/쓰기 속성은 초기 값으로 설정 됩니다.  
  
|속성|초기 값|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.ColorDialog.AllowFullOpen%2A>|`true`|  
|<xref:System.Windows.Forms.ColorDialog.AnyColor%2A>|`false`|  
|<xref:System.Windows.Forms.ColorDialog.Color%2A>|`Color.Black`|  
|<xref:System.Windows.Forms.ColorDialog.CustomColors%2A>|`null`|  
|<xref:System.Windows.Forms.ColorDialog.FullOpen%2A>|`false`|  
|<xref:System.Windows.Forms.ColorDialog.ShowHelp%2A>|`false`|  
|<xref:System.Windows.Forms.ColorDialog.SolidColorOnly%2A>|`false`|  
  
 속성에 별도 호출을 통해 이러한 속성 중 하나에 대 한 값을 변경할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFullOpen">
      <MemberSignature Language="C#" Value="public virtual bool AllowFullOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFullOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ColorDialog.AllowFullOpen" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowFullOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowFullOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowFullOpen : bool with get, set" Usage="System.Windows.Forms.ColorDialog.AllowFullOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>대화 상자를 사용하여 사용자 지정 색을 정의할 수 있는지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>사용자 지정 색을 정의할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 로 설정 하면 `false`, 대화 상자에서 관련된 단추가 비활성화 되 고 사용자 지정 색 컨트롤 대화 상자에 액세스할 수 없습니다.  
  
   
  
## Examples  
 다음 예제에서는 새로운 <xref:System.Windows.Forms.ColorDialog>합니다. 이 예제는 메서드가 있는 기존 폼 내에서 호출 되도록 하려면는 <xref:System.Windows.Forms.TextBox> 및 <xref:System.Windows.Forms.Button> 배치 합니다.  
  
 [!code-cpp[Classic ColorDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ColorDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ColorDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ColorDialog Example/CS/source.cs#1)]
 [!code-vb[Classic ColorDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ColorDialog Example/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ColorDialog.FullOpen" />
      </Docs>
    </Member>
    <Member MemberName="AnyColor">
      <MemberSignature Language="C#" Value="public virtual bool AnyColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AnyColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ColorDialog.AnyColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AnyColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AnyColor { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AnyColor : bool with get, set" Usage="System.Windows.Forms.ColorDialog.AnyColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>대화 상자에서 기본 색 집합에 있는 색 중 사용 가능한 색이 모두 표시되는지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>대화 상자에서 기본 색 집합에 있는 색 중 사용 가능한 색이 모두 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 초기화 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ColorDialog> 설정은 <xref:System.Windows.Forms.ColorDialog.AnyColor%2A>, <xref:System.Windows.Forms.ColorDialog.AllowFullOpen%2A> 속성입니다. <xref:System.Windows.Forms.ColorDialog> 하지만 사용자 지정 색을 설정 하려면 사용자의 전체 집합을 사용 하는 사용 하지 않는 기본 색 표시 합니다. 설정 하는 경우는 <xref:System.Windows.Forms.ColorDialog.SolidColorOnly%2A> 속성을 `false`, 256으로 시스템에서 다른 색과 혼합 된 색을 표시할 수 또는 색 이하의 합니다. 또한이 예제에서는 설정 된 <xref:System.Windows.Forms.ColorDialog.ShowHelp%2A> 속성 및 처리는 <xref:System.Windows.Forms.CommonDialog.HelpRequest> 대화 상자에 대 한 이벤트입니다. 예제를 실행 하려면 다음 코드를 붙여 폼 호출에는 `InitializeColorDialog` 폼의 생성자 또는 `Load` 메서드. 이 예제에서는 `Click` 단추 이벤트 처리기 메서드 예제에서 정의에 연결 되어 있습니다.  
  
 [!code-cpp[System.Windows.Forms.ColorDialogHelp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ColorDialogHelp/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ColorDialogHelp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ColorDialogHelp/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ColorDialogHelp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ColorDialogHelp/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ColorDialog.CustomColors" />
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public System.Drawing.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color Color" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ColorDialog.Color" />
      <MemberSignature Language="VB.NET" Value="Public Property Color As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color Color { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.Color : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ColorDialog.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>선택한 색을 가져오거나 설정합니다.</summary>
        <value>선택한 색입니다. 색을 선택하지 않으면 기본값은 검정입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 정의 된 대로 런타임 시 대화 상자에서 사용자가 선택한 색 <xref:System.Drawing.Color> 구조입니다.  
  
   
  
## Examples  
 다음 예제에서는 새로운 <xref:System.Windows.Forms.ColorDialog>합니다. 이 예제는 메서드가 있는 기존 폼 내에서 호출 되도록 하려면는 <xref:System.Windows.Forms.TextBox> 및 <xref:System.Windows.Forms.Button> 배치 합니다.  
  
 [!code-cpp[Classic ColorDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ColorDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ColorDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ColorDialog Example/CS/source.cs#1)]
 [!code-vb[Classic ColorDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ColorDialog Example/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="CustomColors">
      <MemberSignature Language="C#" Value="public int[] CustomColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] CustomColors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ColorDialog.CustomColors" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomColors As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ CustomColors { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomColors : int[] with get, set" Usage="System.Windows.Forms.ColorDialog.CustomColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>대화 상자에 표시된 사용자 지정 색 집합을 가져오거나 설정합니다.</summary>
        <value>대화 상자에 표시된 사용자 지정 색 집합입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자 지정 색 집합을 만들 수 있습니다. 이러한 색에 포함 된 프로그램 <xref:System.Int32> 색을 만드는 데 필요한 BGR (파란색, 녹색, 빨간색) 값으로 구성 합니다. 이 데이터의 구조에 대 한 자세한 내용은 참조 하십시오. <xref:System.Drawing.Color>합니다.  
  
 사용자 지정 색만 정의 될 수 있으면 <xref:System.Windows.Forms.ColorDialog.AllowFullOpen%2A> 로 설정 된 `true`합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 형식의 배열을 추가 하는 방법을 보여 줍니다. <xref:System.Int32> 사용자 지정 색을 나타내는 <xref:System.Windows.Forms.ColorDialog.CustomColors%2A>합니다. 이 예제에서는 코드 내에서 실행 되는 <xref:System.Windows.Forms.Form>합니다.  
  
 [!code-cpp[System.Windows.Forms.ColorDialog CustomColors Property Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ColorDialog CustomColors Property Example/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ColorDialog CustomColors Property Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ColorDialog CustomColors Property Example/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ColorDialog CustomColors Property Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ColorDialog CustomColors Property Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ColorDialog.AnyColor" />
      </Docs>
    </Member>
    <Member MemberName="FullOpen">
      <MemberSignature Language="C#" Value="public virtual bool FullOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FullOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ColorDialog.FullOpen" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FullOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool FullOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FullOpen : bool with get, set" Usage="System.Windows.Forms.ColorDialog.FullOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>대화 상자가 열려 있을 때 사용자 지정 색을 만드는 데 사용되는 컨트롤을 볼 수 있는지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>대화 상자가 열려 있을 때 사용자 지정 색 컨트롤을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 사용자 지정 색 컨트롤 표시 되지 않습니다 대화 상자를 처음 연 경우. 클릭 해야는 `Custom Colors` 단추를 표시 합니다.  
  
> [!NOTE]
>  경우 <xref:System.Windows.Forms.ColorDialog.AllowFullOpen%2A> 은 `false`, 다음 <xref:System.Windows.Forms.ColorDialog.FullOpen%2A> 영향을 주지 않습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ColorDialog.AllowFullOpen" />
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="protected virtual IntPtr Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Instance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ColorDialog.Instance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Instance As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr Instance { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Instance : nativeint" Usage="System.Windows.Forms.ColorDialog.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>내부 창 인스턴스 핸들(HINSTANCE)을 가져옵니다.</summary>
        <value>창 핸들의 HINSTANCE 값이 들어 있는 <see cref="T:System.IntPtr" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  이 방법은 사용 하 여 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 신뢰할 수 없는 코드에서 호출 되 고 하지 못하도록; 직접 실행 호출자만 포함 해야 합니다. <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=nameWithType> 권한. 코드와 부분적으로 신뢰할 수 있는 코드에서 호출할 수 있는 경우 사용자 입력을 통과 하지 못한 <xref:System.Runtime.InteropServices.Marshal> 클래스 유효성 검사 없이 메서드. 사용 하는 중요 한 제한에 대 한는 `LinkDemand` 멤버 참조 [Demand 합니다. LinkDemand](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5)합니다.  
  
 이 속성 또한 사용 하 여는 <xref:System.Security.Permissions.SecurityAction.InheritanceDemand?displayProperty=nameWithType> ;이 멤버를 재정의 하려면 보안 특성을 파생된 클래스에 있어야는 `CustomPermission` 권한.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">에 비관리 코드와 작동 합니다. 연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="protected virtual int Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Options" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ColorDialog.Options" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Options As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int Options { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : int" Usage="System.Windows.Forms.ColorDialog.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ColorDialog" />를 초기화할 값을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ColorDialog" />를 초기화하는 내부 값의 비트 조합입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ColorDialog.Options%2A> 속성은 Win32를 사용 하 여 색 대화 상자를 초기화 하는 데 사용 하는 플래그에 해당 합니다. 속성을 사용 하 여는 <xref:System.Windows.Forms.ColorDialog> 가져오고 옵션을 설정 하는 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ColorDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="colorDialog.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>모든 옵션을 해당 기본값으로, 마지막으로 선택한 색을 검정으로, 사용자 지정 색을 해당 기본값으로 다시 설정합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ColorDialog" />
      </Docs>
    </Member>
    <Member MemberName="RunDialog">
      <MemberSignature Language="C#" Value="protected override bool RunDialog (IntPtr hwndOwner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool RunDialog(native int hwndOwner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ColorDialog.RunDialog(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RunDialog (hwndOwner As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool RunDialog(IntPtr hwndOwner);" />
      <MemberSignature Language="F#" Value="override this.RunDialog : nativeint -&gt; bool" Usage="colorDialog.RunDialog hwndOwner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwndOwner" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwndOwner">일반 대화 상자에 대한 소유자 창의 창 핸들을 나타내는 값입니다.</param>
        <summary>파생 클래스에서 재정의된 경우 일반 대화 상자를 지정합니다.</summary>
        <returns>대화 상자가 성공적으로 실행되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="ShowHelp">
      <MemberSignature Language="C#" Value="public virtual bool ShowHelp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHelp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ColorDialog.ShowHelp" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowHelp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowHelp { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowHelp : bool with get, set" Usage="System.Windows.Forms.ColorDialog.ShowHelp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>도움말 단추가 색 대화 상자에 표시되는지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>도움말 단추가 대화 상자에 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 새로운 <xref:System.Windows.Forms.ColorDialog>합니다. 이 예제는 메서드가 있는 기존 폼 내에서 호출 되도록 하려면는 <xref:System.Windows.Forms.TextBox> 및 <xref:System.Windows.Forms.Button> 배치 합니다.  
  
 [!code-cpp[Classic ColorDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ColorDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ColorDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ColorDialog Example/CS/source.cs#1)]
 [!code-vb[Classic ColorDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ColorDialog Example/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SolidColorOnly">
      <MemberSignature Language="C#" Value="public virtual bool SolidColorOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SolidColorOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ColorDialog.SolidColorOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SolidColorOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SolidColorOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SolidColorOnly : bool with get, set" Usage="System.Windows.Forms.ColorDialog.SolidColorOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>대화 상자에서 단색만 선택할 수 있는지를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>사용자가 단색만 선택할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 256 색이 있는 시스템에 적용 합니다. 이러한 종류의 시스템에서 일부 색은 다른과 혼합 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 초기화 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ColorDialog> 설정은 <xref:System.Windows.Forms.ColorDialog.AnyColor%2A>, <xref:System.Windows.Forms.ColorDialog.AllowFullOpen%2A> 속성입니다. <xref:System.Windows.Forms.ColorDialog> 하지만 사용자 지정 색을 설정 하려면 사용자의 전체 집합을 사용 하는 사용 하지 않는 기본 색 표시 합니다. 설정 하는 경우는 <xref:System.Windows.Forms.ColorDialog.SolidColorOnly%2A> 속성을 `false`, 256으로 시스템에서 다른 색과 혼합 된 색을 표시할 수 또는 색 이하의 합니다. 또한이 예제에서는 설정 된 <xref:System.Windows.Forms.ColorDialog.ShowHelp%2A> 속성 및 처리는 <xref:System.Windows.Forms.CommonDialog.HelpRequest> 대화 상자에 대 한 이벤트입니다. 예제를 실행 하려면 다음 코드를 붙여 폼 호출에는 `InitializeColorDialog` 폼의 생성자 또는 `Load` 메서드. 이 예제는 `Click` 단추 이벤트 처리기 메서드 예제에서 정의에 연결 되어 있습니다.  
  
 [!code-cpp[System.Windows.Forms.ColorDialogHelp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ColorDialogHelp/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ColorDialogHelp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ColorDialogHelp/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ColorDialogHelp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ColorDialogHelp/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ColorDialog.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="colorDialog.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ColorDialog" />를 나타내는 문자열을 반환합니다.</summary>
        <returns>현재 <see cref="T:System.String" />를 나타내는 <see cref="T:System.Windows.Forms.ColorDialog" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 형식 및 값을 반환 문자열에는 <xref:System.Windows.Forms.ColorDialog.Color%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>