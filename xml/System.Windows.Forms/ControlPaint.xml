<Type Name="ControlPaint" FullName="System.Windows.Forms.ControlPaint">
  <TypeSignature Language="C#" Value="public sealed class ControlPaint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ControlPaint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ControlPaint" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ControlPaint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlPaint sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3488d-101">일반적인 Windows 컨트롤과 해당 요소를 그리는 데 사용되는 메서드를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-101">Provides methods used to paint common Windows controls and their elements.</span></span> <span data-ttu-id="3488d-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-103">에 포함 된 메서드는 <xref:System.Windows.Forms.ControlPaint> 클래스를 사용 하는 고유한 컨트롤 또는 컨트롤의 요소를 그릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-103">The methods contained in the <xref:System.Windows.Forms.ControlPaint> class enable you to draw your own controls or elements of controls.</span></span> <span data-ttu-id="3488d-104">경우에 사용자 지정 컨트롤 그리기를 제어할 수는 <xref:System.Windows.Forms.ControlStyles.UserPaint> 비트가 `true` 컨트롤에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-104">You can control the drawing of your own controls if the <xref:System.Windows.Forms.ControlStyles.UserPaint> bit is set to `true` for the control.</span></span> <span data-ttu-id="3488d-105">호출 하 여 스타일 비트가 설정 또는 얻을 수 있습니다는 <xref:System.Windows.Forms.Control.GetStyle%2A> 또는 <xref:System.Windows.Forms.Control.SetStyle%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3488d-105">You can get or set the style bits by calling the <xref:System.Windows.Forms.Control.GetStyle%2A> or <xref:System.Windows.Forms.Control.SetStyle%2A> methods.</span></span> <span data-ttu-id="3488d-106">모든 컨트롤에 대 한 여러 스타일 비트를 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-106">You can set multiple style bits for any control.</span></span> <span data-ttu-id="3488d-107"><xref:System.Windows.Forms.ControlStyles> 열거형 멤버는 비트 연산을 함께 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-107">The <xref:System.Windows.Forms.ControlStyles> enumeration members can be combined with bitwise operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3488d-108">다음 코드 예제에서는 중 하나를 사용 하는 <xref:System.Windows.Forms.ControlPaint> 평면으로 그릴 생성자 <xref:System.Windows.Forms.Button> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-108">The following code example uses one of the <xref:System.Windows.Forms.ControlPaint> constructors to draw a flat <xref:System.Windows.Forms.Button> control.</span></span>  
  
 [!code-cpp[ButtonState#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ButtonState/CPP/buttonstate1.cpp#2)]
 [!code-csharp[ButtonState#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ButtonState/CS/buttonstate1.cs#2)]
 [!code-vb[ButtonState#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ButtonState/VB/buttonstate1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Control" />
    <altmember cref="T:System.Windows.Forms.ControlStyles" />
  </Docs>
  <Members>
    <Member MemberName="ContrastControlDark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color ContrastControlDark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Drawing.Color ContrastControlDark" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ControlPaint.ContrastControlDark" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContrastControlDark As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Color ContrastControlDark { System::Drawing::Color get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3488d-109"><see cref="P:System.Drawing.SystemColors.ControlDark" /> 색으로 사용할 색을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-109">Gets the color to use as the <see cref="P:System.Drawing.SystemColors.ControlDark" /> color.</span></span></summary>
        <value><span data-ttu-id="3488d-110"><see cref="T:System.Drawing.Color" /> 색으로 사용할 <see cref="P:System.Drawing.SystemColors.ControlDark" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-110">The <see cref="T:System.Drawing.Color" /> to use as the <see cref="P:System.Drawing.SystemColors.ControlDark" /> color.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-111">사용자가 활성화 하는 경우는 <xref:System.Windows.Forms.SystemInformation.HighContrast%2A> 모드에서는이 속성이 <xref:System.Drawing.SystemColors.WindowFrame%2A?displayProperty=nameWithType>, 그렇지 않으면로 설정 된 <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-111">If the user has enabled the <xref:System.Windows.Forms.SystemInformation.HighContrast%2A> mode, this property is set to <xref:System.Drawing.SystemColors.WindowFrame%2A?displayProperty=nameWithType>; otherwise, it is set to <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.SystemInformation" />
        <altmember cref="T:System.Drawing.SystemColors" />
      </Docs>
    </Member>
    <Member MemberName="CreateHBitmap16Bit">
      <MemberSignature Language="C#" Value="public static IntPtr CreateHBitmap16Bit (System.Drawing.Bitmap bitmap, System.Drawing.Color background);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateHBitmap16Bit(class System.Drawing.Bitmap bitmap, valuetype System.Drawing.Color background) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.CreateHBitmap16Bit(System.Drawing.Bitmap,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateHBitmap16Bit(System::Drawing::Bitmap ^ bitmap, System::Drawing::Color background);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" />
        <Parameter Name="background" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="bitmap"><span data-ttu-id="3488d-112">만들 <see cref="T:System.Drawing.Bitmap" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-112">The <see cref="T:System.Drawing.Bitmap" /> to create.</span></span></param>
        <param name="background"><span data-ttu-id="3488d-113">배경의 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-113">The <see cref="T:System.Drawing.Color" /> of the background.</span></span></param>
        <summary><span data-ttu-id="3488d-114">16비트 색 비트맵을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-114">Creates a 16-bit color bitmap.</span></span></summary>
        <returns><span data-ttu-id="3488d-115">비트맵에 대한 핸들을 나타내는 <see cref="T:System.IntPtr" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-115">An <see cref="T:System.IntPtr" /> representing the handle to the bitmap.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHBitmapColorMask">
      <MemberSignature Language="C#" Value="public static IntPtr CreateHBitmapColorMask (System.Drawing.Bitmap bitmap, IntPtr monochromeMask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateHBitmapColorMask(class System.Drawing.Bitmap bitmap, native int monochromeMask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.CreateHBitmapColorMask(System.Drawing.Bitmap,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateHBitmapColorMask(System::Drawing::Bitmap ^ bitmap, IntPtr monochromeMask);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" />
        <Parameter Name="monochromeMask" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="bitmap"><span data-ttu-id="3488d-116">만들 <see cref="T:System.Drawing.Bitmap" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-116">The <see cref="T:System.Drawing.Bitmap" /> to create.</span></span></param>
        <param name="monochromeMask"><span data-ttu-id="3488d-117">단색 마스크에 대한 포인터입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-117">A pointer to the monochrome mask.</span></span></param>
        <summary><span data-ttu-id="3488d-118">이미지를 사용하여 Win32 <see langword="HBITMAP" />을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-118">Creates a Win32 <see langword="HBITMAP" /> out of the image.</span></span></summary>
        <returns><span data-ttu-id="3488d-119">비트맵에 대한 핸들을 나타내는 <see cref="T:System.IntPtr" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-119">An <see cref="T:System.IntPtr" /> representing the handle to the bitmap.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-120">할당을 취소 하는 일을 담당 하는 `HBITMAP`합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-120">You are responsible for de-allocating the `HBITMAP`.</span></span> <span data-ttu-id="3488d-121">이미지 투명도 사용 하는 백그라운드 지정 된 색으로 채워집니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-121">If the image uses transparency, the background will be filled with the specified color.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHBitmapTransparencyMask">
      <MemberSignature Language="C#" Value="public static IntPtr CreateHBitmapTransparencyMask (System.Drawing.Bitmap bitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateHBitmapTransparencyMask(class System.Drawing.Bitmap bitmap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.CreateHBitmapTransparencyMask(System.Drawing.Bitmap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateHBitmapTransparencyMask(System::Drawing::Bitmap ^ bitmap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" />
      </Parameters>
      <Docs>
        <param name="bitmap"><span data-ttu-id="3488d-122">투명도 마스크를 만들 <see cref="T:System.Drawing.Bitmap" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-122">The <see cref="T:System.Drawing.Bitmap" /> to create the transparency mask for.</span></span></param>
        <summary><span data-ttu-id="3488d-123">지정된 비트맵에 대해 투명하게 표시되어야 하는 색을 나타내는 색 마스크를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-123">Creates a color mask for the specified bitmap that indicates which color should be displayed as transparent.</span></span></summary>
        <returns><span data-ttu-id="3488d-124"><see cref="T:System.Drawing.Bitmap" /> 마스크에 대한 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-124">The handle to the <see cref="T:System.Drawing.Bitmap" /> mask.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-125">비트맵을 할당 취소 책임이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-125">You are responsible for de-allocating the bitmap.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dark">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3488d-126">컨트롤에 대해 짙은 색 개체를 새로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-126">Creates a new dark color object for the control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color Dark (System.Drawing.Color baseColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color Dark(valuetype System.Drawing.Color baseColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dark (baseColor As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color Dark(System::Drawing::Color baseColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="baseColor"><span data-ttu-id="3488d-127">짙게 나타낼 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-127">The <see cref="T:System.Drawing.Color" /> to be darkened.</span></span></param>
        <summary><span data-ttu-id="3488d-128">지정된 색에서 컨트롤에 대한 짙은 색 개체를 새로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-128">Creates a new dark color object for the control from the specified color.</span></span></summary>
        <returns><span data-ttu-id="3488d-129">컨트롤의 짙은 색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-129">A <see cref="T:System.Drawing.Color" /> that represents the dark color on the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-130">하는 경우 지정 된 <xref:System.Drawing.Color> 중 하나는 <xref:System.Drawing.SystemColors>, 색으로 변환 됩니다는 <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=nameWithType> 색상; 색의 명도 값은 감소 하는 그렇지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="3488d-130">If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=nameWithType> color; otherwise, the color's luminosity value is decreased.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color Dark (System.Drawing.Color baseColor, float percOfDarkDark);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color Dark(valuetype System.Drawing.Color baseColor, float32 percOfDarkDark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.Dark(System.Drawing.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dark (baseColor As Color, percOfDarkDark As Single) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color Dark(System::Drawing::Color baseColor, float percOfDarkDark);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
        <Parameter Name="percOfDarkDark" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="baseColor"><span data-ttu-id="3488d-131">짙게 나타낼 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-131">The <see cref="T:System.Drawing.Color" /> to be darkened.</span></span></param>
        <param name="percOfDarkDark"><span data-ttu-id="3488d-132">지정된 <see cref="T:System.Drawing.Color" />를 짙게 나타낼 비율입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-132">The percentage to darken the specified <see cref="T:System.Drawing.Color" />.</span></span></param>
        <summary><span data-ttu-id="3488d-133">지정된 색에서 컨트롤에 대한 짙은 색 개체를 새로 만든 다음 지정된 비율만큼 짙게 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-133">Creates a new dark color object for the control from the specified color and darkens it by the specified percentage.</span></span></summary>
        <returns><span data-ttu-id="3488d-134">컨트롤의 짙은 색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-134">A <see cref="T:System.Drawing.Color" /> that represent the dark color on the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-135">하는 경우 지정 된 <xref:System.Drawing.Color> 중 하나는 <xref:System.Drawing.SystemColors>, 색으로 변환 됩니다는 <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=nameWithType> 색상; 색의 명도 값은 감소 하는 그렇지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="3488d-135">If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlDark%2A?displayProperty=nameWithType> color; otherwise, the color's luminosity value is decreased.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DarkDark">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color DarkDark (System.Drawing.Color baseColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color DarkDark(valuetype System.Drawing.Color baseColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DarkDark(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DarkDark (baseColor As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color DarkDark(System::Drawing::Color baseColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="baseColor"><span data-ttu-id="3488d-136">짙게 나타낼 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-136">The <see cref="T:System.Drawing.Color" /> to be darkened.</span></span></param>
        <summary><span data-ttu-id="3488d-137">지정된 색에서 컨트롤에 대한 짙은 색 개체를 새로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-137">Creates a new dark color object for the control from the specified color.</span></span></summary>
        <returns><span data-ttu-id="3488d-138">컨트롤의 짙은 색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-138">A <see cref="T:System.Drawing.Color" /> that represents the dark color on the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-139">하는 경우 지정 된 <xref:System.Drawing.Color> 중 하나는 <xref:System.Drawing.SystemColors>, 색으로 변환 됩니다는 <xref:System.Drawing.SystemColors.ControlDarkDark%2A?displayProperty=nameWithType> 색상; 색의 명도 값이 증가 하는 그렇지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="3488d-139">If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to the <xref:System.Drawing.SystemColors.ControlDarkDark%2A?displayProperty=nameWithType> color; otherwise, the color's luminosity value is increased.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawBorder">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3488d-140">단추 스타일의 컨트롤에 테두리를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-140">Draws a border on a button-style control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawBorder">
      <MemberSignature Language="C#" Value="public static void DrawBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds, System.Drawing.Color color, System.Windows.Forms.ButtonBorderStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color color, valuetype System.Windows.Forms.ButtonBorderStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.ButtonBorderStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle bounds, System::Drawing::Color color, System::Windows::Forms::ButtonBorderStyle style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="style" Type="System.Windows.Forms.ButtonBorderStyle" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-141">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-141">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="bounds"><span data-ttu-id="3488d-142">테두리의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-142">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the border.</span></span></param>
        <param name="color"><span data-ttu-id="3488d-143">테두리의 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-143">The <see cref="T:System.Drawing.Color" /> of the border.</span></span></param>
        <param name="style"><span data-ttu-id="3488d-144">테두리 스타일을 지정하는 <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-144">One of the <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> values that specifies the style of the border.</span></span></param>
        <summary><span data-ttu-id="3488d-145">지정된 그래픽 표면의 지정된 범위 내에 지정된 스타일 및 색으로 단추 스타일 컨트롤의 테두리를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-145">Draws a border with the specified style and color, on the specified graphics surface, and within the specified bounds on a button-style control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3488d-146">다음 코드 예제에서는 중 하나의 사용을 보여 줍니다.는 <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3488d-146">The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods.</span></span> <span data-ttu-id="3488d-147">이 예제를 실행 하려면 가져오는 폼에 다음 코드를 붙여넣습니다는 <xref:System.Windows.Forms> 및 <xref:System.Drawing> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-147">To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="3488d-148">폼의 확인 <xref:System.Windows.Forms.Control.Paint> 이벤트는이 예제의 이벤트 처리기와 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-148">Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBorder">
      <MemberSignature Language="C#" Value="public static void DrawBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds, System.Drawing.Color leftColor, int leftWidth, System.Windows.Forms.ButtonBorderStyle leftStyle, System.Drawing.Color topColor, int topWidth, System.Windows.Forms.ButtonBorderStyle topStyle, System.Drawing.Color rightColor, int rightWidth, System.Windows.Forms.ButtonBorderStyle rightStyle, System.Drawing.Color bottomColor, int bottomWidth, System.Windows.Forms.ButtonBorderStyle bottomStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color leftColor, int32 leftWidth, valuetype System.Windows.Forms.ButtonBorderStyle leftStyle, valuetype System.Drawing.Color topColor, int32 topWidth, valuetype System.Windows.Forms.ButtonBorderStyle topStyle, valuetype System.Drawing.Color rightColor, int32 rightWidth, valuetype System.Windows.Forms.ButtonBorderStyle rightStyle, valuetype System.Drawing.Color bottomColor, int32 bottomWidth, valuetype System.Windows.Forms.ButtonBorderStyle bottomStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle,System.Drawing.Color,System.Int32,System.Windows.Forms.ButtonBorderStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle bounds, System::Drawing::Color leftColor, int leftWidth, System::Windows::Forms::ButtonBorderStyle leftStyle, System::Drawing::Color topColor, int topWidth, System::Windows::Forms::ButtonBorderStyle topStyle, System::Drawing::Color rightColor, int rightWidth, System::Windows::Forms::ButtonBorderStyle rightStyle, System::Drawing::Color bottomColor, int bottomWidth, System::Windows::Forms::ButtonBorderStyle bottomStyle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="leftColor" Type="System.Drawing.Color" />
        <Parameter Name="leftWidth" Type="System.Int32" />
        <Parameter Name="leftStyle" Type="System.Windows.Forms.ButtonBorderStyle" />
        <Parameter Name="topColor" Type="System.Drawing.Color" />
        <Parameter Name="topWidth" Type="System.Int32" />
        <Parameter Name="topStyle" Type="System.Windows.Forms.ButtonBorderStyle" />
        <Parameter Name="rightColor" Type="System.Drawing.Color" />
        <Parameter Name="rightWidth" Type="System.Int32" />
        <Parameter Name="rightStyle" Type="System.Windows.Forms.ButtonBorderStyle" />
        <Parameter Name="bottomColor" Type="System.Drawing.Color" />
        <Parameter Name="bottomWidth" Type="System.Int32" />
        <Parameter Name="bottomStyle" Type="System.Windows.Forms.ButtonBorderStyle" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-149">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-149">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="bounds"><span data-ttu-id="3488d-150">테두리의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-150">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the border.</span></span></param>
        <param name="leftColor"><span data-ttu-id="3488d-151">테두리 왼쪽의 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-151">The <see cref="T:System.Drawing.Color" /> of the left of the border.</span></span></param>
        <param name="leftWidth"><span data-ttu-id="3488d-152">왼쪽 테두리의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-152">The width of the left border.</span></span></param>
        <param name="leftStyle"><span data-ttu-id="3488d-153">왼쪽 테두리 스타일을 지정하는 <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-153">One of the <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> values that specifies the style of the left border.</span></span></param>
        <param name="topColor"><span data-ttu-id="3488d-154">테두리 위쪽의 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-154">The <see cref="T:System.Drawing.Color" /> of the top of the border.</span></span></param>
        <param name="topWidth"><span data-ttu-id="3488d-155">위쪽 테두리의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-155">The width of the top border.</span></span></param>
        <param name="topStyle"><span data-ttu-id="3488d-156">위쪽 테두리 스타일을 지정하는 <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-156">One of the <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> values that specifies the style of the top border.</span></span></param>
        <param name="rightColor"><span data-ttu-id="3488d-157">테두리 오른쪽의 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-157">The <see cref="T:System.Drawing.Color" /> of the right of the border.</span></span></param>
        <param name="rightWidth"><span data-ttu-id="3488d-158">오른쪽 테두리의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-158">The width of the right border.</span></span></param>
        <param name="rightStyle"><span data-ttu-id="3488d-159">오른쪽 테두리 스타일을 지정하는 <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-159">One of the <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> values that specifies the style of the right border.</span></span></param>
        <param name="bottomColor"><span data-ttu-id="3488d-160">테두리 아래쪽의 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-160">The <see cref="T:System.Drawing.Color" /> of the bottom of the border.</span></span></param>
        <param name="bottomWidth"><span data-ttu-id="3488d-161">아래쪽 테두리의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-161">The width of the bottom border.</span></span></param>
        <param name="bottomStyle"><span data-ttu-id="3488d-162">아래쪽 테두리 스타일을 지정하는 <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-162">One of the <see cref="T:System.Windows.Forms.ButtonBorderStyle" /> values that specifies the style of the bottom border.</span></span></param>
        <summary><span data-ttu-id="3488d-163">지정된 그래픽 표면의 지정된 범위 내에 지정된 스타일, 색 및 테두리 너비를 사용하여 단추 스타일 컨트롤의 테두리를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-163">Draws a border on a button-style control with the specified styles, colors, and border widths; on the specified graphics surface; and within the specified bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3488d-164">다음 코드 예제에서는 중 하나의 사용을 보여 줍니다.는 <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3488d-164">The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods.</span></span> <span data-ttu-id="3488d-165">이 예제를 실행 하려면 가져오는 폼에 다음 코드를 붙여넣습니다는 <xref:System.Windows.Forms> 및 <xref:System.Drawing> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-165">To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="3488d-166">폼의 확인 <xref:System.Windows.Forms.Control.Paint> 이벤트는이 예제의 이벤트 처리기와 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-166">Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ButtonBorderStyle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawBorder3D">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3488d-167">컨트롤에 3차원 스타일의 테두리를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-167">Draws a three-dimensional style border on a control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-168">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-168">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="3488d-169">테두리의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-169">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the border.</span></span></param>
        <summary><span data-ttu-id="3488d-170">지정된 그래픽 표면의 지정된 범위 내에 컨트롤의 3차원 스타일 테두리를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-170">Draws a three-dimensional style border on the specified graphics surface and within the specified bounds on a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-171"><xref:System.Windows.Forms.Border3DStyle.Etched?displayProperty=nameWithType> 스타일 테두리를 그리는 기본적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-171">The <xref:System.Windows.Forms.Border3DStyle.Etched?displayProperty=nameWithType> style is used by default to draw the border.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3488d-172">다음 코드 예제에서는 중 하나의 사용을 보여 줍니다.는 <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3488d-172">The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods.</span></span> <span data-ttu-id="3488d-173">이 예제를 실행 하려면 가져오는 폼에 다음 코드를 붙여넣습니다는 <xref:System.Windows.Forms> 및 <xref:System.Drawing> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-173">To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="3488d-174">폼의 확인 <xref:System.Windows.Forms.Control.Paint> 이벤트는이 예제의 이벤트 처리기와 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-174">Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.Border3DStyle" />
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.Border3DStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.Border3DStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::Border3DStyle style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="style" Type="System.Windows.Forms.Border3DStyle" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-175">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-175">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="3488d-176">테두리의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-176">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the border.</span></span></param>
        <param name="style"><span data-ttu-id="3488d-177">테두리 스타일을 지정하는 <see cref="T:System.Windows.Forms.Border3DStyle" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-177">One of the <see cref="T:System.Windows.Forms.Border3DStyle" /> values that specifies the style of the border.</span></span></param>
        <summary><span data-ttu-id="3488d-178">지정된 그래픽 표면의 지정된 범위 내에 지정된 스타일로 컨트롤의 3차원 스타일 테두리를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-178">Draws a three-dimensional style border with the specified style, on the specified graphics surface, and within the specified bounds on a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3488d-179">다음 코드 예제에서는 중 하나의 사용을 보여 줍니다.는 <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3488d-179">The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods.</span></span> <span data-ttu-id="3488d-180">이 예제를 실행 하려면 가져오는 폼에 다음 코드를 붙여넣습니다는 <xref:System.Windows.Forms> 및 <xref:System.Drawing> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-180">To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="3488d-181">폼의 확인 <xref:System.Windows.Forms.Control.Paint> 이벤트는이 예제의 이벤트 처리기와 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-181">Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.Border3DStyle" />
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.Border3DStyle style, System.Windows.Forms.Border3DSide sides);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.Border3DStyle style, valuetype System.Windows.Forms.Border3DSide sides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::Border3DStyle style, System::Windows::Forms::Border3DSide sides);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="style" Type="System.Windows.Forms.Border3DStyle" />
        <Parameter Name="sides" Type="System.Windows.Forms.Border3DSide" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-182">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-182">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="3488d-183">테두리의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-183">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the border.</span></span></param>
        <param name="style"><span data-ttu-id="3488d-184">테두리 스타일을 지정하는 <see cref="T:System.Windows.Forms.Border3DStyle" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-184">One of the <see cref="T:System.Windows.Forms.Border3DStyle" /> values that specifies the style of the border.</span></span></param>
        <param name="sides"><span data-ttu-id="3488d-185">테두리를 그릴 사각형의 가장자리를 지정하는 <see cref="T:System.Windows.Forms.Border3DSide" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-185">One of the <see cref="T:System.Windows.Forms.Border3DSide" /> values that specifies the side of the rectangle to draw the border on.</span></span></param>
        <summary><span data-ttu-id="3488d-186">지정된 그래픽 표면 및 지정된 범위 내에 지정된 스타일 및 방향으로 컨트롤의 3차원 스타일 테두리를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-186">Draws a three-dimensional style border with the specified style, on the specified graphics surface and sides, and within the specified bounds on a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3488d-187">다음 코드 예제에서는 중 하나의 사용을 보여 줍니다.는 <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3488d-187">The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods.</span></span> <span data-ttu-id="3488d-188">이 예제를 실행 하려면 가져오는 폼에 다음 코드를 붙여넣습니다는 <xref:System.Windows.Forms> 및 <xref:System.Drawing> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-188">To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="3488d-189">폼의 확인 <xref:System.Windows.Forms.Control.Paint> 이벤트는이 예제의 이벤트 처리기와 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-189">Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.Border3DStyle" />
        <altmember cref="T:System.Windows.Forms.Border3DSide" />
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-190">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-190">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="3488d-191">테두리 사각형 왼쪽 위의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-191">The x-coordinate of the top left of the border rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="3488d-192">테두리 사각형 왼쪽 위의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-192">The y-coordinate of the top left of the border rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="3488d-193">테두리 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-193">The width of the border rectangle.</span></span></param>
        <param name="height"><span data-ttu-id="3488d-194">테두리 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-194">The height of the border rectangle.</span></span></param>
        <summary><span data-ttu-id="3488d-195">지정된 그래픽 표면의 지정된 범위 내에 컨트롤의 3차원 스타일 테두리를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-195">Draws a three-dimensional style border on the specified graphics surface and within the specified bounds on a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-196"><xref:System.Windows.Forms.Border3DStyle.Etched?displayProperty=nameWithType> 스타일 테두리를 그리는 기본적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-196">The <xref:System.Windows.Forms.Border3DStyle.Etched?displayProperty=nameWithType> style is used by default to draw the border.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3488d-197">다음 코드 예제에서는 중 하나의 사용을 보여 줍니다.는 <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3488d-197">The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods.</span></span> <span data-ttu-id="3488d-198">이 예제를 실행 하려면 가져오는 폼에 다음 코드를 붙여넣습니다는 <xref:System.Windows.Forms> 및 <xref:System.Drawing> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-198">To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="3488d-199">폼의 확인 <xref:System.Windows.Forms.Control.Paint> 이벤트는이 예제의 이벤트 처리기와 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-199">Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.Border3DStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.Border3DStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::Border3DStyle style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="style" Type="System.Windows.Forms.Border3DStyle" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-200">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-200">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="3488d-201">테두리 사각형 왼쪽 위의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-201">The x-coordinate of the top left of the border rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="3488d-202">테두리 사각형 왼쪽 위의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-202">The y-coordinate of the top left of the border rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="3488d-203">테두리 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-203">The width of the border rectangle.</span></span></param>
        <param name="height"><span data-ttu-id="3488d-204">테두리 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-204">The height of the border rectangle.</span></span></param>
        <param name="style"><span data-ttu-id="3488d-205">테두리 스타일을 지정하는 <see cref="T:System.Windows.Forms.Border3DStyle" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-205">One of the <see cref="T:System.Windows.Forms.Border3DStyle" /> values that specifies the style of the border.</span></span></param>
        <summary><span data-ttu-id="3488d-206">지정된 그래픽 표면의 지정된 범위 내에 지정된 스타일로 컨트롤의 3차원 스타일 테두리를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-206">Draws a three-dimensional style border with the specified style, on the specified graphics surface, and within the specified bounds on a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3488d-207">다음 코드 예제에서는 중 하나의 사용을 보여 줍니다.는 <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3488d-207">The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods.</span></span> <span data-ttu-id="3488d-208">이 예제를 실행 하려면 가져오는 폼에 다음 코드를 붙여넣습니다는 <xref:System.Windows.Forms> 및 <xref:System.Drawing> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-208">To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="3488d-209">폼의 확인 <xref:System.Windows.Forms.Control.Paint> 이벤트는이 예제의 이벤트 처리기와 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-209">Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Border3DStyle" />
      </Docs>
    </Member>
    <Member MemberName="DrawBorder3D">
      <MemberSignature Language="C#" Value="public static void DrawBorder3D (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.Border3DStyle style, System.Windows.Forms.Border3DSide sides);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawBorder3D(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.Border3DStyle style, valuetype System.Windows.Forms.Border3DSide sides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawBorder3D(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawBorder3D(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::Border3DStyle style, System::Windows::Forms::Border3DSide sides);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="style" Type="System.Windows.Forms.Border3DStyle" />
        <Parameter Name="sides" Type="System.Windows.Forms.Border3DSide" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-210">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-210">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="3488d-211">테두리 사각형 왼쪽 위의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-211">The x-coordinate of the top left of the border rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="3488d-212">테두리 사각형 왼쪽 위의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-212">The y-coordinate of the top left of the border rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="3488d-213">테두리 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-213">The width of the border rectangle.</span></span></param>
        <param name="height"><span data-ttu-id="3488d-214">테두리 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-214">The height of the border rectangle.</span></span></param>
        <param name="style"><span data-ttu-id="3488d-215">테두리 스타일을 지정하는 <see cref="T:System.Windows.Forms.Border3DStyle" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-215">One of the <see cref="T:System.Windows.Forms.Border3DStyle" /> values that specifies the style of the border.</span></span></param>
        <param name="sides"><span data-ttu-id="3488d-216">테두리를 그릴 사각형의 <see cref="T:System.Windows.Forms.Border3DSide" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-216">The <see cref="T:System.Windows.Forms.Border3DSide" /> of the rectangle to draw the border on.</span></span></param>
        <summary><span data-ttu-id="3488d-217">지정된 그래픽 표면 및 지정된 범위 내에 지정된 스타일 및 방향으로 컨트롤의 3차원 스타일 테두리를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-217">Draws a three-dimensional style border with the specified style, on the specified graphics surface and side, and within the specified bounds on a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3488d-218">다음 코드 예제에서는 중 하나의 사용을 보여 줍니다.는 <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3488d-218">The following code example demonstrates the use of one of the <xref:System.Windows.Forms.ControlPaint.DrawBorder3D%2A> methods.</span></span> <span data-ttu-id="3488d-219">이 예제를 실행 하려면 가져오는 폼에 다음 코드를 붙여넣습니다는 <xref:System.Windows.Forms> 및 <xref:System.Drawing> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-219">To run this example, paste the following code in a form that imports the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="3488d-220">폼의 확인 <xref:System.Windows.Forms.Control.Paint> 이벤트는이 예제의 이벤트 처리기와 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-220">Ensure the form's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Border3DStyle" />
        <altmember cref="T:System.Windows.Forms.Border3DSide" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3488d-221">Button 컨트롤을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-221">Draws a button control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-222">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-222">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="3488d-223">단추의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-223">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the button.</span></span></param>
        <param name="state"><span data-ttu-id="3488d-224">단추를 그리기 위한 상태를 지정하는 <see cref="T:System.Windows.Forms.ButtonState" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-224">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the button in.</span></span></param>
        <summary><span data-ttu-id="3488d-225">지정된 그래픽 표면의 지정된 범위 내에 지정된 상태로 Button 컨트롤을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-225">Draws a button control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.Button" />
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-226">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-226">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="3488d-227">그리기 사각형의 왼쪽 위 모퉁이의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-227">The x-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="3488d-228">그리기 사각형의 왼쪽 위 모퉁이의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-228">The y-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="3488d-229">단추의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-229">The width of the button.</span></span></param>
        <param name="height"><span data-ttu-id="3488d-230">단추의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-230">The height of the button.</span></span></param>
        <param name="state"><span data-ttu-id="3488d-231">단추를 그리기 위한 상태를 지정하는 <see cref="T:System.Windows.Forms.ButtonState" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-231">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the button in.</span></span></param>
        <summary><span data-ttu-id="3488d-232">지정된 그래픽 표면의 지정된 범위 내에 지정된 상태로 Button 컨트롤을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-232">Draws a button control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[ButtonState#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ButtonState/CPP/buttonstate1.cpp#2)]
 [!code-csharp[ButtonState#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ButtonState/CS/buttonstate1.cs#2)]
 [!code-vb[ButtonState#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ButtonState/VB/buttonstate1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Button" />
        <altmember cref="T:System.Windows.Forms.ButtonState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawCaptionButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3488d-233">Caption Button 컨트롤을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-233">Draws a caption button control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawCaptionButton">
      <MemberSignature Language="C#" Value="public static void DrawCaptionButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.CaptionButton button, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawCaptionButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.CaptionButton button, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawCaptionButton(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::CaptionButton button, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="button" Type="System.Windows.Forms.CaptionButton" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-234">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-234">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="3488d-235">Caption Button의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-235">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the caption button.</span></span></param>
        <param name="button"><span data-ttu-id="3488d-236">그릴 Caption Button의 유형을 지정하는 <see cref="T:System.Windows.Forms.CaptionButton" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-236">One of the <see cref="T:System.Windows.Forms.CaptionButton" /> values that specifies the type of caption button to draw.</span></span></param>
        <param name="state"><span data-ttu-id="3488d-237">단추를 그리기 위한 상태를 지정하는 <see cref="T:System.Windows.Forms.ButtonState" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-237">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the button in.</span></span></param>
        <summary><span data-ttu-id="3488d-238">지정된 그래픽 표면의 지정된 범위 내에 지정된 상태로 지정된 Caption Button 컨트롤을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-238">Draws the specified caption button control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3488d-239">다음 코드 예제에서는 <xref:System.Windows.Forms.ControlPaint.DrawCaptionButton%2A?displayProperty=nameWithType> 메서드 및 <xref:System.Windows.Forms.CaptionButton> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-239">The following code example demonstrates the use of the <xref:System.Windows.Forms.ControlPaint.DrawCaptionButton%2A?displayProperty=nameWithType> method and the <xref:System.Windows.Forms.CaptionButton> enumeration.</span></span> <span data-ttu-id="3488d-240">이 예제를 실행 하려면 라는 단추가 포함 된 폼에 다음 코드를 붙여넣습니다 `Button1`합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-240">To run this example, paste the following code in a form containing a Button named `Button1`.</span></span> <span data-ttu-id="3488d-241">폼은 가져올는 <xref:System.Windows.Forms> 및 <xref:System.Drawing> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-241">The form should import the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="3488d-242">단추의 확인 <xref:System.Windows.Forms.Control.Paint> 이벤트는이 예제의 이벤트 처리기와 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-242">Ensure the button's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CaptionButton" />
      </Docs>
    </Member>
    <Member MemberName="DrawCaptionButton">
      <MemberSignature Language="C#" Value="public static void DrawCaptionButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.CaptionButton button, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawCaptionButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.CaptionButton button, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawCaptionButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.CaptionButton,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawCaptionButton(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::CaptionButton button, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Forms.CaptionButton" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-243">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-243">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="3488d-244">그리기 사각형 왼쪽 위의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-244">The x-coordinate of the top left of the drawing rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="3488d-245">그리기 사각형 왼쪽 위의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-245">The y-coordinate of the top left of the drawing rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="3488d-246">그리기 사각형의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-246">The width of the drawing rectangle.</span></span></param>
        <param name="height"><span data-ttu-id="3488d-247">그리기 사각형의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-247">The height of the drawing rectangle.</span></span></param>
        <param name="button"><span data-ttu-id="3488d-248">그릴 Caption Button의 유형을 지정하는 <see cref="T:System.Windows.Forms.CaptionButton" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-248">One of the <see cref="T:System.Windows.Forms.CaptionButton" /> values that specifies the type of caption button to draw.</span></span></param>
        <param name="state"><span data-ttu-id="3488d-249">단추를 그리기 위한 상태를 지정하는 <see cref="T:System.Windows.Forms.ButtonState" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-249">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the button in.</span></span></param>
        <summary><span data-ttu-id="3488d-250">지정된 그래픽 표면의 지정된 범위 내에 지정된 상태로 지정된 Caption Button 컨트롤을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-250">Draws the specified caption button control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3488d-251">다음 코드 예제에서는 <xref:System.Windows.Forms.ControlPaint.DrawCaptionButton%2A> 메서드 및 <xref:System.Windows.Forms.CaptionButton> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-251">The following code example demonstrates the use of the <xref:System.Windows.Forms.ControlPaint.DrawCaptionButton%2A> method and the <xref:System.Windows.Forms.CaptionButton> enumeration.</span></span> <span data-ttu-id="3488d-252">이 예제를 실행 하려면 포함 된 폼에 다음 코드를 붙여넣습니다는 <xref:System.Windows.Forms.Button> 라는 `Button1`합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-252">To run this example, paste the following code in a form containing a <xref:System.Windows.Forms.Button> named `Button1`.</span></span> <span data-ttu-id="3488d-253">폼은 가져올는 <xref:System.Windows.Forms> 및 <xref:System.Drawing> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-253">The form should import the <xref:System.Windows.Forms> and <xref:System.Drawing> namespaces.</span></span> <span data-ttu-id="3488d-254">단추의 확인 <xref:System.Windows.Forms.Control.Paint> 이벤트는이 예제의 이벤트 처리기와 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-254">Ensure the button's <xref:System.Windows.Forms.Control.Paint> event is associated with the event handler in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlPaintMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaintMembers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CaptionButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawCheckBox">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3488d-255">CheckBox 컨트롤을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-255">Draws a check box control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawCheckBox">
      <MemberSignature Language="C#" Value="public static void DrawCheckBox (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawCheckBox(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawCheckBox(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-256">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-256">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="3488d-257">확인란의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-257">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the check box.</span></span></param>
        <param name="state"><span data-ttu-id="3488d-258">확인란을 그리기 위한 상태를 지정하는 <see cref="T:System.Windows.Forms.ButtonState" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-258">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the check box in.</span></span></param>
        <summary><span data-ttu-id="3488d-259">지정된 그래픽 표면의 지정된 범위 내에 지정된 상태로 CheckBox 컨트롤을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-259">Draws a check box control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawCheckBox">
      <MemberSignature Language="C#" Value="public static void DrawCheckBox (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawCheckBox(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawCheckBox(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-260">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-260">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="3488d-261">그리기 사각형의 왼쪽 위 모퉁이의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-261">The x-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="3488d-262">그리기 사각형의 왼쪽 위 모퉁이의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-262">The y-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="3488d-263">확인란의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-263">The width of the check box.</span></span></param>
        <param name="height"><span data-ttu-id="3488d-264">확인란의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-264">The height of the check box.</span></span></param>
        <param name="state"><span data-ttu-id="3488d-265">확인란을 그리기 위한 상태를 지정하는 <see cref="T:System.Windows.Forms.ButtonState" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-265">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the check box in.</span></span></param>
        <summary><span data-ttu-id="3488d-266">지정된 그래픽 표면의 지정된 범위 내에 지정된 상태로 CheckBox 컨트롤을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-266">Draws a check box control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawComboButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3488d-267">Combo Box 컨트롤에 드롭다운 단추를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-267">Draws a drop-down button on a combo box control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawComboButton">
      <MemberSignature Language="C#" Value="public static void DrawComboButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawComboButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawComboButton(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-268">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-268">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="3488d-269">콤보 상자의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-269">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the combo box.</span></span></param>
        <param name="state"><span data-ttu-id="3488d-270">콤보 상자를 그릴 상태를 지정하는 <see cref="T:System.Windows.Forms.ButtonState" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-270">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the combo box in.</span></span></param>
        <summary><span data-ttu-id="3488d-271">지정된 그래픽 표면의 지정된 범위 내에 지정된 상태로 Combo Box 컨트롤의 드롭다운 단추를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-271">Draws a drop-down button on a combo box control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawComboButton">
      <MemberSignature Language="C#" Value="public static void DrawComboButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawComboButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawComboButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawComboButton(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-272">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-272">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="3488d-273">테두리 사각형 왼쪽 위의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-273">The x-coordinate of the top left of the border rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="3488d-274">테두리 사각형 왼쪽 위의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-274">The y-coordinate of the top left of the border rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="3488d-275">콤보 상자의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-275">The width of the combo box.</span></span></param>
        <param name="height"><span data-ttu-id="3488d-276">콤보 상자의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-276">The height of the combo box.</span></span></param>
        <param name="state"><span data-ttu-id="3488d-277">콤보 상자를 그릴 상태를 지정하는 <see cref="T:System.Windows.Forms.ButtonState" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-277">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the combo box in.</span></span></param>
        <summary><span data-ttu-id="3488d-278">지정된 그래픽 표면의 지정된 범위 내에 지정된 상태로 Combo Box 컨트롤의 드롭다운 단추를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-278">Draws a drop-down button on a combo box control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawContainerGrabHandle">
      <MemberSignature Language="C#" Value="public static void DrawContainerGrabHandle (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawContainerGrabHandle(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawContainerGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawContainerGrabHandle(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle bounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-279">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-279">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="bounds"><span data-ttu-id="3488d-280">잡기 핸들 기호의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-280">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the grab handle glyph.</span></span></param>
        <summary><span data-ttu-id="3488d-281">지정된 그래픽 표면의 지정된 범위 내에 Container 컨트롤 잡기 핸들 기호를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-281">Draws a container control grab handle glyph on the specified graphics surface and within the specified bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-282">잡기 핸들을 나타내는 사용자에 게 사용자는 컨테이너를 직접 조작할 수 컨테이너에 의해 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-282">Grab handles are used by containers to indicate to the user that the user can directly manipulate the containers.</span></span> <span data-ttu-id="3488d-283">이동 및 크기 조정 등의 작업 조작 구성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-283">The manipulation can consist of actions such as sizing and moving.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawFocusRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3488d-284">포커스 영역을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-284">Draws a focus rectangle.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public static void DrawFocusRectangle (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawFocusRectangle(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawFocusRectangle(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-285">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-285">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="3488d-286">잡기 핸들 기호의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-286">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the grab handle glyph.</span></span></param>
        <summary><span data-ttu-id="3488d-287">지정된 그래픽 표면의 지정된 범위 내에 포커스 영역을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-287">Draws a focus rectangle on the specified graphics surface and within the specified bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-288">포커스 사각형에는 Windows 현재 키보드 포커스가 있는 컨트롤을 나타내는 데 사용 하는 점선으로 표시 된 사각형이입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-288">A focus rectangle is a dotted rectangle that Windows uses to indicate what control has the current keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3488d-289">다음 코드 예제는 <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A> 메서드 및 <xref:System.Windows.Forms.Control.Handle%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-289">The following code example demonstrates using the <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A> method and the <xref:System.Windows.Forms.Control.Handle%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="3488d-290">이 예제를 실행 하려면 다음 코드를 폼에 붙여넣습니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-290">To run this example, paste the following code in a form.</span></span> <span data-ttu-id="3488d-291">라는 두 개의 단추를 추가 `Button1` 및 `Button2` 폼에 해당 이벤트 처리기에 연결 된 모든 이벤트를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-291">Add two buttons named `Button1` and `Button2` to the form and ensure all events are connected to their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public static void DrawFocusRectangle (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawFocusRectangle(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawFocusRectangle(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-292">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-292">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="3488d-293">잡기 핸들 기호의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-293">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the grab handle glyph.</span></span></param>
        <param name="foreColor"><span data-ttu-id="3488d-294">포커스 영역을 그릴 개체의 전경색에 해당하는 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-294">The <see cref="T:System.Drawing.Color" /> that is the foreground color of the object to draw the focus rectangle on.</span></span></param>
        <param name="backColor"><span data-ttu-id="3488d-295">포커스 영역을 그릴 개체의 배경색에 해당하는 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-295">The <see cref="T:System.Drawing.Color" /> that is the background color of the object to draw the focus rectangle on.</span></span></param>
        <summary><span data-ttu-id="3488d-296">지정된 그래픽 표면의 지정된 범위 내에 포커스 영역을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-296">Draws a focus rectangle on the specified graphics surface and within the specified bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-297">포커스 사각형에는 Windows 현재 키보드 포커스가 있는 컨트롤을 나타내는 데 사용 하는 점선으로 표시 된 사각형이입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-297">A focus rectangle is a dotted rectangle that Windows uses to indicate what control has the current keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3488d-298">다음 코드 예제는 <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A> 메서드 및 <xref:System.Windows.Forms.Control.Handle%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-298">The following code example demonstrates using the <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A> method and the <xref:System.Windows.Forms.Control.Handle%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="3488d-299">이 예제를 실행 하려면 다음 코드를 폼에 붙여넣습니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-299">To run this example, paste the following code in a form.</span></span> <span data-ttu-id="3488d-300">라는 두 개의 단추를 추가 `Button1` 및 폼에 Button2 하 고 모든 이벤트를 해당 이벤트 처리기에 연결 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-300">Add two buttons named `Button1` and Button2 to the form and ensure all events are connected to their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawGrabHandle">
      <MemberSignature Language="C#" Value="public static void DrawGrabHandle (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, bool primary, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawGrabHandle(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, bool primary, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawGrabHandle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawGrabHandle(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, bool primary, bool enabled);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="primary" Type="System.Boolean" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-301">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-301">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="3488d-302">잡기 핸들 기호의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-302">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the grab handle glyph.</span></span></param>
        <param name="primary">
          <span data-ttu-id="3488d-303">핸들을 기본 잡기 핸들로 그리려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-303"><see langword="true" /> to draw the handle as a primary grab handle; otherwise, <see langword="false" />.</span></span></param>
        <param name="enabled">
          <span data-ttu-id="3488d-304">핸들을 활성 상태로 그리려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-304"><see langword="true" /> to draw the handle in an enabled state; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3488d-305">지정된 그래픽 표면의 지정된 범위 내에 지정된 상태 및 스타일로 표준 선택 잡기 핸들 기호를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-305">Draws a standard selection grab handle glyph on the specified graphics surface, within the specified bounds, and in the specified state and style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-306">잡기 핸들을 사용자 개체를 직접 조작할 수는 사용자에 게 나타내기 위해 개체에서 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-306">Grab handles are used by objects to indicate to the user that the user can directly manipulate the object.</span></span> <span data-ttu-id="3488d-307">이동 및 크기 조정 등의 작업 조작 구성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-307">The manipulation can consist of actions such as sizing and moving.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawGrid">
      <MemberSignature Language="C#" Value="public static void DrawGrid (System.Drawing.Graphics graphics, System.Drawing.Rectangle area, System.Drawing.Size pixelsBetweenDots, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawGrid(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle area, valuetype System.Drawing.Size pixelsBetweenDots, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawGrid(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawGrid(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle area, System::Drawing::Size pixelsBetweenDots, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="area" Type="System.Drawing.Rectangle" />
        <Parameter Name="pixelsBetweenDots" Type="System.Drawing.Size" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-308">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-308">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="area"><span data-ttu-id="3488d-309">모눈의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-309">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the grid.</span></span></param>
        <param name="pixelsBetweenDots"><span data-ttu-id="3488d-310">모눈의 점 사이 높이와 너비를 지정하는 <see cref="T:System.Drawing.Size" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-310">The <see cref="T:System.Drawing.Size" /> that specified the height and width between the dots of the grid.</span></span></param>
        <param name="backColor"><span data-ttu-id="3488d-311">모눈 뒤에 나타나는 배경의 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-311">The <see cref="T:System.Drawing.Color" /> of the background behind the grid.</span></span></param>
        <summary><span data-ttu-id="3488d-312">지정된 그래픽 표면의 지정된 범위 내에 지정된 색 및 간격으로 1픽셀 크기의 점으로 구성된 모눈을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-312">Draws a grid of one-pixel dots with the specified spacing, within the specified bounds, on the specified graphics surface, and in the specified color.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-313">`backColor` 매개 변수를 사용 하는 그리드 배경 항상 되도록 점의 채우기 색을 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-313">The `backColor` parameter is used to calculate the fill color of the dots so that the grid is always visible against the background.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawImageDisabled">
      <MemberSignature Language="C#" Value="public static void DrawImageDisabled (System.Drawing.Graphics graphics, System.Drawing.Image image, int x, int y, System.Drawing.Color background);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawImageDisabled(class System.Drawing.Graphics graphics, class System.Drawing.Image image, int32 x, int32 y, valuetype System.Drawing.Color background) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawImageDisabled(System.Drawing.Graphics,System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawImageDisabled(System::Drawing::Graphics ^ graphics, System::Drawing::Image ^ image, int x, int y, System::Drawing::Color background);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="background" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-314">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-314">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="image"><span data-ttu-id="3488d-315">그릴 <see cref="T:System.Drawing.Image" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-315">The <see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="x"><span data-ttu-id="3488d-316">테두리 이미지 왼쪽 위의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-316">The x-coordinate of the top left of the border image.</span></span></param>
        <param name="y"><span data-ttu-id="3488d-317">테두리 이미지 왼쪽 위의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-317">The y-coordinate of the top left of the border image.</span></span></param>
        <param name="background"><span data-ttu-id="3488d-318">이미지 뒤에 나타나는 배경의 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-318">The <see cref="T:System.Drawing.Color" /> of the background behind the image.</span></span></param>
        <summary><span data-ttu-id="3488d-319">지정된 이미지를 비활성 상태로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-319">Draws the specified image in a disabled state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-320">`background` 매개 변수는 배경 항상 되도록 사용 하지 않는 이미지의 채우기 색을 계산에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-320">The `background` parameter is used to calculate the fill color of the disabled image so that it is always visible against the background.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Image" />
      </Docs>
    </Member>
    <Member MemberName="DrawLockedFrame">
      <MemberSignature Language="C#" Value="public static void DrawLockedFrame (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, bool primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawLockedFrame(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, bool primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawLockedFrame(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawLockedFrame(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, bool primary);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="primary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-321">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-321">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="3488d-322">프레임의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-322">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the frame.</span></span></param>
        <param name="primary">
          <span data-ttu-id="3488d-323">기본 선택 항목에 사용되는 색으로 이 프레임을 그리려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-323"><see langword="true" /> to draw this frame with the colors used for the primary selection; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3488d-324">화면에서 지정된 그래픽 표면의 지정된 범위 내에 잠긴 선택 프레임을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-324">Draws a locked selection frame on the screen within the specified bounds and on the specified graphics surface.</span></span> <span data-ttu-id="3488d-325">선택된 기본 색으로 프레임을 그릴지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-325">Specifies whether to draw the frame with the primary selected colors.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawMenuGlyph">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3488d-326">Menu Item 컨트롤에 메뉴 기호를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-326">Draws a menu glyph on a menu item control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawMenuGlyph">
      <MemberSignature Language="C#" Value="public static void DrawMenuGlyph (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.MenuGlyph glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMenuGlyph(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.MenuGlyph glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMenuGlyph(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::MenuGlyph glyph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="glyph" Type="System.Windows.Forms.MenuGlyph" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-327">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-327">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="3488d-328">기호의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-328">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the glyph.</span></span></param>
        <param name="glyph"><span data-ttu-id="3488d-329">그릴 이미지를 지정하는 <see cref="T:System.Windows.Forms.MenuGlyph" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-329">One of the <see cref="T:System.Windows.Forms.MenuGlyph" /> values that specifies the image to draw.</span></span></param>
        <summary><span data-ttu-id="3488d-330">지정된 그래픽 표면의 지정된 범위 내에 Menu Item 컨트롤의 지정된 메뉴 기호를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-330">Draws the specified menu glyph on a menu item control within the specified bounds and on the specified surface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-331">소유자가 그린 <xref:System.Windows.Forms.MenuItem> 제거 되도록 올바른 문자 모양을 결정 하는 속성 값을 확인 해야 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-331">When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove.</span></span> <span data-ttu-id="3488d-332">예를 들어 때는 <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> 속성이로 설정 되어 `true`를 호출 해야 합니다는 <xref:System.Windows.Forms.MenuGlyph.Checkmark> 값 <xref:System.Windows.Forms.MenuGlyph> 에 확인 표시를 그리는 <xref:System.Windows.Forms.MenuItem>합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-332">For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> property is set to `true`, you must call the <xref:System.Windows.Forms.MenuGlyph.Checkmark> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.MenuGlyph" />
      </Docs>
    </Member>
    <Member MemberName="DrawMenuGlyph">
      <MemberSignature Language="C#" Value="public static void DrawMenuGlyph (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.MenuGlyph glyph, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMenuGlyph(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.MenuGlyph glyph, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMenuGlyph(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::MenuGlyph glyph, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="glyph" Type="System.Windows.Forms.MenuGlyph" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-333">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-333">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="3488d-334">기호의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-334">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the glyph.</span></span></param>
        <param name="glyph"><span data-ttu-id="3488d-335">그릴 이미지를 지정하는 <see cref="T:System.Windows.Forms.MenuGlyph" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-335">One of the <see cref="T:System.Windows.Forms.MenuGlyph" /> values that specifies the image to draw.</span></span></param>
        <param name="foreColor"><span data-ttu-id="3488d-336"><see cref="P:System.Drawing.Color.White" />를 바꾸는 전경색입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-336">The color that replaces <see cref="P:System.Drawing.Color.White" /> as the foreground color.</span></span></param>
        <param name="backColor"><span data-ttu-id="3488d-337"><see cref="P:System.Drawing.Color.Black" />을 바꾸는 배경색입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-337">The color that replaces <see cref="P:System.Drawing.Color.Black" /> as the background color.</span></span></param>
        <summary><span data-ttu-id="3488d-338"><see cref="P:System.Drawing.Color.White" />를 <paramref name="backColor" /> 매개 변수에 지정된 색으로 바꾸고 <see cref="P:System.Drawing.Color.Black" />을 <paramref name="foreColor" /> 매개 변수에 지정된 색으로 바꾸어 지정된 표면의 지정된 범위 내에 메뉴 항목 컨트롤의 지정된 메뉴 기호를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-338">Draws the specified menu glyph on a menu item control within the specified bounds and on the specified surface, replacing <see cref="P:System.Drawing.Color.White" /> with the color specified in the <paramref name="backColor" /> parameter and replacing <see cref="P:System.Drawing.Color.Black" /> with the color specified in the <paramref name="foreColor" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-339">소유자가 그린 <xref:System.Windows.Forms.MenuItem> 제거 되도록 올바른 문자 모양을 결정 하는 속성 값을 확인 해야 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-339">When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove.</span></span> <span data-ttu-id="3488d-340">예를 들어 때는 <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> 속성이로 설정 되어 `true`를 호출 해야 합니다는 <xref:System.Windows.Forms.MenuGlyph.Checkmark> 값 <xref:System.Windows.Forms.MenuGlyph> 에 확인 표시를 그리는 <xref:System.Windows.Forms.MenuItem>합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-340">For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> property is set to `true`, you must call the <xref:System.Windows.Forms.MenuGlyph.Checkmark> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.MenuGlyph" />
      </Docs>
    </Member>
    <Member MemberName="DrawMenuGlyph">
      <MemberSignature Language="C#" Value="public static void DrawMenuGlyph (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.MenuGlyph glyph);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMenuGlyph(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.MenuGlyph glyph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMenuGlyph(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::MenuGlyph glyph);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="glyph" Type="System.Windows.Forms.MenuGlyph" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-341">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-341">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="3488d-342">그리기 사각형의 왼쪽 위 모퉁이의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-342">The x-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="3488d-343">그리기 사각형의 왼쪽 위 모퉁이의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-343">The y-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="3488d-344">메뉴 기호의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-344">The width of the menu glyph.</span></span></param>
        <param name="height"><span data-ttu-id="3488d-345">메뉴 기호의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-345">The height of the menu glyph.</span></span></param>
        <param name="glyph"><span data-ttu-id="3488d-346">그릴 이미지를 지정하는 <see cref="T:System.Windows.Forms.MenuGlyph" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-346">One of the <see cref="T:System.Windows.Forms.MenuGlyph" /> values that specifies the image to draw.</span></span></param>
        <summary><span data-ttu-id="3488d-347">지정된 그래픽 표면의 지정된 범위 내에 Menu Item 컨트롤의 지정된 메뉴 기호를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-347">Draws the specified menu glyph on a menu item control with the specified bounds and on the specified surface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-348">소유자가 그린 <xref:System.Windows.Forms.MenuItem> 제거 되도록 올바른 문자 모양을 결정 하는 속성 값을 확인 해야 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-348">When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove.</span></span> <span data-ttu-id="3488d-349">예를 들어,는 <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> 속성이로 설정 되어 호출 true 이면는 <xref:System.Windows.Forms.MenuGlyph.Checkmark> 값 <xref:System.Windows.Forms.MenuGlyph> 에 확인 표시를 그리는 <xref:System.Windows.Forms.MenuItem>합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-349">For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> property is set to true, you call the <xref:System.Windows.Forms.MenuGlyph.Checkmark> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawMenuGlyph">
      <MemberSignature Language="C#" Value="public static void DrawMenuGlyph (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.MenuGlyph glyph, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMenuGlyph(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.MenuGlyph glyph, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMenuGlyph(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MenuGlyph,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMenuGlyph(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::MenuGlyph glyph, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="glyph" Type="System.Windows.Forms.MenuGlyph" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-350">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-350">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="3488d-351">그리기 사각형의 왼쪽 위 모퉁이의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-351">The x-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="3488d-352">그리기 사각형의 왼쪽 위 모퉁이의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-352">The y-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="3488d-353">메뉴 기호의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-353">The width of the menu glyph.</span></span></param>
        <param name="height"><span data-ttu-id="3488d-354">메뉴 기호의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-354">The height of the menu glyph.</span></span></param>
        <param name="glyph"><span data-ttu-id="3488d-355">그릴 이미지를 지정하는 <see cref="T:System.Windows.Forms.MenuGlyph" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-355">One of the <see cref="T:System.Windows.Forms.MenuGlyph" /> values that specifies the image to draw.</span></span></param>
        <param name="foreColor"><span data-ttu-id="3488d-356"><see cref="P:System.Drawing.Color.White" />를 바꾸는 전경색입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-356">The color that replaces <see cref="P:System.Drawing.Color.White" /> as the foreground color.</span></span></param>
        <param name="backColor"><span data-ttu-id="3488d-357"><see cref="P:System.Drawing.Color.Black" />을 바꾸는 배경색입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-357">The color that replaces <see cref="P:System.Drawing.Color.Black" /> as the background color.</span></span></param>
        <summary><span data-ttu-id="3488d-358"><see cref="P:System.Drawing.Color.White" />를 <paramref name="backColor" /> 매개 변수에 지정된 색으로 바꾸고 <see cref="P:System.Drawing.Color.Black" />을 <paramref name="foreColor" /> 매개 변수에 지정된 색으로 바꾸어 지정된 표면에 지정된 좌표, 높이 및 너비로 메뉴 항목 컨트롤의 지정된 메뉴 기호를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-358">Draws the specified menu glyph on a menu item control within the specified coordinates, height, and width on the specified surface, replacing <see cref="P:System.Drawing.Color.White" /> with the color specified in the <paramref name="backColor" /> parameter and replacing <see cref="P:System.Drawing.Color.Black" /> with the color specified in the <paramref name="foreColor" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-359">소유자가 그린 <xref:System.Windows.Forms.MenuItem> 제거 되도록 올바른 문자 모양을 결정 하는 속성 값을 확인 해야 하는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-359">When owner-drawing <xref:System.Windows.Forms.MenuItem> controls, you need to verify property values to determine the correct glyph to draw or remove.</span></span> <span data-ttu-id="3488d-360">예를 들어 때는 <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> 속성이로 설정 되어 `true`를 호출 해야 합니다는 <xref:System.Windows.Forms.MenuGlyph.Checkmark> 값 <xref:System.Windows.Forms.MenuGlyph> 에 확인 표시를 그리는 <xref:System.Windows.Forms.MenuItem>합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-360">For example, when the <xref:System.Windows.Forms.MenuItem.Checked%2A?displayProperty=nameWithType> property is set to `true`, you must call the <xref:System.Windows.Forms.MenuGlyph.Checkmark> value of <xref:System.Windows.Forms.MenuGlyph> to draw a check mark on the <xref:System.Windows.Forms.MenuItem>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.MenuGlyph" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawMixedCheckBox">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3488d-361">Three-State CheckBox 컨트롤을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-361">Draws a three-state check box control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawMixedCheckBox">
      <MemberSignature Language="C#" Value="public static void DrawMixedCheckBox (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMixedCheckBox(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMixedCheckBox(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-362">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-362">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="3488d-363">확인란의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-363">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the check box.</span></span></param>
        <param name="state"><span data-ttu-id="3488d-364">확인란을 그리기 위한 상태를 지정하는 <see cref="T:System.Windows.Forms.ButtonState" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-364">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the check box in.</span></span></param>
        <summary><span data-ttu-id="3488d-365">지정된 그래픽 표면의 지정된 범위 내에 지정된 상태로 Three-State CheckBox 컨트롤을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-365">Draws a three-state check box control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.ThreeState" />
      </Docs>
    </Member>
    <Member MemberName="DrawMixedCheckBox">
      <MemberSignature Language="C#" Value="public static void DrawMixedCheckBox (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawMixedCheckBox(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawMixedCheckBox(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawMixedCheckBox(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-366">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-366">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="3488d-367">그리기 사각형의 왼쪽 위 모퉁이의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-367">The x-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="3488d-368">그리기 사각형의 왼쪽 위 모퉁이의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-368">The y-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="3488d-369">확인란의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-369">The width of the check box.</span></span></param>
        <param name="height"><span data-ttu-id="3488d-370">확인란의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-370">The height of the check box.</span></span></param>
        <param name="state"><span data-ttu-id="3488d-371">확인란을 그리기 위한 상태를 지정하는 <see cref="T:System.Windows.Forms.ButtonState" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-371">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the check box in.</span></span></param>
        <summary><span data-ttu-id="3488d-372">지정된 그래픽 표면의 지정된 범위 내에 지정된 상태로 Three-State CheckBox 컨트롤을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-372">Draws a three-state check box control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.CheckBox.ThreeState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawRadioButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3488d-373">Radio Button 컨트롤을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-373">Draws a radio button control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawRadioButton">
      <MemberSignature Language="C#" Value="public static void DrawRadioButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRadioButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawRadioButton(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-374">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-374">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="3488d-375">라디오 단추의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-375">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the radio button.</span></span></param>
        <param name="state"><span data-ttu-id="3488d-376">라디오 단추를 그리기 위한 상태를 지정하는 <see cref="T:System.Windows.Forms.ButtonState" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-376">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the radio button in.</span></span></param>
        <summary><span data-ttu-id="3488d-377">지정된 그래픽 표면의 지정된 범위 내에 지정된 상태로 Radio Button 컨트롤을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-377">Draws a radio button control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.RadioButton" />
      </Docs>
    </Member>
    <Member MemberName="DrawRadioButton">
      <MemberSignature Language="C#" Value="public static void DrawRadioButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawRadioButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawRadioButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawRadioButton(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-378">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-378">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="3488d-379">그리기 사각형의 왼쪽 위 모퉁이의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-379">The x-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="3488d-380">그리기 사각형의 왼쪽 위 모퉁이의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-380">The y-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="3488d-381">라디오 단추의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-381">The width of the radio button.</span></span></param>
        <param name="height"><span data-ttu-id="3488d-382">라디오 단추의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-382">The height of the radio button.</span></span></param>
        <param name="state"><span data-ttu-id="3488d-383">라디오 단추를 그리기 위한 상태를 지정하는 <see cref="T:System.Windows.Forms.ButtonState" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-383">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the radio button in.</span></span></param>
        <summary><span data-ttu-id="3488d-384">지정된 그래픽 표면의 지정된 범위 내에 지정된 상태로 Radio Button 컨트롤을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-384">Draws a radio button control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawReversibleFrame">
      <MemberSignature Language="C#" Value="public static void DrawReversibleFrame (System.Drawing.Rectangle rectangle, System.Drawing.Color backColor, System.Windows.Forms.FrameStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawReversibleFrame(valuetype System.Drawing.Rectangle rectangle, valuetype System.Drawing.Color backColor, valuetype System.Windows.Forms.FrameStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawReversibleFrame(System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.FrameStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawReversibleFrame(System::Drawing::Rectangle rectangle, System::Drawing::Color backColor, System::Windows::Forms::FrameStyle style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="style" Type="System.Windows.Forms.FrameStyle" />
      </Parameters>
      <Docs>
        <param name="rectangle"><span data-ttu-id="3488d-385">그릴 사각형의 크기를 화면 좌표로 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-385">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the rectangle to draw, in screen coordinates.</span></span></param>
        <param name="backColor"><span data-ttu-id="3488d-386">프레임 뒤에 나타나는 배경의 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-386">The <see cref="T:System.Drawing.Color" /> of the background behind the frame.</span></span></param>
        <param name="style"><span data-ttu-id="3488d-387">프레임의 스타일을 지정하는 <see cref="T:System.Windows.Forms.FrameStyle" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-387">One of the <see cref="T:System.Windows.Forms.FrameStyle" /> values that specifies the style of the frame.</span></span></param>
        <summary><span data-ttu-id="3488d-388">화면의 지정된 범위 내에 지정된 배경색 및 상태로 복구 가능 프레임을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-388">Draws a reversible frame on the screen within the specified bounds, with the specified background color, and in the specified state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-389">`backColor` 배경 항상 되도록 프레임의 채우기 색을 계산 합니다. 매개 변수를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-389">The `backColor` parameter is used to calculate the fill color of the frame so that it is always visible against the background.</span></span>  
  
 <span data-ttu-id="3488d-390">이 메서드의 결과 동일한 프레임을 다시 그려서 되돌릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-390">The results of this method can be reversed by drawing the same frame again.</span></span> <span data-ttu-id="3488d-391">이 메서드를 사용 하 여 프레임을 그리는 비슷합니다 반전 된 화면의 영역 보다 광범위 한 색에 대 한 더 나은 성능을 제공 한다는 점이 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-391">Drawing a frame using this method is similar to inverting a region of the screen, except that it provides better performance for a wider variety of colors.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3488d-392">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.Control.RectangleToScreen%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.PointToScreen%2A?displayProperty=nameWithType>, 및 <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A> 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-392">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.RectangleToScreen%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.PointToScreen%2A?displayProperty=nameWithType>, and the <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A> members.</span></span> <span data-ttu-id="3488d-393">이라는 폼에는 예제를 실행 하려면 다음 코드를 붙여 `Form1` 여러 개의 컨트롤이 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-393">To run the example, paste the following code in a form called `Form1` containing several controls.</span></span> <span data-ttu-id="3488d-394">이 예제에서는 마우스 이벤트는 예제에 정의 된 이벤트 처리기에 연결 되어 있는지 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-394">This example requires that the mouse events are connected to the event handlers defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.FrameStyle" />
      </Docs>
    </Member>
    <Member MemberName="DrawReversibleLine">
      <MemberSignature Language="C#" Value="public static void DrawReversibleLine (System.Drawing.Point start, System.Drawing.Point end, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawReversibleLine(valuetype System.Drawing.Point start, valuetype System.Drawing.Point end, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawReversibleLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DrawReversibleLine (start As Point, end As Point, backColor As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawReversibleLine(System::Drawing::Point start, System::Drawing::Point end, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Drawing.Point" />
        <Parameter Name="end" Type="System.Drawing.Point" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="3488d-395">화면 좌표로 나타낸 선의 시작 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-395">The starting <see cref="T:System.Drawing.Point" /> of the line, in screen coordinates.</span></span></param>
        <param name="end"><span data-ttu-id="3488d-396">화면 좌표로 나타낸 선의 끝 <see cref="T:System.Drawing.Point" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-396">The ending <see cref="T:System.Drawing.Point" /> of the line, in screen coordinates.</span></span></param>
        <param name="backColor"><span data-ttu-id="3488d-397">선 뒤에 나타나는 배경의 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-397">The <see cref="T:System.Drawing.Color" /> of the background behind the line.</span></span></param>
        <summary><span data-ttu-id="3488d-398">화면의 지정된 범위 내에 지정된 배경색으로 복구 가능한 선을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-398">Draws a reversible line on the screen within the specified starting and ending points and with the specified background color.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-399">`backColor` 배경 항상 되도록 줄의 채우기 색을 계산 합니다. 매개 변수를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-399">The `backColor` parameter is used to calculate the fill color of the line so that it is always visible against the background.</span></span>  
  
 <span data-ttu-id="3488d-400">같은 줄을 다시 그려서이 메서드의 결과 되돌릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-400">The results of this method can be reversed by drawing the same line again.</span></span> <span data-ttu-id="3488d-401">이 메서드를 사용 하는 선을 그리기 비슷합니다 반전 된 화면의 영역 보다 광범위 한 색에 대 한 더 나은 성능을 제공 한다는 점이 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-401">Drawing a line using this method is similar to inverting a region of the screen, except that it provides better performance for a wider variety of colors.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3488d-402">다음 코드 예제는 <xref:System.Windows.Forms.ControlPaint.DrawReversibleLine%2A?displayProperty=nameWithType> 및 <xref:System.Windows.Forms.Control.PointToScreen%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3488d-402">The following code example demonstrates using the <xref:System.Windows.Forms.ControlPaint.DrawReversibleLine%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.PointToScreen%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="3488d-403">예제를 실행 하는 폼에 다음 코드를 붙여넣습니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-403">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="3488d-404">이라는 단추를 추가 `Button3` 폼에 해당 이벤트 처리기에 연결 된 모든 이벤트를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-404">Add a button named `Button3` to the form and ensure all events are connected to their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.ControlPaint1#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.FrameStyle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawScrollButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3488d-405">Scroll Bar 컨트롤에 스크롤 단추를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-405">Draws a scroll button on a scroll bar control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawScrollButton">
      <MemberSignature Language="C#" Value="public static void DrawScrollButton (System.Drawing.Graphics graphics, System.Drawing.Rectangle rectangle, System.Windows.Forms.ScrollButton button, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawScrollButton(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle rectangle, valuetype System.Windows.Forms.ScrollButton button, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawScrollButton(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle rectangle, System::Windows::Forms::ScrollButton button, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="button" Type="System.Windows.Forms.ScrollButton" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-406">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-406">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="rectangle"><span data-ttu-id="3488d-407">기호의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-407">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the glyph.</span></span></param>
        <param name="button"><span data-ttu-id="3488d-408">그릴 스크롤 화살표의 유형을 지정하는 <see cref="T:System.Windows.Forms.ScrollButton" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-408">One of the <see cref="T:System.Windows.Forms.ScrollButton" /> values that specifies the type of scroll arrow to draw.</span></span></param>
        <param name="state"><span data-ttu-id="3488d-409">스크롤 단추를 그리기 위한 상태를 지정하는 <see cref="T:System.Windows.Forms.ButtonState" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-409">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the scroll button in.</span></span></param>
        <summary><span data-ttu-id="3488d-410">지정된 그래픽 표면의 지정된 범위 내에 지정된 상태로 Scroll Bar 컨트롤의 지정된 스크롤 단추를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-410">Draws the specified scroll button on a scroll bar control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ScrollButton" />
        <altmember cref="T:System.Windows.Forms.ButtonState" />
        <altmember cref="T:System.Windows.Forms.ScrollBar" />
      </Docs>
    </Member>
    <Member MemberName="DrawScrollButton">
      <MemberSignature Language="C#" Value="public static void DrawScrollButton (System.Drawing.Graphics graphics, int x, int y, int width, int height, System.Windows.Forms.ScrollButton button, System.Windows.Forms.ButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawScrollButton(class System.Drawing.Graphics graphics, int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.ScrollButton button, valuetype System.Windows.Forms.ButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawScrollButton(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.ScrollButton,System.Windows.Forms.ButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawScrollButton(System::Drawing::Graphics ^ graphics, int x, int y, int width, int height, System::Windows::Forms::ScrollButton button, System::Windows::Forms::ButtonState state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Forms.ScrollButton" />
        <Parameter Name="state" Type="System.Windows.Forms.ButtonState" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-411">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-411">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="x"><span data-ttu-id="3488d-412">그리기 사각형의 왼쪽 위 모퉁이의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-412">The x-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="3488d-413">그리기 사각형의 왼쪽 위 모퉁이의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-413">The y-coordinate of the upper left corner of the drawing rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="3488d-414">스크롤 단추의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-414">The width of the scroll button.</span></span></param>
        <param name="height"><span data-ttu-id="3488d-415">스크롤 단추의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-415">The height of the scroll button.</span></span></param>
        <param name="button"><span data-ttu-id="3488d-416">그릴 스크롤 화살표의 유형을 지정하는 <see cref="T:System.Windows.Forms.ScrollButton" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-416">One of the <see cref="T:System.Windows.Forms.ScrollButton" /> values that specifies the type of scroll arrow to draw.</span></span></param>
        <param name="state"><span data-ttu-id="3488d-417">스크롤 단추를 그리기 위한 상태를 지정하는 <see cref="T:System.Windows.Forms.ButtonState" /> 값의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-417">A bitwise combination of the <see cref="T:System.Windows.Forms.ButtonState" /> values that specifies the state to draw the scroll button in.</span></span></param>
        <summary><span data-ttu-id="3488d-418">지정된 그래픽 표면의 지정된 범위 내에 지정된 상태로 Scroll Bar 컨트롤의 지정된 스크롤 단추를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-418">Draws the specified scroll button on a scroll bar control in the specified state, on the specified graphics surface, and within the specified bounds.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.ScrollButton" />
        <altmember cref="T:System.Windows.Forms.ButtonState" />
        <altmember cref="T:System.Windows.Forms.ScrollBar" />
      </Docs>
    </Member>
    <Member MemberName="DrawSelectionFrame">
      <MemberSignature Language="C#" Value="public static void DrawSelectionFrame (System.Drawing.Graphics graphics, bool active, System.Drawing.Rectangle outsideRect, System.Drawing.Rectangle insideRect, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawSelectionFrame(class System.Drawing.Graphics graphics, bool active, valuetype System.Drawing.Rectangle outsideRect, valuetype System.Drawing.Rectangle insideRect, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawSelectionFrame(System.Drawing.Graphics,System.Boolean,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawSelectionFrame(System::Drawing::Graphics ^ graphics, bool active, System::Drawing::Rectangle outsideRect, System::Drawing::Rectangle insideRect, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="active" Type="System.Boolean" />
        <Parameter Name="outsideRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="insideRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-419">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-419">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="active">
          <span data-ttu-id="3488d-420">선택 프레임을 활성 상태로 그리려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-420"><see langword="true" /> to draw the selection frame in an active state; otherwise, <see langword="false" />.</span></span></param>
        <param name="outsideRect"><span data-ttu-id="3488d-421">선택 프레임의 외부 경계를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-421">The <see cref="T:System.Drawing.Rectangle" /> that represents the outer boundary of the selection frame.</span></span></param>
        <param name="insideRect"><span data-ttu-id="3488d-422">선택 프레임의 내부 경계를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-422">The <see cref="T:System.Drawing.Rectangle" /> that represents the inner boundary of the selection frame.</span></span></param>
        <param name="backColor"><span data-ttu-id="3488d-423">프레임 뒤에 나타나는 배경의 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-423">The <see cref="T:System.Drawing.Color" /> of the background behind the frame.</span></span></param>
        <summary><span data-ttu-id="3488d-424">지정된 그래픽 표면에 지정된 상태로 지정된 내부 및 외부 크기와 배경색을 사용하여 표준 선택 프레임을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-424">Draws a standard selection frame in the specified state, on the specified graphics surface, with the specified inner and outer dimensions, and with the specified background color.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-425">선택 프레임은 프레임을 디자인 타임에 선택된 된 구성 요소 주위에 그려집니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-425">A selection frame is a frame that is drawn around a selected component at design time.</span></span>  
  
 <span data-ttu-id="3488d-426">`backColor` 배경 항상 되도록 프레임의 채우기 색을 계산 합니다. 매개 변수를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-426">The `backColor` parameter is used to calculate the fill color of the frame so that it is always visible against the background.</span></span>  
  
 <span data-ttu-id="3488d-427">경우는 `active` 로 설정 된 `true`, 선택 프레임으로 구성 요소 활성화 되었음을 나타내는 해치 표시 그려진; 선택 프레임 점선 패턴 또는 구현에 따라 nothing, 그려집니다 그렇지 않은 경우 .</span><span class="sxs-lookup"><span data-stu-id="3488d-427">If the `active` parameter is set to `true`, the selection frame is drawn as a set of hatch marks indicating that the component has been activated; otherwise, the selection frame is drawn with a dotted pattern or nothing, depending on the implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawSizeGrip">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3488d-428">폼에 크기 조정 그립을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-428">Draws a size grip on a form.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawSizeGrip">
      <MemberSignature Language="C#" Value="public static void DrawSizeGrip (System.Drawing.Graphics graphics, System.Drawing.Color backColor, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawSizeGrip(class System.Drawing.Graphics graphics, valuetype System.Drawing.Color backColor, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawSizeGrip(System::Drawing::Graphics ^ graphics, System::Drawing::Color backColor, System::Drawing::Rectangle bounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-429">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-429">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="backColor"><span data-ttu-id="3488d-430">크기 조정 그립의 색을 결정하는 데 사용되는 배경의 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-430">The <see cref="T:System.Drawing.Color" /> of the background used to determine the colors of the size grip.</span></span></param>
        <param name="bounds"><span data-ttu-id="3488d-431">크기 조정 그립의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-431">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the size grip.</span></span></param>
        <summary><span data-ttu-id="3488d-432">지정된 그래픽 표면에 지정된 범위 및 배경색으로 폼의 크기 조정 그립을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-432">Draws a size grip on a form with the specified bounds and background color and on the specified graphics surface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-433">`backColor` 배경 항상 있도록 크기 조정 그립의 색을 계산 합니다. 매개 변수를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-433">The `backColor` parameter is used to calculate the color of the size grip so that it is always visible against the background.</span></span>  
  
 <span data-ttu-id="3488d-434">크기 조정 가능 창을 정의할 때 크기 조정 핸들을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-434">When you define a sizable window, you can include a size grip.</span></span> <span data-ttu-id="3488d-435">크기 조정 핸들은 사용자가 창의 크기를 조정할 수 있도록 하는 특별 한 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-435">A size grip is a special handle that enables the user to resize a window.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.Windows.Forms.SizeGripStyle" />
      </Docs>
    </Member>
    <Member MemberName="DrawSizeGrip">
      <MemberSignature Language="C#" Value="public static void DrawSizeGrip (System.Drawing.Graphics graphics, System.Drawing.Color backColor, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawSizeGrip(class System.Drawing.Graphics graphics, valuetype System.Drawing.Color backColor, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawSizeGrip(System.Drawing.Graphics,System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawSizeGrip(System::Drawing::Graphics ^ graphics, System::Drawing::Color backColor, int x, int y, int width, int height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-436">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-436">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="backColor"><span data-ttu-id="3488d-437">크기 조정 그립의 색을 결정하는 데 사용되는 배경의 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-437">The <see cref="T:System.Drawing.Color" /> of the background used to determine the colors of the size grip.</span></span></param>
        <param name="x"><span data-ttu-id="3488d-438">크기 조정 그립의 왼쪽 위 모퉁이의 x좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-438">The x-coordinate of the upper left corner of the size grip.</span></span></param>
        <param name="y"><span data-ttu-id="3488d-439">크기 조정 그립의 왼쪽 위 모퉁이의 y좌표입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-439">The y-coordinate of the upper left corner of the size grip.</span></span></param>
        <param name="width"><span data-ttu-id="3488d-440">크기 조정 그립의 너비입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-440">The width of the size grip.</span></span></param>
        <param name="height"><span data-ttu-id="3488d-441">크기 조정 그립의 높이입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-441">The height of the size grip.</span></span></param>
        <summary><span data-ttu-id="3488d-442">지정된 그래픽 표면에 지정된 범위 및 배경색으로 폼의 크기 조정 그립을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-442">Draws a size grip on a form with the specified bounds and background color and on the specified graphics surface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-443">`backColor` 배경 항상 있도록 크기 조정 그립의 색을 계산 합니다. 매개 변수를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-443">The `backColor` parameter is used to calculate the color of the size grip so that it is always visible against the background.</span></span>  
  
 <span data-ttu-id="3488d-444">크기 조정 가능 창을 정의할 때 크기 조정 핸들을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-444">When you define a sizable window, you can include a size grip.</span></span> <span data-ttu-id="3488d-445">크기 조정 핸들은 사용자가 창의 크기를 조정할 수 있도록 하는 특별 한 핸들입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-445">A size grip is a special handle that enables the user to resize a window.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.Windows.Forms.SizeGripStyle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawStringDisabled">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3488d-446">지정된 문자열을 비활성 상태로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-446">Draws the specified string in a disabled state.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawStringDisabled">
      <MemberSignature Language="C#" Value="public static void DrawStringDisabled (System.Drawing.Graphics graphics, string s, System.Drawing.Font font, System.Drawing.Color color, System.Drawing.RectangleF layoutRectangle, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawStringDisabled(class System.Drawing.Graphics graphics, string s, class System.Drawing.Font font, valuetype System.Drawing.Color color, valuetype System.Drawing.RectangleF layoutRectangle, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawStringDisabled(System::Drawing::Graphics ^ graphics, System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Color color, System::Drawing::RectangleF layoutRectangle, System::Drawing::StringFormat ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="layoutRectangle" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-447">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-447">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="s"><span data-ttu-id="3488d-448">그릴 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-448">The string to draw.</span></span></param>
        <param name="font"><span data-ttu-id="3488d-449">문자열을 그리는 데 사용할 <see cref="T:System.Drawing.Font" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-449">The <see cref="T:System.Drawing.Font" /> to draw the string with.</span></span></param>
        <param name="color"><span data-ttu-id="3488d-450">문자열 뒤에 나타나는 배경의 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-450">The <see cref="T:System.Drawing.Color" /> of the background behind the string.</span></span></param>
        <param name="layoutRectangle"><span data-ttu-id="3488d-451">문자열의 크기를 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-451">The <see cref="T:System.Drawing.RectangleF" /> that represents the dimensions of the string.</span></span></param>
        <param name="format"><span data-ttu-id="3488d-452">문자열에 적용할 <see cref="T:System.Drawing.StringFormat" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-452">The <see cref="T:System.Drawing.StringFormat" /> to apply to the string.</span></span></param>
        <summary><span data-ttu-id="3488d-453">지정된 그래픽 표면의 지정된 범위 내에 지정된 글꼴, 색 및 형식을 사용하여 지정된 문자열을 비활성 상태로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-453">Draws the specified string in a disabled state on the specified graphics surface; within the specified bounds; and in the specified font, color, and format.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawStringDisabled">
      <MemberSignature Language="C#" Value="public static void DrawStringDisabled (System.Drawing.IDeviceContext dc, string s, System.Drawing.Font font, System.Drawing.Color color, System.Drawing.Rectangle layoutRectangle, System.Windows.Forms.TextFormatFlags format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawStringDisabled(class System.Drawing.IDeviceContext dc, string s, class System.Drawing.Font font, valuetype System.Drawing.Color color, valuetype System.Drawing.Rectangle layoutRectangle, valuetype System.Windows.Forms.TextFormatFlags format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawStringDisabled(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawStringDisabled(System::Drawing::IDeviceContext ^ dc, System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Color color, System::Drawing::Rectangle layoutRectangle, System::Windows::Forms::TextFormatFlags format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="layoutRectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc"><span data-ttu-id="3488d-454">GDI 기반 <see cref="T:System.Windows.Forms.TextRenderer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-454">The GDI-based <see cref="T:System.Windows.Forms.TextRenderer" />.</span></span></param>
        <param name="s"><span data-ttu-id="3488d-455">그릴 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-455">The string to draw.</span></span></param>
        <param name="font"><span data-ttu-id="3488d-456">문자열을 그리는 데 사용할 <see cref="T:System.Drawing.Font" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-456">The <see cref="T:System.Drawing.Font" /> to draw the string with.</span></span></param>
        <param name="color"><span data-ttu-id="3488d-457">문자열 뒤에 나타나는 배경의 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-457">The <see cref="T:System.Drawing.Color" /> of the background behind the string.</span></span></param>
        <param name="layoutRectangle"><span data-ttu-id="3488d-458">문자열의 크기를 나타내는 <see cref="T:System.Drawing.RectangleF" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-458">The <see cref="T:System.Drawing.RectangleF" /> that represents the dimensions of the string.</span></span></param>
        <param name="format"><span data-ttu-id="3488d-459">문자열에 적용할 <see cref="T:System.Drawing.StringFormat" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-459">The <see cref="T:System.Drawing.StringFormat" /> to apply to the string.</span></span></param>
        <summary><span data-ttu-id="3488d-460">지정된 그래픽 표면의 지정된 범위 내에 지정된 글꼴, 색 및 형식과 지정된 GDI 기반 <see cref="T:System.Windows.Forms.TextRenderer" />를 사용하여 지정된 문자열을 비활성 상태로 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-460">Draws the specified string in a disabled state on the specified graphics surface, within the specified bounds, and in the specified font, color, and format, using the specified GDI-based <see cref="T:System.Windows.Forms.TextRenderer" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawVisualStyleBorder">
      <MemberSignature Language="C#" Value="public static void DrawVisualStyleBorder (System.Drawing.Graphics graphics, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawVisualStyleBorder(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.DrawVisualStyleBorder(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawVisualStyleBorder(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle bounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="graphics"><span data-ttu-id="3488d-461">그릴 <see cref="T:System.Drawing.Graphics" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-461">The <see cref="T:System.Drawing.Graphics" /> to draw on.</span></span></param>
        <param name="bounds"><span data-ttu-id="3488d-462">테두리의 크기를 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-462">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the border.</span></span></param>
        <summary><span data-ttu-id="3488d-463">비활성 항목에 적합한 스타일로 테두리를 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-463">Draws a border in the style appropriate for disabled items.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillReversibleRectangle">
      <MemberSignature Language="C#" Value="public static void FillReversibleRectangle (System.Drawing.Rectangle rectangle, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FillReversibleRectangle(valuetype System.Drawing.Rectangle rectangle, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.FillReversibleRectangle(System.Drawing.Rectangle,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FillReversibleRectangle(System::Drawing::Rectangle rectangle, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="rectangle"><span data-ttu-id="3488d-464">채울 사각형의 크기를 화면 좌표로 나타내는 <see cref="T:System.Drawing.Rectangle" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-464">The <see cref="T:System.Drawing.Rectangle" /> that represents the dimensions of the rectangle to fill, in screen coordinates.</span></span></param>
        <param name="backColor"><span data-ttu-id="3488d-465">채우기 뒤에 나타나는 배경의 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-465">The <see cref="T:System.Drawing.Color" /> of the background behind the fill.</span></span></param>
        <summary><span data-ttu-id="3488d-466">화면에 채워진 복구 가능 사각형을 그립니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-466">Draws a filled, reversible rectangle on the screen.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-467">`backColor` 배경 항상 되도록 사각형의 채우기 색을 계산 합니다. 매개 변수를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-467">The `backColor` parameter is used to calculate the fill color of the rectangle so that it is always visible against the background.</span></span>  
  
 <span data-ttu-id="3488d-468">이 메서드의 결과 동일한 사각형을 그려 다시 되돌릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-468">The results of this method can be reversed by drawing the same rectangle again.</span></span> <span data-ttu-id="3488d-469">이 메서드를 사용 하 여 사각형 그리기 비슷합니다 반전 된 화면의 영역 보다 광범위 한 색에 대 한 더 나은 성능을 제공 한다는 점이 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-469">Drawing a rectangle using this method is similar to inverting a region of the screen, except that it provides better performance for a wider variety of colors.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3488d-470">다음 코드 예제는 <xref:System.Windows.Forms.ControlPaint.FillReversibleRectangle%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="3488d-470">The following code example demonstrates using the <xref:System.Windows.Forms.ControlPaint.FillReversibleRectangle%2A> method.</span></span> <span data-ttu-id="3488d-471">예제를 실행 하는 폼에 다음 코드를 붙여넣습니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-471">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="3488d-472">이라는 단추를 추가 `Button2` 폼에 해당 이벤트 처리기에 연결 된 모든 이벤트를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-472">Add a button named `Button2` to the form and ensure all events are connected to their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlPaint1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Light">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3488d-473">컨트롤에 대해 옅은 색 개체를 새로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-473">Creates a new light color object for the control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Light">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color Light (System.Drawing.Color baseColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color Light(valuetype System.Drawing.Color baseColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.Light(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Light (baseColor As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color Light(System::Drawing::Color baseColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="baseColor"><span data-ttu-id="3488d-474">옅게 나타낼 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-474">The <see cref="T:System.Drawing.Color" /> to be lightened.</span></span></param>
        <summary><span data-ttu-id="3488d-475">지정된 색에서 컨트롤에 대한 옅은 색 개체를 새로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-475">Creates a new light color object for the control from the specified color.</span></span></summary>
        <returns><span data-ttu-id="3488d-476">컨트롤의 옅은 색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-476">A <see cref="T:System.Drawing.Color" /> that represents the light color on the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-477">하는 경우 지정 된 <xref:System.Drawing.Color> 중 하나는 <xref:System.Drawing.SystemColors>, 색으로 변환 됩니다는 <xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=nameWithType> 색상; 색의 명도 값은 감소 하는 그렇지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="3488d-477">If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=nameWithType> color; otherwise, the color's luminosity value is decreased.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Light">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color Light (System.Drawing.Color baseColor, float percOfLightLight);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color Light(valuetype System.Drawing.Color baseColor, float32 percOfLightLight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.Light(System.Drawing.Color,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Light (baseColor As Color, percOfLightLight As Single) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color Light(System::Drawing::Color baseColor, float percOfLightLight);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
        <Parameter Name="percOfLightLight" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="baseColor"><span data-ttu-id="3488d-478">옅게 나타낼 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-478">The <see cref="T:System.Drawing.Color" /> to be lightened.</span></span></param>
        <param name="percOfLightLight"><span data-ttu-id="3488d-479">지정된 <see cref="T:System.Drawing.Color" />를 옅게 나타낼 비율입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-479">The percentage to lighten the specified <see cref="T:System.Drawing.Color" />.</span></span></param>
        <summary><span data-ttu-id="3488d-480">지정된 색에서 컨트롤에 대한 옅은 색 개체를 새로 만든 다음 지정된 비율만큼 옅게 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-480">Creates a new light color object for the control from the specified color and lightens it by the specified percentage.</span></span></summary>
        <returns><span data-ttu-id="3488d-481">컨트롤의 옅은 색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-481">A <see cref="T:System.Drawing.Color" /> that represents the light color on the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-482">하는 경우 지정 된 <xref:System.Drawing.Color> 중 하나는 <xref:System.Drawing.SystemColors>, 색으로 변환 됩니다는 <xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=nameWithType> 색상; 색의 명도 값은 감소 하는 그렇지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="3488d-482">If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to a <xref:System.Drawing.SystemColors.ControlLight%2A?displayProperty=nameWithType> color; otherwise, the color's luminosity value is decreased.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LightLight">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color LightLight (System.Drawing.Color baseColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Color LightLight(valuetype System.Drawing.Color baseColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ControlPaint.LightLight(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LightLight (baseColor As Color) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Color LightLight(System::Drawing::Color baseColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="baseColor"><span data-ttu-id="3488d-483">옅게 나타낼 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-483">The <see cref="T:System.Drawing.Color" /> to be lightened.</span></span></param>
        <summary><span data-ttu-id="3488d-484">지정된 색에서 컨트롤에 대한 옅은 색 개체를 새로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-484">Creates a new light color object for the control from the specified color.</span></span></summary>
        <returns><span data-ttu-id="3488d-485">컨트롤의 옅은 색을 나타내는 <see cref="T:System.Drawing.Color" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3488d-485">A <see cref="T:System.Drawing.Color" /> that represents the light color on the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3488d-486">하는 경우 지정 된 <xref:System.Drawing.Color> 중 하나는 <xref:System.Drawing.SystemColors>, 색으로 변환 됩니다는 <xref:System.Drawing.SystemColors.ControlLightLight%2A?displayProperty=nameWithType> 색상; 색의 명도 값이 증가 하는 그렇지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="3488d-486">If the specified <xref:System.Drawing.Color> is one of the <xref:System.Drawing.SystemColors>, the color is converted to the <xref:System.Drawing.SystemColors.ControlLightLight%2A?displayProperty=nameWithType> color; otherwise, the color's luminosity value is increased.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>