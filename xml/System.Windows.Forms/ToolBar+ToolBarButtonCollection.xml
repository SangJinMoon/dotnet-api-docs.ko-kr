<Type Name="ToolBar+ToolBarButtonCollection" FullName="System.Windows.Forms.ToolBar+ToolBarButtonCollection">
  <TypeSignature Language="C#" Value="public class ToolBar.ToolBarButtonCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ToolBar/ToolBarButtonCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolBar.ToolBarButtonCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolBar.ToolBarButtonCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ToolBar::ToolBarButtonCollection : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="67c0f-101"><see cref="T:System.Windows.Forms.ToolBarButton" /> 클래스에서 사용할 <see cref="T:System.Windows.Forms.ToolBar" /> 컨트롤의 컬렉션을 캡슐화합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-101">Encapsulates a collection of <see cref="T:System.Windows.Forms.ToolBarButton" /> controls for use by the <see cref="T:System.Windows.Forms.ToolBar" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-102"><xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 에 사용 되는 0부터 시작 인덱싱된 컬렉션은는 <xref:System.Windows.Forms.ToolBar> 모든 포함 된 클래스를는 <xref:System.Windows.Forms.ToolBarButton> 컨트롤 도구 모음에 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-102">The <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> is a zero-based indexed collection used by the <xref:System.Windows.Forms.ToolBar> class to hold all the <xref:System.Windows.Forms.ToolBarButton> controls assigned to the toolbar.</span></span> <span data-ttu-id="67c0f-103">사용 하 여는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> 개별 단추를 추가 하려면 메서드 및 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A> 메서드를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-103">Use the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> method to add individual buttons and the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A> method to delete them.</span></span> <span data-ttu-id="67c0f-104">호출 된 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> 메서드를 컬렉션에서 모든 단추를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-104">Call the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> method to remove all the buttons from the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c0f-105">다음 코드 예제를 만들고 초기화는 <xref:System.Windows.Forms.ToolBar> 및 세 개의 <xref:System.Windows.Forms.ToolBarButton> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-105">The following code example creates and initializes a <xref:System.Windows.Forms.ToolBar> and three <xref:System.Windows.Forms.ToolBarButton> controls.</span></span> <span data-ttu-id="67c0f-106">도구 모음 단추 도구 모음에 할당 되 고 도구 모음을 폼에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-106">The toolbar buttons are assigned to the toolbar and the toolbar is added to the form.</span></span> <span data-ttu-id="67c0f-107">이 코드를 실행 하려면 한 <xref:System.Windows.Forms.Form> 이미 생성 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-107">This code requires that a <xref:System.Windows.Forms.Form> has already been created.</span></span>  
  
 [!code-cpp[Classic ToolBar.Buttons Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.Buttons Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.Buttons Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.Buttons Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.Buttons Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.Buttons Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ToolBar" />
    <altmember cref="T:System.Windows.Forms.ToolBarButton" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolBarButtonCollection (System.Windows.Forms.ToolBar owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ToolBar owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.#ctor(System.Windows.Forms.ToolBar)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ToolBar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolBarButtonCollection(System::Windows::Forms::ToolBar ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ToolBar" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="67c0f-108"><see cref="T:System.Windows.Forms.ToolBar" /> 컨트롤 컬렉션의 부모에 해당하는 <see cref="T:System.Windows.Forms.ToolBarButton" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-108">The <see cref="T:System.Windows.Forms.ToolBar" /> that is the parent of the collection of <see cref="T:System.Windows.Forms.ToolBarButton" /> controls.</span></span></param>
        <summary><span data-ttu-id="67c0f-109"><see cref="T:System.Windows.Forms.ToolBar.ToolBarButtonCollection" /> 클래스의 새 인스턴스를 초기화하고 지정된 도구 모음에 할당합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-109">Initializes a new instance of the <see cref="T:System.Windows.Forms.ToolBar.ToolBarButtonCollection" /> class and assigns it to the specified toolbar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-110">일반적으로 만들지 않는 한 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 명시적으로 생성자를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-110">You do not typically create a <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> and explicitly call its constructor.</span></span> <span data-ttu-id="67c0f-111">참조 하 여는 <xref:System.Windows.Forms.ToolBar.Buttons%2A> 의 속성은 <xref:System.Windows.Forms.ToolBar> 컨트롤은 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-111">By referencing the <xref:System.Windows.Forms.ToolBar.Buttons%2A> property of the <xref:System.Windows.Forms.ToolBar> control, a <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> is created.</span></span> <span data-ttu-id="67c0f-112">다음의 속성 및 메서드를에 액세스 하 고 할당할 수 있습니다 <xref:System.Windows.Forms.ToolBarButton> 컬렉션에는 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-112">You can then gain access to its properties and methods, and assign <xref:System.Windows.Forms.ToolBarButton> controls to the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="67c0f-113">도구 모음 단추 컬렉션의 끝에 새 도구 모음 단추를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-113">Adds a new toolbar button to the end of the toolbar button collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (text As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="67c0f-114">새 <see cref="T:System.Windows.Forms.ToolBarButton" />에 표시되는 텍스트입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-114">The text to display on the new <see cref="T:System.Windows.Forms.ToolBarButton" />.</span></span></param>
        <summary><span data-ttu-id="67c0f-115">지정한 <see cref="P:System.Windows.Forms.ToolBarButton.Text" /> 속성 값을 갖는 도구 모음 단추 컬렉션의 끝에 새 도구 모음 단추를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-115">Adds a new toolbar button to the end of the toolbar button collection with the specified <see cref="P:System.Windows.Forms.ToolBarButton.Text" /> property value.</span></span></summary>
        <returns><span data-ttu-id="67c0f-116">컬렉션에 추가된 <see cref="T:System.Windows.Forms.ToolBarButton" />의 인덱스(0부터 시작) 값입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-116">The zero-based index value of the <see cref="T:System.Windows.Forms.ToolBarButton" /> added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-117">새로 추가할 수도 있습니다 <xref:System.Windows.Forms.ToolBarButton> 개체를 사용 하 여 컬렉션에는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> 또는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert%2A> 메서드 또는 다른 버전의는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="67c0f-117">You can also add new <xref:System.Windows.Forms.ToolBarButton> objects to the collection by using the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> or <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert%2A> methods, or the other version of the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> method.</span></span>  
  
 <span data-ttu-id="67c0f-118">제거 하는 <xref:System.Windows.Forms.ToolBarButton> 사용 하 여, 이전에 추가한는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A>, <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A> 또는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="67c0f-118">To remove a <xref:System.Windows.Forms.ToolBarButton> that you have previously added, use the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A>, <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A> or <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c0f-119">다음 코드 예제에서는 기존 제거 <xref:System.Windows.Forms.ToolBarButton> 에서 <xref:System.Windows.Forms.ToolBar> 존재 하 고 추가 하 고 4 개의 새 삽입으로 제어 <xref:System.Windows.Forms.ToolBarButton> 개체는 <xref:System.Windows.Forms.ToolBar>합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-119">The following code example removes an existing <xref:System.Windows.Forms.ToolBarButton> from a <xref:System.Windows.Forms.ToolBar> control if it exists and adds and inserts four new <xref:System.Windows.Forms.ToolBarButton> objects to the <xref:System.Windows.Forms.ToolBar>.</span></span> <span data-ttu-id="67c0f-120">이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.ToolBar> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-120">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.ToolBar> control on it.</span></span>  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove(System.Windows.Forms.ToolBarButton)" />
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Forms.ToolBarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Forms.ToolBarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.Windows.Forms.ToolBarButton)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (button As ToolBarButton) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Forms::ToolBarButton ^ button);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.ToolBarButton" />
      </Parameters>
      <Docs>
        <param name="button"><span data-ttu-id="67c0f-121">기존의 모든 단추 다음에 추가할 <see cref="T:System.Windows.Forms.ToolBarButton" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-121">The <see cref="T:System.Windows.Forms.ToolBarButton" /> to be added after all existing buttons.</span></span></param>
        <summary><span data-ttu-id="67c0f-122">도구 모음 단추 컬렉션의 끝에 지정된 도구 모음 단추를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-122">Adds the specified toolbar button to the end of the toolbar button collection.</span></span></summary>
        <returns><span data-ttu-id="67c0f-123">컬렉션에 추가된 <see cref="T:System.Windows.Forms.ToolBarButton" />의 인덱스(0부터 시작) 값입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-123">The zero-based index value of the <see cref="T:System.Windows.Forms.ToolBarButton" /> added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-124">새로 추가할 수도 있습니다 <xref:System.Windows.Forms.ToolBarButton> 개체를 사용 하 여 컬렉션에는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> 또는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert%2A> 메서드 또는 다른 버전의는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="67c0f-124">You can also add new <xref:System.Windows.Forms.ToolBarButton> objects to the collection by using the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> or <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert%2A> methods, or the other version of the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> method.</span></span>  
  
 <span data-ttu-id="67c0f-125">제거 하는 <xref:System.Windows.Forms.ToolBarButton> 사용 하 여, 이전에 추가한는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A>, <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A> 또는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="67c0f-125">To remove a <xref:System.Windows.Forms.ToolBarButton> that you have previously added, use the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A>, <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A> or <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c0f-126">다음 코드 예제에서는 새 <xref:System.Windows.Forms.ToolBarButton> 기존의 제어 <xref:System.Windows.Forms.ToolBar> 기존 단추를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-126">The following code example adds a new <xref:System.Windows.Forms.ToolBarButton> control to an existing <xref:System.Windows.Forms.ToolBar> with existing buttons.</span></span> <span data-ttu-id="67c0f-127">끝에 추가할 도구 모음 단추는 <xref:System.Windows.Forms.ToolBar.Buttons%2A?displayProperty=nameWithType> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-127">The toolbar button will be added to the end of the <xref:System.Windows.Forms.ToolBar.Buttons%2A?displayProperty=nameWithType> collection.</span></span>  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove(System.Windows.Forms.ToolBarButton)" />
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ToolBarButton[] buttons);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ToolBarButton[] buttons) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange(System.Windows.Forms.ToolBarButton[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (buttons As ToolBarButton())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ToolBarButton ^&gt; ^ buttons);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttons" Type="System.Windows.Forms.ToolBarButton[]" />
      </Parameters>
      <Docs>
        <param name="buttons"><span data-ttu-id="67c0f-128">배열에 포함된 이 <see cref="T:System.Windows.Forms.ToolBarButton" />에 추가할 <see cref="T:System.Windows.Forms.ToolBar.ToolBarButtonCollection" /> 컨트롤의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-128">The collection of <see cref="T:System.Windows.Forms.ToolBarButton" /> controls to add to this <see cref="T:System.Windows.Forms.ToolBar.ToolBarButtonCollection" /> contained in an array.</span></span></param>
        <summary><span data-ttu-id="67c0f-129">이 도구 모음 단추 컬렉션에 도구 모음 단추의 컬렉션을 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-129">Adds a collection of toolbar buttons to this toolbar button collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-130"><xref:System.Windows.Forms.ToolBarButton> 에 포함 된 개체는 `nodes` 배열 컬렉션의 끝에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-130">The <xref:System.Windows.Forms.ToolBarButton> objects contained in the `nodes` array are appended to the end of the collection.</span></span>  
  
 <span data-ttu-id="67c0f-131">이전에 만든 그룹을 신속 하 게 추가할 방법을 사용할 수 있습니다 <xref:System.Windows.Forms.ToolBarButton> 개체 대신 수동으로 추가 하는 각 컬렉션에 <xref:System.Windows.Forms.ToolBarButton> 사용 하 여 컬렉션에는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="67c0f-131">You can use method to quickly add a group of previously created <xref:System.Windows.Forms.ToolBarButton> objects to the collection instead of manually adding each <xref:System.Windows.Forms.ToolBarButton> to the collection using the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> method.</span></span>  
  
 <span data-ttu-id="67c0f-132">제거 하는 <xref:System.Windows.Forms.ToolBarButton> 사용 하 여, 이전에 추가한는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A>, <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A> 또는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="67c0f-132">To remove a <xref:System.Windows.Forms.ToolBarButton> that you have previously added, use the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A>, <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A> or <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c0f-133">다음 코드 예제에서는 기존 제거 <xref:System.Windows.Forms.ToolBarButton> 에서 <xref:System.Windows.Forms.ToolBar> 존재 하 고 추가 하 고 4 개의 새 삽입으로 제어 <xref:System.Windows.Forms.ToolBarButton> 개체는 <xref:System.Windows.Forms.ToolBar>합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-133">The following code example removes an existing <xref:System.Windows.Forms.ToolBarButton> from a <xref:System.Windows.Forms.ToolBar> control if it exists and adds and inserts four new <xref:System.Windows.Forms.ToolBarButton> objects to the <xref:System.Windows.Forms.ToolBar>.</span></span> <span data-ttu-id="67c0f-134">이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.ToolBar> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-134">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.ToolBar> control on it.</span></span>  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.Windows.Forms.ToolBarButton)" />
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67c0f-135">도구 모음 단추 컬렉션에서 모든 단추를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-135">Removes all buttons from the toolbar button collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-136"><xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> 메서드 컬렉션을 반복 하 고 제거 하는 모든 도구 모음 단추에 할당 된 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-136">The <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> method iterates through the collection and removes all toolbar buttons assigned to the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>.</span></span>  
  
 <span data-ttu-id="67c0f-137">컬렉션에서 개별 도구 모음 단추를 제거 하려면 사용 하 여는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A> 또는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="67c0f-137">To remove an individual toolbar button from the collection, use the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A> or <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A> methods.</span></span>  
  
 <span data-ttu-id="67c0f-138">새로 추가 하려면 <xref:System.Windows.Forms.ToolBarButton> 개체를 컬렉션에 사용 된 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A>, <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> 또는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="67c0f-138">To add new <xref:System.Windows.Forms.ToolBarButton> objects to the collection, use the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A>, <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> or <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c0f-139">다음 코드 예제는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> 의 <xref:System.Windows.Forms.ToolBar.Buttons%2A> 앞과 뒤는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-139">The following code example displays the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> of the <xref:System.Windows.Forms.ToolBar.Buttons%2A> before and after the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> method is called.</span></span> <span data-ttu-id="67c0f-140">이 코드를 실행 하려면 한 <xref:System.Windows.Forms.ToolBar> 을 하나 이상 <xref:System.Windows.Forms.ToolBarButton> 만들어졌습니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-140">This code requires that a <xref:System.Windows.Forms.ToolBar> with at least one <xref:System.Windows.Forms.ToolBarButton> has been created.</span></span>  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove(System.Windows.Forms.ToolBarButton)" />
        <altmember cref="T:System.Windows.Forms.ToolBarButton" />
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.Windows.Forms.ToolBarButton)" />
        <altmember cref="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ToolBarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ToolBarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Contains(System.Windows.Forms.ToolBarButton)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (button As ToolBarButton) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ToolBarButton ^ button);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.ToolBarButton" />
      </Parameters>
      <Docs>
        <param name="button"><span data-ttu-id="67c0f-141">컬렉션에서 찾을 <see cref="T:System.Windows.Forms.ToolBarButton" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-141">The <see cref="T:System.Windows.Forms.ToolBarButton" /> to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="67c0f-142">지정된 도구 모음 단추가 컬렉션의 멤버인지 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-142">Determines if the specified toolbar button is a member of the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="67c0f-143"><see cref="T:System.Windows.Forms.ToolBarButton" />이 컬렉션의 멤버이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-143"><see langword="true" /> if the <see cref="T:System.Windows.Forms.ToolBarButton" /> is a member of the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-144">이 메서드를 통해 확인할 수 있습니다 여부는 <xref:System.Windows.Forms.ToolBarButton> 은 작업을 수행 하기 전에 컬렉션의 구성원이 <xref:System.Windows.Forms.ToolBarButton>합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-144">This method enables you to determine whether a <xref:System.Windows.Forms.ToolBarButton> is member of the collection before attempting to perform operations on the <xref:System.Windows.Forms.ToolBarButton>.</span></span> <span data-ttu-id="67c0f-145">있는지 확인 하려면이 메서드를 사용할 수는 <xref:System.Windows.Forms.ToolBarButton> 컬렉션의 멤버는 여전히 또는에 추가 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-145">You can use this method to confirm that a <xref:System.Windows.Forms.ToolBarButton> has been added to or is still a member of the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c0f-146">다음 코드 예제에서는 기존 제거 <xref:System.Windows.Forms.ToolBarButton> 에서 <xref:System.Windows.Forms.ToolBar> 존재 하 고 추가 하 고 4 개의 새 삽입으로 제어 <xref:System.Windows.Forms.ToolBarButton> 개체는 <xref:System.Windows.Forms.ToolBar>합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-146">The following code example removes an existing <xref:System.Windows.Forms.ToolBarButton> from a <xref:System.Windows.Forms.ToolBar> control if it exists and adds and inserts four new <xref:System.Windows.Forms.ToolBarButton> objects to the <xref:System.Windows.Forms.ToolBar>.</span></span> <span data-ttu-id="67c0f-147">이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.ToolBar> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-147">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.ToolBar> control on it.</span></span>  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="67c0f-148">검색할 <see cref="T:System.Windows.Forms.ToolBarButton" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-148">The name of the <see cref="T:System.Windows.Forms.ToolBarButton" /> to search for.</span></span></param>
        <summary><span data-ttu-id="67c0f-149">지정된 키를 가진 <see cref="T:System.Windows.Forms.ToolBarButton" />이 컬렉션에 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-149">Determines if a <see cref="T:System.Windows.Forms.ToolBarButton" /> with the specified key is contained in the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="67c0f-150">지정된 키를 가진 <see cref="T:System.Windows.Forms.ToolBarButton" />이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-150"><see langword="true" /> to indicate a <see cref="T:System.Windows.Forms.ToolBarButton" /> with the specified key is found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-151"><xref:System.Windows.Forms.ToolBarButton.Name%2A> 속성에 대 한 키에 해당는 <xref:System.Windows.Forms.ToolBarButton> 에 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-151">The <xref:System.Windows.Forms.ToolBarButton.Name%2A> property corresponds to the key for a <xref:System.Windows.Forms.ToolBarButton> in the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>.</span></span>  
  
 <span data-ttu-id="67c0f-152">키를 비교할 대/소문자 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-152">The key comparison is not case-sensitive.</span></span> <span data-ttu-id="67c0f-153">경우는 `key` 매개 변수는 `null` 또는 빈 문자열인 경우 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item%2A> 반환 `false.`</span><span class="sxs-lookup"><span data-stu-id="67c0f-153">If the `key` parameter is `null` or an empty string, <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item%2A> returns `false.`</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67c0f-154">도구 모음 단추 컬렉션의 단추 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-154">Gets the number of buttons in the toolbar button collection.</span></span></summary>
        <value><span data-ttu-id="67c0f-155">도구 모음에 할당된 <see cref="T:System.Windows.Forms.ToolBarButton" /> 컨트롤의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-155">The number of the <see cref="T:System.Windows.Forms.ToolBarButton" /> controls assigned to the toolbar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-156"><xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> 속성의 실제 수를 보유 <xref:System.Windows.Forms.ToolBarButton> 컬렉션에 할당 된 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-156">The <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> property holds the actual number of <xref:System.Windows.Forms.ToolBarButton> controls assigned to the collection.</span></span> <span data-ttu-id="67c0f-157">일반적으로 사용 하 여 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> 컬렉션을 반복 하는 루프의 상한값으로 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-157">It is common to use the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> property value as the upper bounds of a loop to iterate through a collection.</span></span> <span data-ttu-id="67c0f-158">컬렉션의 인덱스 값은 0 기반 인덱스, 루핑 변수에서 1을 빼야 하므로 그렇지 않으면 컬렉션의 상한을 초과 이며, 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-158">The index value of a collection is a zero-based index, so you must subtract one from the looping variable otherwise you will exceed the upper bounds of the collection and throw an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c0f-159">다음 코드 예제는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> 의 <xref:System.Windows.Forms.ToolBar.Buttons%2A> 앞과 뒤는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-159">The following code example displays the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> of the <xref:System.Windows.Forms.ToolBar.Buttons%2A> before and after the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> method is called.</span></span> <span data-ttu-id="67c0f-160">이 코드를 실행 하려면 한 <xref:System.Windows.Forms.ToolBar> 을 하나 이상 <xref:System.Windows.Forms.ToolBarButton> 만들어졌습니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-160">This code requires that a <xref:System.Windows.Forms.ToolBar> with at least one <xref:System.Windows.Forms.ToolBarButton> has been created.</span></span>  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButton" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67c0f-161">도구 모음 단추 컬렉션 전체에서 반복하는 데 사용할 수 있는 열거자를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-161">Returns an enumerator that can be used to iterate through the toolbar button collection.</span></span></summary>
        <returns><span data-ttu-id="67c0f-162">트리 노드 컬렉션을 나타내는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-162">An <see cref="T:System.Collections.IEnumerator" /> that represents the tree node collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="67c0f-163">다음 코드 예제에서는 기존 제거 <xref:System.Windows.Forms.ToolBarButton> 에서 <xref:System.Windows.Forms.ToolBar> 존재 하 고 추가 하 고 4 개의 새 삽입으로 제어 <xref:System.Windows.Forms.ToolBarButton> 개체는 <xref:System.Windows.Forms.ToolBar>합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-163">The following code example removes an existing <xref:System.Windows.Forms.ToolBarButton> from a <xref:System.Windows.Forms.ToolBar> control if it exists and adds and inserts four new <xref:System.Windows.Forms.ToolBarButton> objects to the <xref:System.Windows.Forms.ToolBar>.</span></span> <span data-ttu-id="67c0f-164">이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.ToolBar> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-164">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.ToolBar> control on it.</span></span>  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ToolBarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ToolBarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IndexOf(System.Windows.Forms.ToolBarButton)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (button As ToolBarButton) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ToolBarButton ^ button);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.ToolBarButton" />
      </Parameters>
      <Docs>
        <param name="button"><span data-ttu-id="67c0f-165">컬렉션에서 찾을 <see cref="T:System.Windows.Forms.ToolBarButton" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-165">The <see cref="T:System.Windows.Forms.ToolBarButton" /> to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="67c0f-166">컬렉션에서 지정된 도구 모음 단추의 인덱스를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-166">Retrieves the index of the specified toolbar button in the collection.</span></span></summary>
        <returns><span data-ttu-id="67c0f-167">항목이 컬렉션에서 있으면 해당 항목의 0부터 시작하는 인덱스이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-167">The zero-based index of the item found in the collection; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-168">이 방법을 사용 하면 쉽게 액세스할 수 있도록의 인덱스 값에는 <xref:System.Windows.Forms.ToolBarButton> 컬렉션에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-168">This method gives you easy access to the index value of the <xref:System.Windows.Forms.ToolBarButton> in the collection.</span></span> <span data-ttu-id="67c0f-169">인덱스 값을 쉽게 확인할 수 있습니다. <xref:System.Windows.Forms.ToolBarButton> 에서 클릭 된는 <xref:System.Windows.Forms.ToolBar>합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-169">The index value allows you to easily determine which <xref:System.Windows.Forms.ToolBarButton> was clicked on the <xref:System.Windows.Forms.ToolBar>.</span></span> <span data-ttu-id="67c0f-170"><xref:System.Windows.Forms.ToolBarButton> 클릭 평가 하 여 확인할 수 있습니다는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IndexOf%2A> 의 값은 <xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A?displayProperty=nameWithType> 속성.</span><span class="sxs-lookup"><span data-stu-id="67c0f-170">The <xref:System.Windows.Forms.ToolBarButton> clicked can be determined by evaluating the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IndexOf%2A> value of the <xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c0f-171">다음 코드 예제에서는 한 <xref:System.Windows.Forms.ToolBar> 및 세 개의 <xref:System.Windows.Forms.ToolBarButton> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-171">The following code example creates a <xref:System.Windows.Forms.ToolBar> and three <xref:System.Windows.Forms.ToolBarButton> controls.</span></span> <span data-ttu-id="67c0f-172">도구 모음 단추는 단추 컬렉션에 할당 된, 컬렉션의 도구 모음에 할당 하 고 도구 모음 폼에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-172">The toolbar buttons are assigned to the button collection, the collection is assigned to the toolbar, and the toolbar is added to the form.</span></span> <span data-ttu-id="67c0f-173">에 <xref:System.Windows.Forms.ToolBar.ButtonClick> 도구 모음의 이벤트는 <xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A> 속성의는 <xref:System.Windows.Forms.ToolBarButtonClickEventArgs> 평가 되 해당 대화 상자가 열립니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-173">On the <xref:System.Windows.Forms.ToolBar.ButtonClick> event of the toolbar, the <xref:System.Windows.Forms.ToolBarButtonClickEventArgs.Button%2A> property of the <xref:System.Windows.Forms.ToolBarButtonClickEventArgs> is evaluated, and the appropriate dialog box opened.</span></span> <span data-ttu-id="67c0f-174">이 코드를 실행 하려면 한 <xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.OpenFileDialog>, <xref:System.Windows.Forms.SaveFileDialog>, 및 <xref:System.Windows.Forms.PrintDialog> 모두 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-174">This code requires that a <xref:System.Windows.Forms.Form>, an <xref:System.Windows.Forms.OpenFileDialog>, a <xref:System.Windows.Forms.SaveFileDialog>, and a <xref:System.Windows.Forms.PrintDialog> have all been created.</span></span>  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ToolBarButtonClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="67c0f-175">검색할 <see cref="T:System.Windows.Forms.ToolBarButton" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-175">The name of the <see cref="T:System.Windows.Forms.ToolBarButton" /> to search for.</span></span></param>
        <summary><span data-ttu-id="67c0f-176">지정된 키를 가진 첫 번째 <see cref="T:System.Windows.Forms.ToolBarButton" />의 인덱스를 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-176">Retrieves the index of the first occurrence of a <see cref="T:System.Windows.Forms.ToolBarButton" /> with the specified key.</span></span></summary>
        <returns><span data-ttu-id="67c0f-177">지정된 키를 가진 첫 번째 <see cref="T:System.Windows.Forms.ToolBarButton" />이 있으면 해당 인덱스이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-177">The index of the first occurrence of a <see cref="T:System.Windows.Forms.ToolBarButton" /> with the specified key, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-178">경우 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IndexOfKey%2A> 마지막 연속적으로 호출 인덱스 키 일치 항목에 먼저, 확인 하 고 컬렉션의 시작 부분에서 검색이 시작 일치 하는 경우를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-178">If <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IndexOfKey%2A> is called successively, the last returned index will be checked for a key match first, and if there is no match, the search starts at the beginning of the collection.</span></span>  
  
 <span data-ttu-id="67c0f-179"><xref:System.Windows.Forms.ToolBarButton.Name%2A> 속성에 대 한 키에 해당는 <xref:System.Windows.Forms.ToolBarButton> 에 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-179">The <xref:System.Windows.Forms.ToolBarButton.Name%2A> property corresponds to the key for a <xref:System.Windows.Forms.ToolBarButton> in the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>.</span></span>  
  
 <span data-ttu-id="67c0f-180">키를 비교할 대/소문자 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-180">The key comparison is not case-sensitive.</span></span> <span data-ttu-id="67c0f-181">경우는 `key` 매개 변수는 `null` 또는 빈 문자열인 경우 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item%2A> -1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-181">If the `key` parameter is `null` or an empty string, <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item%2A> returns -1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ToolBarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ToolBarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert(System.Int32,System.Windows.Forms.ToolBarButton)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, button As ToolBarButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::ToolBarButton ^ button);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Forms.ToolBarButton" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="67c0f-182">도구 모음 단추를 삽입할 컬렉션 내의 인덱싱된 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-182">The indexed location within the collection to insert the toolbar button.</span></span></param>
        <param name="button"><span data-ttu-id="67c0f-183">삽입할 <see cref="T:System.Windows.Forms.ToolBarButton" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-183">The <see cref="T:System.Windows.Forms.ToolBarButton" /> to insert.</span></span></param>
        <summary><span data-ttu-id="67c0f-184">도구 모음 단추 컬렉션의 지정된 위치에 기존의 도구 모음 단추를 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-184">Inserts an existing toolbar button in the toolbar button collection at the specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-185">새로 추가할 수도 있습니다 <xref:System.Windows.Forms.ToolBarButton> 개체를 사용 하 여 컬렉션에는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> 또는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="67c0f-185">You can also add new <xref:System.Windows.Forms.ToolBarButton> objects to the collection by using the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A> or <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> methods.</span></span>  
  
 <span data-ttu-id="67c0f-186">제거 하는 <xref:System.Windows.Forms.ToolBarButton> 사용 하 여, 이전에 추가한는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A>, <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A> 또는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="67c0f-186">To remove a <xref:System.Windows.Forms.ToolBarButton> that you have previously added, use the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A>, <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A> or <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c0f-187">다음 코드 예제에서는 기존 제거 <xref:System.Windows.Forms.ToolBarButton> 에서 <xref:System.Windows.Forms.ToolBar> 존재 하 고 추가 하 고 4 개의 새 삽입으로 제어 <xref:System.Windows.Forms.ToolBarButton> 개체는 <xref:System.Windows.Forms.ToolBar>합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-187">The following code example removes an existing <xref:System.Windows.Forms.ToolBarButton> from a <xref:System.Windows.Forms.ToolBar> control if it exists and adds and inserts four new <xref:System.Windows.Forms.ToolBarButton> objects to the <xref:System.Windows.Forms.ToolBar>.</span></span> <span data-ttu-id="67c0f-188">이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.ToolBar> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-188">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.ToolBar> control on it.</span></span>  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.Windows.Forms.ToolBarButton)" />
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange(System.Windows.Forms.ToolBarButton[])" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67c0f-189">컬렉션이 읽기 전용인지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-189">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="67c0f-190">컬렉션이 읽기 전용이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-190"><see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="67c0f-191">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-191">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="67c0f-192">다음 코드 예제에서는 기존 제거 <xref:System.Windows.Forms.ToolBarButton> 에서 <xref:System.Windows.Forms.ToolBar> 존재 하 고 추가 하 고 4 개의 새 삽입으로 제어 <xref:System.Windows.Forms.ToolBarButton> 개체는 <xref:System.Windows.Forms.ToolBar>합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-192">The following code example removes an existing <xref:System.Windows.Forms.ToolBarButton> from a <xref:System.Windows.Forms.ToolBar> control if it exists and adds and inserts four new <xref:System.Windows.Forms.ToolBarButton> objects to the <xref:System.Windows.Forms.ToolBar>.</span></span> <span data-ttu-id="67c0f-193">이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.ToolBar> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-193">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.ToolBar> control on it.</span></span>  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="67c0f-194">컬렉션에 있는 <see cref="T:System.Windows.Forms.ToolBarButton" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-194">Gets or sets a <see cref="T:System.Windows.Forms.ToolBarButton" /> within the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ToolBarButton this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolBarButton Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As ToolBarButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ToolBarButton ^ default[int] { System::Windows::Forms::ToolBarButton ^ get(int index); void set(int index, System::Windows::Forms::ToolBarButton ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBarButton</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="67c0f-195">컬렉션에 포함된 <see cref="T:System.Windows.Forms.ToolBarButton" />의 인덱싱된 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-195">The indexed location of the <see cref="T:System.Windows.Forms.ToolBarButton" /> in the collection.</span></span></param>
        <summary><span data-ttu-id="67c0f-196">도구 모음 단추 컬렉션에서 지정된 인덱스 위치에 있는 도구 모음 단추를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-196">Gets or sets the toolbar button at the specified indexed location in the toolbar button collection.</span></span></summary>
        <value><span data-ttu-id="67c0f-197">지정한 인덱스 위치의 도구 모음 단추를 나타내는 <see cref="T:System.Windows.Forms.ToolBarButton" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-197">A <see cref="T:System.Windows.Forms.ToolBarButton" /> that represents the toolbar button at the specified indexed location.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-198">할당할 <xref:System.Windows.Forms.ToolBarButton> 특정 위치로 또는에서 검색 하려면 제어는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>, 특정 인덱스 값이 있는 컬렉션 개체를 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-198">To assign <xref:System.Windows.Forms.ToolBarButton> controls to a specific location, or to retrieve them from the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>, you can reference the collection object with a specific index value.</span></span> <span data-ttu-id="67c0f-199">인덱스 값은 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> 요소는 0입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-199">The index value of the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> is a zero-based index.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c0f-200">다음 코드 예제에서는 도구 모음에서 마지막 도구 모음 단추를 대체합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-200">The following code example replaces the last toolbar button on a toolbar.</span></span> <span data-ttu-id="67c0f-201">이 코드를 실행 하려면 한 <xref:System.Windows.Forms.ToolBar> 와 하나 이상의 <xref:System.Windows.Forms.ToolBarButton> 만들어졌습니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-201">This code requires that a <xref:System.Windows.Forms.ToolBar> and at least one <xref:System.Windows.Forms.ToolBarButton> have been created.</span></span> <span data-ttu-id="67c0f-202">이 예제에서는 도구 모음에서 단추 수를 가져옵니다를 새로 만든 마지막 단추 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-202">The example gets the number of buttons on the toolbar and replaces the last button with a newly created one.</span></span> <span data-ttu-id="67c0f-203">`index` 대체 되 고 도구 모음 단추의 값으로 설정 됩니다는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> 속성에서 1을 뺀 이후는 <xref:System.Windows.Forms.ToolBarButton> 컬렉션은 0부터 시작 하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-203">The `index` value of the toolbar button being replaced is set to the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> property, minus one, since the <xref:System.Windows.Forms.ToolBarButton> collection is a zero-based index.</span></span>  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="67c0f-204"><paramref name="index" /> 값이 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-204">The <paramref name="index" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="67c0f-205"><paramref name="index" /> 값이 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="67c0f-205">The <paramref name="index" /> value is less than zero.</span></span>  
  
 <span data-ttu-id="67c0f-206">또는</span><span class="sxs-lookup"><span data-stu-id="67c0f-206">-or-</span></span>  
  
 <span data-ttu-id="67c0f-207"><paramref name="index" /> 값이 해당 컬렉션에 있는 단추의 수보다 크고 단추의 컬렉션이 <see langword="null" />이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="67c0f-207">The <paramref name="index" /> value is greater than the number of buttons in the collection, and the collection of buttons is not <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count" />
        <altmember cref="T:System.Windows.Forms.ToolBarButton" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ToolBarButton this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ToolBarButton Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As ToolBarButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ToolBarButton ^ default[System::String ^] { System::Windows::Forms::ToolBarButton ^ get(System::String ^ key); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolBarButton</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="67c0f-208">검색할 <see cref="T:System.Windows.Forms.ToolBarButton" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-208">The name of the <see cref="T:System.Windows.Forms.ToolBarButton" /> to retrieve.</span></span></param>
        <summary><span data-ttu-id="67c0f-209">지정된 키를 가진 <see cref="T:System.Windows.Forms.ToolBarButton" />을 컬렉션에서 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-209">Gets a <see cref="T:System.Windows.Forms.ToolBarButton" /> with the specified key from the collection.</span></span></summary>
        <value><span data-ttu-id="67c0f-210"><see cref="T:System.Windows.Forms.ToolBarButton" /> 속성이 지정된 키와 일치하는 <see cref="P:System.Windows.Forms.ToolBarButton.Name" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-210">The <see cref="T:System.Windows.Forms.ToolBarButton" /> whose <see cref="P:System.Windows.Forms.ToolBarButton.Name" /> property matches the specified key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-211"><xref:System.Windows.Forms.ToolBarButton.Name%2A> 속성에 대 한 키에 해당는 <xref:System.Windows.Forms.ToolBarButton> 에 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-211">The <xref:System.Windows.Forms.ToolBarButton.Name%2A> property corresponds to the key for a <xref:System.Windows.Forms.ToolBarButton> in the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>.</span></span>  
  
 <span data-ttu-id="67c0f-212">키를 비교할 대/소문자 구분 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-212">The key comparison is not case-sensitive.</span></span> <span data-ttu-id="67c0f-213">경우는 `key` 매개 변수는 `null` 또는 빈 문자열인 경우 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item%2A> 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-213">If the `key` parameter is `null` or an empty string, <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Item%2A> returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.ToolBarButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.ToolBarButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove(System.Windows.Forms.ToolBarButton)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (button As ToolBarButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::ToolBarButton ^ button);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Windows.Forms.ToolBarButton" />
      </Parameters>
      <Docs>
        <param name="button"><span data-ttu-id="67c0f-214">컬렉션에서 제거할 <see cref="T:System.Windows.Forms.ToolBarButton" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-214">The <see cref="T:System.Windows.Forms.ToolBarButton" /> to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="67c0f-215">도구 모음 단추 컬렉션에서 지정된 단추를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-215">Removes a given button from the toolbar button collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-216">도구 모음 단추를 컬렉션에서 제거를 사용 하 여는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A>, 또는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="67c0f-216">To remove toolbar buttons from the collection, use the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt%2A>, or <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> methods.</span></span>  
  
 <span data-ttu-id="67c0f-217">새로 추가 하려면 <xref:System.Windows.Forms.ToolBarButton> 개체를 컬렉션에 사용 된 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A>, <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> 또는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="67c0f-217">To add new <xref:System.Windows.Forms.ToolBarButton> objects to the collection, use the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add%2A>, <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange%2A> or <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Insert%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c0f-218">다음 코드 예제에서는 기존 제거 <xref:System.Windows.Forms.ToolBarButton> 에서 <xref:System.Windows.Forms.ToolBar> 존재 하 고 추가 하 고 4 개의 새 삽입으로 제어 <xref:System.Windows.Forms.ToolBarButton> 개체는 <xref:System.Windows.Forms.ToolBar>합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-218">The following code example removes an existing <xref:System.Windows.Forms.ToolBarButton> from a <xref:System.Windows.Forms.ToolBar> control if it exists and adds and inserts four new <xref:System.Windows.Forms.ToolBarButton> objects to the <xref:System.Windows.Forms.ToolBar>.</span></span> <span data-ttu-id="67c0f-219">이 예제를 실행 하려면는 <xref:System.Windows.Forms.Form> 와 <xref:System.Windows.Forms.ToolBar> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-219">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.ToolBar> control on it.</span></span>  
  
 [!code-cpp[ToolBar#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ToolBar/CPP/mytoolbar.cpp#2)]
 [!code-csharp[ToolBar#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ToolBar/CS/mytoolbar.cs#2)]
 [!code-vb[ToolBar#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ToolBar/VB/mytoolbar.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear" />
        <altmember cref="T:System.Windows.Forms.ToolBarButton" />
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.Windows.Forms.ToolBarButton)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="67c0f-220">컬렉션에 포함된 <see cref="T:System.Windows.Forms.ToolBarButton" />의 인덱싱된 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-220">The indexed location of the <see cref="T:System.Windows.Forms.ToolBarButton" /> in the collection.</span></span></param>
        <summary><span data-ttu-id="67c0f-221">도구 모음 단추 컬렉션에서 지정된 단추를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-221">Removes a given button from the toolbar button collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-222"><xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A> 메서드 제거는 <xref:System.Windows.Forms.ToolBarButton> 에 지정된 된 위치에는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-222">The <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Remove%2A> method removes the <xref:System.Windows.Forms.ToolBarButton> at the specified location in the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>.</span></span> <span data-ttu-id="67c0f-223">모든 제거 하려는 경우 <xref:System.Windows.Forms.ToolBarButton> 컨트롤 컬렉션에서 사용 하 여는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="67c0f-223">If you want to remove all <xref:System.Windows.Forms.ToolBarButton> controls from the collection, use the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="67c0f-224">다음 코드 예제에서는 마지막 제거 <xref:System.Windows.Forms.ToolBarButton> 에 <xref:System.Windows.Forms.ToolBar>합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-224">The following code example removes the last <xref:System.Windows.Forms.ToolBarButton> on a <xref:System.Windows.Forms.ToolBar>.</span></span> <span data-ttu-id="67c0f-225">제거 하 고 도구 모음 단추의 인덱스 값으로 설정 되었습니다는 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> 속성에서 1을 뺀 이후는 <xref:System.Windows.Forms.ToolBarButton> 컬렉션은 0부터 시작 하는 인덱스입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-225">The index value of the toolbar button being removed is set equal to the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Count%2A> property, minus one, since the <xref:System.Windows.Forms.ToolBarButton> collection is a zero-based index.</span></span>  
  
 [!code-cpp[Classic ToolBar.ToolBarButtonCollection.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ToolBar.ToolBarButtonCollection.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic ToolBar.ToolBarButtonCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ToolBar.ToolBarButtonCollection.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="67c0f-226"><paramref name="index" /> 값이 0보다 작거나 컬렉션의 단추 수보다 큰 경우</span><span class="sxs-lookup"><span data-stu-id="67c0f-226">The <paramref name="index" /> value is less than 0, or it is greater than the number of buttons in the collection.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Clear" />
        <altmember cref="T:System.Windows.Forms.ToolBarButton" />
        <altmember cref="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add(System.Windows.Forms.ToolBarButton)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="67c0f-227">컬렉션에서 제거할 <see cref="T:System.Windows.Forms.ToolBarButton" />의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-227">The name of the <see cref="T:System.Windows.Forms.ToolBarButton" /> to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="67c0f-228">지정한 키를 가진 <see cref="T:System.Windows.Forms.ToolBarButton" />을 컬렉션에서 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-228">Removes the <see cref="T:System.Windows.Forms.ToolBarButton" /> with the specified key from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-229"><xref:System.Windows.Forms.ToolBarButton.Name%2A> 속성에 대 한 키에 해당는 <xref:System.Windows.Forms.ToolBarButton> 에 <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-229">The <xref:System.Windows.Forms.ToolBarButton.Name%2A> property corresponds to the key for a <xref:System.Windows.Forms.ToolBarButton> in the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest"><span data-ttu-id="67c0f-230"><see cref="T:System.Array" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Collections.ICollection" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-230">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="67c0f-231"><see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-231">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="67c0f-232"><c>dest</c>에서 복사가 시작되는 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-232">The zero-based index in <c>dest</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="67c0f-233">특정 <see cref="T:System.Collections.ICollection" /> 인덱스부터 시작하여 <see cref="T:System.Array" />의 요소를 <see cref="T:System.Array" />에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-233">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-234">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="67c0f-234">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="67c0f-235"><xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-235">It can be used only when the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67c0f-236">해당 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-236">Gets a value indicating whether access to the collection is synchronized (thread safe).</span></span></summary>
        <value>
          <span data-ttu-id="67c0f-237">모든 경우에 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-237"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-238">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="67c0f-238">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="67c0f-239"><xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-239">It can be used only when the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67c0f-240">단추 컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-240">Gets an object that can be used to synchronize access to the collection of buttons.</span></span></summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-241">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="67c0f-241">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="67c0f-242"><xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-242">It can be used only when the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object button);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (button As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ button) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="button"><span data-ttu-id="67c0f-243">기존의 모든 단추 다음에 추가할 <see cref="T:System.Windows.Forms.ToolBarButton" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-243">The <see cref="T:System.Windows.Forms.ToolBarButton" /> to be added after all existing buttons.</span></span></param>
        <summary><span data-ttu-id="67c0f-244">도구 모음 단추 컬렉션의 끝에 지정된 도구 모음 단추를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-244">Adds the specified toolbar button to the end of the toolbar button collection.</span></span></summary>
        <returns><span data-ttu-id="67c0f-245">컬렉션에 추가된 <see cref="T:System.Windows.Forms.ToolBarButton" />의 인덱스(0부터 시작) 값입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-245">The zero-based index value of the <see cref="T:System.Windows.Forms.ToolBarButton" /> added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-246">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="67c0f-246">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="67c0f-247"><xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-247">It can be used only when the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="67c0f-248"><paramref name="button" />가 <see cref="T:System.Windows.Forms.ToolBarButton" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="67c0f-248"><paramref name="button" /> is not a <see cref="T:System.Windows.Forms.ToolBarButton" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object button);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (button As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ button) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="button"><span data-ttu-id="67c0f-249">컬렉션에서 찾을 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-249">The item to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="67c0f-250">컬렉션에 특정 값이 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-250">Determines whether the collection contains a specific value.</span></span></summary>
        <returns>
          <span data-ttu-id="67c0f-251">항목이 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-251"><see langword="true" /> if the item is found in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-252">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="67c0f-252">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="67c0f-253"><xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-253">It can be used only when the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object button);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (button As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ button) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="button"><span data-ttu-id="67c0f-254">컬렉션에서 찾을 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-254">The item to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="67c0f-255">컬렉션에 있는 특정 항목의 인덱스를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-255">Determines the index of a specific item in the collection.</span></span></summary>
        <returns><span data-ttu-id="67c0f-256">목록에 있으면 <paramref name="button" />의 인덱스이고, 그렇지 않으면 -1입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-256">The index of <paramref name="button" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-257">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="67c0f-257">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="67c0f-258"><xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-258">It can be used only when the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object button);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, button As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ button) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="button" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="67c0f-259">도구 모음 단추를 삽입할 컬렉션 내의 인덱싱된 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-259">The indexed location within the collection to insert the toolbar button.</span></span></param>
        <param name="button"><span data-ttu-id="67c0f-260">삽입할 <see cref="T:System.Windows.Forms.ToolBarButton" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-260">The <see cref="T:System.Windows.Forms.ToolBarButton" /> to insert.</span></span></param>
        <summary><span data-ttu-id="67c0f-261">도구 모음 단추 컬렉션의 지정된 위치에 기존의 도구 모음 단추를 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-261">Inserts an existing toolbar button in the toolbar button collection at the specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-262">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="67c0f-262">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="67c0f-263"><xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-263">It can be used only when the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="67c0f-264"><paramref name="button" />가 <see cref="T:System.Windows.Forms.ToolBarButton" />가 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="67c0f-264"><paramref name="button" /> is not a <see cref="T:System.Windows.Forms.ToolBarButton" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67c0f-265">컬렉션의 크기가 고정되어 있는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-265">Gets a value indicating whether the collection has a fixed size.</span></span></summary>
        <value>
          <span data-ttu-id="67c0f-266">모든 경우에 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-266"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-267">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="67c0f-267">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="67c0f-268"><xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-268">It can be used only when the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="67c0f-269">가져오거나 설정할 요소의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-269">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="67c0f-270">지정된 인덱스에서 항목을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-270">Gets or sets the item at a specified index.</span></span></summary>
        <value><span data-ttu-id="67c0f-271">지정한 인덱스의 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-271">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-272">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="67c0f-272">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="67c0f-273"><xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-273">It can be used only when the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object button);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolBar.ToolBarButtonCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (button As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ button) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="button"><span data-ttu-id="67c0f-274"><see cref="T:System.Object" />에서 제거할 <see cref="T:System.Collections.IList" />입니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-274">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="67c0f-275">컬렉션에서 맨 처음 발견되는 항목을 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-275">Removes the first occurrence of an item from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67c0f-276">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="67c0f-276">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="67c0f-277"><xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection>가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="67c0f-277">It can be used only when the <xref:System.Windows.Forms.ToolBar.ToolBarButtonCollection> is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>