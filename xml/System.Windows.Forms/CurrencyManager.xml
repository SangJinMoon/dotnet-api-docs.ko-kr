<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CurrencyManager.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5422e723168d87108e21aa8c478d92c1e9a7270f9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">422e723168d87108e21aa8c478d92c1e9a7270f9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.CurrencyManager">
          <source>Manages a list of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Binding" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Binding" /&gt;</ph> 개체의 목록을 관리합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.CurrencyManager">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> derives from the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 에서 파생 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.CurrencyManager">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> to return either a <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> or a <ph id="ph3">&lt;xref:System.Windows.Forms.PropertyManager&gt;</ph>.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> 반환 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.PropertyManager&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.CurrencyManager">
          <source>The actual object returned depends on the data source and data member passed to the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph>.</source>
          <target state="translated">반환 되는 실제 개체 데이터 소스에 따라 다르며 데이터 멤버에 전달 된는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.CurrencyManager">
          <source>If the data source is an object that can return only a single property (instead of a list of objects), the type will be a <ph id="ph1">&lt;xref:System.Windows.Forms.PropertyManager&gt;</ph>.</source>
          <target state="translated">형식이 됩니다 (개체의 목록) 하는 대신 하나의 속성만 반환할 수 있는 개체 데이터 원본이 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.PropertyManager&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.CurrencyManager">
          <source>For example, if you specify a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> as the data source, a <ph id="ph2">&lt;xref:System.Windows.Forms.PropertyManager&gt;</ph> will be returned.</source>
          <target state="translated">예를 들어, 지정 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 데이터 원본으로는 <ph id="ph2">&lt;xref:System.Windows.Forms.PropertyManager&gt;</ph> 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.CurrencyManager">
          <source>If, on the other hand, the data source is an object that implements the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph>, or <ph id="ph3">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> interface, a <ph id="ph4">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> will be returned.</source>
          <target state="translated">반면에 데이터 원본이 개체를 구현 하는 경우는 <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> 인터페이스는 <ph id="ph4">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.CurrencyManager">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.Current%2A&gt;</ph> property returns the current item in the underlying list.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.Current%2A&gt;</ph> 속성 기본 목록의 현재 항목을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.CurrencyManager">
          <source>To change the current item, set the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</ph> property to a new value.</source>
          <target state="translated">현재 항목을 변경 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</ph> 속성을 새 값입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.CurrencyManager">
          <source>The value must be greater than 0 and must be less than the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.Count%2A&gt;</ph> property.</source>
          <target state="translated">값 0 보다 커야 하며의 값 보다 작아야 합니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.Count%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.CurrencyManager">
          <source>If the underlying data source implements the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> interface, and the <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.AllowNew%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>, you can use the <ph id="ph4">&lt;xref:System.Windows.Forms.CurrencyManager.AddNew%2A&gt;</ph> method.</source>
          <target state="translated">기본 데이터 원본 구현 하는 경우는 <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> 인터페이스 및 <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.AllowNew%2A&gt;</ph> 속성이로 설정 되어 <ph id="ph3">`true`</ph>를 사용할 수 있습니다는 <ph id="ph4">&lt;xref:System.Windows.Forms.CurrencyManager.AddNew%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.CurrencyManager">
          <source>The following code example binds a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control to a column in a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, gets the <ph id="ph3">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> for the binding, and sets its position.</source>
          <target state="translated">다음 코드 예제에서는 바인딩에 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 컨트롤의 열에 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, 가져옵니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 바인딩에 대의 위치를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.AddNew">
          <source>Adds a new item to the underlying list.</source>
          <target state="translated">내부 목록에 새 항목을 추가합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.AddNew">
          <source>This method is supported only if the data source implements the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> interface and the data source allows adding rows (<ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.AllowNew%2A&gt;</ph> is <ph id="ph3">`true`</ph>).</source>
          <target state="translated">데이터 원본 구현 하는 경우에이 메서드는 지원의 <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> 인터페이스와 데이터 소스 행을 추가할 수 있습니다 (<ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.AllowNew%2A&gt;</ph> 은 <ph id="ph3">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.AddNew">
          <source>This property was designed to allow complex-bound controls, such as the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control, to add new items to list.</source>
          <target state="translated">이 속성은 복합 바인딩된 컨트롤을와 같은 허용 하도록 설계 된는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 컨트롤 목록에 새 항목을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.AddNew">
          <source>You typically use this property only if you are creating your own control that incorporates the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph>.</source>
          <target state="translated">이 속성을 통합 하는 사용자 고유의 컨트롤을 만드는 경우에 사용 일반적으로 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.AddNew">
          <source>Otherwise, to add items if the data source is a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Data.DataView.AddNew%2A?displayProperty=nameWithType&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph> class.</source>
          <target state="translated">데이터 원본이 경우 항목을 추가 하 고, 그렇지는 <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph>를 사용 하 여는 <ph id="ph2">&lt;xref:System.Data.DataView.AddNew%2A?displayProperty=nameWithType&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.AddNew">
          <source>If the data source is a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method and add the row to the <ph id="ph3">&lt;xref:System.Data.DataRowCollection&gt;</ph>.</source>
          <target state="translated">데이터 원본이 있으면는 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>를 사용 하 여는 <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> 메서드 행을 추가 하 고는 <ph id="ph3">&lt;xref:System.Data.DataRowCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.AddNew">
          <source>The following code example adds a new item to the list with the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.AddNew%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 사용 하 여 목록에 새 항목 추가 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.AddNew%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.AddNew">
          <source>The underlying data source does not implement <ph id="ph1">&lt;see cref="T:System.ComponentModel.IBindingList" /&gt;</ph>, or the data source has thrown an exception because the user has attempted to add a row to a read-only or fixed-size <ph id="ph2">&lt;see cref="T:System.Data.DataView" /&gt;</ph>.</source>
          <target state="translated">내부 데이터 소스에서 <ph id="ph1">&lt;see cref="T:System.ComponentModel.IBindingList" /&gt;</ph>를 구현하지 않거나, 사용자가 읽기 전용 또는 고정 크기 <ph id="ph2">&lt;see cref="T:System.Data.DataView" /&gt;</ph>에 행을 추가하려고 하여 데이터 소스에서 예외를 throw한 경우</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit">
          <source>Cancels the current edit operation.</source>
          <target state="translated">현재 편집 작업을 취소합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit">
          <source>This method is supported only if the objects contained by the data source implement the <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph> interface.</source>
          <target state="translated">데이터 소스에 포함 된 개체를 구현 하는 경우에이 메서드는 지원의 <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit">
          <source>If the objects contained within the data source do not implement the <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph> interface, changes made to the data will not be discarded.</source>
          <target state="translated">데이터 원본에 포함 된 개체를 구현 하지 않는 경우는 <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph> 인터페이스에는 데이터 변경 내용이 삭제 되지 것입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit">
          <source>This property was designed to be used by complex data-bound controls, such as the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control, to cancel edits.</source>
          <target state="translated">이 속성은 같은 복잡 한 데이터 바인딩된 컨트롤에서 사용 하도록 설계 된는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 편집 취소를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit">
          <source>For example, when the user presses the ESC key, the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A&gt;</ph> method is called on the <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> for the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph>.</source>
          <target state="translated">예를 들어 사용자가 누르면 ESC 키를는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A&gt;</ph> 메서드가 호출 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 에 대 한는 <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit">
          <source>Unless you are creating a control that requires this same functionality, you should not use this method.</source>
          <target state="translated">이 기능을 필요로 하는 컨트롤을 만드는 경우가 아니면에이 메서드를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit">
          <source>Instead, use the <ph id="ph1">&lt;xref:System.Data.DataRowView.CancelEdit%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.DataRowView&gt;</ph> class.</source>
          <target state="translated">대신를 사용 하 여는 <ph id="ph1">&lt;xref:System.Data.DataRowView.CancelEdit%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Data.DataRowView&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A&gt;</ph> when the user presses the ESC key.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A&gt;</ph> ESC 키를 누를 때.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.CheckEmpty">
          <source>Throws an exception if there is no list, or the list is empty.</source>
          <target state="translated">목록이 없거나 비어 있는 경우 예외를 throw합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.CheckEmpty">
          <source>There is no list, or the list is empty.</source>
          <target state="translated">목록이 없거나 비어 있는 경우</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.CurrencyManager.Count">
          <source>Gets the number of items in the list.</source>
          <target state="translated">목록의 항목 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.Count">
          <source>The number of items in the list.</source>
          <target state="translated">목록의 항목 수입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.Count">
          <source>Use the count property to determine when the end of a list has been reached.</source>
          <target state="translated">목록의 끝에 도달한 경우를 확인 하려면 count 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.Count">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> maintains a 0-based array of items, the end of the list is always <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;</ph> minus one.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 항목을 목록의 끝의 0부터 시작 배열은 항상 유지 <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;</ph> 1을 뺀 값입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.Count">
          <source>The following code example iterates through the list until the final item, determined by the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;</ph> property, is reached.</source>
          <target state="translated">다음 코드 예제에서는 최종 항목에 의해 결정 될 때까지 목록에서 반복는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;</ph> 속성에 도달 했습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.CurrencyManager.Current">
          <source>Gets the current item in the list.</source>
          <target state="translated">목록의 현재 항목을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.Current">
          <source>A list item of type <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 형식의 목록 항목입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.Current">
          <source>In order to get the current item, you must know its data type in order to cast it correctly.</source>
          <target state="translated">현재 항목을 얻으려면 잘못 캐스팅 하기 위해 해당 데이터 형식을 알아야 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.Current">
          <source>For example, if the data source is a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, you must cast the current item as a <ph id="ph3">&lt;xref:System.Data.DataRowView&gt;</ph> object.</source>
          <target state="translated">예를 들어 데이터 소스는 <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, 현재 항목으로 캐스팅 해야는 <ph id="ph3">&lt;xref:System.Data.DataRowView&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.Current">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Current%2A&gt;</ph> property to print the <ph id="ph2">`ContactName`</ph> field for the current item in the list.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Current%2A&gt;</ph> 인쇄 하기는 <ph id="ph2">`ContactName`</ph> 목록의 현재 항목에 대 한 필드입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.EndCurrentEdit">
          <source>Ends the current edit operation.</source>
          <target state="translated">지금 하고 있는 편집 작업을 종료합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.EndCurrentEdit">
          <source>This method is supported only if the objects contained by the data source implement the <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph> or <ph id="ph2">&lt;xref:System.ComponentModel.ICancelAddNew&gt;</ph> interfaces.</source>
          <target state="translated">데이터 소스에 포함 된 개체를 구현 하는 경우에이 메서드는 지원의 <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ComponentModel.ICancelAddNew&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.EndCurrentEdit">
          <source>This property was designed to be used by complex data-bound controls, such as the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">이 속성은 같은 복잡 한 데이터 바인딩된 컨트롤에서 사용 하도록 설계 된는 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.EndCurrentEdit">
          <source>Unless you are creating a control that requires this same functionality, you should not use this method.</source>
          <target state="translated">이 기능을 필요로 하는 컨트롤을 만드는 경우가 아니면에이 메서드를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.EndCurrentEdit">
          <source>Instead, if the data source is either a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, use the <ph id="ph3">&lt;xref:System.Data.DataRowView.EndEdit%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Data.DataRowView&gt;</ph> class.</source>
          <target state="translated">대신, 데이터 소스가 하는 경우는 <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>를 사용 하 여는 <ph id="ph3">&lt;xref:System.Data.DataRowView.EndEdit%2A&gt;</ph> 의 메서드는 <ph id="ph4">&lt;xref:System.Data.DataRowView&gt;</ph> 클래스.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.EndCurrentEdit">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.CurrencyManager.finalType">
          <source>Specifies the data type of the list.</source>
          <target state="translated">목록의 데이터 형식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.GetItemProperties">
          <source>Gets the property descriptor collection for the underlying list.</source>
          <target state="translated">내부 목록의 속성 설명자 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.GetItemProperties">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> for the list.</source>
          <target state="translated">목록에 대한 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.GetItemProperties">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptorCollection&gt;</ph> for the <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> is used to specify a column in the list.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptorCollection&gt;</ph> 에 대 한는 <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 목록에서 열을 지정 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.GetItemProperties">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.GetItemProperties%2A&gt;</ph> method to return a <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptorCollection&gt;</ph> for a <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.GetItemProperties%2A&gt;</ph> 반환 하는 메서드는 <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptorCollection&gt;</ph> 에 대 한는 <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.GetItemProperties">
          <source>The example then prints out the <ph id="ph1">&lt;xref:System.ComponentModel.MemberDescriptor.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A&gt;</ph> of each <ph id="ph3">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> in the collection.</source>
          <target state="translated">예제에서는 다음 출력는 <ph id="ph1">&lt;xref:System.ComponentModel.MemberDescriptor.Name%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A&gt;</ph> 각 <ph id="ph3">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> 컬렉션에 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.GetListName(System.Collections.ArrayList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> of properties to be found in the data source.</source>
          <target state="translated">데이터 소스에서 찾을 속성의 <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.GetListName(System.Collections.ArrayList)">
          <source>Gets the name of the list supplying the data for the binding using the specified set of bound properties.</source>
          <target state="translated">지정한 바인딩된 속성 집합을 사용하여 바인딩에 대한 데이터를 제공하는 목록 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.GetListName(System.Collections.ArrayList)">
          <source>If successful, a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing name of the list supplying the data for the binding; otherwise, an <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph> string.</source>
          <target state="translated">해당 속성을 찾은 경우 바인딩에 대한 데이터를 제공하는 목록 이름이 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph> 문자열입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.GetListName(System.Collections.ArrayList)">
          <source>For the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.GetListName%2A&gt;</ph> method to be successful, the underlying list must be of type <ph id="ph2">&lt;xref:System.ComponentModel.ITypedList&gt;</ph>.</source>
          <target state="translated">에 대 한는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.GetListName%2A&gt;</ph> 성공적으로 수행 하려면 기본 목록 형식 이어야 합니다 <ph id="ph2">&lt;xref:System.ComponentModel.ITypedList&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.CurrencyManager.ItemChanged">
          <source>Occurs when the current item has been altered.</source>
          <target state="translated">현재 항목이 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.ItemChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.ItemChanged&gt;</ph> event will occur when the user calls the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.ItemChanged&gt;</ph> 호출할 때 이벤트가 발생 합니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.ItemChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.ItemChanged&gt;</ph> event occurs only when the item itself has been changed in some manner.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.ItemChanged&gt;</ph> 만 항목 자체가 변경 된 경우 다른 방법으로 이벤트 발생 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.ItemChanged">
          <source>For example, if the value of an item is changed from 10 to 42, the event will occur.</source>
          <target state="translated">예를 들어 항목의 값 42 10에서 변경 되 면 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.ItemChanged">
          <source>This should not be confused with the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.PositionChanged&gt;</ph> event where the item has been changed to a new item.</source>
          <target state="translated">와 일치 하지 않습니다이 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.PositionChanged&gt;</ph> 새 항목에는 항목이 변경 되어 있는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.ItemChanged">
          <source>The event will also occur if the underlying data changes.</source>
          <target state="translated">이 이벤트는 기본 데이터가 변경 하는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.ItemChanged">
          <source>For example, if you change the value of a <ph id="ph1">&lt;xref:System.Data.DataRowView&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.ItemChanged&gt;</ph> event will occur.</source>
          <target state="translated">예를 들어, 값을 변경 하는 경우는 <ph id="ph1">&lt;xref:System.Data.DataRowView&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.ItemChanged&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.ItemChanged">
          <source>If you are creating your own control that uses the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph>, you should use the <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType&gt;</ph> instead of the <ph id="ph3">&lt;xref:System.Windows.Forms.CurrencyManager.ItemChanged?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">사용 하는 사용자 고유의 컨트롤을 만들려는 경우에 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph>를 사용 해야는 <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType&gt;</ph> 대신는 <ph id="ph3">&lt;xref:System.Windows.Forms.CurrencyManager.ItemChanged?displayProperty=nameWithType&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.ItemChanged">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ListChangedEventArgs.ListChangedType%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ComponentModel.ListChangedEventArgs&gt;</ph> enables you to determine the type of action that has occurred.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.ListChangedEventArgs.ListChangedType%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.ComponentModel.ListChangedEventArgs&gt;</ph> 발생 한 동작의 유형을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.ItemChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.ItemChanged">
          <source>The following code example adds event handlers for the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.ItemChanged&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase.PositionChanged&gt;</ph> events.</source>
          <target state="translated">에 대 한 이벤트 처리기를 추가 하는 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.ItemChanged&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase.PositionChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.CurrencyManager.List">
          <source>Gets the list for this <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CurrencyManager" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CurrencyManager" /&gt;</ph>의 목록을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.List">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that contains the list.</source>
          <target state="translated">목록이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.List">
          <source>The object returned by the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.List%2A&gt;</ph> property can be cast to any type that implements the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">반환 되는 개체는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.List%2A&gt;</ph> 속성을 구현 하는 형식으로 캐스팅 될 수는 <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.List">
          <source>This will be commonly used when you know the type of the underlying list.</source>
          <target state="translated">이 일반적으로 사용 됩니다 기본 목록의 형식을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.List">
          <source>For example, if you are data-bound to a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the underlying list is a <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> (which implements <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph>).</source>
          <target state="translated">예를 들어 사용자는 데이터 바인딩된은 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, 기본 목록이 <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> (구현 하는 <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.List">
          <source>Other classes that implement the interface (this is not a complete list) include <ph id="ph1">&lt;xref:System.Array&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>, and <ph id="ph3">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</source>
          <target state="translated">(이것은 전체 목록이 아님) 인터페이스를 구현 하는 다른 클래스에는 <ph id="ph1">&lt;xref:System.Array&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Collections.CollectionBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.List">
          <source>How you use the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.List%2A&gt;</ph> property depends on the class that implements the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
          <target state="translated">사용 하는 방법의 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.List%2A&gt;</ph> 속성 구현 하는 클래스에 따라 달라 집니다는 <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.List">
          <source>For example, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.List%2A&gt;</ph> property to determine the name of the list.</source>
          <target state="translated">예를 들어 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.List%2A&gt;</ph> 속성 목록의 이름을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.List">
          <source>If the data source implements the <ph id="ph1">&lt;xref:System.ComponentModel.ITypedList&gt;</ph> interface, you can use the <ph id="ph2">&lt;xref:System.ComponentModel.ITypedList.GetListName%2A&gt;</ph> method to return the name of the current table.</source>
          <target state="translated">데이터 원본 구현 하는 경우는 <ph id="ph1">&lt;xref:System.ComponentModel.ITypedList&gt;</ph> 사용할 수 있습니다 인터페이스는 <ph id="ph2">&lt;xref:System.ComponentModel.ITypedList.GetListName%2A&gt;</ph> 현재 테이블의 이름을 반환 하는 메서드.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.List">
          <source>This is shown in the C# code below:</source>
          <target state="translated">이 C# 코드 아래에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.List">
          <source>The following code example allows users to edit a set of records, but not add any new ones.</source>
          <target state="translated">다음 코드 예제에서는 레코드 집합을 편집 하지만 추가 하지는 새 사용자 수 있습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.List">
          <source>In the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.Navigate&gt;</ph> event of a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control, the <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Windows.Forms.CurrencyManager.List%2A&gt;</ph> property is cast to a <ph id="ph5">&lt;xref:System.Data.DataView&gt;</ph> variable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid.Navigate&gt;</ph> 의 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 컨트롤을는 <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> 에서 반환 되는 <ph id="ph4">&lt;xref:System.Windows.Forms.CurrencyManager.List%2A&gt;</ph> 속성으로 캐스팅 되는 <ph id="ph5">&lt;xref:System.Data.DataView&gt;</ph> 변수입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.List">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataView.AllowNew%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> is set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataView.AllowNew%2A&gt;</ph>의 <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> 속성은 <ph id="ph3">`false`</ph>로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.CurrencyManager.ListChanged">
          <source>Occurs when the list changes or an item in the list changes.</source>
          <target state="translated">목록 또는 목록의 항목이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.ListChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt;</ph> event is thrown by the <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> class when changes to an item are made using methods such as <ph id="ph3">&lt;xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.CurrencyManager.Refresh%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt;</ph> 이벤트에 의해 throw 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 항목에 변경 될 때와 같은 방법을 사용 하 여 클래스 <ph id="ph3">&lt;xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Windows.Forms.CurrencyManager.Refresh%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.ListChanged">
          <source>This event can also occur when the data source is edited directly if it implements the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingListView&gt;</ph> interface.</source>
          <target state="translated">이 이벤트는 구현 하는 경우 데이터 원본을 직접 편집 되는 경우에 발생할 수 있습니다는 <ph id="ph1">&lt;xref:System.ComponentModel.IBindingListView&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.ListChanged">
          <source>The associated <ph id="ph1">`OnListChanged`</ph> method is a private method in this class.</source>
          <target state="translated">연결 된 <ph id="ph1">`OnListChanged`</ph> 메서드는이 클래스의 private 메서드가 있습니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.ListChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.ListChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.ListChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.ListChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.ListChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.ListChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> named <ph id="ph2">`CurrencyManager1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 라는 <ph id="ph2">`CurrencyManager1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.ListChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="F:System.Windows.Forms.CurrencyManager.listposition">
          <source>Specifies the current position of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CurrencyManager" /&gt;</ph> in the list.</source>
          <target state="translated">목록에 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CurrencyManager" /&gt;</ph>의 현재 위치를 지정합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Forms.CurrencyManager.listposition">
          <source>If the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;</ph> property is greater than 0, the <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.listposition&gt;</ph> field is a number between 0 and <ph id="ph3">&lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;</ph> minus 1.</source>
          <target state="translated">하는 경우의 값은 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;</ph> 속성은 0 보다 큰는 <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.listposition&gt;</ph> 필드는 0 사이의 숫자 및 <ph id="ph3">&lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;</ph> 1을 뺀 값입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Forms.CurrencyManager.listposition">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;</ph> is 0, <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.listposition&gt;</ph> is -1.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;</ph> 은 0으로, <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.listposition&gt;</ph> 은-1입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.CurrencyManager.MetaDataChanged">
          <source>Occurs when the metadata of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.CurrencyManager.List" /&gt;</ph> has changed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.CurrencyManager.List" /&gt;</ph>의 메타데이터가 변경되면 발생합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.MetaDataChanged">
          <source>The metadata of the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.List%2A&gt;</ph> consists of the schema of the underlying <ph id="ph2">&lt;xref:System.Windows.Forms.Binding.DataSource%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">메타 데이터는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.List%2A&gt;</ph> 은 기본 스키마 이루어져 <ph id="ph2">&lt;xref:System.Windows.Forms.Binding.DataSource%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.MetaDataChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.MetaDataChanged&gt;</ph> event is raised when that schema has changed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.MetaDataChanged&gt;</ph> 이벤트는 해당 스키마가 변경 된 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.MetaDataChanged">
          <source>For example, the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.MetaDataChanged&gt;</ph> event is raised when a <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> is programmatically added to a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.MetaDataChanged&gt;</ph> 이벤트가 때는 <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> 에 프로그래밍 방식으로 추가 되는 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.MetaDataChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.MetaDataChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.MetaDataChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.MetaDataChanged&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.MetaDataChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.MetaDataChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.MetaDataChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.MetaDataChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> named <ph id="ph2">`CurrencyManager1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 라는 <ph id="ph2">`CurrencyManager1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.CurrencyManager.MetaDataChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.MetaDataChanged&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.MetaDataChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.OnCurrentChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.OnCurrentChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.OnCurrentItemChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.OnCurrentItemChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ItemChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ItemChangedEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.CurrencyManager.ItemChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.CurrencyManager.ItemChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.OnItemChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.OnItemChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.CurrencyManager.MetaDataChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.CurrencyManager.MetaDataChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.OnMetaDataChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.OnMetaDataChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.OnPositionChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.OnPositionChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" /&gt;</ph> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.CurrencyManager.Position">
          <source>Gets or sets the position you are at within the list.</source>
          <target state="translated">목록 내에서의 위치를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.Position">
          <source>A number between 0 and <ph id="ph1">&lt;see cref="P:System.Windows.Forms.CurrencyManager.Count" /&gt;</ph> minus 1.</source>
          <target state="translated">0과 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.CurrencyManager.Count" /&gt;</ph>에서 1을 뺀 값 사이의 숫자입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.Position">
          <source>An important property of the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> class is the <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.Position%2A&gt;</ph> property.</source>
          <target state="translated">중요 한 속성은 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 클래스는는 <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.Position%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.Position">
          <source>In a list of items, you can view only one item out of the entire list.</source>
          <target state="translated">항목의 목록에서 전체 목록에서 하나의 항목을 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.Position">
          <source>To determine which item is viewed, set the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Position%2A&gt;</ph> to a number between 0 (the beginning of the list) and <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;</ph> minus 1 (the end of the list).</source>
          <target state="translated">어떤 항목을 볼를 확인 하려면 설정는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Position%2A&gt;</ph> 를 0 (목록의 시작 부분) 사이의 숫자로 및 <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;</ph> 값-1 (목록의 끝).</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.Position">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Position%2A&gt;</ph> determines the currency, or place in the list, of all controls bound to the same <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph>.</source>
          <target state="translated">따라서는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Position%2A&gt;</ph> 통화 또는 동일에 바인딩된 모든 컨트롤의 목록에서 해당 위치가 결정 <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.Position">
          <source>For example, imagine a list consisting of two columns called "FirstName" and "LastName".</source>
          <target state="translated">예를 들어 "FirstName" 및 "LastName" 이라는 두 개의 열으로 구성 된 목록을 한다고 가정 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.Position">
          <source>Two <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls are bound to the same list; the first control is bound to the first column, and the second control is bound to the second column.</source>
          <target state="translated">두 개의 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 컨트롤이 같은 목록에 연결 되 고 첫 번째 컨트롤이 첫 번째 열에 바인딩된 두 번째 컨트롤 두 번째 열에 바인딩되어 있습니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.Position">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Position%2A&gt;</ph> of the common <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> is set to the third position, both controls display the appropriate values for that position in the list.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Position%2A&gt;</ph> 일반 <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 설정 된 세 번째 위치로 두 컨트롤 목록에서 해당 위치에 대 한 적절 한 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.Position">
          <source>In other words, if the item at position three consists of the first name "John" and the last name "Smith", the bound controls will display "John" and "Smith".</source>
          <target state="translated">즉, 세 위치에 있는 항목으로 구성 된 경우 "John" 첫 번째 이름 및 성 "Smith"에 "John" 및 "Smith" 바인딩된 컨트롤 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.CurrencyManager.Position">
          <source>The following code examples use the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Position%2A&gt;</ph> property to allow navigation through a list.</source>
          <target state="translated">다음 코드 예제에서 사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Position%2A&gt;</ph> 속성을 목록으로 탐색할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.Refresh">
          <source>Forces a repopulation of the data-bound list.</source>
          <target state="translated">데이터 바인딩된 목록을 강제로 다시 채웁니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.Refresh">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Refresh%2A&gt;</ph> method when the data source does not support notification when it is changed (for example, if it is an <ph id="ph2">&lt;xref:System.Array&gt;</ph>).</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Refresh%2A&gt;</ph> 데이터 원본이 변경 되 면 알림을 지원 하지 않을 때 메서드 (이 경우에 예를 들어는 <ph id="ph2">&lt;xref:System.Array&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.Refresh">
          <source>The following code example creates an array and binds it to a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control, and then changes one value.</source>
          <target state="translated">다음 코드 예제에서는 배열을 만들고에 바인딩합니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 컨트롤과 다음 값을 변경 합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.Refresh">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Refresh%2A&gt;</ph> method can be called to update the value displayed by the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Refresh%2A&gt;</ph> 표시 하는 값을 업데이트 하는 메서드를 호출할 수 있습니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.RemoveAt(System.Int32)">
          <source>The index of the item to remove from the list.</source>
          <target state="translated">목록에서 제거할 항목의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.RemoveAt(System.Int32)">
          <source>Removes the item at the specified index.</source>
          <target state="translated">지정한 인덱스에서 해당 항목을 제거합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.RemoveAt%2A&gt;</ph> method was designed to allow complex controls, such as the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control, to remove items from the list.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.RemoveAt%2A&gt;</ph> 메서드는와 같은 복잡 한 제어를 허용 하도록 설계 된는 <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> 컨트롤 목록에서 항목을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.RemoveAt(System.Int32)">
          <source>You should not use this method to actually remove items.</source>
          <target state="translated">하지 실제로 항목을 제거 하려면이 메서드를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.RemoveAt(System.Int32)">
          <source>Instead, use the <ph id="ph1">&lt;xref:System.Data.DataView.Delete%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> class to delete items.</source>
          <target state="translated">대신를 사용 하 여는 <ph id="ph1">&lt;xref:System.Data.DataView.Delete%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> 항목을 삭제 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.RemoveAt(System.Int32)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.RemoveAt%2A&gt;</ph> method to remove the item at position 0 in the list.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.RemoveAt%2A&gt;</ph> 메서드 목록에서 위치 0에 항목을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.RemoveAt(System.Int32)">
          <source>There is no row at the specified <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="index" /&gt;</ph>에 행이 없는 경우</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.ResumeBinding">
          <source>Resumes data binding.</source>
          <target state="translated">데이터 바인딩을 다시 시작합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.ResumeBinding">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A&gt;</ph> are two methods that allow the temporary suspension and resumption of in a simple data binding scenario.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A&gt;</ph> 는 단순 데이터 바인딩 시나리오에는 일시 중단 했다가 사용할 수 있는 두 개의 메서드가 있습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.ResumeBinding">
          <source>You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</source>
          <target state="translated">데이터 바인딩 사용자 유효성 검사를 수행 하기 전에 데이터 필드에 몇 가지 편집 하도록 허용 해야 하는 경우에 일반적으로 일시 합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.ResumeBinding">
          <source>For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</source>
          <target state="translated">예를 들어 하지만 유효성을 검사 하는 두 번째에 따라 한 필드를 변경 해야 하는 경우 첫 번째 필드에 오류에 포함 되도록 두 번째 필드를 리라 예상 되었습니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.ResumeBinding">
          <source>Using <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt;</ph> prevents changes from being pushed into the data source until <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A&gt;</ph> is called but does not prevent changes in the data source from affecting the bound controls.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt;</ph> 변경 내용이 될 때까지 데이터 원본에 반영 되지 않도록 <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A&gt;</ph> 이라고 하지만 바인딩된 컨트롤에 영향을 미치는 데이터 원본 변경 하지 않는 합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.ResumeBinding">
          <source>Controls that use complex data binding, such as the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, update their values based on change events such as the <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt;</ph> event.</source>
          <target state="translated">와 같은 복잡 한 데이터 바인딩을 사용 하는 컨트롤의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어와 같은 변경 이벤트에 따라 해당 값을 업데이트는 <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.ResumeBinding">
          <source>Calling this method will not prevent these events from occurring.</source>
          <target state="translated">이 메서드를 호출 해도 이러한 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.ResumeBinding">
          <source>For this reason, <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A&gt;</ph> are designed for use with simple-bound controls, such as a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">이러한 이유로 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A&gt;</ph> 와 같은 단순 바인딩된 컨트롤을 사용 하도록 설계 되는 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.ResumeBinding">
          <source>Alternatively, you can use these methods in a complex binding scenario if you suppress <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> events by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A&gt;</ph> property to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">또는 경우 사용할 수 있습니다 이러한 메서드는 복합 바인딩 시나리오에 표시 하지 않으려면 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> 설정 하 여 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A&gt;</ph> 속성을 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.ResumeBinding">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.SuspendBinding">
          <source>Suspends data binding to prevents changes from updating the bound data source.</source>
          <target state="translated">데이터 바인딩을 일시 중단하여 바인딩된 데이터 소스가 변경 내용으로 업데이트되지 않도록 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.SuspendBinding">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt;</ph> methods allow the temporary suspension and resumption of data binding in a simple binding scenario.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt;</ph> 단순 바인딩 시나리오에는 일시 중단 했다가 데이터 바인딩 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.SuspendBinding">
          <source>You would typically suspend data binding if the user must make several edits to data fields before validation occurs.</source>
          <target state="translated">데이터 바인딩 유효성 검사를 수행 하기 전에 사용자를 데이터 필드에 몇 가지 편집 내용을 확인 해야 하는 경우에 일반적으로 일시 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.SuspendBinding">
          <source>For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</source>
          <target state="translated">예를 들어 하지만 유효성을 검사 하는 두 번째에 따라 한 필드를 변경 해야 하는 경우 첫 번째 필드에 오류에 포함 되도록 두 번째 필드를 리라 예상 되었습니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.SuspendBinding">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;</ph> prevents changes from being applied to the data source until <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt;</ph> is called, but does not actually prevent any events from occurring.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;</ph> 변경 될 때까지 데이터 원본에 적용 되지 않도록 방지 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt;</ph> 호출 되지만 실제로 발생 이벤트를 억제 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.SuspendBinding">
          <source>Controls that use complex data binding, such as the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, update their values based on change events, such as the <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt;</ph> event.</source>
          <target state="translated">와 같은 복잡 한 데이터 바인딩을 사용 하는 컨트롤의 <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> 제어, 예: 변경 이벤트에 따라 해당 값을 업데이트는 <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.SuspendBinding">
          <source>Therefore, calling <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;</ph> will not prevent complex-bound controls from receiving events to update the data source.</source>
          <target state="translated">따라서 호출 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;</ph> 되더라도 복합 바인딩된 컨트롤에서 데이터 소스를 업데이트 하는 이벤트를 수신 합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.SuspendBinding">
          <source>For this reason, <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt;</ph> are designed for use with simple-bound controls, such as the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">이러한 이유로 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt;</ph> 와 같은 단순 바인딩된 컨트롤을 사용 하도록 설계 되는 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.SuspendBinding">
          <source>Alternatively, you can use these methods in a complex binding scenario if you suppress <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> events by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A&gt;</ph> property to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">또는 경우 사용할 수 있습니다 이러한 메서드는 복합 바인딩 시나리오에 표시 하지 않으려면 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> 설정 하 여 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A&gt;</ph> 속성을 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.CurrencyManager.SuspendBinding">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.CurrencyManager.UpdateIsBinding">
          <source>Updates the status of the binding.</source>
          <target state="translated">바인딩 상태를 업데이트합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>