<Type Name="CommonDialog" FullName="System.Windows.Forms.CommonDialog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="32518f5b727b969b89e60daa73b8e312e8bb2ed4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36347272" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CommonDialog : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CommonDialog extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CommonDialog&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommonDialog abstract : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type CommonDialog = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9ca53-101">Specifies the base class used for displaying dialog boxes on the screen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9ca53-101">Specifies the base class used for displaying dialog boxes on the screen.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ca53-102">상속 된 클래스를 구현 하는 데 필요한 <xref:System.Windows.Forms.CommonDialog.RunDialog%2A> 호출 하 여 <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> 특정 공용 대화 상자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-102">Inherited classes are required to implement <xref:System.Windows.Forms.CommonDialog.RunDialog%2A> by invoking <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> to create a specific common dialog box.</span></span> <span data-ttu-id="9ca53-103">상속 된 클래스는 필요에 따라 재정의 <xref:System.Windows.Forms.CommonDialog.HookProc%2A> 특정 대화 상자 후크 기능을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-103">Inherited classes can optionally override <xref:System.Windows.Forms.CommonDialog.HookProc%2A> to implement specific dialog box hook functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ca53-104">다음 코드 예제에서는 <xref:System.Windows.Forms.ColorDialog> 구현의 <xref:System.Windows.Forms.CommonDialog> 만들기 및 표시 대화 상자를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-104">The following code example uses the <xref:System.Windows.Forms.ColorDialog> implementation of <xref:System.Windows.Forms.CommonDialog> and illustrates creating and showing a dialog box.</span></span> <span data-ttu-id="9ca53-105">이 예제에 기존 폼 내에서 메서드가 호출 되도록 하려면는 <xref:System.Windows.Forms.TextBox> 및 <xref:System.Windows.Forms.Button> 배치 합니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-105">This example requires that the method is called from within an existing form, which has a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.Button> placed on it.</span></span>  
  
 [!code-cpp[Classic ColorDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ColorDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ColorDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ColorDialog Example/CS/source.cs#1)]
 [!code-vb[Classic ColorDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ColorDialog Example/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommonDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommonDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ca53-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.CommonDialog" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.CommonDialog" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpRequest">
      <MemberSignature Language="C#" Value="public event EventHandler HelpRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HelpRequest" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CommonDialog.HelpRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HelpRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HelpRequest;" />
      <MemberSignature Language="F#" Value="member this.HelpRequest : EventHandler " Usage="member this.HelpRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ca53-107">Occurs when the user clicks the Help button on a common dialog box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-107">Occurs when the user clicks the Help button on a common dialog box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ca53-108">이벤트를 처리 하는 방법에 대 한 정보를 참조 하십시오. [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-108">For information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ca53-109">다음 코드 예제에서는 초기화 하는 방법을 보여 줍니다는 <xref:System.Windows.Forms.ColorDialog> 개체 설정의 <xref:System.Windows.Forms.ColorDialog.AnyColor%2A>, <xref:System.Windows.Forms.ColorDialog.AllowFullOpen%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-109">The following code example demonstrates initializing a <xref:System.Windows.Forms.ColorDialog> object setting the <xref:System.Windows.Forms.ColorDialog.AnyColor%2A>, <xref:System.Windows.Forms.ColorDialog.AllowFullOpen%2A> properties.</span></span> <span data-ttu-id="9ca53-110"><xref:System.Windows.Forms.ColorDialog> 개체는 사용자 지정 색을 설정 하려면 사용자를 허용 하지 없지만 전체 집합이 기본 색을 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-110">The <xref:System.Windows.Forms.ColorDialog> object does not allow the user to set a custom color, but it allows the full set of basic colors to be displayed.</span></span> <span data-ttu-id="9ca53-111">설정 하 여는 <xref:System.Windows.Forms.ColorDialog.SolidColorOnly%2A> 속성을 false로 색은 색이 256 또는 시스템에서 다른 색의 조합을 표시할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-111">By setting the <xref:System.Windows.Forms.ColorDialog.SolidColorOnly%2A> property to false, it allows the display of colors that are combinations of other colors on systems with 256 or less colors.</span></span> <span data-ttu-id="9ca53-112">또한이 예제에서는 설정 된 <xref:System.Windows.Forms.ColorDialog.ShowHelp%2A> 속성 및 처리는 <xref:System.Windows.Forms.CommonDialog.HelpRequest> 대화 상자에 대 한 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-112">The example also shows setting the <xref:System.Windows.Forms.ColorDialog.ShowHelp%2A> property and handling a <xref:System.Windows.Forms.CommonDialog.HelpRequest> event for a dialog box.</span></span> <span data-ttu-id="9ca53-113">예제를 실행 하려면 다음 코드를 붙여 폼 호출에는 `InitializeColorDialog` 폼의 생성자 또는 `Load` 메서드.</span><span class="sxs-lookup"><span data-stu-id="9ca53-113">To run the example, paste the following code in a form and call the `InitializeColorDialog` method in the form's constructor or `Load` method.</span></span> <span data-ttu-id="9ca53-114">이 예제에서는 `Click` 단추의 이벤트가 예에서 정의 된 이벤트 처리기에 연결 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-114">This example requires that the `Click` event of the button is connected to the event handler defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ColorDialogHelp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ColorDialogHelp/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ColorDialogHelp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ColorDialogHelp/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ColorDialogHelp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ColorDialogHelp/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="HookProc">
      <MemberSignature Language="C#" Value="protected virtual IntPtr HookProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance native int HookProc(native int hWnd, int32 msg, native int wparam, native int lparam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HookProc (hWnd As IntPtr, msg As Integer, wparam As IntPtr, lparam As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IntPtr HookProc(IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="F#" Value="abstract member HookProc : nativeint * int * nativeint * nativeint -&gt; nativeint&#xA;override this.HookProc : nativeint * int * nativeint * nativeint -&gt; nativeint" Usage="commonDialog.HookProc (hWnd, msg, wparam, lparam)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWnd" Type="System.IntPtr" />
        <Parameter Name="msg" Type="System.Int32" />
        <Parameter Name="wparam" Type="System.IntPtr" />
        <Parameter Name="lparam" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWnd">
          <span data-ttu-id="9ca53-115">The handle to the dialog box window.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-115">The handle to the dialog box window.</span>
          </span>
        </param>
        <param name="msg">
          <span data-ttu-id="9ca53-116">The message being received.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-116">The message being received.</span>
          </span>
        </param>
        <param name="wparam">
          <span data-ttu-id="9ca53-117">Additional information about the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-117">Additional information about the message.</span>
          </span>
        </param>
        <param name="lparam">
          <span data-ttu-id="9ca53-118">Additional information about the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-118">Additional information about the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ca53-119">Defines the common dialog box hook procedure that is overridden to add specific functionality to a common dialog box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-119">Defines the common dialog box hook procedure that is overridden to add specific functionality to a common dialog box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ca53-120">A zero value if the default dialog box procedure processes the message; a nonzero value if the default dialog box procedure ignores the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-120">A zero value if the default dialog box procedure processes the message; a nonzero value if the default dialog box procedure ignores the message.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ca53-121">후크 프로시저에는 함수 응용 프로그램에 도달 하기 전에 이벤트를 가로챌 수 있는 메커니즘입니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-121">A hook procedure is a mechanism by which a function can intercept events before they reach an application.</span></span> <span data-ttu-id="9ca53-122">재정의 하는 경우는 <xref:System.Windows.Forms.CommonDialog.HookProc%2A> 에 대 한 메서드는 <xref:System.Windows.Forms.CommonDialog> 클래스, 운영 체제의 운영 체제 메시지 창에 게시 하는 함수를 재정의 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-122">When you override the <xref:System.Windows.Forms.CommonDialog.HookProc%2A> method for a <xref:System.Windows.Forms.CommonDialog> class, the operating system invokes your override of the function to post operating system messages to the window.</span></span>  
  
 <span data-ttu-id="9ca53-123">기본적으로 후크 프로시저 WM_INITDIALOG 메시지에 대 한 응답으로 화면에 대화 상자를 배치 합니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-123">By default, the hook procedure centers the dialog box on the screen in response to a WM_INITDIALOG message.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9ca53-124">이 방법은 사용 하 여 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 신뢰할 수 없는 코드에서 호출 되 고 하지 못하도록; 직접 실행 호출자만 포함 해야 합니다. <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=nameWithType> 권한.</span><span class="sxs-lookup"><span data-stu-id="9ca53-124">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to prevent it from being called from untrusted code; only the immediate caller is required to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=nameWithType> permission.</span></span> <span data-ttu-id="9ca53-125">코드와 부분적으로 신뢰할 수 있는 코드에서 호출할 수 있는 경우 사용자 입력을 통과 하지 못한 <xref:System.Runtime.InteropServices.Marshal> 클래스 유효성 검사 없이 메서드.</span><span class="sxs-lookup"><span data-stu-id="9ca53-125">If your code can be called from partially trusted code, do not pass user input to <xref:System.Runtime.InteropServices.Marshal> class methods without validation.</span></span> <span data-ttu-id="9ca53-126">사용 하는 중요 한 제한에 대 한는 `LinkDemand` 멤버 참조 [Demand 합니다. LinkDemand](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5)합니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-126">For important limitations on using the `LinkDemand` member, see [Demand vs. LinkDemand](http://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span></span>  
  
 <span data-ttu-id="9ca53-127">이 속성 또한 사용 하 여는 <xref:System.Security.Permissions.SecurityAction.InheritanceDemand?displayProperty=nameWithType> ;이 멤버를 재정의 하려면 보안 특성을 파생된 클래스에 있어야는 `CustomPermission` 권한.</span><span class="sxs-lookup"><span data-stu-id="9ca53-127">This property also uses the <xref:System.Security.Permissions.SecurityAction.InheritanceDemand?displayProperty=nameWithType> security attribute; to override this member, the derived class must have the `CustomPermission` permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ca53-128">다음 코드 예제에서는 재정의 하는 방법을 보여 줍니다.는 <xref:System.Windows.Forms.CommonDialog.HookProc%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9ca53-128">The following code example demonstrates how to override the <xref:System.Windows.Forms.CommonDialog.HookProc%2A> method.</span></span> <span data-ttu-id="9ca53-129">이 예제에서는 상속 하는 클래스 이루어져는 <xref:System.Windows.Forms.CommonDialog> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-129">The example consists of a class that inherits the <xref:System.Windows.Forms.CommonDialog> class.</span></span> <span data-ttu-id="9ca53-130">클래스의에서 <xref:System.Windows.Forms.CommonDialog.HookProc%2A> override,이 예제에서는 메서드를 평가 `msg` 특정 Windows 메시지에 대 한 상수 값에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-130">In the class's <xref:System.Windows.Forms.CommonDialog.HookProc%2A> override, the example evaluates the method's `msg` parameter against constant values for particular Windows messages.</span></span> <span data-ttu-id="9ca53-131">경우는 `msg` 예제에 전달 된 Windows 메시지를 식별 하는 추적 출력을 작성 매개 변수가 지정된 된 상수와 같으면는 <xref:System.Windows.Forms.CommonDialog.HookProc%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="9ca53-131">If the `msg` parameter equals the specified constant, the example writes trace output identifying the Windows message that was passed to the <xref:System.Windows.Forms.CommonDialog.HookProc%2A> method.</span></span> <span data-ttu-id="9ca53-132">이 예에서는 가정 하는 클래스는 <xref:System.Windows.Forms.CommonDialog.HookProc%2A> 메서드는 상속을 선언는 <xref:System.Windows.Forms.CommonDialog> 클래스.</span><span class="sxs-lookup"><span data-stu-id="9ca53-132">This example assumes that the class in which the <xref:System.Windows.Forms.CommonDialog.HookProc%2A> method is declared inherits the <xref:System.Windows.Forms.CommonDialog> class.</span></span>  
  
 [!code-cpp[HookProc Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/HookProc Example/CPP/fontdialogoverride.cpp#1)]
 [!code-csharp[HookProc Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/HookProc Example/CS/fontdialogoverride.cs#1)]
 [!code-vb[HookProc Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/HookProc Example/VB/fontdialogoverride.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9ca53-133">비관리 코드를 호출할 직접 실행 호출자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-133">for the immediate caller to call unmanaged code.</span>
          </span>
          <span data-ttu-id="9ca53-134">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-134">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <span data-ttu-id="9ca53-135">
            <para>클래스 상속 일반 대화 상자에 특정 기능을 추가 하려면이 메서드를 재정의할 수 있습니다. 재정의 하는 경우 <see cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> 메서드.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-135">
              <para>Inheriting classes can override this method to add specific functionality to a common dialog box. When overriding <see cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHelpRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnHelpRequest (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHelpRequest(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHelpRequest (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHelpRequest(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHelpRequest : EventArgs -&gt; unit&#xA;override this.OnHelpRequest : EventArgs -&gt; unit" Usage="commonDialog.OnHelpRequest e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="9ca53-136">An <see cref="T:System.Windows.Forms.HelpEventArgs" /> that provides the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-136">An <see cref="T:System.Windows.Forms.HelpEventArgs" /> that provides the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ca53-137">Raises the <see cref="E:System.Windows.Forms.CommonDialog.HelpRequest" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-137">Raises the <see cref="E:System.Windows.Forms.CommonDialog.HelpRequest" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ca53-138">이 메서드는 도움말 단추를 클릭할 때 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-138">This method is invoked when the Help button is clicked.</span></span> <span data-ttu-id="9ca53-139">클래스 상속 이벤트를 처리 하려면이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-139">Inheriting classes can override this method to handle the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerWndProc">
      <MemberSignature Language="C#" Value="protected virtual IntPtr OwnerWndProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance native int OwnerWndProc(native int hWnd, int32 msg, native int wparam, native int lparam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OwnerWndProc (hWnd As IntPtr, msg As Integer, wparam As IntPtr, lparam As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IntPtr OwnerWndProc(IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="F#" Value="abstract member OwnerWndProc : nativeint * int * nativeint * nativeint -&gt; nativeint&#xA;override this.OwnerWndProc : nativeint * int * nativeint * nativeint -&gt; nativeint" Usage="commonDialog.OwnerWndProc (hWnd, msg, wparam, lparam)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWnd" Type="System.IntPtr" />
        <Parameter Name="msg" Type="System.Int32" />
        <Parameter Name="wparam" Type="System.IntPtr" />
        <Parameter Name="lparam" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWnd">
          <span data-ttu-id="9ca53-140">The window handle of the message to send.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-140">The window handle of the message to send.</span>
          </span>
        </param>
        <param name="msg">
          <span data-ttu-id="9ca53-141">The Win32 message to send.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-141">The Win32 message to send.</span>
          </span>
        </param>
        <param name="wparam">
          <span data-ttu-id="9ca53-142">The <c>wparam</c> to send with the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-142">The <c>wparam</c> to send with the message.</span>
          </span>
        </param>
        <param name="lparam">
          <span data-ttu-id="9ca53-143">The <c>lparam</c> to send with the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-143">The <c>lparam</c> to send with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ca53-144">Defines the owner window procedure that is overridden to add specific functionality to a common dialog box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-144">Defines the owner window procedure that is overridden to add specific functionality to a common dialog box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ca53-145">The result of the message processing, which is dependent on the message sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-145">The result of the message processing, which is dependent on the message sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ca53-146">일반 대화 상자의 소유자 창에 메시지를 보내면이 제어가 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-146">Control is transferred here when messages are sent to the owner window of the common dialog box.</span></span> <span data-ttu-id="9ca53-147">클래스 상속 일반 대화 상자에 특정 기능을 추가 하려면이 메서드를 재정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-147">Inheriting classes can override this method to add specific functionality to a common dialog box.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9ca53-148">비관리 코드를 호출할 직접 실행 호출자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-148">for the immediate caller to call unmanaged code.</span>
          </span>
          <span data-ttu-id="9ca53-149">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-149">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public abstract void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit" Usage="commonDialog.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ca53-150">When overridden in a derived class, resets the properties of a common dialog box to their default values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-150">When overridden in a derived class, resets the properties of a common dialog box to their default values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9ca53-151">이 메서드를 호출 하는 관리 되지 않는 코드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-151">for unmanaged code to call this method.</span>
          </span>
          <span data-ttu-id="9ca53-152">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-152">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <block subset="none" type="overrides">
          <span data-ttu-id="9ca53-153">
            <para>클래스 상속 해당 속성을 다시 설정 하려면이 메서드를 재정의할 수 있습니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-153">
              <para>Inheriting classes can override this method to reset their properties.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RunDialog">
      <MemberSignature Language="C#" Value="protected abstract bool RunDialog (IntPtr hwndOwner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool RunDialog(native int hwndOwner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function RunDialog (hwndOwner As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool RunDialog(IntPtr hwndOwner);" />
      <MemberSignature Language="F#" Value="abstract member RunDialog : nativeint -&gt; bool" Usage="commonDialog.RunDialog hwndOwner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwndOwner" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwndOwner">
          <span data-ttu-id="9ca53-154">A value that represents the window handle of the owner window for the common dialog box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-154">A value that represents the window handle of the owner window for the common dialog box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ca53-155">When overridden in a derived class, specifies a common dialog box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-155">When overridden in a derived class, specifies a common dialog box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ca53-156">
            <see langword="true" /> if the dialog box was successfully run; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-156">
              <see langword="true" /> if the dialog box was successfully run; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ca53-157">이 메서드는 사용자의 일반 대화 상자를 호출할 때 <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>의 상속 된 클래스에서 재정의 해야 <xref:System.Windows.Forms.CommonDialog> 특정 일반 대화 상자를 구현 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-157">This method is invoked when the user of a common dialog box calls <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>, and it must be overridden by inherited classes of <xref:System.Windows.Forms.CommonDialog> to implement a specific common dialog box.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9ca53-158">이 메서드를 호출 하는 관리 되지 않는 코드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-158">for unmanaged code to call this method.</span>
          </span>
          <span data-ttu-id="9ca53-159">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-159">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Forms.CommonDialog.ShowDialog" />
        <altmember cref="M:System.Windows.Forms.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowDialog">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9ca53-160">Runs a common dialog box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-160">Runs a common dialog box.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DialogResult ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog () As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : unit -&gt; System.Windows.Forms.DialogResult" Usage="commonDialog.ShowDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9ca53-161">Runs a common dialog box with a default owner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-161">Runs a common dialog box with a default owner.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ca53-162">
            <see cref="F:System.Windows.Forms.DialogResult.OK" /> if the user clicks OK in the dialog box; otherwise, <see cref="F:System.Windows.Forms.DialogResult.Cancel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-162">
              <see cref="F:System.Windows.Forms.DialogResult.OK" /> if the user clicks OK in the dialog box; otherwise, <see cref="F:System.Windows.Forms.DialogResult.Cancel" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ca53-163">이 메서드는 <xref:System.Windows.Forms.CommonDialog.RunDialog%2A>를 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-163">This method implements <xref:System.Windows.Forms.CommonDialog.RunDialog%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ca53-164">다음 코드 예제에서는 <xref:System.Windows.Forms.ColorDialog> 구현의 <xref:System.Windows.Forms.CommonDialog> 만들기 및 표시 대화 상자를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-164">The following code example uses the <xref:System.Windows.Forms.ColorDialog> implementation of <xref:System.Windows.Forms.CommonDialog> and illustrates creating and showing a dialog box.</span></span> <span data-ttu-id="9ca53-165">이 예제에 기존 폼 내에서 메서드가 호출 되도록 하려면는 <xref:System.Windows.Forms.TextBox> 및 <xref:System.Windows.Forms.Button> 배치 합니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-165">This example requires that the method is called from within an existing form, which has a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.Button> placed on it.</span></span>  
  
 [!code-cpp[Classic ColorDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ColorDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ColorDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ColorDialog Example/CS/source.cs#1)]
 [!code-vb[Classic ColorDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ColorDialog Example/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">
          <span data-ttu-id="9ca53-166">인쇄 하는 <see cref="T:System.Windows.Forms.PrintDialog" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-166">to print from a <see cref="T:System.Windows.Forms.PrintDialog" />.</span>
          </span>
          <span data-ttu-id="9ca53-167">연결 된 열거형의 경우: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-167">Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="9ca53-168">이 메서드를 호출할 하위 창에서 안전 하 게 보호 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-168">for safe subwindows to call this method.</span>
          </span>
          <span data-ttu-id="9ca53-169">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-169">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Forms.CommonDialog.RunDialog(System.IntPtr)" />
        <altmember cref="T:System.Windows.Forms.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog (System.Windows.Forms.IWin32Window owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DialogResult ShowDialog(class System.Windows.Forms.IWin32Window owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog (owner As IWin32Window) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowDialog(System::Windows::Forms::IWin32Window ^ owner);" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : System.Windows.Forms.IWin32Window -&gt; System.Windows.Forms.DialogResult" Usage="commonDialog.ShowDialog owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="9ca53-170">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> that represents the top-level window that will own the modal dialog box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-170">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> that represents the top-level window that will own the modal dialog box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9ca53-171">Runs a common dialog box with the specified owner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-171">Runs a common dialog box with the specified owner.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9ca53-172">
            <see cref="F:System.Windows.Forms.DialogResult.OK" /> if the user clicks **OK** in the dialog box; otherwise, <see cref="F:System.Windows.Forms.DialogResult.Cancel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-172">
              <see cref="F:System.Windows.Forms.DialogResult.OK" /> if the user clicks **OK** in the dialog box; otherwise, <see cref="F:System.Windows.Forms.DialogResult.Cancel" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ca53-173">이 버전의는 <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> 메서드를 사용 하면 특정 폼 이나 컨트롤 표시 되는 대화 상자를 소유할을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-173">This version of the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A> method allows you to specify a specific form or control that will own the dialog box that is shown.</span></span> <span data-ttu-id="9ca53-174">매개 변수가 없는이 메서드의 버전을 사용 하는 경우 응용 프로그램의 경우 현재 활성 창으로 표시 되는 대화 상자를 자동으로 소유 합니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-174">If you use the version of this method that has no parameters, the dialog box being shown would be owned automatically by the currently active window of your application.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">
          <span data-ttu-id="9ca53-175">인쇄 하는 <see cref="T:System.Windows.Forms.PrintDialog" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-175">to print from a <see cref="T:System.Windows.Forms.PrintDialog" />.</span>
          </span>
          <span data-ttu-id="9ca53-176">연결 된 열거형의 경우: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-176">Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="9ca53-177">이 메서드를 호출할 하위 창에서 안전 하 게 보호 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-177">for safe subwindows to call this method.</span>
          </span>
          <span data-ttu-id="9ca53-178">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-178">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CommonDialog.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.CommonDialog.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ca53-179">Gets or sets an object that contains data about the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-179">Gets or sets an object that contains data about the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9ca53-180">에 대 한 데이터를 포함 하는 개체는 <see cref="T:System.Windows.Forms.CommonDialog" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ca53-180">The object that contains data about the <see cref="T:System.Windows.Forms.CommonDialog" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ca53-181">이 속성을 사용 하 여 컨트롤에 대 한 임의의 정보를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="9ca53-181">Use this property to store arbitrary information about the control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>