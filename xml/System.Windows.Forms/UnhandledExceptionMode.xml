<Type Name="UnhandledExceptionMode" FullName="System.Windows.Forms.UnhandledExceptionMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0ed2668ead3e4942845527c302be6a2956760013" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30654387" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum UnhandledExceptionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UnhandledExceptionMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.UnhandledExceptionMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum UnhandledExceptionMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class UnhandledExceptionMode" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="6de9e-101">Windows Forms 응용 프로그램이 처리되지 않은 예외를 보내야 하는 위치를 정의합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6de9e-101">Defines where a Windows Forms application should send unhandled exceptions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6de9e-102">이 열거형을 사용 하 여 <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="6de9e-102">This enumeration is used by <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6de9e-103">.NET Framework 버전 2.0의에서 공용 언어 런타임이 처리 되지 않은 예외가 호출 스택으로 전파 하는 데 변경.</span><span class="sxs-lookup"><span data-stu-id="6de9e-103">In the .NET Framework version 2.0, the common language runtime behavior changed to allow unhandled exceptions to propagate up the call stack.</span></span> <span data-ttu-id="6de9e-104">응용 프로그램 구성 파일을 통해이 동작을 비활성화할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6de9e-104">This behavior can be disabled via the application configuration file.</span></span> <span data-ttu-id="6de9e-105">자세한 내용은 [관리되는 스레드의 예외](~/docs/standard/threading/exceptions-in-managed-threads.md)를 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="6de9e-105">For more information, see [Exceptions in Managed Threads](~/docs/standard/threading/exceptions-in-managed-threads.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6de9e-106">다음 코드 예제에서는 Windows Forms 스레드와 다른 스레드에서 발생 하는 오류 발생 하는 두 오류에 대 한 이벤트 처리기를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="6de9e-106">The following code example sets event handlers for both errors that occur on Windows Forms threads and errors that occur on other threads.</span></span> <span data-ttu-id="6de9e-107">설정 <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> 모든 오류는 응용 프로그램의 사용자 구성 파일 설정에 관계 없이 응용 프로그램에서 처리할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="6de9e-107">It sets <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> so that all errors are handled by the application, regardless of the settings in the application's user configuration file.</span></span> <span data-ttu-id="6de9e-108">사용 하 여는 <xref:System.Windows.Forms.Application.ThreadException> 전자의 경우에 대 한 이벤트 및 <xref:System.AppDomain.UnhandledException> 주소 변경 이벤트.</span><span class="sxs-lookup"><span data-stu-id="6de9e-108">It uses the <xref:System.Windows.Forms.Application.ThreadException> event for the former, and the <xref:System.AppDomain.UnhandledException> event for the latter.</span></span> <span data-ttu-id="6de9e-109">이후 <xref:System.AppDomain.UnhandledException> 응용 프로그램을 방지할 수의 종료,이 예제에서는 오류를 기록 하기만 종료 하기 전에 시스템 이벤트 로그에에서 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6de9e-109">Since <xref:System.AppDomain.UnhandledException> cannot prevent an application from terminating, the example simply logs the error in the system Event Log prior to termination.</span></span>  
  
 <span data-ttu-id="6de9e-110">이 예제에서는 두 개를 정의 했다고 가정 <xref:System.Windows.Forms.Button> 컨트롤 `button1` 및 `button2`의 프로그램 <xref:System.Windows.Forms.Form> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="6de9e-110">This sample assumes that you have defined two <xref:System.Windows.Forms.Button> controls, `button1` and `button2`, on your <xref:System.Windows.Forms.Form> class.</span></span>  
  
 [!code-cpp[Classic Application.ThreadException Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Application.ThreadException Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CS/source.cs#1)]
 [!code-vb[Classic Application.ThreadException Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.ThreadException Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Automatic">
      <MemberSignature Language="C#" Value="Automatic" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.UnhandledExceptionMode Automatic = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.UnhandledExceptionMode.Automatic" />
      <MemberSignature Language="VB.NET" Value="Automatic" />
      <MemberSignature Language="C++ CLI" Value="Automatic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UnhandledExceptionMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="6de9e-111">응용 프로그램의 구성 파일에서 따로 지정하지 않는 한 모든 예외를 <see cref="E:System.Windows.Forms.Application.ThreadException" /> 처리기로 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6de9e-111">Route all exceptions to the <see cref="E:System.Windows.Forms.Application.ThreadException" /> handler, unless the application's configuration file specifies otherwise.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CatchException">
      <MemberSignature Language="C#" Value="CatchException" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.UnhandledExceptionMode CatchException = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.UnhandledExceptionMode.CatchException" />
      <MemberSignature Language="VB.NET" Value="CatchException" />
      <MemberSignature Language="C++ CLI" Value="CatchException" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UnhandledExceptionMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="6de9e-112">예외를 항상 <see cref="E:System.Windows.Forms.Application.ThreadException" /> 처리기로 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6de9e-112">Always route exceptions to the <see cref="E:System.Windows.Forms.Application.ThreadException" /> handler.</span>
          </span>
          <span data-ttu-id="6de9e-113">응용 프로그램 구성 파일을 무시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6de9e-113">Ignore the application configuration file.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ThrowException">
      <MemberSignature Language="C#" Value="ThrowException" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.UnhandledExceptionMode ThrowException = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.UnhandledExceptionMode.ThrowException" />
      <MemberSignature Language="VB.NET" Value="ThrowException" />
      <MemberSignature Language="C++ CLI" Value="ThrowException" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UnhandledExceptionMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="6de9e-114">예외를 <see cref="E:System.Windows.Forms.Application.ThreadException" /> 처리기로 보내지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6de9e-114">Never route exceptions to the <see cref="E:System.Windows.Forms.Application.ThreadException" /> handler.</span>
          </span>
          <span data-ttu-id="6de9e-115">응용 프로그램 구성 파일을 무시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6de9e-115">Ignore the application configuration file.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>