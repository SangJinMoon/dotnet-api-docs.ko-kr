<Type Name="ToolStripComboBox" FullName="System.Windows.Forms.ToolStripComboBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c8a5468748d12d283e8f931d02dc9f99c58ea99c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30650887" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ToolStripComboBox : System.Windows.Forms.ToolStripControlHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToolStripComboBox extends System.Windows.Forms.ToolStripControlHost" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolStripComboBox" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolStripComboBox&#xA;Inherits ToolStripControlHost" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolStripComboBox : System::Windows::Forms::ToolStripControlHost" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ToolStripControlHost</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Items")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Forms.Design.ToolStripItemDesignerAvailability(System.Windows.Forms.Design.ToolStripItemDesignerAvailability.ToolStrip | System.Windows.Forms.Design.ToolStripItemDesignerAvailability.MenuStrip | System.Windows.Forms.Design.ToolStripItemDesignerAvailability.ContextMenuStrip)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Windows.Forms.ToolStripComboBox" />에서 올바로 렌더링되는 <see cref="T:System.Windows.Forms.ToolStrip" />를 나타냅니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripComboBox> 이 <xref:System.Windows.Forms.ComboBox> 에서 호스팅에 대해 최적화는 <xref:System.Windows.Forms.ToolStrip>합니다. 호스팅된 컨트롤의 속성 및 이벤트의 하위 집합에서 노출 된 <xref:System.Windows.Forms.ToolStripComboBox> 수준, 하지만 기본 <xref:System.Windows.Forms.ComboBox> 컨트롤을 통해 모두 액세스할 수는 <xref:System.Windows.Forms.ToolStripComboBox.ComboBox%2A> 속성.  
  
 A <xref:System.Windows.Forms.ToolStripComboBox> 와 결합 된 편집 필드를 표시 한 <xref:System.Windows.Forms.ListBox>, 사용자가 목록에서 선택 하거나 새 텍스트를 입력할 수 있도록 합니다. 기본적으로는 <xref:System.Windows.Forms.ToolStripComboBox> 숨겨진된 드롭 다운 목록 사용 하 여 편집 필드를 표시 합니다. <xref:System.Windows.Forms.ToolStripComboBox.DropDownStyle%2A> 속성을 표시 하도록 콤보 상자의 스타일을 결정 합니다. 간단한 드롭다운 목록이 항상 표시, 여기서 텍스트 부분 편집할 수 없으며 드롭다운 목록 상자를 보려면 화살표를 선택 해야만는 드롭다운 목록 상자 또는 텍스트 부분은 ed 기본 드롭 다운 목록 상자에 대 한 허용 하는 값을 입력할 수 있습니다. itable와 사용자 목록을 보려면 화살표 키를 눌러야 합니다. 사용자가 편집할 수 없는 목록을 항상 표시 하려면 사용는 <xref:System.Windows.Forms.ListBox> 제어 합니다.  
  
 개체에를 추가 하려면 목록에서 런타임에 사용 하 여 개체 참조의 배열에 할당할는 <xref:System.Windows.Forms.ToolStripItemCollection.AddRange%2A> 메서드. 다음 목록에는 각 개체에 대 한 기본 문자열 값을 표시 됩니다. 개별 개체를 추가할 수는 <xref:System.Windows.Forms.ToolStripItemCollection.Add%2A> 메서드.  
  
 표시 및 선택 기능 이외에 <xref:System.Windows.Forms.ToolStripComboBox> 효율적으로 항목을 추가할 수 있도록 하는 기능도 제공는 <xref:System.Windows.Forms.ToolStripComboBox> 목록 항목 내에서 텍스트를 검색 하 합니다. <xref:System.Windows.Forms.ToolStripComboBox.BeginUpdate%2A> 및 <xref:System.Windows.Forms.ToolStripComboBox.EndUpdate%2A> 메서드를 사용 하면 많은 수의 항목을 추가 하는 <xref:System.Windows.Forms.ToolStripComboBox> 컨트롤 될 때마다 다시 표시 하지 않고 항목 목록에 추가 됩니다. <xref:System.Windows.Forms.ToolStripComboBox.FindString%2A> 및 <xref:System.Windows.Forms.ToolStripComboBox.FindStringExact%2A> 메서드를 사용 하는 특정 검색 문자열이 포함 된 목록에서 항목을 검색할 수 있습니다.  
  
 사용 하 여는 <xref:System.Windows.Forms.ToolStripComboBox.SelectedIndex%2A> 속성 가져오기 또는 드롭 다운 목록에서 현재 항목을 설정 및 사용 하는 <xref:System.Windows.Forms.ToolStripComboBox.SelectedItem%2A> 속성을 가져오거나 드롭 다운 목록에서 현재 항목에 대 한 참조를 설정 합니다.  
  
   
  
## Examples  
 다음 코드 예제는 <xref:System.Windows.Forms.ToolStripComboBox> 자동 완성을 비롯 한 다양 한 속성 설정을 사용 합니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStripComboBox.CommonProps#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripComboBox.CommonProps/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ToolStripComboBox.CommonProps#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripComboBox.CommonProps/VB/form1.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripComboBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripComboBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripComboBox (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripComboBox(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.Windows.Forms.ToolStripComboBox" />의 이름입니다.</param>
        <summary>지정된 이름을 사용하여 <see cref="T:System.Windows.Forms.ToolStripComboBox" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripComboBox (System.Windows.Forms.Control c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.#ctor(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (c As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripComboBox(System::Windows::Forms::Control ^ c);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="c" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="c">기본 컨트롤입니다.</param>
        <summary>기본 컨트롤에서 파생된 <see cref="T:System.Windows.Forms.ToolStripComboBox" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">작업이 지원되지 않습니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteCustomSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteStringCollection AutoCompleteCustomSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AutoCompleteStringCollection AutoCompleteCustomSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.AutoCompleteCustomSource" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteCustomSource As AutoCompleteStringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteStringCollection ^ AutoCompleteCustomSource { System::Windows::Forms::AutoCompleteStringCollection ^ get(); void set(System::Windows::Forms::AutoCompleteStringCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteStringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ToolStripComboBox.AutoCompleteSource" /> 속성이 <see cref="F:System.Windows.Forms.AutoCompleteSource.CustomSource" />로 설정된 경우 사용할 사용자 지정 문자열 컬렉션을 가져오거나 설정합니다.</summary>
        <value>문자열이 들어 있는 <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Windows.Forms.ToolStripComboBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.ToolStripComboBox.AutoCompleteMode%2A>, 및 <xref:System.Windows.Forms.ToolStripComboBox.AutoCompleteSource%2A> 을 만들기 위한 속성은 <xref:System.Windows.Forms.ToolStripComboBox> 자동으로 관리 되는 소스에서 모든 문자열의 접두사 위해 입력 되는 접두사를 비교 하 여 입력된 문자열 완료 합니다. 이 대 한 유용한 <xref:System.Windows.Forms.ToolStripComboBox> 컨트롤은 Url, 주소, 파일 이름 또는 명령을 자주 입력 됩니다.  
  
 사용은 <xref:System.Windows.Forms.ToolStripComboBox.AutoCompleteCustomSource%2A> 속성은 선택 사항 이지만 설정 해야 합니다는 <xref:System.Windows.Forms.ToolStripComboBox.AutoCompleteSource%2A> 속성을 <xref:System.Windows.Forms.AutoCompleteSource.CustomSource> 사용 하려면 <xref:System.Windows.Forms.ToolStripComboBox.AutoCompleteCustomSource%2A>합니다.  
  
 사용 해야 합니다는 <xref:System.Windows.Forms.ToolStripComboBox.AutoCompleteMode%2A> 및 <xref:System.Windows.Forms.ToolStripComboBox.AutoCompleteSource%2A> 속성을 함께 합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 다양 한 설정에 대 한 구문을 보여 주는 <xref:System.Windows.Forms.ToolStripComboBox> 속성을 포함 하는 <xref:System.Windows.Forms.ToolStripComboBox.AutoCompleteCustomSource%2A> 속성입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStripComboBox.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripComboBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripComboBox.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripComboBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolStripComboBox.AutoCompleteMode" />
        <altmember cref="P:System.Windows.Forms.ToolStripComboBox.AutoCompleteSource" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteMode AutoCompleteMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoCompleteMode AutoCompleteMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.AutoCompleteMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteMode As AutoCompleteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteMode AutoCompleteMode { System::Windows::Forms::AutoCompleteMode get(); void set(System::Windows::Forms::AutoCompleteMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" />의 텍스트 완성 동작을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Windows.Forms.AutoCompleteMode" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Forms.AutoCompleteMode.None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Windows.Forms.ToolStripComboBox.AutoCompleteMode%2A> 속성을 가져오거나 자동 완성 동작을 설정 합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 다양 한 설정에 대 한 구문을 보여 주는 <xref:System.Windows.Forms.ToolStripComboBox> 속성을 포함 하는 <xref:System.Windows.Forms.ToolStripComboBox.AutoCompleteMode%2A> 속성입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStripComboBox.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripComboBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripComboBox.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripComboBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolStripComboBox.AutoCompleteCustomSource" />
        <altmember cref="P:System.Windows.Forms.ToolStripComboBox.AutoCompleteSource" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteSource AutoCompleteSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoCompleteSource AutoCompleteSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.AutoCompleteSource" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteSource As AutoCompleteSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteSource AutoCompleteSource { System::Windows::Forms::AutoCompleteSource get(); void set(System::Windows::Forms::AutoCompleteSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>자동 완성에 사용되는 전체 문자열의 소스를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Windows.Forms.AutoCompleteSource" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Forms.AutoCompleteSource.None" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Windows.Forms.ToolStripComboBox.AutoCompleteSource%2A> 속성 가져오기 또는 자동 완성 문자열을 설정 합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 다양 한 설정에 대 한 구문을 보여 주는 <xref:System.Windows.Forms.ToolStripComboBox> 속성을 포함 하는 <xref:System.Windows.Forms.ToolStripComboBox.AutoCompleteSource%2A> 속성입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStripComboBox.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripComboBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripComboBox.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripComboBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolStripComboBox.AutoCompleteCustomSource" />
        <altmember cref="P:System.Windows.Forms.ToolStripComboBox.AutoCompleteMode" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 속성은 이 클래스와 관련이 없습니다.</summary>
        <value>컨트롤에 표시된 배경 이미지입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 이 클래스와 관련이 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 속성은 이 클래스와 관련이 없습니다.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ImageLayout" />의 다음 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 이 클래스와 관련이 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public void BeginUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.BeginUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginUpdate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>한 번에 하나씩 <see cref="T:System.Windows.Forms.ToolStripComboBox" />에 항목이 추가되어도 성능을 유지합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 때까지에서 컨트롤 않도록는 <xref:System.Windows.Forms.ToolStripComboBox.EndUpdate%2A> 메서드를 호출 합니다.  
  
 항목을 추가 하는 것이 좋습니다는 <xref:System.Windows.Forms.ToolStripComboBox> 사용 하는 것은 <xref:System.Windows.Forms.ToolStripItemCollection.AddRange%2A> 통해 메서드는 <xref:System.Windows.Forms.ToolStripComboBox.Items%2A> 속성의는 <xref:System.Windows.Forms.ToolStripComboBox>합니다. 이 항목의 배열 목록에 한 번에 추가할 수 있습니다. 그러나 추가 하려는 항목을 사용 하 여 한 번에 하나씩는 <xref:System.Windows.Forms.ToolStripItemCollection.Add%2A> 사용 수를 <xref:System.Windows.Forms.ToolStripComboBox.BeginUpdate%2A> 컨트롤 다시 표시 하지 않도록 하려면 메서드는 <xref:System.Windows.Forms.ToolStripComboBox> 항목이 목록에 추가 될 때마다 합니다. 목록에 항목을 추가 작업을 완료 했으면, 호출는 <xref:System.Windows.Forms.ToolStripComboBox.EndUpdate%2A> 메서드를 사용 하도록 설정 된 <xref:System.Windows.Forms.ToolStripComboBox> 다시 그려야 합니다. 이러한 방법으로 항목 추가 그리는 동안 깜빡임을 하지 못할 수 있습니다는 <xref:System.Windows.Forms.ToolStripComboBox> 많은 수의 항목은 목록에 추가 될 때입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComboBox">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ComboBox ComboBox { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ComboBox ComboBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.ComboBox" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ComboBox As ComboBox" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ComboBox ^ ComboBox { System::Windows::Forms::ComboBox ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ComboBox</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자가 항목을 선택할 수 있는 목록과 함께 텍스트를 입력할 수 있는 <see cref="T:System.Windows.Forms.ComboBox" />를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ComboBox" />에 대한 <see cref="T:System.Windows.Forms.ToolStrip" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Windows.Forms.ToolStripComboBox.ComboBox%2A> 가져올 속성 <xref:System.Windows.Forms.ComboBox> 속성, 메서드 및 이벤트로 래핑되지 않은 <xref:System.Windows.Forms.ToolStripComboBox>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMargin">
      <MemberSignature Language="C#" Value="protected internal override System.Windows.Forms.Padding DefaultMargin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.DefaultMargin" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property DefaultMargin As Padding" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Windows::Forms::Padding DefaultMargin { System::Windows::Forms::Padding get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" />와 인접 항목 간의 기본 간격(픽셀)을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Windows.Forms.Padding" /> 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 재정의 <xref:System.Windows.Forms.ToolStripComboBox.DefaultMargin%2A> 속성의 기본 크기를 구성 하 여 <xref:System.Windows.Forms.ToolStripComboBox>합니다. 이 생성자에서 크기를 설정 하는 보다 더 효율적입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" />의 기본 크기를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Drawing.Size" />의 기본 <see cref="T:System.Windows.Forms.ToolStripTextBox" />(픽셀)입니다. 기본값은 100x20픽셀입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  성능 향상을 유지 하기 위해 설정 하지 않아야는 <xref:System.Drawing.Size> 의 <xref:System.Windows.Forms.ToolStripComboBox> 생성자에서입니다. 재정의 하는 메서드가 좋습니다는 <xref:System.Windows.Forms.ToolStripComboBox.DefaultSize%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우는 <see cref="P:System.Windows.Forms.ToolStripComboBox.DefaultSize" /> 파생된 클래스에서 속성을 것이 좋습니다 반환 하는 <see cref="T:System.Drawing.Size" /> 전체 구현을 재정의 하는 대신 개체를 원하는 크기입니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripComboBox.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 이벤트는 이 클래스와 관련이 없습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 이벤트는 이 클래스와 관련이 없습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDown">
      <MemberSignature Language="C#" Value="public event EventHandler DropDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripComboBox.DropDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDown As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" />의 드롭다운 부분이 표시될 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트 처리기 대리자에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.ToolStripComboBox.DropDown> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.ToolStripComboBox> 라는 `ToolStripComboBox1`합니다. 그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.ToolStripComboBox.DropDown> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#578](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#578)]
 [!code-vb[System.Windows.Forms.EventExamples#578](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#578)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownClosed">
      <MemberSignature Language="C#" Value="public event EventHandler DropDownClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDownClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripComboBox.DropDownClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDownClosed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDownClosed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" />의 드롭다운 부분이 닫힐 때 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.ToolStripComboBox.DropDownClosed> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.ToolStripComboBox> 라는 `ToolStripComboBox1`합니다. 그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.ToolStripComboBox.DropDownClosed> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#579](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#579)]
 [!code-vb[System.Windows.Forms.EventExamples#579](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#579)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownHeight">
      <MemberSignature Language="C#" Value="public int DropDownHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DropDownHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.DropDownHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property DropDownHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DropDownHeight { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(106)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" />의 드롭다운 부분 상자 높이(픽셀)를 가져오거나 설정합니다.</summary>
        <value>드롭다운 상자의 높이(픽셀)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정의 <xref:System.Windows.Forms.ToolStripComboBox.DropDownHeight%2A> 속성 다시 설정 된 <xref:System.Windows.Forms.ToolStripComboBox.IntegralHeight%2A> 속성을 `false`합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 다양 한 설정에 대 한 구문을 보여 주는 <xref:System.Windows.Forms.ToolStripComboBox> 속성을 포함 하는 <xref:System.Windows.Forms.ToolStripComboBox.DropDownHeight%2A> 속성입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStripComboBox.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripComboBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripComboBox.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripComboBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ComboBoxStyle DropDownStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ComboBoxStyle DropDownStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.DropDownStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property DropDownStyle As ComboBoxStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ComboBoxStyle DropDownStyle { System::Windows::Forms::ComboBoxStyle get(); void set(System::Windows::Forms::ComboBoxStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ComboBoxStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" />의 스타일을 지정하는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ComboBoxStyle" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Windows.Forms.ComboBoxStyle.DropDown" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripComboBox.DropDownStyle%2A> 속성에는 사용자에 게 표시 되는 인터페이스를 제어 합니다. 텍스트 부분은 ed 기본 드롭 다운 목록 상자 또는 상자의 목록이 항상 표시, 텍스트 부분을 편집할 수 없는 드롭다운 목록 상자에서 및를 보려면 드롭 다운 화살표를 선택 해야만 간단한 드롭다운 목록에 대 한 허용 하는 값을 입력할 수 있습니다. itable와 사용자 목록을 보려면 화살표 키를 눌러야 합니다. 사용자가 편집할 수 없는 목록을 항상 표시 하려면 사용는 <xref:System.Windows.Forms.ListBox> 제어 합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 다양 한 설정에 대 한 구문을 보여 주는 <xref:System.Windows.Forms.ToolStripComboBox> 속성을 포함 하는 <xref:System.Windows.Forms.ToolStripComboBox.DropDownStyle%2A> 속성입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStripComboBox.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripComboBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripComboBox.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripComboBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DropDownStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDownStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripComboBox.DropDownStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDownStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDownStyleChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ToolStripComboBox.DropDownStyle" /> 속성이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.ToolStripComboBox.DropDownStyleChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.ToolStripComboBox> 라는 `ToolStripComboBox1`합니다. 그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.ToolStripComboBox.DropDownStyleChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#580](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#580)]
 [!code-vb[System.Windows.Forms.EventExamples#580](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#580)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownWidth">
      <MemberSignature Language="C#" Value="public int DropDownWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DropDownWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.DropDownWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property DropDownWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DropDownWidth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" />의 드롭다운 부분 너비(픽셀)를 가져오거나 설정합니다.</summary>
        <value>드롭다운 상자의 너비(픽셀)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Windows.Forms.ToolStripComboBox.DropDownWidth%2A> 속성을 가져오거나 설정의 드롭다운 부분 너비는 <xref:System.Windows.Forms.ToolStripComboBox>합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 다양 한 설정에 대 한 구문을 보여 주는 <xref:System.Windows.Forms.ToolStripComboBox> 속성을 포함 하는 <xref:System.Windows.Forms.ToolStripComboBox.DropDownWidth%2A> 속성입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStripComboBox.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripComboBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripComboBox.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripComboBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DroppedDown">
      <MemberSignature Language="C#" Value="public bool DroppedDown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DroppedDown" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.DroppedDown" />
      <MemberSignature Language="VB.NET" Value="Public Property DroppedDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DroppedDown { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 <see cref="T:System.Windows.Forms.ToolStripComboBox" />에 드롭다운 부분이 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          현재 <see cref="T:System.Windows.Forms.ToolStripComboBox" />에 드롭다운 부분이 표시되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public void EndUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.EndUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUpdate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" /> 메서드에 의해 그리기가 일시 중단된 후 <see cref="M:System.Windows.Forms.ToolStripComboBox.BeginUpdate" /> 컨트롤 그리기를 다시 시작합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 항목을 추가 하는 것이 좋습니다는 <xref:System.Windows.Forms.ToolStripComboBox> 사용 하는 것은 <xref:System.Windows.Forms.ToolStripItemCollection.AddRange%2A> 통해 메서드는 <xref:System.Windows.Forms.ToolStripComboBox.Items%2A> 속성의는 <xref:System.Windows.Forms.ToolStripComboBox>합니다. 이 항목의 배열 목록에 한 번에 추가할 수 있습니다. 그러나 추가 하려는 항목을 사용 하 여 한 번에 하나씩는 <xref:System.Windows.Forms.ToolStripItemCollection.Add%2A> 사용 수를 <xref:System.Windows.Forms.ToolStripComboBox.BeginUpdate%2A> 컨트롤 다시 표시 하지 않도록 하려면 메서드는 <xref:System.Windows.Forms.ToolStripComboBox> 항목이 목록에 추가 될 때마다 합니다. 목록에 항목을 추가 작업을 완료 했으면, 호출는 <xref:System.Windows.Forms.ToolStripComboBox.EndUpdate%2A> 메서드를 사용 하도록 설정 된 <xref:System.Windows.Forms.ToolStripComboBox> 다시 그려야 합니다. 이러한 방법으로 항목 추가 그리는 동안 깜빡임을 하지 못할 수 있습니다는 <xref:System.Windows.Forms.ToolStripComboBox> 많은 수의 항목은 목록에 추가 될 때입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindString">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 문자열로 시작되는 <see cref="T:System.Windows.Forms.ToolStripComboBox" />의 첫째 항목을 찾습니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindString">
      <MemberSignature Language="C#" Value="public int FindString (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindString(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.FindString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindString (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindString(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">검색할 <see cref="T:System.String" />입니다.</param>
        <summary>지정된 문자열로 시작되는 <see cref="T:System.Windows.Forms.ToolStripComboBox" />의 첫째 항목을 찾습니다.</summary>
        <returns>찾은 첫째 항목의 0부터 시작하는 인덱스입니다. 일치하는 항목이 없으면 -1을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드에 의해 수행 되는 검색 구분 하지 않습니다. `s` 매개 변수는 콤보 상자 목록에 해당 항목과 관련 된 텍스트와 비교할 부분 문자열입니다. 검색은 텍스트의 시작 부분에서 시작 하 고 지정된 된 부분 문자열 일치 하는 목록의 첫 번째 항목을 반환 합니다. 그러면 부분 일치를 수행 합니다. 그런 다음 검색 텍스트를 포함 하는 항목을 제거 하거나 해당 항목의 텍스트를 변경 하는 등의 작업을 수행할 수 있습니다. 에 있는 텍스트의 다른 인스턴스를 검색 하려는 경우 지정된 된 텍스트를 발견 하면는 <xref:System.Windows.Forms.ToolStripComboBox>를 사용 하 여 <xref:System.Windows.Forms.ToolStripComboBox.FindString%2A> 시작을 지정 하려면 메서드 내에서 인덱스는 <xref:System.Windows.Forms.ToolStripComboBox>합니다. 사용 하 여 부분적으로 일치 하는 대신 정확 하 게 일치 하는 값에 대 한 검색을 수행 하려는 경우는 <xref:System.Windows.Forms.ToolStripComboBox.FindStringExact%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindString">
      <MemberSignature Language="C#" Value="public int FindString (string s, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindString(string s, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.FindString(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindString (s As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindString(System::String ^ s, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">검색할 <see cref="T:System.String" />입니다.</param>
        <param name="startIndex">검색될 첫째 항목 앞에 나오는 항목의 0부터 시작하는 인덱스입니다. 컨트롤의 처음부터 검색하려면 -1로 설정합니다.</param>
        <summary>지정된 문자열로 시작하며 지정된 인덱스 다음에 나오는 첫째 항목을 찾습니다.</summary>
        <returns>찾은 첫째 항목의 0부터 시작하는 인덱스입니다. 일치하는 항목이 없으면 -1을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드에 의해 수행 되는 검색 구분 하지 않습니다. `s` 매개 변수는 콤보 상자 목록에 해당 항목과 관련 된 텍스트와 비교할 부분 문자열입니다. 검색 기능은 부분적으로 일치 지정 된 인덱스에 있는 텍스트의 시작 부분에서 시작 하 고 지정된 된 부분 문자열 일치 하는 목록에서 첫 번째 항목을 반환 합니다. 그런 다음 검색 텍스트를 포함 하는 항목을 제거 하거나 해당 항목의 텍스트를 변경 하는 등의 작업을 수행할 수 있습니다. 에 있는 텍스트의 다른 인스턴스를 검색 하려는 경우 지정된 된 텍스트를 발견 하면는 <xref:System.Windows.Forms.ToolStripComboBox>, 내의 시작 인덱스를 지정 하려면이 메서드를 사용 하 여는 <xref:System.Windows.Forms.ToolStripComboBox>합니다. 사용 하 여 부분적으로 일치 하는 대신 정확 하 게 일치 하는 값에 대 한 검색을 수행 하려는 경우는 <xref:System.Windows.Forms.ToolStripComboBox.FindStringExact%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindStringExact">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>지정된 문자열과 정확히 일치하는 항목을 찾습니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindStringExact">
      <MemberSignature Language="C#" Value="public int FindStringExact (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindStringExact(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.FindStringExact(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindStringExact (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindStringExact(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">검색할 <see cref="T:System.String" />입니다.</param>
        <summary>지정된 문자열과 정확히 일치하는 <see cref="T:System.Windows.Forms.ToolStripComboBox" />의 첫째 항목을 찾습니다.</summary>
        <returns>찾은 첫째 항목의 0부터 시작하는 인덱스입니다. 일치하는 항목이 없으면 -1입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드에 의해 수행 되는 검색 구분 하지 않습니다. `s` 매개 변수는 콤보 상자 목록에 해당 항목과 관련 된 텍스트와 비교할 부분 문자열입니다. 검색 기능은 부분적으로 일치 지정 된 인덱스에 있는 텍스트의 시작 부분에서 시작 하 고 지정된 된 부분 문자열 일치 하는 목록에서 첫 번째 항목을 반환 합니다. 그런 다음 검색 텍스트를 포함 하는 항목을 제거 하거나 해당 항목의 텍스트를 변경 하는 등의 작업을 수행할 수 있습니다. 에 있는 텍스트의 다른 인스턴스를 검색 하려는 경우 지정된 된 텍스트를 발견 하면는 <xref:System.Windows.Forms.ToolStripComboBox>를 사용 하 여 <xref:System.Windows.Forms.ToolStripComboBox.FindString%2A> 시작을 지정 하려면 메서드 내에서 인덱스는 <xref:System.Windows.Forms.ToolStripComboBox>합니다. 정확 하 게 하는 대신 부분 일치에 대 한 검색 하려는 경우 사용 하 여는 <xref:System.Windows.Forms.ToolStripComboBox.FindString%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindStringExact">
      <MemberSignature Language="C#" Value="public int FindStringExact (string s, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindStringExact(string s, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.FindStringExact(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindStringExact (s As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindStringExact(System::String ^ s, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">검색할 <see cref="T:System.String" />입니다.</param>
        <param name="startIndex">검색될 첫째 항목 앞에 나오는 항목의 0부터 시작하는 인덱스입니다. 컨트롤의 처음부터 검색하려면 -1로 설정합니다.</param>
        <summary>지정된 문자열과 정확히 일치하며 지정된 인덱스 다음에 나오는 첫째 항목을 찾습니다.</summary>
        <returns>찾은 첫째 항목의 0부터 시작하는 인덱스입니다. 일치하는 항목이 없으면 -1을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드에 의해 수행 되는 검색 구분 하지 않습니다. `s` 매개 변수는 콤보 상자 목록에 해당 항목과 관련 된 텍스트와 비교할 부분 문자열입니다. 검색 기능은 부분적으로 일치 지정 된 인덱스에 있는 텍스트의 시작 부분에서 시작 하 고 지정된 된 부분 문자열 일치 하는 목록에서 첫 번째 항목을 반환 합니다. 그런 다음 검색 텍스트를 포함 하는 항목을 제거 하거나 해당 항목의 텍스트를 변경 하는 등의 작업을 수행할 수 있습니다. 에 정확한 텍스트의 다른 인스턴스를 검색 하려는 경우 지정된 된 텍스트를 발견 하면는 <xref:System.Windows.Forms.ToolStripComboBox>, 내의 시작 인덱스를 지정 하려면이 메서드를 사용 하 여는 <xref:System.Windows.Forms.ToolStripComboBox>합니다. 정확 하 게 하는 대신 부분 일치에 대 한 검색 하려는 경우 사용 하 여는 <xref:System.Windows.Forms.ToolStripComboBox.FindString%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlatStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FlatStyle FlatStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FlatStyle FlatStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.FlatStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FlatStyle As FlatStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FlatStyle FlatStyle { System::Windows::Forms::FlatStyle get(); void set(System::Windows::Forms::FlatStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FlatStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" />의 모양을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Windows.Forms.FlatStyle" />의 다음 값 중 하나입니다. 가능한 옵션은 <see cref="F:System.Windows.Forms.FlatStyle.Flat" />, <see cref="F:System.Windows.Forms.FlatStyle.Popup" />, <see cref="F:System.Windows.Forms.FlatStyle.Standard" /> 및 <see cref="F:System.Windows.Forms.FlatStyle.System" />입니다. 기본값은 <see cref="F:System.Windows.Forms.FlatStyle.Popup" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Windows.Forms.ToolStripComboBox.FlatStyle%2A> 가져오거나의 표시 스타일을 설정 하는 속성은 <xref:System.Windows.Forms.ToolStripComboBox>합니다.  
  
 부터는.NET Framework 4.5.2는 <xref:System.Windows.Forms.ToolStripComboBox.FlatStyle%2A> 속성이 <xref:System.Windows.Forms.FlatStyle.Flat> 또는 <xref:System.Windows.Forms.FlatStyle.Popup>, 드롭 다운 화살표 크기를 조정할 수 있습니다. 크기 조정 app.config 파일에 다음 항목이 포함 되어 있으면 시스템 DPI 설정에 의해 결정 됩니다.  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
```  
  
   
  
## Examples  
 다음 코드 예제에는 다양 한 설정에 대 한 구문을 보여 주는 <xref:System.Windows.Forms.ToolStripComboBox> 속성을 포함 하는 <xref:System.Windows.Forms.ToolStripComboBox.FlatStyle%2A> 속성입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStripComboBox.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripComboBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripComboBox.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripComboBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemHeight">
      <MemberSignature Language="C#" Value="public int GetItemHeight (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetItemHeight(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.GetItemHeight(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemHeight (index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetItemHeight(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">높이를 반환할 항목의 인덱스입니다.</param>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" />에 있는 항목의 높이(픽셀)를 반환합니다.</summary>
        <returns>지정된 인덱스에 있는 항목의 높이(픽셀)입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size GetPreferredSize (System.Drawing.Size constrainingSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Size GetPreferredSize(valuetype System.Drawing.Size constrainingSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.GetPreferredSize(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreferredSize (constrainingSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Drawing::Size GetPreferredSize(System::Drawing::Size constrainingSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constrainingSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="constrainingSize">컨트롤의 사용자 지정 크기 영역입니다.</param>
        <summary>컨트롤이 들어갈 수 있는 사각형 영역의 크기를 검색합니다.</summary>
        <returns>사각형의 너비와 높이를 나타내는 <see cref="T:System.Drawing.Size" /> 형식의 정렬된 쌍입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntegralHeight">
      <MemberSignature Language="C#" Value="public bool IntegralHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IntegralHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.IntegralHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property IntegralHeight As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IntegralHeight { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>부분 항목을 표시하지 않도록 <see cref="T:System.Windows.Forms.ToolStripComboBox" />의 크기를 조정해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          목록 부분에 완전한 항목만 포함할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성이로 설정 된 경우 `true`, 컨트롤 크기가 자동으로 조정 항목 부분적으로 표시 되지 않습니다. 원래 크기를 유지 하려는 경우는 <xref:System.Windows.Forms.ToolStripComboBox> 폼의 공간 요구 사항에 따라,이 속성을 설정 `false`합니다. 경우는 <xref:System.Windows.Forms.ToolStripComboBox> 에 포함 된 항목이이 속성이 적용 되지 않습니다.  
  
 설정의 <xref:System.Windows.Forms.ToolStripComboBox.DropDownHeight%2A> 속성 다시 설정 된 <xref:System.Windows.Forms.ToolStripComboBox.IntegralHeight%2A> 속성을 `false`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ComboBox.ObjectCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ComboBox/ObjectCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ComboBox.ObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ComboBox::ObjectCollection ^ Items { System::Windows::Forms::ComboBox::ObjectCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ComboBox+ObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 <see cref="T:System.Windows.Forms.ToolStripComboBox" />에 들어 있는 항목의 컬렉션을 가져옵니다.</summary>
        <value>항목의 컬렉션입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDropDownItems">
      <MemberSignature Language="C#" Value="public int MaxDropDownItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDropDownItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.MaxDropDownItems" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDropDownItems As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDropDownItems { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" />의 드롭다운 부분에 표시되는 최대 항목 수를 가져오거나 설정합니다.</summary>
        <value>드롭다운 부분의 최대 항목 수입니다. 이 속성의 최소값은 1이고 최대값은 100입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Windows.Forms.ToolStripComboBox.MaxDropDownItems%2A> 속성을 가져오거나 설정의 드롭다운 부분에 표시할 항목의 최대 수는 <xref:System.Windows.Forms.ToolStripComboBox>합니다.  
  
   
  
## Examples  
 다음 코드 예제에는 다양 한 설정에 대 한 구문을 보여 주는 <xref:System.Windows.Forms.ToolStripComboBox> 속성을 포함 하는 <xref:System.Windows.Forms.ToolStripComboBox.MaxDropDownItems%2A> 속성입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStripComboBox.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripComboBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripComboBox.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripComboBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>콤보 상자의 편집 가능 부분에 허용되는 최대 문자 수를 가져오거나 설정합니다.</summary>
        <value>사용자가 입력할 수 있는 최대 문자 수입니다. 0보다 작은 값은 기본값인 0으로 다시 설정됩니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDropDown">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDown (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDown(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.OnDropDown(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDown (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDown(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Windows.Forms.ToolStripComboBox.DropDown" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripComboBox.OnDropDown%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.ToolStripComboBox.OnDropDown(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripComboBox.OnDropDown(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDropDownClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDownClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDownClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.OnDropDownClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDownClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDownClosed(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Windows.Forms.ToolStripComboBox.DropDownClosed" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripComboBox.OnDropDownClosed%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.ToolStripComboBox.OnDropDownClosed(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripComboBox.OnDropDownClosed(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDropDownStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDownStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDownStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.OnDropDownStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDownStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDownStyleChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Windows.Forms.ToolStripComboBox.DropDownStyleChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripComboBox.OnDropDownStyleChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.ToolStripComboBox.OnDropDownStyleChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripComboBox.OnDropDownStyleChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Windows.Forms.ToolStripComboBox.SelectedIndexChanged" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripComboBox.OnSelectedIndexChanged%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.ToolStripComboBox.OnSelectedIndexChanged(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripComboBox.OnSelectedIndexChanged(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChangeCommitted">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChangeCommitted (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChangeCommitted(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.OnSelectionChangeCommitted(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChangeCommitted (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChangeCommitted(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Windows.Forms.ComboBox.SelectionChangeCommitted" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ComboBox.SelectionChangeCommitted> 사용자가 콤보 상자 선택 내용을 변경 하는 경우에 발생 합니다. 사용 하지 마십시오 <xref:System.Windows.Forms.ToolStripComboBox.SelectedIndexChanged> 또는 <xref:System.Windows.Forms.ListControl.SelectedValueChanged> 발생 하므로 이러한 이벤트는 또한 선택 영역을 프로그래밍 방식으로 변경 될 때 사용자의 변경 내용을 캡처할 수 있습니다. 이 이벤트는 설정 하는 경우에 발생 <xref:System.Windows.Forms.ToolStripComboBox.SelectedIndex%2A>합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripComboBox.OnSelectionChangeCommitted%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>파생 클래스에서 <see cref="M:System.Windows.Forms.ToolStripComboBox.OnSelectionChangeCommitted(System.EventArgs)" />를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripComboBox.OnSelectionChangeCommitted(System.EventArgs)" /> 메서드를 호출해야 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSubscribeControlEvents">
      <MemberSignature Language="C#" Value="protected override void OnSubscribeControlEvents (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSubscribeControlEvents(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.OnSubscribeControlEvents(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSubscribeControlEvents(System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">이벤트를 등록할 컨트롤입니다.</param>
        <summary>지정된 컨트롤에서 이벤트를 등록합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 재정의 <xref:System.Windows.Forms.ToolStripComboBox.OnSubscribeControlEvents%2A> 메서드를 추가 하 여 컨트롤 이벤트의 동기화를 방지 합니다.  
  
 무시 하 고 여기에 이벤트를 후크를 언 후크 하를 사용 하 여는 <xref:System.Windows.Forms.ToolStripComboBox.OnUnsubscribeControlEvents%2A> 메서드.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripComboBox.OnSubscribeControlEvents%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.ToolStripComboBox.OnSubscribeControlEvents(System.Windows.Forms.Control)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripComboBox.OnSubscribeControlEvents(System.Windows.Forms.Control)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnTextUpdate">
      <MemberSignature Language="C#" Value="protected virtual void OnTextUpdate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextUpdate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.OnTextUpdate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextUpdate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextUpdate(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.EventArgs" />입니다.</param>
        <summary>
          <see cref="E:System.Windows.Forms.ToolStripComboBox.TextUpdate" /> 이벤트를 발생시킵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripComboBox.OnTextUpdate%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.ToolStripComboBox.OnTextUpdate(System.EventArgs)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripComboBox.OnTextUpdate(System.EventArgs)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUnsubscribeControlEvents">
      <MemberSignature Language="C#" Value="protected override void OnUnsubscribeControlEvents (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnUnsubscribeControlEvents(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnUnsubscribeControlEvents(System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">이벤트의 등록을 취소할 컨트롤입니다.</param>
        <summary>지정한 컨트롤에서 이벤트의 등록을 취소합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 재정의 <xref:System.Windows.Forms.ToolStripComboBox.OnSubscribeControlEvents%2A> 메서드 이벤트를 구독 취소를 구독 <xref:System.Windows.Forms.ToolStripComboBox.OnSubscribeControlEvents%2A>합니다.  
  
 이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다. 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
 또한 <xref:System.Windows.Forms.ToolStripComboBox.OnUnsubscribeControlEvents%2A> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다. 이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>재정의 하는 경우 <see cref="M:System.Windows.Forms.ToolStripComboBox.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" /> 파생된 클래스에서 호출 해야 기본 클래스의 <see cref="M:System.Windows.Forms.ToolStripComboBox.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" /> 메서드 등록 된 대리자가 이벤트를 받도록 합니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">텍스트 상자에서 현재 선택한 텍스트의 첫 번째 문자에 대한 위치입니다.</param>
        <param name="length">선택할 문자의 수입니다.</param>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" />의 편집 가능 부분에서 텍스트의 범위를 선택합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤의 텍스트에서 첫 번째 문자로 시작 위치를 설정 하려는 경우 설정의 `start` 0 매개 변수입니다. 이 메서드를 사용 하 여 예를 들어 텍스트의 부분 문자열을 선택 하는 컨트롤의 텍스트를 검색 하 고 정보를 바꾸는 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="start" />가 0보다 작은 경우  
  
 또는  
  
 <paramref name="start" />에서 <paramref name="length" />를 뺀 값이 0보다 작은 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" />의 편집 가능 부분에서 모든 텍스트를 선택합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectedIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>현재 선택되어 있는 항목을 지정하는 인덱스를 가져오거나 설정합니다.</summary>
        <value>현재 선택된 항목의 0부터 시작하는 인덱스입니다. 선택된 항목이 없으면 -1 값이 반환됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 콤보 상자 목록에서 현재 선택한 항목의 0부터 시작 인덱스를 나타냅니다. 새 인덱스를 발생 시키는 설정는 <xref:System.Windows.Forms.ToolStripComboBox.SelectedIndexChanged> 이벤트입니다.  
  
 **참고** 설정 현재 선택 된 항목을 선택 취소 하는 <xref:System.Windows.Forms.ToolStripComboBox.SelectedIndex%2A> 를-1입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripComboBox.SelectedIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedIndexChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.ToolStripComboBox.SelectedIndex" /> 속성 값이 변경되면 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.ToolStripComboBox.SelectedIndexChanged> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.ToolStripComboBox> 라는 `ToolStripComboBox1`합니다. 그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.ToolStripComboBox.SelectedIndexChanged> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#581](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#581)]
 [!code-vb[System.Windows.Forms.EventExamples#581](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#581)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public object SelectedItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedItem { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" />에서 현재 선택되어 있는 항목을 가져오거나 설정합니다.</summary>
        <value>현재 선택되어 있는 항목에 해당하는 개체이거나 현재 선택된 항목이 없는 경우 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정 하는 경우는 <xref:System.Windows.Forms.ToolStripComboBox.SelectedItem%2A> 속성을 개체로 <xref:System.Windows.Forms.ToolStripComboBox> 되도록 개체 목록에서 현재 선택 된 하나를 시도 합니다. 편집 부분에 표시 되는 개체 목록에 있으면는 <xref:System.Windows.Forms.ToolStripComboBox> 및 <xref:System.Windows.Forms.ToolStripComboBox.SelectedIndex%2A> 해당 인덱스에 속성이 설정 되어 있습니다. 개체 목록에 없는 경우는 <xref:System.Windows.Forms.ToolStripComboBox.SelectedIndex%2A> 속성의 현재 값에 그대로 유지 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" />의 편집 가능 부분에서 선택된 텍스트를 가져오거나 설정합니다.</summary>
        <value>콤보 상자에서 현재 선택되어 있는 텍스트를 나타내는 문자열입니다. <see cref="P:System.Windows.Forms.ToolStripComboBox.DropDownStyle" />을(를) <see langword="DropDownList" />(으)로 설정하면 빈 문자열("")이 반환됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 콤보 상자에서 현재 선택한 텍스트를 변경 하려면이 속성에 텍스트를 할당할 수 있습니다. 자원을 콤보 상자에서 현재 선택한 텍스트가 없는 경우이 속성에 길이가 0 인 문자열을 반환 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" />의 편집 가능 부분에서 선택된 문자의 수를 가져오거나 설정합니다.</summary>
        <value>선택한 문자 수는 <see cref="T:System.Windows.Forms.ToolStripComboBox" />합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 선택 여부를 확인할 모든 문자는 현재 콤보 상자 컨트롤에서 선택한 텍스트에 대 한 작업을 수행 하기 전에이 속성을 사용할 수 있습니다. 때의 값은 <xref:System.Windows.Forms.ToolStripComboBox.SelectionLength%2A> 속성의 값이 컨트롤의 텍스트 내에서 문자 수보다 큰 값으로 설정 되어는 <xref:System.Windows.Forms.ToolStripComboBox.SelectionLength%2A> 는 변수의값을뺀컨트롤내의텍스트의전체길이속성은<xref:System.Windows.Forms.ToolStripComboBox.SelectionStart%2A>속성 (모든 값을 지정 하는 경우는 <xref:System.Windows.Forms.ToolStripComboBox.SelectionStart%2A> 속성).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" />에 선택된 텍스트의 시작 인덱스를 가져오거나 설정합니다.</summary>
        <value>현재 선택된 텍스트 문자열에 있는 첫째 문자의 0부터 시작하는 인덱스입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 컨트롤에서 선택한 텍스트가 없는 경우이 속성에 새 텍스트 삽입 지점을 나타냅니다. 컨트롤에서 텍스트의 길이 초과 위치에이 속성을 설정 하는 경우 선택 시작 위치 마지막 문자 뒤에 배치 됩니다. 이 속성을 변경 값이 해제 수 텍스트가 텍스트 상자 컨트롤에서 선택 하는 경우는 <xref:System.Windows.Forms.ToolStripComboBox.SelectionLength%2A> 속성입니다. 컨트롤 위치 뒤에 나머지 텍스트를 가리키는 경우는 <xref:System.Windows.Forms.ToolStripComboBox.SelectionStart%2A> 속성의 값 보다 작으면는 <xref:System.Windows.Forms.ToolStripComboBox.SelectionLength%2A> 속성 값는 <xref:System.Windows.Forms.ToolStripComboBox.SelectionLength%2A> 속성은 자동으로 감소 합니다. 값은 <xref:System.Windows.Forms.ToolStripComboBox.SelectionStart%2A> 속성 증가 생성 하지 않습니다는 <xref:System.Windows.Forms.ToolStripComboBox.SelectionLength%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public bool Sorted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Sorted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripComboBox.Sorted" />
      <MemberSignature Language="VB.NET" Value="Public Property Sorted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Sorted { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" />의 항목이 정렬되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          콤보 상자가 정렬되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성은 지정 여부는 <xref:System.Windows.Forms.ToolStripComboBox> 기존 항목을 정렬 하 고 목록에서 적절 한 정렬된 위치에 새 항목을 추가 합니다. 이 속성을 사용 하 여 항목을 자동으로 정렬 한 <xref:System.Windows.Forms.ToolStripComboBox>합니다. 항목이 추가 되는 정렬 된에 <xref:System.Windows.Forms.ToolStripComboBox>, 항목이 정렬된 된 목록에서 적절 한 위치로 이동 됩니다. 속성을 설정 하면 `false`, 기존 목록 끝에 새 항목이 추가 됩니다. 정렬은 대/소문자 구분 및 알파벳 오름차순입니다.  
  
   
  
## Examples  
 다음 코드 예제에는 다양 한 설정에 대 한 구문을 보여 주는 <xref:System.Windows.Forms.ToolStripComboBox> 속성을 포함 하는 <xref:System.Windows.Forms.ToolStripComboBox.Sorted%2A> 속성입니다.  
  
 [!code-csharp[System.Windows.Forms.ToolStripComboBox.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripComboBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripComboBox.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripComboBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextUpdate">
      <MemberSignature Language="C#" Value="public event EventHandler TextUpdate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextUpdate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripComboBox.TextUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextUpdate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextUpdate;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" /> 텍스트가 변경된 경우에 발생합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다. 예제에서는 이벤트 처리기에서 보고 된 <xref:System.Windows.Forms.ToolStripComboBox.TextUpdate> 이벤트입니다. 이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다. 자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> 와 <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> 여러 줄에 메시지를 추가 하거나 <xref:System.Windows.Forms.TextBox>합니다.  
  
 예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <xref:System.Windows.Forms.ToolStripComboBox> 라는 `ToolStripComboBox1`합니다. 그런 다음 이벤트 처리기가 연결을 확인는 <xref:System.Windows.Forms.ToolStripComboBox.TextUpdate> 이벤트입니다.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#582](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#582)]
 [!code-vb[System.Windows.Forms.EventExamples#582](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#582)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripComboBox.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" />의 문자열 표현을 반환합니다.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ToolStripComboBox" />을 나타내는 문자열입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>