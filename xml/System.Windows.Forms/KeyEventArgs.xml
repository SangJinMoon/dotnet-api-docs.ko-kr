<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="KeyEventArgs.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f7677a8abed6de6921dd7137d79eb3ed66213093.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7677a8abed6de6921dd7137d79eb3ed66213093</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> 이벤트에 데이터를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph>, which specifies the key the user pressed and whether any modifier keys (CTRL, ALT, and SHIFT) were pressed at the same time, is passed with each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> event.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph>, 각 사용자 누른 임의의 한정자 키 (CTRL, ALT 및 SHIFT)는 동시에 눌렀는지 여부를 전달 되는 키를 지정 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event occurs when the user presses any key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> 이 이벤트는 사용자가 키를 누를 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> event occurs when the user releases the key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> 이벤트 사용자는 키를 놓을 때 발생 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>Duplicate <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> events occur each time the key repeats, if the key is held down, but only one <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> event is generated when the user releases the key.</source>
          <target state="translated">중복 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> 키를 누르고 하나만 있지만 경우 이벤트가 발생할 때마다 키를 반복할 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> 사용자 키를 놓을 때 이벤트가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event also occurs when a key is pressed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> 이 이벤트는 키를 누를 때에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs&gt;</ph> is passed with each <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event, and specifies the character that was composed as a result of each key press.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs&gt;</ph> 각 함께 전달 되 면 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> 이벤트 키를 누를 때마다 결과로 구성 된 문자를 지정 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>For information about the event model, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트 모델에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>The following code examples demonstrate how to detect the state of a key press.</source>
          <target state="translated">다음 코드 예제에서는 키 누름 상태를 감지 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source><bpt id="p1">**</bpt>Example 1<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>예 1<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event with the <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> class to display pop-up style Help to the user of the application.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> 인 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> 팝업 스타일 응용 프로그램의 사용자에 게 도움말을 표시 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</source>
          <target state="translated">이 예제에서는 사용은 <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph> 속성 한정자 키가 있는 F1 키를 누르면 모든 변형에 대해 필터링 할 이벤트 처리기 메서드에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>When the user presses any variation of F1 that includes any keyboard modifier, the <ph id="ph1">&lt;xref:System.Windows.Forms.Help&gt;</ph> class displays a pop-up window, similar to a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, near the control.</source>
          <target state="translated">다양 한 모든 키보드의 한정자를 포함 하는 F1 키를 누를 때는 <ph id="ph1">&lt;xref:System.Windows.Forms.Help&gt;</ph> 클래스는 비슷한 팝업 창이 표시는 <ph id="ph2">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, 컨트롤 근처 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</source>
          <target state="translated">사용자가 ALT + f 2를 누르면 다른 도움말 팝업 추가 정보와 함께 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source><bpt id="p1">**</bpt>Example 2<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>예제 2<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>, allows the user to edit that <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 사용자가 ALT + E, 누른 여부와 마우스 포인터가 경우 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>, 사용자를 편집할 수 있게 <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source><bpt id="p1">**</bpt>Example 3<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>예제 3<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.KeyEventArgs">
          <source>The following example determines whether the user pressed a non-numeric key, and if so, cancels the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event by using the <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제에서는 사용자 숫자가 아닌 키를 눌렀는지 여부를 확인 되 고이 경우 취소는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> 를 사용 하 여 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.KeyEventArgs.#ctor(System.Windows.Forms.Keys)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> representing the key that was pressed, combined with any modifier flags that indicate which CTRL, SHIFT, and ALT keys were pressed at the same time.</source>
          <target state="translated">누른 키와 동시에 누른 Ctrl, Shift 및 Alt 키를 나타내는 보조키 플래그의 조합을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.KeyEventArgs.#ctor(System.Windows.Forms.Keys)">
          <source>Possible values are obtained be applying the bitwise OR (|) operator to constants from the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> enumeration.</source>
          <target state="translated">가능한 값은 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 열거형의 상수에 비트 OR(|) 연산자를 적용하여 얻습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.KeyEventArgs.#ctor(System.Windows.Forms.Keys)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.KeyEventArgs" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.KeyEventArgs.Alt">
          <source>Gets a value indicating whether the ALT key was pressed.</source>
          <target state="translated">Alt 키를 눌렀는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Alt">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the ALT key was pressed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Alt 키를 눌렀으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 누르지 않았으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Alt">
          <source><bpt id="p1">**</bpt>Example 1<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>예 1<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Alt">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event with the <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> class to display pop-up style Help to the user of the application.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> 인 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> 팝업 스타일 응용 프로그램의 사용자에 게 도움말을 표시 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Alt">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</source>
          <target state="translated">이 예제에서는 사용은 <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph> 속성 한정자 키가 있는 F1 키를 누르면 모든 변형에 대해 필터링 할 이벤트 처리기 메서드에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Alt">
          <source>When the user presses any variation of F1 that includes any keyboard modifier, the <ph id="ph1">&lt;xref:System.Windows.Forms.Help&gt;</ph> class displays a pop-up window, similar to a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, near the control.</source>
          <target state="translated">다양 한 모든 키보드의 한정자를 포함 하는 F1 키를 누를 때는 <ph id="ph1">&lt;xref:System.Windows.Forms.Help&gt;</ph> 클래스는 비슷한 팝업 창이 표시는 <ph id="ph2">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, 컨트롤 근처 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Alt">
          <source>If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</source>
          <target state="translated">사용자가 ALT + f 2를 누르면 다른 도움말 팝업 추가 정보와 함께 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Alt">
          <source><bpt id="p1">**</bpt>Example 2<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>예제 2<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Alt">
          <source>The following example determines whether the user pressed ALT+E, and if the mouse pointer is over <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>, allows the user to edit that <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 사용자가 ALT + E, 누른 여부와 마우스 포인터가 경우 확인 <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>, 사용자를 편집할 수 있게 <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.KeyEventArgs.Control">
          <source>Gets a value indicating whether the CTRL key was pressed.</source>
          <target state="translated">Ctrl 키를 눌렀는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Control">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the CTRL key was pressed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Ctrl 키를 눌렀으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 누르지 않았으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Control">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event with the <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> class to display pop-up style Help to the user of the application.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> 인 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> 팝업 스타일 응용 프로그램의 사용자에 게 도움말을 표시 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Control">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</source>
          <target state="translated">이 예제에서는 사용은 <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph> 속성 한정자 키가 있는 F1 키를 누르면 모든 변형에 대해 필터링 할 이벤트 처리기 메서드에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Control">
          <source>When the user presses any variation of F1 that includes any keyboard modifier, the <ph id="ph1">&lt;xref:System.Windows.Forms.Help&gt;</ph> class displays a pop-up window, similar to a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, near the control.</source>
          <target state="translated">다양 한 모든 키보드의 한정자를 포함 하는 F1 키를 누를 때는 <ph id="ph1">&lt;xref:System.Windows.Forms.Help&gt;</ph> 클래스는 비슷한 팝업 창이 표시는 <ph id="ph2">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, 컨트롤 근처 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Control">
          <source>If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</source>
          <target state="translated">사용자가 ALT + f 2를 누르면 다른 도움말 팝업 추가 정보와 함께 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.KeyEventArgs.Handled">
          <source>Gets or sets a value indicating whether the event was handled.</source>
          <target state="translated">이벤트가 처리되었는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Handled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to bypass the control's default handling; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph> to also pass the event along to the default control handler.</source>
          <target state="translated">컨트롤의 기본 처리 작업을 건너뛰면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 이벤트를 기본 컨트롤 처리기에 전달하면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Handled">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph> is implemented differently by different controls within Windows Forms.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph> 이 Windows Forms 내의 다른 컨트롤에서 다르게 구현 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Handled">
          <source>For controls like <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> which subclass native Win32 controls, it is interpreted to mean that the key message should not be passed to the underlying native control.</source>
          <target state="translated">같은 컨트롤 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 하위 클래스는 네이티브 Win32 컨트롤, 키 메시지를 내부 네이티브 컨트롤에 전달 되지 않습니다 의미를 해석 됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Handled">
          <source>If you set <ph id="ph1">`Handled`</ph> to true on a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, that control will not pass the key press <ph id="ph3">`events`</ph> to the underlying Win32 text box control, but it will still display the characters that the user typed.</source>
          <target state="translated">설정한 경우 <ph id="ph1">`Handled`</ph> 에 true로는 <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, 제어 키 누름을 통과 하지 못하는 <ph id="ph3">`events`</ph> 있지만 기본 Win32 텍스트 상자 컨트롤은 여전히 표시 입력 한 문자입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Handled">
          <source>If you want to prevent the current control from receiving a key press, use the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A&gt;</ph> property.</source>
          <target state="translated">현재 컨트롤에서 키 누름을 사용 하 여 수신 되지 않도록 하려는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Handled">
          <source>The following example determines whether the user pressed a non-numeric key, and if so, cancels the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event by using the <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제에서는 사용자 숫자가 아닌 키를 눌렀는지 여부를 확인 되 고이 경우 취소는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> 를 사용 하 여 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source>Gets the keyboard code for a <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> 이벤트에 대한 키보드 코드를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> value that is the key code for the event.</source>
          <target state="translated">이벤트에 대한 키 코드에 해당하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source>The following code examples show how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A&gt;</ph> property to determine which key was pressed.</source>
          <target state="translated">다음 코드 예제는 사용 하는 방법을 보여는 <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A&gt;</ph> 눌러진 키를 확인 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source><bpt id="p1">**</bpt>Example 1<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>예 1<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event with the <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> class to display pop-up style Help to the user of the application.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> 인 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.Help&gt;</ph> 팝업 스타일 응용 프로그램의 사용자에 게 도움말을 표시 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</source>
          <target state="translated">이 예제에서는 사용은 <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs&gt;</ph> 속성 한정자 키가 있는 F1 키를 누르면 모든 변형에 대해 필터링 할 이벤트 처리기 메서드에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source>When the user presses any variation of F1 that includes any keyboard modifier, the <ph id="ph1">&lt;xref:System.Windows.Forms.Help&gt;</ph> class displays a pop-up window, similar to a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, near the control.</source>
          <target state="translated">다양 한 모든 키보드의 한정자를 포함 하는 F1 키를 누를 때는 <ph id="ph1">&lt;xref:System.Windows.Forms.Help&gt;</ph> 클래스는 비슷한 팝업 창이 표시는 <ph id="ph2">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, 컨트롤 근처 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source>If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</source>
          <target state="translated">사용자가 ALT + f 2를 누르면 다른 도움말 팝업 추가 정보와 함께 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source><bpt id="p1">**</bpt>Example 2<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>예제 2<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source>The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>, allows the user to edit that <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 사용자가 ALT + E, 누른 여부와 마우스 포인터가 경우 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>, 사용자를 편집할 수 있게 <ph id="ph2">&lt;xref:System.Windows.Forms.TreeNode&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source><bpt id="p1">**</bpt>Example 3<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>예제 3<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyCode">
          <source>The following example determines whether the user pressed a non-numeric key, and if so, cancels the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event by using the <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제에서는 사용자 숫자가 아닌 키를 눌렀는지 여부를 확인 되 고이 경우 취소는 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> 를 사용 하 여 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>Gets the key data for a <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> 이벤트에 대한 키 데이터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> representing the key code for the key that was pressed, combined with modifier flags that indicate which combination of CTRL, SHIFT, and ALT keys was pressed at the same time.</source>
          <target state="translated">누른 키에 대한 키 코드와 동시에 누른 Ctrl, Shift 및 Alt 키 조합을 나타내는 보조키 플래그의 조합을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>You can use constants from <ph id="ph1">&lt;xref:System.Windows.Forms.Keys&gt;</ph> to extract information from the <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.KeyData%2A&gt;</ph> property.</source>
          <target state="translated">상수를 사용할 수 <ph id="ph1">&lt;xref:System.Windows.Forms.Keys&gt;</ph> 에서 정보를 추출 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.KeyData%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>Use the bitwise AND operator to compare data returned by <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.KeyData%2A&gt;</ph> with constants in <ph id="ph2">&lt;xref:System.Windows.Forms.Keys&gt;</ph> to obtain information about which keys the user pressed.</source>
          <target state="translated">비트 AND 연산자를 사용 하 여에서 반환 된 데이터를 비교할 <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.KeyData%2A&gt;</ph> 의 상수와 <ph id="ph2">&lt;xref:System.Windows.Forms.Keys&gt;</ph> 사용자가 누른 키에 대 한 정보를 얻을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>To determine whether a specific modifier key was pressed, use the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.Control%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.Shift%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.KeyEventArgs.Alt%2A&gt;</ph> properties.</source>
          <target state="translated">특정 보조 키를 눌렀는지 여부를 확인 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.Control%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.Shift%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Windows.Forms.KeyEventArgs.Alt%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>와 같은 한 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyData">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">다음 인스턴스 이름을 <ph id="ph1">`Control1`</ph> 이벤트 처리기가 연결 확인 하 고는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.KeyEventArgs.KeyValue">
          <source>Gets the keyboard value for a <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> 이벤트에 대한 키보드 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyValue">
          <source>The integer representation of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" /&gt;</ph> 속성의 정수 표현입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyValue">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyValue">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyValue">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyValue">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">자주 발생 하는 이벤트 또는 여러 이벤트를 보고 하려면 바꾸는 것이 좋습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 여러 줄에 메시지를 추가 하거나 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyValue">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면에서 상속 되는 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>와 같은 한 <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.KeyValue">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">다음 인스턴스 이름을 <ph id="ph1">`Control1`</ph> 이벤트 처리기가 연결 확인 하 고는 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.KeyEventArgs.Modifiers">
          <source>Gets the modifier flags for a <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.KeyDown" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.KeyUp" /&gt;</ph> 이벤트에 대한 보조키 플래그를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.KeyEventArgs.Modifiers">
          <source>The flags indicate which combination of CTRL, SHIFT, and ALT keys was pressed.</source>
          <target state="translated">보조키 플래그는 누른 Ctrl, Shift 및 Alt 키의 조합을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Modifiers">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> value representing one or more modifier flags.</source>
          <target state="translated">하나 이상의 보조키 플래그를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Modifiers">
          <source>To determine whether a specific modifier key was pressed, use the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.Control%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.Shift%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.KeyEventArgs.Alt%2A&gt;</ph> properties.</source>
          <target state="translated">특정 보조 키를 눌렀는지 여부를 확인 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.Control%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.KeyEventArgs.Shift%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Windows.Forms.KeyEventArgs.Alt%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Modifiers">
          <source>Modifier flags can be combined with bitwise OR.</source>
          <target state="translated">보조키 플래그를 함께 사용할 비트 OR.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Modifiers">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A&gt;</ph> property to determine which modifier keys were pressed along with the primary key.</source>
          <target state="translated">다음 코드 예제를 사용 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A&gt;</ph> 속성을 기본 키와 보조 키를 눌렀는지를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.KeyEventArgs.Shift">
          <source>Gets a value indicating whether the SHIFT key was pressed.</source>
          <target state="translated">Shift 키를 눌렀는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Shift">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the SHIFT key was pressed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Shift 키를 눌렀으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 누르지 않았으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.Shift">
          <source>The following example determines whether the user pressed the Shift key with the F1 key, and if so, displays help.</source>
          <target state="translated">다음 예제에서는 사용자가 F1 키를 가진 Shift 키를 누른 여부와 도움말을 표시 하는 경우를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress">
          <source>Gets or sets a value indicating whether the key event should be passed on to the underlying control.</source>
          <target state="translated">키 이벤트를 내부 컨트롤에 전달할지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key event should not be sent to the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">키 이벤트를 컨트롤에 보내지 않으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress">
          <source>You can assign <ph id="ph1">`true`</ph> to this property in an event handler such as <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> in order to prevent user input.</source>
          <target state="translated">할당할 수 <ph id="ph1">`true`</ph> 와 같은 이벤트 처리기에서이 속성에 <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> 사용자 입력을 방지 하기 위해 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A&gt;</ph> to <ph id="ph2">`true`</ph> also sets <ph id="ph3">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph> to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A&gt;</ph> 를 <ph id="ph2">`true`</ph> 설정 <ph id="ph3">&lt;xref:System.Windows.Forms.KeyEventArgs.Handled%2A&gt;</ph> 를 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress">
          <source>The following code example prevents numeric keystrokes from reaching the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph>.</source>
          <target state="translated">다음 코드 예제에서는 숫자 키 입력을 도달 하지 못하도록 방지는 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 라는 컨트롤 <ph id="ph2">`textBox1`</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>