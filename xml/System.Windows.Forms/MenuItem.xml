<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MenuItem.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a045b9fca935bcd9374b2814300acbc021bce54b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a045b9fca935bcd9374b2814300acbc021bce54b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.MenuItem">
          <source>Represents an individual item that is displayed within a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph> 내에 표시되는 개별 항목을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.MenuItem">
          <source>Although <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ToolStripMenuItem" /&gt;</ph> replaces and adds functionality to the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> control of previous versions, <ph id="ph3">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> is retained for both backward compatibility and future use if you choose.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ToolStripMenuItem" /&gt;</ph>은 이전 버전의 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 컨트롤을 대체하고 확장한 컨트롤이지만 이전 버전과의 호환성 및 앞으로의 사용 가능성을 고려하여 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>를 유지하도록 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>In order for a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> to be displayed, you must add it to a <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>.</source>
          <target state="translated">에 대 한 순서 대로 한 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 를 표시 해야 할 추가 해야 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>To create submenus, you can add <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects to the <ph id="ph2">&lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt;</ph> property of the parent <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>.</source>
          <target state="translated">하위 메뉴를 만들려면 추가할 수 있습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt;</ph> 부모 <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> class provides properties that enable you to configure the appearance and functionality of a menu item.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 클래스 모양 및 메뉴 항목의 기능을 구성할 수 있는 속성을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>To display a check mark next to a menu item, use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph> property.</source>
          <target state="translated">메뉴 항목 옆에 있는 확인 표시를 표시 하려면 사용 된 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>You can use this feature to identify a menu item that is selected in a list of mutually exclusive menu items.</source>
          <target state="translated">상호 배타적인 메뉴 항목의 목록에서 선택 된 메뉴 항목을 식별 하려면이 기능을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>For example, if you have a set of menu items for setting the color of text in a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control, you can use the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph> property to identify which color is currently selected.</source>
          <target state="translated">예를 들어, 메뉴 항목의 텍스트 색을 설정 하기 위한 집합이 있는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 컨트롤, 있습니다 사용할 수 있습니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph> 현재 선택 된 색을 식별 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Shortcut%2A&gt;</ph> property can be used to define a keyboard combination that can be pressed to select the menu item.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Shortcut%2A&gt;</ph> 를 눌러 메뉴 항목을 선택할 수 있는 키보드 조합을 정의 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>For <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects displayed in a Multiple Document Interface (MDI) application, you can use the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph> method to merge the menus of an MDI parent for with that of its child forms to create a consolidated menu structure.</source>
          <target state="translated">에 대 한 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 사용할 수는 문서 MDI (다중 인터페이스) 응용 프로그램에 표시 되는 개체는 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph> 메서드를 MDI 메뉴 병합에 대 한 통합된 메뉴 구조를 만들려면 자식 폼의 부모입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>Because a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> cannot be reused in multiple locations at the same time, such as in a <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>, you can use the <ph id="ph4">&lt;xref:System.Windows.Forms.MenuItem.CloneMenu%2A&gt;</ph> method to create a copy of a <ph id="ph5">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> for use in another location.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 다시 사용할 수 없습니다 여러 위치에서 같은 시간에 같은는 <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>, 사용할 수 있습니다는 <ph id="ph4">&lt;xref:System.Windows.Forms.MenuItem.CloneMenu%2A&gt;</ph> 의 복사본을 만드는 메서드를 한 <ph id="ph5">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 다른 위치에서 사용 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph> event enables you to perform tasks before a menu is displayed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph> 이벤트를 사용 하면 메뉴가 표시 되기 전에 작업을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>For example, you can create an event handler for this event to display or hide menu items based on the state of your code.</source>
          <target state="translated">예를 들어이 이벤트를 표시 하거나 코드의 상태에 따라 메뉴 항목 숨기기에 대 한 이벤트 처리기를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> event enables you to perform tasks such as providing detailed help for your application's menu items when the user places the mouse pointer over a menu item.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> 이벤트를 사용 하면 사용자가 메뉴 항목 위로 마우스 포인터를 놓을 때 응용 프로그램의 메뉴 항목에 대 한 자세한 도움말을 제공 하는 등 작업을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>The following code example creates a menu structure for a form.</source>
          <target state="translated">다음 코드 예제에서는 폼의 메뉴 구조를 만듭니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>The example code adds a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> to represent the top-level menu item, adds a submenu item to it for selecting a font size, and then adds two submenu items to that menu item that represent large and small font choices in an application.</source>
          <target state="translated">예제 코드에서는 추가 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 최상위 메뉴 항목을 나타내는 글꼴 크기를 선택 하기 위한 것에 하위 메뉴 항목을 추가 하 고 다음 응용 프로그램에서 선택할 수 있는 크고 작은 글꼴을 나타내는 해당 메뉴 항목에 두 개의 하위 메뉴 항목을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.MenuItem">
          <source>The example requires that there is a <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> object named <ph id="ph2">`mainMenu1`</ph> and four <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects named <ph id="ph4">`menuItem1`</ph>, <ph id="ph5">`menuItem2`</ph>, <ph id="ph6">`menuItem3`</ph>, and <ph id="ph7">`menuItem4`</ph>.</source>
          <target state="translated">이 예제에서는 있는지는 <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 라는 개체 <ph id="ph2">`mainMenu1`</ph> 4 <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체의 명명 된 <ph id="ph4">`menuItem1`</ph>, <ph id="ph5">`menuItem2`</ph>, <ph id="ph6">`menuItem3`</ph>, 및 <ph id="ph7">`menuItem4`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.MenuItem">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor">
          <source>Initializes a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> with a blank caption.</source>
          <target state="translated">캡션이 비어 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>을 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor">
          <source>Once you have created a blank <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> using this constructor, you can use the properties and methods of the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> class to specify the appearance and behavior of your <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>.</source>
          <target state="translated">빈 값을 만든 후 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 이 생성자를 사용 하는 데의 메서드와 속성은 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 의 모양 및 동작을 지정 하는 클래스 사용자 <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> using this version of the constructor.</source>
          <target state="translated">다음 코드 예제에서는 한 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 생성자의이 버전을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String)">
          <source>The caption for the menu item.</source>
          <target state="translated">메뉴 항목의 캡션입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> class with a specified caption for the menu item.</source>
          <target state="translated">메뉴 항목의 지정된 캡션을 사용하여 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String)">
          <source>When you specify a caption for your menu item with the <ph id="ph1">`text`</ph> parameter, you can also specify an access key by placing an '&amp;' character before the character to be used as the access key.</source>
          <target state="translated">메뉴 항목에 대 한 캡션을 지정 하는 경우는 <ph id="ph1">`text`</ph> 매개 변수를 지정할 수도 있습니다 선택 키 선택 키로 사용할 문자의 앞에 '&amp;' 문자를 배치 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String)">
          <source>For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&amp;File".</source>
          <target state="translated">예를 들어 "File"의 "F"가 선택 키를 지정 하려면 사용자는으로 메뉴 항목에 대 한 캡션을 지정 "&amp; 파일"입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String)">
          <source>You can use this feature to provide keyboard navigation for your menus.</source>
          <target state="translated">메뉴에 대 한 키보드 탐색을 제공 하려면이 기능을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String)">
          <source>Setting the <ph id="ph1">`text`</ph> parameter to "<ph id="ph2">`-`</ph>" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</source>
          <target state="translated">설정의 <ph id="ph1">`text`</ph> 매개 변수를 "<ph id="ph2">`-`</ph>" 표준 메뉴 항목 대신 구분 기호 (가로 선)으로 표시 될 메뉴 항목을 발생 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> that specifies the caption of the menu item at the time it is constructed.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 만들어졌을 때 메뉴 항목의 캡션을 지정 하는 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>The caption for the menu item.</source>
          <target state="translated">메뉴 항목의 캡션입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> that handles the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph> event for this menu item.</source>
          <target state="translated">이 메뉴 항목의 <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> 이벤트를 처리하는 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>Initializes a new instance of the class with a specified caption and event handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph> event of the menu item.</source>
          <target state="translated">메뉴 항목의 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph> 이벤트에 대한 이벤트 처리기 및 지정된 캡션을 사용하여 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>When you specify a caption for your menu item with the <ph id="ph1">`text`</ph> parameter, you can also specify an access key by placing an '&amp;' before the character to be used as the access key.</source>
          <target state="translated">메뉴 항목에 대 한 캡션을 지정 하는 경우는 <ph id="ph1">`text`</ph> 매개 변수를 지정할 수도 있습니다 선택 키에 '&amp;' 선택 키로 사용할 문자의 앞에 배치 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&amp;File".</source>
          <target state="translated">예를 들어 "File"의 "F"가 선택 키를 지정 하려면 사용자는으로 메뉴 항목에 대 한 캡션을 지정 "&amp; 파일"입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>You can use this feature to provide keyboard navigation for your menus.</source>
          <target state="translated">메뉴에 대 한 키보드 탐색을 제공 하려면이 기능을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>Setting the <ph id="ph1">`text`</ph> parameter to "<ph id="ph2">`-`</ph>" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</source>
          <target state="translated">설정의 <ph id="ph1">`text`</ph> 매개 변수를 "<ph id="ph2">`-`</ph>" 표준 메뉴 항목 대신 구분 기호 (가로 선)으로 표시 될 메뉴 항목을 발생 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>In addition, you can use this constructor to specify a delegate that will handle the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event for the menu item being created.</source>
          <target state="translated">또한 처리 하는 대리자를 지정 하려면이 생성자를 사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> 만드는 메뉴 항목에 대 한 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> that you pass to this constructor must be configured to call an event handler that can handle the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> 이 생성자에 전달 하면 처리할 수 있는 이벤트 처리기를 호출 하도록 구성 되어야 합니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>For more information on handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">이벤트 처리에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> object with a specified caption and an <ph id="ph2">&lt;xref:System.EventHandler&gt;</ph> delegate connected to an event handler that will handle the <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event for the menu item.</source>
          <target state="translated">다음 코드 예제에서는 한 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 지정한 캡션 사용 하 여 개체 및 <ph id="ph2">&lt;xref:System.EventHandler&gt;</ph> 처리 하는 이벤트 처리기에 연결 된 대리자는 <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> 메뉴 항목에 대 한 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>The caption for the menu item.</source>
          <target state="translated">메뉴 항목의 캡션입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> objects that contains the submenu items for this menu item.</source>
          <target state="translated">이 메뉴 항목의 하위 메뉴 항목이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>Initializes a new instance of the class with a specified caption and an array of submenu items defined for the menu item.</source>
          <target state="translated">메뉴 항목의 정의된 캡션 및 하위 메뉴 항목의 배열을 사용하여 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>When you specify a caption for your menu item with the <ph id="ph1">`text`</ph> parameter, you can also specify an access key by placing an '&amp;' before the character to be used as the access key.</source>
          <target state="translated">메뉴 항목에 대 한 캡션을 지정 하는 경우는 <ph id="ph1">`text`</ph> 매개 변수를 지정할 수도 있습니다 선택 키에 '&amp;' 선택 키로 사용할 문자의 앞에 배치 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&amp;File".</source>
          <target state="translated">예를 들어 "File"의 "F"가 선택 키를 지정 하려면 사용자는으로 메뉴 항목에 대 한 캡션을 지정 "&amp; 파일"입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>You can use this feature to provide keyboard navigation for your menus.</source>
          <target state="translated">메뉴에 대 한 키보드 탐색을 제공 하려면이 기능을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>Setting the <ph id="ph1">`text`</ph> parameter to "<ph id="ph2">`-`</ph>" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</source>
          <target state="translated">설정의 <ph id="ph1">`text`</ph> 매개 변수를 "<ph id="ph2">`-`</ph>" 표준 메뉴 항목 대신 구분 기호 (가로 선)으로 표시 될 메뉴 항목을 발생 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>The <ph id="ph1">`items`</ph> parameter enables you to assign an array of menu items to define a submenu of this menu item.</source>
          <target state="translated"><ph id="ph1">`items`</ph> 매개 변수를 사용 하면이 메뉴 항목의 하위 메뉴를 정의 하는 메뉴 항목의 배열에 할당할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>Each item in the array can also have an array of menu items assigned to it.</source>
          <target state="translated">배열의 각 항목에 할당 된 메뉴 항목의 배열을 포함할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>This enables you to create complete menu structures and assign them to the constructor for the menu item.</source>
          <target state="translated">이 메뉴 항목에 대 한 생성자에 게 할당 하 고 전체 메뉴 구조를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>For more information on handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">이벤트 처리에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.Windows.Forms.MenuItem[])">
          <source>The following code example creates an object with a specified caption, an event handler connected to a method that will handle the event each menu item in an array of submenu items.</source>
          <target state="translated">다음 코드 예제에서는 개체를 만듭니다는 지정한 캡션, 이벤트를 처리 하는 메서드에 연결 된 이벤트 처리기 사용 하 여 각 메뉴 항목 하위 메뉴 항목의 배열에서.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>The caption for the menu item.</source>
          <target state="translated">메뉴 항목의 캡션입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> that handles the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph> event for this menu item.</source>
          <target state="translated">이 메뉴 항목의 <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> 이벤트를 처리하는 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Shortcut" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Shortcut" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>Initializes a new instance of the class with a specified caption, event handler, and associated shortcut key for the menu item.</source>
          <target state="translated">메뉴 항목의 지정된 캡션, 이벤트 처리기 및 관련된 바로 가기 키를 사용하여 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>When you specify a caption for your menu item with the <ph id="ph1">`text`</ph> parameter, you can also specify an access key by placing an '&amp;' before the character to be used as the access key.</source>
          <target state="translated">메뉴 항목에 대 한 캡션을 지정 하는 경우는 <ph id="ph1">`text`</ph> 매개 변수를 지정할 수도 있습니다 선택 키에 '&amp;' 선택 키로 사용할 문자의 앞에 배치 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&amp;File".</source>
          <target state="translated">예를 들어 "File"의 "F"가 선택 키를 지정 하려면 사용자는으로 메뉴 항목에 대 한 캡션을 지정 "&amp; 파일"입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>You can use this feature to provide keyboard navigation for your menus.</source>
          <target state="translated">메뉴에 대 한 키보드 탐색을 제공 하려면이 기능을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>This constructor also enables you to specify a shortcut key in addition to an access key to provide keyboard navigation.</source>
          <target state="translated">이 생성자를 사용 하면 키보드 탐색을 제공 하는 액세스 키 외에도 바로 가기 키를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>Shortcut keys allow you to specify a combination of keys that can be used to activate the menu item.</source>
          <target state="translated">바로 가기 키를 사용 하 여 메뉴 항목을 활성화 하는 데 사용할 수 있는 키의 조합을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>Setting the <ph id="ph1">`text`</ph> parameter to "<ph id="ph2">`-`</ph>" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</source>
          <target state="translated">설정의 <ph id="ph1">`text`</ph> 매개 변수를 "<ph id="ph2">`-`</ph>" 표준 메뉴 항목 대신 구분 기호 (가로 선)으로 표시 될 메뉴 항목을 발생 합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>In addition, you can use this constructor to specify a delegate that will handle the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event for the menu item being created.</source>
          <target state="translated">또한 처리 하는 대리자를 지정 하려면이 생성자를 사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> 만드는 메뉴 항목에 대 한 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>The <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> that you pass to this constructor must be configured to call an event handler that can handle the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> 이 생성자에 전달 하면 처리할 수 있는 이벤트 처리기를 호출 하도록 구성 되어야 합니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>For more information on handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">이벤트 처리에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.String,System.EventHandler,System.Windows.Forms.Shortcut)">
          <source>The following code example creates an object with a specified caption, shortcut key, and an event handler connected to a method that will handle the event for the menu item.</source>
          <target state="translated">다음 코드 예제에서는 메뉴 항목에 대 한 이벤트를 처리 하는 메서드에 연결 된 이벤트 처리기, 지정한 캡션 및 바로 가기 키와 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuMerge" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuMerge" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The relative position that this menu item will take in a merged menu.</source>
          <target state="translated">병합된 메뉴에서 이 메뉴 항목이 놓여질 상대적 위치입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Shortcut" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Shortcut" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The caption for the menu item.</source>
          <target state="translated">메뉴 항목의 캡션입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> that handles the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph> event for this menu item.</source>
          <target state="translated">이 메뉴 항목의 <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> 이벤트를 처리하는 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> that handles the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Popup" /&gt;</ph> event for this menu item.</source>
          <target state="translated">이 메뉴 항목의 <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> 이벤트를 처리하는 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Popup" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> that handles the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Select" /&gt;</ph> event for this menu item.</source>
          <target state="translated">이 메뉴 항목의 <ph id="ph1">&lt;see cref="T:System.EventHandler" /&gt;</ph> 이벤트를 처리하는 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Select" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> objects that contains the submenu items for this menu item.</source>
          <target state="translated">이 메뉴 항목의 하위 메뉴 항목이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> class with a specified caption; defined event-handlers for the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph>, <ph id="ph3">&lt;see cref="E:System.Windows.Forms.MenuItem.Select" /&gt;</ph> and <ph id="ph4">&lt;see cref="E:System.Windows.Forms.MenuItem.Popup" /&gt;</ph> events; a shortcut key; a merge type; and order specified for the menu item.</source>
          <target state="translated">메뉴 항목의 지정된 캡션, <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>, <ph id="ph2">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="E:System.Windows.Forms.MenuItem.Select" /&gt;</ph> 이벤트에 대해 지정된 이벤트 처리기, 바로 가기 키, 병합 유형 및 지정된 순서를 사용하여 <ph id="ph4">&lt;see cref="E:System.Windows.Forms.MenuItem.Popup" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>When you specify a caption for your menu item with the <ph id="ph1">`text`</ph> parameter, you can also specify an access key by placing an '&amp;' before the character to be used as the access key.</source>
          <target state="translated">메뉴 항목에 대 한 캡션을 지정 하는 경우는 <ph id="ph1">`text`</ph> 매개 변수를 지정할 수도 있습니다 선택 키에 '&amp;' 선택 키로 사용할 문자의 앞에 배치 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&amp;File".</source>
          <target state="translated">예를 들어 "File"의 "F"가 선택 키를 지정 하려면 사용자는으로 메뉴 항목에 대 한 캡션을 지정 "&amp; 파일"입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>You can use this feature to provide keyboard navigation for your menus.</source>
          <target state="translated">메뉴에 대 한 키보드 탐색을 제공 하려면이 기능을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>Setting the <ph id="ph1">`text`</ph> parameter to "<ph id="ph2">`-`</ph>" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</source>
          <target state="translated">설정의 <ph id="ph1">`text`</ph> 매개 변수를 "<ph id="ph2">`-`</ph>" 표준 메뉴 항목 대신 구분 기호 (가로 선)으로 표시 될 메뉴 항목을 발생 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The <ph id="ph1">`items`</ph> parameter enables you to assign an array of menu items to define a submenu of this menu item.</source>
          <target state="translated"><ph id="ph1">`items`</ph> 매개 변수를 사용 하면이 메뉴 항목의 하위 메뉴를 정의 하는 메뉴 항목의 배열에 할당할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>Each item in the array can also have an array of menu items assigned to it.</source>
          <target state="translated">배열의 각 항목에 할당 된 메뉴 항목의 배열을 포함할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>This enables you to create complete menu structures and assign them to the constructor for the menu item.</source>
          <target state="translated">이 메뉴 항목에 대 한 생성자에 게 할당 하 고 전체 메뉴 구조를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The <ph id="ph1">`mergeType`</ph> and <ph id="ph2">`mergeOrder`</ph> parameters allow you to determine how this menu item will behave when the menu item is merged with another menu.</source>
          <target state="translated"><ph id="ph1">`mergeType`</ph> 및 <ph id="ph2">`mergeOrder`</ph> 매개 변수를 사용 하는 메뉴 항목은 다른 메뉴와 병합 될 때이 메뉴 항목이 동작 하는 방법을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>Depending on the value you specify for the <ph id="ph1">`mergeType`</ph> parameter, you can either add, remove, replace, or merge the menu item and its submenu items with the menu that it is merging with.</source>
          <target state="translated">에 대해 지정 하는 값에 따라는 <ph id="ph1">`mergeType`</ph> 매개 변수를 추가, 제거을 대체 하거나 메뉴 항목 및 해당 하위 메뉴 항목와 병합할 메뉴와 병합 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The <ph id="ph1">`mergeOrder`</ph> parameter determines where the menu item being created will be positioned when the menu is merged.</source>
          <target state="translated"><ph id="ph1">`mergeOrder`</ph> 매개 변수는 메뉴 병합 될 때 만드는 메뉴 항목 배치 될 위치를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>In addition, you can use this constructor to create a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> and have it connected to an event handler in your code that will process the click of the menu item.</source>
          <target state="translated">만드는 데이 생성자를 사용할 수는 또한는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 메뉴 항목의 클릭에서 처리 하는 코드에서 이벤트 처리기에 연결 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The <ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> that you pass into this constructor should be configured to call an event handler that can handle the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EventHandler&gt;</ph> 이 생성자에 전달 하면 처리할 수 있는 이벤트 처리기를 호출 하도록 구성 해야는 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>By using this constructor version, you can also connect the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> events to determine when this menu item is selected.</source>
          <target state="translated">이 생성자 버전을 사용 하 여 연결할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> 이 메뉴 항목을 선택 하는 시기를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>You can use these events for tasks such as determining whether or not to display a check mark next to submenu items or to enable or disable menu items based on the state of the application.</source>
          <target state="translated">하위 메뉴 항목 옆에 있는 확인 표시를 사용 하도록 설정 또는 응용 프로그램의 상태에 따라 메뉴 항목을 사용 하지 않도록 설정 하려면 여부를 결정 하는 등 작업에 대 한 이러한 이벤트를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> events are raised only for <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that are not parent menu items.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> 에 대해서만 발생 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 부모 메뉴 항목이 아닌 개체입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>For more information on handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">이벤트 처리에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The following code example creates a menu item that has a caption and shortcut key.</source>
          <target state="translated">다음 코드 예제에서는 캡션 및 바로 가기 키가 있는 메뉴 항목을 만듭니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>The menu item also has event handlers defined for the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> events.</source>
          <target state="translated">메뉴 항목에 대해 정의 된 이벤트 처리기에는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.#ctor(System.Windows.Forms.MenuMerge,System.Int32,System.Windows.Forms.Shortcut,System.String,System.EventHandler,System.EventHandler,System.EventHandler,System.Windows.Forms.MenuItem[])">
          <source>If this menu item is merged, it will add the menu item to the menu with the merge order of zero.</source>
          <target state="translated">이 메뉴 항목 병합 되며 병합 하는 경우 0의 병합 순서를 사용 하 여 메뉴에 메뉴 항목에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.BarBreak">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> is placed on a new line (for a menu item added to a <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> object) or in a new column (for a submenu item or menu item displayed in a <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>이 새 줄(<ph id="ph2">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> 개체에 추가된 메뉴 항목의 경우)이나 새 열(<ph id="ph3">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph>에 표시된 하위 메뉴 항목 또는 메뉴 항목의 경우)에 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.BarBreak">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the menu item is placed on a new line or in a new column; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the menu item is left in its default placement.</source>
          <target state="translated">새 줄 또는 새 열에 메뉴 항목이 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 메뉴 항목이 기본 위치에 그대로 있으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.BarBreak">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.BarBreak">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.BarBreak%2A&gt;</ph> property to create a menu where each menu item is placed next to each other horizontally instead of in a vertical list.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.BarBreak%2A&gt;</ph> 속성을 각 메뉴 항목 위치 가로로 대신 서로 옆에 있는 세로 목록에 메뉴를 만듭니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.BarBreak">
          <source>You can also use this property to create a menu bar that contains multiple rows of top-level menu items.</source>
          <target state="translated">또한 최상위 메뉴 항목의 여러 행을 포함 하는 메뉴 모음을 만들려면이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.BarBreak">
          <source>This property differs from the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Break%2A&gt;</ph> property in that a bar is displayed on the left edge of each menu item that has the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Break%2A&gt;</ph> property set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">이 속성에서 다른는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Break%2A&gt;</ph> 막대 각 메뉴 항목의 왼쪽된 가장자리에 표시 되는 속성이 고 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Break%2A&gt;</ph> 속성이로 설정 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.BarBreak">
          <source>The bar is only displayed when the menu item is not a top-level menu item.</source>
          <target state="translated">막대는 메뉴 항목은 최상위 메뉴 항목을 하는 경우에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.BarBreak">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> with two submenu items.</source>
          <target state="translated">다음 코드 예제에서는 한 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 두 개의 하위 메뉴 항목입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.BarBreak">
          <source>The two submenu items are displayed horizontally instead of vertically using the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.BarBreak%2A&gt;</ph> property.</source>
          <target state="translated">세로 방향으로 사용 하는 대신 두 개의 하위 메뉴 항목 가로로 표시 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.BarBreak%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Break">
          <source>Gets or sets a value indicating whether the item is placed on a new line (for a menu item added to a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> object) or in a new column (for a menu item or submenu item displayed in a <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph>).</source>
          <target state="translated">항목이 새 줄(<ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> 개체에 추가한 메뉴 항목의 경우)이나 새 열(<ph id="ph2">&lt;see cref="T:System.Windows.Forms.ContextMenu" /&gt;</ph>에 표시된 메뉴 항목 또는 하위 메뉴 항목의 경우)에 표시되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Break">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the menu item is placed on a new line or in a new column; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the menu item is left in its default placement.</source>
          <target state="translated">새 줄 또는 새 열에 메뉴 항목이 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 메뉴 항목이 기본 위치에 그대로 있으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Break">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Break">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Break%2A&gt;</ph> property to create a menu where each menu is placed next to each other horizontally instead of in a vertical list.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Break%2A&gt;</ph> 속성을 각 메뉴 위치 가로로 대신 서로 옆에 있는 세로 목록에 메뉴를 만듭니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Break">
          <source>You can also use this property to create a menu bar that contains multiple rows of top-level menu items.</source>
          <target state="translated">또한 최상위 메뉴 항목의 여러 행을 포함 하는 메뉴 모음을 만들려면이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Break">
          <source>The following code example creates a menu with two top-level menu items on the top row and one menu item on the bottom row.</source>
          <target state="translated">다음 코드 예제에서는 두 개의 최상위 메뉴 항목 맨 아래 행에서 하나의 메뉴 항목의 맨 위 행에 있는 메뉴를 만듭니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>Gets or sets a value indicating whether a check mark appears next to the text of the menu item.</source>
          <target state="translated">메뉴 항목의 텍스트 옆에 확인 표시가 나타나는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there is a check mark next to the menu item; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">메뉴 항목 옆에 확인 표시가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph> property in combination with other menu items in a menu to provide state for an application.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph> 조합 하 여 응용 프로그램에 대 한 상태를 제공 하려면 메뉴에서 다른 메뉴 항목과 함께 속성입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>For example, you can place a check mark on a menu item in a group of items to identify the size of the font to be displayed for the text in an application.</source>
          <target state="translated">예를 들어 응용 프로그램에서 텍스트에 대해 표시 되는 글꼴 크기를 식별 하는 항목의 그룹에 있는 메뉴 항목에 확인 표시를 배치할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph> property to identify the selected menu item in a group of mutually exclusive menu items.</source>
          <target state="translated">사용할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph> 속성을 함께 사용할 수 없는 메뉴 항목 그룹에 선택한 메뉴 항목을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>This property cannot be set to <ph id="ph1">`true`</ph> for top-level menu items.</source>
          <target state="translated">이 속성 설정할 수 없습니다 <ph id="ph1">`true`</ph> 최상위 메뉴 항목에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph> property to provide the state in an application.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph> 속성을 응용 프로그램의 상태를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>In this example, a group of menu items are used to specify the color for the text in a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">이 예제에서는 메뉴 항목의 그룹은 텍스트에 대 한 색을 지정 하려면 사용 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>The event handler provided is used by the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event of three menu items.</source>
          <target state="translated">제공 된 이벤트 처리기에서 사용 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> 세 메뉴 항목의 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>Each menu item specifies a text color, <ph id="ph1">`menuItemRed`</ph> (Red), <ph id="ph2">`menuItemGreen`</ph> (Green), or <ph id="ph3">`menuItemBlue`</ph> (Blue).</source>
          <target state="translated">각 메뉴 항목 텍스트 색을 지정 <ph id="ph1">`menuItemRed`</ph> (빨간색)으로 <ph id="ph2">`menuItemGreen`</ph> (녹색) 또는 <ph id="ph3">`menuItemBlue`</ph> (파란색).</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>The event handler determines which menu item was clicked, places a checkmark to the selected menu item, and changes the text color of the form's <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">이벤트 처리기는 메뉴 항목을 클릭 한를 확인, 선택한 메뉴 항목에 확인 표시 및 폼의 텍스트 색을 변경 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>The example requires that the <ph id="ph1">&lt;xref:System.Drawing&gt;</ph> namespace has been added to the form that this code is placed in.</source>
          <target state="translated">예제를 실행 하려면는 <ph id="ph1">&lt;xref:System.Drawing&gt;</ph> 네임 스페이스가이 코드에 배치 된 폼에 추가 되었습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>The example also requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> has been added to the form that this example code is located in that is named <ph id="ph2">`textBox1`</ph>.</source>
          <target state="translated">이 예제에서는 필요는 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 라는이 예제 코드에 있는 폼에 추가 된 <ph id="ph2">`textBox1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Checked">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> is a top-level menu or has children.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>이 최상위 메뉴이거나 자식을 갖는 경우</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>Occurs when the menu item is clicked or selected using a shortcut key or access key defined for the menu item.</source>
          <target state="translated">메뉴 항목에 대해 정의된 바로 가기 키 또는 선택키를 사용하여 메뉴 항목을 클릭하거나 선택할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event occurs when this <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> is clicked by the user.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> 이벤트가 발생할 때이 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 사용자가 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>This event also occurs if the user selects the menu item using the keyboard and presses the Enter key.</source>
          <target state="translated">이 이벤트는 또한 사용자가 키보드를 사용 하 여 메뉴 항목을 선택 하는 경우에 발생 하 고 Enter 키를 누르거나 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>It can also occur if an access key or shortcut key is pressed that is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>.</source>
          <target state="translated">발생할 수도 있습니다는 액세스 키 또는 바로 가기 키를 누르면과 연관 된 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt;</ph> property for the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> contains any items, this event is not raised.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt;</ph> 속성에 대 한는 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 모든 항목이 포함 된이 이벤트가 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>This event is not raised for parent menu items.</source>
          <target state="translated">부모 메뉴 항목에 대해서는이 이벤트가 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event to perform tasks when a <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> is clicked.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> 경우 수행 하는 이벤트 작업는 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 를 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> called <ph id="ph2">`mainMenu1`</ph> and adds two <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects, <ph id="ph4">`topMenuItem`</ph> (<ph id="ph5">`File`</ph>) and <ph id="ph6">`menuItem1`</ph> (<ph id="ph7">`Open`</ph>).</source>
          <target state="translated">이 예에서는 만듭니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 호출 <ph id="ph2">`mainMenu1`</ph> 두 개 추가 <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체 <ph id="ph4">`topMenuItem`</ph> (<ph id="ph5">`File`</ph>) 및 <ph id="ph6">`menuItem1`</ph> (<ph id="ph7">`Open`</ph>).</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>It then connects the <ph id="ph1">`Click`</ph> event to the <ph id="ph2">`menuItem1_Click`</ph> event handler.</source>
          <target state="translated">다음 연결 된 <ph id="ph1">`Click`</ph> 이벤트를는 <ph id="ph2">`menuItem1_Click`</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>When the user clicks the <ph id="ph1">`Open`</ph> menu item, an <ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> is initialized and displayed.</source>
          <target state="translated">사용자가 클릭할 때는 <ph id="ph1">`Open`</ph> 메뉴 항목을 한 <ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> 초기화 되 고 표시 합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Click">
          <source>The example requires that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">이 예제에서는 만든는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.MenuItem">
          <source>Creates a copy of a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>의 복사본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.CloneMenu">
          <source>Creates a copy of the current <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>의 복사본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.CloneMenu">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> that represents the duplicated menu item.</source>
          <target state="translated">복제된 메뉴 항목을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects cannot be used in more than one place unless you obtain a copy of the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체의 복사본을 가져올 하지 않는 한 여러 위치에서 사용할 수 없습니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu">
          <source>You can call this method to create a copy of this menu item for use in a <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>, or other <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> within your application.</source>
          <target state="translated">사용 하기 위해이 메뉴 항목의 복사본을 만들려면이 메서드를 호출할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>, 또는 기타 <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 응용 프로그램 내에서.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu">
          <source>When a menu item is cloned, any event handlers specified in the original menu item will continue to function in the cloned version of the menu item.</source>
          <target state="translated">메뉴 항목이 복제 되는 경우 원래 메뉴 항목에 지정 된 모든 이벤트 처리기는 메뉴 항목의 복제 버전에서 작동 하는 데 계속 됩니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu">
          <source>For example, if you created a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> and connected its <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event to an event handler.</source>
          <target state="translated">예를 들어 만든는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 및 연결 된 해당 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> 이벤트를 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu">
          <source>When the menu item is cloned, the cloned menu item will call the same event handler.</source>
          <target state="translated">메뉴 항목이 복제 되는 경우 복제 된 메뉴 항목에서는 동일한 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu">
          <source>The following code example clones a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> and displays it in a <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 복제본을 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 에 표시 된 <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu">
          <source>The example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> exists in a <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> on a form with the name of <ph id="ph3">`menuItem1`</ph> and that a <ph id="ph4">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> object named <ph id="ph5">`contextMenu1`</ph> also exists on the form.</source>
          <target state="translated">예제를 실행 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 에 존재 한 <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 의 이름으로 폼에 <ph id="ph3">`menuItem1`</ph> 하 고는 <ph id="ph4">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 라는 개체 <ph id="ph5">`contextMenu1`</ph> 폼에도 있는 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> that represents the menu item to copy.</source>
          <target state="translated">복사할 메뉴 항목을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>Creates a copy of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>의 복사본을 만듭니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>Call this method to create copies of menu items that you have already created for use in a shortcut menu or another menu structure within your application.</source>
          <target state="translated">이미 만든 바로 가기 메뉴 또는 다른 메뉴 구조에서 사용 하기 위해 응용 프로그램 내에서 메뉴 항목의 복사본을 만들고이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>This version of <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.CloneMenu%2A&gt;</ph> allows you to specify a specific <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> to copy instead of the menu item that is calling the method.</source>
          <target state="translated">이 버전의 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.CloneMenu%2A&gt;</ph> 특정을 지정할 수 있습니다 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 메서드를 호출 하는 메뉴 항목 대신 복사 합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>You can use this method to initialize a new <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> object with a copy of another <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>.</source>
          <target state="translated">이 메서드를 사용 하 여 새 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체의 다른 복사본으로 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>When a menu item is cloned, any event handlers specified in the original menu item will continue to function in the cloned version of the menu item.</source>
          <target state="translated">메뉴 항목이 복제 되는 경우 원래 메뉴 항목에 지정 된 모든 이벤트 처리기는 메뉴 항목의 복제 버전에서 작동 하는 데 계속 됩니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>For example, if you created a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> and connected its <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event to an event handler.</source>
          <target state="translated">예를 들어 만든는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 및 연결 된 해당 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> 이벤트를 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>When the menu item is cloned, the cloned menu item will call the same event handler.</source>
          <target state="translated">메뉴 항목이 복제 되는 경우 복제 된 메뉴 항목에서는 동일한 이벤트 처리기를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>The following code example initializes a new <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> with a copy of an existing <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> that is used in a <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> on a form.</source>
          <target state="translated">다음 코드 예제에서는 새 초기화 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 기존의 복사본으로 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 에 사용 되는 한 <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 폼에 합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>The code then adds the cloned <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> to a <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> on the form.</source>
          <target state="translated">코드는 다음 복제 된 추가 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 폼에 있습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.CloneMenu(System.Windows.Forms.MenuItem)">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> is already created and named <ph id="ph2">`menuItem1`</ph> and that a <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> control has been created and named <ph id="ph4">`contextMenu1`</ph>.</source>
          <target state="translated">이 예제에서는 한 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 을 이미 만들고 <ph id="ph2">`menuItem1`</ph> 하 고는 <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 제어를 만들고 명명 된 <ph id="ph4">`contextMenu1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.DefaultItem">
          <source>Gets or sets a value indicating whether the menu item is the default menu item.</source>
          <target state="translated">메뉴 항목이 기본 메뉴 항목인지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.DefaultItem">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the menu item is the default item in a menu; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 메뉴 항목이 메뉴의 기본 항목이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.DefaultItem">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.DefaultItem">
          <source>The default menu item for a menu is boldfaced.</source>
          <target state="translated">메뉴가 기본 메뉴 항목은 굵은 글꼴로 지정 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.DefaultItem">
          <source>When the user double-clicks a submenu that contains a default item, the default item is selected, and the submenu is closed.</source>
          <target state="translated">기본 항목을 포함 하는 하위 메뉴를 두 번 클릭할 때 기본 항목을 선택 및 하위 메뉴를 닫을 합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.DefaultItem">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.DefaultItem%2A&gt;</ph> property to indicate, the default action that is expected in a menu or shortcut menu.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.DefaultItem%2A&gt;</ph> 메뉴 또는 바로 가기 메뉴에 예상 되는 기본 동작을 나타내는 속성입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.DefaultItem">
          <source>The following code example creates a menu item with two submenu items.</source>
          <target state="translated">다음 코드 예제에서는 두 개의 하위 항목이 있는 메뉴 항목을 만듭니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.DefaultItem">
          <source>The example sets <ph id="ph1">`menuItem2`</ph> as the default menu item using the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.DefaultItem%2A&gt;</ph> property.</source>
          <target state="translated">예제에서는 <ph id="ph1">`menuItem2`</ph> 사용 하 여 기본 메뉴 항목으로는 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.DefaultItem%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.Dispose(System.Boolean)">
          <source>Disposes of the resources (other than memory) used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>에서 사용하는 리소스(메모리 제외)를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.Dispose(System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Dispose%2A&gt;</ph> 사용을 마치면 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.Dispose(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Dispose%2A&gt;</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>를 사용할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.Dispose(System.Boolean)">
          <source>After calling <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> so the memory it was occupying can be reclaimed by garbage collection.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Dispose%2A&gt;</ph>에 대 한 모든 참조를 해제 해야는 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 차지 했던 메모리를 가비지 수집에 의해 회수 될 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.Dispose(System.Boolean)">
          <source>Always call <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Dispose%2A&gt;</ph>에 대한 마지막 참조를 해제하기 전에 반드시 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>를 호출하십시오.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.Dispose(System.Boolean)">
          <source>Otherwise, the resources the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> is using will not be freed until garbage collection calls the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> object's destructor.</source>
          <target state="translated">그렇지 않으면 리소스는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 는 사용 하 여 해제 되지 것입니다 가비지 컬렉션 호출할 때까지 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체의 소멸자가 있습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.MenuItem.DrawItem">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.MenuItem.OwnerDraw" /&gt;</ph> property of a menu item is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph> and a request is made to draw the menu item.</source>
          <target state="translated">메뉴 항목의 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.MenuItem.OwnerDraw" /&gt;</ph> 속성이 <ph id="ph2">&lt;see langword="true" /&gt;</ph>로 설정된 경우 메뉴 항목을 그리도록 요청할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.DrawItem">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DrawItemEventArgs&gt;</ph> argument passed to a <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.DrawItem&gt;</ph> event handler provides a <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> object that enables you to perform drawing and other graphical operations on the surface of the menu item.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.DrawItemEventArgs&gt;</ph> 에 전달 된 인수는 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.DrawItem&gt;</ph> 이벤트 처리기를 제공는 <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> 그리기 및 메뉴 항목의 화면에 다른 그래픽 작업을 수행할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.DrawItem">
          <source>You can use this event handler to create custom menus that meet the needs of your application.</source>
          <target state="translated">응용 프로그램의 요구를 충족 하는 사용자 지정 메뉴를 만드는이 이벤트 처리기를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.DrawItem">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.DrawItem">
          <source>The following code example demonstrates how to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.DrawItem&gt;</ph> event.</source>
          <target state="translated">다음 코드 예제에서는 처리 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.DrawItem&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.DrawItem">
          <source>This example draws a menu item using a <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph> and a <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph>, and then draws a <ph id="ph3">&lt;xref:System.Drawing.Rectangle&gt;</ph> around the menu item.</source>
          <target state="translated">이 예제에서는 메뉴 항목 사용 하 여 그립니다는 <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph>, 다음 그립니다는 <ph id="ph3">&lt;xref:System.Drawing.Rectangle&gt;</ph> 사각형이 메뉴 항목입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.DrawItem">
          <source>The drawing is performed through the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object, which is passed to the event handler in the <ph id="ph2">&lt;xref:System.Windows.Forms.DrawItemEventArgs&gt;</ph> parameter.</source>
          <target state="translated">드로잉을 통해 수행 됩니다는 <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> 에서 이벤트 처리기에 전달 되는 개체는 <ph id="ph2">&lt;xref:System.Windows.Forms.DrawItemEventArgs&gt;</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.DrawItem">
          <source>This example requires that you have initialized the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.OwnerDraw%2A&gt;</ph> property for the item to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 예제를 실행 하려면 초기화 했다고는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.OwnerDraw%2A&gt;</ph> 항목에 대 한 속성 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.DrawItem">
          <source>For the C# example, add the following code in the form's constructor, after <ph id="ph1">`InitializeComponent`</ph>, to hook up the event:</source>
          <target state="translated">C# 예제에서는 대 한 뒤 폼의 생성자에 다음 코드를 추가 <ph id="ph1">`InitializeComponent`</ph>에 이벤트를 연결 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Enabled">
          <source>Gets or sets a value indicating whether the menu item is enabled.</source>
          <target state="translated">메뉴 항목이 활성화되는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Enabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the menu item is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">메뉴 항목이 활성화되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Enabled">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Enabled">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> that is disabled is displayed in a gray color to indicate its state.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 즉 사용 안 함 상태를 나타내기 위해 회색으로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Enabled">
          <source>When a parent menu item is disabled, all submenu items are not displayed.</source>
          <target state="translated">부모 메뉴 항목이 비활성화 되 면 모든 하위 메뉴 항목이 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Enabled">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph> event to determine whether <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph> 결정 하기 위해 이벤트 여부 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 잘라내기, 복사에 대 한 지원을 제공 하 고 작업을 삭제 하는 개체에 표시 된 메뉴에 표시 되기 전에 사용 하도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Enabled">
          <source>The example determines if <ph id="ph1">`textBox1`</ph>, a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control on the form, is enabled, has input focus, and has text selected before enabling the <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects.</source>
          <target state="translated">이 예제에서는 확인 하는 경우 <ph id="ph1">`textBox1`</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 폼에 컨트롤, 사용, 입력 포커스가에 사용 하기 전에 선택한 텍스트는 <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Enabled">
          <source>This example requires that three <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects are created named <ph id="ph2">`menuCut`</ph>, <ph id="ph3">`menuCopy`</ph>, and <ph id="ph4">`menuDelete`</ph> have been created.</source>
          <target state="translated">이 예제에서는 세 가지 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체가 명명 된 만들어집니다 <ph id="ph2">`menuCut`</ph>, <ph id="ph3">`menuCopy`</ph>, 및 <ph id="ph4">`menuDelete`</ph> 만들어졌습니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Index">
          <source>Gets or sets a value indicating the position of the menu item in its parent menu.</source>
          <target state="translated">부모 메뉴에서의 메뉴 항목 위치를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Index">
          <source>The zero-based index representing the position of the menu item in its parent menu.</source>
          <target state="translated">부모 메뉴에서의 메뉴 항목 위치를 나타내며 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Index">
          <source>This property provides the indexed position of a menu item in the menu item collection of its parent menu.</source>
          <target state="translated">이 속성은 부모 메뉴의 메뉴 항목 컬렉션의 메뉴 항목의 인덱싱된 위치를 제공합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Index">
          <source>You can use this property to reposition a menu item to a different location within its menu.</source>
          <target state="translated">메뉴 내의 다른 위치에 메뉴 항목 위치를 변경 하려면이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Index">
          <source>You can also use this property when creating a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> to specify its position in a menu structure at the time of creation.</source>
          <target state="translated">만들 때에이 속성을 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 생성 시의 메뉴 구조에서의 위치를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Index">
          <source>The following code example switches the position of two menu items in a menu.</source>
          <target state="translated">다음 코드 예제에서는 메뉴의 두 가지 메뉴 항목의 위치를 전환합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Index">
          <source>The following code example requires that two <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects are created named <ph id="ph2">`menuItem1`</ph> and <ph id="ph3">`menuItem2`</ph>.</source>
          <target state="translated">다음 코드 예제를 실행 하려면 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체가 명명 된 만들어집니다 <ph id="ph2">`menuItem1`</ph> 및 <ph id="ph3">`menuItem2`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Index">
          <source>The <ph id="ph1">`menuItem1`</ph> menu item moves down one position in the menu, while <ph id="ph2">`menuItem2`</ph> moves up one position.</source>
          <target state="translated"><ph id="ph1">`menuItem1`</ph> 메뉴 항목의 메뉴에서 한 칸 아래로 이동 하는 동안 <ph id="ph2">`menuItem2`</ph> 한 위치 위로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Index">
          <source>The assigned value is less than zero or greater than the item count.</source>
          <target state="translated">할당된 값이 0보다 작거나 항목 수보다 큰 경우</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.IsParent">
          <source>Gets a value indicating whether the menu item contains child menu items.</source>
          <target state="translated">메뉴 항목에 자식 메뉴 항목이 포함된지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.IsParent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the menu item contains child menu items; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the menu is a standalone menu item.</source>
          <target state="translated">메뉴 항목에 자식 메뉴 항목이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 메뉴가 독립 실행형 메뉴 항목이면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.IsParent">
          <source>You can use this property with the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Parent%2A&gt;</ph> property to navigate in code through an entire menu structure.</source>
          <target state="translated">이 속성을 사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Parent%2A&gt;</ph> 속성 전체 메뉴 구조를 통해 코드를 탐색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.IsParent">
          <source>The following code example determines whether there are any submenus associated with a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> named <ph id="ph2">`menuItem1`</ph>.</source>
          <target state="translated">다음 코드 예제에서는 연결 된 모든 하위 메뉴 지 확인 한 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 라는 <ph id="ph2">`menuItem1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.IsParent">
          <source>If any submenus exist, it disables them by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">설정 하 여 비활성화 하는 하위 메뉴에 없으면는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Enabled%2A&gt;</ph> 속성을 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.IsParent">
          <source>The example requires that there is a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> created named <ph id="ph2">`menuItem1`</ph>.</source>
          <target state="translated">이 예제에서는 있는지는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 라는 생성 <ph id="ph2">`menuItem1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.MdiList">
          <source>Gets or sets a value indicating whether the menu item will be populated with a list of the Multiple Document Interface (MDI) child windows that are displayed within the associated form.</source>
          <target state="translated">메뉴 항목이 관련 폼 내에 표시되는 MDI(다중 문서 인터페이스) 자식 창의 목록으로 채워지는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MdiList">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a list of the MDI child windows is displayed in this menu item; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 메뉴 항목에 MDI 자식 창의 목록이 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MdiList">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MdiList">
          <source>When a menu item is selected to display an MDI child window list, the list is displayed as a submenu of the menu item.</source>
          <target state="translated">MDI 자식 창 목록을 표시 하려면 메뉴 항목을 선택 하면 목록 메뉴 항목의 하위도 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MdiList">
          <source>Only forms that are defined as MDI child forms are displayed in the window list.</source>
          <target state="translated">MDI 자식 폼으로 정의 된 양식에 창 목록에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MdiList">
          <source>Only nine child windows can be displayed at a time.</source>
          <target state="translated">한 번에 9 개의 자식 창은 표시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MdiList">
          <source>If there are more than nine child windows displayed, a "More Windows..." menu item is displayed at the end of the window list.</source>
          <target state="translated">있는 경우 표시 되는 10 개 이상 자식 창, 창 목록의 끝에 "기타 창..." 메뉴 항목 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MdiList">
          <source>Clicking this menu item displays a dialog box with a complete list of the child windows that are currently active.</source>
          <target state="translated">이 메뉴 항목을 클릭 하면 현재 활성화 되어 있는 자식 창의 전체 목록이 있는 대화 상자가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MdiList">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> that is used to display the list of currently open MDI child forms in an MDI form.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> MDI 폼에서 현재 열려 있는 MDI 자식 폼 목록을 표시 하는 데 사용 되는 합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.MenuItem.MeasureItem">
          <source>Occurs when the menu needs to know the size of a menu item before drawing it.</source>
          <target state="translated">메뉴 항목을 그리기 전에 메뉴에서 해당 메뉴 항목의 크기를 알아야 할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.MeasureItem">
          <source>In order for this event to be raised, you must have the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.OwnerDraw%2A&gt;</ph> property of the menu item set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">이 이벤트를 발생에 대 한 순서로 있어야는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.OwnerDraw%2A&gt;</ph> 메뉴 항목의 속성이로 설정 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.MeasureItem">
          <source>This event is raised before owner drawn menus are drawn to allow for the size of the menu item to be drawn to be specified.</source>
          <target state="translated">이 이벤트는 소유자 그리기 메뉴는 메뉴 항목의 크기 지정에 그려질 수 있도록 그리기 전에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.MeasureItem">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.MeasureItem">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">다음 코드 예제에서는이 멤버를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.MeasureItem">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MeasureItem&gt;</ph> event.</source>
          <target state="translated">예제에서는 이벤트 처리기에서 보고 된 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MeasureItem&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.MeasureItem">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">이 보고서를 통해 이벤트 발생 하 고 디버깅 하는 데 도움이 수 때 배울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.MeasureItem">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> named <ph id="ph2">`MenuItem1`</ph>.</source>
          <target state="translated">예제 코드를 실행 하려면 형식의 인스턴스를 포함 하는 프로젝트에 붙여 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 라는 <ph id="ph2">`MenuItem1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.MeasureItem">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MeasureItem&gt;</ph> event.</source>
          <target state="translated">그런 다음 이벤트 처리기가 연결을 확인는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MeasureItem&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.MenuID">
          <source>Gets a value indicating the Windows identifier for this menu item.</source>
          <target state="translated">이 메뉴 항목의 Windows 식별자를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MenuID">
          <source>The Windows identifier for this menu item.</source>
          <target state="translated">이 메뉴 항목의 Windows 식별자입니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.MenuItem">
          <source>Merges this <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> with another <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>을 다른 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>과 병합합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.MergeMenu">
          <source>Merges this <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> with another <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> and returns the resulting merged <ph id="ph3">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>을 다른 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>과 병합하고 병합된 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.MergeMenu">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> that represents the merged menu item.</source>
          <target state="translated">병합된 메뉴 항목을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu">
          <source>When you call this version of <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> returned is a copy of the current menu item that can be merged with another menu item without affecting the functionality of the current item.</source>
          <target state="translated">이 버전의를 호출 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 은 현재 메뉴 항목 병합 될 수 있는 현재 항목의 기능에 영향을 주지 않고 다른 메뉴 항목과 복사본을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph> method is similar to calling the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.CloneMenu%2A&gt;</ph> method that contains no parameters.</source>
          <target state="translated">이 버전의는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph> 호출 하는 것과 비슷합니다는 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.CloneMenu%2A&gt;</ph> 매개 변수를 포함 하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> that specifies the menu item to merge with this one.</source>
          <target state="translated">이 메뉴 항목과 병합할 메뉴 항목을 지정하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>Merges another menu item with this menu item.</source>
          <target state="translated">다른 메뉴 항목을 이 메뉴 항목과 병합합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>Menu items are merged according to the value of the menu item's <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeType%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.MergeOrder%2A&gt;</ph> properties.</source>
          <target state="translated">메뉴 항목의 메뉴 항목의 값에 따라 병합 됩니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeType%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.MergeOrder%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph> method enables you to merge two <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects (and their submenus) into a single menu.</source>
          <target state="translated">이 버전의는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph> 메서드 두 병합 하면 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체 (및 해당 하위 메뉴)를 단일 메뉴로 합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>Menu merging is handled automatically when a Multiple Document Interface (MDI) parent form and a child both have menus.</source>
          <target state="translated">메뉴 병합은 인터페이스 MDI (다중 문서) 부모 폼과 자식 메뉴를 포함 하는 경우 자동으로 처리 됩니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>You can use this version of the method to merge two <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects (and their submenu items) located in a <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> control into a single menu within a <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>.</source>
          <target state="translated">이 버전의 병합 두 메서드를 사용할 수 있습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체 (및 해당 하위 메뉴 항목)에 있는 한 <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 컨트롤 내에서 단일 메뉴에는 <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>For example, you can call this version of the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph> method to merge the menu items of a File and Edit menu into a single <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> that can then be added to and displayed by a <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>.</source>
          <target state="translated">예를 들어이 버전의를 호출할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph> 을 단일 파일 및 편집 메뉴의 메뉴 항목을 병합 하는 메서드 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 있는 다음에 추가 및 표시 될 수 하 여 한 <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>The following code example uses this version of the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph> method to create a copy of a <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> and merge it with another.</source>
          <target state="translated">다음 코드 예제에서는이 버전의는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph> 의 복사본을 만드는 메서드는 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 다른 메뉴 항목 병합 합니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>The merged <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> is then added to a <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> control.</source>
          <target state="translated">병합 된 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 에 추가 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>This example requires that there are two menu items called <ph id="ph1">`menuItem1`</ph> and <ph id="ph2">`menuItem2`</ph> that contain submenu items within them and a <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> named <ph id="ph4">`contextMenu1`</ph> to display the menu items.</source>
          <target state="translated">이 예제에서는 라는 메뉴 항목을 두 개가 <ph id="ph1">`menuItem1`</ph> 및 <ph id="ph2">`menuItem2`</ph> 하위 메뉴 항목을 포함 하는 및 <ph id="ph3">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> 라는 <ph id="ph4">`contextMenu1`</ph> 메뉴 항목을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source><ph id="ph1">`menuItem1`</ph> and <ph id="ph2">`menuItem2`</ph> have different menu items contained within them.</source>
          <target state="translated"><ph id="ph1">`menuItem1`</ph> 및 <ph id="ph2">`menuItem2`</ph> 그 안에 포함 된 다른 메뉴 항목이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.MergeMenu(System.Windows.Forms.MenuItem)">
          <source>After the call to <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph> is made, a consolidated menu is created.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeMenu%2A&gt;</ph> 만들어지고 통합 메뉴가 만들어집니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.MergeOrder">
          <source>Gets or sets a value indicating the relative position of the menu item when it is merged with another.</source>
          <target state="translated">메뉴 항목이 다른 항목과 병합될 때 메뉴 항목의 상대적 위치를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MergeOrder">
          <source>A zero-based index representing the merge order position for this menu item.</source>
          <target state="translated">이 메뉴 항목의 병합 순서 위치를 나타내며 0부터 시작하는 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MergeOrder">
          <source>The default is 0.</source>
          <target state="translated">기본값은 0입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MergeOrder">
          <source>The merge order of a menu item specifies the relative position that this menu item will take if the menu structure that the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> is contained in is merged with another.</source>
          <target state="translated">이 메뉴 항목의 메뉴 구조 하는 경우 수행 하는 상대 위치를 지정 하는 메뉴 항목의 병합 순서는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 포함 된 다른 항목과 병합 될 합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MergeOrder">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeOrder%2A&gt;</ph> property to control the way a merged menu is displayed.</source>
          <target state="translated">다음 코드 예제는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.MergeOrder%2A&gt;</ph> 병합된 된 메뉴에 표시 되는 방식을 제어 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MergeOrder">
          <source>This is a complete example, ready to run once you add it to your project.</source>
          <target state="translated">이 전체 예제를 프로젝트에 추가 하면 실행 하도록 준비 합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.MergeType">
          <source>Gets or sets a value indicating the behavior of this menu item when its menu is merged with another.</source>
          <target state="translated">메뉴 항목의 메뉴가 다른 메뉴와 병합될 때 해당 메뉴 항목의 동작을 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MergeType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuMerge" /&gt;</ph> value that represents the menu item's merge type.</source>
          <target state="translated">메뉴 항목의 병합 유형을 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuMerge" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MergeType">
          <source>The merge type of a menu item indicates how the menu item behaves when it has the same merge order as another menu item being merged.</source>
          <target state="translated">메뉴 항목의 병합 유형 메뉴 항목 병합 순서와 병합 하는 다른 메뉴 항목에 있을 때 동작 하는 방식을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MergeType">
          <source>You can use merged menus to create a consolidated menu based on two or more existing menus.</source>
          <target state="translated">두 개 이상의 기존 메뉴에 따라 통합된 메뉴를 만들려면 병합 된 메뉴를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.MergeType">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> with the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.MergeType%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem.MergeOrder%2A&gt;</ph> specified so that the menu item is added to the merged menu at first position.</source>
          <target state="translated">다음 코드 예제에서는 한 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem.MergeType%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem.MergeOrder%2A&gt;</ph> 첫 번째 위치에 병합 된 메뉴에 메뉴 항목 추가 되도록 지정 합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.MergeType">
          <source>The assigned value is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuMerge" /&gt;</ph> values.</source>
          <target state="translated">할당된 값이 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuMerge" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Mnemonic">
          <source>Gets a value indicating the mnemonic character that is associated with this menu item.</source>
          <target state="translated">이 메뉴 항목과 연결된 니모닉 문자를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Mnemonic">
          <source>A character that represents the mnemonic character associated with this menu item.</source>
          <target state="translated">이 메뉴 항목과 연결된 니모닉 문자를 나타내는 문자입니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Mnemonic">
          <source>Returns the NUL character (ASCII value 0) if no mnemonic character is specified in the text of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>의 텍스트에 지정된 니모닉 문자가 없으면 NUL 문자(ASCII 값 0)를 반환합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Mnemonic">
          <source>The mnemonic character is the first character after an ampersand character (&amp;) in the text of the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>.</source>
          <target state="translated">니모닉 문자는 첫 번째 문자는 텍스트에 (&amp;)를 앰퍼샌드 문자 뒤의 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Mnemonic">
          <source>This property will not return a mnemonic if two ampersand characters are placed together as the ampersands are used to display an ampersand in the text of the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> instead of defining a mnemonic character.</source>
          <target state="translated">이 속성의 텍스트에 앰퍼샌드를 표시 하는 경우 앰퍼샌드가 사용 되 고 두 개의 앰퍼샌드 문자 함께 배치 된 경우 니모닉을 반환 하지 것입니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 니모닉 문자를 정의 하는 대신 합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Click" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event to perform tasks when a <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> is clicked.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> 경우 수행 하는 이벤트 작업는 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 를 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> called <ph id="ph2">`mainMenu1`</ph> and adds two <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects, <ph id="ph4">`topMenuItem`</ph> (<ph id="ph5">`File`</ph>) and <ph id="ph6">`menuItem1`</ph> (<ph id="ph7">`Open`</ph>).</source>
          <target state="translated">이 예에서는 만듭니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 호출 <ph id="ph2">`mainMenu1`</ph> 두 개 추가 <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체 <ph id="ph4">`topMenuItem`</ph> (<ph id="ph5">`File`</ph>) 및 <ph id="ph6">`menuItem1`</ph> (<ph id="ph7">`Open`</ph>).</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)">
          <source>It then connects the <ph id="ph1">`Click`</ph> event to the <ph id="ph2">`menuItem1_Click`</ph> event handler.</source>
          <target state="translated">다음 연결 된 <ph id="ph1">`Click`</ph> 이벤트를는 <ph id="ph2">`menuItem1_Click`</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)">
          <source>When the user clicks the <ph id="ph1">`Open`</ph> menu item, an <ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> is initialized and displayed.</source>
          <target state="translated">사용자가 클릭할 때는 <ph id="ph1">`Open`</ph> 메뉴 항목을 한 <ph id="ph2">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> 초기화 되 고 표시 합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)">
          <source>The example requires that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">이 예제에서는 만든는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /&gt;</ph> method.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.MenuItem.OnClick(System.EventArgs)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DrawItemEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DrawItemEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.DrawItem" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.DrawItem" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.MenuItem.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnInitMenuPopup(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnInitMenuPopup(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Popup" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Popup" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MeasureItemEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MeasureItemEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.MeasureItem" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.MeasureItem" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.MenuItem.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Popup" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Popup" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph> event to determine whether <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph> 결정 하기 위해 이벤트 여부 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 잘라내기, 복사에 대 한 지원을 제공 하 고 작업을 삭제 하는 개체에 표시 된 메뉴에 표시 되기 전에 사용 하도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)">
          <source>The example determines if <ph id="ph1">`textBox1`</ph>, a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control on the form, is enabled, has input focus, and has text selected before enabling the <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects.</source>
          <target state="translated">이 예제에서는 확인 하는 경우 <ph id="ph1">`textBox1`</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 폼에 컨트롤, 사용, 입력 포커스가에 사용 하기 전에 선택한 텍스트는 <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)">
          <source>This example requires that three <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects are created named <ph id="ph2">`menuCut`</ph>, <ph id="ph3">`menuCopy`</ph>, and <ph id="ph4">`menuDelete`</ph> have been created.</source>
          <target state="translated">이 예제에서는 세 가지 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체가 명명 된 만들어집니다 <ph id="ph2">`menuCut`</ph>, <ph id="ph3">`menuCopy`</ph>, 및 <ph id="ph4">`menuDelete`</ph> 만들어졌습니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /&gt;</ph> method.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.MenuItem.OnPopup(System.EventArgs)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Select" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Select" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> class to assign help text to a <ph id="ph3">&lt;xref:System.Windows.Forms.StatusBarPanel&gt;</ph> of a <ph id="ph4">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> 의 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 도움말 텍스트를 할당 하는 클래스는 <ph id="ph3">&lt;xref:System.Windows.Forms.StatusBarPanel&gt;</ph> 의 <ph id="ph4">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)">
          <source>This example requires that <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects named <ph id="ph2">`menuOpen`</ph>, <ph id="ph3">`menuSave`</ph>, and <ph id="ph4">`menuExit`</ph> are added to a <ph id="ph5">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> control on a form.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체의 명명 된 <ph id="ph2">`menuOpen`</ph>, <ph id="ph3">`menuSave`</ph>, 및 <ph id="ph4">`menuExit`</ph> 에 추가 되는 <ph id="ph5">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 양식에 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)">
          <source>The example also requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> control, named <ph id="ph2">`statusBar1`</ph> has been added to the form.</source>
          <target state="translated">이 예제에서는 필요는 <ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> 라는 컨트롤 <ph id="ph2">`statusBar1`</ph> 폼에 추가 되었습니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> control should contain a <ph id="ph2">&lt;xref:System.Windows.Forms.StatusBarPanel&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> 컨트롤 있어야는 <ph id="ph2">&lt;xref:System.Windows.Forms.StatusBarPanel&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /&gt;</ph> method.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /&gt;</ph> 파생된 클래스에서 호출 해야 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.MenuItem.OnSelect(System.EventArgs)" /&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.OwnerDraw">
          <source>Gets or sets a value indicating whether the code that you provide draws the menu item or Windows draws the menu item.</source>
          <target state="translated">사용자가 제공하는 코드에서 메뉴 항목을 그리는지 또는 Windows에서 메뉴 항목을 그리는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.OwnerDraw">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the menu item is to be drawn using code; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the menu item is to be drawn by Windows.</source>
          <target state="translated">코드를 사용하여 메뉴 항목을 그리면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, Windows에서 그리면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.OwnerDraw">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.OwnerDraw">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.OwnerDraw%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, you need to handle all drawing of the menu item.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.OwnerDraw%2A&gt;</ph> 속성이 <ph id="ph2">`true`</ph>, 메뉴 항목의 모든 그리기를 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.OwnerDraw">
          <source>You can use this capability to create your own special menu displays.</source>
          <target state="translated">사용자 고유의 특별 한 메뉴 표시를 만들려면이 기능을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.OwnerDraw">
          <source>The following code example demonstrates a menu with an owner-drawn menu item.</source>
          <target state="translated">다음 코드 예제에는 소유자가 그린 메뉴 항목이 포함 된 메뉴를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.OwnerDraw">
          <source>This example set the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.OwnerDraw%2A&gt;</ph> property and uses the <ph id="ph2">`AddHandler`</ph> statement and the <ph id="ph3">`AddressOf`</ph> operator to designate a delegate to handle the <ph id="ph4">&lt;xref:System.Windows.Forms.MenuItem.DrawItem&gt;</ph> event.</source>
          <target state="translated">이 예제에서는 집합은 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.OwnerDraw%2A&gt;</ph> 속성 및 사용 하 여는 <ph id="ph2">`AddHandler`</ph> 문 및 <ph id="ph3">`AddressOf`</ph> 처리 하는 대리자를 지정 하는 연산자는 <ph id="ph4">&lt;xref:System.Windows.Forms.MenuItem.DrawItem&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.OwnerDraw">
          <source>To run the example, paste it in a form that imports the <ph id="ph1">&lt;xref:System&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms&gt;</ph>, and <ph id="ph3">&lt;xref:System.Drawing&gt;</ph> namespaces.</source>
          <target state="translated">이 예제를 실행 하려면 가져오는 폼에 붙여넣습니다는 <ph id="ph1">&lt;xref:System&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Drawing&gt;</ph> 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.OwnerDraw">
          <source>Call <ph id="ph1">`InitializeMenu`</ph> from the form's constructor or <ph id="ph2">`Load`</ph> method.</source>
          <target state="translated">호출 <ph id="ph1">`InitializeMenu`</ph> 폼의 생성자 또는 <ph id="ph2">`Load`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Parent">
          <source>Gets a value indicating the menu that contains this menu item.</source>
          <target state="translated">이 메뉴 항목이 포함된 메뉴를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Parent">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Menu" /&gt;</ph> that represents the menu that contains this menu item.</source>
          <target state="translated">이 메뉴 항목이 들어 있는 메뉴를 나타내는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Menu" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Parent">
          <source>You can use this property to obtain the <ph id="ph1">&lt;xref:System.Windows.Forms.Menu&gt;</ph> object for a submenu.</source>
          <target state="translated">이 속성을 사용 하 여 가져올는 <ph id="ph1">&lt;xref:System.Windows.Forms.Menu&gt;</ph> 하위 메뉴에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Parent">
          <source>You can cast the <ph id="ph1">&lt;xref:System.Windows.Forms.Menu&gt;</ph> object returned by this property to a <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> object to manipulate it.</source>
          <target state="translated">캐스팅할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.Menu&gt;</ph> 이 속성에서 반환 된 개체는 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 을 조작 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Parent">
          <source>In this example, you create a main menu and a top-level menu item, <ph id="ph1">`menuItem1`</ph> (<ph id="ph2">`File`</ph>).</source>
          <target state="translated">이 예제에서 주 메뉴 및 최상위 메뉴 항목을 만듭니다 <ph id="ph1">`menuItem1`</ph> (<ph id="ph2">`File`</ph>).</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Parent">
          <source>You also create two menu items, <ph id="ph1">`menuItem2`</ph> (<ph id="ph2">`New`</ph>) and <ph id="ph3">`menuItem3`</ph> (<ph id="ph4">`Open`</ph>), and add them to the menu item list of <ph id="ph5">`menuItem1`</ph>.</source>
          <target state="translated">두 가지 새 메뉴 항목을 만들 수도 <ph id="ph1">`menuItem2`</ph> (<ph id="ph2">`New`</ph>) 및 <ph id="ph3">`menuItem3`</ph> (<ph id="ph4">`Open`</ph>)의 메뉴 항목 목록에 추가할 <ph id="ph5">`menuItem1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Parent">
          <source>Then you check to see if <ph id="ph1">`menuItem3`</ph> has got a parent menu, which is true, and display the information of this parent menu in message box.</source>
          <target state="translated">있는지 확인 한 다음 <ph id="ph1">`menuItem3`</ph> 이었죠 부모는이 true 이면 메뉴 및이 부모 메뉴의 정보 표시 메시지 상자에 있습니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Parent">
          <source>This example requires that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">이 예제에서는 만든는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.PerformClick">
          <source>Generates a <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph> event for the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>, simulating a click by a user.</source>
          <target state="translated">클릭하는 동작을 시뮬레이션하는 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Click" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph> 이벤트를 생성합니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformClick">
          <source>You can use this menu to activate a menu item through code without passing any event information.</source>
          <target state="translated">이벤트 정보를 전달 하지 않고 코드를 통해 메뉴 항목을 활성화 하려면이 메뉴를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformClick">
          <source>For example, if you want to activate a menu item based on an action that occurs in your application, you can call the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.PerformClick%2A&gt;</ph> method for that <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>.</source>
          <target state="translated">예를 들어, 호출할 수 있습니다 응용 프로그램에서 발생 하는 동작에 따라 항목 메뉴를 활성화 하려면는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.PerformClick%2A&gt;</ph> 메서드를 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformClick">
          <source>In this example you programmatically click a menu item by using the <ph id="ph1">`PerformClick`</ph> method.</source>
          <target state="translated">이 예제를 사용 하 여 프로그래밍 방식으로 메뉴 항목을 클릭는 <ph id="ph1">`PerformClick`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformClick">
          <source>First, you create a main menu (<ph id="ph1">`mainMenu1`</ph>) and add to it two menu items, <ph id="ph2">`menuItem1`</ph> (<ph id="ph3">`File`</ph>) and <ph id="ph4">`menuItem2`</ph> (<ph id="ph5">`Edit`</ph>).</source>
          <target state="translated">먼저 주 메뉴를 만듭니다 (<ph id="ph1">`mainMenu1`</ph>)를 두 개의 추가 메뉴 항목 <ph id="ph2">`menuItem1`</ph> (<ph id="ph3">`File`</ph>) 및 <ph id="ph4">`menuItem2`</ph> (<ph id="ph5">`Edit`</ph>).</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformClick">
          <source>You also use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event to send data to the event handler when a menu item is clicked.</source>
          <target state="translated">또한 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> 메뉴 항목을 클릭할 때 이벤트 처리기에 데이터를 전송 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformClick">
          <source>Then you use the <ph id="ph1">`PerformClick`</ph> method to click the <ph id="ph2">`File`</ph> menu item.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`PerformClick`</ph> 클릭 하 여 메서드는 <ph id="ph2">`File`</ph> 메뉴 항목입니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformClick">
          <source>When you start the application, the <ph id="ph1">`File`</ph> menu item is activated, and a message box that contains the text "The File menu is clicked."</source>
          <target state="translated">응용 프로그램을 시작할 때의 <ph id="ph1">`File`</ph> 메뉴 항목이 활성화 되 고 "파일 메뉴를 클릭 합니다." 텍스트를 포함 하는 메시지 상자</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformClick">
          <source>appears on the screen.</source>
          <target state="translated">화면에 나타납니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformClick">
          <source>The example requires that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">이 예제에서는 만든는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.PerformSelect">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Select" /&gt;</ph> event for this menu item.</source>
          <target state="translated">이 메뉴 항목의 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.MenuItem.Select" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformSelect">
          <source>This method allows you to raise the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> event without passing any event information to the event handler.</source>
          <target state="translated">이 메서드를 사용 하면 늘릴 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> 이벤트 처리기에 이벤트 정보를 전달 하지 않고 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformSelect">
          <source>In this example you programmatically select a menu item by using the <ph id="ph1">`PerformSelect`</ph> method.</source>
          <target state="translated">이 예제를 사용 하 여 프로그래밍 방식으로 메뉴 항목을 선택 된 <ph id="ph1">`PerformSelect`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformSelect">
          <source>First, you create a main menu (<ph id="ph1">`mainMenu1`</ph>) and add to it two menu items, <ph id="ph2">`menuItem1`</ph> (<ph id="ph3">`File`</ph>) and <ph id="ph4">`menuItem2`</ph> (<ph id="ph5">`Edit`</ph>).</source>
          <target state="translated">먼저 주 메뉴를 만듭니다 (<ph id="ph1">`mainMenu1`</ph>)를 두 개의 추가 메뉴 항목 <ph id="ph2">`menuItem1`</ph> (<ph id="ph3">`File`</ph>) 및 <ph id="ph4">`menuItem2`</ph> (<ph id="ph5">`Edit`</ph>).</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformSelect">
          <source>You also use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> event to send data to the event handler when a menu item is selected.</source>
          <target state="translated">또한 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> 메뉴 항목이 선택 될 때 이벤트 처리기에 데이터를 전송 하는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformSelect">
          <source>Then you use the <ph id="ph1">`PerformSelect`</ph> method to select the <ph id="ph2">`File`</ph> menu item.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`PerformSelect`</ph> 선택 하는 메서드는 <ph id="ph2">`File`</ph> 메뉴 항목입니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformSelect">
          <source>When you start the application, the <ph id="ph1">`File`</ph> menu item is selected, and a message box that contains the text "The File menu is selected."</source>
          <target state="translated">응용 프로그램을 시작할 때의 <ph id="ph1">`File`</ph> 메뉴 항목을 선택 하 고 텍스트를 "파일 메뉴를 선택 합니다."를 포함 하는 메시지 상자</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformSelect">
          <source>appears on the screen.</source>
          <target state="translated">화면에 나타납니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.MenuItem.PerformSelect">
          <source>The example requires that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">이 예제에서는 만든는 <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> 라는 <ph id="ph2">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.MenuItem.Popup">
          <source>Occurs before a menu item's list of menu items is displayed.</source>
          <target state="translated">메뉴 항목의 메뉴 항목 목록이 표시되기 전에 발생합니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Popup">
          <source>This event only occurs when a menu item has submenu items to display.</source>
          <target state="translated">이 이벤트는 메뉴 항목에 하위 메뉴 항목 표시 하는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Popup">
          <source>You can use this event handler to add, remove, enable, disable, check, or uncheck menu items based on the state of your application before they are displayed.</source>
          <target state="translated">이 이벤트 처리기를 사용 하 여 추가, 제거, 사용, 사용 안 함, 확인 또는 표시 되기 전에 응용 프로그램의 상태에 따라 메뉴 항목을 선택 취소 합니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Popup">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Popup">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph> event to determine whether <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph> 결정 하기 위해 이벤트 여부 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 잘라내기, 복사에 대 한 지원을 제공 하 고 작업을 삭제 하는 개체에 표시 된 메뉴에 표시 되기 전에 사용 하도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Popup">
          <source>The example determines if <ph id="ph1">`textBox1`</ph>, a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control on the form, is enabled, has input focus, and has text selected before enabling the <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects.</source>
          <target state="translated">이 예제에서는 확인 하는 경우 <ph id="ph1">`textBox1`</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 폼에 컨트롤, 사용, 입력 포커스가에 사용 하기 전에 선택한 텍스트는 <ph id="ph3">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Popup">
          <source>This example requires that three <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects are created named <ph id="ph2">`menuCut`</ph>, <ph id="ph3">`menuCopy`</ph>, and <ph id="ph4">`menuDelete`</ph> have been created.</source>
          <target state="translated">이 예제에서는 세 가지 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체가 명명 된 만들어집니다 <ph id="ph2">`menuCut`</ph>, <ph id="ph3">`menuCopy`</ph>, 및 <ph id="ph4">`menuDelete`</ph> 만들어졌습니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>, if checked, displays a radio-button instead of a check mark.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>이 선택된 경우 확인 표시 대신 라디오 단추를 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a radio-button is to be used instead of a check mark; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the standard check mark is to be displayed when the menu item is checked.</source>
          <target state="translated">메뉴 항목이 선택될 때 확인 표시 대신 라디오 단추가 사용되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 표준 확인 표시가 표시되면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>Check marks do not necessarily imply a mutually exclusive state for a group of menu items.</source>
          <target state="translated">확인 표시가 있는 메뉴 항목 그룹에 대 한 상호 배타적인 상태 반드시 의미 하지는 않습니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>You can use this property to indicate to the user that the check mark of a menu item is mutually exclusive.</source>
          <target state="translated">메뉴 항목의 확인 표시는 함께 사용할 수 없는 사용자에 게 나타내기 위해이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph> property to change the state of an application.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Checked%2A&gt;</ph> 응용 프로그램의 상태를 변경할 속성입니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>In the example, a group of menu items are provided that are used to specify the color for the text in an <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">예제에서는 메뉴 항목 그룹에는 제공에서 텍스트 색을 지정 하는 데 사용 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>In the example, the event handler provided is used by the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event of the three menu items.</source>
          <target state="translated">예제에서는 제공 된 이벤트 처리기에서 사용 되는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> 세 가지 메뉴 항목의 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>Each menu item specifies a color, <ph id="ph1">`menuItemRed`</ph>, <ph id="ph2">`menuItemGreen`</ph>, or <ph id="ph3">`menuItemBlue`</ph>.</source>
          <target state="translated">각 메뉴 항목 색을 지정 <ph id="ph1">`menuItemRed`</ph>, <ph id="ph2">`menuItemGreen`</ph>, 또는 <ph id="ph3">`menuItemBlue`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>The event handler determines which menu item was clicked, places a checkmark to the selected menu item, and changes the text color of the form's <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control, named <ph id="ph2">`textBox1`</ph>.</source>
          <target state="translated">이벤트 처리기는 메뉴 항목을 클릭 한를 확인, 선택한 메뉴 항목에 확인 표시 및 폼의 텍스트 색을 변경 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 라는 컨트롤 <ph id="ph2">`textBox1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.RadioCheck%2A&gt;</ph> property to demonstrate how a radio-button check is used to show menu items that are mutually exclusive.</source>
          <target state="translated">또한이 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.RadioCheck%2A&gt;</ph> 속성을 라디오 단추 확인을 함께 사용할 수 없는 메뉴 항목을 표시 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.RadioCheck">
          <source>This example requires that the <ph id="ph1">&lt;xref:System.Drawing?displayProperty=nameWithType&gt;</ph> namespace has been added to the form that contains this code.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Drawing?displayProperty=nameWithType&gt;</ph> 네임 스페이스가이 코드를 포함 하는 폼에 추가 되었습니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>Occurs when the user places the pointer over a menu item.</source>
          <target state="translated">메뉴 항목 위에 포인터를 놓으면 발생합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>This event is typically raised when the user places the mouse pointer over the menu item.</source>
          <target state="translated">이 이벤트는 일반적으로 메뉴 항목 위로 마우스 포인터를 놓으면 발생 됩니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>The event can also be raised when the user highlights a menu item using the keyboard by scrolling to the menu item with the arrow keys.</source>
          <target state="translated">또한 메뉴 항목으로 화살표 키를 가진 스크롤하면 키보드를 사용 하 여 메뉴 항목을 강조 표시할 때이 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>You can use this event to display a detailed help string pertaining to this menu item in an application's status bar.</source>
          <target state="translated">응용 프로그램의 상태 표시줄에서이 메뉴 항목에 대 한 자세한 도움말 문자열을 표시 하려면이 이벤트를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt;</ph> property for the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> contains any items, this event is not raised.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.Menu.MenuItems%2A&gt;</ph> 속성에 대 한는 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 모든 항목이 포함 된이 이벤트가 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>This event is not raised for parent menu items.</source>
          <target state="translated">부모 메뉴 항목에 대해서는이 이벤트가 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> class to assign help text to a <ph id="ph3">&lt;xref:System.Windows.Forms.StatusBarPanel&gt;</ph> of a <ph id="ph4">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Select&gt;</ph> 의 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 도움말 텍스트를 할당 하는 클래스는 <ph id="ph3">&lt;xref:System.Windows.Forms.StatusBarPanel&gt;</ph> 의 <ph id="ph4">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>This example requires that <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects named <ph id="ph2">`menuOpen`</ph>, <ph id="ph3">`menuSave`</ph>, and <ph id="ph4">`menuExit`</ph> are added to a <ph id="ph5">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> control on a form.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 개체의 명명 된 <ph id="ph2">`menuOpen`</ph>, <ph id="ph3">`menuSave`</ph>, 및 <ph id="ph4">`menuExit`</ph> 에 추가 되는 <ph id="ph5">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> 양식에 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>The example also requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> control, named <ph id="ph2">`statusBar1`</ph> has been added to the form.</source>
          <target state="translated">이 예제에서는 필요는 <ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> 라는 컨트롤 <ph id="ph2">`statusBar1`</ph> 폼에 추가 되었습니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.MenuItem.Select">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> control should contain a <ph id="ph2">&lt;xref:System.Windows.Forms.StatusBarPanel&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> 컨트롤 있어야는 <ph id="ph2">&lt;xref:System.Windows.Forms.StatusBarPanel&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Shortcut">
          <source>Gets or sets a value indicating the shortcut key associated with the menu item.</source>
          <target state="translated">메뉴 항목과 연결된 바로 가기 키를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Shortcut">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Shortcut" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Shortcut" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Shortcut">
          <source>The default is <ph id="ph1">&lt;see langword="Shortcut.None" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="Shortcut.None" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Shortcut">
          <source>Shortcut keys provide a method for users to activate frequently used menu items in your menu system and to provide keyboard access to your application for those users who do not have access to a mouse or other pointer device.</source>
          <target state="translated">사용자가 자주 활성화에 대 한 메서드 마우스 또는 다른 포인터 장치에 대 한 액세스를 갖고 있지 않은 사용자에 대 한 응용 프로그램에 대 한 키보드 액세스를 제공 하 고 메뉴 시스템에서 메뉴 항목 사용 되는 바로 가기 키를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Shortcut">
          <source>The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</source>
          <target state="translated">다음 코드 예제에서는 메뉴 항목을 만드는, 캡션을 설정, 할당에 바로 가기 키, 메뉴 항목을 보이도록 하 고 메뉴 항목에 대 한 바로 가기 키 표시를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Shortcut">
          <source>The example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> has been created that is named <ph id="ph2">`menuItem1`</ph>.</source>
          <target state="translated">예제를 실행 하려면 한 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 즉 만들어진 것 이라는 <ph id="ph2">`menuItem1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Shortcut">
          <source>The assigned value is not one of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Shortcut" /&gt;</ph> values.</source>
          <target state="translated">할당된 값이 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Shortcut" /&gt;</ph> 값 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.ShowShortcut">
          <source>Gets or sets a value indicating whether the shortcut key that is associated with the menu item is displayed next to the menu item caption.</source>
          <target state="translated">메뉴 항목과 연결된 바로 가기 키가 메뉴 항목 캡션 옆에 표시되는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.ShowShortcut">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the shortcut key combination is displayed next to the menu item caption; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the shortcut key combination is not to be displayed.</source>
          <target state="translated">바로 가기 키 조합이 메뉴 항목 캡션 옆에 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 바로 가기 키 조합이 표시되지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.ShowShortcut">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.ShowShortcut">
          <source>You can use this property to provide the option for users to hide shortcuts from menus to conserve menu space or to hide a shortcut key from being displayed.</source>
          <target state="translated">사용자가 메뉴에서 옵션 메뉴 공간을 절약 하거나 바로 가기 키 표시 되지 않도록 숨기려면 수 있도록이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.ShowShortcut">
          <source>The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</source>
          <target state="translated">다음 코드 예제에서는 메뉴 항목을 만드는, 캡션을 설정, 할당에 바로 가기 키, 메뉴 항목을 보이도록 하 고 메뉴 항목에 대 한 바로 가기 키 표시를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.ShowShortcut">
          <source>The example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> has been created that is named <ph id="ph2">`menuItem1`</ph>.</source>
          <target state="translated">예제를 실행 하려면 한 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 즉 만들어진 것 이라는 <ph id="ph2">`menuItem1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Text">
          <source>Gets or sets a value indicating the caption of the menu item.</source>
          <target state="translated">메뉴 항목의 캡션을 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Text">
          <source>The text caption of the menu item.</source>
          <target state="translated">메뉴 항목의 텍스트 캡션입니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Text">
          <source>When you specify a caption for your menu item, you can also specify an access key by placing an '&amp;' before the character to be used as the access key.</source>
          <target state="translated">메뉴 항목에 대 한 캡션을 지정 하는 경우에 앞에 '&amp;' 선택 키로 사용할 문자를 배치 하 여 선택 키를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Text">
          <source>For example, to specify the "F" in "File" as an access key, you would specify the caption for the menu item as "&amp;File".</source>
          <target state="translated">예를 들어 "File"의 "F"가 선택 키를 지정 하려면 사용자는으로 메뉴 항목에 대 한 캡션을 지정 "&amp; 파일"입니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Text">
          <source>You can use this feature to provide keyboard navigation for your menus.</source>
          <target state="translated">메뉴에 대 한 키보드 탐색을 제공 하려면이 기능을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Text">
          <source>Setting this property to "<ph id="ph1">`-`</ph>" causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</source>
          <target state="translated">이 속성을 "<ph id="ph1">`-`</ph>" 표준 메뉴 항목 대신 구분 기호 (가로 선)으로 표시 될 메뉴 항목을 발생 합니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Text">
          <source>The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</source>
          <target state="translated">다음 코드 예제에서는 메뉴 항목을 만드는, 캡션을 설정, 할당에 바로 가기 키, 메뉴 항목을 보이도록 하 고 메뉴 항목에 대 한 바로 가기 키 표시를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Text">
          <source>The example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> has been created that is named <ph id="ph2">`menuItem1`</ph>.</source>
          <target state="translated">예제를 실행 하려면 한 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 즉 만들어진 것 이라는 <ph id="ph2">`menuItem1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.ToString">
          <source>Returns a string that represents the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>를 나타내는 문자열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.ToString">
          <source>A string that represents the current <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuItem" /&gt;</ph>을(를) 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.MenuItem.ToString">
          <source>The string includes the type and the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.MenuItem.Text" /&gt;</ph> property of the control.</source>
          <target state="translated">문자열에는 컨트롤의 형식과 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.MenuItem.Text" /&gt;</ph> 속성이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.MenuItem.Visible">
          <source>Gets or sets a value indicating whether the menu item is visible.</source>
          <target state="translated">메뉴 항목이 표시되는지를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Visible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the menu item will be made visible on the menu; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 메뉴 항목이 메뉴에 표시되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Visible">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Visible">
          <source>You can use this property to modify a menu structure without having to merge menus or disable menus.</source>
          <target state="translated">메뉴를 병합 하거나 메뉴를 사용 하지 않도록 설정할 필요 없이 메뉴 구조를 수정 하려면이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Visible">
          <source>For example, if you want to hide a complete section of functionality from the menus for your application, you can hide them from the user by setting this property to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">예를 들어 응용 프로그램에 대 한 메뉴에서 기능의 전체 섹션 숨기려는 경우 숨길 수 있습니다 이러한 사용자 로부터이 속성을 설정 하 여 <ph id="ph1">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Visible">
          <source>The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item.</source>
          <target state="translated">다음 코드 예제에서는 메뉴 항목을 만드는, 캡션을 설정, 할당에 바로 가기 키, 메뉴 항목을 보이도록 하 고 메뉴 항목에 대 한 바로 가기 키 표시를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.MenuItem.Visible">
          <source>The example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> has been created that is named <ph id="ph2">`menuItem1`</ph>.</source>
          <target state="translated">예제를 실행 하려면 한 <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> 즉 만들어진 것 이라는 <ph id="ph2">`menuItem1`</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>