<Type Name="DragEventHandler" FullName="System.Windows.Forms.DragEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="49bd9af41a6cc3e2898dbc8ab4b2e6db9532cb7a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30638687" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void DragEventHandler(object sender, DragEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DragEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DragEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DragEventHandler(sender As Object, e As DragEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DragEventHandler(System::Object ^ sender, DragEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Forms.DragEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="75e0a-101">이벤트 소스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="75e0a-101">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="75e0a-102">이벤트 데이터를 포함하는 <see cref="T:System.Windows.Forms.DragEventArgs" />입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="75e0a-102">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="75e0a-103">
        <see cref="E:System.Windows.Forms.Control.DragDrop" />의 <see cref="E:System.Windows.Forms.Control.DragEnter" />, <see cref="E:System.Windows.Forms.Control.DragOver" /> 또는 <see cref="T:System.Windows.Forms.Control" /> 이벤트를 처리할 메서드를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="75e0a-103">Represents the method that will handle the <see cref="E:System.Windows.Forms.Control.DragDrop" />, <see cref="E:System.Windows.Forms.Control.DragEnter" />, or <see cref="E:System.Windows.Forms.Control.DragOver" /> event of a <see cref="T:System.Windows.Forms.Control" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75e0a-104"><xref:System.Windows.Forms.DragEventHandler> 대리자를 만들 때, 이벤트를 처리할 메서드를 식별합니다.</span><span class="sxs-lookup"><span data-stu-id="75e0a-104">When you create a <xref:System.Windows.Forms.DragEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="75e0a-105">이벤트를 이벤트 처리기와 연결하려면 대리자의 인스턴스를 해당 이벤트에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="75e0a-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="75e0a-106">대리자를 제거하지 않는 경우 이벤트가 발생할 때마다 이벤트 처리기가 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="75e0a-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="75e0a-107">대리자와 이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 [이벤트 처리 및 발생](~/docs/standard/events/index.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75e0a-107">For more information about handling events with delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75e0a-108">다음 예제에서는 두 끌어서 놓기 작업 <xref:System.Windows.Forms.ListBox> 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="75e0a-108">The following example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="75e0a-109">예제에서는 호출은 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 끌기 작업이 시작 될 때 메서드.</span><span class="sxs-lookup"><span data-stu-id="75e0a-109">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="75e0a-110">마우스를 이동 하는 경우 끌기 작업이 시작 이상 <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> 하는 동안 마우스 위치에서의 <xref:System.Windows.Forms.Control.MouseDown> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75e0a-110">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="75e0a-111"><xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> 메서드 결정 하는 동안 끌어 항목의 인덱스를 사용 하는 `MouseDown` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75e0a-111">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="75e0a-112">또한이 예제에서는 끌어서 놓기 작업에 대 한 사용자 지정 커서를 사용 하 여 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="75e0a-112">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="75e0a-113">이 예에서는 두 가정 커서 파일 `3dwarro.cur` 및 `3dwno.cur`, 사용자 지정 끌어서에 대 한 응용 프로그램 디렉터리에 있으면 놓기-커서, 각각.</span><span class="sxs-lookup"><span data-stu-id="75e0a-113">The example assumes that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="75e0a-114">사용자 지정 커서 사용 하는 경우는 `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> 을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="75e0a-114">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="75e0a-115">에 설정 된 사용자 지정 커서는 <xref:System.Windows.Forms.Control.GiveFeedback> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="75e0a-115">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="75e0a-116">키보드 상태에서 평가 됩니다는 <xref:System.Windows.Forms.Control.DragOver> 오른쪽에 대 한 이벤트 처리기 `ListBox`항목 끌기 작업을 결정 하는, SHIFT, CTRL 및 ALT, CTRL + ALT 키의 상태를 기반 합니다.</span><span class="sxs-lookup"><span data-stu-id="75e0a-116">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="75e0a-117">위치는 `ListBox` 삭제가 발생 중도 결정 됩니다는 `DragOver` 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75e0a-117">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="75e0a-118">삭제할 데이터가 아닌 경우는 `String`, 하면 <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> 로 설정 된 <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="75e0a-118">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="75e0a-119">드롭다운 상태에 표시 되는 마지막으로,는 `DropLocationLabel` <xref:System.Windows.Forms.Label>합니다.</span><span class="sxs-lookup"><span data-stu-id="75e0a-119">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="75e0a-120">데이터를 오른쪽에 대 한 drop `ListBox` 에 따라 결정 됩니다는 <xref:System.Windows.Forms.Control.DragDrop> 이벤트 처리기 및 `String` 적절 한 위치에서 값이 추가 `ListBox`합니다.</span><span class="sxs-lookup"><span data-stu-id="75e0a-120">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="75e0a-121">끌기 작업, 폼의 경계를 벗어나면 경우에서 끌어서 놓기 작업이 취소 되 고 <xref:System.Windows.Forms.Control.QueryContinueDrag> 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="75e0a-121">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="75e0a-122">인용 된이 코드를 사용 하 여 보여 줍니다.는 <xref:System.Windows.Forms.DragEventHandler> 대리자는 <xref:System.Windows.Forms.Control.DragOver> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="75e0a-122">This code excerpt demonstrates using the <xref:System.Windows.Forms.DragEventHandler> delegate with the <xref:System.Windows.Forms.Control.DragOver> event.</span></span> <span data-ttu-id="75e0a-123">참조는 <xref:System.Windows.Forms.Control.DoDragDrop%2A> 전체 코드 예제에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="75e0a-123">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragOver" />
    <altmember cref="T:System.Windows.Forms.DragEventArgs" />
  </Docs>
</Type>