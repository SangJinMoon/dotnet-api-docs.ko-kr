<Type Name="WindowsFormsSynchronizationContext" FullName="System.Windows.Forms.WindowsFormsSynchronizationContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="79055ce2d7e343dfc46d75fff1e02983c1c1d90f" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51891629" /></Metadata><TypeSignature Language="C#" Value="public sealed class WindowsFormsSynchronizationContext : System.Threading.SynchronizationContext, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WindowsFormsSynchronizationContext extends System.Threading.SynchronizationContext implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.WindowsFormsSynchronizationContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WindowsFormsSynchronizationContext&#xA;Inherits SynchronizationContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsFormsSynchronizationContext sealed : System::Threading::SynchronizationContext, IDisposable" />
  <TypeSignature Language="F#" Value="type WindowsFormsSynchronizationContext = class&#xA;    inherit SynchronizationContext&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Threading.SynchronizationContext</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="88e7c-101">Windows Forms 응용 프로그램 모델에 대 한 동기화 컨텍스트를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-101">Provides a synchronization context for the Windows Forms application model.</span></span></summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Threading.SynchronizationContext" />
    <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3"><span data-ttu-id="88e7c-102">이벤트 기반 비동기 패턴 개요</span><span class="sxs-lookup"><span data-stu-id="88e7c-102">Event-based Asynchronous Pattern Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsFormsSynchronizationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsFormsSynchronizationContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="88e7c-103"><see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-103">Initializes a new instance of the <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Threading.SynchronizationContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3"><span data-ttu-id="88e7c-104">이벤트 기반 비동기 패턴 개요</span><span class="sxs-lookup"><span data-stu-id="88e7c-104">Event-based Asynchronous Pattern Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AutoInstall">
      <MemberSignature Language="C#" Value="public static bool AutoInstall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoInstall" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.WindowsFormsSynchronizationContext.AutoInstall" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoInstall As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoInstall { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoInstall : bool with get, set" Usage="System.Windows.Forms.WindowsFormsSynchronizationContext.AutoInstall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88e7c-105">나타내는 값을 가져오거나 여부는 <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> 컨트롤을 만들 때 설치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-105">Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> is installed when a control is created.</span></span></summary>
        <value><span data-ttu-id="88e7c-106"><see langword="true" /> 경우는 <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> 이 고, 그렇지 않으면 설치 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-106"><see langword="true" /> if the <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> is installed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="88e7c-107">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-107">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e7c-108">합니다 <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.AutoInstall%2A> 속성에 따라 결정 하는지 여부를 <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> 컨트롤을 만들 때 또는 메시지 루프가 시작 될 때 설치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-108">The <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.AutoInstall%2A> property determines whether the <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> is installed when a control is created, or when a message loop is started.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.SynchronizationContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3"><span data-ttu-id="88e7c-109">이벤트 기반 비동기 패턴 개요</span><span class="sxs-lookup"><span data-stu-id="88e7c-109">Event-based Asynchronous Pattern Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public override System.Threading.SynchronizationContext CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.SynchronizationContext CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateCopy () As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::SynchronizationContext ^ CreateCopy();" />
      <MemberSignature Language="F#" Value="abstract member CreateCopy : unit -&gt; System.Threading.SynchronizationContext&#xA;override this.CreateCopy : unit -&gt; System.Threading.SynchronizationContext" Usage="windowsFormsSynchronizationContext.CreateCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="88e7c-110">동기화 컨텍스트를 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-110">Copies the synchronization context.</span></span></summary>
        <returns><span data-ttu-id="88e7c-111">동기화 컨텍스트의 복사본입니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-111">A copy of the synchronization context.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Threading.SynchronizationContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3"><span data-ttu-id="88e7c-112">이벤트 기반 비동기 패턴 개요</span><span class="sxs-lookup"><span data-stu-id="88e7c-112">Event-based Asynchronous Pattern Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="windowsFormsSynchronizationContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="88e7c-113"><see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" />에서 사용하는 모든 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-113">Releases all resources used by the <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e7c-114"><xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A> 사용을 마치면 <xref:System.Windows.Forms.WindowsFormsSynchronizationContext>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-114">Call <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A> when you are finished using the <xref:System.Windows.Forms.WindowsFormsSynchronizationContext>.</span></span> <span data-ttu-id="88e7c-115"><xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A> 메서드를 사용하면 <xref:System.Windows.Forms.WindowsFormsSynchronizationContext>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-115">The <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A> method leaves the <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> in an unusable state.</span></span> <span data-ttu-id="88e7c-116">호출한 후 <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A>에 대 한 모든 참조를 해제 해야 합니다 <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-116">After calling <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A>, you must release all references to the <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> so the garbage collector can reclaim the memory that the <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> was occupying.</span></span> <span data-ttu-id="88e7c-117">자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-117">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="88e7c-118"><xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Windows.Forms.WindowsFormsSynchronizationContext>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="88e7c-118">Always call <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose%2A> before you release your last reference to the <xref:System.Windows.Forms.WindowsFormsSynchronizationContext>.</span></span> <span data-ttu-id="88e7c-119">이렇게 하지 않으면 가비지 수집기가 <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-119">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public override void Post (System.Threading.SendOrPostCallback d, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Post(class System.Threading.SendOrPostCallback d, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Post (d As SendOrPostCallback, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Post(System::Threading::SendOrPostCallback ^ d, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Post : System.Threading.SendOrPostCallback * obj -&gt; unit&#xA;override this.Post : System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="windowsFormsSynchronizationContext.Post (d, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="88e7c-120">호출할 <see cref="T:System.Threading.SendOrPostCallback" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-120">The <see cref="T:System.Threading.SendOrPostCallback" /> delegate to call.</span></span></param>
        <param name="state"><span data-ttu-id="88e7c-121">대리자에 전달된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-121">The object passed to the delegate.</span></span></param>
        <summary><span data-ttu-id="88e7c-122">동기화 컨텍스트에 비동기 메시지를 디스패치합니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-122">Dispatches an asynchronous message to a synchronization context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e7c-123"><xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Post%2A> 메서드는 메시지를 게시 하려면 비동기 요청을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-123">The <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Post%2A> method starts an asynchronous request to post a message.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.SynchronizationContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3"><span data-ttu-id="88e7c-124">이벤트 기반 비동기 패턴 개요</span><span class="sxs-lookup"><span data-stu-id="88e7c-124">Event-based Asynchronous Pattern Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public override void Send (System.Threading.SendOrPostCallback d, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Send(class System.Threading.SendOrPostCallback d, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Send (d As SendOrPostCallback, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Send(System::Threading::SendOrPostCallback ^ d, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Send : System.Threading.SendOrPostCallback * obj -&gt; unit&#xA;override this.Send : System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="windowsFormsSynchronizationContext.Send (d, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="88e7c-125">호출할 <see cref="T:System.Threading.SendOrPostCallback" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-125">The <see cref="T:System.Threading.SendOrPostCallback" /> delegate to call.</span></span></param>
        <param name="state"><span data-ttu-id="88e7c-126">대리자에 전달된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-126">The object passed to the delegate.</span></span></param>
        <summary><span data-ttu-id="88e7c-127">동기화 컨텍스트에 동기 메시지를 발송합니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-127">Dispatches a synchronous message to a synchronization context</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e7c-128">대상 스레드가 더 이상 없으면 값 또는 해당 <xref:System.Threading.Thread.IsAlive%2A?displayProperty=nameWithType> 속성은 `false`의 <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Send%2A> 메서드를 발생 시킵니다는 <xref:System.ComponentModel.InvalidAsynchronousStateException>합니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-128">If the destination thread no longer exists or the value of its <xref:System.Threading.Thread.IsAlive%2A?displayProperty=nameWithType> property is `false`, the <xref:System.Windows.Forms.WindowsFormsSynchronizationContext.Send%2A> method raises an <xref:System.ComponentModel.InvalidAsynchronousStateException>.</span></span> <span data-ttu-id="88e7c-129">더 이상 수행할 작업을 확인 하려면 호출자가 것입니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-129">It is up to the caller to determine what further action to take.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidAsynchronousStateException"><span data-ttu-id="88e7c-130">대상 스레드가 더 이상 없습니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-130">The destination thread no longer exists.</span></span></exception>
        <altmember cref="T:System.Threading.SynchronizationContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3"><span data-ttu-id="88e7c-131">이벤트 기반 비동기 패턴 개요</span><span class="sxs-lookup"><span data-stu-id="88e7c-131">Event-based Asynchronous Pattern Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public static void Uninstall ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Uninstall() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.WindowsFormsSynchronizationContext.Uninstall" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Uninstall ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Uninstall();" />
      <MemberSignature Language="F#" Value="static member Uninstall : unit -&gt; unit" Usage="System.Windows.Forms.WindowsFormsSynchronizationContext.Uninstall " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="88e7c-132">현재 설치 된 제거 <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> 하 여 이전에 설치 된 컨텍스트로 바꿉니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-132">Uninstalls the currently installed <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> and replaces it with the previously installed context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88e7c-133">하는 경우 이전에 설치한 <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> 됩니다 `null`, 현재 컨텍스트가 설정 되어 `null`입니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-133">If the previously installed <xref:System.Windows.Forms.WindowsFormsSynchronizationContext> is `null`, the current context is set to `null`.</span></span>  
  
 <span data-ttu-id="88e7c-134">현재 설치 된 동기화 컨텍스트가 없는 경우는 <xref:System.Windows.Forms.WindowsFormsSynchronizationContext>,이 메서드는 아무 작업도 수행 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="88e7c-134">If the currently installed synchronization context is not a <xref:System.Windows.Forms.WindowsFormsSynchronizationContext>, this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.SynchronizationContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3"><span data-ttu-id="88e7c-135">이벤트 기반 비동기 패턴 개요</span><span class="sxs-lookup"><span data-stu-id="88e7c-135">Event-based Asynchronous Pattern Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>