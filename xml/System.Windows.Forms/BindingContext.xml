<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BindingContext.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57f935ad4f128f1d088c8380de5dd130a9565c06d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f935ad4f128f1d088c8380de5dd130a9565c06d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.BindingContext">
          <source>Manages the collection of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph> objects for any object that inherits from the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph> 클래스에서 상속되는 모든 개체에 대해 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph> 개체의 컬렉션을 관리합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>Each Windows Form has at least one <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> object that manages the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> objects for the form.</source>
          <target state="translated">각 Windows Form에 하나 이상의 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> 개체를 관리 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 폼에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> class is abstract, the return type of the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt;</ph> property is either a <ph id="ph3">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> or a <ph id="ph4">&lt;xref:System.Windows.Forms.PropertyManager&gt;</ph>.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 클래스는 추상 클래스의 반환 형식은 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt;</ph> 속성이 <ph id="ph3">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Windows.Forms.PropertyManager&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>If the data source is an object that can return only a single property (instead of a list of objects), the <ph id="ph1">&lt;xref:System.Type&gt;</ph> is a <ph id="ph2">&lt;xref:System.Windows.Forms.PropertyManager&gt;</ph>.</source>
          <target state="translated">데이터 원본이 있으면 목록 개체), (대신 하나의 속성만 반환할 수 있는 개체는 <ph id="ph1">&lt;xref:System.Type&gt;</ph> 는 <ph id="ph2">&lt;xref:System.Windows.Forms.PropertyManager&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>For example, if you specify a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> as the data source, a <ph id="ph2">&lt;xref:System.Windows.Forms.PropertyManager&gt;</ph> is returned.</source>
          <target state="translated">예를 들어, 지정 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 데이터 원본으로는 <ph id="ph2">&lt;xref:System.Windows.Forms.PropertyManager&gt;</ph> 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>On the other hand, if the data source is an object that implements <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> or <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList&gt;</ph>, a <ph id="ph3">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> is returned.</source>
          <target state="translated">반대로, 구현 하는 개체 데이터 원본이 경우 <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>For each data source on a Windows Form, there is a single <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.PropertyManager&gt;</ph>.</source>
          <target state="translated">Windows Form에 각 데이터 원본에 대해이 단일 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.PropertyManager&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>Because there may be multiple data sources associated with a Windows Form, the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> enables you to retrieve any particular <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> associated with a data source.</source>
          <target state="translated">Windows Form와 관련 된 여러 데이터 원본 수 있기 때문에 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> 특정을 검색할 수 있도록 <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 데이터 원본에 연결 된입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>When using the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> creates a new <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> if one does not already exist.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> 새 <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 아직 없는 경우.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>This can lead to some confusion, as the returned object may not manage the list (or any list) that you intend.</source>
          <target state="translated">이 목록 (또는 목록)에 반환 된 개체를 관리 하지 못할 수도 처럼 일부 혼란이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>To prevent returning an invalid <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext.Contains%2A&gt;</ph> method to determine if the intended <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> already exists.</source>
          <target state="translated">잘못 된 반환 하지 않도록 하려면 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph>, 사용 하 여는 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext.Contains%2A&gt;</ph> 여부를 확인 하는 메서드를 의도 된 <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 이미 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>If you use a container control, such as a <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>, to contain data-bound controls, you can create a <ph id="ph4">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> for just that container control and its controls.</source>
          <target state="translated">와 같은 컨테이너 컨트롤을 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Panel&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Windows.Forms.TabControl&gt;</ph>, 데이터 바인딩된 컨트롤을 포함 하도록 만들 수 있습니다는 <ph id="ph4">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> 방금 해당 컨테이너 컨트롤과 해당 컨트롤에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>Then, each part of your form can be managed by its own <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph>.</source>
          <target state="translated">그런 다음 폼의 각 부분 관리할 수 있습니다는 자체 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.%23ctor%2A&gt;</ph> constructor for more information about creating multiple <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> objects for the same data source.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.%23ctor%2A&gt;</ph> 여러 개 만드는 방법에 대 한 자세한 내용은 생성자 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 동일한 데이터 원본에 대 한 개체입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>If you add a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control to a form and bind it to a column of a table in a dataset, the control communicates with the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> of that form.</source>
          <target state="translated">추가 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 컨트롤을 폼과 bind와 통신 하는 데이터 집합, 컨트롤에에서 있는 테이블의 열에는 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> 양식을 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph>, in turn, talks to the specific <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> for that data association.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph>, 통신 특정 <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 해당 데이터 연결 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>If you queried the <ph id="ph1">`Position`</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph>, it would report the current record for the binding of that <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">쿼리하면는 <ph id="ph1">`Position`</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph>, 해당 바인딩에 대 한 현재 레코드를 보고 합니다 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>In the following code example, a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control is bound to the <ph id="ph2">`FirstName`</ph> column of a <ph id="ph3">`Customers`</ph> table on the <ph id="ph4">`dataSet1`</ph> dataset through the <ph id="ph5">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> for the form it is on.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 컨트롤이 바인딩되는 <ph id="ph2">`FirstName`</ph> 의 열은 <ph id="ph3">`Customers`</ph> 테이블에 <ph id="ph4">`dataSet1`</ph> 를 통해 데이터 집합의 <ph id="ph5">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> 는 폼에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>You can add a second <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control (<ph id="ph2">`TextBox2`</ph>) to the form and bind it to the <ph id="ph3">`LastName`</ph> column of the <ph id="ph4">`Customers`</ph> table in the same dataset.</source>
          <target state="translated">초를 추가할 수 있습니다 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 컨트롤 (<ph id="ph2">`TextBox2`</ph>)를 폼에 바인딩합니다는 <ph id="ph3">`LastName`</ph> 의 열은 <ph id="ph4">`Customers`</ph> 동일한 데이터 집합의 테이블입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> is aware of the first binding (<ph id="ph2">`TextBox1`</ph> to <ph id="ph3">`Customers.FirstName`</ph>), so it would use the same <ph id="ph4">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph>, as both text boxes are bound to the same dataset (<ph id="ph5">`DataSet1`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> 첫 번째 바인딩 인식 (<ph id="ph2">`TextBox1`</ph> 를 <ph id="ph3">`Customers.FirstName`</ph>) 이므로 동일한 사용 한다는 <ph id="ph4">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph>와 텍스트 상자를 모두 동일한 데이터 집합에 바인딩됩니다 (<ph id="ph5">`DataSet1`</ph>).</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>If you bind <ph id="ph1">`TextBox2`</ph> to a different dataset, the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> creates and manages a second <ph id="ph3">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph>.</source>
          <target state="translated">바인딩하는 경우 <ph id="ph1">`TextBox2`</ph> 인 다른 데이터 집합의 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> 작성 하 고 두 번째 관리 <ph id="ph3">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>It is important to be consistent about how you set the <ph id="ph1">&lt;xref:System.Windows.Forms.ListControl.DataSource%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ListControl.DisplayMember%2A&gt;</ph> properties; otherwise, the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> creates multiple currency managers for the same dataset, which results in errors.</source>
          <target state="translated">설정 하는 방법에 대 한 일관성을 유지 해야는 <ph id="ph1">&lt;xref:System.Windows.Forms.ListControl.DataSource%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Forms.ListControl.DisplayMember%2A&gt;</ph> 속성, 그렇지 않으면는 <ph id="ph3">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> 여러 통화 오류가 발생할 동일한 데이터 집합에 대 한 관리자를 만듭니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>The following code example shows a few ways to set the properties and their associated <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> objects.</source>
          <target state="translated">다음 코드 예제에서는 속성 및 이와 관련 된 설정 하는 몇 가지 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>You can set the properties using either of the following methods, as long as you are consistent throughout your code.</source>
          <target state="translated">코드 전반에 일관성이으로 다음 방법 중 하나를 사용 하 여 속성을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>Most Windows Forms applications bind through a <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph>.</source>
          <target state="translated">대부분의 Windows Forms 응용 프로그램을 통해 바인딩하는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component encapsulates a <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> and exposes the <ph id="ph3">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> programming interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> 구성 요소를 캡슐화 한 <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 노출는 <ph id="ph3">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 프로그래밍 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>When using a <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> for binding, you should use the members exposed by the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> to manipulate "currency" (that is, <ph id="ph3">`Position`</ph>) rather than go through the <ph id="ph4">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph>.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> 바인딩에 의해 노출 되는 멤버를 사용 해야는 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> "currency" 조작할 수 (즉, <ph id="ph3">`Position`</ph>) 수행 하지 않고는 <ph id="ph4">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>The following code example creates four <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> objects to bind five controls—a <ph id="ph2">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> and four <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls—to several data sources.</source>
          <target state="translated">다음 코드 예제에서는 네 개를 만듭니다 <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> 다섯 개의 컨트롤을 바인딩하는 개체-는 <ph id="ph2">&lt;xref:System.Windows.Forms.DateTimePicker&gt;</ph> 4 <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 컨트롤-여러 개의 데이터 원본에 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.BindingContext">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> is then used to get the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> for each data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> 다음 얻는 데 사용 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 각 데이터 원본에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.#ctor">
          <source>If you want to have multiple <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> instances for the same data source, create a new <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> and set it to the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> property of an object that inherits from the <ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph> class.</source>
          <target state="translated">여러 개 원하는 경우 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 동일한 데이터 원본에 대 한 인스턴스를 새로 만듭니다. <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> 로 설정 하 고는 <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> 에서 상속 되는 개체의 속성은 <ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.#ctor">
          <source>For example, if you have two <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> objects (from two different <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> objects), you can set the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</ph> properties of each <ph id="ph4">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> to different values.</source>
          <target state="translated">예를 들어 있는 경우 두 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 개체 (에서 서로 다른 두 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> 개체)를 설정할 수 있습니다는 <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</ph> 각 <ph id="ph4">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 서로 다른 값으로.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.#ctor">
          <source>This causes each set of data-bound controls to display different values from the same data source.</source>
          <target state="translated">이렇게 하면 각 데이터 바인딩된 컨트롤 집합을 같은 데이터 원본에서 다른 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.#ctor">
          <source>The following code example creates two new <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> objects and assigns each object to the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 두 개의 새 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> 에 각 개체를 할당 및 개체는 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.#ctor">
          <source><ph id="ph1">`GroupBox1`</ph> contains <ph id="ph2">`TextBox1`</ph>, and <ph id="ph3">`GroupBox2`</ph> contains <ph id="ph4">`TextBox2`</ph> (which is accomplished by using the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A&gt;</ph> method of the <ph id="ph6">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> class).</source>
          <target state="translated"><ph id="ph1">`GroupBox1`</ph> 포함 <ph id="ph2">`TextBox1`</ph>, 및 <ph id="ph3">`GroupBox2`</ph> 포함 <ph id="ph4">`TextBox2`</ph> (사용 하 여 수행 되는 <ph id="ph5">&lt;xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A&gt;</ph> 의 메서드는 <ph id="ph6">&lt;xref:System.Windows.Forms.Control.ControlCollection&gt;</ph> 클래스).</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.#ctor">
          <source>The example then adds <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> objects to the two <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls, binding each to the same data source and data member.</source>
          <target state="translated">이 예에서는 다음 추가 <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> 개체를 두 개의 <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 컨트롤을 동일한 데이터 원본 및 데이터 멤버에 각각 바인딩.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.#ctor">
          <source>The example also shows two event handlers that use the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> from the <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> controls to set the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</ph> property on different <ph id="ph4">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> objects.</source>
          <target state="translated">또한이 예제에서는 사용 하는 두 명의 이벤트 처리기는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> 에서 <ph id="ph2">&lt;xref:System.Windows.Forms.GroupBox&gt;</ph> 설정 하는 컨트롤이 <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</ph> 속성을 다른 <ph id="ph4">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 개체.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>와 연결된 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph> to add.</source>
          <target state="translated">추가할 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.Add(System.Object,System.Windows.Forms.BindingManagerBase)">
          <source>Adds the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph> associated with a specific data source to the collection.</source>
          <target state="translated">특정 데이터 소스와 연관된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>를 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)">
          <source>The object associated with the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>와 관련된 개체입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph> to add.</source>
          <target state="translated">추가할 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)">
          <source>Adds the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph> associated with a specific data source to the collection.</source>
          <target state="translated">특정 데이터 소스와 연관된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>를 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)">
          <source><ph id="ph1">&lt;paramref name="dataSource" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dataSource" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.AddCore(System.Object,System.Windows.Forms.BindingManagerBase)">
          <source><ph id="ph1">&lt;paramref name="listManager" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="listManager" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.Clear">
          <source>Clears the collection of any <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph> 개체의 컬렉션을 지웁니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.ClearCore">
          <source>Clears the collection.</source>
          <target state="translated">컬렉션을 지웁니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.BindingContext.CollectionChanged">
          <source>Always raises a <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph> when handled.</source>
          <target state="translated">처리될 때 항상 <ph id="ph1">&lt;see cref="T:System.NotImplementedException" /&gt;</ph>을 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.BindingContext.CollectionChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.CollectionChanged&gt;</ph> event is obsolete and always raises a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> when handled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.CollectionChanged&gt;</ph> 이벤트 사용 되지 않으며 항상는 <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> 처리 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.BindingContext.CollectionChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">이벤트를 처리 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.BindingContext.CollectionChanged">
          <source>Occurs in all cases.</source>
          <target state="translated">모든 경우에 발생합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.BindingContext">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> contains the specified <ph id="ph2">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph>에 지정한 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>가 포함되는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.Contains(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the data source.</source>
          <target state="translated">데이터 소스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.Contains(System.Object)">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> contains the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph> associated with the specified data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph>에 지정한 데이터 소스와 관련된 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>가 포함되어 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> contains the specified <ph id="ph3">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph>에 지정된 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.Contains(System.Object)">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> class for a list of possible data sources and information about creating bindings between controls and data sources.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> 가능한 데이터 원본 및 컨트롤을 데이터 소스에 바인딩하는 방법에 대 한 정보는 목록에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.Contains(System.Object)">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt;</ph> property for information about returning a <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> using only a data source.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt;</ph> 반환에 대 한 정보를 보려면 속성은 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 데이터 소스만 사용 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.Contains(System.Object)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Contains%2A&gt;</ph> method to determine whether a <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> exists for each control on a form.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Contains%2A&gt;</ph> 확인할 수 있는 방법은 여부는 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 폼에 있는 각 컨트롤에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.Contains(System.Object)">
          <source>The example passes each <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> in a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> to the method.</source>
          <target state="translated">각 전달 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> 메서드에 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.Contains(System.Object,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the data source.</source>
          <target state="translated">데이터 소스를 나타내는 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.Contains(System.Object,System.String)">
          <source>The information needed to resolve to a specific <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>.</source>
          <target state="translated">특정 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>에 대한 정보입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.Contains(System.Object,System.String)">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> contains the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph> associated with the specified data source and data member.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph>에 지정한 데이터 소스 및 데이터 멤버와 관련된 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>가 포함되어 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.Contains(System.Object,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> contains the specified <ph id="ph3">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph>에 지정된 <ph id="ph3">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.Contains(System.Object,System.String)">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> class for a list of possible data sources and for information about creating bindings between controls and data sources.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> 가능한 데이터 원본 목록 및 컨트롤을 데이터 소스에 바인딩하는 방법에 대 한 정보에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.Contains(System.Object,System.String)">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt;</ph> property for information about returning a <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> using a data source and data member.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt;</ph> 반환에 대 한 정보를 보려면 속성을 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 데이터 원본 및 데이터 멤버를 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.Contains(System.Object,System.String)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Contains%2A&gt;</ph> method to test whether a specific <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> exists before attempting to get it through the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Contains%2A&gt;</ph> 특정 있는지 여부를 테스트 메서드에 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 통해 얻으려고 시도 하기 전에 존재는 <ph id="ph3">&lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.BindingContext.IsReadOnly">
          <source>Gets a value indicating whether the collection is read-only.</source>
          <target state="translated">컬렉션이 읽기 전용인지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">컬렉션이 읽기 전용이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.IsReadOnly">
          <source>This property is derived from <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>, and is overridden to always return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">이 속성은 <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>에서 파생되고 <ph id="ph2">`false`</ph>을 항상 반환하도록 재정의됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.BindingContext">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.BindingContext.Item(System.Object)">
          <source>The data source associated with a particular <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>.</source>
          <target state="translated">특정 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>와 관련된 데이터 소스입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.BindingContext.Item(System.Object)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph> that is associated with the specified data source.</source>
          <target state="translated">지정된 데이터 소스와 연결된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph> for the specified data source.</source>
          <target state="translated">지정된 데이터 소스에 대한 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object)">
          <source>Use this overload if the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> you want does not require a navigation path.</source>
          <target state="translated">이 오버 로드를 사용는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 원하는 탐색 경로 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object)">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> manages a set of <ph id="ph2">&lt;xref:System.Windows.Forms.Binding&gt;</ph> objects that use an <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph> or <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> as the <ph id="ph5">&lt;xref:System.Windows.Forms.Binding.DataSource%2A&gt;</ph>, no navigation path is required.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 집합을 관리 <ph id="ph2">&lt;xref:System.Windows.Forms.Binding&gt;</ph> 사용 하는 개체는 <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> 로 <ph id="ph5">&lt;xref:System.Windows.Forms.Binding.DataSource%2A&gt;</ph>, 탐색 경로가 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt;</ph> property will always return a <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph>, and never return <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt;</ph> 속성은 항상 반환 된 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph>, 한 반환 하지 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object)">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> class for a list of possible data sources and for information about creating bindings between controls and data sources.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> 가능한 데이터 원본 목록 및 컨트롤을 데이터 소스에 바인딩하는 방법에 대 한 정보에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object)">
          <source>The following code example returns three <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> objects: one for a <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph>, one for an <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>, and one for the <ph id="ph4">&lt;xref:System.Windows.Forms.Binding.DataSource%2A&gt;</ph> of a <ph id="ph5">&lt;xref:System.Windows.Forms.Binding&gt;</ph> that belongs to a <ph id="ph6">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">다음 코드 예제에서는 3 개를 반환 합니다. <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 개체:에 대 한 하나는 <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph>이며 다음 중 하나에 대 한는 <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>, 되 고 다른 하나는 <ph id="ph4">&lt;xref:System.Windows.Forms.Binding.DataSource%2A&gt;</ph> 의 <ph id="ph5">&lt;xref:System.Windows.Forms.Binding&gt;</ph> 에 속하는 <ph id="ph6">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)">
          <source>The data source associated with a particular <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>.</source>
          <target state="translated">특정 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>와 관련된 데이터 소스입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)">
          <source>A navigation path containing the information that resolves to a specific <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>.</source>
          <target state="translated">특정 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>에 대한 정보가 포함된 탐색 경로입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph> that is associated with the specified data source and data member.</source>
          <target state="translated">지정된 데이터 소스 및 데이터 멤버와 관련된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph> for the specified data source and data member.</source>
          <target state="translated">지정된 데이터 소스 및 데이터 멤버에 대한 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)">
          <source>Use this overload when the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> manages a set of <ph id="ph2">&lt;xref:System.Windows.Forms.Binding&gt;</ph> objects for which the data source contains multiple objects.</source>
          <target state="translated">사용할 경우이 오버 로드는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 집합을 관리 <ph id="ph2">&lt;xref:System.Windows.Forms.Binding&gt;</ph> 데이터 원본을 여러 개체를 포함 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)">
          <source>For example, a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can contain several <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects linked by <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> objects.</source>
          <target state="translated">예를 들어 한 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 여러 포함 될 수 있습니다 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> 의해 연결 된 <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)">
          <source>In such a case, the navigation path is required to enable the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> to return the correct <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph>.</source>
          <target state="translated">이러한 경우 탐색 경로 데 필요한는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> 올바른 반환할 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt;</ph> property will always return a <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph>, when the <ph id="ph3">`dataMember`</ph> parameter is valid.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt;</ph> 속성은 항상 반환 된 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph>때는 <ph id="ph3">`dataMember`</ph> 매개 변수는 유효 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)">
          <source>It will never return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">반환 하지 것입니다 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> class for a list of possible data sources and for information about creating bindings between controls and data sources.</source>
          <target state="translated">참조는 <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> 가능한 데이터 원본 목록 및 컨트롤을 데이터 소스에 바인딩하는 방법에 대 한 정보에 대 한 클래스입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)">
          <source>If the desired <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> manages a list, the navigation path must also end with a list.</source>
          <target state="translated">경우 원하는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 관리 목록에서 탐색 경로 목록 끝나야 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)">
          <source>For example, the following C# code binds a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control to the order date in a table of orders.</source>
          <target state="translated">예를 들어 다음 C# 코드 바인딩하는 <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> orders 테이블에는 주문 날짜를 제어 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)">
          <source>The navigation path includes the <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.DataRelation.RelationName%2A&gt;</ph>, and the <ph id="ph3">&lt;xref:System.Data.DataColumn.ColumnName%2A&gt;</ph>.</source>
          <target state="translated">탐색 경로 포함 된 <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.DataRelation.RelationName%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Data.DataColumn.ColumnName%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)">
          <source>However, the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> must be retrieved using only the <ph id="ph2">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRelation.RelationName%2A&gt;</ph> (which resolves to a list).</source>
          <target state="translated">그러나는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 만 사용 하 여 검색할 수는 <ph id="ph2">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Data.DataRelation.RelationName%2A&gt;</ph> (확인 되는 목록에).</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)">
          <source>When returning a <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph>, you should use the same data source as the <ph id="ph2">&lt;xref:System.Windows.Forms.Binding&gt;</ph> and modify only the navigation path.</source>
          <target state="translated">반환 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph>, 동일한 데이터 소스를 사용 해야는 <ph id="ph2">&lt;xref:System.Windows.Forms.Binding&gt;</ph> 만 탐색 경로 수정 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Contains%2A&gt;</ph> method to determine if the desired <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> already exists.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Contains%2A&gt;</ph> 여부를 확인 하는 메서드는 원하는 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 이미 있습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt;</ph> to retrieve the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> for a particular binding.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt;</ph> 검색 하는 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 특정 바인딩에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)">
          <source>It also shows how to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.BindingComplete&gt;</ph> event for the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> to ensure multiple controls bound to the same data source remain synchronized when one of the control values is changed.</source>
          <target state="translated">또한 처리 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.BindingComplete&gt;</ph> 에 대 한 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> 동일한 데이터 소스에 바인딩된 여러 컨트롤이 동기화 유지 변경 되는 컨트롤 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)">
          <source>To run this example, paste the code into a Windows Form and call the <ph id="ph1">`InitializeControlsAndData`</ph> method from the form's constructor or <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> event-handling method.</source>
          <target state="translated">이 예제를 실행 하려면 Windows Form과 호출에 코드를 붙여넣습니다는 <ph id="ph1">`InitializeControlsAndData`</ph> 폼의 생성자에서 메서드 또는 <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> 이벤트 처리 메서드.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.BindingContext.Item(System.Object,System.String)">
          <source>The specified <ph id="ph1">&lt;paramref name="dataMember" /&gt;</ph> does not exist within the data source.</source>
          <target state="translated">데이터 소스에 지정한 <ph id="ph1">&lt;paramref name="dataMember" /&gt;</ph>가 없는 경우</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.CollectionChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">이벤트 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.ComponentModel.CollectionChangeEventArgs" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.BindingContext.CollectionChanged" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Forms.BindingContext.CollectionChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">이벤트가 발생하면 대리자를 통해 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.OnCollectionChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">또한 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.OnCollectionChanged%2A&gt;</ph> 메서드를 사용하면 파생 클래스가 대리자를 연결하지 않고도 이벤트를 처리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">이는 파생 클래스에서 이벤트를 처리하는 기본 방법입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">파생 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /&gt;</ph>를 재정의하는 경우 등록된 대리자가 이벤트를 받도록 기본 클래스의 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.BindingContext.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /&gt;</ph> 메서드를 호출해야 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.Remove(System.Object)">
          <source>The data source associated with the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph> to remove.</source>
          <target state="translated">제거하려는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>와 관련된 데이터 소스입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.Remove(System.Object)">
          <source>Deletes the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph> associated with the specified data source.</source>
          <target state="translated">지정된 데이터 소스와 관련된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.RemoveCore(System.Object)">
          <source>The data source associated with the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph> to remove.</source>
          <target state="translated">제거하려는 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>와 관련된 데이터 소스입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.RemoveCore(System.Object)">
          <source>Removes the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph> associated with the specified data source.</source>
          <target state="translated">지정된 데이터 소스와 관련된 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingManagerBase" /&gt;</ph>를 제거합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> to copy into.</source>
          <target state="translated">복사할 대상 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The collection index to begin copying from.</source>
          <target state="translated">복사를 시작할 컬렉션 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the collection into a specified array, starting at the collection index.</source>
          <target state="translated">컬렉션 인덱스부터 컬렉션의 요소를 지정한 배열에 복사합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.BindingContext.System#Collections#ICollection#Count">
          <source>Gets the total number of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CurrencyManager" /&gt;</ph> objects managed by the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CurrencyManager" /&gt;</ph>가 관리하는 전체 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> 개체의 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.System#Collections#ICollection#Count">
          <source>The number of data sources managed by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph>가 관리하는 데이터 소스의 수입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.System#Collections#ICollection#Count">
          <source>The following code example returns the number of <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> objects managed by the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph>.</source>
          <target state="translated">개수를 반환 하는 다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> 하 여 관리 되는 개체는 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether the collection is synchronized.</source>
          <target state="translated">컬렉션이 동기화되는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection is thread safe; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">컬렉션이 스레드로부터 안전하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.System#Collections#ICollection#IsSynchronized">
          <source>This property is derived from <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>, and is overridden to always return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">이 속성은 <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>에서 파생되고 <ph id="ph2">`false`</ph>을 항상 반환하도록 재정의됩니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot">
          <source>Gets an object to use for synchronization (thread safety).</source>
          <target state="translated">동기화(스레드로부터의 안전성)에 사용할 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.BindingContext.System#Collections#ICollection#SyncRoot">
          <source>This property is derived from <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>, and is overridden to always return <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 속성은 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>에서 파생되고 <ph id="ph2">&lt;see langword="null" /&gt;</ph>을 항상 반환하도록 재정의됩니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator">
          <source>Gets an enumerator for the collection.</source>
          <target state="translated">컬렉션의 열거자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the collection.</source>
          <target state="translated">컬렉션에 대한 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext.System%23Collections%23IEnumerable%23GetEnumerator%2A&gt;</ph> method allows you to iterate over the collection managed by the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph> 에서 반환 되는 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext.System%23Collections%23IEnumerable%23GetEnumerator%2A&gt;</ph> 메서드를 사용 하면 관리 하는 컬렉션을 반복 하는 <ph id="ph3">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.System#Collections#IEnumerable#GetEnumerator">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.System%23Collections%23IEnumerable%23GetEnumerator%2A&gt;</ph> method to return an <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> for the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.System%23Collections%23IEnumerable%23GetEnumerator%2A&gt;</ph> 반환 하는 메서드는 <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> 에 대 한는 <ph id="ph3">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph> to associate with the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Binding" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph>과 연결할 새 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Binding" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Binding" /&gt;</ph> to associate with the new <ph id="ph2">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Binding" /&gt;</ph>와 연결할 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)">
          <source>Associates a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Binding" /&gt;</ph> with a new <ph id="ph2">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Binding" /&gt;</ph>을 새 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.BindingContext" /&gt;</ph>와 연결합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.BindingContext.UpdateBinding(System.Windows.Forms.BindingContext,System.Windows.Forms.Binding)">
          <source>This method is intended update the bindings of components that implement <ph id="ph1">&lt;xref:System.Windows.Forms.IBindableComponent&gt;</ph>, when their <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> changes.</source>
          <target state="translated">이 메서드를 구현 하는 구성 요소 바인딩을 업데이트 사용 <ph id="ph1">&lt;xref:System.Windows.Forms.IBindableComponent&gt;</ph>때 자신의 <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> 변경 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>