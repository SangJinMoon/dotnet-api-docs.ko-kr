<Type Name="ListBox+IntegerCollection" FullName="System.Windows.Forms.ListBox+IntegerCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c79f6f3cb19d9859691bdad1d7296a7d4ab93024" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30649577" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListBox.IntegerCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListBox/IntegerCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBox.IntegerCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox.IntegerCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListBox::IntegerCollection : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="47229-101">
        <see cref="T:System.Windows.Forms.ListBox" />의 정수 컬렉션을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="47229-101">Represents a collection of integers in a <see cref="T:System.Windows.Forms.ListBox" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-102"><xref:System.Windows.Forms.ListBox.IntegerCollection> 정렬 된 컬렉션을 사용 하 여 항목을 추가할는 <xref:System.Windows.Forms.ListBox.IntegerCollection.Add%2A> 및 <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="47229-102"><xref:System.Windows.Forms.ListBox.IntegerCollection> is a sorted collection to which items are appended by using the <xref:System.Windows.Forms.ListBox.IntegerCollection.Add%2A> and <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> methods.</span></span> <span data-ttu-id="47229-103">중복 값 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="47229-103">Duplicate values are removed.</span></span>  
  
 <span data-ttu-id="47229-104"><xref:System.Windows.Forms.ListBox.IntegerCollection> 에서 주로 사용 되는 <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="47229-104">The <xref:System.Windows.Forms.ListBox.IntegerCollection> is used mainly by the <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerCollection (System.Windows.Forms.ListBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.#ctor(System.Windows.Forms.ListBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerCollection(System::Windows::Forms::ListBox ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="47229-105">컬렉션을 소유하는 <see cref="T:System.Windows.Forms.ListBox" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-105">The <see cref="T:System.Windows.Forms.ListBox" /> that owns the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47229-106">
            <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-107">인스턴스를 만들 수는 <xref:System.Windows.Forms.ListBox.IntegerCollection> 클래스와 연결 되어 있지 않으면는 <xref:System.Windows.Forms.ListBox> 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="47229-107">You cannot create an instance of the <xref:System.Windows.Forms.ListBox.IntegerCollection> class without associating it with a <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Add(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(int item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="47229-108">컬렉션에 추가할 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-108">The integer to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47229-109">정렬된 순서로 컬렉션에 고유한 정수를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-109">Adds a unique integer to the collection in sorted order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47229-110">추가된 항목의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-110">The index of the added item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="47229-111">새 항목을 저장하기 위한 공간이 부족합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-111">There is insufficient space available to store the new item.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="47229-112">컬렉션에 정수 그룹을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-112">Adds a group of integers to the collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (int[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(int32[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.AddRange(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;int&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="47229-113">컬렉션에 추가할 정수 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-113">The array of integers to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47229-114">컬렉션에 정수 배열을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-114">Adds an array of integers to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-115">정수 배열을 컬렉션에 추가 및 컬렉션에서 중복 항목이 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="47229-115">The array of integers is appended to the collection, and duplicates are removed from the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListBox.IntegerCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListBox/IntegerCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.AddRange(System.Windows.Forms.ListBox.IntegerCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ListBox.IntegerCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListBox::IntegerCollection ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListBox+IntegerCollection" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="47229-116">다른 컬렉션에 추가할 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-116">The <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> to add to another collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47229-117">기존 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />의 내용을 다른 컬렉션에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-117">Adds the contents of an existing <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> to another collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-118">기존 내용을 <xref:System.Windows.Forms.ListBox.IntegerCollection> 현재 컬렉션에 추가 됩니다 결합된 된 컬렉션에서 중복 항목이 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="47229-118">The contents of the existing <xref:System.Windows.Forms.ListBox.IntegerCollection> are appended to the current collection, and duplicates are removed from the combined collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47229-119">
            <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />에서 모든 정수를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-119">Removes all integers from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.IntegerCollection.Remove(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Contains(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(int item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="47229-120">컬렉션에서 검색할 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-120">The integer to search for in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47229-121">지정된 정수가 컬렉션에 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-121">Determines whether the specified integer is in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47229-122">지정된 정수가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-122">
              <see langword="true" /> if the specified integer is in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-123">사용 하 여는 <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> 정수의 구성원 인지 확인 하는 메서드는 <xref:System.Windows.Forms.ListBox.IntegerCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="47229-123">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> method to determine whether an integer is a member of the <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span></span> <span data-ttu-id="47229-124">사용할 수는 항목은 컬렉션에 들어 있는 것을 알고 있다면는 <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> 메서드를 항목의 컬렉션 내 위치를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="47229-124">Once you know that the item is located within the collection, you can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> method to determine where the item is located within the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array destination, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array destination, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ destination, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="47229-125">
            <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />이 복사될 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-125">The array into which the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> is copied.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="47229-126">
            <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />을 복사할 대상 배열 내의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-126">The location within the destination array to which to copy the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47229-127">배열 내의 지정된 위치에서 정수의 기존 배열로 전체 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />을 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-127">Copies the entire <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> into an existing array of integers at a specified location within the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-128">사용 하 여는 <xref:System.Windows.Forms.ListBox.IntegerCollection.CopyTo%2A> 메서드를 여러 컬렉션을 단일 배열로 정수를 결합 합니다.</span><span class="sxs-lookup"><span data-stu-id="47229-128">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.CopyTo%2A> method to combine the integers from multiple collections into a single array.</span></span> <span data-ttu-id="47229-129">이 배열을 다른 형식의 콘텐츠를 채우는 데 사용할 수 있습니다 <xref:System.Windows.Forms.ListBox> 제어를 사용 하 여 <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="47229-129">You can then use this array to populate the contents of another <xref:System.Windows.Forms.ListBox> control using the <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47229-130">
            <see cref="T:System.Windows.Forms.ListBox" />의 선택된 항목 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-130">Gets the number of selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47229-131">
            <see cref="T:System.Windows.Forms.ListBox" />의 선택된 항목 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-131">The number of selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-132">사용 하 여는 <xref:System.Windows.Forms.ListBox.IntegerCollection.Count%2A> 속성에서 선택한 항목의 수를 확인 하 고 <xref:System.Windows.Forms.ListBox.IntegerCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="47229-132">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Count%2A> property to determine the number of selected items in the <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span></span> <span data-ttu-id="47229-133">다음 항목을 반복 하 여 루프를 수행 하는 반복 횟수를 제공 해야 하는 경우이 값을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47229-133">You can then use this value when you are looping through the items and you need to provide a number of iterations to perform the loop.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.IndexOf(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(int item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="47229-134">인덱스를 검색할 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-134">The integer for which to retrieve the index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47229-135">지정된 정수의 인덱스를 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> 내에서 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-135">Retrieves the index within the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> of the specified integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47229-136">정수가 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />에 있는 경우 해당 정수의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-136">The zero-based index of the integer in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; otherwise, negative one (-1).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-137">사용 하 여는 <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> 메서드를 항목의 컬렉션 내 위치를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="47229-137">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> method to determine where an item is located within the collection.</span></span> <span data-ttu-id="47229-138">이 메서드를 호출 하기 전에 컬렉션에 들어 있는 항목 인지를 확인 하려면 사용 하 여는 <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="47229-138">To determine whether an item is located within the collection before calling this method, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int default[int] { int get(int index); void set(int index, int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="47229-139">컬렉션에서 <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" />의 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-139">The position of the <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47229-140">지정된 인덱스가 있는 <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" />를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-140">Gets or sets the <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> having the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47229-141">지정한 위치의 선택된 <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-141">The selected <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> at the specified position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Remove(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(int item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="47229-142">
            <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />에서 제거할 정수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-142">The integer to remove from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47229-143">
            <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />에서 지정된 정수를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-143">Removes the specified integer from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-144">정수를 제거 하는 경우는 <xref:System.Windows.Forms.ListBox.IntegerCollection>, 컬렉션의 다음 정수에 대 한 인덱스를 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="47229-144">When you remove an integer from the <xref:System.Windows.Forms.ListBox.IntegerCollection>, the indexes change for subsequent integers in the collection.</span></span> <span data-ttu-id="47229-145">제거 된 정수에 대 한 모든 정보가 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="47229-145">All information about the removed integer is deleted.</span></span> <span data-ttu-id="47229-146">사용할 수는 <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> 메서드를 목록에서 제거할 실제 항목을 지정 하 여 목록에서 특정 항목을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="47229-146">You can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> method to remove a specific item from the list by specifying the actual item to remove from the list.</span></span> <span data-ttu-id="47229-147">자체 정수 대신 제거할 정수 인덱스를 지정 하려면 사용 된 <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="47229-147">To specify the index of the integer to remove instead of the integer itself, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> method.</span></span>  
  
 <span data-ttu-id="47229-148">정수에 없는 경우는 <xref:System.Windows.Forms.ListBox.IntegerCollection>,이 메서드는 아무 작업도 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="47229-148">If the integer is not in the <xref:System.Windows.Forms.ListBox.IntegerCollection>, this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="47229-149">제거할 정수의 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-149">The zero-based index of the integer to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47229-150">
            <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />에서 지정된 인덱스의 정수를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-150">Removes the integer at the specified index from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-151">정수를 제거 하는 경우는 <xref:System.Windows.Forms.ListBox.IntegerCollection>, 컬렉션의 다음 정수에 대 한 인덱스를 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="47229-151">When you remove an integer from the <xref:System.Windows.Forms.ListBox.IntegerCollection>, the indexes change for subsequent integers in the collection.</span></span> <span data-ttu-id="47229-152">제거 된 정수에 대 한 모든 정보가 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="47229-152">All information about the removed integer is deleted.</span></span> <span data-ttu-id="47229-153">사용할 수는 <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> 된 정수 목록에서 제거 하려면 인덱스를 지정 하 여 목록에서 특정 정수를 제거 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="47229-153">You can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> method to remove a specific integer from the list by specifying the index of the integer to remove from the list.</span></span> <span data-ttu-id="47229-154">제거할 항목에 대 한 인덱스 대신 항목을 지정 하려면 사용 된 <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="47229-154">To specify the item to remove instead of the index to the item, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47229-155">해당 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-155">Gets a value indicating whether access to the collection is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47229-156">모든 경우에 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-156">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-157">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47229-157">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47229-158"><xref:System.Windows.Forms.ListBox.IntegerCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47229-158">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47229-159">컨트롤 컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-159">Gets an object that can be used to synchronize access to the collection of controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47229-160">컬렉션에 동기화하는 데 사용할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-160">The object used to synchronize to the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-161">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47229-161">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47229-162"><xref:System.Windows.Forms.ListBox.IntegerCollection> 인스턴스가 <xref:System.Collections.ICollection> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47229-162">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47229-163">
            <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />에서 모든 정수의 열거형을 검색합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-163">Retrieves an enumeration of all the integers in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47229-164">
            <see cref="T:System.Collections.IEnumerator" />에 대한 <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-164">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-165">이 메서드는 컬렉션의 스냅숏을 포함 하는 열거자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="47229-165">This method creates an enumerator that contains a snapshot of the collection.</span></span> <span data-ttu-id="47229-166">열거자; 변경 하 여 컬렉션을 변경할 수 있습니다. 그러나 여러 열거자에 동일한 컬렉션에 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47229-166">You can change the collection by changing the enumerator; however, multiple enumerators can simultaneously access the same collection.</span></span> <span data-ttu-id="47229-167">따라서 발생할 수 있습니다 (직접 또는 다른 열거자를 통해) 컬렉션을 변경 <xref:System.Collections.IEnumerator.Current%2A> 또는 <xref:System.Collections.IEnumerator.MoveNext%2A> 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="47229-167">Changing the collection (either directly or through another enumerator) can thus cause <xref:System.Collections.IEnumerator.Current%2A> or <xref:System.Collections.IEnumerator.MoveNext%2A> to throw an exception.</span></span>  
  
 <span data-ttu-id="47229-168">동시에 동일한 컬렉션에서 만들어진 두 열거자에는 서로 다른 스냅숏 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47229-168">Two enumerators created from the same collection at the same time can contain different snapshots.</span></span>  
  
 <span data-ttu-id="47229-169">컬렉션에서 제거도 열거자에서 개체를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="47229-169">Removing objects from the enumerator also removes them from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="47229-170">
            <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />에 추가할 탭 정지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-170">The tab stop to add to the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47229-171">탭 정지를 컬렉션에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-171">Adds a tab stop to the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47229-172">정수가 컬렉션에 추가된 위치의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-172">The index at which the integer was added to the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-173">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47229-173">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47229-174"><xref:System.Windows.Forms.ListBox.IntegerCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47229-174">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="47229-175">
            <paramref name="item" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-175">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47229-176">
            <paramref name="item" />은 32비트의 부호 있는 정수가 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-176">
              <paramref name="item" /> is not an 32-bit signed integer.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="47229-177">컬렉션에 새 항목을 저장하기 위한 공간이 부족합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-177">There is insufficient space to store the new item in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="47229-178">컬렉션에서 모든 탭 정지를 지웁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-178">Clears all the tab stops from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-179">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47229-179">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47229-180"><xref:System.Windows.Forms.ListBox.IntegerCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47229-180">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ item) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="47229-181">
            <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />에서 찾을 탭 정지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-181">The tab stop to locate in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47229-182">지정된 탭 정지가 해당 컬렉션에 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-182">Determines whether the specified tab stop is in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47229-183">항목이 IntegerCollection에 있는 정수이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-183">
              <see langword="true" /> if item is an integer located in the IntegerCollection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-184">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47229-184">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47229-185"><xref:System.Windows.Forms.ListBox.IntegerCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47229-185">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ item) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="47229-186">
            <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />에서 찾을 탭 정지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-186">The tab stop to locate in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47229-187">컬렉션의 지정된 탭 정지에 대한 인덱스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-187">Returns the index of the specified tab stop in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="47229-188">
            <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />에 있으면 0부터 시작하는 인덱스이고, 그렇지 않으면 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-188">The zero-based index of item if it was found in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-189">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47229-189">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47229-190"><xref:System.Windows.Forms.ListBox.IntegerCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47229-190">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="47229-191">값을 삽입할 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-191">The zero-based index at which value should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="47229-192">
            <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />에 삽입할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-192">The object to insert into the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47229-193">항목을 컬렉션 내의 지정된 인덱스에 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-193">Inserts an item into the collection at a specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-194">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47229-194">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47229-195"><xref:System.Windows.Forms.ListBox.IntegerCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47229-195">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47229-196">항상 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-196">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47229-197">컬렉션의 크기가 고정되어 있는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-197">Gets a value indicating whether the collection has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47229-198">모든 경우에 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-198">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-199">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47229-199">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47229-200"><xref:System.Windows.Forms.ListBox.IntegerCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47229-200">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47229-201">컬렉션이 읽기 전용인지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-201">Gets a value indicating whether the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47229-202">모든 경우에 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-202">
              <see langword="false" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-203">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47229-203">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47229-204"><xref:System.Windows.Forms.ListBox.IntegerCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47229-204">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="47229-205">가져올 탭 정지를 지정하는 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-205">The zero-based index that specifies which tab stop to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47229-206">지정된 인덱스의 탭 정지를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-206">Gets or sets the tab stop at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47229-207">
            <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />의 지정된 위치에 저장되는 탭 정지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-207">The tab stop that is stored at the specified location in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-208">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47229-208">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47229-209"><xref:System.Windows.Forms.ListBox.IntegerCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47229-209">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47229-210">개체가 정수가 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-210">The object is not an integer.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="47229-211">
            <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />에 추가할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-211">The object to add to the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47229-212">컬렉션에서 맨 처음 발견되는 항목을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-212">Removes the first occurrence of an item from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-213">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47229-213">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47229-214"><xref:System.Windows.Forms.ListBox.IntegerCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47229-214">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47229-215">항상 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-215">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="47229-216">제거할 항목의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-216">The index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47229-217">지정된 인덱스에서 항목을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-217">Removes the item at a specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47229-218">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="47229-218">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="47229-219"><xref:System.Windows.Forms.ListBox.IntegerCollection> 인스턴스가 <xref:System.Collections.IList> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47229-219">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="47229-220">항상 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47229-220">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>