<Type Name="ComplexObject" FullName="System.Data.Objects.DataClasses.ComplexObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="04df848b1203f1b60ad08ee6bb0b30d5b8871b36" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30387187" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ComplexObject : System.Data.Objects.DataClasses.StructuralObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ComplexObject extends System.Data.Objects.DataClasses.StructuralObject" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.ComplexObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComplexObject&#xA;Inherits StructuralObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComplexObject abstract : System::Data::Objects::DataClasses::StructuralObject" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Objects.DataClasses.StructuralObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract(IsReference=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f0dd0-101">복합 형식에 대한 기본 클래스입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f0dd0-101">Base class for complex types.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0dd0-102"><xref:System.Data.Objects.DataClasses.ComplexObject> 복합 형식에 대 한 기본 기능을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="f0dd0-102"><xref:System.Data.Objects.DataClasses.ComplexObject> implements the basic functionality for complex types.</span></span> <span data-ttu-id="f0dd0-103">자세한 내용은 참조 [복합 형식 개체](http://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af)합니다.</span><span class="sxs-lookup"><span data-stu-id="f0dd0-103">For more information, see [Complex Type Objects](http://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af).</span></span>  
  
 <span data-ttu-id="f0dd0-104">개념적 모델을 사용 하 여 사용자 지정 데이터 클래스를 구현할 때는 복합 형식을 나타내는 데이터 클래스에서 상속 하는 것이 좋습니다 <xref:System.Data.Objects.DataClasses.ComplexObject>합니다.</span><span class="sxs-lookup"><span data-stu-id="f0dd0-104">When implementing custom data classes with a conceptual model, we recommend that your data classes that represent complex types inherit from <xref:System.Data.Objects.DataClasses.ComplexObject>.</span></span> <span data-ttu-id="f0dd0-105">자세한 내용은 참조 [사용자 지정 개체](http://msdn.microsoft.com/library/af6f07ce-2261-4c65-87cf-d018ad082921)합니다.</span><span class="sxs-lookup"><span data-stu-id="f0dd0-105">For more information, see [Customizing Objects](http://msdn.microsoft.com/library/af6f07ce-2261-4c65-87cf-d018ad082921).</span></span>  
  
 <span data-ttu-id="f0dd0-106">복합 형식은 엔터티 형식 또는 다른 복합 형식의 속성일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f0dd0-106">A complex type can be a property of an entity type or of another complex type.</span></span>  
  
 <span data-ttu-id="f0dd0-107">복합 형식은 엔터티 형식의 비스칼라 속성에서 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="f0dd0-107">Complex types are returned by non-scalar properties of entity types.</span></span> <span data-ttu-id="f0dd0-108">이렇게 하면 스칼라 속성이 엔터티 내에 구성됩니다.</span><span class="sxs-lookup"><span data-stu-id="f0dd0-108">This enables scalar properties to be organized within entities.</span></span> <span data-ttu-id="f0dd0-109">복합 형식은 엔터티와 같이 스칼라 속성 또는 다른 복합 형식 속성으로 이루어집니다.</span><span class="sxs-lookup"><span data-stu-id="f0dd0-109">Like entities, complex types consist of scalar properties or other complex type properties.</span></span> <span data-ttu-id="f0dd0-110">복합 형식은 연결된 엔터티 형식이 있어야 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f0dd0-110">A complex type cannot be used without an associated entity type.</span></span> <span data-ttu-id="f0dd0-111">복합 형식은 키가 없으며, 복합 형식 개체 연결된 된 엔터티 형식 없이 관리할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f0dd0-111">Because complex types do not have keys, complex type objects cannot be managed without an associated entity type.</span></span> <span data-ttu-id="f0dd0-112">자세한 내용은 참조 [복합 형식 개체](http://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af)합니다.</span><span class="sxs-lookup"><span data-stu-id="f0dd0-112">For more information, see [Complex Type Objects](http://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0dd0-113">다음 예제에서는 사용자 지정 데이터 클래스에에서 `OrderInfo` 에서 상속 <xref:System.Data.Objects.DataClasses.ComplexObject> 변수에 매핑된는 `OrderInfo` 개념적 모델에 정의 된 복합 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="f0dd0-113">In the following example, the custom data class `OrderInfo` inherits from <xref:System.Data.Objects.DataClasses.ComplexObject> and is mapped to the `OrderInfo` complex type defined in the conceptual model.</span></span>  
  
 [!code-csharp[DP EntityObject Concepts#EntityObject](~/samples/snippets/csharp/VS_Snippets_Data/DP EntityObject Concepts/CS/SalesObjects.cs#entityobject)]
 [!code-vb[DP EntityObject Concepts#EntityObject](~/samples/snippets/visualbasic/VS_Snippets_Data/DP EntityObject Concepts/VB/SalesObjects.vb#entityobject)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComplexObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ComplexObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f0dd0-114">
            <see cref="T:System.Data.Objects.DataClasses.ComplexObject" />의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0dd0-114">Creates an instance of <see cref="T:System.Data.Objects.DataClasses.ComplexObject" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanged">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanged (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanged(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanged (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanged(System::String ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="f0dd0-115">@FSHO2@변경된 속성의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0dd0-115">The name of the changed property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0dd0-116">변경 추적 장치에 복합 개체 속성이 변경되었음을 알립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0dd0-116">Notifies the change tracker that a property of a complex object has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0dd0-117">엔터티 데이터 모델 도구에서 복합 형식이 생성되면 속성 변경 후 <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A> 메서드가 호출되어 <xref:System.Data.Objects.DataClasses.IEntityChangeTracker>에 있는 캐시된 값을 속성의 원래 값으로 커밋합니다.</span><span class="sxs-lookup"><span data-stu-id="f0dd0-117">When a complex type is generated by the Entity Data Model tools, the <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A> method is called after a property change to commit the cached value in the <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> as the original value of the property.</span></span>  
  
 <span data-ttu-id="f0dd0-118">이 메서드는 변경 추적 장치의 <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="f0dd0-118">This method calls the <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged%2A> method in the change tracker.</span></span>  
  
 <span data-ttu-id="f0dd0-119">사용자 지정 복합 개체의 속성에 대한 변경 내용을 추적하려면 <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A>을 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f0dd0-119">When tracking changes that are made to the property of a custom complex object, you must call <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A>.</span></span> <span data-ttu-id="f0dd0-120">복합 개체가 <xref:System.Data.Objects.DataClasses.ComplexObject>에서 상속될 경우 이를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f0dd0-120">Do this when the complex object inherits from <xref:System.Data.Objects.DataClasses.ComplexObject>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f0dd0-121">
            <paramref name="property" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0dd0-121">
              <paramref name="property" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanging">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanging (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanging(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanging (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanging(System::String ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="f0dd0-122">@FSHO2@변경 중인 속성의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0dd0-122">The name of the changing property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0dd0-123">변경 추적 장치에 복합 개체에 대한 속성 변경이 보류 중임을 알립니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0dd0-123">Notifies the change tracker that a property change is pending on a complex object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0dd0-124">엔터티 데이터 모델 도구에서 복합 형식이 생성되면 속성 변경 이전에 <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A> 메서드를 호출하여 <xref:System.Data.Objects.DataClasses.IEntityChangeTracker>에 있는 속성 현재 값을 캐시한 후 이 값을 속성의 원래 값으로 사용할 수 있도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="f0dd0-124">When a complex type is generated by the Entity Data Model tools, the <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A> method is called before a property change to cache the current value of the property in the <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> so that this value can be used as the original value for the property.</span></span>  
  
 <span data-ttu-id="f0dd0-125">이 메서드는 변경 추적 장치의 <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging%2A> 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="f0dd0-125">This method calls the <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging%2A> method in the change tracker.</span></span>  
  
 <span data-ttu-id="f0dd0-126">사용자 지정 복합 개체의 속성에 대한 변경 내용을 추적하려면 <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A>을 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f0dd0-126">When tracking changes that are made to the property of a custom complex object, you must call <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A>.</span></span> <span data-ttu-id="f0dd0-127">복합 개체가 <xref:System.Data.Objects.DataClasses.ComplexObject>에서 상속될 경우 이를 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f0dd0-127">Do this when the complex object inherits from <xref:System.Data.Objects.DataClasses.ComplexObject>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f0dd0-128">
            <paramref name="property" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0dd0-128">
              <paramref name="property" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>