<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EntityCollection`1.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b574b777b4ff63fbe3458359610b6cadef1f8e44.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b574b777b4ff63fbe3458359610b6cadef1f8e44</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>The entity type of the collection.</source>
          <target state="translated">컬렉션의 엔터티 형식입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>Represents a collection of objects on the "many" end of a relationship.</source>
          <target state="translated">관계의 "다" 쪽에 있는 개체의 컬렉션을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>An <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> is a collection of objects of a particular entity type that represents the "many" end of a one-to-many or many-to-many relationship.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>은 일대다 또는 다대다 관계의 "다" 쪽을 나타내는 특정 엔터티 형식의 개체 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>An <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> is returned by a navigation property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>은 탐색 속성에서 반환됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph> method to load related objects into an <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph> 메서드를 사용하여 관련 개체를 <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>에 로드합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>To store an unrelated collection of objects of a specific entity type, such as the result of an <ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph>, use an instance of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph>의 결과와 같은 특정 엔터티 형식의 관련되지 않은 개체 컬렉션을 복원하려면 <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> 클래스의 인스턴스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>An <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> might have a corresponding <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>에는 대응되는 <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601&gt;</ph>가 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>When an <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> and an <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601&gt;</ph> model opposite ends of the same relationship, the integrity of the relationship is maintained at the object level.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601&gt;</ph> 모델이 같은 관계의 반대편 End에 있으면 관계의 무결성이 개체 수준에서 유지 관리됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>The two classes are synchronized automatically.</source>
          <target state="translated">두 클래스는 자동으로 동기화됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>This example is based on the .</source>
          <target state="translated">이 예제에서는 기반는 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</source>
          <target state="translated">@FSHO2@이 예제의 코드를 실행하려면 프로젝트에 AdventureWorks Sales 모델을 추가하고 Entity Framework를 사용하도록 프로젝트를 구성해야 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>To do this, complete the procedures in <bpt id="p1">[</bpt>How to: Manually Configure an Entity Framework Project<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept> and <bpt id="p2">[</bpt>How to: Manually Define the Model and Mapping Files<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>.</source>
          <target state="translated">이 수행 하려면의 절차를 완료 <bpt id="p1">[</bpt>하는 방법: 수동으로 Entity Framework 프로젝트 구성<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept> 및 <bpt id="p2">[</bpt>하는 방법: 모델 및 매핑 파일을 수동으로 정의<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>This example does the following:</source>
          <target state="translated">이 예제에서는 다음을 수행합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>Creates two new <ph id="ph1">`SalesOrderHeader`</ph> entities and adds them to the <ph id="ph2">`Contact`</ph> entity.</source>
          <target state="translated">두 <ph id="ph1">`SalesOrderHeader`</ph> 엔터티를 새로 만들어 <ph id="ph2">`Contact`</ph> 엔터티에 추가합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>Gets all related ends from the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.RelationshipManager&gt;</ph> that is associated with the <ph id="ph2">`Contact`</ph> entity.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.RelationshipManager&gt;</ph> 엔터티와 연결된 <ph id="ph2">`Contact`</ph>에서 관련 End를 모두 가져옵니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>Iterates through the collection of <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.IRelatedEnd&gt;</ph>s.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.IRelatedEnd&gt;</ph>의 컬렉션을 반복합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>Gets the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> for each related end.</source>
          <target state="translated">각 관련 End의 <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>Uses the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> method to remove one of the entities from the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> 메서드를 사용하여 컬렉션에서 엔터티 중 하나를 제거합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>Calls the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A&gt;</ph> method to determine whether the object was removed from the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A&gt;</ph> 메서드를 호출하여 개체가 컬렉션에서 제거되었는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>Uses the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> method to add the entity back.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> 메서드를 사용하여 엔터티를 다시 추가합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.#ctor">
          <source>This public constructor for <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> is intended to be used by Object Services when deserializing object graphs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>의 이 public 생성자는 개체 그래프를 deserialize할 때 개체 서비스에서 사용됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.#ctor">
          <source>You should access an instance of <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> from a navigation property instead of using this constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> 인스턴스에 액세스할 때는 이 생성자 대신 탐색 속성을 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.#ctor">
          <source>To store an unrelated collection of objects of a specific entity type, such as the result of an <ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph>, use an instance of <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph>의 결과와 같은 특정 엔터티 형식의 관련되지 않은 개체 컬렉션을 복원하려면 <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> 인스턴스를 사용합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>An object to add to the collection.</source>
          <target state="translated">@FSHO2@컬렉션에 추가할 개체입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source><bpt id="p1">&lt;c&gt;</bpt>entity<ept id="p1">&lt;/c&gt;</ept> must implement <ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>엔터티<ept id="p1">&lt;/c&gt;</ept>는 <ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" /&gt;</ph>를 구현해야 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>Adds an object to the collection.</source>
          <target state="translated">개체를 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> method adds an object to an <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> and creates a relationship between the two objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> 메서드에서는 개체를 <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>에 추가하고 두 개체 사이의 관계를 만듭니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>When the source object is attached to an <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> instance, the <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> method also adds the object to the <ph id="ph3">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph>.</source>
          <target state="translated">소스 개체가 <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> 인스턴스에 연결되어 있으면 <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> 메서드에서 개체를 <ph id="ph3">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph>에도 추가합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>This operation is translated into an insert operation in the data source when <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.SaveChanges%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.SaveChanges%2A&gt;</ph>가 호출되면 이 작업은 데이터 소스에서 삽입 작업으로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>Creating, Adding, Modifying, and Deleting Objects<ept id="p1">](http://msdn.microsoft.com/library/f76f1fad-c553-4b59-820b-89b3dec2fad1)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>만들기, 추가, 수정, 및 개체 삭제<ept id="p1">](http://msdn.microsoft.com/library/f76f1fad-c553-4b59-820b-89b3dec2fad1)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> method can be called multiple times on the same object instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> 메서드는 동일 개체 인스턴스에 대해 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>This example is based on the .</source>
          <target state="translated">이 예제에서는 기반는 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</source>
          <target state="translated">@FSHO2@이 예제의 코드를 실행하려면 프로젝트에 AdventureWorks Sales 모델을 추가하고 Entity Framework를 사용하도록 프로젝트를 구성해야 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>To do this, complete the procedures in <bpt id="p1">[</bpt>How to: Manually Configure an Entity Framework Project<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept> and <bpt id="p2">[</bpt>How to: Manually Define the Model and Mapping Files<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>.</source>
          <target state="translated">이 수행 하려면의 절차를 완료 <bpt id="p1">[</bpt>하는 방법: 수동으로 Entity Framework 프로젝트 구성<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept> 및 <bpt id="p2">[</bpt>하는 방법: 모델 및 매핑 파일을 수동으로 정의<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>This example creates two new <ph id="ph1">`SalesOrderHeader`</ph> entities, adds them to the <ph id="ph2">`Contact`</ph> entity, and, after removing an object, uses the <ph id="ph3">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> method to add the object back to the collection.</source>
          <target state="translated">이 예제에서는 두 <ph id="ph1">`SalesOrderHeader`</ph> 엔터티를 새로 만들어 <ph id="ph2">`Contact`</ph> 엔터티에 추가하고 개체를 제거한 후 <ph id="ph3">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> 메서드를 사용하여 개체를 다시 컬렉션에 추가합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source><ph id="ph1">&lt;paramref name="entity" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="entity" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>Defines a relationship between two attached objects in an object context.</source>
          <target state="translated">@FSHO2@개체 컨텍스트의 연결된 두 개체 간의 관계를 정의합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>Collection of objects in the object context that are related to the source object.</source>
          <target state="translated">소스 개체와 관련된 개체 컨텍스트의 개체 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>Defines relationships between an object and a collection of related objects in an object context.</source>
          <target state="translated">개체와 개체 컨텍스트의 관련 개체 컬렉션 간의 관계를 정의합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.Attach%2A&gt;</ph> method is used to define relationships between an object and a collection of related objects when both the source object and the collection of related objects already exist in the object context.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.Attach%2A&gt;</ph> 메서드는 소스 개체와 관련 개체 컬렉션이 모두 개체 컨텍스트에 이미 있을 때 개체와 관련 개체 컬렉션 간의 관계를 정의하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>To attach an object or an object graph where the relationships are already defined, call the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.Attach%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph>.</source>
          <target state="translated">관계가 이미 정의된 개체 또는 개체 그래프를 연결하려면 <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.Attach%2A&gt;</ph>에 대해 <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>To create a new object that is related to the source object, call the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>.</source>
          <target state="translated">소스 개체와 관련된 새 개체를 만들려면 <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph>에 대해 <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>For more information, see <bpt id="p1">[</bpt>Attaching and Detaching Objects<ept id="p1">](http://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>연결 및 분리 개체<ept id="p1">](http://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection is already filled or partially filled, the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A&gt;</ph> method merges existing entities with the given entities.</source>
          <target state="translated">컬렉션이 이미 채워져 있거나 부분적으로 채워져 있으면 <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A&gt;</ph> 메서드는 기존 엔터티를 지정된 엔터티와 병합합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>The given entities are not assumed to be the complete set of related entities.</source>
          <target state="translated">지정된 엔터티는 관련 엔터티의 전체 집합이 아닐 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>All entities passed in must be in the <ph id="ph1">&lt;xref:System.Data.EntityState.Unchanged&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.EntityState.Modified&gt;</ph> state.</source>
          <target state="translated">전달되는 모든 엔터티는 <ph id="ph1">&lt;xref:System.Data.EntityState.Unchanged&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Data.EntityState.Modified&gt;</ph> 상태여야 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>Objects in the <ph id="ph1">&lt;xref:System.Data.EntityState.Deleted&gt;</ph> state are only allowed when the state manager is already tracking the relationship instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityState.Deleted&gt;</ph> 상태의 개체는 상태 관리자가 관계 인스턴스를 이미 추적하고 있는 경우에만 허용됩니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="entities" /&gt;</ph> collection is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="entities" /&gt;</ph> 컬렉션은 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>The source object or an object in the <ph id="ph1">&lt;paramref name="entities" /&gt;</ph> collection is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is not in an <ph id="ph3">&lt;see cref="F:System.Data.EntityState.Unchanged" /&gt;</ph> or <ph id="ph4">&lt;see cref="F:System.Data.EntityState.Modified" /&gt;</ph> state.</source>
          <target state="translated">소스 개체 또는 <ph id="ph1">&lt;paramref name="entities" /&gt;</ph> 컬렉션의 개체가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이거나, <ph id="ph3">&lt;see cref="F:System.Data.EntityState.Unchanged" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="F:System.Data.EntityState.Modified" /&gt;</ph> 상태가 아닌 경우</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>The relationship cannot be defined based on the EDM metadata.</source>
          <target state="translated">EDM 메타데이터를 기반으로 관계를 정의할 수 없는 경우.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>This can occur when the association in the conceptual schema does not support a relationship between the two types.</source>
          <target state="translated">@FSHO2@개념 스키마의 연결이 두 형식 간의 관계를 지원하지 않을 때 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>The object being attached.</source>
          <target state="translated">@FSHO2@연결 중인 개체입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>Defines a relationship between two attached objects in an object context.</source>
          <target state="translated">@FSHO2@개체 컨텍스트의 연결된 두 개체 간의 관계를 정의합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A&gt;</ph> method is used to define relationships between two objects when both objects already exist in the object context.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A&gt;</ph> 메서드는 두 개체가 모두 개체 컨텍스트에 이미 있을 때 두 개체 간의 관계를 정의하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>To attach an object or an object graph where the relationships are already defined, call the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.Attach%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph>.</source>
          <target state="translated">관계가 이미 정의된 개체 또는 개체 그래프를 연결하려면 <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.Attach%2A&gt;</ph>에 대해 <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>To create a new object that is related to the source object, call the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>.</source>
          <target state="translated">소스 개체와 관련된 새 개체를 만들려면 <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph>에 대해 <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>Attaching and Detaching Objects<ept id="p1">](http://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>연결 및 분리 개체<ept id="p1">](http://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> already has loaded objects, the <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A&gt;</ph> method merges the object together with the existing objects in the <ph id="ph3">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>에 로드된 개체가 이미 있으면 <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A&gt;</ph> 메서드는 개체를 <ph id="ph3">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>의 기존 개체와 병합합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>The attached object is not assumed to be the complete set of related entity objects.</source>
          <target state="translated">연결된 개체는 관련 엔터티 개체의 전체 집합이 아닐 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>The object associated with this <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> and all objects being attached to it must be in an <ph id="ph2">&lt;xref:System.Data.EntityState.Unchanged&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.EntityState.Modified&gt;</ph> state.</source>
          <target state="translated">이 <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>과 연결된 개체 및 여기에 연결 중인 모든 개체는 <ph id="ph2">&lt;xref:System.Data.EntityState.Unchanged&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Data.EntityState.Modified&gt;</ph> 상태여야 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>Objects in the <ph id="ph1">&lt;xref:System.Data.EntityState.Deleted&gt;</ph> state can only be attached when the <ph id="ph2">&lt;xref:System.Data.Objects.ObjectStateManager&gt;</ph> is already tracking the relationship instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityState.Deleted&gt;</ph> 상태의 개체는 <ph id="ph2">&lt;xref:System.Data.Objects.ObjectStateManager&gt;</ph>가 관계 인스턴스를 이미 추적하고 있는 경우에만 연결할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>This example is based on the .</source>
          <target state="translated">이 예제에서는 기반는 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</source>
          <target state="translated">@FSHO2@이 예제의 코드를 실행하려면 프로젝트에 AdventureWorks Sales 모델을 추가하고 Entity Framework를 사용하도록 프로젝트를 구성해야 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>To do this, complete the procedures in <bpt id="p1">[</bpt>How to: Manually Configure an Entity Framework Project<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept> and <bpt id="p2">[</bpt>How to: Manually Define the Model and Mapping Files<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>.</source>
          <target state="translated">이 수행 하려면의 절차를 완료 <bpt id="p1">[</bpt>하는 방법: 수동으로 Entity Framework 프로젝트 구성<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept> 및 <bpt id="p2">[</bpt>하는 방법: 모델 및 매핑 파일을 수동으로 정의<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>This example attaches a collection of detached <ph id="ph1">`SalesOrderDetail`</ph> objects and a detached <ph id="ph2">`SalesOrderHeader`</ph> object to an object context, and then defines the relationships between the <ph id="ph3">`SalesOrderHeader`</ph> object and each <ph id="ph4">`SalesOrderDetail`</ph> object.</source>
          <target state="translated">이 예제에서는 연결의 분리 된 컬렉션 <ph id="ph1">`SalesOrderDetail`</ph> 개체와 분리 된 <ph id="ph2">`SalesOrderHeader`</ph> 개체 컨텍스트에 개체를 다음 사이의 관계를 정의 고 <ph id="ph3">`SalesOrderHeader`</ph> 개체와 각 <ph id="ph4">`SalesOrderDetail`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>When the <ph id="ph1">&lt;paramref name="entity" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="entity" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>When the <ph id="ph1">&lt;paramref name="entity" /&gt;</ph> cannot be related to the source object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="entity" /&gt;</ph>를 소스 개체와 관련시킬 수 없는 경우.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>This can occur when the association in the conceptual schema does not support a relationship between the two types.</source>
          <target state="translated">@FSHO2@개념 스키마의 연결이 두 형식 간의 관계를 지원하지 않을 때 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>When either object is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or is not in an <ph id="ph2">&lt;see cref="F:System.Data.EntityState.Unchanged" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Data.EntityState.Modified" /&gt;</ph> state.</source>
          <target state="translated">어느 한 개체가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>이거나 <ph id="ph2">&lt;see cref="F:System.Data.EntityState.Unchanged" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Data.EntityState.Modified" /&gt;</ph> 상태에 있지 않은 경우.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Clear">
          <source>Removes all entities from the collection.</source>
          <target state="translated">컬렉션에서 엔터티를 모두 제거합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Clear">
          <source><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A&gt;</ph> does the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A&gt;</ph>에서는 다음을 수행합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Clear">
          <source>Sets the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A&gt;</ph> flag to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">설정의 <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A&gt;</ph> 플래그를 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Clear">
          <source>Removes all entities from the collection.</source>
          <target state="translated">컬렉션에서 엔터티를 모두 제거합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Clear">
          <source>Detaches relationships between removed entities and the owner of the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> from the <ph id="ph2">&lt;xref:System.Data.Objects.ObjectStateManager&gt;</ph>.</source>
          <target state="translated">제거된 엔터티 및 <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>의 소유자 간의 관계를 <ph id="ph2">&lt;xref:System.Data.Objects.ObjectStateManager&gt;</ph>에서 분리합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Clear">
          <source>Removes the owner of the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> from the related entities.</source>
          <target state="translated">관련 엔터티에서 <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>의 소유자를 제거합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>에서 찾을 개체입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>Determines whether a specific object exists in the collection.</source>
          <target state="translated">특정 개체가 컬렉션에 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object is found in the <ph id="ph2">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>에 개체가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>Uses the <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph> method to compare the specified object with the objects already in the collection.</source>
          <target state="translated">지정된 개체를 컬렉션에 이미 있는 개체와 비교하려면 <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph> 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>This example is based on the .</source>
          <target state="translated">이 예제에서는 기반는 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</source>
          <target state="translated">@FSHO2@이 예제의 코드를 실행하려면 프로젝트에 AdventureWorks Sales 모델을 추가하고 Entity Framework를 사용하도록 프로젝트를 구성해야 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>To do this, complete the procedures in <bpt id="p1">[</bpt>How to: Manually Configure an Entity Framework Project<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept> and <bpt id="p2">[</bpt>How to: Manually Define the Model and Mapping Files<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>.</source>
          <target state="translated">이 수행 하려면의 절차를 완료 <bpt id="p1">[</bpt>하는 방법: 수동으로 Entity Framework 프로젝트 구성<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept> 및 <bpt id="p2">[</bpt>하는 방법: 모델 및 매핑 파일을 수동으로 정의<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>This example does the following:</source>
          <target state="translated">이 예제에서는 다음을 수행합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>Creates two new <ph id="ph1">`SalesOrderHeader`</ph> entities and adds them to the <ph id="ph2">`Contact`</ph> entity.</source>
          <target state="translated">두 <ph id="ph1">`SalesOrderHeader`</ph> 엔터티를 새로 만들어 <ph id="ph2">`Contact`</ph> 엔터티에 추가합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>Gets all related ends from the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.RelationshipManager&gt;</ph> that is associated with the Contact entity.</source>
          <target state="translated">Contact 엔터티와 연결된 <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.RelationshipManager&gt;</ph>에서 관련 End를 모두 가져옵니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>Iterates through the collection of <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.IRelatedEnd&gt;</ph>s.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.IRelatedEnd&gt;</ph>의 컬렉션을 반복합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>Gets the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> for each related end.</source>
          <target state="translated">각 관련 End의 <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>Uses the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> method to remove one of the entities from the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> 메서드를 사용하여 컬렉션에서 엔터티 중 하나를 제거합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A&gt;</ph> method to determine whether the object was removed from the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A&gt;</ph> 메서드를 호출하여 개체가 컬렉션에서 제거되었는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>Uses the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> method to add the entity back.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> 메서드를 사용하여 엔터티를 다시 추가합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)">
          <source>The array to copy to.</source>
          <target state="translated">복사할 대상 배열입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in the array at which copying begins.</source>
          <target state="translated">복사를 시작할 배열의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)">
          <source>Copies all the contents of the collection to an array, starting at the specified index of the target array.</source>
          <target state="translated">대상 배열의 지정된 인덱스부터 시작하여 컬렉션의 모든 내용을 배열에 복사합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.Count">
          <source>Gets the number of objects that are contained in the collection.</source>
          <target state="translated">컬렉션에 포함된 개체 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.Count">
          <source>The number of elements that are contained in the <ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>에 포함된 요소 수입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.Count">
          <source>The <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Count%2A&gt;</ph> property gets the number of entities currently in the local collection and does not reflect the size of the collection in the data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Count%2A&gt;</ph> 속성은 로컬 컬렉션에 현재 있는 엔터티 수를 가져오며 데이터 소스의 컬렉션 크기는 반영하지 않습니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.Count">
          <source>A count of zero does not necessarily indicate that the related collection is empty.</source>
          <target state="translated">0개라고 해서 관련 컬렉션이 반드시 비어 있는 것은 아닙니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.Count">
          <source>To determine the collection size in the data source, call the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph> method or include the related object in the query path.</source>
          <target state="translated">데이터 소스의 컬렉션 크기를 확인하려면 <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph> 메서드를 호출하거나 관련 개체를 쿼리 경로에 포함시킵니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.Count">
          <source>For more information, see <bpt id="p1">[</bpt>Loading Related Objects<ept id="p1">](http://msdn.microsoft.com/library/452347d2-7b3b-44cd-9001-231299a28cb1)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관련 개체 로드<ept id="p1">](http://msdn.microsoft.com/library/452347d2-7b3b-44cd-9001-231299a28cb1)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>Returns an object query that, when it is executed, returns the same set of objects that exists in the current collection.</source>
          <target state="translated">실행되면 현재 컬렉션에 있는 동일한 개체 집합을 반환하는 개체 쿼리를 반환합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Objects.ObjectQuery`1" /&gt;</ph> that represents the entity collection.</source>
          <target state="translated">엔터티 컬렉션을 나타내는 <ph id="ph1">&lt;see cref="T:System.Data.Objects.ObjectQuery`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>This property is used to obtain a new instance of <ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> that returns the same set of objects.</source>
          <target state="translated">이 속성은 동일한 개체 집합을 반환하는 새 <ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> 인스턴스를 가져오는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>This is useful as the starting point for a more complex join, union, or filtered query, or to return the same objects in a detached state by using the <ph id="ph1">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph> option.</source>
          <target state="translated">이 속성은 보다 복잡한 조인, 통합 또는 필터링된 쿼리의 시작 지점으로 사용하거나, <ph id="ph1">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph> 옵션을 사용하여 분리된 상태의 동일한 개체를 반환하는 데 유용합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.CreateSourceQuery%2A&gt;</ph> is used to filter objects in an <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> to enable you to bind only objects of a specific type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.CreateSourceQuery%2A&gt;</ph> 개체를 필터링 하는 데 사용 되는 <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> 특정 유형의 개체에 대해서만 바인딩할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>For more information, see <bpt id="p1">[</bpt>Binding Objects to Controls<ept id="p1">](http://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>컨트롤에 개체 바인딩<ept id="p1">](http://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>This example is based on a modified version of the .</source>
          <target state="translated">이 예에서는 수정된 된 버전의 기반인는 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>This version supports table-per-type inheritance with <ph id="ph1">`Course`</ph> as an abstract type.</source>
          <target state="translated">이 버전에서는 추상 형식이 <ph id="ph1">`Course`</ph>인 형식당 하나의 테이블 상속을 지원합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>Complete the  walkthrough to modify the School model to support the table-per-type inheritance example used in this topic.</source>
          <target state="translated">이 항목에 사용 되는 형식당 하나의 테이블 상속 예제를 지원 하도록 School 모델을 수정 하는 연습을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>This example shows how to use <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.CreateSourceQuery%2A&gt;</ph> to filter objects in an <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> and bind only to objects of a specific type.</source>
          <target state="translated">사용 하는 방법을 보여 주는이 예제 <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.CreateSourceQuery%2A&gt;</ph> 필터 개체에 <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> 특정 유형의 개체에만 바인딩합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>For a complete version of this example, see <bpt id="p1">[</bpt>How to: Bind Controls to Derived Types<ept id="p1">](http://msdn.microsoft.com/library/09730c14-3b7b-4563-af4a-7ecfa4e34bd5)</ept>.</source>
          <target state="translated">이 예제의 전체 버전을 참조 하십시오. <bpt id="p1">[</bpt>하는 방법: 파생 형식에 컨트롤을 바인딩<ept id="p1">](http://msdn.microsoft.com/library/09730c14-3b7b-4563-af4a-7ecfa4e34bd5)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>When the object is in an <ph id="ph1">&lt;see cref="F:System.Data.EntityState.Added" /&gt;</ph> state.</source>
          <target state="translated">개체가 <ph id="ph1">&lt;see cref="F:System.Data.EntityState.Added" /&gt;</ph> 상태인 경우</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>When the object is in a <ph id="ph1">&lt;see cref="F:System.Data.EntityState.Detached" /&gt;</ph> state with a <ph id="ph2">&lt;see cref="T:System.Data.Objects.MergeOption" /&gt;</ph> other than <ph id="ph3">&lt;see cref="F:System.Data.Objects.MergeOption.NoTracking" /&gt;</ph>.</source>
          <target state="translated">개체가 <ph id="ph1">&lt;see cref="F:System.Data.EntityState.Detached" /&gt;</ph> 이외의 <ph id="ph2">&lt;see cref="T:System.Data.Objects.MergeOption" /&gt;</ph>이 설정된 <ph id="ph3">&lt;see cref="F:System.Data.Objects.MergeOption.NoTracking" /&gt;</ph> 상태인 경우</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator">
          <source>Returns an enumerator that is used to iterate through the objects in the collection.</source>
          <target state="translated">컬렉션의 개체를 반복하는 데 사용되는 열거자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that iterates through the set of values cached by <ph id="ph2">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>에서 캐시되는 값 집합을 반복하는 <ph id="ph2">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.IsReadOnly">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.IsReadOnly">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">항상 <ph id="ph1">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>Specifies how the objects in this collection should be merged with the objects that might have been returned from previous queries against the same <ph id="ph1">&lt;see cref="T:System.Data.Objects.ObjectContext" /&gt;</ph>.</source>
          <target state="translated">같은 <ph id="ph1">&lt;see cref="T:System.Data.Objects.ObjectContext" /&gt;</ph>의 이전 쿼리에서 반환된 개체가 있는 경우 이 컬렉션의 개체와 병합할 방법을 지정합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>Loads related objects into the collection, using the specified merge option.</source>
          <target state="translated">지정된 병합 옵션을 사용하여 관련 개체를 컬렉션에 로드합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>This method calls the internal <ph id="ph1">`RelatedEnd.ValidateLoad`</ph> method before loading the collection, which validates that a call to <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph> has the correct conditions.</source>
          <target state="translated">이 메서드는 내부 호출 <ph id="ph1">`RelatedEnd.ValidateLoad`</ph> 메서드를 호출 하는지 확인 하는 컬렉션을 로드 하기 전에 <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph> 에 올바른 조건이 있습니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>The <ph id="ph1">`RelatedEnd.ValidateLoad`</ph> method checks that:</source>
          <target state="translated"><ph id="ph1">`RelatedEnd.ValidateLoad`</ph> 메서드를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>A valid <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> exists.</source>
          <target state="translated">유효한 <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> 존재 합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>The entity isn't in a <ph id="ph1">&lt;xref:System.Data.EntityState.Deleted&gt;</ph> state.</source>
          <target state="translated">에 없는 엔터티는 <ph id="ph1">&lt;xref:System.Data.EntityState.Deleted&gt;</ph> 상태입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source><ph id="ph1">&lt;xref:System.Data.Objects.MergeOption&gt;</ph> for <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph> must be <ph id="ph3">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph> if and only if the source entity was <ph id="ph4">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.MergeOption&gt;</ph> 에 대 한 <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph> 해야 <ph id="ph3">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph> 원본 엔터티가 하는 경우에 <ph id="ph4">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>If the source entity was retrieved with any other <ph id="ph1">&lt;xref:System.Data.Objects.MergeOption&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph> <ph id="ph3">&lt;xref:System.Data.Objects.MergeOption&gt;</ph> can be anything but <ph id="ph4">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph> (for example, the entity could have been loaded with <ph id="ph5">&lt;xref:System.Data.Objects.MergeOption.OverwriteChanges&gt;</ph> and the <ph id="ph6">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph> option can be <ph id="ph7">&lt;xref:System.Data.Objects.MergeOption.AppendOnly&gt;</ph>).</source>
          <target state="translated">다른는 소스 엔터티가 검색 된 경우 <ph id="ph1">&lt;xref:System.Data.Objects.MergeOption&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph> <ph id="ph3">&lt;xref:System.Data.Objects.MergeOption&gt;</ph> 결코 수 <ph id="ph4">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph> (예를 들어 엔터티 수는 함께 로드 <ph id="ph5">&lt;xref:System.Data.Objects.MergeOption.OverwriteChanges&gt;</ph> 및 <ph id="ph6">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph> 옵션 될수있습니다<ph id="ph7">&lt;xref:System.Data.Objects.MergeOption.AppendOnly&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>If <ph id="ph1">`mergeOption`</ph> is <ph id="ph2">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph> isn't called on an already loaded entity and <ph id="ph4">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph> isn't called on a non-empty, not-tracked <ph id="ph5">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd&gt;</ph>.</source>
          <target state="translated">경우 <ph id="ph1">`mergeOption`</ph> 은 <ph id="ph2">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph> 이미 로드 된 엔터티에 대해 호출 되지 않은 및 <ph id="ph4">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph> 반드시, not이 추적에서 호출 되지 않은 <ph id="ph5">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>When objects in the collection are already loaded into the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph> method enforces the <ph id="ph3">&lt;xref:System.Data.Objects.MergeOption&gt;</ph> specified by the <ph id="ph4">`mergeOption`</ph> parameter.</source>
          <target state="translated">컬렉션의 개체에 이미 로드 되는 시기는 <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph> 메서드 적용는 <ph id="ph3">&lt;xref:System.Data.Objects.MergeOption&gt;</ph> 에 지정 된는 <ph id="ph4">`mergeOption`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>For more information, see <bpt id="p1">[</bpt>Identity Resolution, State Management, and Change Tracking<ept id="p1">](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Id 확인, 상태 관리 및 변경 내용 추적<ept id="p1">](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>To explicitly load related objects, you must call the <ph id="ph1">`Load`</ph> method on the related end returned by the navigation property.</source>
          <target state="translated">관련된 개체를 명시적으로 로드 하려면 호출 해야 합니다는 <ph id="ph1">`Load`</ph> 탐색 속성에서 반환 된 관련된 end에서 메서드.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>For a one-to-many relationship, call the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph> method on <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>.</source>
          <target state="translated">1 대 다 관계에 대 한 호출에서 <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph> 메서드를 <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>For a one-to-one relationship, call the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A&gt;</ph> on <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601&gt;</ph>.</source>
          <target state="translated">한 일 관계에 대 한 호출에서 <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>This loads the related object data into the object context.</source>
          <target state="translated">이렇게 하면 관련 개체 데이터가 개체 컨텍스트에 로드됩니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>You can enumerate through the collection of returned results using a <ph id="ph1">`foreach`</ph> loop (<ph id="ph2">`For Each...Next`</ph> in Visual Basic) and conditionally call the <ph id="ph3">`Load`</ph> method on <ph id="ph4">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601&gt;</ph> and <ph id="ph5">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> properties for each entity in the results.</source>
          <target state="translated">사용 하 여 반환 된 결과의 컬렉션을 열거할 수 있습니다는 <ph id="ph1">`foreach`</ph> 루프 (<ph id="ph2">`For Each...Next`</ph> Visual basic에서) 조건에 따라 호출는 <ph id="ph3">`Load`</ph> 메서드를 <ph id="ph4">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> 결과의 각 엔터티에 대 한 속성입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph> method loads related objects from the data source whether or not <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph> 메서드 데이터 소스에서 여부 관련된 개체를 로드 <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A&gt;</ph> 은 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>When you call the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph> method during a <ph id="ph2">`foreach`</ph> (C#) or <ph id="ph3">`For Each`</ph> (Visual Basic) enumeration, Object Services tries to open a new data reader.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph>(C#) 또는 <ph id="ph2">`foreach`</ph>(Visual Basic) 열거를 수행하는 동안 <ph id="ph3">`For Each`</ph> 메서드를 호출하면 개체 서비스에서 새 데이터 판독기를 열려고 시도합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>This operation will fail unless you have enabled multiple active results sets by specifying <ph id="ph1">`multipleactiveresultsets=true`</ph> in the connection string.</source>
          <target state="translated">연결 문자열에서 <ph id="ph1">`multipleactiveresultsets=true`</ph>를 지정하여 MARS(Multiple Active Result Sets)를 활성화하지 않은 경우에는 이 작업이 실패합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>You can also load the result of the query into a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> collection.</source>
          <target state="translated">쿼리 결과를 <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> 컬렉션에 로드할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>This closes the data reader and enables you to enumerate over the collection to load referenced objects.</source>
          <target state="translated">이렇게 하면 데이터 판독기가 닫히고 컬렉션 전체를 열거하여 참조된 개체를 로드할 수 있게 됩니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A?displayProperty=nameWithType&gt;</ph> method is synchronized with the <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A?displayProperty=nameWithType&gt;</ph> 메서드가 <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A?displayProperty=nameWithType&gt;</ph> 메서드와 동기화됩니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>This example is based on the .</source>
          <target state="translated">이 예제에서는 기반는 합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</source>
          <target state="translated">@FSHO2@이 예제의 코드를 실행하려면 프로젝트에 AdventureWorks Sales 모델을 추가하고 Entity Framework를 사용하도록 프로젝트를 구성해야 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>To do this, complete the procedures in <bpt id="p1">[</bpt>How to: Manually Configure an Entity Framework Project<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept> and <bpt id="p2">[</bpt>How to: Manually Define the Model and Mapping Files<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>.</source>
          <target state="translated">이 수행 하려면의 절차를 완료 <bpt id="p1">[</bpt>하는 방법: 수동으로 Entity Framework 프로젝트 구성<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept> 및 <bpt id="p2">[</bpt>하는 방법: 모델 및 매핑 파일을 수동으로 정의<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>This example loads the related <ph id="ph1">`SalesOrderHeader`</ph> objects for the <ph id="ph2">`Contact`</ph> entity.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">`SalesOrderHeader`</ph> 엔터티의 관련 <ph id="ph2">`Contact`</ph> 개체를 로드합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.OnCollectionDeserialized(System.Runtime.Serialization.StreamingContext)">
          <source>The streaming context.</source>
          <target state="translated">스트리밍 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.OnCollectionDeserialized(System.Runtime.Serialization.StreamingContext)">
          <source>Used internally to deserialize entity objects.</source>
          <target state="translated">엔터티 개체를 deserialize하기 위해 내부적으로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.OnSerializing(System.Runtime.Serialization.StreamingContext)">
          <source>The streaming context.</source>
          <target state="translated">스트리밍 컨텍스트입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.OnSerializing(System.Runtime.Serialization.StreamingContext)">
          <source>Used internally to serialize entity objects.</source>
          <target state="translated">엔터티 개체를 serialize하기 위해 내부적으로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>The object to remove from the collection.</source>
          <target state="translated">컬렉션에서 제거할 개체입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>Removes an object from the collection and marks the relationship for deletion.</source>
          <target state="translated">컬렉션에서 개체를 제거하고 삭제할 관계를 표시합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if item was successfully removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">항목이 제거되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> method also deletes the relationship between the source object and the object being removed from the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> 메서드는 소스 개체와 컬렉션에서 제거되고 있는 개체 사이의 관계도 삭제합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>If the relationship has a referential integrity constraint, calling the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> method on a dependent object marks both the relationship and the dependent object for deletion.</source>
          <target state="translated">관계에 참조 무결성 제약 조건이 있으면 종속 개체에 대해 <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> 메서드를 호출하면 삭제할 관계 및 종속 개체를 모두 표시합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>This occurs because the constraint indicates that the dependent object cannot exist without a relationship to the parent.</source>
          <target state="translated">이것은 부모와의 관계가 없으면 종속 개체가 존재할 수 없다는 제약 조건이 있기 때문입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>ReferentialConstraint Element (CSDL)<ept id="p1">](http://msdn.microsoft.com/library/24f96a80-85b5-4f2e-a14c-0e3eb6796fa0)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>ReferentialConstraint 요소 (CSDL)<ept id="p1">](http://msdn.microsoft.com/library/24f96a80-85b5-4f2e-a14c-0e3eb6796fa0)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> returns <ph id="ph2">`false`</ph> when the specified object is not in the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> 반환 <ph id="ph2">`false`</ph> 지정된 된 개체가 없는 경우 컬렉션에 있습니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>This example is based on the .</source>
          <target state="translated">이 예제에서는 기반는 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</source>
          <target state="translated">@FSHO2@이 예제의 코드를 실행하려면 프로젝트에 AdventureWorks Sales 모델을 추가하고 Entity Framework를 사용하도록 프로젝트를 구성해야 합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>To do this, complete the procedures in <bpt id="p1">[</bpt>How to: Manually Configure an Entity Framework Project<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept> and <bpt id="p2">[</bpt>How to: Manually Define the Model and Mapping Files<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>.</source>
          <target state="translated">이 수행 하려면의 절차를 완료 <bpt id="p1">[</bpt>하는 방법: 수동으로 Entity Framework 프로젝트 구성<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept> 및 <bpt id="p2">[</bpt>하는 방법: 모델 및 매핑 파일을 수동으로 정의<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> method to remove one of the entities from the collection and then calls the <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A&gt;</ph> method to determine whether the object was removed from the collection.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> 메서드를 사용하여 컬렉션에서 엔터티 중 하나를 제거한 다음 <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A&gt;</ph> 메서드를 호출하여 개체가 컬렉션에서 제거되었는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source><ph id="ph1">&lt;paramref name="entity" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="entity" /&gt;</ph> 개체가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>The <ph id="ph1">&lt;paramref name="entity" /&gt;</ph> object is not attached to the same object context.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="entity" /&gt;</ph> 개체가 같은 개체 컨텍스트에 연결되어 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>The <ph id="ph1">&lt;paramref name="entity" /&gt;</ph> object does not have a valid relationship manager.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="entity" /&gt;</ph> 개체에 올바른 관계 관리자가 없습니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that is used to iterate through the set of values cached by <ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>에서 캐시되는 값 집합을 반복하는 데 사용되는 열거자를 반환합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that iterates through the set of values cached by <ph id="ph2">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>에서 캐시되는 값 집합을 반복하는 <ph id="ph2">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source>Gets a value that indicates whether the related entity collection consists of collection objects.</source>
          <target state="translated">관련 엔터티 컬렉션이 컬렉션 개체로 구성되는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source>This property always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> because the <ph id="ph2">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph> contains objects and not collections.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>에는 컬렉션이 아닌 개체가 들어 있으므로 이 속성은 항상 <ph id="ph1">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList">
          <source>Returns the collection as an <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> used for data binding.</source>
          <target state="translated">컬렉션을 데이터 바인딩에 사용되는 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>로 반환합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> of entity objects.</source>
          <target state="translated">@FSHO2@엔터티 개체의 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> 인스턴스가 <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList">
          <source>This method enables data binding to an <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>에 대한 데이터 바인딩을 활성화합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList">
          <source>It is called by the control bound to the collection.</source>
          <target state="translated">@FSHO2@이 메서드는 컬렉션에 바인딩된 컨트롤에 의해 호출됩니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList">
          <source>For more information, see <bpt id="p1">[</bpt>Binding Objects to Controls<ept id="p1">](http://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>컨트롤에 개체 바인딩<ept id="p1">](http://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b)</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>