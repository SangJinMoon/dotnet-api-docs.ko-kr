<Type Name="RelatedEnd" FullName="System.Data.Objects.DataClasses.RelatedEnd">
  <TypeSignature Language="C#" Value="public abstract class RelatedEnd : System.Data.Objects.DataClasses.IRelatedEnd" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit RelatedEnd extends System.Object implements class System.Data.Objects.DataClasses.IRelatedEnd" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.RelatedEnd" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RelatedEnd&#xA;Implements IRelatedEnd" />
  <TypeSignature Language="C++ CLI" Value="public ref class RelatedEnd abstract : System::Data::Objects::DataClasses::IRelatedEnd" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.Objects.DataClasses.IRelatedEnd</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0ac3a-101">관련 End의 일반 기능을 구현하는 기본 클래스를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-101">Represents a base class that implements common functionality for a related end.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac3a-102"><xref:System.Data.Objects.DataClasses.RelatedEnd>는 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 클래스 및 <xref:System.Data.Objects.DataClasses.EntityReference%601> 클래스의 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-102"><xref:System.Data.Objects.DataClasses.RelatedEnd> is the base class for the <xref:System.Data.Objects.DataClasses.EntityCollection%601> class and the <xref:System.Data.Objects.DataClasses.EntityReference%601> class.</span></span>  
  
 <span data-ttu-id="0ac3a-103"><xref:System.Data.Objects.DataClasses.RelatedEnd> 클래스는 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 및 <xref:System.Data.Objects.DataClasses.EntityReference%601> 클래스 간에 공유되는 기능을 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-103">The <xref:System.Data.Objects.DataClasses.RelatedEnd> class implements functionality that is shared between the <xref:System.Data.Objects.DataClasses.EntityCollection%601> and <xref:System.Data.Objects.DataClasses.EntityReference%601> classes.</span></span>  
  
 <span data-ttu-id="0ac3a-104">이 클래스는 사용자 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-104">This class is not intended to be used directly in your code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AssociationChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler AssociationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler AssociationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AssociationChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ AssociationChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ac3a-105">관련 End가 변경될 때 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-105">Occurs when a change is made to a related end.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac3a-106">다음 메서드에서 <xref:System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged> 이벤트가 발생합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-106">The <xref:System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged> event is raised by the following methods:</span></span>  
  
-   <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A?displayProperty=nameWithType>  
  
-   <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A?displayProperty=nameWithType>  
  
-   <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A?displayProperty=nameWithType>  
  
-   <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A?displayProperty=nameWithType>  
  
-   <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A?displayProperty=nameWithType>  
  
-   <xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="0ac3a-107">`Load`, <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> 및 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A> 같은 대량 작업을 수행하는 동안에는 이벤트가 나타나지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-107">Events may be suppressed during bulk operations, such as `Load`, <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A>, and <xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ac3a-108">관련 개체의 컬렉션을 반복하는 <see cref="T:System.Collections.IEnumerator" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-108">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the collection of related objects.</span></span></summary>
        <returns><span data-ttu-id="0ac3a-109">관련 개체의 컬렉션을 반복하는 <see cref="T:System.Collections.IEnumerator" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-109">An <see cref="T:System.Collections.IEnumerator" /> that iterates through the collection of related objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public bool IsLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoaded" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoaded { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ac3a-110">관련 개체가 모두 로드되었는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-110">Gets a value that indicates whether all related objects have been loaded.</span></span></summary>
        <value>
          <span data-ttu-id="0ac3a-111">관련 End에 데이터베이스의 모든 관련 개체가 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-111"><see langword="true" /> if the related end contains all the related objects from the database; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac3a-112">호출의 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 메서드 집합은 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> 나타내는 플래그입니다. `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-112">Calling the <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> method sets the <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> flag to `true`.</span></span>  
  
 <span data-ttu-id="0ac3a-113">호출의 <xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A> 에서 메서드는 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 설정 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> 를 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-113">Calling the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A> method on an <xref:System.Data.Objects.DataClasses.EntityCollection%601> sets <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> to `false`.</span></span>  
  
 <span data-ttu-id="0ac3a-114">관련 End가 쿼리 경로에 포함되어 있으면 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 또는 <xref:System.Data.Objects.DataClasses.EntityReference%601>도 로드될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-114">An <xref:System.Data.Objects.DataClasses.EntityCollection%601> or <xref:System.Data.Objects.DataClasses.EntityReference%601> may also be loaded if the related end is included in the query path.</span></span> <span data-ttu-id="0ac3a-115">범위에 대 한 자세한 내용은 참조 [관련 개체 로드](http://msdn.microsoft.com/library/452347d2-7b3b-44cd-9001-231299a28cb1)합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-115">For more information about span, see [Loading Related Objects](http://msdn.microsoft.com/library/452347d2-7b3b-44cd-9001-231299a28cb1).</span></span>  
  
 <span data-ttu-id="0ac3a-116">`Load` 메서드를 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 및 <xref:System.Data.Objects.DataClasses.EntityReference%601> 관련 개체 로드 데이터 소스에서 여부 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> 은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-116">The `Load` method on <xref:System.Data.Objects.DataClasses.EntityCollection%601> and <xref:System.Data.Objects.DataClasses.EntityReference%601> loads related objects from the data source whether or not <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> is `true`.</span></span>  
  
 <span data-ttu-id="0ac3a-117">개체가 분리 되는 경우는 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> 플래그 상태에서 변경 될 `false` 를 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-117">When an object is detached, the <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> flag is changed from `false` to `true`.</span></span>  
  
 <span data-ttu-id="0ac3a-118">처리 하기 전에 관련된 end가 완전히 로드 되도록 확인 해야 하는지 여부를 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> 은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-118">To guarantee that a related end is fully loaded before doing processing, you should check whether <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> is `false`.</span></span> <span data-ttu-id="0ac3a-119">경우 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> 은 `false`를 호출 해야는 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-119">If <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> is `false`, you should call the <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0ac3a-120">파생 클래스에서 재정의될 경우 관련 개체를 로컬 컬렉션 또는 참조에 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-120">When overridden in a derived class, loads the related object or objects into the local collection or reference.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Load</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ac3a-121">파생 클래스에서 재정의될 경우 기본 병합 옵션을 사용하여 관련 개체를 관련 End에 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-121">When overridden in a derived class, loads the related object or objects into the related end with the default merge option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac3a-122">기본 병합 옵션은 추적된 개체의 경우 <xref:System.Data.Objects.MergeOption.AppendOnly>이고 개체가 <xref:System.Data.Objects.MergeOption.NoTracking>에서 추적되지 않은 경우 <xref:System.Data.Objects.ObjectStateManager>입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-122">The default merge option is <xref:System.Data.Objects.MergeOption.AppendOnly> for tracked objects or <xref:System.Data.Objects.MergeOption.NoTracking> when the object is not tracked in the <xref:System.Data.Objects.ObjectStateManager>.</span></span> <span data-ttu-id="0ac3a-123">이외의 다른 병합 옵션을 지정 하려면 <xref:System.Data.Objects.MergeOption.AppendOnly>, 호출의 `Load` 메서드를는 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 또는 <xref:System.Data.Objects.DataClasses.EntityReference%601> 특정 생긴다는 <xref:System.Data.Objects.MergeOption> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-123">To specify a merge option other than <xref:System.Data.Objects.MergeOption.AppendOnly>, call the `Load` method on the <xref:System.Data.Objects.DataClasses.EntityCollection%601> or the <xref:System.Data.Objects.DataClasses.EntityReference%601> that takes a specific <xref:System.Data.Objects.MergeOption> parameter.</span></span>  
  
 <span data-ttu-id="0ac3a-124">호출의 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 메서드 집합은 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> 나타내는 플래그입니다. `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-124">Calling the <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> method sets the <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> flag to `true`.</span></span>  
  
 <span data-ttu-id="0ac3a-125"><xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 메서드 데이터 소스에서 여부 관련된 개체를 로드 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> 은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-125">The <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> method loads related objects from the data source whether or not <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> is `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0ac3a-126">@FSHO2@<see cref="F:System.Data.Objects.MergeOption.NoTracking" /> 쿼리를 사용하여 소스 개체를 검색했으며 <see cref="T:System.Data.Objects.MergeOption" />이 <see cref="F:System.Data.Objects.MergeOption.NoTracking" />이 아니거나 관련 개체가 이미 로드된 경우</span><span class="sxs-lookup"><span data-stu-id="0ac3a-126">When the source object was retrieved by using a <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> query and the <see cref="T:System.Data.Objects.MergeOption" /> is not <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> or the related objects are already loaded.</span></span>  
  
 <span data-ttu-id="0ac3a-127">또는</span><span class="sxs-lookup"><span data-stu-id="0ac3a-127">-or-</span></span>  
  
 <span data-ttu-id="0ac3a-128">@FSHO2@소스 개체가 <see cref="T:System.Data.Objects.ObjectContext" />에 연결되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="0ac3a-128">When the source object is not attached to the <see cref="T:System.Data.Objects.ObjectContext" />.</span></span>  
  
 <span data-ttu-id="0ac3a-129">또는</span><span class="sxs-lookup"><span data-stu-id="0ac3a-129">-or-</span></span>  
  
 <span data-ttu-id="0ac3a-130">@FSHO2@소스 개체가 추적되고 있지만 <see cref="F:System.Data.EntityState.Added" /> 또는 <see cref="F:System.Data.EntityState.Deleted" /> 상태이거나 <see cref="T:System.Data.Objects.MergeOption" />에 사용된 <see cref="M:System.Data.Objects.DataClasses.RelatedEnd.Load" />이 <see cref="F:System.Data.Objects.MergeOption.NoTracking" />인 경우</span><span class="sxs-lookup"><span data-stu-id="0ac3a-130">When the source object is being tracked but is in the <see cref="F:System.Data.EntityState.Added" /> or <see cref="F:System.Data.EntityState.Deleted" /> state or the <see cref="T:System.Data.Objects.MergeOption" /> used for <see cref="M:System.Data.Objects.DataClasses.RelatedEnd.Load" /> is <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract void Load (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Load(System::Data::Objects::MergeOption mergeOption);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption"><span data-ttu-id="0ac3a-131">@FSHO2@기존 <see cref="T:System.Data.Objects.MergeOption" />으로 개체를 병합할 때 사용하는 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-131">The <see cref="T:System.Data.Objects.MergeOption" /> to use when merging objects into an existing <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="0ac3a-132">파생 클래스에서 재정의될 경우 지정된 병합 옵션을 사용하여 관련 End에서 개체를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-132">When overridden in a derived class, loads an object or objects from the related end with the specified merge option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac3a-133"><xref:System.Data.Objects.DataClasses.EntityCollection%601> 및 <xref:System.Data.Objects.DataClasses.EntityReference%601> 모두 이 메서드를 재정의하여 관련 개체를 로드합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-133">Both <xref:System.Data.Objects.DataClasses.EntityCollection%601> and <xref:System.Data.Objects.DataClasses.EntityReference%601> override this method to load related objects.</span></span> <span data-ttu-id="0ac3a-134">`Load` 탐색 속성에 의해 노출 되는 관련된 end에서 관련된 개체를 명시적으로 로드 하 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-134">`Load` is called to explicitly load related objects from a related end exposed by a navigation property.</span></span> <span data-ttu-id="0ac3a-135">자세한 내용은 참조 [관련 개체 로드](http://msdn.microsoft.com/library/452347d2-7b3b-44cd-9001-231299a28cb1)합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-135">For more information, see [Loading Related Objects](http://msdn.microsoft.com/library/452347d2-7b3b-44cd-9001-231299a28cb1).</span></span>  
  
 <span data-ttu-id="0ac3a-136">호출의 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 메서드 집합은 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> 나타내는 플래그입니다. `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-136">Calling the <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> method sets the <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> flag to `true`.</span></span>  
  
 <span data-ttu-id="0ac3a-137"><xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> 메서드 데이터 소스에서 여부 관련된 개체를 로드 <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> 은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-137">The <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> method loads related objects from the data source whether or not <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> is `true`.</span></span>  
  
 <span data-ttu-id="0ac3a-138">기본 병합 옵션은 추적된 개체의 경우 <xref:System.Data.Objects.MergeOption.AppendOnly>이고 개체가 <xref:System.Data.Objects.MergeOption.NoTracking>에서 추적되지 않은 경우 <xref:System.Data.Objects.ObjectStateManager>입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-138">The default merge option is <xref:System.Data.Objects.MergeOption.AppendOnly> for tracked objects or <xref:System.Data.Objects.MergeOption.NoTracking> when the object is not tracked in the <xref:System.Data.Objects.ObjectStateManager>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0ac3a-139">@FSHO2@<see cref="F:System.Data.Objects.MergeOption.NoTracking" /> 쿼리를 사용하여 소스 개체를 검색했으며 <see cref="T:System.Data.Objects.MergeOption" />이 <see cref="F:System.Data.Objects.MergeOption.NoTracking" />이 아니거나 관련 개체가 이미 로드된 경우</span><span class="sxs-lookup"><span data-stu-id="0ac3a-139">When the source object was retrieved by using a <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> query and the <see cref="T:System.Data.Objects.MergeOption" /> is not <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> or the related objects are already loaded.</span></span>  
  
 <span data-ttu-id="0ac3a-140">또는</span><span class="sxs-lookup"><span data-stu-id="0ac3a-140">-or-</span></span>  
  
 <span data-ttu-id="0ac3a-141">@FSHO2@소스 개체가 <see cref="T:System.Data.Objects.ObjectContext" />에 연결되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="0ac3a-141">When the source object is not attached to the <see cref="T:System.Data.Objects.ObjectContext" />.</span></span>  
  
 <span data-ttu-id="0ac3a-142">또는</span><span class="sxs-lookup"><span data-stu-id="0ac3a-142">-or-</span></span>  
  
 <span data-ttu-id="0ac3a-143">@FSHO2@소스 개체가 추적되고 있지만 <see cref="F:System.Data.EntityState.Added" /> 또는 <see cref="F:System.Data.EntityState.Deleted" /> 상태이거나 <see cref="T:System.Data.Objects.MergeOption" />에 사용된 <see cref="M:System.Data.Objects.DataClasses.RelatedEnd.Load" />이 <see cref="F:System.Data.Objects.MergeOption.NoTracking" />인 경우</span><span class="sxs-lookup"><span data-stu-id="0ac3a-143">When the source object is being tracked but is in the <see cref="F:System.Data.EntityState.Added" /> or <see cref="F:System.Data.EntityState.Deleted" /> state or the <see cref="T:System.Data.Objects.MergeOption" /> used for <see cref="M:System.Data.Objects.DataClasses.RelatedEnd.Load" /> is <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialized">
      <MemberSignature Language="C#" Value="public void OnDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnDeserialized</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="0ac3a-144">serialize된 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-144">The serialized stream.</span></span></param>
        <summary><span data-ttu-id="0ac3a-145"><see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> 인스턴스와 함께 엔터티 개체를 deserialize하기 위해 내부적으로 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-145">Used internally to deserialize entity objects along with the <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> instances.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipName">
      <MemberSignature Language="C#" Value="public string RelationshipName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ac3a-146">이 관련 End가 참여하는 관계의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-146">Gets the name of the relationship in which this related end participates.</span></span></summary>
        <value><span data-ttu-id="0ac3a-147">이 <see cref="T:System.Data.Objects.DataClasses.RelatedEnd" />가 참여하는 관계의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-147">The name of the relationship in which this <see cref="T:System.Data.Objects.DataClasses.RelatedEnd" /> participates.</span></span> <span data-ttu-id="0ac3a-148">@FSHO2@관계 이름은 정규화된 네임스페이스가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-148">The relationship name is not namespace qualified.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipSet">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.RelationshipSet RelationshipSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.RelationshipSet RelationshipSet" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipSet As RelationshipSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::RelationshipSet ^ RelationshipSet { System::Data::Metadata::Edm::RelationshipSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.RelationshipSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ac3a-149">관련 End의 메타데이터에 대한 참조를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-149">Gets a reference to the metadata for the related end.</span></span></summary>
        <value><span data-ttu-id="0ac3a-150">관계의 End에 대한 메타데이터를 포함한 <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-150">A <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> object that contains metadata for the end of a relationship.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceRoleName">
      <MemberSignature Language="C#" Value="public string SourceRoleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceRoleName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceRoleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceRoleName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ac3a-151">관계의 소스 End에 있는 역할 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-151">Gets the role name at the source end of the relationship.</span></span></summary>
        <value><span data-ttu-id="0ac3a-152">@FSHO2@역할 이름인 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-152">A <see cref="T:System.String" /> that is the role name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac3a-153">역할 이름은으로 지정 됩니다는 `Role` 특성에는 `End` 개념적 모델에이 관계를 정의 하는 연결에에서 대 한 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-153">The role name is specified by the `Role` attribute of the `End` element in the association that defines this relationship in the conceptual model.</span></span> <span data-ttu-id="0ac3a-154">자세한 내용은 [Association 요소(CSDL)](http://msdn.microsoft.com/library/c305169a-8af7-432f-9ba7-800a163aed41)를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-154">For more information, see [Association Element (CSDL)](http://msdn.microsoft.com/library/c305169a-8af7-432f-9ba7-800a163aed41).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ac3a-155">이 항목의 예제를 기반는 [AdventureWorks Sales 모델](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)로 생성 된는 [엔터티 데이터 모델 마법사](http://msdn.microsoft.com/library/423ec9a7-5464-43b7-a7ef-9f5f000848b5)합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-155">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832), which was generated by the [Entity Data Model Wizard](http://msdn.microsoft.com/library/423ec9a7-5464-43b7-a7ef-9f5f000848b5).</span></span>  
  
 <span data-ttu-id="0ac3a-156">다음 예제에서는 새로 추가 `SalesOrderHeader` 엔터티는 `Contact` 엔터티.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-156">The following example adds new `SalesOrderHeader` entities to the `Contact` entity.</span></span> <span data-ttu-id="0ac3a-157">그런 다음 관련된 end를 모두 가져오고는 `Contact` 엔터티 및 표시에 해당 하는 관계의 이름, 소스 역할 이름 및 각 관련된 end에 대 한 대상 역할 이름을 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-157">Then it gets all related ends from the `Contact` entity and displays relationship name, source role name, and target role name for each related end.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Add">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0ac3a-158">개체를 관련 End에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-158">Adds an object to the related end.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Add">
      <MemberSignature Language="C#" Value="void IRelatedEnd.Add (System.Data.Objects.DataClasses.IEntityWithRelationships entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.Objects.DataClasses.IRelatedEnd.Add(class System.Data.Objects.DataClasses.IEntityWithRelationships entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (entity As IEntityWithRelationships) Implements IRelatedEnd.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.Objects.DataClasses.IRelatedEnd.Add(System::Data::Objects::DataClasses::IEntityWithRelationships ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="0ac3a-159">@FSHO2@컬렉션에 추가할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-159">An object to add to the collection.</span></span> <span data-ttu-id="0ac3a-160">이 개체는 <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" /> 인터페이스를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-160">This object must implement the <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" /> interface.</span></span></param>
        <summary><span data-ttu-id="0ac3a-161">개체를 관련 End에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-161">Adds an object to the related end.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac3a-162">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="0ac3a-162">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0ac3a-163"><xref:System.Data.Objects.DataClasses.RelatedEnd> 인스턴스가 <xref:System.Data.Objects.DataClasses.IRelatedEnd> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-163">It can be used only when the <xref:System.Data.Objects.DataClasses.RelatedEnd> instance is cast to an <xref:System.Data.Objects.DataClasses.IRelatedEnd> interface.</span></span>  
  
 <span data-ttu-id="0ac3a-164"><xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23Add%2A> 메서드는.NET Framework의 이전 버전과 호환성을 위해서만 유지 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-164">The <xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23Add%2A> method is only maintained for compatibility with previous versions of the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Add">
      <MemberSignature Language="C#" Value="void IRelatedEnd.Add (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.Objects.DataClasses.IRelatedEnd.Add(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (entity As Object) Implements IRelatedEnd.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.Objects.DataClasses.IRelatedEnd.Add(System::Object ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="0ac3a-165">관련 End에 추가할 엔터티 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-165">An entity instance to add to the related end.</span></span></param>
        <summary><span data-ttu-id="0ac3a-166">개체를 관련 End에 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-166">Adds an object to the related end.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac3a-167">원본 엔터티 개체가 캐시에 연결 된 모든 연결 된 끝은 개체가 캐시에 추가 하 고 해당 관계에도 추가 됩니다 하는 경우는 <xref:System.Data.Objects.ObjectStateManager>합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-167">If the source entity object is attached to a cache, then all the connected ends are added to the object cache and their corresponding relationships are also added to the <xref:System.Data.Objects.ObjectStateManager>.</span></span> <span data-ttu-id="0ac3a-168"><xref:System.Data.Objects.DataClasses.RelatedEnd> 관계의 고정 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-168">The <xref:System.Data.Objects.DataClasses.RelatedEnd> of the relationship is also fixed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Attach">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0ac3a-169">개체를 관련 End에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-169">Attaches an object at the related end.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Attach">
      <MemberSignature Language="C#" Value="void IRelatedEnd.Attach (System.Data.Objects.DataClasses.IEntityWithRelationships entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.Objects.DataClasses.IRelatedEnd.Attach(class System.Data.Objects.DataClasses.IEntityWithRelationships entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
      <MemberSignature Language="VB.NET" Value="Sub Attach (entity As IEntityWithRelationships) Implements IRelatedEnd.Attach" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.Objects.DataClasses.IRelatedEnd.Attach(System::Data::Objects::DataClasses::IEntityWithRelationships ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Attach;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="0ac3a-170">@FSHO2@연결 중인 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-170">The object being attached.</span></span></param>
        <summary><span data-ttu-id="0ac3a-171">개체를 관련 End에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-171">Attaches an object at the related end.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac3a-172">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="0ac3a-172">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0ac3a-173"><xref:System.Data.Objects.DataClasses.RelatedEnd> 인스턴스가 <xref:System.Data.Objects.DataClasses.IRelatedEnd> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-173">It can be used only when the <xref:System.Data.Objects.DataClasses.RelatedEnd> instance is cast to an <xref:System.Data.Objects.DataClasses.IRelatedEnd> interface.</span></span>  
  
 <span data-ttu-id="0ac3a-174"><xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23Attach%2A> 메서드는.NET Framework의 이전 버전과 호환성을 위해서만 유지 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-174">The <xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23Attach%2A> method is only maintained for compatibility with previous versions of the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Attach">
      <MemberSignature Language="C#" Value="void IRelatedEnd.Attach (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.Objects.DataClasses.IRelatedEnd.Attach(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Attach (entity As Object) Implements IRelatedEnd.Attach" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.Objects.DataClasses.IRelatedEnd.Attach(System::Object ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Attach;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="0ac3a-175">관련 End에 연결할 엔터티 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-175">An entity instance to attach to the related end.</span></span></param>
        <summary><span data-ttu-id="0ac3a-176">개체를 관련 End에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-176">Attaches an object to the related end.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac3a-177">관련된 end에 연결 된 일부 엔터티 이미 있으면 새 엔터티와 기존 엔터티에 병합 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-177">If the related end already has some entities attached to it, the existing entities will be merged with the new entity.</span></span> <span data-ttu-id="0ac3a-178">새 엔터티는 관련 된 엔터티 개체의 전체 집합이 아닐 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-178">The new entity is not assumed to be the complete set of related entity objects.</span></span>  
  
 <span data-ttu-id="0ac3a-179">원본 엔터티 개체가 및 전달 되는 모든 엔터티 개체에 있어야는 <xref:System.Data.EntityState.Unchanged> 또는 <xref:System.Data.EntityState.Modified> 상태입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-179">The source entity object and all entity objects passed in must be in an <xref:System.Data.EntityState.Unchanged> or <xref:System.Data.EntityState.Modified> state.</span></span> <span data-ttu-id="0ac3a-180">삭제 된 요소는 상태 관리자가 관계 인스턴스를 이미 추적 하는 경우에 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-180">Deleted elements are allowed only when the state manager is already tracking the relationship instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerable IRelatedEnd.CreateSourceQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerable System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery" />
      <MemberSignature Language="VB.NET" Value="Function CreateSourceQuery () As IEnumerable Implements IRelatedEnd.CreateSourceQuery" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerable ^ System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery() = System::Data::Objects::DataClasses::IRelatedEnd::CreateSourceQuery;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ac3a-181">관련 End에 속하는 개체를 나타내는 <see cref="T:System.Collections.IEnumerable" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-181">Returns an <see cref="T:System.Collections.IEnumerable" /> that represents the objects that belong to the related end.</span></span></summary>
        <returns><span data-ttu-id="0ac3a-182">관련 End에 속하는 개체를 나타내는 <see cref="T:System.Collections.IEnumerable" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-182">An <see cref="T:System.Collections.IEnumerable" /> that represents the objects that belong to the related end.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac3a-183">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="0ac3a-183">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0ac3a-184"><xref:System.Data.Objects.DataClasses.RelatedEnd> 인스턴스가 <xref:System.Data.Objects.DataClasses.IRelatedEnd> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-184">It can be used only when the <xref:System.Data.Objects.DataClasses.RelatedEnd> instance is cast to an <xref:System.Data.Objects.DataClasses.IRelatedEnd> interface.</span></span>  
  
 <span data-ttu-id="0ac3a-185"><xref:System.Data.Objects.DataClasses.EntityCollection%601> 및 <xref:System.Data.Objects.DataClasses.EntityReference%601> 모두 <xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23CreateSourceQuery%2A>를 재정의하여 <xref:System.Data.Objects.ObjectQuery%601>를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-185"><xref:System.Data.Objects.DataClasses.EntityCollection%601> and <xref:System.Data.Objects.DataClasses.EntityReference%601> both override <xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23CreateSourceQuery%2A> to return an <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="0ac3a-186">이 쿼리를 실행하면 관련 End에 속한 개체 집합이 반환됩니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-186">This query, when it is executed, returns the same set of objects that belong to the related end.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Remove">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0ac3a-187">관련 End에서 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-187">Removes an object from the related end.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Remove">
      <MemberSignature Language="C#" Value="bool IRelatedEnd.Remove (System.Data.Objects.DataClasses.IEntityWithRelationships entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Data.Objects.DataClasses.IRelatedEnd.Remove(class System.Data.Objects.DataClasses.IEntityWithRelationships entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (entity As IEntityWithRelationships) As Boolean Implements IRelatedEnd.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Data.Objects.DataClasses.IRelatedEnd.Remove(System::Data::Objects::DataClasses::IEntityWithRelationships ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="0ac3a-188">컬렉션에서 제거할 엔터티 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-188">The entity instance to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="0ac3a-189">관련 End의 컬렉션에서 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-189">Removes an object from the collection at the related end.</span></span></summary>
        <returns><span data-ttu-id="0ac3a-190">개체가 제거되었는지 여부를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-190">A value that indicates whether the object was removed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac3a-191">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="0ac3a-191">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0ac3a-192"><xref:System.Data.Objects.DataClasses.RelatedEnd> 인스턴스가 <xref:System.Data.Objects.DataClasses.IRelatedEnd> 인터페이스로 캐스팅된 경우에만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-192">It can be used only when the <xref:System.Data.Objects.DataClasses.RelatedEnd> instance is cast to an <xref:System.Data.Objects.DataClasses.IRelatedEnd> interface.</span></span>  
  
 <span data-ttu-id="0ac3a-193"><xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23Remove%2A> 메서드는.NET Framework의 이전 버전과 호환성을 위해서만 유지 관리 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-193">The <xref:System.Data.Objects.DataClasses.RelatedEnd.System%23Data%23Objects%23DataClasses%23IRelatedEnd%23Remove%2A> method is only maintained for compatibility with previous versions of the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.Objects.DataClasses.IRelatedEnd.Remove">
      <MemberSignature Language="C#" Value="bool IRelatedEnd.Remove (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Data.Objects.DataClasses.IRelatedEnd.Remove(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (entity As Object) As Boolean Implements IRelatedEnd.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Data.Objects.DataClasses.IRelatedEnd.Remove(System::Object ^ entity) = System::Data::Objects::DataClasses::IRelatedEnd::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="0ac3a-194">관련 End에서 제거할 엔터티 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-194">An entity instance to remove from the related end.</span></span></param>
        <summary><span data-ttu-id="0ac3a-195">개체가 관련 End의 일부인 경우 관련 End에서 개체를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-195">Removes an object from the related end if the object is part of the related end.</span></span></summary>
        <returns>
          <span data-ttu-id="0ac3a-196">엔터티가 성공적으로 제거되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-196"><see langword="true" /> if the entity was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac3a-197">원본 엔터티 개체가 캐시에 연결 되 면 관계 삭제 되도록 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-197">If the source entity object is attached to a cache, the relationship is marked for deletion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetRoleName">
      <MemberSignature Language="C#" Value="public string TargetRoleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetRoleName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetRoleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetRoleName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ac3a-198">관계의 대상 End에 있는 역할 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-198">Gets the role name at the target end of the relationship.</span></span></summary>
        <value><span data-ttu-id="0ac3a-199">@FSHO2@역할 이름인 <see cref="T:System.String" />입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-199">A <see cref="T:System.String" /> that is the role name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ac3a-200">역할 이름은으로 지정 됩니다는 `Role` 특성에는 `End` 개념적 모델에이 관계를 정의 하는 연결에에서 대 한 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-200">The role name is specified by the `Role` attribute of the `End` element in the association that defines this relationship in the conceptual model.</span></span> <span data-ttu-id="0ac3a-201">자세한 내용은 [Association 요소(CSDL)](http://msdn.microsoft.com/library/c305169a-8af7-432f-9ba7-800a163aed41)를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-201">For more information, see [Association Element (CSDL)](http://msdn.microsoft.com/library/c305169a-8af7-432f-9ba7-800a163aed41).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ac3a-202">이 항목의 예제를 기반는 [AdventureWorks Sales 모델](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-202">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="0ac3a-203">이 예에서는 새로운 추가 `SalesOrderHeader` 엔터티는 `Contact` 엔터티.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-203">The example adds new `SalesOrderHeader` entities to the `Contact` entity.</span></span> <span data-ttu-id="0ac3a-204">그런 다음 관련된 end를 모두 가져오고는 `Contact` 엔터티 및 표시에 해당 하는 관계의 이름, 소스 역할 이름 및 각 관련된 end에 대 한 대상 역할 이름을 합니다.</span><span class="sxs-lookup"><span data-stu-id="0ac3a-204">Then it gets all related ends from the `Contact` entity and displays relationship name, source role name, and target role name for each related end.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName" />
      </Docs>
    </Member>
  </Members>
</Type>