<Type Name="XDeclaration" FullName="System.Xml.Linq.XDeclaration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="777644c210521c51ac05050f0e1c02686e93a949" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30719547" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XDeclaration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XDeclaration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XDeclaration" />
  <TypeSignature Language="VB.NET" Value="Public Class XDeclaration" />
  <TypeSignature Language="C++ CLI" Value="public ref class XDeclaration" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2b9df-101">XML 선언을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2b9df-101">Represents an XML declaration.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9df-102">여부 XML 문서가 독립 실행형인지 및 XML 버전, 인코딩, 선언 하는 XML 선언을 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-102">An XML declaration is used to declare the XML version, the encoding, and whether or not the XML document is standalone.</span></span> <span data-ttu-id="2b9df-103">이 클래스는 XML 선언의 XML 개념을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-103">This class represents the XML concept of an XML declaration.</span></span>  
  
 <span data-ttu-id="2b9df-104">XML 표준에서와 마찬가지로 선언은 문서와 연결 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-104">Just as in the XML standard, declarations are associated with a document.</span></span> <span data-ttu-id="2b9df-105">문서를 만들 때는 문서에 대 한 선언을 지정할 수 있는 옵션이 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-105">When you create a document, you have the option to specify the declaration for the document.</span></span> <span data-ttu-id="2b9df-106"><xref:System.Xml.Linq.XDocument> 클래스에 포함 되어는 <xref:System.Xml.Linq.XDocument.Declaration%2A> 속성 선언을 가져오거나 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-106">The <xref:System.Xml.Linq.XDocument> class contains the <xref:System.Xml.Linq.XDocument.Declaration%2A> property, which allows you to set or get the declaration.</span></span> <span data-ttu-id="2b9df-107">XML 선언으로 XML 트리를 serialize 하는 방법에 대 한 정보를 참조 하십시오. [XML 선언으로 직렬화](http://msdn.microsoft.com/library/30f1b564-62b5-4e5d-9c36-884e51113feb)합니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-107">For information about how to serialize an XML tree with an XML declaration, see [Serializing with an XML Declaration](http://msdn.microsoft.com/library/30f1b564-62b5-4e5d-9c36-884e51113feb).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xml.Linq.XDocument.Declaration" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2b9df-108">
            <see cref="T:System.Xml.Linq.XDeclaration" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9df-108">Initializes a new instance of the <see cref="T:System.Xml.Linq.XDeclaration" /> class.</span>
          </span>
        </summary>
        <altmember cref="M:System.Xml.Linq.XDeclaration.ToString" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XDeclaration (System.Xml.Linq.XDeclaration other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XDeclaration other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As XDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XDeclaration(System::Xml::Linq::XDeclaration ^ other);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.Linq.XDeclaration" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="2b9df-109">이 <see cref="T:System.Xml.Linq.XDeclaration" /> 개체를 초기화하는 데 사용되는 <see cref="T:System.Xml.Linq.XDeclaration" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9df-109">The <see cref="T:System.Xml.Linq.XDeclaration" /> used to initialize this <see cref="T:System.Xml.Linq.XDeclaration" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b9df-110">다른 <see cref="T:System.Xml.Linq.XDeclaration" /> 개체를 사용하여 <see cref="T:System.Xml.Linq.XDeclaration" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9df-110">Initializes a new instance of the <see cref="T:System.Xml.Linq.XDeclaration" /> class from another <see cref="T:System.Xml.Linq.XDeclaration" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9df-111">이 생성자는 주로 XML 트리의 전체 복사본을 만들기를 내부적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-111">This constructor is primarily used internally to make a deep copy of an XML tree.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Linq.XDeclaration.ToString" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XDeclaration (string version, string encoding, string standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string version, string encoding, string standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (version As String, encoding As String, standalone As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XDeclaration(System::String ^ version, System::String ^ encoding, System::String ^ standalone);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="version" Type="System.String" />
        <Parameter Name="encoding" Type="System.String" />
        <Parameter Name="standalone" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="version">
          <span data-ttu-id="2b9df-112">XML의 버전이며, 일반적으로 "1.0"입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9df-112">The version of the XML, usually "1.0".</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="2b9df-113">XML 문서의 인코딩입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9df-113">The encoding for the XML document.</span>
          </span>
        </param>
        <param name="standalone">
          <span data-ttu-id="2b9df-114">XML이 독립 실행형인지 아니면 외부 엔터티를 확인해야 하는지 여부를 지정하는 "yes" 또는 "no"가 들어 있는 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9df-114">A string containing "yes" or "no" that specifies whether the XML is standalone or requires external entities to be resolved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2b9df-115">지정된 버전, 인코딩 및 독립 실행형 상태를 사용하여 <see cref="T:System.Xml.Linq.XDeclaration" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9df-115">Initializes a new instance of the <see cref="T:System.Xml.Linq.XDeclaration" /> class with the specified version, encoding, and standalone status.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2b9df-116">다음 예제에서는 선언이 포함 된 문서를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-116">The following example creates a document that contains a declaration.</span></span>  
  
```csharp  
XDocument doc = new XDocument(  
    new XDeclaration("1.0", "utf-8", "yes"),  
    new XComment("This is a comment"),  
    new XElement("Root", "content")  
);  
doc.Save("Root.xml");  
  
Console.WriteLine(File.ReadAllText("Root.xml"));  
```  
  
```vb  
Dim doc As XDocument = _   
        <?xml version="1.0" encoding="utf-8" standalone="yes"?>  
            <!--This is a comment-->  
            <Root>content</Root>  
  
doc.Save("Root.xml")  
  
Console.WriteLine(File.ReadAllText("Root.xml"))  
```  
  
 <span data-ttu-id="2b9df-117">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-117">This example produces the following output:</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" standalone="yes"?>  
<!--This is a comment-->  
<Root>content</Root>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Linq.XDeclaration.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public string Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XDeclaration.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Encoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b9df-118">이 문서의 인코딩을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9df-118">Gets or sets the encoding for this document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b9df-119">이 문서의 코드 페이지 이름이 들어 있는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9df-119">A <see cref="T:System.String" /> containing the code page name for this document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9df-120"><xref:System.Text.Encoding.WebName%2A>에서 반환하는 모든 값은 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-120">Any value returned by <xref:System.Text.Encoding.WebName%2A> is a valid value.</span></span>  
  
 <span data-ttu-id="2b9df-121">인코딩된 문서를 읽을 경우이 속성의 코드 페이지 이름에 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-121">If you read an encoded document, then this property will be set to the code page name.</span></span>  
  
 <span data-ttu-id="2b9df-122">로 설정 하면이 속성을 유효한 코드 페이지 이름으로 다음 직렬화 할 때 지정 된 인코딩을 사용 하 여 LINQ to XML serialize 됩니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-122">If you set this property to a valid code page name, then when serializing, LINQ to XML will serialize with the specified encoding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b9df-123">다음 예제에서는 UTF-8 인코딩을 사용하여 문서를 하나 만들고 UTF-16 인코딩을 사용하여 문서를 하나 만든 다음</span><span class="sxs-lookup"><span data-stu-id="2b9df-123">The following example creates two documents, one with utf-8 encoding, and one with utf-16 encoding.</span></span> <span data-ttu-id="2b9df-124">그런 다음 문서를 로드하고 인코딩을 콘솔에 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-124">It then loads the documents and prints the encoding to the console.</span></span>  
  
```csharp  
Console.WriteLine("Creating a document with utf-8 encoding");  
XDocument encodedDoc8 = new XDocument(  
    new XDeclaration("1.0", "utf-8", "yes"),  
    new XElement("Root", "Content")  
);  
encodedDoc8.Save("EncodedUtf8.xml");  
Console.WriteLine("Encoding is:{0}", encodedDoc8.Declaration.Encoding);  
Console.WriteLine();  
  
Console.WriteLine("Creating a document with utf-16 encoding");  
XDocument encodedDoc16 = new XDocument(  
    new XDeclaration("1.0", "utf-16", "yes"),  
    new XElement("Root", "Content")  
);  
encodedDoc16.Save("EncodedUtf16.xml");  
Console.WriteLine("Encoding is:{0}", encodedDoc16.Declaration.Encoding);  
Console.WriteLine();  
  
XDocument newDoc8 = XDocument.Load("EncodedUtf8.xml");  
Console.WriteLine("Encoded document:");  
Console.WriteLine(File.ReadAllText("EncodedUtf8.xml"));  
Console.WriteLine();  
Console.WriteLine("Encoding of loaded document is:{0}", newDoc8.Declaration.Encoding);  
Console.WriteLine();  
  
XDocument newDoc16 = XDocument.Load("EncodedUtf16.xml");  
Console.WriteLine("Encoded document:");  
Console.WriteLine(File.ReadAllText("EncodedUtf16.xml"));  
Console.WriteLine();  
Console.WriteLine("Encoding of loaded document is:{0}", newDoc16.Declaration.Encoding);  
```  
  
```vb  
Console.WriteLine("Creating a document with utf-8 encoding")  
Dim encodedDoc8 As XDocument = _   
        <?xml version="1.0" encoding="utf-8" standalone="yes"?>  
            <Root>Content</Root>  
encodedDoc8.Save("EncodedUtf8.xml")  
Console.WriteLine("Encoding is:{0}", encodedDoc8.Declaration.Encoding)  
Console.WriteLine()  
  
Console.WriteLine("Creating a document with utf-16 encoding")  
Dim encodedDoc16 As XDocument = _   
        <?xml version="1.0" encoding="utf-16" standalone="yes"?>  
            <Root>Content</Root>  
  
encodedDoc16.Save("EncodedUtf16.xml")  
Console.WriteLine("Encoding is:{0}", encodedDoc16.Declaration.Encoding)  
Console.WriteLine()  
  
Dim newDoc8 As XDocument = XDocument.Load("EncodedUtf8.xml")  
Console.WriteLine("Encoded document:")  
Console.WriteLine(File.ReadAllText("EncodedUtf8.xml"))  
Console.WriteLine()  
Console.WriteLine("Encoding of loaded document is:{0}", newDoc8.Declaration.Encoding)  
Console.WriteLine()  
  
Dim newDoc16 As XDocument = XDocument.Load("EncodedUtf16.xml")  
Console.WriteLine("Encoded document:")  
Console.WriteLine(File.ReadAllText("EncodedUtf16.xml"))  
Console.WriteLine()  
Console.WriteLine("Encoding of loaded document is:{0}", newDoc16.Declaration.Encoding)  
```  
  
 <span data-ttu-id="2b9df-125">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-125">This example produces the following output:</span></span>  
  
```  
Creating a document with utf-8 encoding  
Encoding is:utf-8  
  
Creating a document with utf-16 encoding  
Encoding is:utf-16  
  
Encoded document:  
<?xml version="1.0" encoding="utf-8" standalone="yes"?>  
<Root>Content</Root>  
  
Encoding of loaded document is:utf-8  
  
Encoded document:  
<?xml version="1.0" encoding="utf-16" standalone="yes"?>  
<Root>Content</Root>  
  
Encoding of loaded document is:utf-16  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Linq.XDeclaration.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Standalone">
      <MemberSignature Language="C#" Value="public string Standalone { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Standalone" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XDeclaration.Standalone" />
      <MemberSignature Language="VB.NET" Value="Public Property Standalone As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Standalone { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b9df-126">이 문서의 독립 실행형 속성을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9df-126">Gets or sets the standalone property for this document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b9df-127">이 문서의 독립 실행형 속성이 들어 있는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9df-127">A <see cref="T:System.String" /> containing the standalone property for this document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9df-128">독립 실행형에 대 한 유효한 값은 "yes" 또는 "no"입니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-128">The valid values for standalone are "yes" or "no".</span></span> <span data-ttu-id="2b9df-129">이러한 값이 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-129">These values are not enforced.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b9df-130">다음 예제에서는이 속성을 사용 하 여 독립 실행형 속성 선언의 인쇄 합니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-130">The following example uses this property to print the standalone property of a declaration.</span></span>  
  
```csharp  
XDeclaration xd = new XDeclaration("1.0", "utf-8", "yes");  
Console.WriteLine(xd.Version);  
Console.WriteLine(xd.Encoding);  
Console.WriteLine(xd.Standalone);  
```  
  
```vb  
Dim xd As XDeclaration = New XDeclaration("1.0", "utf-8", "yes")  
Console.WriteLine(xd.Version)  
Console.WriteLine(xd.Encoding)  
Console.WriteLine(xd.Standalone)  
```  
  
 <span data-ttu-id="2b9df-131">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-131">This example produces the following output:</span></span>  
  
```  
1.0  
utf-8  
yes  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XDeclaration.Version" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XDeclaration.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2b9df-132">선언을 형식 지정 문자열로 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9df-132">Provides the declaration as a formatted string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2b9df-133">형식 지정 XML 문자열이 들어 있는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9df-133">A <see cref="T:System.String" /> that contains the formatted XML string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XDeclaration.Version" />
      <MemberSignature Language="VB.NET" Value="Public Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2b9df-134">이 문서의 버전 속성을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9df-134">Gets or sets the version property for this document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2b9df-135">이 문서의 버전 속성이 들어 있는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2b9df-135">A <see cref="T:System.String" /> containing the version property for this document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b9df-136">값은 일반적으로 "1.0"입니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-136">The value is usually "1.0".</span></span> <span data-ttu-id="2b9df-137">이 값은 적용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-137">This value is not enforced.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b9df-138">다음 예제에서는 선언의 version 속성을 인쇄 하려면이 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-138">The following example uses this property to print the version property of a declaration.</span></span>  
  
```csharp  
XDeclaration xd = new XDeclaration("1.0", "utf-8", "yes");  
Console.WriteLine(xd.Version);  
Console.WriteLine(xd.Encoding);  
Console.WriteLine(xd.Standalone);  
```  
  
```vb  
Dim xd As XDeclaration = New XDeclaration("1.0", "utf-8", "yes")  
Console.WriteLine(xd.Version)  
Console.WriteLine(xd.Encoding)  
Console.WriteLine(xd.Standalone)  
```  
  
 <span data-ttu-id="2b9df-139">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="2b9df-139">This example produces the following output:</span></span>  
  
```  
1.0  
utf-8  
yes  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XDeclaration.Standalone" />
      </Docs>
    </Member>
  </Members>
</Type>