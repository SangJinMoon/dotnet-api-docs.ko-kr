<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XDocumentType.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56975d1a69c2998667e486d704abd5661079f2259.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6975d1a69c2998667e486d704abd5661079f2259</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XDocumentType">
          <source>Represents an XML Document Type Definition (DTD).</source>
          <target state="translated">XML DTD(문서 종류 정의)를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>Data Type Definitions (DTD) in XML are a way to do the following:</source>
          <target state="translated">Xml에서 데이터 형식 정의 (DTD)에 다음을 수행 하는 방법입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>Validate XML trees to a limited extent.</source>
          <target state="translated">제한 된 범위를 XML 트리의 유효성을 검사 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>Expand entities, which is a form of text replacement.</source>
          <target state="translated">텍스트 바꾸기의 양식 엔터티를 확장 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>Supply default attributes.</source>
          <target state="translated">기본 특성을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>This class represents the XML concept of a DTD.</source>
          <target state="translated">이 클래스는 DTD의 XML 개념을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>DTD support in <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> is limited.</source>
          <target state="translated">DTD 지원 <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> 제한 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> will expand internal entities by default, but it will not resolve external entity references unless an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> with an associated <ph id="ph3">&lt;xref:System.Xml.XmlResolver&gt;</ph> is used to load the XML tree.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> 기본적으로 내부 엔터티 확장 하지만 경우가 아니면 외부 엔터티 참조를 확인 하지 것입니다는 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 가 연결 된 <ph id="ph3">&lt;xref:System.Xml.XmlResolver&gt;</ph> XML 트리를 로드 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> will not validate a document against a DTD, but you can use a validating <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> to perform DTD validation if necessary.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> DTD에 대 한 문서를 검사 하지 것입니다 되지만 유효성 검사를 사용할 수 있습니다 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 에 필요한 경우 DTD 유효성 검사를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>To validate an <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> tree against an XML schema, use the <ph id="ph2">&lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt;</ph> method.</source>
          <target state="translated">유효성을 검사 하는 <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> XML 스키마를 사용 하 여에 대 한 트리는 <ph id="ph2">&lt;xref:System.Xml.Schema.Extensions.Validate%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>When a document contains entity references that are defined in a DTD, the references are expanded upon creation of the XML tree.</source>
          <target state="translated">DTD에 정의 된 엔터티 참조를 포함 하는 문서, XML 트리를 만들 때 참조가 확장 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>However, when you serialize or save the XML tree, the content of the expanded entities is preserved; the entity references are not.</source>
          <target state="translated">그러나 serialize 하거나 XML 트리를 저장 하는 경우 확장 된 엔터티의 내용이 보존 됩니다. 엔터티 참조는 없습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>Default attributes from the DTD will be materialized as regular attributes in the XML tree.</source>
          <target state="translated">DTD에서 기본 특성은 XML 트리의 일반 특성으로 구체화 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>After a default attribute from the DTD is materialized, there is no way to determine that the attribute was a default attribute from the DTD.</source>
          <target state="translated">DTD에서 기본 특성을 구체화 한 후 특성 DTD에서 기본 특성 되었는지 확인할 수 없습니다 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>You can populate an XML tree with an XML document that contains an internal DTD.</source>
          <target state="translated">내부 DTD가 포함 된 XML 문서와 XML 트리를 채울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>The XML tree will then contain a <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.DocumentType%2A&gt;</ph> node.</source>
          <target state="translated">XML 트리를 다음으로 들어갑니다는 <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.DocumentType%2A&gt;</ph> 노드.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocumentType">
          <source>When you serialize or save the tree, the internal DTD will also be saved as part of the document.</source>
          <target state="translated">Serialize 하거나 트리를 저장 하는 경우 내부 DTD는 문서의 일부로 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XDocumentType">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> object to copy from.</source>
          <target state="translated">복사할 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> class from another <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> object.</source>
          <target state="translated">다른 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> 개체를 사용하여 <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> 클래스의 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)">
          <source>This constructor is primarily used internally when making a deep copy of an XML tree.</source>
          <target state="translated">이 생성자는 주로 XML 트리의 전체 복사본을 만들 때 내부적으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the qualified name of the DTD, which is the same as the qualified name of the root element of the XML document.</source>
          <target state="translated">DTD의 정규화된 이름이 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>이며, 이 이름은 XML 문서에 있는 루트 요소의 정규화된 이름과 같습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the public identifier of an external public DTD.</source>
          <target state="translated">외부 공용 DTD의 공용 식별자가 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the system identifier of an external private DTD.</source>
          <target state="translated">외부 전용 DTD의 시스템 식별자가 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the internal subset for an internal DTD.</source>
          <target state="translated">내부 DTD의 내부 하위 집합이 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
          <source>Initializes an instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> class.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> 클래스의 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
          <source>The following example creates a document with an internal DTD.</source>
          <target state="translated">다음 예에서는 내부 DTD가 있는 문서를 만듭니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
          <source>When it creates the <ph id="ph1">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph> object, it specifies the qualified name of the DTD (Pubs), and a string that contains the internal subset.</source>
          <target state="translated">만들 때는 <ph id="ph1">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph> 개체, DTD (Pubs) 및 내부 하위 집합을 포함 하는 문자열의 정규화 된 이름을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
          <source>Because the document does not use a public or private external DTD, the <ph id="ph1">`publicId`</ph> and <ph id="ph2">`systemId`</ph> are set to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">문서는 공용 또는 개인 외부 DTD를 사용 하지 않으므로 <ph id="ph1">`publicId`</ph> 및 <ph id="ph2">`systemId`</ph> 로 설정 <ph id="ph3">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">이 예제는 다음과 같은 출력을 생성합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XDocumentType.InternalSubset">
          <source>Gets or sets the internal subset for this Document Type Definition (DTD).</source>
          <target state="translated">이 DTD(문서 종류 정의)의 내부 하위 집합을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.InternalSubset">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the internal subset for this Document Type Definition (DTD).</source>
          <target state="translated">이 DTD(문서 종류 정의)의 내부 하위 집합이 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.InternalSubset">
          <source>The following example creates a document with a DTD that contains an internal subset.</source>
          <target state="translated">다음 예제는 내부 하위 집합을 포함 하는 DTD가 있는 문서를 만듭니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.InternalSubset">
          <source>This example produces the following output:</source>
          <target state="translated">이 예제는 다음과 같은 출력을 생성합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XDocumentType.Name">
          <source>Gets or sets the name for this Document Type Definition (DTD).</source>
          <target state="translated">이 DTD(문서 종류 정의)의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.Name">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the name for this Document Type Definition (DTD).</source>
          <target state="translated">이 DTD(문서 종류 정의)의 이름이 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.Name">
          <source>The following example creates an XML document that contains a DTD.</source>
          <target state="translated">다음 예제에서는 DTD가 포함 된 XML 문서를 만듭니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.Name">
          <source>After creating the document, it retrieves the qualified name of the DTD using this property.</source>
          <target state="translated">문서를 만든 후이 속성을 사용 하 여 DTD의 정규화 된 이름을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.Name">
          <source>This example produces the following output:</source>
          <target state="translated">이 예제는 다음과 같은 출력을 생성합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XDocumentType.NodeType">
          <source>Gets the node type for this node.</source>
          <target state="translated">이 노드에 대한 노드 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.NodeType">
          <source>The node type.</source>
          <target state="translated">노드 형식입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.NodeType">
          <source>For <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> objects, this value is <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.DocumentType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> 개체의 경우 이 값은 <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.DocumentType" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.NodeType">
          <source>Because all classes that derive from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contain a <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> property, you can write code that operates on collections of concrete subclass of <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">파생 되는 모든 클래스 때문에 <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> 포함 한 <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> 속성, 컬렉션의 구체적인 서브 클래스에 대해 작동 하는 코드를 작성할 수 있습니다 <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.NodeType">
          <source>Your code can then test for the node type of each node in the collection.</source>
          <target state="translated">코드 그런 다음 컬렉션에서 각 노드의 노드 형식에 대 한 테스트 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.NodeType">
          <source>The following example shows the use of this property to retrieve the node type for an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph> object.</source>
          <target state="translated">다음 예제에 대 한 노드 형식을 검색 하기 위해이 속성을 사용 하는 <ph id="ph1">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.NodeType">
          <source>This example produces the following output:</source>
          <target state="translated">이 예제는 다음과 같은 출력을 생성합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XDocumentType.PublicId">
          <source>Gets or sets the public identifier for this Document Type Definition (DTD).</source>
          <target state="translated">이 DTD(문서 종류 정의)의 공용 식별자를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.PublicId">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the public identifier for this Document Type Definition (DTD).</source>
          <target state="translated">이 DTD(문서 종류 정의)의 공용 식별자가 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.PublicId">
          <source>If an XML document uses an external public DTD, this property will contain the public identifier of the external DTD.</source>
          <target state="translated">XML 문서는 외부 공용 DTD를 사용 하는 경우이 속성에는 외부 DTD의 공용 식별자를 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XDocumentType.SystemId">
          <source>Gets or sets the system identifier for this Document Type Definition (DTD).</source>
          <target state="translated">이 DTD(문서 종류 정의)의 시스템 식별자를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.SystemId">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the system identifier for this Document Type Definition (DTD).</source>
          <target state="translated">이 DTD(문서 종류 정의)의 시스템 식별자가 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.SystemId">
          <source>If an XML document uses an external private DTD, this property will contain the private identifier of the external DTD.</source>
          <target state="translated">XML 문서는 외부 개인 DTD를 사용 하는 경우 외부 DTD의 개인 식별자가이 속성에 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.SystemId">
          <source>The following example creates an XML document that refers to an external private DTD.</source>
          <target state="translated">다음 예에서는 개인 외부 DTD를 참조 하는 XML 문서를 만듭니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.SystemId">
          <source>The DTD does not have an internal subset.</source>
          <target state="translated">DTD 내부 하위 집합을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.SystemId">
          <source>The call to the <ph id="ph1">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph> constructor reflects the use of the external private DTD.</source>
          <target state="translated">에 대 한 호출에서 <ph id="ph1">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph> 생성자 외부 개인 DTD의 사용을 반영 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.SystemId">
          <source>It passes <ph id="ph1">`null`</ph> for the internal subset.</source>
          <target state="translated">전달 <ph id="ph1">`null`</ph> 내부 하위 집합에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocumentType.SystemId">
          <source>This example produces the following output:</source>
          <target state="translated">이 예제는 다음과 같은 출력을 생성합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> into which this method will write.</source>
          <target state="translated">이 메서드가 쓸 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)">
          <source>Write this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph>을 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>에 씁니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)">
          <source>This method is primarily used internally by the methods that write an XML tree to an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">이 메서드는 주로 내부적으로 XML 트리를 작성 하는 메서드에서 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>