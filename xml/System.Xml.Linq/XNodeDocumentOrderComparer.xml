<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XNodeDocumentOrderComparer.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5087fbe682572c7ac3348c17367381fb7011ed778.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">087fbe682572c7ac3348c17367381fb7011ed778</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XNodeDocumentOrderComparer">
          <source>Contains functionality to compare nodes for their document order.</source>
          <target state="translated">노드의 문서 순서를 비교하는 기능을 포함합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XNodeDocumentOrderComparer">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNodeDocumentOrderComparer">
          <source>This class implements <ph id="ph1">`IComparer`</ph> and <ph id="ph2">`IComparer&lt;XNode&gt;`</ph>.</source>
          <target state="translated">이 클래스는 <ph id="ph1">`IComparer`</ph> 및 <ph id="ph2">`IComparer&lt;XNode&gt;`</ph>을 구현합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNodeDocumentOrderComparer">
          <source>We recommend that instead of using this class directly, you use the <ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.InDocumentOrder%2A&gt;</ph> method.</source>
          <target state="translated">이 클래스를 직접 사용 하지 않고 사용 하는 것이 좋습니다는 <ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.InDocumentOrder%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XNodeDocumentOrderComparer">
          <source>This class is used internally by that method.</source>
          <target state="translated">이 클래스는 해당 메서드에 의해 내부적으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNodeDocumentOrderComparer" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.#ctor">
          <source>We recommend that instead of using this class directly, you use the <ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.InDocumentOrder%2A&gt;</ph> method.</source>
          <target state="translated">이 클래스를 직접 사용 하지 않고 사용 하는 것이 좋습니다는 <ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.InDocumentOrder%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.#ctor">
          <source>This class is used internally by that method.</source>
          <target state="translated">이 클래스는 해당 메서드에 의해 내부적으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.#ctor">
          <source>The following example uses of this class to compare the document order for two nodes.</source>
          <target state="translated">다음 예제에서는이 클래스의 두 노드에 대 한 문서 순서를 비교 하려면 사용 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.#ctor">
          <source>This example produces the following output:</source>
          <target state="translated">이 예제는 다음과 같은 출력을 생성합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> to compare.</source>
          <target state="translated">비교할 첫 번째 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> to compare.</source>
          <target state="translated">비교할 두 번째 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
          <source>Compares two nodes to determine their relative document order.</source>
          <target state="translated">두 노드를 비교하여 상대적인 문서 순서를 확인합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains 0 if the nodes are equal; -1 if <ph id="ph2">&lt;paramref name="x" /&gt;</ph> is before <ph id="ph3">&lt;paramref name="y" /&gt;</ph>; 1 if <ph id="ph4">&lt;paramref name="x" /&gt;</ph> is after <ph id="ph5">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated">노드가 서로 같으면 0, <ph id="ph2">&lt;paramref name="x" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="y" /&gt;</ph>보다 앞에 나오면 -1, <ph id="ph4">&lt;paramref name="x" /&gt;</ph>가 <ph id="ph5">&lt;paramref name="y" /&gt;</ph>보다 뒤에 나오면 1이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
          <source>We recommend that instead of using this class directly, you use the <ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.InDocumentOrder%2A&gt;</ph> method.</source>
          <target state="translated">이 클래스를 직접 사용 하지 않고 사용 하는 것이 좋습니다는 <ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.InDocumentOrder%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
          <source>This class is used internally by that method.</source>
          <target state="translated">이 클래스는 해당 메서드에 의해 내부적으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
          <source>The following example uses this class to compare document order for two nodes.</source>
          <target state="translated">다음 예제에서는 두 개의 노드의 문서 순서를 비교 하려면이 클래스를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
          <source>This example produces the following output:</source>
          <target state="translated">이 예제는 다음과 같은 출력을 생성합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
          <source>The two nodes do not share a common ancestor.</source>
          <target state="translated">두 노드가 공통 상위 노드를 공유하지 않는 경우</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> to compare.</source>
          <target state="translated">비교할 첫 번째 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph> to compare.</source>
          <target state="translated">비교할 두 번째 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>Compares two nodes to determine their relative document order.</source>
          <target state="translated">두 노드를 비교하여 상대적인 문서 순서를 확인합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains 0 if the nodes are equal; -1 if <ph id="ph2">&lt;paramref name="x" /&gt;</ph> is before <ph id="ph3">&lt;paramref name="y" /&gt;</ph>; 1 if <ph id="ph4">&lt;paramref name="x" /&gt;</ph> is after <ph id="ph5">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated">노드가 서로 같으면 0, <ph id="ph2">&lt;paramref name="x" /&gt;</ph>가 <ph id="ph3">&lt;paramref name="y" /&gt;</ph>보다 앞에 나오면 -1, <ph id="ph4">&lt;paramref name="x" /&gt;</ph>가 <ph id="ph5">&lt;paramref name="y" /&gt;</ph>보다 뒤에 나오면 1이 들어 있는 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>We recommend that instead of using this class directly, you use the <ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.InDocumentOrder%2A&gt;</ph> method.</source>
          <target state="translated">이 클래스를 직접 사용 하지 않고 사용 하는 것이 좋습니다는 <ph id="ph1">&lt;xref:System.Xml.Linq.Extensions.InDocumentOrder%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>This class is used internally by that method.</source>
          <target state="translated">이 클래스는 해당 메서드에 의해 내부적으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>The two nodes do not share a common ancestor.</source>
          <target state="translated">두 노드가 공통 상위 노드를 공유하지 않는 경우</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
          <source>The two nodes are not derived from <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>.</source>
          <target state="translated">두 노드가 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XNode" /&gt;</ph>에서 파생되지 않는 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>