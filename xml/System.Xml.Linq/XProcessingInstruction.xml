<Type Name="XProcessingInstruction" FullName="System.Xml.Linq.XProcessingInstruction">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a20dce906e0589856fbebd8b88e09fd6ed6e7d9c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30719867" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XProcessingInstruction : System.Xml.Linq.XNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XProcessingInstruction extends System.Xml.Linq.XNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XProcessingInstruction" />
  <TypeSignature Language="VB.NET" Value="Public Class XProcessingInstruction&#xA;Inherits XNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XProcessingInstruction : System::Xml::Linq::XNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Linq.XNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c4391-101">XML 처리 명령을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4391-101">Represents an XML processing instruction.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4391-102">XSLT 등의 특정 프로세서에서 XML 문서를 처리할 수 있는지를 나타내는 xml에서 처리 명령을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c4391-102">You can use processing instructions in XML to indicate that an XML document can be processed by some processor, such as XSLT.</span></span>  
  
 <span data-ttu-id="c4391-103">처리 명령에는 XML 트리의 노드는 합니다.</span><span class="sxs-lookup"><span data-stu-id="c4391-103">Processing instructions are nodes in the XML tree.</span></span> <span data-ttu-id="c4391-104">처리 명령 구문 분석 되는 XML에서 발견 되 면 [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] 만듭니다는 <xref:System.Xml.Linq.XProcessingInstruction> 노드.</span><span class="sxs-lookup"><span data-stu-id="c4391-104">When a processing instruction is found in the XML being parsed, [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] creates an <xref:System.Xml.Linq.XProcessingInstruction> node.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c4391-105">
            <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4391-105">Initializes a new instance of the <see cref="T:System.Xml.Linq.XProcessingInstruction" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XProcessingInstruction (System.Xml.Linq.XProcessingInstruction other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XProcessingInstruction other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.Xml.Linq.XProcessingInstruction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As XProcessingInstruction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XProcessingInstruction(System::Xml::Linq::XProcessingInstruction ^ other);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.Linq.XProcessingInstruction" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="c4391-106">복사할 <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 노드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4391-106">The <see cref="T:System.Xml.Linq.XProcessingInstruction" /> node to copy from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4391-107">
            <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4391-107">Initializes a new instance of the <see cref="T:System.Xml.Linq.XProcessingInstruction" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4391-108">이 생성자는 주로 XML 트리의 전체 복사본을 만들기를 내부적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c4391-108">This constructor is primarily used internally to make a deep copy of an XML tree.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XProcessingInstruction (string target, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string target, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (target As String, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XProcessingInstruction(System::String ^ target, System::String ^ data);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="c4391-109">이 <see cref="T:System.String" />의 대상 응용 프로그램이 들어 있는 <see cref="T:System.Xml.Linq.XProcessingInstruction" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4391-109">A <see cref="T:System.String" /> containing the target application for this <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="c4391-110">이 <see cref="T:System.Xml.Linq.XProcessingInstruction" />의 문자열 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4391-110">The string data for this <see cref="T:System.Xml.Linq.XProcessingInstruction" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4391-111">
            <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4391-111">Initializes a new instance of the <see cref="T:System.Xml.Linq.XProcessingInstruction" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4391-112">다음 예제에서는 <xref:System.Xml.Linq.XProcessingInstruction>, 대상 및 처리 명령에 대 한 문자열 데이터를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c4391-112">The following example creates an <xref:System.Xml.Linq.XProcessingInstruction>, and specifies a target and the string data for the processing instruction.</span></span>  
  
```csharp  
XProcessingInstruction pi = new XProcessingInstruction("xml-stylesheet", "type='text/xsl' href='hello.xsl'");  
Console.WriteLine(pi);  
```  
  
```vb  
Dim pi As XProcessingInstruction = <?xml-stylesheet type='text/xsl' href='hello.xsl'?>  
Console.WriteLine(pi)  
```  
  
 <span data-ttu-id="c4391-113">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="c4391-113">This example produces the following output:</span></span>  
  
```  
<?xml-stylesheet type='text/xsl' href='hello.xsl'?>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4391-114">
            <paramref name="target" /> 또는 <paramref name="data" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4391-114">The <paramref name="target" /> or <paramref name="data" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4391-115">
            <paramref name="target" />이 XML 이름에 대한 제약 조건에 맞지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4391-115">The <paramref name="target" /> does not follow the constraints of an XML name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public string Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Data" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XProcessingInstruction.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Data { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4391-116">이 처리 명령의 문자열 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4391-116">Gets or sets the string value of this processing instruction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4391-117">이 처리 명령의 문자열 값이 들어 있는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4391-117">A <see cref="T:System.String" /> that contains the string value of this processing instruction.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4391-118">XML 트리를 수정 하려면이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c4391-118">You can use this property to modify an XML tree.</span></span> <span data-ttu-id="c4391-119">이 속성을 설정 하면 이벤트를 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="c4391-119">This property will cause events to occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4391-120">다음 예제에서는 <xref:System.Xml.Linq.XProcessingInstruction.Data%2A> 처리 명령인 문자열 값을 검색 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c4391-120">The following example uses the <xref:System.Xml.Linq.XProcessingInstruction.Data%2A> property to retrieve the string value of a processing instruction.</span></span>  
  
```csharp  
XProcessingInstruction pi =  
    new XProcessingInstruction("xml-stylesheet", "type='text/xsl' href='hello.xsl'");  
Console.WriteLine(pi.Data);  
pi.Data = "type='text/xsl' href='xform.xsl'";  
Console.WriteLine(pi.Data);  
```  
  
```vb  
Dim pi As XProcessingInstruction = <?xml-stylesheet type='text/xsl' href='hello.xsl'?>  
Console.WriteLine(pi.Data)  
pi.Data = "type='text/xsl' href='xform.xsl'"  
Console.WriteLine(pi.Data)  
```  
  
 <span data-ttu-id="c4391-121">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="c4391-121">This example produces the following output:</span></span>  
  
```  
type='text/xsl' href='hello.xsl'  
type='text/xsl' href='xform.xsl'  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4391-122">
            <paramref name="value" /> 문자열이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4391-122">The string <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XProcessingInstruction.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4391-123">이 노드에 대한 노드 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4391-123">Gets the node type for this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4391-124">노드 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4391-124">The node type.</span>
          </span>
          <span data-ttu-id="c4391-125">
            <see cref="T:System.Xml.Linq.XProcessingInstruction" /> 개체의 경우 이 값은 <see cref="F:System.Xml.XmlNodeType.ProcessingInstruction" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4391-125">For <see cref="T:System.Xml.Linq.XProcessingInstruction" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.ProcessingInstruction" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4391-126">파생 되는 모든 클래스 때문에 <xref:System.Xml.Linq.XObject> 포함 한 <xref:System.Xml.Linq.XObject.NodeType%2A> 속성, 컬렉션의 구체적인 서브 클래스에 대해 작동 하는 코드를 작성할 수 있습니다 <xref:System.Xml.Linq.XObject>합니다.</span><span class="sxs-lookup"><span data-stu-id="c4391-126">Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>.</span></span> <span data-ttu-id="c4391-127">코드 그런 다음 컬렉션에서 각 노드의 노드 형식에 대 한 테스트 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c4391-127">Your code can then test for the node type of each node in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4391-128">다음 예제에서는 처리 명령을 만들고 해당 노드 형식을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="c4391-128">The following example creates a processing instruction, and then prints its node type.</span></span>  
  
```csharp  
XProcessingInstruction pi =  
    new XProcessingInstruction("xml-stylesheet", "type=\"text/xsl\" href=\"hello.xsl\"");  
Console.WriteLine(pi.NodeType);  
```  
  
```vb  
Dim pi As XProcessingInstruction = _  
    <?xml-stylesheet type="text/xsl" href="hello.xsl"?>  
Console.WriteLine(pi.NodeType.ToString)  
```  
  
 <span data-ttu-id="c4391-129">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="c4391-129">This example produces the following output:</span></span>  
  
```  
ProcessingInstruction  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XProcessingInstruction.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4391-130">이 처리 명령의 대상 응용 프로그램이 들어 있는 문자열을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4391-130">Gets or sets a string containing the target application for this processing instruction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4391-131">이 처리 명령의 대상 응용 프로그램이 들어 있는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4391-131">A <see cref="T:System.String" /> containing the target application for this processing instruction.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4391-132">다음 예제에서는 <xref:System.Xml.Linq.XProcessingInstruction.Target%2A> 처리 명령에 대 한 대상 응용 프로그램을 검색할 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c4391-132">The following example uses the <xref:System.Xml.Linq.XProcessingInstruction.Target%2A> property to retrieve the target application for a processing instruction.</span></span>  
  
```csharp  
XProcessingInstruction pi =  
    new XProcessingInstruction("xml-stylesheet", "type=\"text/xsl\" href=\"hello.xsl\"");  
Console.WriteLine(pi.Target);  
```  
  
```vb  
Dim pi As XProcessingInstruction = _  
    <?xml-stylesheet type="text/xsl" href="hello.xsl"?>  
Console.WriteLine(pi.Target)  
```  
  
 <span data-ttu-id="c4391-133">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="c4391-133">This example produces the following output:</span></span>  
  
```  
xml-stylesheet  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4391-134">
            <paramref name="value" /> 문자열이 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4391-134">The string <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c4391-135">
            <paramref name="target" />이 XML 이름에 대한 제약 조건에 맞지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4391-135">The <paramref name="target" /> does not follow the constraints of an XML name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XProcessingInstruction.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="c4391-136">이 처리 명령을 쓸 <see cref="T:System.Xml.XmlWriter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4391-136">The <see cref="T:System.Xml.XmlWriter" /> to write this processing instruction to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4391-137">이 처리 명령을 <see cref="T:System.Xml.XmlWriter" />에 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4391-137">Writes this processing instruction to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4391-138">이 메서드는 주로 내부적으로 XML 트리를 작성 하는 메서드에서 <xref:System.Xml.XmlWriter>합니다.</span><span class="sxs-lookup"><span data-stu-id="c4391-138">This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteToAsync (System.Xml.XmlWriter writer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteToAsync(class System.Xml.XmlWriter writer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XProcessingInstruction.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteToAsync(System::Xml::XmlWriter ^ writer, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>