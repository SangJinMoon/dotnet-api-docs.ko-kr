<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XCData.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d893c93b876fdf3006f16ab750c569e9e4ec6bb7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d893c93b876fdf3006f16ab750c569e9e4ec6bb7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XCData">
          <source>Represents a text node that contains CDATA.</source>
          <target state="translated">CDATA가 포함된 텍스트 노드를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XCData">
          <source>An XML CDATA section allows you to store almost any arbitrary string as the contents of an XML element.</source>
          <target state="translated">XML CDATA 섹션에는 XML 요소의 내용으로 거의 모든 임의 문자열을 저장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XCData">
          <source>This class represents the XML concept of a CDATA text node.</source>
          <target state="translated">이 클래스는 CDATA 텍스트 노드의 XML 개념을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XCData">
          <source>This class derives from <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph>, which represents XML text.</source>
          <target state="translated">이 클래스에서 파생 <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph>, XML 텍스트를 나타내는입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XCData">
          <source>CDATA sections are special cases of XML text.</source>
          <target state="translated">CDATA 섹션은 XML 텍스트의 특수 한 경우.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XCData">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XCData.#ctor(System.String)">
          <source>A string that contains the value of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph> node.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph> 노드의 값이 들어 있는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XCData.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XCData.#ctor(System.String)">
          <source>The following example creates an element that contains a CDATA node.</source>
          <target state="translated">다음 예제에서는 CDATA 노드를 포함 하는 요소를 만듭니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XCData.#ctor(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">이 예제는 다음과 같은 출력을 생성합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XCData.#ctor(System.Xml.Linq.XCData)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph> node to copy from.</source>
          <target state="translated">복사할 <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph> 노드입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XCData.#ctor(System.Xml.Linq.XCData)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XCData.#ctor(System.Xml.Linq.XCData)">
          <source>This constructor is primarily used internally to make a deep copy of an XML tree.</source>
          <target state="translated">이 생성자는 주로 XML 트리의 전체 복사본을 만들기를 내부적으로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XCData.NodeType">
          <source>Gets the node type for this node.</source>
          <target state="translated">이 노드에 대한 노드 형식을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XCData.NodeType">
          <source>The node type.</source>
          <target state="translated">노드 형식입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XCData.NodeType">
          <source>For <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph> objects, this value is <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.CDATA" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XCData" /&gt;</ph> 개체의 경우 이 값은 <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.CDATA" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XCData.NodeType">
          <source>Because all classes that derive from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contain a <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> property, you can write code that operates on collections of concrete subclass of <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">파생 되는 모든 클래스 때문에 <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> 포함 한 <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> 속성, 컬렉션의 구체적인 서브 클래스에 대해 작동 하는 코드를 작성할 수 있습니다 <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XCData.NodeType">
          <source>Your code can then test for the node type of each node in the collection.</source>
          <target state="translated">코드 그런 다음 컬렉션에서 각 노드의 노드 형식에 대 한 테스트 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XCData.NodeType">
          <source>The following example creates an XML tree that contains various types of nodes.</source>
          <target state="translated">다음 예제에서는 다양 한 유형의 노드를 포함 하는 XML 트리를 만듭니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XCData.NodeType">
          <source>It then iterates through the tree, and prints the node type of each node.</source>
          <target state="translated">그런 다음 트리를 통해 반복 하 고 각 노드의 노드 유형을 출력 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XCData.NodeType">
          <source>This example produces the following output:</source>
          <target state="translated">이 예제는 다음과 같은 출력을 생성합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XCData.WriteTo(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> into which this method will write.</source>
          <target state="translated">이 메서드가 쓸 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XCData.WriteTo(System.Xml.XmlWriter)">
          <source>Writes this CDATA object to an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">이 CDATA 개체를 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>에 씁니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XCData.WriteTo(System.Xml.XmlWriter)">
          <source>This method is primarily used internally by the methods that write an XML tree to an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">이 메서드는 주로 내부적으로 XML 트리를 작성 하는 메서드에서 <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>