<Type Name="XAttribute" FullName="System.Xml.Linq.XAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c3ca0b79ae2d94d785e52a83f69cedfb7271085" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30721467" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XAttribute : System.Xml.Linq.XObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XAttribute extends System.Xml.Linq.XObject" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XAttribute&#xA;Inherits XObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class XAttribute : System::Xml::Linq::XObject" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Linq.XObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeDescriptionProvider(typeof(MS.Internal.Xml.Linq.ComponentModel.XTypeDescriptionProvider`1&lt;System.Xml.Linq.XAttribute&gt;))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1ac9a-101">XML 특성을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ac9a-101">Represents an XML attribute.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac9a-102">XML 특성에는 XML 요소와 연결 된 이름/값 쌍입니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-102">An XML attribute is a name/value pair associated with an XML element.</span></span>  
  
 <span data-ttu-id="1ac9a-103">각 <xref:System.Xml.Linq.XElement> 해당 요소에 대 한 특성 목록을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-103">Each <xref:System.Xml.Linq.XElement> contains a list of the attributes for that element.</span></span> <span data-ttu-id="1ac9a-104">특성 정규화 된 요소에 고유한 이름이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-104">Attributes must have a qualified name that is unique to the element.</span></span> <span data-ttu-id="1ac9a-105">특성에서 파생 되지 않은 <xref:System.Xml.Linq.XNode>; XML 트리의 노드는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-105">Attributes are not derived from <xref:System.Xml.Linq.XNode>; they are not nodes in the XML tree.</span></span> <span data-ttu-id="1ac9a-106">대신 요소에 연결 된 이름/값 쌍 하기만 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-106">Instead, they are simply name/value pairs associated with an element.</span></span>  
  
 <span data-ttu-id="1ac9a-107">특성은 XML 트리의 요소에 추가 된 순서 대로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-107">Attributes are maintained in the XML tree in the order that they were added to the element.</span></span> <span data-ttu-id="1ac9a-108">특성의 컬렉션으로 반환 될 때 <xref:System.Xml.Linq.XElement.Attributes%2A>, 정렬 되지 않고 요소에 추가 된 순서 대로 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-108">When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added to the element, and are not sorted.</span></span>  
  
 <span data-ttu-id="1ac9a-109">기술적으로 XML에 네임 스페이스 선언이 않습니다 적절 한 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-109">Technically, in XML, namespace declarations are not attributes proper.</span></span> <span data-ttu-id="1ac9a-110">그러나 많은 XML 프로그래머가 이러한 구분이 정상적으로 수행 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-110">However, this distinction is not normally made by many XML programmers.</span></span> <span data-ttu-id="1ac9a-111">대신, 네임 스페이스 선언 특성 같은 XML 구문은 하므로 대부분 XML 프로그래머 네임 스페이스의 특성으로 간주 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-111">Instead, because namespace declarations have exactly the same XML syntax as attributes, most XML programmers think of namespaces as attributes.</span></span> <span data-ttu-id="1ac9a-112">단순화 하기 위해는 [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] 프로그래밍 인터페이스를 네임 스페이스는 XML 트리에 표시 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-112">To simplify the [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming interface, namespaces are represented in the XML tree as attributes.</span></span> <span data-ttu-id="1ac9a-113">이러한 네임 스페이스 특성에서 XML 트리의 serialization에 영향을 줄 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-113">Such namespace attributes impact serialization of an XML tree.</span></span> <span data-ttu-id="1ac9a-114">를 직렬화 할 때 [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] 네임 스페이스 특성에 지정 된 네임 스페이스 접두사로 serialize 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-114">When serializing, [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] attempts to serialize with the namespace prefix specified in namespace attributes.</span></span> <span data-ttu-id="1ac9a-115">사용할 수는 <xref:System.Xml.Linq.XAttribute.IsNamespaceDeclaration%2A> 실제로 특성이 네임 스페이스 선언 인지 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-115">You can use the <xref:System.Xml.Linq.XAttribute.IsNamespaceDeclaration%2A> to determine if an attribute is really a namespace declaration.</span></span>  
  
 <span data-ttu-id="1ac9a-116"><xref:System.Xml.Linq.XAttribute> 클래스는 <xref:System.Xml.Linq.XObject>에서 파생됩니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-116">The <xref:System.Xml.Linq.XAttribute> class derives from <xref:System.Xml.Linq.XObject>.</span></span> <span data-ttu-id="1ac9a-117">특성에 주석을 추가 하 고 이벤트를 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-117">You can add annotations to attributes, and observe events for them.</span></span>  
  
 <span data-ttu-id="1ac9a-118">일부 <xref:System.Xml.Linq.XAttribute> 메서드는 XAML에서 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-118">Some <xref:System.Xml.Linq.XAttribute> methods can be used from XAML.</span></span> <span data-ttu-id="1ac9a-119">자세한 내용은 [LINQ to XML 동적 속성](http://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-119">For more information, see [LINQ to XML Dynamic Properties](http://msdn.microsoft.com/library/0455f47c-4a68-4f2e-a3f8-dd1d85b99012).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Linq.XElement" />
    <altmember cref="T:System.Xml.Linq.XDocument" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1ac9a-120">
            <see cref="T:System.Xml.Linq.XAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-120">Initializes a new instance of the <see cref="T:System.Xml.Linq.XAttribute" /> class.</span>
          </span>
        </summary>
        <altmember cref="P:System.Xml.Linq.XAttribute.Name" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
        <altmember cref="P:System.Xml.Linq.XAttribute.NodeType" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XAttribute (System.Xml.Linq.XAttribute other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XAttribute other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As XAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XAttribute(System::Xml::Linq::XAttribute ^ other);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="1ac9a-121">복사할 <see cref="T:System.Xml.Linq.XAttribute" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-121">An <see cref="T:System.Xml.Linq.XAttribute" /> object to copy from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-122">다른 <see cref="T:System.Xml.Linq.XAttribute" /> 개체를 사용하여 <see cref="T:System.Xml.Linq.XAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-122">Initializes a new instance of the <see cref="T:System.Xml.Linq.XAttribute" /> class from another <see cref="T:System.Xml.Linq.XAttribute" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac9a-123">이 생성자는 주로 XML 트리의 전체 복사본을 만들 때 내부적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-123">This constructor is primarily used internally when making a deep copy of an XML tree.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ac9a-124">이 예제에서는 XML 트리의 전체 복사본을 만들어 트리에서 특성의 복제본이 아닌 복사본을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-124">This example demonstrates that creating a deep copy of an XML tree creates a copy, not a clone, of an attribute in the tree.</span></span>  
  
```csharp  
XElement root1 = XElement.Parse("<Root Att1='abc' />");  
// Make a deep copy.  
XElement root2 = new XElement(root1);  
if (root1.Attribute("Att1") == root2.Attribute("Att1"))  
    Console.WriteLine("This will not be printed");  
else  
    Console.WriteLine("Creating a deep copy created a new attribute from the original.");  
```  
  
```vb  
Dim root1 As XElement = <Root Att1='abc'/>  
' Make a deep copy.  
Dim root2 As XElement = New XElement(root1)  
If root1.Attribute("Att1") Is root2.Attribute("Att1") Then  
    Console.WriteLine("This will not be printed")  
Else  
    Console.WriteLine("Creating a deep copy created a new attribute from the original.")  
End If  
```  
  
 <span data-ttu-id="1ac9a-125">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-125">This example produces the following output:</span></span>  
  
```  
  
Creating a deep copy created a new attribute from the original.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ac9a-126">
            <paramref name="other" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-126">The <paramref name="other" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.Linq.XAttribute.Name" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
        <altmember cref="P:System.Xml.Linq.XAttribute.NodeType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XAttribute (System.Xml.Linq.XName name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XName name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As XName, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XAttribute(System::Xml::Linq::XName ^ name, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1ac9a-127">특성의 <see cref="T:System.Xml.Linq.XName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-127">The <see cref="T:System.Xml.Linq.XName" /> of the attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="1ac9a-128">특성의 값이 들어 있는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-128">An <see cref="T:System.Object" /> containing the value of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-129">지정된 이름 및 값을 사용하여 <see cref="T:System.Xml.Linq.XAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-129">Initializes a new instance of the <see cref="T:System.Xml.Linq.XAttribute" /> class from the specified name and value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac9a-130">문자열을 암시적 변환이 <xref:System.Xml.Linq.XName>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-130">There is an implicit conversion from string to <xref:System.Xml.Linq.XName>.</span></span> <span data-ttu-id="1ac9a-131">새로 만드는 대신 첫 번째 매개 변수로 문자열을 지정 하려면이 생성자의 일반적인 사용은 <xref:System.Xml.Linq.XName>, 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-131">Typical use of this constructor is to specify a string as the first parameter instead of creating a new <xref:System.Xml.Linq.XName>, as follows:</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("AnAttributeName", "Content")  
);  
```  
  
 <span data-ttu-id="1ac9a-132">더하기 연산자 오버 로드를 사용할 수도 있습니다는 <xref:System.Xml.Linq.XNamespace> 및 만들 문자열은 <xref:System.Xml.Linq.XName>다음과 같이 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-132">You can also use the addition operator overload with an <xref:System.Xml.Linq.XNamespace> and a string to create an <xref:System.Xml.Linq.XName>, as follows:</span></span>  
  
```csharp  
XNamespace aw = "http://www.adventure-works.com";  
XElement root = new XElement(aw + "Root",  
    new XAttribute(aw + "AnAttributeName", "Content")  
);  
```  
  
 <span data-ttu-id="1ac9a-133">자세한 내용은 참조 [XML 네임 스페이스로 작업](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430)합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-133">For more information, see [Working with XML Namespaces](http://msdn.microsoft.com/library/e3003209-3234-45be-a832-47feb7927430).</span></span>  
  
 <span data-ttu-id="1ac9a-134">하지만 XML 리터럴의 XML 트리를 만들기 위한 더 나은 방법은 제공 Visual basic의 경우 이러한 동일한 접근 방식을 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-134">These same approaches will work for Visual Basic, however XML literals provide a better approach for creating XML trees.</span></span>  
  
 <span data-ttu-id="1ac9a-135">`value` 매개 변수 수는 <xref:System.String>, `double`, `float`, `decimal`, `bool`, <xref:System.DateTime>, 또는 <xref:System.TimeSpan>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-135">The `value` parameter can be a <xref:System.String>, `double`, `float`, `decimal`, `bool`, <xref:System.DateTime>, or <xref:System.TimeSpan>.</span></span> <span data-ttu-id="1ac9a-136">값이 한 <xref:System.DateTime> 또는 <xref:System.TimeSpan>, W3C 사양에 따라 특성 값의 형식이 올바르게 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-136">If the value is a <xref:System.DateTime> or <xref:System.TimeSpan>, the value of the attribute is formatted correctly per the W3C specifications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ac9a-137">다음 예제에서는이 생성자를 사용 하 여 특성을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-137">The following example uses this constructor to create attributes.</span></span> <span data-ttu-id="1ac9a-138">문자열의 첫 번째 인수로 전달는 <xref:System.Xml.Linq.XAttribute> 다음 암시적으로 변환 되도록 생성자 <xref:System.Xml.Linq.XName> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-138">It passes strings as the first argument to the <xref:System.Xml.Linq.XAttribute> constructor, which are then implicitly converted to <xref:System.Xml.Linq.XName> objects.</span></span> <span data-ttu-id="1ac9a-139">특성은 요소에 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-139">The attributes are added to an element.</span></span>  
  
```csharp  
XElement root;  
  
double dbl = 12.345;  
XAttribute[] attArray = {  
    new XAttribute("Att4", 1),  
    new XAttribute("Att5", 2),  
    new XAttribute("Att6", 3)  
};  
DateTime dt = new DateTime(2006, 10, 6, 12, 30, 00);  
  
// string content  
root = new XElement("Root",  
    new XAttribute("Att1", "Some text"),  
  
    // double content  
    new XAttribute("Att2", dbl),  
  
    // DateTime content  
    new XAttribute("Att3", dt),  
  
    // XAttribute array content  
    attArray  
);  
  
Console.WriteLine(root);  
```  
  
```vb  
Dim dbl As Double = 12.345  
Dim attArray As XAttribute() = { _  
    New XAttribute("Att4", 1), _  
    New XAttribute("Att5", 2), _  
    New XAttribute("Att6", 3) _  
}  
Dim dt As DateTime = New DateTime(2006, 10, 6, 12, 30, 0)  
Dim root As XElement = <Root Att1="Some text"  
                           Att2=<%= dbl %>  
                           Att3=<%= dt %>  
                           <%= attArray %>  
                       />  
Console.WriteLine(root)  
```  
  
 <span data-ttu-id="1ac9a-140">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-140">This example produces the following output:</span></span>  
  
```  
  
<Root Att1="Some text" Att2="12.345" Att3="2006-10-06T12:30:00" Att4="1" Att5="2" Att6="3" />  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ac9a-141">
            <paramref name="name" /> 또는 <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-141">The <paramref name="name" /> or <paramref name="value" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.Linq.XAttribute.Name" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
        <altmember cref="P:System.Xml.Linq.XAttribute.NodeType" />
      </Docs>
    </Member>
    <Member MemberName="EmptySequence">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XAttribute&gt; EmptySequence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IEnumerable`1&lt;class System.Xml.Linq.XAttribute&gt; EmptySequence" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.EmptySequence" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EmptySequence As IEnumerable(Of XAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IEnumerable&lt;System::Xml::Linq::XAttribute ^&gt; ^ EmptySequence { System::Collections::Generic::IEnumerable&lt;System::Xml::Linq::XAttribute ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xml.Linq.XAttribute&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ac9a-142">특성의 빈 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-142">Gets an empty collection of attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ac9a-143">빈 컬렉션이 들어 있는 <see cref="T:System.Collections.Generic.IEnumerable`1" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-143">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Xml.Linq.XAttribute" /> containing an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac9a-144">이 속성은 특성의 컬렉션을 반환 하는 메서드를 작성할 때 클래스 구현자를 통해 일반적으로 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-144">This property is typically used by class implementers when writing a method that returns a collection of attributes.</span></span> <span data-ttu-id="1ac9a-145">빈 컬렉션을 가져오는이 속성을 사용할 수는 메서드를 빈 특성의 컬렉션을 반환 하는 경우 <xref:System.Xml.Linq.XAttribute> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-145">If the method needs to return an empty collection of attributes, it could use this property to get an empty collection of <xref:System.Xml.Linq.XAttribute> objects.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XElement.EmptySequence" />
        <altmember cref="Overload:System.Xml.Linq.XAttribute.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceDeclaration">
      <MemberSignature Language="C#" Value="public bool IsNamespaceDeclaration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespaceDeclaration" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNamespaceDeclaration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNamespaceDeclaration { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ac9a-146">이 특성이 네임스페이스 선언인지 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-146">Determines if this attribute is a namespace declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ac9a-147">이 특성이 네임스페이스 선언이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-147">
              <see langword="true" /> if this attribute is a namespace declaration; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac9a-148">기술적으로 XML에 네임 스페이스 선언이 않습니다 적절 한 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-148">Technically, in XML, namespace declarations are not attributes proper.</span></span> <span data-ttu-id="1ac9a-149">그러나 대부분의 XML 프로그래머도 이러한 구분이 정상적으로 수행 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-149">However, this distinction is not normally made by most XML programmers.</span></span> <span data-ttu-id="1ac9a-150">대신, 네임 스페이스 선언 특성 구문 때문에 대부분 XML 프로그래머 네임 스페이스의 특성으로 간주 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-150">Instead, because namespace declarations have exactly the same syntax as attributes, most XML programmers think of namespaces as attributes.</span></span> <span data-ttu-id="1ac9a-151">단순화 하기 위해는 [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] 프로그래밍 인터페이스를 네임 스페이스는 XML 트리에 표시 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-151">To simplify the [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming interface, namespaces are represented in the XML tree as attributes.</span></span> <span data-ttu-id="1ac9a-152">이 속성을 사용 하 여 특정 결정 [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] 특성은 네임 스페이스 선언 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-152">You can use this property to determine if a particular [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] attribute is really a namespace declaration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ac9a-153">다음 예제에서는 네임 스페이스 선언이 특성 및 하지 않은 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-153">The following example creates an attribute that is a namespace declaration and an attribute that is not.</span></span> <span data-ttu-id="1ac9a-154">그런 다음 각 특성 네임 스페이스 선언 인지 여부를 표시 하려면이 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-154">It then uses this property to display whether each attribute is a namespace declaration or not.</span></span>  
  
```csharp  
XNamespace aw = "http://www.adventure-works.com";  
XElement root = new XElement(aw + "Root",  
    new XAttribute(XNamespace.Xmlns + "aw", "http://www.adventure-works.com"),  
    new XAttribute(aw + "Att", "content")  
);  
  
foreach (XAttribute att in root.Attributes()) {  
    if (att.IsNamespaceDeclaration)  
        Console.WriteLine("{0} is a namespace declaration", att.Name);  
    else  
        Console.WriteLine("{0} is not a namespace declaration", att.Name);  
}  
```  
  
```vb  
Dim root As XElement = <aw:Root xmlns:aw='http://www.adventure-works.com'  
                           aw:Att='content'/>  
  
For Each att As XAttribute In root.Attributes()  
    If (att.IsNamespaceDeclaration) Then  
        Console.WriteLine("{0} is a namespace declaration", att.Name)  
    Else  
        Console.WriteLine("{0} is not a namespace declaration", att.Name)  
    End If  
Next  
```  
  
 <span data-ttu-id="1ac9a-155">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-155">This example produces the following output:</span></span>  
  
```  
{http://www.w3.org/2000/xmlns/}aw is a namespace declaration  
{http://www.adventure-works.com}Att is not a namespace declaration  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Linq.XNamespace" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public System.Xml.Linq.XName Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Linq.XName Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As XName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Linq::XName ^ Name { System::Xml::Linq::XName ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ac9a-156">이 특성의 확장된 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-156">Gets the expanded name of this attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ac9a-157">이 특성의 이름이 들어 있는 <see cref="T:System.Xml.Linq.XName" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-157">An <see cref="T:System.Xml.Linq.XName" /> containing the name of this attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac9a-158">이 속성에서 반환 되는 확장 된 이름 형식으로 `{namespace}localname`합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-158">The expanded name returned by this property is in the form of `{namespace}localname`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ac9a-159">다음 예제에서는 세 개의 특성이 있는 요소를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-159">The following example creates an element with three attributes.</span></span> <span data-ttu-id="1ac9a-160">그런 다음 각 특성의 이름을 인쇄 하려면이 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-160">It then uses this property to print out the name of each attribute.</span></span> <span data-ttu-id="1ac9a-161">또한이 예제에서는 기존 특성의 이름을 사용 하 여 새 특성을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-161">The example also shows creation of a new attribute using the name of an existing attribute.</span></span>  
  
```csharp  
XNamespace aw = "http://www.adventure-works.com";  
XElement root = new XElement(aw + "Root",  
    new XAttribute(XNamespace.Xmlns + "aw", "http://www.adventure-works.com"),  
    new XAttribute(aw + "Att", "content"),  
    new XAttribute("Att2", "different content")  
);  
  
foreach (XAttribute att in root.Attributes())  
    Console.WriteLine("{0}={1}", att.Name, att.Value);  
Console.WriteLine("");  
  
XElement newRoot = new XElement(aw + "Root",  
    from att in root.Attributes("Att2")  
    select new XAttribute(att.Name, "new content"));  
  
foreach (XAttribute att in newRoot.Attributes())  
    Console.WriteLine("{0}={1}", att.Name, att.Value);  
```  
  
```vb  
Dim root As XElement = _   
    <aw:Root xmlns:aw='http://www.adventure-works.com'  
        aw:Att='content'  
        Att2='different content'/>  
  
For Each att As XAttribute In root.Attributes()  
    Console.WriteLine("{0}={1}", att.Name, att.Value)  
Next  
Console.WriteLine("")  
  
Dim NewRoot As XElement = _  
<Root  
    <%= _  
        From att In root.Attributes("Att2") _  
        Select New XAttribute(att.Name, "new content") _  
    %>>_  
</Root>  
  
For Each att As XAttribute In NewRoot.Attributes()  
    Console.WriteLine("{0}={1}", att.Name, att.Value)  
Next  
  
```  
  
 <span data-ttu-id="1ac9a-162">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-162">This example produces the following output:</span></span>  
  
```  
{http://www.w3.org/2000/xmlns/}aw=http://www.adventure-works.com  
{http://www.adventure-works.com}Att=content  
Att2=different content  
  
Att2=new content  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Linq.XName" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
        <altmember cref="M:System.Xml.Linq.XAttribute.ToString" />
      </Docs>
    </Member>
    <Member MemberName="NextAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Linq.XAttribute NextAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Linq.XAttribute NextAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.NextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextAttribute As XAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Linq::XAttribute ^ NextAttribute { System::Xml::Linq::XAttribute ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ac9a-163">부모 요소의 다음 특성을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-163">Gets the next attribute of the parent element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ac9a-164">부모 요소의 다음 특성이 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-164">An <see cref="T:System.Xml.Linq.XAttribute" /> containing the next attribute of the parent element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac9a-165">특성은 XML 트리의 요소에 추가 된 순서 대로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-165">Attributes are maintained in the XML tree in the order that they were added to the element.</span></span> <span data-ttu-id="1ac9a-166">특성의 컬렉션으로 반환 될 때 <xref:System.Xml.Linq.XElement.Attributes%2A>, 정렬 되지 않고 추가 된 순서 대로 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-166">When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added, and are not sorted.</span></span> <span data-ttu-id="1ac9a-167">이 속성을 통해 다음 특성을 요청 하는 경우이 특성 다음에 추가 된 특성이 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-167">When you request the next attribute through this property, this property returns the attribute that was added after this attribute.</span></span>  
  
 <span data-ttu-id="1ac9a-168">이 특성에 부모가 없는 경우 또는 다음 특성이 경우 다음이 속성은 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-168">If this attribute does not have a parent, or if there is no next attribute, then this property returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ac9a-169">다음 예제에서는이 속성을 사용 하는 요소의 특성을 반복 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-169">The following example shows how to iterate through the attributes of an element using this property.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XAttribute("Att3", 3),  
    new XAttribute("Att4", 4)  
);  
  
XAttribute att = root.FirstAttribute;  
do {  
    Console.WriteLine(att);  
}  
while((att = att.NextAttribute) != null);  
```  
  
```vb  
Dim root As XElement = <Root Att1="1" Att2="2" Att3="3" Att4="4"/>  
Dim att As XAttribute = root.FirstAttribute  
Dim val As Boolean = True  
Do  
    Console.WriteLine(att)  
    att = att.NextAttribute  
Loop While (Not (att Is Nothing))  
```  
  
 <span data-ttu-id="1ac9a-170">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-170">This example produces the following output:</span></span>  
  
```  
Att1="1"  
Att2="2"  
Att3="3"  
Att4="4"  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XAttribute.PreviousAttribute" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ac9a-171">이 노드에 대한 노드 형식을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-171">Gets the node type for this node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ac9a-172">노드 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-172">The node type.</span>
          </span>
          <span data-ttu-id="1ac9a-173">
            <see cref="T:System.Xml.Linq.XAttribute" /> 개체의 경우 이 값은 <see cref="F:System.Xml.XmlNodeType.Attribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-173">For <see cref="T:System.Xml.Linq.XAttribute" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.Attribute" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac9a-174">파생 되는 모든 클래스 때문에 <xref:System.Xml.Linq.XObject> 포함 한 <xref:System.Xml.Linq.XObject.NodeType%2A> 속성, 컬렉션의 구체적인 서브 클래스에 대해 작동 하는 코드를 작성할 수 있습니다 <xref:System.Xml.Linq.XObject>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-174">Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>.</span></span> <span data-ttu-id="1ac9a-175">코드 그런 다음 컬렉션에서 각 노드의 노드 형식에 대 한 테스트 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-175">Your code can then test for the node type of each node in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ac9a-176">다음 예제에서는 특성을 만들고이 속성을 사용 하 여 노드 형식을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-176">The following example creates an attribute, and then displays the node type using this property.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "content")  
);  
  
XAttribute att = root.FirstAttribute;  
Console.WriteLine(att.NodeType);  
```  
  
```vb  
Dim root As XElement = <Root Att="content"/>  
Dim att As XAttribute = root.FirstAttribute  
Console.WriteLine(att.NodeType.ToString)  
```  
  
 <span data-ttu-id="1ac9a-177">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-177">This example produces the following output:</span></span>  
  
```  
  
Attribute  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNodeType" />
        <altmember cref="T:System.Xml.Linq.XNode" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator bool (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator bool(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-178">
            <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.Boolean" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-178">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Boolean" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-179">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Boolean" />으로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-179">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Boolean" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-180">이 <see cref="T:System.Boolean" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-180">A <see cref="T:System.Boolean" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac9a-181">변환할 때 <xref:System.Boolean> 특성 또는 요소에서 허용 되는 값은 "0", "1" 및 모든 문자열을 "true" 또는 "false" 후 트리밍을 소문자로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-181">When converting to <xref:System.Boolean> from an attribute or element, allowed values are "0", "1", and any string that produces "true" or "false" after trimming and conversion to lower case.</span></span>  
 
## Examples  
 <span data-ttu-id="1ac9a-182">다음 예에서는 사용 하 여 특성을 만듭니다는 <xref:System.Boolean> 값을 다음으로 캐스팅 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-182">The following example creates an attribute with a <xref:System.Boolean> value, then casts it to <xref:System.Boolean>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("BoolValue", true)  
);  
bool bv = (bool)root.Attribute("BoolValue");  
Console.WriteLine("(bool)BoolValue={0}", bv);  
```  
  
```vb  
Dim root As XElement = <root BoolValue="true"/>  
Dim bv As Boolean = CBool(root.Attribute("BoolValue"))  
Console.WriteLine("(bool)BoolValue={0}", bv)  
```  
  
 <span data-ttu-id="1ac9a-183">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-183">This example produces the following output:</span></span>  
  
```  
(bool)BoolValue=True  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-184">특성에 유효한 <see cref="T:System.Boolean" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-184">The attribute does not contain a valid <see cref="T:System.Boolean" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ac9a-185">
            <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-185">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator DateTime (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTime op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator DateTime(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-186">
            <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.DateTime" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-186">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.DateTime" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-187">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.DateTime" />으로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-187">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-188">이 <see cref="T:System.DateTime" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-188">A <see cref="T:System.DateTime" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac9a-189">날짜 및 시간 콘텐츠가 있는 요소나 특성의 값 공간은 ISO 8601에 설명 된 시간과 날짜 밀접 한 관련이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-189">The value space of an attribute or element that contains date and time content is closely related to the dates and times described in ISO 8601.</span></span> <span data-ttu-id="1ac9a-190">특성 또는 날짜 및 시간 콘텐츠를 포함 하는 요소를 만들 특성 또는 요소 값은 W3C 사양에 따라 서식이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-190">When creating an attribute or element that contains date and time content, the attribute or element values are formatted per the W3C specification.</span></span> <span data-ttu-id="1ac9a-191">자세한 내용은 W3C 사양을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-191">See the W3C specification for more details.</span></span>  
  
 <span data-ttu-id="1ac9a-192">으로 캐스팅할 때의 동작은 lax는 <xref:System.DateTime> 특성 또는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-192">Behavior is lax when casting to a <xref:System.DateTime> from an attribute or element.</span></span> <span data-ttu-id="1ac9a-193">값은 적절 하 게 변환할 특성 또는 요소 값의 형식이 W3C 사양 정확히 일치 하지 않더라도 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-193">Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="1ac9a-194">이 변환 연산자를 사용 하 여 <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> 에서 변환 하는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-194">This conversion operator uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> to convert from a <xref:System.DateTime>.</span></span>  
 
## Examples  
 <span data-ttu-id="1ac9a-195">다음 예제에서는 날짜 및 시간 콘텐츠로 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-195">The following example creates an attribute with date and time content.</span></span> <span data-ttu-id="1ac9a-196">그 다음으로 캐스팅 <xref:System.DateTime> 는 값을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-196">It then casts it to <xref:System.DateTime> to retrieve the value.</span></span>  
  
```csharp  
// Behavior is strict when formatting an XML element or attribute from a DateTime,  
// but behavior is lax when casting to a DateTime from an element or attribute.  
  
XElement root = new XElement("Root",  
    new XAttribute("Att", new DateTime(2006, 10, 6, 12, 30, 0))  
);  
Console.WriteLine(root);  
  
// casting from a strictly formatted XML attribute  
DateTime dt = (DateTime)root.Attribute("Att");  
Console.WriteLine("dt={0}", dt);  
Console.WriteLine("-----");  
  
// if root is formatted in some different way than the standard ISO 8601, if at all possible,  
// the value is appropriately converted to DateTime  
  
XAttribute dtAtt = new XAttribute("OrderDate", "October 6, 2006");  
Console.WriteLine(dtAtt);  
DateTime orderDate = (DateTime)dtAtt;  
Console.WriteLine("OrderDate={0:d}", orderDate);  
```  
  
```vb  
' Behavior is strict when formatting an XML element or attribute from a DateTime,  
' but behavior is lax when casting to a DateTime from an element or attribute.  
Dim root As XElement = <Root Att=<%= New DateTime(2006, 10, 6, 12, 30, 0) %>/>  
  
Console.WriteLine(root)  
  
' casting from a strictly formatted XML attribute  
Dim dt As DateTime = CType(root.Attribute("Att"), DateTime)  
Console.WriteLine("dt={0}", dt)  
Console.WriteLine("-----")  
  
' if root is formatted in some different way than the standard ISO 8601, if at all possible,  
' the value is appropriately converted to DateTime  
Dim dtAtt As XAttribute = New XAttribute("OrderDate", "October 6, 2006")  
Console.WriteLine(dtAtt)  
Dim orderDate As DateTime = CType(dtAtt, DateTime)  
Console.WriteLine("OrderDate={0:d}", orderDate)  
```  
  
 <span data-ttu-id="1ac9a-197">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-197">This example produces the following output:</span></span>  
  
```  
<Root Att="2006-10-06T12:30:00" />  
dt=10/6/2006 12:30:00 PM  
-----  
OrderDate="October 6, 2006"  
OrderDate=10/6/2006  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-198">특성에 유효한 <see cref="T:System.DateTime" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-198">The attribute does not contain a valid <see cref="T:System.DateTime" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ac9a-199">
            <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-199">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator DateTimeOffset (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTimeOffset op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator DateTimeOffset(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-200">
            <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.DateTimeOffset" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-200">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.DateTimeOffset" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-201">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.DateTimeOffset" />으로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-201">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.DateTimeOffset" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-202">이 <see cref="T:System.DateTimeOffset" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-202">A <see cref="T:System.DateTimeOffset" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac9a-203">사용 하 여이 변환 연산자는 <xref:System.Xml.XmlConvert> 변환을 수행 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-203">This conversion operator uses the <xref:System.Xml.XmlConvert> class to do the conversion.</span></span>  

## Examples  
 <span data-ttu-id="1ac9a-204">다음 예제에서는 날짜 및 시간 콘텐츠로 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-204">The following example creates an attribute with date and time content.</span></span> <span data-ttu-id="1ac9a-205">그 다음으로 캐스팅 <xref:System.DateTimeOffset> 는 값을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-205">It then casts it to <xref:System.DateTimeOffset> to retrieve the value.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new DateTimeOffset(new DateTime(2006, 10, 6, 12, 30, 0)))  
);  
Console.WriteLine(root);  
  
// casting from a strictly formatted XML attribute  
DateTimeOffset dt = (DateTimeOffset)root.Attribute("Att");  
Console.WriteLine("dt={0}", dt);  
```  
  
```vb  
Dim root As XElement = _  
    <Root  
        Att=<%= New DateTimeOffset(New DateTime(2006, 10, 6, 12, 30, 0)) %>/>  
Console.WriteLine(root)  
  
' casting from a strictly formatted XML attribute  
Dim dt As DateTimeOffset = CType(root.Attribute("Att"), DateTimeOffset)  
Console.WriteLine("dt={0}", dt)  
```  
  
 <span data-ttu-id="1ac9a-206">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-206">This example produces the following output:</span></span>  
  
```  
<Root Att="2006-10-06T12:30:00-07:00" />  
dt=10/6/2006 12:30:00 PM -07:00  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-207">특성에 유효한 <see cref="T:System.DateTimeOffset" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-207">The attribute does not contain a valid <see cref="T:System.DateTimeOffset" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ac9a-208">
            <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-208">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-209">
            <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.Decimal" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-209">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Decimal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-210">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Decimal" />으로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-210">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-211">이 <see cref="T:System.Decimal" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-211">A <see cref="T:System.Decimal" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="1ac9a-212">다음 예제에서는 10 진수 값을 가진 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-212">The following example creates an attribute with a decimal value.</span></span> <span data-ttu-id="1ac9a-213">로 캐스팅 하 여 특성의 값을 검색 한 다음 <xref:System.Decimal>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-213">It then retrieves the value of the attribute by casting to <xref:System.Decimal>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "79228162514264337593543950335")  
);  
decimal value = (decimal)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="79228162514264337593543950335"/>  
Dim value As Decimal = CDec(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="1ac9a-214">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-214">This example produces the following output:</span></span>  
  
```  
value=79228162514264337593543950335  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-215">특성에 유효한 <see cref="T:System.Decimal" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-215">The attribute does not contain a valid <see cref="T:System.Decimal" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ac9a-216">
            <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-216">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator double (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator double(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-217">
            <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-217">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Double" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-218">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Double" />으로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-218">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Double" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-219">이 <see cref="T:System.Double" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-219">A <see cref="T:System.Double" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="1ac9a-220">다음 예제에서는 사용 하 여 특성 <xref:System.Double> 콘텐츠입니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-220">The following example creates an attribute with <xref:System.Double> content.</span></span> <span data-ttu-id="1ac9a-221">로 캐스팅 하 여 값을 검색 한 다음 <xref:System.Double>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-221">It then retrieves the value by casting to <xref:System.Double>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 1.79769313486231e308)  
);  
double value = (double)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="1.79769313486231E+308"/>  
Dim value As Double = CDbl(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="1ac9a-222">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-222">This example produces the following output:</span></span>  
  
```  
value=1.79769313486231E+308  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-223">특성에 유효한 <see cref="T:System.Double" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-223">The attribute does not contain a valid <see cref="T:System.Double" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ac9a-224">
            <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-224">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Guid (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Guid op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Guid(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-225">
            <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.Guid" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-225">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Guid" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-226">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Guid" />으로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-226">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Guid" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-227">이 <see cref="T:System.Guid" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-227">A <see cref="T:System.Guid" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="1ac9a-228">다음 예제에서는 내용으로 한 GUID를 가진 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-228">The following example creates an attribute with a GUID as content.</span></span> <span data-ttu-id="1ac9a-229">로 캐스팅 하 여 값을 검색 한 다음 <xref:System.Guid>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-229">It then retrieves the value by casting to <xref:System.Guid>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new Guid("3c1cc55b-baff-4b7a-9d17-077af3aa5730"))  
);  
Guid value = (Guid)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att=<%= New Guid("3c1cc55b-baff-4b7a-9d17-077af3aa5730") %>/>  
Dim value As Guid = CType(root.Attribute("Att"), Guid)  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="1ac9a-230">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-230">This example produces the following output:</span></span>  
  
```  
value=3c1cc55b-baff-4b7a-9d17-077af3aa5730  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-231">특성에 유효한 <see cref="T:System.Guid" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-231">The attribute does not contain a valid <see cref="T:System.Guid" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ac9a-232">
            <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-232">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator int (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator int(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-233">
            <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.Int32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-233">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Int32" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-234">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Int32" />로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-234">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to an <see cref="T:System.Int32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-235">이 <see cref="T:System.Int32" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-235">A <see cref="T:System.Int32" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="1ac9a-236">다음 예제에서는 콘텐츠로 정수로 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-236">The following example creates an attribute with an integer as content.</span></span> <span data-ttu-id="1ac9a-237">로 캐스팅 하 여 값을 검색 한 다음 <xref:System.Int32>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-237">It then retrieves the value by casting to <xref:System.Int32>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 2147483647)  
);  
int value = (int)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="2147483647"/>  
Dim value As Integer = CInt(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="1ac9a-238">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-238">This example produces the following output:</span></span>  
  
```  
value=2147483647  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-239">특성에 유효한 <see cref="T:System.Int32" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-239">The attribute does not contain a valid <see cref="T:System.Int32" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ac9a-240">
            <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-240">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator long (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator long(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-241">
            <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.Int64" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-241">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Int64" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-242">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Int64" />로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-242">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to an <see cref="T:System.Int64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-243">이 <see cref="T:System.Int64" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-243">A <see cref="T:System.Int64" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="1ac9a-244">다음 예제에서는 콘텐츠로 정수 (long)와 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-244">The following example creates an attribute with a long integer as content.</span></span> <span data-ttu-id="1ac9a-245">로 캐스팅 하 여 특성의 값을 검색 한 다음 <xref:System.Int64>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-245">It then retrieves the value of the attribute by casting to <xref:System.Int64>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 9223372036854775807)  
);  
long value = (long)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="9223372036854775807"/>  
Dim value As Long = CLng(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="1ac9a-246">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-246">This example produces the following output:</span></span>  
  
```  
value=9223372036854775807  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-247">특성에 유효한 <see cref="T:System.Int64" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-247">The attribute does not contain a valid <see cref="T:System.Int64" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ac9a-248">
            <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-248">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;bool&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;bool&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;bool&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-249">
            <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.Boolean" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-249">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-250">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.Boolean" />로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-250">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-251">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.Boolean" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-251">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Boolean" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac9a-252">변환할 때 <xref:System.Boolean> 특성 또는 요소에서 허용 되는 값은 "0", "1" 및 모든 문자열을 "true" 또는 "false" 후 트리밍을 소문자로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-252">When converting to <xref:System.Boolean> from an attribute or element, allowed values are "0", "1", and any string that produces "true" or "false" after trimming and conversion to lower case.</span></span>  

## Examples  
 <span data-ttu-id="1ac9a-253">다음 예에서는 부울 콘텐츠로 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-253">The following example creates an attribute with Boolean content.</span></span> <span data-ttu-id="1ac9a-254">로 캐스팅 하 여 값을 검색 한 다음 <xref:System.Nullable%601> 의 <xref:System.Boolean>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-254">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Boolean>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("BoolValue1", true),  
    new XAttribute("BoolValue2", false)  
);  
bool? bool1 = (bool?)root.Attribute("BoolValue1");  
bool? bool2 = (bool?)root.Attribute("BoolValue2");  
Console.WriteLine("Nullable boolean: BoolValue1={0}", bool1);  
Console.WriteLine("Nullable boolean: BoolValue2={0}", bool2);  
```  
  
```vb  
Dim root As XElement = <Root BoolValue1="true" BoolValue2="false"/>  
Dim bool1 As Nullable(Of Boolean) = CType(root.Attribute("BoolValue1"), Nullable(Of Boolean))  
Dim bool2 As Nullable(Of Boolean) = CType(root.Attribute("BoolValue2"), Nullable(Of Boolean))  
Console.WriteLine("Nullable boolean: BoolValue1={0}", bool1)  
Console.WriteLine("Nullable boolean: BoolValue2={0}", bool2)  
```  
  
 <span data-ttu-id="1ac9a-255">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-255">This example produces the following output:</span></span>  
  
```  
Nullable boolean: BoolValue1=True  
Nullable boolean: BoolValue2=False  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-256">특성에 유효한 <see cref="T:System.Boolean" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-256">The attribute does not contain a valid <see cref="T:System.Boolean" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;DateTime&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;DateTime&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-257">
            <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.DateTime" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-257">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-258">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.DateTime" />로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-258">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-259">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.DateTime" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-259">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTime" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac9a-260">날짜 및 시간 콘텐츠가 있는 요소나 특성의 값 공간은 ISO 8601에 설명 된 시간과 날짜 밀접 한 관련이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-260">The value space of an attribute or element that contains date and time content is closely related to the dates and times described in ISO 8601.</span></span> <span data-ttu-id="1ac9a-261">특성 또는 날짜 및 시간 콘텐츠를 포함 하는 요소를 만들 특성 또는 요소 값은 W3C 사양에 따라 서식이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-261">When creating an attribute or element that contains date and time content, the attribute or element values are formatted per the W3C specification.</span></span> <span data-ttu-id="1ac9a-262">자세한 내용은 W3C 사양을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-262">See the W3C specification for more details.</span></span>  
  
 <span data-ttu-id="1ac9a-263">으로 캐스팅할 때의 동작은 lax는 <xref:System.Nullable%601> 의 <xref:System.DateTime> 특성 또는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-263">Behavior is lax when casting to a <xref:System.Nullable%601> of <xref:System.DateTime> from an attribute or element.</span></span> <span data-ttu-id="1ac9a-264">값은 적절 하 게 변환할 특성 또는 요소 값의 형식이 W3C 사양 정확히 일치 하지 않더라도 <xref:System.Nullable%601> 의 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-264">Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <xref:System.Nullable%601> of <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="1ac9a-265">이 변환 연산자를 사용 하 여 <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> 에서 변환 하는 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-265">This conversion operator uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> to convert from a <xref:System.DateTime>.</span></span>  
  
## Examples  
 <span data-ttu-id="1ac9a-266">다음 예제에서는 날짜 및 시간 콘텐츠가 있는 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-266">The following example creates an attribute with a date and time as content.</span></span> <span data-ttu-id="1ac9a-267">로 캐스팅 하 여 값을 검색 한 다음 <xref:System.Nullable%601> 의 <xref:System.DateTime>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-267">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.DateTime>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new DateTime(2006, 10, 6, 12, 30, 0))  
);  
DateTime? value = (DateTime?)root.Attribute("Att");  
Console.WriteLine("Nullable DateTime: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att=<%= New DateTime(2006, 10, 6, 12, 30, 0) %>/>  
Dim value As Nullable(Of DateTime) = CType(root.Attribute("Att"), Nullable(Of DateTime))  
Console.WriteLine("Nullable DateTime: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="1ac9a-268">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-268">This example produces the following output:</span></span>  
  
```  
Nullable DateTime: value=10/6/2006 12:30:00 PM  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-269">특성에 유효한 <see cref="T:System.DateTime" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-269">The attribute does not contain a valid <see cref="T:System.DateTime" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;DateTimeOffset&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;DateTimeOffset&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-270">
            <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.DateTimeOffset" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-270">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTimeOffset" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-271">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.DateTimeOffset" />로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-271">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTimeOffset" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-272">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.DateTimeOffset" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-272">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.DateTimeOffset" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac9a-273">사용 하 여이 변환 연산자는 <xref:System.Xml.XmlConvert> 변환을 수행 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-273">This conversion operator uses the <xref:System.Xml.XmlConvert> class to do the conversion.</span></span>  
 
## Examples  
 <span data-ttu-id="1ac9a-274">다음 예제에서는 날짜 및 시간 콘텐츠가 있는 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-274">The following example creates an attribute with a date and time as content.</span></span> <span data-ttu-id="1ac9a-275">로 캐스팅 하 여 값을 검색 한 다음 <xref:System.Nullable%601> 의 <xref:System.DateTimeOffset>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-275">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.DateTimeOffset>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new DateTimeOffset(new DateTime(2006, 10, 6, 12, 30, 0)))  
);  
DateTimeOffset? value = (DateTimeOffset?)root.Attribute("Att");  
Console.WriteLine("Nullable DateTimeOffset: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = _  
    <Root  
        Att=<%= New DateTimeOffset(New DateTime(2006, 10, 6, 12, 30, 0)) %>/>  
Dim value As Nullable(Of DateTimeOffset) = CType(root.Attribute("Att"), Nullable(Of DateTimeOffset))  
Console.WriteLine("Nullable DateTimeOffset: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="1ac9a-276">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-276">This example produces the following output:</span></span>  
  
```  
Nullable DateTimeOffset: value=10/6/2006 12:30:00 PM -07:00  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-277">특성에 유효한 <see cref="T:System.DateTimeOffset" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-277">The attribute does not contain a valid <see cref="T:System.DateTimeOffset" /> value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;decimal&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;System::Decimal&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-278">
            <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.Decimal" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-278">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-279">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.Decimal" />로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-279">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-280">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.Decimal" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-280">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Decimal" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="1ac9a-281">다음 예제에서는 10 진수 콘텐츠가 있는 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-281">The following example creates an attribute with decimal content.</span></span> <span data-ttu-id="1ac9a-282">로 캐스팅 하 여 값을 검색 한 다음 <xref:System.Nullable%601> 의 <xref:System.Decimal>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-282">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Decimal>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "79228162514264337593543950335")  
);  
decimal? value = (decimal?)root.Attribute("Att");  
Console.WriteLine("Nullable decimal: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="79228162514264337593543950335"/>  
Dim value As Nullable(Of Decimal) = CType(root.Attribute("Att"), Nullable(Of Decimal))  
Console.WriteLine("Nullable decimal: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="1ac9a-283">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-283">This example produces the following output:</span></span>  
  
```  
Nullable decimal: value=79228162514264337593543950335  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-284">특성에 유효한 <see cref="T:System.Decimal" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-284">The attribute does not contain a valid <see cref="T:System.Decimal" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;double&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;float64&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;double&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-285">
            <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.Double" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-285">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-286">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.Double" />로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-286">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-287">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.Double" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-287">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Double" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="1ac9a-288">다음 예제에서는 배정밀도 부동 소수점 콘텐츠가 있는 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-288">The following example creates an attribute with double precision floating point content.</span></span> <span data-ttu-id="1ac9a-289">로 캐스팅 하 여 값을 검색 한 다음 <xref:System.Nullable%601> 의 <xref:System.Double>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-289">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Double>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 1.79769313486231e308)  
);  
double? value = (double?)root.Attribute("Att");  
Console.WriteLine("Nullable double: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="1.79769313486231E+308"/>  
Dim value As Nullable(Of Double) = CType(root.Attribute("Att"), Nullable(Of Double))  
Console.WriteLine("Nullable double: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="1ac9a-290">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-290">This example produces the following output:</span></span>  
  
```  
Nullable double: value=1.79769313486231E+308  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-291">특성에 유효한 <see cref="T:System.Double" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-291">The attribute does not contain a valid <see cref="T:System.Double" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;Guid&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;valuetype System.Guid&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;Guid&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-292">
            <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.Guid" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-292">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-293">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.Guid" />로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-293">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-294">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.Guid" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-294">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Guid" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="1ac9a-295">다음 예제에서는 guid 콘텐츠로 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-295">The following example creates an attribute with guid content.</span></span> <span data-ttu-id="1ac9a-296">로 캐스팅 하 여 값을 검색 한 다음 <xref:System.Nullable%601> 의 <xref:System.Guid>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-296">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Guid>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new Guid("3c1cc55b-baff-4b7a-9d17-077af3aa5730"))  
);  
Guid? value = (Guid?)root.Attribute("Att");  
Console.WriteLine("Nullable Guid: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att=<%= New Guid("3c1cc55b-baff-4b7a-9d17-077af3aa5730") %>/>  
Dim value As Nullable(Of Guid) = CType(root.Attribute("Att"), Nullable(Of Guid))  
Console.WriteLine("Nullable Guid: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="1ac9a-297">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-297">This example produces the following output:</span></span>  
  
```  
Nullable Guid: value=3c1cc55b-baff-4b7a-9d17-077af3aa5730  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-298">특성에 유효한 <see cref="T:System.Guid" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-298">The attribute does not contain a valid <see cref="T:System.Guid" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;int&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;int32&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;int&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-299">
            <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.Int32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-299">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-300">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.Int32" />로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-300">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-301">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.Int32" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-301">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int32" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="1ac9a-302">다음 예제에서는 정수 콘텐츠로 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-302">The following example creates an attribute with integer content.</span></span> <span data-ttu-id="1ac9a-303">로 캐스팅 하 여 값을 검색 한 다음 <xref:System.Nullable%601> 의 <xref:System.Int32>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-303">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Int32>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 2147483647)  
);  
int? value = (int?)root.Attribute("Att");  
Console.WriteLine("Nullable int: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="2147483647"/>  
Dim value As Nullable(Of Integer) = CType(root.Attribute("Att"), Nullable(Of Integer))  
Console.WriteLine("Nullable int: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="1ac9a-304">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-304">This example produces the following output:</span></span>  
  
```  
Nullable int: value=2147483647  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;long&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;int64&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;long&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-305">
            <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.Int64" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-305">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-306">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.Int64" />로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-306">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-307">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.Int64" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-307">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Int64" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="1ac9a-308">다음 예제에서는 정수 (long) 콘텐츠로 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-308">The following example creates an attribute with long integer content.</span></span> <span data-ttu-id="1ac9a-309">로 캐스팅 하 여 값을 검색 한 다음 <xref:System.Nullable%601> 의 <xref:System.Int64>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-309">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Int64>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 9223372036854775807)  
);  
long? value = (long?)root.Attribute("Att");  
Console.WriteLine("Nullable long: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="9223372036854775807"/>  
Dim value As Nullable(Of Long) = CType(root.Attribute("Att"), Nullable(Of Long))  
Console.WriteLine("Nullable long: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="1ac9a-310">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-310">This example produces the following output:</span></span>  
  
```  
Nullable long: value=9223372036854775807  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-311">특성에 유효한 <see cref="T:System.Int64" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-311">The attribute does not contain a valid <see cref="T:System.Int64" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;float&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;float32&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;float&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-312">
            <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.Single" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-312">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-313">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.Single" />로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-313">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-314">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.Single" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-314">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.Single" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="1ac9a-315">다음 예제에서는 단 정밀도 부동 소수점 콘텐츠가 있는 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-315">The following example creates an attribute with single precision floating point content.</span></span> <span data-ttu-id="1ac9a-316">로 캐스팅 하 여 값을 검색 한 다음 <xref:System.Nullable%601> 의 <xref:System.Single>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-316">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.Single>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 3.402823e38)  
);  
float? value = (float?)root.Attribute("Att");  
Console.WriteLine("Nullable Single: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="3.402823E+38"/>  
Dim value As Nullable(Of Single) = CType(root.Attribute("Att"), Nullable(Of Single))  
Console.WriteLine("Nullable Single: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="1ac9a-317">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-317">This example produces the following output:</span></span>  
  
```  
Nullable Single: value=3.402823E+38  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-318">특성에 유효한 <see cref="T:System.Single" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-318">The attribute does not contain a valid <see cref="T:System.Single" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;TimeSpan&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;TimeSpan&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-319">
            <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.TimeSpan" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-319">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-320">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.TimeSpan" />로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-320">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-321">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.TimeSpan" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-321">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.TimeSpan" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac9a-322">시간 범위 콘텐츠를 포함 하는 요소나 특성의 값 공간은 밀접 기간 콘텐츠를 ISO 8601에 설명 된 대로 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-322">The value space of an attribute or element that contains time span content is closely related to duration content as described in ISO 8601.</span></span> <span data-ttu-id="1ac9a-323">특성 또는 시간 범위 콘텐츠를 포함 하는 요소를 만들 특성 또는 요소 값은 W3C 사양에 따라 서식이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-323">When creating an attribute or element that contains time span content, the attribute or element values are formatted per the W3C specification.</span></span> <span data-ttu-id="1ac9a-324">자세한 내용은 W3C 사양을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-324">Please see the W3C specification for more details.</span></span>  
  
 <span data-ttu-id="1ac9a-325">으로 캐스팅할 때의 동작은 lax는 <xref:System.Nullable%601> 의 <xref:System.TimeSpan> 특성 또는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-325">Behavior is lax when casting to a <xref:System.Nullable%601> of <xref:System.TimeSpan> from an attribute or element.</span></span> <span data-ttu-id="1ac9a-326">값은 적절 하 게 변환할 특성 또는 요소 값의 형식이 W3C 사양 정확히 일치 하지 않더라도 <xref:System.Nullable%601> 의 <xref:System.TimeSpan>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-326">Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <xref:System.Nullable%601> of <xref:System.TimeSpan>.</span></span>  

## Examples  
 <span data-ttu-id="1ac9a-327">다음 예제에서는 특성이 생성 시간 범위 콘텐츠입니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-327">The following example creates an attribute with time span content.</span></span> <span data-ttu-id="1ac9a-328">로 캐스팅 하 여 값을 검색 한 다음 <xref:System.Nullable%601> 의 <xref:System.TimeSpan>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-328">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.TimeSpan>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new TimeSpan(1, 5, 30))  
);  
TimeSpan? value = (TimeSpan?)root.Attribute("Att");  
Console.WriteLine("Nullable TimeSpan: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att=<%= New TimeSpan(1, 5, 30) %>/>  
Dim value As Nullable(Of TimeSpan) = CType(root.Attribute("Att"), Nullable(Of TimeSpan))  
Console.WriteLine("Nullable TimeSpan: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="1ac9a-329">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-329">This example produces the following output:</span></span>  
  
```  
Nullable TimeSpan: value=01:05:30  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-330">특성에 유효한 <see cref="T:System.TimeSpan" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-330">The attribute does not contain a valid <see cref="T:System.TimeSpan" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;uint&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;unsigned int32&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;System::UInt32&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-331">
            <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.UInt32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-331">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-332">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.UInt32" />로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-332">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-333">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.UInt32" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-333">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt32" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="1ac9a-334">다음 예제에서는 부호 없는 정수 콘텐츠로 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-334">The following example creates an attribute with unsigned integer content.</span></span> <span data-ttu-id="1ac9a-335">로 캐스팅 하 여 값을 검색 한 다음 <xref:System.Nullable%601> 의 <xref:System.UInt32>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-335">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.UInt32>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 4294967295)  
);  
uint? value = (uint?)root.Attribute("Att");  
Console.WriteLine("Nullable uint: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="4294967295"/>  
Dim value As Nullable(Of UInteger) = CType(root.Attribute("Att"), Nullable(Of UInteger))  
Console.WriteLine("Nullable uint: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="1ac9a-336">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-336">This example produces the following output:</span></span>  
  
```  
Nullable uint: value=4294967295  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-337">특성에 유효한 <see cref="T:System.UInt32" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-337">The attribute does not contain a valid <see cref="T:System.UInt32" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator Nullable&lt;ulong&gt; (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Nullable`1&lt;unsigned int64&gt; op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Nullable(Of ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator Nullable&lt;System::UInt64&gt;(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-338">
            <see cref="T:System.Xml.Linq.XAttribute" />의 <see cref="T:System.Nullable`1" />로 캐스팅할 <see cref="T:System.UInt64" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-338">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-339">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Nullable`1" />의 <see cref="T:System.UInt64" />로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-339">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-340">이 <see cref="T:System.Nullable`1" />의 콘텐츠가 들어 있는 <see cref="T:System.UInt64" />의 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-340">A <see cref="T:System.Nullable`1" /> of <see cref="T:System.UInt64" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="1ac9a-341">다음 예제에서는 부호 없는 정수 (long) 콘텐츠로 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-341">The following example creates an attribute with unsigned long integer content.</span></span> <span data-ttu-id="1ac9a-342">로 캐스팅 하 여 값을 검색 한 다음 <xref:System.Nullable%601> 의 <xref:System.UInt64>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-342">It then retrieves the value by casting to <xref:System.Nullable%601> of <xref:System.UInt64>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 9223372036854775807)  
);  
ulong? value = (ulong?)root.Attribute("Att");  
Console.WriteLine("Nullable ulong: value={0}", value == null ? "null" : value.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att="9223372036854775807"/>  
Dim value As Nullable(Of ULong) = CType(root.Attribute("Att"), Nullable(Of ULong))  
Console.WriteLine("Nullable ulong: value={0}", IIf(value.HasValue, value.ToString(), "null"))  
```  
  
 <span data-ttu-id="1ac9a-343">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-343">This example produces the following output:</span></span>  
  
```  
Nullable ulong: value=9223372036854775807  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-344">특성에 유효한 <see cref="T:System.UInt64" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-344">The attribute does not contain a valid <see cref="T:System.UInt64" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator float (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator float(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-345">
            <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.Single" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-345">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.Single" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-346">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.Single" />으로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-346">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.Single" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-347">이 <see cref="T:System.Single" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-347">A <see cref="T:System.Single" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="1ac9a-348">다음 예제에서는 단 정밀도 부동 소수점 콘텐츠가 있는 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-348">The following example creates an attribute with single precision floating point content.</span></span> <span data-ttu-id="1ac9a-349">로 캐스팅 하 여 값을 검색 한 다음 <xref:System.Single>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-349">It then retrieves the value by casting to <xref:System.Single>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 3.402823e38)  
);  
float value = (float)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="3.402823E+38"/>  
Dim value As Single = CSng(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="1ac9a-350">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-350">This example produces the following output:</span></span>  
  
```  
value=3.402823E+38  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-351">특성에 유효한 <see cref="T:System.Single" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-351">The attribute does not contain a valid <see cref="T:System.Single" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ac9a-352">
            <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-352">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator string (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname string op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::String ^(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-353">
            <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-353">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.String" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-354">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.String" />으로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-354">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-355">이 <see cref="T:System.String" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-355">A <see cref="T:System.String" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="1ac9a-356">다음 예제에서는 문자열 콘텐츠로 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-356">The following example creates an attribute with string content.</span></span> <span data-ttu-id="1ac9a-357">로 캐스팅 하 여 값을 검색 한 다음 <xref:System.String>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-357">It then retrieves the value by casting to <xref:System.String>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "attribute content")  
);  
XAttribute att = root.Attribute("Att");  
string str = (string)att;  
Console.WriteLine("(string)att={0}", str);  
```  
  
```vb  
Dim root As XElement = <Root Att="attribute content"/>  
Dim att As XAttribute = root.Attribute("Att")  
Dim str As String = CStr(att)  
Console.WriteLine("(string)att={0}", str)  
```  
  
 <span data-ttu-id="1ac9a-358">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-358">This example produces the following output:</span></span>  
  
```  
(string)att=attribute content  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Linq.XAttribute.ToString" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator TimeSpan (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator TimeSpan(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-359">
            <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.TimeSpan" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-359">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.TimeSpan" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-360">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.TimeSpan" />으로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-360">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.TimeSpan" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-361">이 <see cref="T:System.TimeSpan" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-361">A <see cref="T:System.TimeSpan" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac9a-362">시간 범위 콘텐츠를 포함 하는 요소나 특성의 값 공간은 밀접 기간 콘텐츠를 ISO 8601에 설명 된 대로 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-362">The value space of an attribute or element that contains time span content is closely related to duration content as described in ISO 8601.</span></span> <span data-ttu-id="1ac9a-363">특성 또는 시간 범위 콘텐츠를 포함 하는 요소를 만들 특성 또는 요소 값은 W3C 사양에 따라 서식이 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-363">When creating an attribute or element that contains time span content, the attribute or element values are formatted per the W3C specification.</span></span> <span data-ttu-id="1ac9a-364">자세한 내용은 W3C 사양을 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-364">Please see the W3C specification for more details.</span></span>  
  
 <span data-ttu-id="1ac9a-365">으로 캐스팅할 때의 동작은 lax는 <xref:System.TimeSpan> 특성 또는 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-365">Behavior is lax when casting to a <xref:System.TimeSpan> from an attribute or element.</span></span> <span data-ttu-id="1ac9a-366">값은 적절 하 게 변환할 특성 또는 요소 값의 형식이 W3C 사양 정확히 일치 하지 않더라도 <xref:System.TimeSpan>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-366">Even if the attribute or element value is not formatted exactly per the W3C specification, the value is appropriately converted to a <xref:System.TimeSpan>.</span></span>  

## Examples  
 <span data-ttu-id="1ac9a-367">다음 예제에서는 특성이 생성 시간 범위 콘텐츠입니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-367">The following example creates an attribute with time span content.</span></span> <span data-ttu-id="1ac9a-368">로 캐스팅 하 여 값을 검색 한 다음 <xref:System.TimeSpan>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-368">It then retrieves the value by casting to <xref:System.TimeSpan>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", new TimeSpan(1, 5, 30))  
);  
TimeSpan value = (TimeSpan)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att=<%= New TimeSpan(1, 5, 30) %>/>  
Dim value As TimeSpan = CType(root.Attribute("Att"), TimeSpan)  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="1ac9a-369">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-369">This example produces the following output:</span></span>  
  
```  
value=01:05:30  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-370">특성에 유효한 <see cref="T:System.TimeSpan" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-370">The attribute does not contain a valid <see cref="T:System.TimeSpan" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ac9a-371">
            <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-371">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator uint (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int32 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt32(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-372">
            <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.UInt32" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-372">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.UInt32" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-373">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.UInt32" />으로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-373">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.UInt32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-374">이 <see cref="T:System.UInt32" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-374">A <see cref="T:System.UInt32" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="1ac9a-375">다음 예제에서는 부호 없는 정수 콘텐츠로 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-375">The following example creates an attribute with unsigned integer content.</span></span> <span data-ttu-id="1ac9a-376">로 캐스팅 하 여 값을 검색 한 다음 <xref:System.UInt32>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-376">It then retrieves the value by casting to <xref:System.UInt32>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",   
    new XAttribute("Att", 4294967295)  
);  
uint value = (uint)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="4294967295"/>  
Dim value As UInteger = CUInt(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="1ac9a-377">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-377">This example produces the following output:</span></span>  
  
```  
value=4294967295  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-378">특성에 유효한 <see cref="T:System.UInt32" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-378">The attribute does not contain a valid <see cref="T:System.UInt32" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ac9a-379">
            <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-379">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ulong (System.Xml.Linq.XAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int64 op_Explicit(class System.Xml.Linq.XAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (attribute As XAttribute) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt64(System::Xml::Linq::XAttribute ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Xml.Linq.XAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="1ac9a-380">
            <see cref="T:System.Xml.Linq.XAttribute" />으로 캐스팅할 <see cref="T:System.UInt64" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-380">The <see cref="T:System.Xml.Linq.XAttribute" /> to cast to <see cref="T:System.UInt64" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-381">이 <see cref="T:System.Xml.Linq.XAttribute" />의 값을 <see cref="T:System.UInt64" />으로 캐스팅합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-381">Cast the value of this <see cref="T:System.Xml.Linq.XAttribute" /> to a <see cref="T:System.UInt64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-382">이 <see cref="T:System.UInt64" />의 콘텐츠가 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-382">A <see cref="T:System.UInt64" /> that contains the content of this <see cref="T:System.Xml.Linq.XAttribute" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[## Examples  
 <span data-ttu-id="1ac9a-383">다음 예제에서는 부호 없는 정수 (long) 콘텐츠로 특성을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-383">The following example creates an attribute with unsigned long integer content.</span></span> <span data-ttu-id="1ac9a-384">로 캐스팅 하 여 값을 검색 한 다음 <xref:System.UInt64>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-384">It then retrieves the value by casting to <xref:System.UInt64>.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", 1844674407370955161)  
);  
ulong value = (ulong)root.Attribute("Att");  
Console.WriteLine("value={0}", value);  
```  
  
```vb  
Dim root As XElement = <Root Att="1844674407370955161"/>  
Dim value As ULong = CULng(root.Attribute("Att"))  
Console.WriteLine("value={0}", value)  
```  
  
 <span data-ttu-id="1ac9a-385">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-385">This example produces the following output:</span></span>  
  
```  
value=1844674407370955161  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1ac9a-386">특성에 유효한 <see cref="T:System.UInt64" /> 값이 들어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-386">The attribute does not contain a valid <see cref="T:System.UInt64" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ac9a-387">
            <paramref name="attribute" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-387">The <paramref name="attribute" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}" />
      </Docs>
    </Member>
    <Member MemberName="PreviousAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Linq.XAttribute PreviousAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Linq.XAttribute PreviousAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.PreviousAttribute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousAttribute As XAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Linq::XAttribute ^ PreviousAttribute { System::Xml::Linq::XAttribute ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ac9a-388">부모 요소의 이전 특성을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-388">Gets the previous attribute of the parent element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ac9a-389">부모 요소의 이전 특성이 들어 있는 <see cref="T:System.Xml.Linq.XAttribute" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-389">An <see cref="T:System.Xml.Linq.XAttribute" /> containing the previous attribute of the parent element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac9a-390">특성은 XML 트리의 요소에 추가 된 순서 대로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-390">Attributes are maintained in the XML tree in the order that they were added to the element.</span></span> <span data-ttu-id="1ac9a-391">특성의 컬렉션으로 반환 될 때 <xref:System.Xml.Linq.XElement.Attributes%2A>, 정렬 되지 않고 추가 된 순서 대로 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-391">When a collection of attributes is returned by <xref:System.Xml.Linq.XElement.Attributes%2A>, they are returned in the order that they were added, and are not sorted.</span></span> <span data-ttu-id="1ac9a-392">이 속성을 통해 이전 특성을 요청 하는 경우이 특성 앞에 추가 된 특성이 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-392">When you request the previous attribute through this property, this property returns the attribute that was added before this attribute.</span></span>  
  
 <span data-ttu-id="1ac9a-393">이 특성에는 부모 없는 또는 첫 번째 특성이이 특성을 사용 하는 경우 다음이 속성이 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-393">If this attribute does not have a parent, or if this attribute is the first attribute, then this property returns `null`.</span></span>  
  
 <span data-ttu-id="1ac9a-394"><xref:System.Xml.Linq.XElement> 클래스는 해당 특성의 단일 연결 목록을 저장 <xref:System.Xml.Linq.XAttribute> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-394">The <xref:System.Xml.Linq.XElement> class stores its attributes as a singly-linked list of <xref:System.Xml.Linq.XAttribute> objects.</span></span> <span data-ttu-id="1ac9a-395">즉는 <xref:System.Xml.Linq.XAttribute.PreviousAttribute%2A> 속성 요소에 속하는 특성의 목록을 통과 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-395">This means that the <xref:System.Xml.Linq.XAttribute.PreviousAttribute%2A> property must traverse the list of attributes that belong to the element.</span></span> <span data-ttu-id="1ac9a-396">따라서이 속성을 사용 하면 성능이 저하 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-396">Therefore, using this property might affect your performance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ac9a-397">다음 예제에서는이 속성을 사용 하는 요소의 특성을 반복 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-397">The following example shows how to iterate through the attributes of an element using this property.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XAttribute("Att3", 3),  
    new XAttribute("Att4", 4)  
);  
XAttribute att = root.LastAttribute;  
do {  
    Console.WriteLine(att);  
}  
while((att = att.PreviousAttribute) != null);  
```  
  
```vb  
Dim root As XElement = <Root Att1="1" Att2="2" Att3="3" Att4="4"/>  
Dim att As XAttribute = root.LastAttribute  
Dim val As Boolean = True  
Do  
    Console.WriteLine(att)  
    att = att.PreviousAttribute  
Loop While (Not (att Is Nothing))  
```  
  
 <span data-ttu-id="1ac9a-398">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-398">This example produces the following output:</span></span>  
  
```  
Att4="4"  
Att3="3"  
Att2="2"  
Att1="1"  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XAttribute.NextAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ac9a-399">부모 요소에서 이 특성을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-399">Removes this attribute from its parent element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac9a-400">XML 트리를 수정 하려면이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-400">You can use this method to modify an XML tree.</span></span> <span data-ttu-id="1ac9a-401">이 메서드는 이벤트를 발생 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-401">This method will cause events to occur.</span></span>  
  
 <span data-ttu-id="1ac9a-402">특성의 집합을 제거 해야는 많은 시나리오가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-402">There are many scenarios in which you might want to remove a set of attributes.</span></span> <span data-ttu-id="1ac9a-403">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] 를 프로그래밍 하거나 하면 안 조작를 쿼리하면 해당 집합의 노드에 대 한 노드 집합을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-403">In [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] programming, you should not manipulate or modify a set of nodes while you are querying for nodes in that set.</span></span> <span data-ttu-id="1ac9a-404">실제로이 의미 해야 하지 특성의 집합에 대해 반복 해 서 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-404">In practical terms, this means that you should not iterate over a set of attributes and remove them.</span></span> <span data-ttu-id="1ac9a-405">대신, 구체화 해야에 <xref:System.Collections.Generic.List%601> 를 사용 하는 <xref:System.Linq.Enumerable.ToList%2A> 확장 메서드.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-405">Instead, you should materialize them into a <xref:System.Collections.Generic.List%601> using the <xref:System.Linq.Enumerable.ToList%2A> extension method.</span></span> <span data-ttu-id="1ac9a-406">그런 다음 반복할 수 있습니다 목록에서 특성을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-406">Then you can iterate over the list, removing the attributes.</span></span> <span data-ttu-id="1ac9a-407">자세한 내용은 참조 [혼합 된 선언적 코드/명령적 코드 버그 (LINQ to XML)](http://msdn.microsoft.com/library/d9a5c404-2b0e-46cd-a358-0e78773b3094)합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-407">For more information, see [Mixed Declarative Code/Imperative Code Bugs (LINQ to XML)](http://msdn.microsoft.com/library/d9a5c404-2b0e-46cd-a358-0e78773b3094).</span></span>  
  
 <span data-ttu-id="1ac9a-408">또는 특성의 집합을 제거 하려는 경우 것이 좋습니다를 사용 하 여 <xref:System.Xml.Linq.Extensions.Remove%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-408">Alternatively, if you want to remove a set of attributes, it is recommended that you use the <xref:System.Xml.Linq.Extensions.Remove%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1ac9a-409">이 메서드는 목록에 특성을 복사한 다음 특성을 제거 하 고 목록에 대해 반복 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-409">This method copies the attributes to a list, then iterates over the list, removing the attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ac9a-410">다음 예제에서는 세 개의 특성이 있는 요소를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-410">The following example creates an element with three attributes.</span></span> <span data-ttu-id="1ac9a-411">다음 특성 중 하나를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-411">It then removes one of the attributes.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", "content1"),  
    new XAttribute("Att2", "content2"),  
    new XAttribute("Att3", "content3")  
);  
XAttribute att = root.Attribute("Att2");  
att.Remove();  
Console.WriteLine(root);  
```  
  
```vb  
Dim root As XElement = <Root Att1="content1" Att2="content2" Att3="content3"/>  
Dim att As XAttribute = root.Attribute("Att2")  
att.Remove()  
Console.WriteLine(root)  
```  
  
 <span data-ttu-id="1ac9a-412">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-412">This example produces the following output:</span></span>  
  
```  
<Root Att1="content1" Att3="content3" />  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1ac9a-413">부모 요소가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-413">The parent element is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.SetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1ac9a-414">이 특성에 할당할 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-414">The value to assign to this attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac9a-415">이 특성의 값을 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-415">Sets the value of this attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac9a-416">값은 문자열 표현으로 변환되어 특성의 <xref:System.Xml.Linq.XAttribute.Value%2A> 속성에 할당됩니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-416">The value is converted to its string representation and assigned to the <xref:System.Xml.Linq.XAttribute.Value%2A> property.</span></span>  
  
 <span data-ttu-id="1ac9a-417">파생 되는 클래스의 인스턴스를 전달 올바르지 <xref:System.Xml.Linq.XObject>와 같은 <xref:System.Xml.Linq.XElement> 또는 <xref:System.Xml.Linq.XAttribute>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-417">It is invalid to pass an instance of a class that derives from <xref:System.Xml.Linq.XObject>, such as <xref:System.Xml.Linq.XElement> or <xref:System.Xml.Linq.XAttribute>.</span></span>  
  
 <span data-ttu-id="1ac9a-418">이 메서드로 인해 발생는 <xref:System.Xml.Linq.XObject.Changed> 및 <xref:System.Xml.Linq.XObject.Changing> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-418">This method will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ac9a-419">다음 예제에서는 여러 특성이 있는 요소를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-419">The following example creates an element with several attributes.</span></span> <span data-ttu-id="1ac9a-420">그런 다음 특성 중 하나의 내용을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-420">It then changes the contents of one of the attributes.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", "content1"),  
    new XAttribute("Att2", "content2"),  
    new XAttribute("Att3", "content3")  
);  
XAttribute att = root.Attribute("Att2");  
att.SetValue("new content");  
Console.WriteLine(root);  
```  
  
```vb  
Dim root As XElement = <Root Att1="content1" Att2="content2" Att3="content3"/>  
Dim att As XAttribute = root.Attribute("Att2")  
att.SetValue("new content")  
Console.WriteLine(root)  
```  
  
 <span data-ttu-id="1ac9a-421">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-421">This example produces the following output:</span></span>  
  
```  
<Root Att1="content1" Att2="new content" Att3="content3" />  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ac9a-422">
            <paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-422">The <paramref name="value" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1ac9a-423">
            <paramref name="value" />가 <see cref="T:System.Xml.Linq.XObject" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-423">The <paramref name="value" /> is an <see cref="T:System.Xml.Linq.XObject" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XElement.SetValue(System.Object)" />
        <altmember cref="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)" />
        <altmember cref="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XAttribute.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ac9a-424">현재 <see cref="T:System.Xml.Linq.XAttribute" /> 개체를 문자열 표현으로 변환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-424">Converts the current <see cref="T:System.Xml.Linq.XAttribute" /> object to a string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac9a-425">특성 및 해당 값의 XML 텍스트 표현이 들어 있는 <see cref="T:System.String" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-425">A <see cref="T:System.String" /> containing the XML text representation of an attribute and its value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac9a-426">이 메서드는 문자열의 형태로 반환 `AttributeName="content"`합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-426">This method returns a string in the form of `AttributeName="content"`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="1ac9a-427">이 메서드가 호출 될 때 및 <xref:System.Xml.Linq.XAttribute> 컨트롤이 포함 된 문자를 같은 메시지를 사용 하면 예외가 throw 됩니다: 0x0B, 16 진수 값은 잘못 된 문자입니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-427">When this method is called and <xref:System.Xml.Linq.XAttribute> contains control character, an exception is thrown with a message like: hexadecimal value 0x0B, is an invalid character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ac9a-428">다음 예제에서는 여러 특성이 있는 요소를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-428">The following example creates an element with several attributes.</span></span> <span data-ttu-id="1ac9a-429">다음 특성 가져오고이 메서드를 호출 하 여 특성과 해당 콘텐츠를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-429">It then gets an attribute and displays it and its content by calling this method.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", "content1"),  
    new XAttribute("Att2", "content2"),  
    new XAttribute("Att3", "content3")  
);  
XAttribute att = root.Attribute("Att2");  
Console.WriteLine(att.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att1="content1" Att2="content2" Att3="content3"/>  
Dim att As XAttribute = root.Attribute("Att2")  
Console.WriteLine(att.ToString())  
```  
  
 <span data-ttu-id="1ac9a-430">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-430">This example produces the following output:</span></span>  
  
```  
Att2="content2"  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Linq.XAttribute.Name" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Value" />
        <altmember cref="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XAttribute.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ac9a-431">이 특성의 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-431">Gets or sets the value of this attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ac9a-432">이 특성의 값을 포함하는 <see cref="T:System.String" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-432">A <see cref="T:System.String" /> containing the value of this attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac9a-433">이 속성을 사용 하 여 특성의 값을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-433">You can use this property to get or set the value of an attribute.</span></span>  
  
 <span data-ttu-id="1ac9a-434">이 속성에서 발생 하는 설정의 <xref:System.Xml.Linq.XObject.Changed> 및 <xref:System.Xml.Linq.XObject.Changing> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-434">Setting this property will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.</span></span>  
  
 <span data-ttu-id="1ac9a-435">명시적 변환 연산자를 사용 하 고와 같은 특성을 nullable 형식에 할당 하는 값을 가져오는 것 특성 존재 하지 않을 경우 `string` 또는 <xref:System.Nullable%601> 의 <xref:System.Int32>합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-435">If you are getting the value and the attribute might not exist, it is more convenient to use the explicit conversion operators, and assign the attribute to a nullable type such as `string` or <xref:System.Nullable%601> of <xref:System.Int32>.</span></span> <span data-ttu-id="1ac9a-436">Nullable 형식으로 설정 되어 있으면 특성 존재 하지 않는 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-436">If the attribute does not exist, then the nullable type is set to `null`.</span></span> <span data-ttu-id="1ac9a-437">이 속성을 사용 하기 전에 확인 해야 하는 <xref:System.Xml.Linq.XElement.Attribute%2A> 메서드 반환 하지 않습니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-437">Before using this property, you must make sure that the <xref:System.Xml.Linq.XElement.Attribute%2A> method does not return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ac9a-438">다음 예제에서는 특성을 가진 요소를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-438">The following example creates an element with an attribute.</span></span> <span data-ttu-id="1ac9a-439">다음 특성의 값을 검색 하 고 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-439">It then retrieves the value of the attribute, and then sets it.</span></span>  
  
 <span data-ttu-id="1ac9a-440">Visual Basic 예제에서는 XML 특성 속성을 사용 하는 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-440">Note that the Visual Basic example uses the XML attribute property.</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att", "content")  
);  
XAttribute att = root.FirstAttribute;  
Console.WriteLine(att.Value);  
att.Value = "new text";  
Console.WriteLine(att.Value);  
```  
  
```vb  
Dim root As XElement = <Root Att="content"/>  
Console.WriteLine(root.@Att)  
root.@Att = "new text"  
Console.WriteLine(root.@Att)  
```  
  
 <span data-ttu-id="1ac9a-441">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-441">This example produces the following output:</span></span>  
  
```  
content  
new text  
```  
  
 <span data-ttu-id="1ac9a-442">다음 예제에서는 명시적 변환 연산자를 사용 하 여 존재 하지 않을 수 있는 특성의 값을 가져오는의 이점을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-442">The following example shows the benefit of using the explicit conversion operators to get the value of an attribute that might not exist:</span></span>  
  
```csharp  
XElement root = new XElement("Root",  
    new XAttribute("Att1", "attribute 1 content"),  
    new XAttribute("Att2", "2")  
);  
  
// The following assignments demonstrate why it is easier to use  
// casting when the attribute might or might not exist.  
  
string c1 = (string)root.Attribute("Att1");  
Console.WriteLine("c1:{0}", c1 == null ? "attribute does not exist" : c1);  
  
int? c2 = (int?)root.Attribute("Att2");  
Console.WriteLine("c2:{0}", c2 == null ? "attribute does not exist" : c2.ToString());  
  
string c3 = (string)root.Attribute("Att3");  
Console.WriteLine("c3:{0}", c3 == null ? "attribute does not exist" : c3);  
  
int? c4 = (int?)root.Attribute("Att4");  
Console.WriteLine("c4:{0}", c4 == null ? "attribute does not exist" : c4.ToString());  
  
Console.WriteLine();  
  
// The following assignments show the necessary code when using  
// the value property when the attribute might or might not exist.  
  
XAttribute att1 = root.Attribute("Att1");  
string v1;  
if (att1 == null)  
    v1 = null;  
else  
    v1 = att1.Value;  
Console.WriteLine("v1:{0}", v1 == null ? "attribute does not exist" : v1);  
  
XAttribute att2 = root.Attribute("Att2");  
int? v2;  
if (att2 == null)  
    v2 = null;  
else  
    v2 = Int32.Parse(att2.Value);  
Console.WriteLine("v2:{0}", v2 == null ? "attribute does not exist" : v2.ToString());  
  
XAttribute att3 = root.Attribute("Att3");  
string v3;  
if (att3 == null)  
    v3 = null;  
else  
    v3 = att3.Value;  
Console.WriteLine("v3:{0}", v3 == null ? "attribute does not exist" : v3);  
  
XAttribute att4 = root.Attribute("Att4");  
int? v4;  
if (att4 == null)  
    v4 = null;  
else  
    v4 = Int32.Parse(att4.Value);  
Console.WriteLine("v4:{0}", v4 == null ? "attribute does not exist" : v4.ToString());  
```  
  
```vb  
Dim root As XElement = <Root Att1="attribute 1 content" Att2="2"/>  
  
' The following assignments demonstrate why it is easier to use  
' casting when the attribute might or might not exist.  
  
Dim c1 As String = CStr(root.Attribute("Att1"))  
Console.WriteLine("c1:{0}", IIf(c1 Is Nothing, "attribute does not exist", c1))  
  
Dim c2 As Nullable(Of Integer) = CType(root.Attribute("Att2"), Nullable(Of Integer))  
Console.WriteLine("c2:{0}", IIf(c2.HasValue, c2, "attribute does not exist"))  
  
Dim c3 As String = CStr(root.Attribute("Att3"))  
Console.WriteLine("c3:{0}", IIf(c3 Is Nothing, "attribute does not exist", c3))  
  
Dim c4 As Nullable(Of Integer) = CType(root.Attribute("Att4"), Nullable(Of Integer))  
Console.WriteLine("c4:{0}", IIf(c4.HasValue, c4, "attribute does not exist"))  
  
Console.WriteLine()  
  
' The following assignments show the necessary code when using  
' the value property when the attribute might or might not exist.  
  
Dim att1 As XAttribute = root.Attribute("Att1")  
Dim v1 As String  
If att1 Is Nothing Then  
    v1 = Nothing  
Else  
    v1 = att1.Value  
End If  
  
Console.WriteLine("v1:{0}", IIf(v1 Is Nothing, "attribute does not exist", v1))  
  
Dim att2 As XAttribute = root.Attribute("Att2")  
Dim v2 As Nullable(Of Integer)  
If att2 Is Nothing Then  
    v2 = Nothing  
Else  
    v2 = Int32.Parse(att2.Value)  
End If  
  
Console.WriteLine("v2:{0}", IIf(v2.HasValue, v2, "attribute does not exist"))  
  
Dim att3 As XAttribute = root.Attribute("Att3")  
Dim v3 As String  
If att3 Is Nothing Then  
    v3 = Nothing  
Else  
    v3 = att3.Value  
End If  
  
Console.WriteLine("v3:{0}", IIf(v3 Is Nothing, "attribute does not exist", v3))  
  
Dim att4 As XAttribute = root.Attribute("Att4")  
Dim v4 As Nullable(Of Integer)  
If att4 Is Nothing Then  
    v4 = Nothing  
Else  
    v4 = Int32.Parse(att4.Value)  
End If  
  
Console.WriteLine("v4:{0}", IIf(v4.HasValue, v4, "attribute does not exist"))  
```  
  
 <span data-ttu-id="1ac9a-443">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="1ac9a-443">This example produces the following output:</span></span>  
  
```  
c1:attribute 1 content  
c2:2  
c3:attribute does not exist  
c4:attribute does not exist  
  
v1:attribute 1 content  
v2:2  
v3:attribute does not exist  
v4:attribute does not exist  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1ac9a-444">설정할 때 <paramref name="value" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac9a-444">When setting, the <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.Linq.XAttribute.SetValue(System.Object)" />
        <altmember cref="P:System.Xml.Linq.XAttribute.Name" />
        <altmember cref="M:System.Xml.Linq.XAttribute.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>