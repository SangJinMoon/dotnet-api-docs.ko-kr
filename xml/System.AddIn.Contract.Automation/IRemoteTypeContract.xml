<Type Name="IRemoteTypeContract" FullName="System.AddIn.Contract.Automation.IRemoteTypeContract">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9f0c63f8af975d956ff2ab310321919ff986542e" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52196830" /></Metadata><TypeSignature Language="C#" Value="public interface IRemoteTypeContract : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemoteTypeContract implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRemoteTypeContract&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRemoteTypeContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IRemoteTypeContract = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f3e8a-101">구성 요소 형식 정보에 액세스 하 고 응용 프로그램 도메인 및 프로세스 경계를 넘어 멤버를 호출 하는 데 사용할 수 있는 계약을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-101">Defines a contract that components can use to access type information and invoke members across application domain and process boundaries.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e8a-102">가져올는 <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>, 구성 요소를 호출할 수는 <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> 구현 하는 개체의 메서드를 <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> 인터페이스.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-102">To get an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>, components can call the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method of an object that implements the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> interface.</span></span>  
  
 <span data-ttu-id="f3e8a-103">개체의 형식에 대 한 정보를 가져오려면 구성 요소 호출을 <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-103">To get information about the type of an object, components call the <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A> method.</span></span>  
  
 <span data-ttu-id="f3e8a-104">개체의 멤버에 대 한 정보를 가져오려면 구성 요소는 특정 유형의 멤버에 대 한 정보를 반환 하는 방법 중 하나를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-104">To get information about the members of an object, components call one of the methods that returns information about a particular kind of member.</span></span> <span data-ttu-id="f3e8a-105">예를 들어 개체의 이벤트에 대 한 정보를 가져오려면 구성 요소가 사용할 수는 <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A> 또는 <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-105">For example, to get information about the events of an object, components can use the <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A> or <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A> method.</span></span>  
  
 <span data-ttu-id="f3e8a-106">개체의 멤버를 호출 하려면 구성 요소를 사용 합니다 <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-106">To invoke a member of an object, components use the <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCanonicalName">
      <MemberSignature Language="C#" Value="public string GetCanonicalName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCanonicalName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCanonicalName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCanonicalName();" />
      <MemberSignature Language="F#" Value="abstract member GetCanonicalName : unit -&gt; string" Usage="iRemoteTypeContract.GetCanonicalName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3e8a-107">현재 정식 이름을 반환 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-107">Returns the canonical name of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="f3e8a-108">현재의 정식 이름 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-108">The canonical name of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e8a-109">정식 이름은 전역적으로 고유한 이름을 정규화 된 형식 이름과 같은 경우</span><span class="sxs-lookup"><span data-stu-id="f3e8a-109">The canonical name is a globally unique name, such as a fully qualified type name.</span></span> <span data-ttu-id="f3e8a-110">형식에서 문자열 \< *어셈블리 이름*>를 \< *정규화 된 형식 이름을*>는 관리 되는 형식에 대 한 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-110">Strings in the format \<*assembly name*>, \<*fully qualified type name*> are recommended for managed types.</span></span> <span data-ttu-id="f3e8a-111">형식에서 문자열 \< *형식 라이브러리 이름*>를 \< *형식 이름*>는 COM 형식에 대 한 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-111">Strings in the format \<*type library name*>, \<*type name*> are recommended for COM types.</span></span>  
  
 <span data-ttu-id="f3e8a-112">형식이 게시 된 후에 유형에 대 한 정식 이름을 변경 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-112">Do not change the canonical name for a type after the type is published.</span></span> <span data-ttu-id="f3e8a-113">구성 요소와 이미 종류를 사용 하는 클라이언트 구성 요소 나누기 호환성의 이후 버전의 형식에 대 한 정식 이름을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-113">Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteEventInfoContract GetEvent (string name, System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteEventInfoContract GetEvent(string name, valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteEventInfoContract ^ GetEvent(System::String ^ name, System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetEvent : string * System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Automation.IRemoteEventInfoContract" Usage="iRemoteTypeContract.GetEvent (name, bindingFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteEventInfoContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f3e8a-114">현재 이벤트의 이름을 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-114">The name of an event of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></param>
        <param name="bindingFlags"><span data-ttu-id="f3e8a-115">비트 조합 된 <see cref="T:System.Reflection.BindingFlags" /> 이벤트에 대 한 검색 하는 방법을 지정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-115">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the event.</span></span></param>
        <summary><span data-ttu-id="f3e8a-116">반환 된 <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> 현재 지정된 된 이벤트에 대 한 액세스를 제공 하는 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-116">Returns an <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> that provides access to a specified event of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="f3e8a-117"><see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> 이 고, 그렇지 않으면 하는 경우, 지정된 된 이벤트에 대 한 액세스를 제공 하는 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-117">An <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> that provides access to the specified event, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteEventInfoContract&gt; GetEvents (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteEventInfoContract&gt; GetEvents(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteEventInfoContract ^&gt; ^ GetEvents(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetEvents : System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteEventInfoContract&gt;" Usage="iRemoteTypeContract.GetEvents bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteEventInfoContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags"><span data-ttu-id="f3e8a-118">비트 조합 된 <see cref="T:System.Reflection.BindingFlags" /> 이벤트를 검색 하는 방법을 지정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-118">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the events.</span></span></param>
        <summary><span data-ttu-id="f3e8a-119">컬렉션을 반환 <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> 개체의 현재 지정된 된 이벤트에 대 한 액세스를 제공 하는 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-119">Returns a collection of <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> objects that provides access to the specified events of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="f3e8a-120"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> 의 <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> 지정 된 바인딩 제약 조건에 일치 하는 이벤트에 대 한 액세스를 제공 하는 개체가 고, 그렇지 빈 <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-120">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> objects that provides access to the events that match the specified binding constraints; otherwise, an empty <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteFieldInfoContract GetField (string name, System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteFieldInfoContract GetField(string name, valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteFieldInfoContract ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string * System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Automation.IRemoteFieldInfoContract" Usage="iRemoteTypeContract.GetField (name, bindingFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteFieldInfoContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f3e8a-121">현재 필드의 이름을 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-121">The name of a field of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></param>
        <param name="bindingFlags"><span data-ttu-id="f3e8a-122">비트 조합 된 <see cref="T:System.Reflection.BindingFlags" /> 필드에 대 한 검색 하는 방법을 지정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-122">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the field.</span></span></param>
        <summary><span data-ttu-id="f3e8a-123">반환 된 <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> 현재 지정된 된 필드에 대 한 액세스를 제공 하는 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-123">Returns an <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> that provides access to a specified field of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="f3e8a-124"><see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> 이 고, 그렇지 않으면 하는 경우 지정된 된 필드에 대 한 액세스를 제공 하는 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-124">An <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> that provides access to the specified field, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&gt; GetFields (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteFieldInfoContract&gt; GetFields(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteFieldInfoContract ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetFields : System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&gt;" Usage="iRemoteTypeContract.GetFields bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags"><span data-ttu-id="f3e8a-125">비트 조합 된 <see cref="T:System.Reflection.BindingFlags" /> 필드를 검색 하는 방법을 지정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-125">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the fields.</span></span></param>
        <summary><span data-ttu-id="f3e8a-126">컬렉션을 반환 <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> 개체의 현재 지정된 된 필드에 대 한 액세스를 제공 하는 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-126">Returns a collection of <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> objects that provides access to the specified fields of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="f3e8a-127"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> 의 <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> 지정 된 바인딩 제약 조건에 일치 하는 필드에 대 한 액세스를 제공 하는 개체가 고, 그렇지 빈 <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-127">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> objects that provides access to the fields that match the specified binding constraints; otherwise, an empty <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterface">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteTypeContract GetInterface (string canonicalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteTypeContract GetInterface(string canonicalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterface (canonicalName As String) As IRemoteTypeContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteTypeContract ^ GetInterface(System::String ^ canonicalName);" />
      <MemberSignature Language="F#" Value="abstract member GetInterface : string -&gt; System.AddIn.Contract.Automation.IRemoteTypeContract" Usage="iRemoteTypeContract.GetInterface canonicalName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteTypeContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canonicalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="canonicalName"><span data-ttu-id="f3e8a-128">현재 구현 된 인터페이스의 정식 이름 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-128">The canonical name of an interface that is implemented by the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></param>
        <summary><span data-ttu-id="f3e8a-129">현재 구현 된 인터페이스를 반환 합니다 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-129">Returns an interface that is implemented by the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="f3e8a-130"><see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 나타내는 인터페이스를 지정 된 정식 이름을 지정 하는이 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-130">An <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> that represents the interface with the specified canonical name that this <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> implements.</span></span> <span data-ttu-id="f3e8a-131"><see langword="null" /> 이 경우 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 지정 된 정식 이름의 인터페이스를 구현 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-131"><see langword="null" /> if this <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> does not implement an interface with the specified canonical name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e8a-132">정식 이름은 전역적으로 고유한 이름을 GUID와 같은 경우</span><span class="sxs-lookup"><span data-stu-id="f3e8a-132">A canonical name is a globally unique name, such as a GUID.</span></span> <span data-ttu-id="f3e8a-133">형식에서 문자열 \< *어셈블리 이름*>를 \< *정규화 된 형식 이름을*>는 관리 되는 형식에 대 한 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-133">Strings in the format \<*assembly name*>, \<*fully qualified type name*> are recommended for managed types.</span></span> <span data-ttu-id="f3e8a-134">형식에서 문자열 \< *형식 라이브러리 이름*>를 \< *형식 이름*>는 COM 형식에 대 한 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-134">Strings in the format \<*type library name*>, \<*type name*> are recommended for COM types.</span></span>  
  
 <span data-ttu-id="f3e8a-135">형식이 게시 된 후에 유형에 대 한 정식 이름을 변경 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-135">Do not change the canonical name for a type after the type is published.</span></span> <span data-ttu-id="f3e8a-136">구성 요소와 이미 종류를 사용 하는 클라이언트 구성 요소 나누기 호환성의 이후 버전의 형식에 대 한 정식 이름을 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-136">Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterfaces">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; GetInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteTypeContract&gt; GetInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterfaces () As IArrayContract(Of IRemoteTypeContract)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteTypeContract ^&gt; ^ GetInterfaces();" />
      <MemberSignature Language="F#" Value="abstract member GetInterfaces : unit -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt;" Usage="iRemoteTypeContract.GetInterfaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3e8a-137">현재 구현 되는 인터페이스를 반환 합니다. <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-137">Returns the interfaces that are implemented by the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="f3e8a-138"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> 의 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 현재 구현 되는 모든 인터페이스를 나타내는 개체를 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-138">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> objects that represent all the interfaces that are implemented by the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt; GetMember (string name, System.Reflection.MemberTypes memberTypes, System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.IContract&gt; GetMember(string name, valuetype System.Reflection.MemberTypes memberTypes, valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::IContract ^&gt; ^ GetMember(System::String ^ name, System::Reflection::MemberTypes memberTypes, System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetMember : string * System.Reflection.MemberTypes * System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt;" Usage="iRemoteTypeContract.GetMember (name, memberTypes, bindingFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="memberTypes" Type="System.Reflection.MemberTypes" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f3e8a-139">현재 멤버의 이름을 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-139">The name of a member of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span> <span data-ttu-id="f3e8a-140">이름이 동일한 이름을 가진 여러 멤버를 나타낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-140">The name can represent multiple members that have the same name.</span></span></param>
        <param name="memberTypes"><span data-ttu-id="f3e8a-141">비트 조합 된 <see cref="T:System.Reflection.MemberTypes" /> 검색할 멤버를 지정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-141">A bitwise combination of the <see cref="T:System.Reflection.MemberTypes" /> values that specifies the members to search for.</span></span></param>
        <param name="bindingFlags"><span data-ttu-id="f3e8a-142">비트 조합 된 <see cref="T:System.Reflection.BindingFlags" /> 멤버를 검색 하는 방법을 지정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-142">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the members.</span></span></param>
        <summary><span data-ttu-id="f3e8a-143">컬렉션을 반환 <see cref="T:System.AddIn.Contract.IContract" /> 현재에서 지정 된 멤버 형식의 지정 된 모든 멤버에 대 한 액세스를 제공 하는 개체 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />, 지정 된 바인딩 제약 조건을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-143">Returns a collection of <see cref="T:System.AddIn.Contract.IContract" /> objects that provides access to all the specified members of the specified member type in the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />, using the specified binding constraints.</span></span></summary>
        <returns><span data-ttu-id="f3e8a-144"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> 의 <see cref="T:System.AddIn.Contract.IContract" /> 의 현재 멤버를 나타내는 개체입니다 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 지정한 이름이 있고 지정 된 조건에 맞지 않는 합니다 <paramref name="memberTypes" /> 및 <paramref name="bindingFlags" /> 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-144">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.IContract" /> objects that represent the members of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> that have the specified name and that meet the criteria specified by the <paramref name="memberTypes" /> and <paramref name="bindingFlags" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e8a-145">이 메서드는 단일 멤버인 받거나, 생성자 또는 메서드의 오버 로드와 같은 동일한 이름을 가진 여러 멤버를 가져오기 위한 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-145">This method can be used to get a single member, or to get multiple members that have the same name, such as constructor or method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt; GetMembers (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.IContract&gt; GetMembers(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::IContract ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetMembers : System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt;" Usage="iRemoteTypeContract.GetMembers bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags"><span data-ttu-id="f3e8a-146">비트 조합 된 <see cref="T:System.Reflection.BindingFlags" /> 멤버를 검색 하는 방법을 지정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-146">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the members.</span></span></param>
        <summary><span data-ttu-id="f3e8a-147">컬렉션을 반환 <see cref="T:System.AddIn.Contract.IContract" /> 현재에서 모든 멤버에 대 한 액세스를 제공 하는 개체 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 지정 된 바인딩 제약 조건과 일치 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-147">Returns a collection of <see cref="T:System.AddIn.Contract.IContract" /> objects that provides access to all the members in the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> that match the specified binding constraints.</span></span></summary>
        <returns><span data-ttu-id="f3e8a-148"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> 의 <see cref="T:System.AddIn.Contract.IContract" /> 개체의 현재 멤버에 대 한 액세스를 제공 하는 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 지정 된 바인딩 제약 조건을 충족 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-148">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.IContract" /> objects that provides access to the members of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> that meet the specified binding constraints.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteMethodInfoContract GetMethod (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; remoteTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteMethodInfoContract GetMethod(string name, valuetype System.Reflection.BindingFlags bindingFlags, class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteTypeContract&gt; remoteTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteMethodInfoContract ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingFlags, System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteTypeContract ^&gt; ^ remoteTypes);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags * System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; -&gt; System.AddIn.Contract.Automation.IRemoteMethodInfoContract" Usage="iRemoteTypeContract.GetMethod (name, bindingFlags, remoteTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteMethodInfoContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        <Parameter Name="remoteTypes" Type="System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt;" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f3e8a-149">현재 메서드의 이름을 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-149">The name of a method of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></param>
        <param name="bindingFlags"><span data-ttu-id="f3e8a-150">비트 조합 된 <see cref="T:System.Reflection.BindingFlags" /> 메서드에 대 한 검색 하는 방법을 지정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-150">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the method.</span></span></param>
        <param name="remoteTypes"><span data-ttu-id="f3e8a-151"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> 의 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 가져올 수, 순서 및 메서드에 대 한 매개 변수의 형식을 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-151">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> objects that represent the number, order, and type of the parameters for the method to get.</span></span></param>
        <summary><span data-ttu-id="f3e8a-152">반환 된 <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> 현재에 지정된 된 방법에 대 한 액세스를 제공 하는 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-152">Returns an <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> that provides access to a specified method of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="f3e8a-153"><see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> , 그렇지 않으면 지정 된 메서드에 대 한 액세스를 제공 하는 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-153">An <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> that provides access to the specified method, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&gt; GetMethods (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteMethodInfoContract&gt; GetMethods(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteMethodInfoContract ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetMethods : System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&gt;" Usage="iRemoteTypeContract.GetMethods bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags"><span data-ttu-id="f3e8a-154">비트 조합 된 <see cref="T:System.Reflection.BindingFlags" /> 메서드에 대 한 검색 하는 방법을 지정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-154">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the methods.</span></span></param>
        <summary><span data-ttu-id="f3e8a-155">컬렉션을 반환 <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> 현재 지정 된 메서드에 대 한 액세스를 제공 하는 개체 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-155">Returns a collection of <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> objects that provides access to the specified methods of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="f3e8a-156"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> 의 <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> 지정 된 바인딩 제약 조건과 일치 하는 방법에 대 한 액세스를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-156">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> objects that provides access to the methods that match the specified binding constraints.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&gt; GetProperties (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemotePropertyInfoContract&gt; GetProperties(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemotePropertyInfoContract ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Reflection.BindingFlags -&gt; System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&gt;" Usage="iRemoteTypeContract.GetProperties bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags"><span data-ttu-id="f3e8a-157">비트 조합 된 <see cref="T:System.Reflection.BindingFlags" /> 속성을 검색 하는 방법을 지정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-157">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the properties.</span></span></param>
        <summary><span data-ttu-id="f3e8a-158">컬렉션을 반환 <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> 현재 지정된 된 속성에 대 한 액세스를 제공 하는 개체 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-158">Returns a collection of <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> objects that provides access to the specified properties of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="f3e8a-159"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> 의 <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> 지정 된 바인딩 제약 조건과 일치 하는 속성에 대 한 액세스를 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-159">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> objects that provides access to the properties that match the specified binding constraints.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemotePropertyInfoContract GetProperty (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteTypeContract remoteReturnType, System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; remoteTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemotePropertyInfoContract GetProperty(string name, valuetype System.Reflection.BindingFlags bindingFlags, class System.AddIn.Contract.Automation.IRemoteTypeContract remoteReturnType, class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteTypeContract&gt; remoteTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemotePropertyInfoContract ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingFlags, System::AddIn::Contract::Automation::IRemoteTypeContract ^ remoteReturnType, System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteTypeContract ^&gt; ^ remoteTypes);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags * System.AddIn.Contract.Automation.IRemoteTypeContract * System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; -&gt; System.AddIn.Contract.Automation.IRemotePropertyInfoContract" Usage="iRemoteTypeContract.GetProperty (name, bindingFlags, remoteReturnType, remoteTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemotePropertyInfoContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        <Parameter Name="remoteReturnType" Type="System.AddIn.Contract.Automation.IRemoteTypeContract" />
        <Parameter Name="remoteTypes" Type="System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt;" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f3e8a-160">현재 속성의 이름을 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-160">The name of a property of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></param>
        <param name="bindingFlags"><span data-ttu-id="f3e8a-161">비트 조합 된 <see cref="T:System.Reflection.BindingFlags" /> 메서드에 대 한 검색 하는 방법을 지정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-161">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the method.</span></span></param>
        <param name="remoteReturnType"><span data-ttu-id="f3e8a-162"><see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 속성의 반환 형식을 지정 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-162">An <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> that specifies the return type of the property.</span></span></param>
        <param name="remoteTypes"><span data-ttu-id="f3e8a-163"><see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> 의 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 지정된 된 속성에 대 한 매개 변수를 나타내는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-163">An <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> of <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> objects that represent the parameters for the specified property.</span></span></param>
        <summary><span data-ttu-id="f3e8a-164">반환 된 <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> 현재 지정된 된 속성에 대 한 액세스를 제공 하는 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-164">Returns an <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> that provides access to a specified property of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="f3e8a-165"><see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> 이 고, 그렇지 않으면 하는 경우 지정된 된 속성에 대 한 액세스를 제공 하는 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-165">An <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> that provides access to the specified property, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeData">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.RemoteTypeData GetTypeData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.Automation.RemoteTypeData GetTypeData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeData () As RemoteTypeData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::RemoteTypeData GetTypeData();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeData : unit -&gt; System.AddIn.Contract.Automation.RemoteTypeData" Usage="iRemoteTypeContract.GetTypeData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.RemoteTypeData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f3e8a-166">개체에 대 한 형식 정보를 반환 현재 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-166">Returns type information about the object that the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> identifies.</span></span></summary>
        <returns><span data-ttu-id="f3e8a-167">A <see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /> 개체에 대 한 정보를 포함 하는 현재 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-167">A <see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /> that contains information about the object that the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> identifies.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.RemoteArgument InvokeMember (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteObjectContract target, System.AddIn.Contract.Collections.IRemoteArgumentArrayContract remoteArgs, bool[] remoteArgModifiers, int localeId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.RemoteArgument InvokeMember(string name, valuetype System.Reflection.BindingFlags bindingFlags, class System.AddIn.Contract.Automation.IRemoteObjectContract target, class System.AddIn.Contract.Collections.IRemoteArgumentArrayContract remoteArgs, bool[] remoteArgModifiers, int32 localeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::RemoteArgument InvokeMember(System::String ^ name, System::Reflection::BindingFlags bindingFlags, System::AddIn::Contract::Automation::IRemoteObjectContract ^ target, System::AddIn::Contract::Collections::IRemoteArgumentArrayContract ^ remoteArgs, cli::array &lt;bool&gt; ^ remoteArgModifiers, int localeId);" />
      <MemberSignature Language="F#" Value="abstract member InvokeMember : string * System.Reflection.BindingFlags * System.AddIn.Contract.Automation.IRemoteObjectContract * System.AddIn.Contract.Collections.IRemoteArgumentArrayContract * bool[] * int -&gt; System.AddIn.Contract.RemoteArgument" Usage="iRemoteTypeContract.InvokeMember (name, bindingFlags, target, remoteArgs, remoteArgModifiers, localeId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        <Parameter Name="target" Type="System.AddIn.Contract.Automation.IRemoteObjectContract" />
        <Parameter Name="remoteArgs" Type="System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" />
        <Parameter Name="remoteArgModifiers" Type="System.Boolean[]" />
        <Parameter Name="localeId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f3e8a-168">호출할 멤버의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-168">The name of the member to invoke.</span></span></param>
        <param name="bindingFlags"><span data-ttu-id="f3e8a-169">비트 조합 된 <see cref="T:System.Reflection.BindingFlags" /> 멤버를 검색 하는 방법을 지정 하는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-169">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to search for the member.</span></span></param>
        <param name="target"><span data-ttu-id="f3e8a-170"><see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> 지정된 된 멤버를 호출 하는 데 기반이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-170">The <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> on which to invoke the specified member.</span></span></param>
        <param name="remoteArgs"><span data-ttu-id="f3e8a-171"><see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" /> 호출할 멤버에 전달할 인수를 포함 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-171">An <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" /> that contains the arguments to pass to the member to invoke.</span></span></param>
        <param name="remoteArgModifiers"><span data-ttu-id="f3e8a-172">나타내는 부울 값의 배열을 여부를 각는 <paramref name="remoteArgs" /> 값 참조로 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-172">An array of Boolean values that indicate whether each of the <paramref name="remoteArgs" /> values is passed by reference.</span></span></param>
        <param name="localeId"><span data-ttu-id="f3e8a-173">호출 되는 멤버에서 수행할 수 있는 로캘별 변환에 사용할 로캘 ID입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-173">A locale ID to use for locale-specific conversions that might be performed by the member being invoked.</span></span></param>
        <summary><span data-ttu-id="f3e8a-174">현재 지정된 된 멤버 호출 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-174">Invokes the specified member of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</span></span></summary>
        <returns><span data-ttu-id="f3e8a-175"><see cref="T:System.AddIn.Contract.RemoteArgument" /> 호출된 된 멤버의 반환 값을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-175">A <see cref="T:System.AddIn.Contract.RemoteArgument" /> that represents the return value of the invoked member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3e8a-176">`remoteArgModifiers` COM.를 사용 하 여 작성 된 구성 요소에 대해서만 매개 변수는 사용</span><span class="sxs-lookup"><span data-stu-id="f3e8a-176">The `remoteArgModifiers` parameter is used only for components that are written using COM.</span></span> <span data-ttu-id="f3e8a-177">각 값을 `remoteArgModifiers` 매개 변수를 나타냅니다 여부의 해당 값을 `remoteArgs` 매개 변수는 참조로 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-177">Each value in the `remoteArgModifiers` parameter indicates whether the corresponding value in the `remoteArgs` parameter is passed by reference.</span></span> <span data-ttu-id="f3e8a-178">길이가 `remoteArgModifiers` 의 길이와 동일 해야 `remoteArgs`합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-178">The length of `remoteArgModifiers` should be the same as the length of `remoteArgs`.</span></span>  
  
 <span data-ttu-id="f3e8a-179">전달 하는 경우 `null` 에 대 한 `remoteArgModifiers`,이 메서드는 참조로 인수 전달 되는지 여부를 확인 하려면 기본 논리를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3e8a-179">If you pass `null` for `remoteArgModifiers`, this method uses default logic to determine whether an argument is passed by reference.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>