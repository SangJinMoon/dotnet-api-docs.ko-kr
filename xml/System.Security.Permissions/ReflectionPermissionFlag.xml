<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ReflectionPermissionFlag.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59ea8a0435690e232ce077bff445bd216d32b3a29.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ea8a0435690e232ce077bff445bd216d32b3a29</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>Specifies the permitted use of the <ph id="ph1">&lt;see cref="N:System.Reflection" /&gt;</ph> and <ph id="ph2">&lt;see cref="N:System.Reflection.Emit" /&gt;</ph> namespaces.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="N:System.Reflection" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="N:System.Reflection.Emit" /&gt;</ph> 네임스페이스에 허용되는 용도를 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>This enumeration is used by the <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermissionAttribute&gt;</ph> classes.</source>
          <target state="translated">이 열거형은에서 사용 된 <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermissionAttribute&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>If no <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> is granted, reflection is allowed on all types and members, but invocation operations are allowed only on visible types and members.</source>
          <target state="translated">하지 않으면 <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> 권한이 부여 되 면 모든 형식 및 멤버에 리플렉션을 사용할 수 있지만 호출 작업이 표시 되는 형식 및 멤버에 대해서만 허용 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>For more information, see <bpt id="p1">[</bpt>Security Considerations for Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>리플렉션의 보안 고려 사항<ept id="p1">](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>Because <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> can provide access to private class members, we recommend that you grant <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> to Internet code only with the RestrictedMemberAccess flag, and not with any other flags.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> 액세스 권한을 제공할 수 전용 클래스 멤버에 게 부여 하는 권장 <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> RestrictedMemberAccess 플래그로 하 고 다른 플래그와 인터넷 코드에 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>The RestrictedMemberAccess flag is introduced in the <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>.</source>
          <target state="translated">에 도입 된 RestrictedMemberAccess 플래그는 <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>To use this flag, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.</source>
          <target state="translated">이 플래그를 사용 하려면 응용 프로그램이 대상 해야는 <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> 이상.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>AllFlags does not include the RestrictedMemberAccess flag.</source>
          <target state="translated">AllFlags는 RestrictedMemberAccess 플래그를 포함 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>To get a mask that includes all flags in this enumeration, you must use the combination of AllFlags with RestrictedMemberAccess.</source>
          <target state="translated">이 열거형의 모든 플래그를 포함 하는 마스크를 가져오려면 RestrictedMemberAccess와 AllFlags 조합의 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>, the ReflectionEmit flag is no longer required to emit code, unless debug symbols are emitted.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>, ReflectionEmit 플래그는 더 이상 코드를 내보내는 않으면 필요가 디버그 기호를 내보냅니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>To use this feature, your application should target the <ph id="ph1">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph> or later.</source>
          <target state="translated">이 기능을 사용 하려면 응용 프로그램이 대상 해야는 <ph id="ph1">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph> 이상.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>Starting with the <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>, the TypeInformation flag is no longer required to reflect on nonpublic types and members; the flag has been marked obsolete.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>, 플래그 되지 않으면 TypeInformation 플래그가 public이 아닌 형식과 멤버에 대해 반영 하기 위해 더 이상 필요 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess&gt;</ph> enumeration to initialize a new instance of the <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess&gt;</ph> class that represents the right to perform restricted member access.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess&gt;</ph> 의 새 인스턴스를 초기화 하는 열거형은 <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess&gt;</ph> 제한 된 멤버 액세스를 수행할 수 있는 권한을 나타내는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>This example is part of a larger example that is provided for the <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.AllFlags&gt;</ph> class.</source>
          <target state="translated">이 예제는 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.AllFlags&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionFlag">
          <source>For an example that shows how to use the RestrictedMemberAccess flag with Internet code, see <bpt id="p1">[</bpt>Walkthrough: Emitting Code in Partial Trust Scenarios<ept id="p1">](~/docs/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios.md)</ept>.</source>
          <target state="translated">인터넷 코드 RestrictedMemberAccess 플래그를 사용 하는 방법을 보여 주는 예제를 보려면 <bpt id="p1">[</bpt>연습: 부분 신뢰 시나리오에서 코드 내보내기<ept id="p1">](~/docs/framework/reflection-and-codedom/walkthrough-emitting-code-in-partial-trust-scenarios.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags">
          <source><ph id="ph1">&lt;see langword="TypeInformation" /&gt;</ph> , <ph id="ph2">&lt;see langword="MemberAccess" /&gt;</ph>, and <ph id="ph3">&lt;see langword="ReflectionEmit" /&gt;</ph> are set.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="TypeInformation" /&gt;</ph>, <ph id="ph2">&lt;see langword="MemberAccess" /&gt;</ph> 및 <ph id="ph3">&lt;see langword="ReflectionEmit" /&gt;</ph>이 설정됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags">
          <source><ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /&gt;</ph> does not include <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /&gt;</ph>는 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" /&gt;</ph>를 포함하지 않습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess">
          <source>Invocation operations on all members are allowed, regardless of grant set.</source>
          <target state="translated">권한 부여 설정에 관계없이 모든 멤버에 대해 호출 작업이 허용됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess">
          <source>If this flag is not set, invocation operations are allowed only on visible members.</source>
          <target state="translated">이 플래그를 설정하지 않으면 볼 수 있는 멤버에 대해서만 호출 작업이 허용됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags">
          <source>Enumeration of types and members is allowed.</source>
          <target state="translated">형식 및 멤버에 대한 열거가 허용됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags">
          <source>Invocation operations are allowed on visible types and members.</source>
          <target state="translated">호출 작업은 볼 수 있는 형식 및 멤버에 대해 허용됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit">
          <source>Emitting debug symbols is allowed.</source>
          <target state="translated">디버그 기호 내보내기가 허용됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit">
          <source>Beginning with the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this flag is no longer required to emit code.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>부터 코드를 내보낼 때 이 플래그가 더 이상 필요하지 않습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess">
          <source>Restricted member access is provided for partially trusted code.</source>
          <target state="translated">부분적으로 신뢰할 수 있는 코드에 대해 제한된 멤버 액세스 권한이 제공됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess">
          <source>Partially trusted code can access nonpublic types and members, but only if the grant set of the partially trusted code includes all permissions in the grant set of the assembly that contains the nonpublic types and members being accessed.</source>
          <target state="translated">액세스하는 public이 아닌 형식 및 멤버를 포함하는 어셈블리에 대한 권한 부여 설정의 모든 권한이 부분적으로 신뢰할 수 있는 코드에 대한 권한 부여 설정에 포함되어 있는 경우에만 부분적으로 신뢰할 수 있는 코드에서 public이 아닌 형식 및 멤버에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess">
          <source>This flag is new in the <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>.</source>
          <target state="translated">이 플래그는 <ph id="ph1">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph>에서 새로 추가되었습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation">
          <source>This flag is obsolete.</source>
          <target state="translated">이 플래그는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation">
          <source>No flags are necessary to enumerate types and members and to examine their metadata.</source>
          <target state="translated">형식과 멤버를 열거하고 해당 메타데이터를 검사하는 데에는 플래그가 필요하지 않습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation">
          <source>Use <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" /&gt;</ph> instead.</source>
          <target state="translated">대신 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" /&gt;</ph>를 사용하세요.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>