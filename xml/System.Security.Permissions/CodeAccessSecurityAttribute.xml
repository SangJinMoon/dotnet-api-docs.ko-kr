<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeAccessSecurityAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac510a6995eca097dcfe6873ce3551c0a9eebd33b32.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">10a6995eca097dcfe6873ce3551c0a9eebd33b32</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Permissions.CodeAccessSecurityAttribute">
          <source>Specifies the base attribute class for code access security.</source>
          <target state="translated">코드 액세스 보안을 위한 기본 특성 클래스를 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.CodeAccessSecurityAttribute">
          <source>This attribute class associates a <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction&gt;</ph>, for example, <ph id="ph2">`Demand`</ph>, with a custom security attribute.</source>
          <target state="translated">이 특성 클래스 연결는 <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction&gt;</ph>, 예를 들어 <ph id="ph2">`Demand`</ph>, 사용자 지정 보안 특성을 가진 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.CodeAccessSecurityAttribute">
          <source>The types that derive from <ph id="ph1">&lt;xref:System.Security.Permissions.CodeAccessSecurityAttribute&gt;</ph> are used to help restrict access to resources or securable operations.</source>
          <target state="translated">파생 된 형식을 <ph id="ph1">&lt;xref:System.Security.Permissions.CodeAccessSecurityAttribute&gt;</ph> 리소스 또는 보안 개체 작업에 대 한 액세스를 제한 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.CodeAccessSecurityAttribute">
          <source>The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.</source>
          <target state="translated">보안 특성에 의해 선언 된 보안 정보 특성 대상의 메타 데이터에 저장 되 고 실행 시 시스템에서 액세스 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.CodeAccessSecurityAttribute">
          <source>Security attributes are used only for declarative security.</source>
          <target state="translated">보안 특성은 선언적 보안에만 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.CodeAccessSecurityAttribute">
          <source>Use the corresponding permission class derived from <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission&gt;</ph> for imperative security.</source>
          <target state="translated">파생 된 해당 사용 권한 클래스를 사용 하 여 <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission&gt;</ph> 명령적 보안 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.CodeAccessSecurityAttribute">
          <source>The following example shows a permission attribute derived from the <ph id="ph1">&lt;xref:System.Security.Permissions.CodeAccessSecurityAttribute&gt;</ph> class.</source>
          <target state="translated">다음 예제에서는 권한 특성에서 파생 된 <ph id="ph1">&lt;xref:System.Security.Permissions.CodeAccessSecurityAttribute&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.CodeAccessSecurityAttribute">
          <source>All permission attributes derived from this class must have only a single constructor that takes a <ph id="ph1">&lt;see cref="T:System.Security.Permissions.SecurityAction" /&gt;</ph> as its only parameter.</source>
          <target state="translated">이 클래스에서 파생 된 모든 사용 권한을 특성 받아들이는 단일 생성자만 있어야 합니다.는 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.SecurityAction" /&gt;</ph> 유일한 매개 변수로 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.Permissions.CodeAccessSecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Permissions.SecurityAction" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.SecurityAction" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Security.Permissions.CodeAccessSecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Security.Permissions.CodeAccessSecurityAttribute" /&gt;</ph> with the specified <ph id="ph2">&lt;see cref="T:System.Security.Permissions.SecurityAction" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.CodeAccessSecurityAttribute" /&gt;</ph>을 사용하여 <ph id="ph2">&lt;see cref="T:System.Security.Permissions.SecurityAction" /&gt;</ph>의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.CodeAccessSecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)">
          <source>You cannot create an instance of this class.</source>
          <target state="translated">이 클래스의 인스턴스를 만들 수 없습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.CodeAccessSecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)">
          <source>You must inherit from this class to make use of its functionality.</source>
          <target state="translated">이 클래스에서 상속 해야의 기능을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.CodeAccessSecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)">
          <source>Derived classes must have only one constructor that takes a <ph id="ph1">&lt;see cref="T:System.Security.Permissions.SecurityAction" /&gt;</ph> as its only parameter.</source>
          <target state="translated">파생된 클래스를 사용 하는 생성자가 하나만 있어야 합니다.는 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.SecurityAction" /&gt;</ph> 유일한 매개 변수로 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>