<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ReflectionPermissionAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5aec5794cb575c759fcbd5494125e2221980cbb39.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aec5794cb575c759fcbd5494125e2221980cbb39</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Permissions.ReflectionPermissionAttribute">
          <source>Allows security actions for <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermission" /&gt;</ph> to be applied to code using declarative security.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermission" /&gt;</ph>에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionAttribute">
          <source>The scope of the declaration that is allowed depends on the <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction&gt;</ph> that is used.</source>
          <target state="translated">허용 되는 선언의 범위에 따라 달라 집니다는 <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction&gt;</ph> 사용 되는 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionAttribute">
          <source>The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.</source>
          <target state="translated">보안 특성에 의해 선언 된 보안 정보 특성 대상의 메타 데이터에 저장 되 고 실행 시 시스템에서 액세스 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionAttribute">
          <source>Security attributes are used only for declarative security.</source>
          <target state="translated">보안 특성은 선언적 보안에만 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Permissions.ReflectionPermissionAttribute">
          <source>For imperative security, use the corresponding permission class.</source>
          <target state="translated">명령적 보안을 위해 해당 권한 클래스를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.Permissions.ReflectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Permissions.SecurityAction" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.SecurityAction" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.Permissions.ReflectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionAttribute" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Security.Permissions.SecurityAction" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionAttribute" /&gt;</ph>를 사용하여 <ph id="ph2">&lt;see cref="T:System.Security.Permissions.SecurityAction" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission">
          <source>Creates and returns a new <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermission" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermission" /&gt;</ph>을 만들어 반환합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermission" /&gt;</ph> that corresponds to this attribute.</source>
          <target state="translated">이 특성에 해당하는 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermission" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission">
          <source>This method should only be called by the security system, never by application code.</source>
          <target state="translated">이 메서드가 응용 프로그램 코드 보안 시스템에서만 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission">
          <source>At compile time, attributes convert security declarations to a serialized form in metadata.</source>
          <target state="translated">컴파일 타임에 특성은 보안 선언을 메타 데이터의 serialize 된 형식으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission">
          <source>Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.</source>
          <target state="translated">선언적 보안 메타 데이터의 데이터는이 특성에 해당 하는이 메서드가 반환 하는 권한에서 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.Flags">
          <source>Gets or sets the current allowed uses of reflection.</source>
          <target state="translated">현재 사용할 수 있는 리플렉션의 용도를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.Flags">
          <source>One or more of the <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> values combined using a bitwise OR.</source>
          <target state="translated">비트 OR 연산자를 사용하여 조합된 하나 이상의 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.Flags">
          <source>An attempt is made to set this property to an invalid value.</source>
          <target state="translated">이 속성을 잘못된 값으로 설정하려고 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.Flags">
          <source>See <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph> for the valid values.</source>
          <target state="translated">올바른 값을 보려면 <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /&gt;</ph>를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess">
          <source>Gets or sets a value that indicates whether invocation of operations on non-public members is allowed.</source>
          <target state="translated">public이 아닌 멤버에 대한 작업을 호출할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if invocation of operations on non-public members is allowed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">public이 아닌 멤버에 대한 작업을 호출할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit">
          <source>Gets or sets a value that indicates whether use of certain features in <ph id="ph1">&lt;see cref="N:System.Reflection.Emit" /&gt;</ph>, such as emitting debug symbols, is allowed.</source>
          <target state="translated">디버그 기호 내보내기 등의 특정 <ph id="ph1">&lt;see cref="N:System.Reflection.Emit" /&gt;</ph> 기능을 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if use of the affected features is allowed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">해당 기능을 사용할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, emitting code no longer requires <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">부터는 <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, 코드를 내보내거나 더 이상 필요 하지 <ph id="ph2">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> 와 <ph id="ph3">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit">
          <source>Some features of reflection emit, such as emitting debug symbols, still require the <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">일부 기능이 리플렉션의 디버그 기호 내보내기 등 내보내기, 여전히 필요한는 <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType&gt;</ph> 플래그입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit">
          <source>(See <bpt id="p1">[</bpt>Security Issues in Reflection Emit<ept id="p1">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.)</source>
          <target state="translated">(참조 <bpt id="p1">[</bpt>리플렉션 내보내기의 보안 문제점<ept id="p1">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.)</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit">
          <source>To use this functionality, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.</source>
          <target state="translated">이 기능을 사용하려면 응용 프로그램이 <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> 이상을 대상으로 해야 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess">
          <source>Gets or sets a value that indicates whether restricted invocation of non-public members is allowed.</source>
          <target state="translated">public이 아닌 멤버를 제한적으로 호출할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess">
          <source>Restricted invocation means that the grant set of the assembly that contains the non-public member that is being invoked must be equal to, or a subset of, the grant set of the invoking assembly.</source>
          <target state="translated">여기에서 제한적인 호출은 호출되는 public이 아닌 멤버가 들어 있는 어셈블리의 권한 부여 집합이 호출하는 어셈블리의 권한 부여 집합과 같거나 그 하위 집합이어야 한다는 의미입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if restricted invocation of non-public members is allowed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">public이 아닌 멤버를 제한적으로 호출할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess">
          <source>This property is introduced in the <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>.</source>
          <target state="translated">이 속성에 포함 되는 <ph id="ph1">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess">
          <source>To use this property, your application should target the <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.</source>
          <target state="translated">이 속성을 사용 하려면 응용 프로그램이 대상 해야는 <ph id="ph1">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> 이상.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation">
          <source>Gets or sets a value that indicates whether reflection on members that are not visible is allowed.</source>
          <target state="translated">보이지 않는 멤버에 대한 리플렉션이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if reflection on members that are not visible is allowed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">보이지 않는 멤버에 대한 리플렉션이 허용되는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않은 경우 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation">
          <source>This property is now obsolete.</source>
          <target state="translated">이 속성은 더 이상 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation">
          <source>Reflecting on the metadata of members that are not visible no longer requires <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>.</source>
          <target state="translated">필요 더 이상 표시 되지 않는 멤버의 메타 데이터에 반영 <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>