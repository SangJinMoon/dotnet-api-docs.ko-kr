<Type Name="IProducerConsumerCollection&lt;T&gt;" FullName="System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;">
  <TypeSignature Language="C#" Value="public interface IProducerConsumerCollection&lt;T&gt; : System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProducerConsumerCollection`1&lt;T&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProducerConsumerCollection(Of T)&#xA;Implements ICollection, IEnumerable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IProducerConsumerCollection : System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="75bff-101">컬렉션에 있는 요소의 형식을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-101">Specifies the type of elements in the collection.</span></span></typeparam>
    <summary><span data-ttu-id="75bff-102">생산자/소비자 용도의 스레드로부터 안전한 컬렉션을 조작하는 메서드를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-102">Defines methods to manipulate thread-safe collections intended for producer/consumer usage.</span></span> <span data-ttu-id="75bff-103">이 인터페이스는 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 같은 더 높은 수준의 추상이 기본 저장소 메커니즘으로 컬렉션을 사용할 수 있도록 생산자/소비자 컬렉션에 대한 통합 표현을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-103">This interface provides a unified representation for producer/consumer collections so that higher level abstractions such as <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> can use the collection as the underlying storage mechanism.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75bff-104">자세한 내용은 참조 [스레드로부터 안전한 컬렉션](http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd) 및 [BlockingCollection 개요](~/docs/standard/collections/thread-safe/blockingcollection-overview.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-104">For more information, see [Thread-Safe Collections](http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd) and [BlockingCollection Overview](~/docs/standard/collections/thread-safe/blockingcollection-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75bff-105">다음 예에서는 구현 하는 스택 데이터 구조 <xref:System.Collections.Concurrent.IProducerConsumerCollection%601?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-105">The following example shows a stack data structure that implements <xref:System.Collections.Concurrent.IProducerConsumerCollection%601?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.IProducerConsumerCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.iproducerconsumercollection/cs/iprodcon.cs#1)]
 [!code-vb[System.Collections.Concurrent.IProducerConsumerCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.iproducerconsumercollection/vb/iprodcon.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="75bff-106">이 인터페이스의 모든 구현이 여러 스레드에서 동시에 사용할이 인터페이스의 모든 멤버에 사용 하도록 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-106">All implementations of this interface must enable all members of this interface to be used concurrently from multiple threads.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.IProducerConsumerCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="75bff-107">
            <see cref="T:System.Array" />에서 복사한 요소의 대상인 1차원 <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />입니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-107">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span></span>  
 
<span data-ttu-id="75bff-108">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-108">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="75bff-109"><c>배열</c>에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-109">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="75bff-110">지정된 인덱스부터 시작하여 <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />의 요소를 <see cref="T:System.Array" />에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-110">Copies the elements of the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> to an <see cref="T:System.Array" />, starting at a specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75bff-111">메서드는 내부 컬렉션에 대 한 스냅숏을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-111">The method provides a snapshot of the underlying collection.</span></span> <span data-ttu-id="75bff-112">다른 스레드가 추가 하거나 복사본 만들어진 직후에 항목을 제거 하는 것이 불가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-112">It is possible for other threads to add or remove items immediately after the copy is made.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="75bff-113"><paramref name="array" />가 null 참조(Visual Basic의 경우 Nothing)인 경우</span><span class="sxs-lookup"><span data-stu-id="75bff-113"><paramref name="array" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="75bff-114"><paramref name="index" />가 0보다 작은 경우</span><span class="sxs-lookup"><span data-stu-id="75bff-114"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="75bff-115"><paramref name="index" />가 <paramref name="array" />의 길이와 같거나 큰 경우 -또는- 컬렉션의 요소 수가 대상 <paramref name="index" />의 <paramref name="array" />부터 끝까지의 사용 가능한 공간보다 큰 경우.</span><span class="sxs-lookup"><span data-stu-id="75bff-115"><paramref name="index" /> is equal to or greater than the length of the <paramref name="array" /> -or- The number of elements in the collection is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.IProducerConsumerCollection`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="75bff-116"><see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />에 포함된 요소를 새 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-116">Copies the elements contained in the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> to a new array.</span></span></summary>
        <returns><span data-ttu-id="75bff-117"><see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />에서 복사된 요소를 포함하는 새 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-117">A new array containing the elements copied from the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75bff-118">메서드는 내부 컬렉션에 대 한 스냅숏을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-118">The method provides a snapshot of the underlying collection.</span></span> <span data-ttu-id="75bff-119">다른 스레드가 추가 하거나 배열 만들어진 직후에 항목을 제거 하는 것이 불가능 합니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-119">It is possible for other threads to add or remove items immediately after the array is made.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryAdd(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.IProducerConsumerCollection`1.TryAdd(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="75bff-120"><see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />에 추가할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-120">The object to add to the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="75bff-121"><see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />에 개체를 추가하려고 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-121">Attempts to add an object to the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="75bff-122">개체가 추가되었으면 true이고, 그렇지 않으면 false입니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-122">true if the object was added successfully; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="75bff-123"><paramref name="item" />은 이 컬렉션에 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-123">The <paramref name="item" /> was invalid for this collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryTake">
      <MemberSignature Language="C#" Value="public bool TryTake (out T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryTake([out] !T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.IProducerConsumerCollection`1.TryTake(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryTake (ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryTake([Runtime::InteropServices::Out] T % item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="75bff-124">이 메서드가 반환될 경우 개체가 성공적으로 제거되고 반환되었으면 <c>항목</c>에는 제거된 개체가 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-124">When this method returns, if the object was removed and returned successfully, <c>item</c> contains the removed object.</span></span> <span data-ttu-id="75bff-125">제거할 수 있는 개체가 없으면 이 값은 지정되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-125">If no object was available to be removed, the value is unspecified.</span></span></param>
        <summary><span data-ttu-id="75bff-126"><see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />에서 개체를 제거하고 반환하려고 시도합니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-126">Attempts to remove and return an object from the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="75bff-127">개체가 성공적으로 제거되고 반환되었으면 true이고, 그렇지 않으면 false입니다.</span><span class="sxs-lookup"><span data-stu-id="75bff-127">true if an object was removed and returned successfully; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>