<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OrderablePartitioner`1.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac594e676539489c7f3d423af6660e27a2cb0a4ada5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">94e676539489c7f3d423af6660e27a2cb0a4ada5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.OrderablePartitioner`1">
          <source>Type of the elements in the collection.</source>
          <target state="translated">컬렉션에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.OrderablePartitioner`1">
          <source>Represents a particular manner of splitting an orderable data source into multiple partitions.</source>
          <target state="translated">정렬할 수 있는 데이터 원본을 여러 파티션으로 분할하는 특정 방식을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.OrderablePartitioner`1">
          <source>The implementation of the derived class is responsible for ordering the elements into key-value pairs in whatever manner is appropriate.</source>
          <target state="translated">파생된 클래스의 구현은는 적절 한 방식으로 키-값 쌍으로 요소를 정렬 하는 일을 담당 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.OrderablePartitioner`1">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>PLINQ 및 TPL에 대한 사용자 지정 파티셔너<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.OrderablePartitioner`1">
          <source>The following example shows how to implement an orderable partitioner that returns one element at a time:</source>
          <target state="translated">다음 예제에서는 한 번에 하나의 요소를 반환 하는 정렬 가능한 파티 셔 너 구현 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.OrderablePartitioner`1">
          <source>All public members of <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> are thread-safe and may be called from multiple threads concurrently.</source>
          <target state="translated">모든 public 멤버 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> 는 스레드로부터 안전 하며 여러 스레드에서 동시에 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>Indicates whether the elements in each partition are yielded in the order of increasing keys.</source>
          <target state="translated">각 파티션에 있는 요소가 키가 증가하는 순서로 반환되는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>Indicates whether elements in an earlier partition always come before elements in a later partition.</source>
          <target state="translated">순서가 빠른 파티션의 요소가 순서가 늦은 파티션의 요소보다 항상 먼저 오는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>If true, each element in partition 0 has a smaller order key than any element in partition 1, each element in partition 1 has a smaller order key than any element in partition 2, and so on.</source>
          <target state="translated">true이면 파티션 0의 모든 요소가 파티션 1의 모든 요소보다 작은 순서 키를 갖고, 파티션 1의 모든 요소가 파티션 2의 모든 요소보다 작은 순서 키를 갖는 식으로 처리됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>Indicates whether keys are normalized.</source>
          <target state="translated">키를 정규화할지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>If true, all order keys are distinct integers in the range [0 ..</source>
          <target state="translated">true인 경우 모든 순서 키가 [0 .</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>numberOfElements-1].</source>
          <target state="translated">numberOfElements-1] 범위의 서로 다른 정수입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>If false, order keys must still be distinct, but only their relative order is considered, not their absolute values.</source>
          <target state="translated">false이면 순서 키가 서로 다르지만 절대 값이 아니라 상대적인 순서만 고려합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>Called from constructors in derived classes to initialize the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> class with the specified constraints on the index keys.</source>
          <target state="translated">인덱스 키에 대해 지정된 제약 조건을 사용하여 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /&gt;</ph> 클래스를 초기화하기 위해 파생 클래스의 생성자에서 호출됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>PLINQ 및 TPL에 대한 사용자 지정 파티셔너<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions">
          <source>Creates an object that can partition the underlying collection into a variable number of partitions.</source>
          <target state="translated">기본 컬렉션을 여러 파티션으로 분할할 수 있는 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions">
          <source>An object that can create partitions over the underlying data source.</source>
          <target state="translated">내부 데이터 소스에 대한 파티션을 만들 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions">
          <source>The returned object implements the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">반환 된 개체를 구현 하는 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions">
          <source>Calling <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> on the object creates another partition over the sequence.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> 개체에서 시퀀스를 통해 다른 파티션을 만듭니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions">
          <source>The default implementation provides the same behavior as <ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A&gt;</ph> except that the returned set of partitions does not provide the keys for the elements.</source>
          <target state="translated">와 동일한 동작을 제공 하는 기본 구현은 <ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A&gt;</ph> 제외 하 고 반환 된 파티션 집합이 요소에 대 한 키를 제공 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.GetDynamicPartitions%2A&gt;</ph> method is only supported if the <ph id="ph2">&lt;xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A&gt;</ph> property returns true.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.GetDynamicPartitions%2A&gt;</ph> 메서드는 경우에 지원 되는 <ph id="ph2">&lt;xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A&gt;</ph> 속성이 true를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>PLINQ 및 TPL에 대한 사용자 지정 파티셔너<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions">
          <source>Dynamic partitioning is not supported by the base class.</source>
          <target state="translated">동적 분할은 기본 클래스에서 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions">
          <source>It must be implemented in derived classes.</source>
          <target state="translated">파생된 클래스에서 구현되어야 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions">
          <source>Creates an object that can partition the underlying collection into a variable number of partitions.</source>
          <target state="translated">기본 컬렉션을 여러 파티션으로 분할할 수 있는 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions">
          <source>An object that can create partitions over the underlying data source.</source>
          <target state="translated">내부 데이터 소스에 대한 파티션을 만들 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions">
          <source>The returned object implements the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">반환 된 개체를 구현 하는 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions">
          <source>Calling <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> on the object creates another partition over the sequence.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> 개체에서 시퀀스를 통해 다른 파티션을 만듭니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions">
          <source>Each partition is represented as an enumerator over key-value pairs.</source>
          <target state="translated">각 파티션에 키-값 쌍을 통해 열거자로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions">
          <source>The value in the pair is the element itself, and the key is an integer which determines the relative ordering of this element against other elements.</source>
          <target state="translated">쌍의 값은 요소 자체 이며 키가 다른 요소에 대해이 요소의 상대 순서를 결정 하는 정수입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A&gt;</ph> method is only supported if the <ph id="ph2">&lt;xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A&gt;</ph> property returns true.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A&gt;</ph> 메서드는 경우에 지원 되는 <ph id="ph2">&lt;xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A&gt;</ph> 속성이 true를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>PLINQ 및 TPL에 대한 사용자 지정 파티셔너<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions">
          <source>Dynamic partitioning is not supported by this partitioner.</source>
          <target state="translated">동적 분할은 이 파티셔너에서 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderablePartitions(System.Int32)">
          <source>The number of partitions to create.</source>
          <target state="translated">만들 파티션의 수입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderablePartitions(System.Int32)">
          <source>Partitions the underlying collection into the specified number of orderable partitions.</source>
          <target state="translated">기본 컬렉션을 지정된 개수의 정렬할 수 있는 파티션으로 분할합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderablePartitions(System.Int32)">
          <source>A list containing <ph id="ph1">&lt;paramref name="partitionCount" /&gt;</ph> enumerators.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partitionCount" /&gt;</ph> 열거자가 포함된 목록입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderablePartitions(System.Int32)">
          <source>Each partition is represented as an enumerator over key-value pairs.</source>
          <target state="translated">각 파티션에 키-값 쌍을 통해 열거자로 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderablePartitions(System.Int32)">
          <source>The value of the pair is the element itself, and the key is an integer which determines the relative ordering of this element against other elements in the data source.</source>
          <target state="translated">쌍의 값은 요소 자체 이며 키가 데이터 원본에 다른 요소에 대해이 요소의 상대 순서를 결정 하는 정수입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderablePartitions(System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>PLINQ 및 TPL에 대한 사용자 지정 파티셔너<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetPartitions(System.Int32)">
          <source>The number of partitions to create.</source>
          <target state="translated">만들 파티션의 수입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetPartitions(System.Int32)">
          <source>Partitions the underlying collection into the given number of ordered partitions.</source>
          <target state="translated">기본 컬렉션을 지정된 개수의 정렬된 파티션으로 분할합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetPartitions(System.Int32)">
          <source>A list containing <ph id="ph1">&lt;paramref name="partitionCount" /&gt;</ph> enumerators.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partitionCount" /&gt;</ph> 열거자가 포함된 목록입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetPartitions(System.Int32)">
          <source>The default implementation provides the same behavior as <ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderablePartitions%2A&gt;</ph> except that the returned set of partitions does not provide the keys for the elements.</source>
          <target state="translated">와 동일한 동작을 제공 하는 기본 구현은 <ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderablePartitions%2A&gt;</ph> 제외 하 고 반환 된 파티션 집합이 요소에 대 한 키를 제공 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.OrderablePartitioner`1.GetPartitions(System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>PLINQ 및 TPL에 대한 사용자 지정 파티셔너<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized">
          <source>Gets whether order keys are normalized.</source>
          <target state="translated">순서 키를 정규화할지 여부를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized">
          <source>true if the keys are normalized; otherwise false.</source>
          <target state="translated">키가 정규화되면 true이고, 그렇지 않으면 false입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysNormalized%2A&gt;</ph> returns true, all order keys are distinct integers in the range [0 ..</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysNormalized%2A&gt;</ph> 모든 순서 키의 범위는 [0.. 고유한 정수가 true를 반환</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized">
          <source>numberOfElements-1].</source>
          <target state="translated">numberOfElements-1] 범위의 서로 다른 정수입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized">
          <source>If the property returns false, order keys must still be distinct, but only their relative order is considered, not their absolute values.</source>
          <target state="translated">속성이 false 순서 키가 다 반환 하지만 절대 값이 아니라 해당 상대 순서 고려 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>PLINQ 및 TPL에 대한 사용자 지정 파티셔너<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedAcrossPartitions">
          <source>Gets whether elements in an earlier partition always come before elements in a later partition.</source>
          <target state="translated">순서가 빠른 파티션의 요소가 순서가 늦은 파티션의 요소보다 항상 먼저 오는지 여부를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedAcrossPartitions">
          <source>true if the elements in an earlier partition always come before elements in a later partition; otherwise false.</source>
          <target state="translated">순서가 빠른 파티션의 요소가 순서가 늦은 파티션의 요소보다 항상 먼저 오면 true이고, 그렇지 않으면 false입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedAcrossPartitions">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysOrderedAcrossPartitions%2A&gt;</ph> returns true, each element in partition 0 has a smaller order key than any element in partition 1, each element in partition 1 has a smaller order key than any element in partition 2, and so on.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysOrderedAcrossPartitions%2A&gt;</ph> 파티션 0의에서 각 요소에는 파티션 1에 파티션 1에 있는 각 요소에에서 파티션 2에 있는 모든 요소 보다 작은 순서 키를 가진 보다 작은 순서 키에 true를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedAcrossPartitions">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>PLINQ 및 TPL에 대한 사용자 지정 파티셔너<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedInEachPartition">
          <source>Gets whether elements in each partition are yielded in the order of increasing keys.</source>
          <target state="translated">각 파티션에 있는 요소가 키가 증가하는 순서로 생성되는지 여부를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedInEachPartition">
          <source>true if the elements in each partition are yielded in the order of increasing keys; otherwise false.</source>
          <target state="translated">각 파티션에 있는 요소가 키가 증가하는 순서로 생성되면 true이고, 그렇지 않으면 false입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedInEachPartition">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>PLINQ 및 TPL에 대한 사용자 지정 파티셔너<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>를 참조하세요.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>