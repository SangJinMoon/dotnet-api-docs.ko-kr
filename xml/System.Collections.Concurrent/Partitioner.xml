<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Partitioner.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5db71d4337bb59a8502217d32d886fbb2098726a0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db71d4337bb59a8502217d32d886fbb2098726a0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.Partitioner">
          <source>Provides common partitioning strategies for arrays, lists, and enumerables.</source>
          <target state="translated">배열, 목록 및 열거 가능 형식에 대한 공용 분할 전략을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.Partitioner">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>PLINQ 및 TPL에 대한 사용자 지정 파티셔너<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.Partitioner">
          <source>Creates a partitioner.</source>
          <target state="translated">파티셔너를 만듭니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32)">
          <source>The lower, inclusive bound of the range.</source>
          <target state="translated">범위의 하한(포함)입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32)">
          <source>The upper, exclusive bound of the range.</source>
          <target state="translated">범위의 상한(제외)입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32)">
          <source>Creates a partitioner that chunks the user-specified range.</source>
          <target state="translated">사용자가 지정한 범위를 분할하는 파티셔너를 만듭니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32)">
          <source>A partitioner.</source>
          <target state="translated">파티셔너입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32)">
          <source>For more information and examples, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">자세한 내용 및 예제에 대 한 참조 <bpt id="p1">[</bpt>PLINQ 및 TPL에 대 한 사용자 지정 파티 셔 너<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="toExclusive" /&gt;</ph> argument is less than or equal to the <ph id="ph2">&lt;paramref name="fromInclusive" /&gt;</ph> argument.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="toExclusive" /&gt;</ph> 인수는 <ph id="ph2">&lt;paramref name="fromInclusive" /&gt;</ph> 인수보다 작거나 같습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64)">
          <source>The lower, inclusive bound of the range.</source>
          <target state="translated">범위의 하한(포함)입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64)">
          <source>The upper, exclusive bound of the range.</source>
          <target state="translated">범위의 상한(제외)입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64)">
          <source>Creates a partitioner that chunks the user-specified range.</source>
          <target state="translated">사용자가 지정한 범위를 분할하는 파티셔너를 만듭니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64)">
          <source>A partitioner.</source>
          <target state="translated">파티셔너입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64)">
          <source>For more information and examples, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">자세한 내용 및 예제에 대 한 참조 <bpt id="p1">[</bpt>PLINQ 및 TPL에 대 한 사용자 지정 파티 셔 너<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;paramref name="toExclusive" /&gt;</ph> argument is less than or equal to the <ph id="ph2">&lt;paramref name="fromInclusive" /&gt;</ph> argument.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="toExclusive" /&gt;</ph> 인수는 <ph id="ph2">&lt;paramref name="fromInclusive" /&gt;</ph> 인수보다 작거나 같습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32,System.Int32)">
          <source>The lower, inclusive bound of the range.</source>
          <target state="translated">범위의 하한(포함)입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32,System.Int32)">
          <source>The upper, exclusive bound of the range.</source>
          <target state="translated">범위의 상한(제외)입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32,System.Int32)">
          <source>The size of each subrange.</source>
          <target state="translated">각 하위 범위의 크기입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32,System.Int32)">
          <source>Creates a partitioner that chunks the user-specified range.</source>
          <target state="translated">사용자가 지정한 범위를 분할하는 파티셔너를 만듭니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32,System.Int32)">
          <source>A partitioner.</source>
          <target state="translated">파티셔너입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32,System.Int32)">
          <source>For more information and examples, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">자세한 내용 및 예제에 대 한 참조 <bpt id="p1">[</bpt>PLINQ 및 TPL에 대 한 사용자 지정 파티 셔 너<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="toExclusive" /&gt;</ph> argument is less than or equal to the <ph id="ph2">&lt;paramref name="fromInclusive" /&gt;</ph> argument.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="toExclusive" /&gt;</ph> 인수는 <ph id="ph2">&lt;paramref name="fromInclusive" /&gt;</ph> 인수보다 작거나 같습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="rangeSize" /&gt;</ph> argument is less than or equal to 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSize" /&gt;</ph> 인수가 0보다 작거나 같은 경우.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64,System.Int64)">
          <source>The lower, inclusive bound of the range.</source>
          <target state="translated">범위의 하한(포함)입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64,System.Int64)">
          <source>The upper, exclusive bound of the range.</source>
          <target state="translated">범위의 상한(제외)입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64,System.Int64)">
          <source>The size of each subrange.</source>
          <target state="translated">각 하위 범위의 크기입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64,System.Int64)">
          <source>Creates a partitioner that chunks the user-specified range.</source>
          <target state="translated">사용자가 지정한 범위를 분할하는 파티셔너를 만듭니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64,System.Int64)">
          <source>A partitioner.</source>
          <target state="translated">파티셔너입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64,System.Int64)">
          <source>For more information and examples, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">자세한 내용 및 예제에 대 한 참조 <bpt id="p1">[</bpt>PLINQ 및 TPL에 대 한 사용자 지정 파티 셔 너<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;paramref name="toExclusive" /&gt;</ph> argument is less than or equal to the <ph id="ph2">&lt;paramref name="fromInclusive" /&gt;</ph> argument.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="toExclusive" /&gt;</ph> 인수는 <ph id="ph2">&lt;paramref name="fromInclusive" /&gt;</ph> 인수보다 작거나 같습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64,System.Int64)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;paramref name="rangeSize" /&gt;</ph> argument is less than or equal to 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rangeSize" /&gt;</ph> 인수가 0보다 작거나 같은 경우.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Type of the elements in source enumerable.</source>
          <target state="translated">소스 열거 가능한 형식에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The enumerable to be partitioned.</source>
          <target state="translated">분할할 열거 가능한 형식입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Creates an orderable partitioner from a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 인스턴스에서 정렬할 수 있는 파티셔너를 만듭니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0})">
          <source>An orderable partitioner based on the input array.</source>
          <target state="translated">입력 배열을 기초로 정렬할 수 있는 파티셔너입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The ordering used in the created partitioner is determined by the natural order of the elements as retrieved from the source enumerable.</source>
          <target state="translated">열거 가능한 원본에서 검색 된 대로 요소의 자연 스러운 순서에 따라 생성된 된 파티 셔 너에 사용 되는 순서 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0})">
          <source>For more information and examples, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">자세한 내용 및 예제에 대 한 참조 <bpt id="p1">[</bpt>PLINQ 및 TPL에 대 한 사용자 지정 파티 셔 너<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Concurrent.EnumerablePartitionerOptions)">
          <source>Type of the elements in source enumerable.</source>
          <target state="translated">소스 열거 가능한 형식에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Concurrent.EnumerablePartitionerOptions)">
          <source>The enumerable to be partitioned.</source>
          <target state="translated">분할할 열거 가능한 형식입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Concurrent.EnumerablePartitionerOptions)">
          <source>Options to control the buffering behavior of the partitioner.</source>
          <target state="translated">파티셔너의 버퍼링 동작을 제어하는 옵션입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Concurrent.EnumerablePartitionerOptions)">
          <source>Creates an orderable partitioner from a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 인스턴스에서 정렬할 수 있는 파티셔너를 만듭니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Concurrent.EnumerablePartitionerOptions)">
          <source>An orderable partitioner based on the input array.</source>
          <target state="translated">입력 배열을 기초로 정렬할 수 있는 파티셔너입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Concurrent.EnumerablePartitionerOptions)">
          <source>The ordering used in the created partitioner is determined by the natural order of the elements as retrieved from the source enumerable.</source>
          <target state="translated">열거 가능한 원본에서 검색 된 대로 요소의 자연 스러운 순서에 따라 생성된 된 파티 셔 너에 사용 되는 순서 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Concurrent.EnumerablePartitionerOptions)">
          <source>The <ph id="ph1">&lt;paramref name="partitionerOptions" /&gt;</ph> argument specifies an invalid value for <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.EnumerablePartitionerOptions" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partitionerOptions" /&gt;</ph> 인수는 <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.EnumerablePartitionerOptions" /&gt;</ph>에 대해 잘못된 값을 지정합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IList{``0},System.Boolean)">
          <source>Type of the elements in source list.</source>
          <target state="translated">소스 목록에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IList{``0},System.Boolean)">
          <source>The list to be partitioned.</source>
          <target state="translated">분할할 목록입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IList{``0},System.Boolean)">
          <source>A Boolean value that indicates whether the created partitioner should dynamically load balance between partitions rather than statically partition.</source>
          <target state="translated">만들어진 파티셔너가 파티션 간에 부하를 정적으로 분산하는 것이 아니라 동적으로 분산시켜야 하는지 여부를 나타내는 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IList{``0},System.Boolean)">
          <source>Creates an orderable partitioner from an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> 인스턴스에서 정렬할 수 있는 파티셔너를 만듭니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IList{``0},System.Boolean)">
          <source>An orderable partitioner based on the input list.</source>
          <target state="translated">입력 목록을 기초로 정렬할 수 있는 파티셔너입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IList{``0},System.Boolean)">
          <source>For more information and examples, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">자세한 내용 및 예제에 대 한 참조 <bpt id="p1">[</bpt>PLINQ 및 TPL에 대 한 사용자 지정 파티 셔 너<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.Partitioner.Create``1(``0[],System.Boolean)">
          <source>Type of the elements in source array.</source>
          <target state="translated">소스 배열에 있는 요소의 형식입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create``1(``0[],System.Boolean)">
          <source>The array to be partitioned.</source>
          <target state="translated">분할할 배열입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create``1(``0[],System.Boolean)">
          <source>A Boolean value that indicates whether the created partitioner should dynamically load balance between partitions rather than statically partition.</source>
          <target state="translated">만들어진 파티셔너가 파티션 간에 부하를 정적으로 분산하는 것이 아니라 동적으로 분산시켜야 하는지 여부를 나타내는 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create``1(``0[],System.Boolean)">
          <source>Creates an orderable partitioner from a <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 인스턴스에서 정렬할 수 있는 파티셔너를 만듭니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.Partitioner.Create``1(``0[],System.Boolean)">
          <source>An orderable partitioner based on the input array.</source>
          <target state="translated">입력 배열을 기초로 정렬할 수 있는 파티셔너입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.Partitioner.Create``1(``0[],System.Boolean)">
          <source>For more information and examples, see <bpt id="p1">[</bpt>Custom Partitioners for PLINQ and TPL<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>.</source>
          <target state="translated">자세한 내용 및 예제에 대 한 참조 <bpt id="p1">[</bpt>PLINQ 및 TPL에 대 한 사용자 지정 파티 셔 너<ept id="p1">](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>