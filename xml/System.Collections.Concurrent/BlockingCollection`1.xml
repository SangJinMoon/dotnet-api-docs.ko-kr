<Type Name="BlockingCollection&lt;T&gt;" FullName="System.Collections.Concurrent.BlockingCollection&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f6c936056ed99a71dfdd7760349d29df25a72390" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52229930" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BlockingCollection&lt;T&gt; : IDisposable, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BlockingCollection`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.BlockingCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class BlockingCollection(Of T)&#xA;Implements ICollection, IDisposable, IEnumerable(Of T), IReadOnlyCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class BlockingCollection : IDisposable, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type BlockingCollection&lt;'T&gt; = class&#xA;    interface seq&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IDisposable&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}, Type = {m_collection}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Concurrent.SystemThreadingCollections_BlockingCollectionDebugView`1))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="634a3-101">컬렉션에 있는 요소의 형식입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="634a3-101">The type of elements in the collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="634a3-102">
        <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />을 구현하는 스레드로부터 안전한 컬렉션에 대한 차단 및 경계 기능을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="634a3-102">Provides blocking and bounding capabilities for thread-safe collections that implement <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-103"><xref:System.Collections.Concurrent.BlockingCollection%601> 다음 기능을 제공 하는 스레드로부터 안전한 컬렉션 클래스가입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-103"><xref:System.Collections.Concurrent.BlockingCollection%601> is a thread-safe collection class that provides the following:</span></span>  
  
-   <span data-ttu-id="634a3-104">생산자/소비자 패턴 구현 <xref:System.Collections.Concurrent.BlockingCollection%601> 래퍼는 <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-104">An implementation of the producer/consumer pattern; <xref:System.Collections.Concurrent.BlockingCollection%601> is a wrapper for the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span>  
  
-   <span data-ttu-id="634a3-105">사용 하 여 여러 스레드에서 항목의 동시 추가 및 제거 합니다 <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> 고 <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="634a3-105">Concurrent addition and removal of items from multiple threads with the <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> and  <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> methods.</span></span>  
  
-   <span data-ttu-id="634a3-106">차단 하는 제한 컬렉션 <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> 고 <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> 작업 컬렉션이 full 또는 empty 때.</span><span class="sxs-lookup"><span data-stu-id="634a3-106">A bounded collection that blocks <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> and <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> operations when the collection is full or empty.</span></span>  
  
-   <span data-ttu-id="634a3-107">취소 <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> 또는 <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> 사용 하 여 작업을 <xref:System.Threading.CancellationToken> 개체를 <xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A> 또는 <xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="634a3-107">Cancellation of <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> or <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> operations by using a <xref:System.Threading.CancellationToken> object in the  <xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A> or <xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="634a3-108">이 형식이 구현 하는 <xref:System.IDisposable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-108">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="634a3-109">형식을 사용 하 여 마쳤으면 직접 또는 간접적으로의 삭제 해야 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-109">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="634a3-110">직접 형식의 dispose 호출 해당 <xref:System.IDisposable.Dispose%2A> 의 메서드를 `try` / `catch` 블록입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-110">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="634a3-111">삭제 하지 직접, 언어 구문 같은 사용 `using` (C#에서) 또는 `Using` (Visual Basic에서는).</span><span class="sxs-lookup"><span data-stu-id="634a3-111">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="634a3-112">자세한 내용은 "를 사용 하는 개체는 구현 IDisposable" 섹션을 참조 하세요.를 <xref:System.IDisposable> 인터페이스 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-112">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span> <span data-ttu-id="634a3-113">또한는 <xref:System.Collections.Concurrent.BlockingCollection%601.Dispose> 메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-113">Also, note that the <xref:System.Collections.Concurrent.BlockingCollection%601.Dispose> method is not thread-safe.</span></span> <span data-ttu-id="634a3-114">다른 모든 public 및 protected 멤버만 <xref:System.Collections.Concurrent.BlockingCollection%601> 는 스레드로부터 안전 하 고 여러 스레드에서 동시에 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-114">All other public and protected members of <xref:System.Collections.Concurrent.BlockingCollection%601> are thread-safe and may be used concurrently from multiple threads.</span></span>  
  
 <span data-ttu-id="634a3-115"><xref:System.Collections.Concurrent.IProducerConsumerCollection%601> 스레드로부터 안전한 추가 데이터 제거를 허용 하는 컬렉션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-115"><xref:System.Collections.Concurrent.IProducerConsumerCollection%601> represents a collection that allows for thread-safe adding and removal of data.</span></span> <span data-ttu-id="634a3-116"><xref:System.Collections.Concurrent.BlockingCollection%601> 에 대 한 래퍼로 사용 되는 <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> 인스턴스 및 데이터를 제거할 때까지 차단 컬렉션에서 제거 시도 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-116"><xref:System.Collections.Concurrent.BlockingCollection%601> is used as a wrapper for an <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> instance, and allows removal attempts from the collection to block until data is available to be removed.</span></span> <span data-ttu-id="634a3-117">마찬가지로, 만들 수 있습니다는 <xref:System.Collections.Concurrent.BlockingCollection%601> 에 허용 되는 데이터 요소의 수에 상한값을 적용 하는 <xref:System.Collections.Concurrent.IProducerConsumerCollection%601>; 공간 추가 항목을 저장할 수 있을 때까지 컬렉션에 추가 시도 차단 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-117">Similarly, you can create a <xref:System.Collections.Concurrent.BlockingCollection%601> to enforce an upper bound on the number of data elements allowed in the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601>; addition attempts to the collection may then block until space is available to store the added items.</span></span> <span data-ttu-id="634a3-118">이런 방식으로 <xref:System.Collections.Concurrent.BlockingCollection%601> 비슷합니다 기존의 차단 큐 데이터 구조를 제외 하 고 기본 데이터 저장소 메커니즘으로 동시에 추상화는 <xref:System.Collections.Concurrent.IProducerConsumerCollection%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-118">In this manner, <xref:System.Collections.Concurrent.BlockingCollection%601> is similar to a traditional blocking queue data structure, except that the underlying data storage mechanism is abstracted away as an <xref:System.Collections.Concurrent.IProducerConsumerCollection%601>.</span></span>  
  
 <span data-ttu-id="634a3-119"><xref:System.Collections.Concurrent.BlockingCollection%601>는 한계 지정 및 차단을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-119"><xref:System.Collections.Concurrent.BlockingCollection%601> supports bounding and blocking.</span></span> <span data-ttu-id="634a3-120">컬렉션의 최대 용량을 설정할 수 있다는 의미 경계입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-120">Bounding means that you can set the maximum capacity of the collection.</span></span> <span data-ttu-id="634a3-121">메모리에서 컬렉션의 최대 크기를 제어할 수 있습니다 및 공급자 스레드 스레드와 멀리 이동 되지 않도록 하기 때문에 한계 지정 하는 것은 특정 시나리오에서 중요 합니다. 다중 스레드 또는 작업 항목을 추가할 수는 컬렉션에 동시에 및 항목을 제거할 때까지 공급자 스레드를 차단 컬렉션에서 지정 된 최대 용량에 도달 하면 합니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-121">Bounding is important in certain scenarios because it enables you to control the maximum size of the collection in memory, and it prevents the producing threads from moving too far ahead of the consuming threads.Multiple threads or tasks can add items to the collection concurrently, and if the collection reaches its specified maximum capacity, the producing threads will block until an item is removed.</span></span> <span data-ttu-id="634a3-122">여러 소비자에서 항목을 동시에 제거할 수 있습니다. 컬렉션이 비어 있는 경우 공급자가 항목 하나를 추가할 때까지 소비자 스레드를 차단합니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-122">Multiple consumers can remove items concurrently, and if the collection becomes empty, the consuming threads will block until a producer adds an item.</span></span> <span data-ttu-id="634a3-123">생산 스레드 호출 수를 <xref:System.Collections.Concurrent.BlockingCollection%601.CompleteAdding%2A> 항목이 더 이상 추가 함을 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-123">A producing thread can call the <xref:System.Collections.Concurrent.BlockingCollection%601.CompleteAdding%2A> method to indicate that no more items will be added.</span></span> <span data-ttu-id="634a3-124">소비자 스레드는 컬렉션이 비어 있고 항목이 더 이상 추가되지 않는 시점을 파악하기 위해 <xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A> 속성을 모니터링합니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-124">Consumers monitor the <xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A> property to know when the collection is empty and no more items will be added.</span></span>  
  
 <span data-ttu-id="634a3-125"><xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> 및 <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> 루프 작업은 일반적으로 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-125"><xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> and <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> operations are typically performed in a loop.</span></span> <span data-ttu-id="634a3-126">전달 하 여 루프를 취소할 수 있습니다는 <xref:System.Threading.CancellationToken> 개체를 <xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A> 또는 <xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A> 메서드를 토큰의 값을 확인 한 다음 <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> 반복 될 때마다 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-126">You can cancel a loop by passing in a <xref:System.Threading.CancellationToken> object to the <xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A> or <xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A> method, and then checking the value of the token's <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> property on each iteration.</span></span> <span data-ttu-id="634a3-127">값이 `true`, 모든 리소스를 정리 하 고 루프를 종료 하 여 취소 요청에 응답 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-127">If the value is `true`, it is up to you to respond the cancellation request by cleaning up any resources and exiting the loop.</span></span>  
  
 <span data-ttu-id="634a3-128">만들 때를 <xref:System.Collections.Concurrent.BlockingCollection%601> 개체 한계 용량 뿐만 아니라 컬렉션의 형식을 사용 하도록 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-128">When you create a <xref:System.Collections.Concurrent.BlockingCollection%601> object, you can specify not only the bounded capacity but also the type of collection to use.</span></span> <span data-ttu-id="634a3-129">예를 들어 지정할 수 있습니다는 <xref:System.Collections.Concurrent.ConcurrentQueue%601> FIFO (선입 선출) 동작의 첫 번째에 대 한 개체 또는 <xref:System.Collections.Concurrent.ConcurrentStack%601> lifo (후입선출) 동작이 마지막에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-129">For example, you could specify a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object for first in, first out (FIFO) behavior, or a <xref:System.Collections.Concurrent.ConcurrentStack%601> object for last in, first out (LIFO) behavior.</span></span> <span data-ttu-id="634a3-130"><xref:System.Collections.Concurrent.IProducerConsumerCollection%601> 인터페이스를 구현하는 컬렉션 클래스를 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-130">You can use any collection class that implements the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span> <span data-ttu-id="634a3-131"><xref:System.Collections.Concurrent.BlockingCollection%601>의 기본 컬렉션 형식은 <xref:System.Collections.Concurrent.ConcurrentQueue%601>입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-131">The default collection type for <xref:System.Collections.Concurrent.BlockingCollection%601> is <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 <span data-ttu-id="634a3-132">기본 컬렉션을 직접 수정 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="634a3-132">Do not modify the underlying collection directly.</span></span> <span data-ttu-id="634a3-133">사용 하 여 <xref:System.Collections.Concurrent.BlockingCollection%601> 메서드를 추가 하 여 요소를 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-133">Use <xref:System.Collections.Concurrent.BlockingCollection%601> methods to add or remove elements.</span></span> <span data-ttu-id="634a3-134"><xref:System.Collections.Concurrent.BlockingCollection%601> 개체는 기본 컬렉션을 직접 변경 하는 경우 손상 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-134">The <xref:System.Collections.Concurrent.BlockingCollection%601> object can become corrupted if you change the underlying collection directly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634a3-135">다음 예제에서는 차단 컬렉션에서 동시에 항목을 추가 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-135">The following example shows how to add and take items concurrently from a blocking collection:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.BlockingCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/cs/blockingcoll.cs#1)]
 [!code-vb[System.Collections.Concurrent.BlockingCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/vb/blockingcoll.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="634a3-136">Dispose 메서드에서 스레드로부터 안전한 아닙니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="634a3-136">The Dispose method is not thread-safe.</span>
      </span>
      <span data-ttu-id="634a3-137">다른 모든 public 및 protected 멤버만 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 는 스레드로부터 안전 하 고 여러 스레드에서 동시에 사용할 수 있습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="634a3-137">All other public and protected members of <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> are thread-safe and may be used concurrently from multiple threads.</span>
      </span>
    </threadsafe>
    <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
      <span data-ttu-id="634a3-138">스레드로부터 안전한 컬렉션</span>
      <span class="sxs-lookup">
        <span data-stu-id="634a3-138">Thread-Safe Collections</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
      <span data-ttu-id="634a3-139">BlockingCollection 개요</span>
      <span class="sxs-lookup">
        <span data-stu-id="634a3-139">BlockingCollection Overview</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/4c2492de-3876-4873-b5a1-000bb404d770">
      <span data-ttu-id="634a3-140">방법: 경계 및 차단 컬렉션 클래스에 기능 추가</span>
      <span class="sxs-lookup">
        <span data-stu-id="634a3-140">How to: Add Bounding and Blocking Functionality to a Collection Class</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="634a3-141">상한을 사용하지 않고 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-141">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class without an upper-bound.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockingCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlockingCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="634a3-142">상한을 사용하지 않고 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-142">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class without an upper-bound.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-143">기본 내부 컬렉션은 한 <xref:System.Collections.Concurrent.ConcurrentQueue%601> FIFO (선입 선출) 동작이 먼저 제공 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-143">The default underlying collection is a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object, which provides first in, first out (FIFO) behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-144">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-144">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-145">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-145">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockingCollection (System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Concurrent.IProducerConsumerCollection`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IProducerConsumerCollection(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlockingCollection(System::Collections::Concurrent::IProducerConsumerCollection&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.BlockingCollection&lt;'T&gt; : System.Collections.Concurrent.IProducerConsumerCollection&lt;'T&gt; -&gt; System.Collections.Concurrent.BlockingCollection&lt;'T&gt;" Usage="new System.Collections.Concurrent.BlockingCollection&lt;'T&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="634a3-146">내부 데이터 저장소로 사용할 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-146">The collection to use as the underlying data store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-147">제공된 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />을 내부 데이터 저장소로 사용하고 상한이 없는 상태로 <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-147">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class without an upper-bound and using the provided <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> as its underlying data store.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="634a3-148">
            <paramref name="collection" /> 인수가 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-148">The <paramref name="collection" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-149">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-149">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-150">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-150">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockingCollection (int boundedCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 boundedCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (boundedCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlockingCollection(int boundedCapacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.BlockingCollection&lt;'T&gt; : int -&gt; System.Collections.Concurrent.BlockingCollection&lt;'T&gt;" Usage="new System.Collections.Concurrent.BlockingCollection&lt;'T&gt; boundedCapacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="boundedCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="boundedCapacity">
          <span data-ttu-id="634a3-151">컬렉션의 한계 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-151">The bounded size of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-152">지정된 상한을 사용하여 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-152">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class with the specified upper-bound.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-153">기본 내부 컬렉션은 한 <xref:System.Collections.Concurrent.ConcurrentQueue%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-153">The default underlying collection is a <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-154">
            <paramref name="boundedCapacity" />이 양수 값이 아닌 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-154">The <paramref name="boundedCapacity" /> is not a positive value.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-155">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-155">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-156">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-156">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockingCollection (System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt; collection, int boundedCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Concurrent.IProducerConsumerCollection`1&lt;!T&gt; collection, int32 boundedCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IProducerConsumerCollection(Of T), boundedCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BlockingCollection(System::Collections::Concurrent::IProducerConsumerCollection&lt;T&gt; ^ collection, int boundedCapacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.BlockingCollection&lt;'T&gt; : System.Collections.Concurrent.IProducerConsumerCollection&lt;'T&gt; * int -&gt; System.Collections.Concurrent.BlockingCollection&lt;'T&gt;" Usage="new System.Collections.Concurrent.BlockingCollection&lt;'T&gt; (collection, boundedCapacity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;" />
        <Parameter Name="boundedCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="634a3-157">내부 데이터 저장소로 사용할 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-157">The collection to use as the underlying data store.</span>
          </span>
        </param>
        <param name="boundedCapacity">
          <span data-ttu-id="634a3-158">컬렉션의 한계 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-158">The bounded size of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-159">제공된 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />을 내부 데이터 저장소로 사용하고 지정된 상한을 사용하여 <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-159">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class with the specified upper-bound and using the provided <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> as its underlying data store.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="634a3-160">
            <paramref name="collection" /> 인수가 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-160">The <paramref name="collection" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-161">
            <paramref name="boundedCapacity" />이 양수 값이 아닌 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-161">The <paramref name="boundedCapacity" /> is not a positive value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="634a3-162">제공된 <paramref name="collection" />에는 <paramref name="boundedCapacity" />에서 허용하는 것보다 더 많은 값이 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-162">The supplied <paramref name="collection" /> contains more values than is permitted by <paramref name="boundedCapacity" />.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-163">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-163">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-164">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-164">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="634a3-165">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />에 항목을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-165">Adds the item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span>
          </span>
        </summary>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-166">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-166">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-167">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-167">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(T item);" />
      <MemberSignature Language="F#" Value="member this.Add : 'T -&gt; unit" Usage="blockingCollection.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="634a3-168">컬렉션에 추가될 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-168">The item to be added to the collection.</span>
          </span>
          <span data-ttu-id="634a3-169">이 값은 null 참조일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-169">The value can be a null reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-170">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />에 항목을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-170">Adds the item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-171">제한 된 용량을 지정 하는 경우 경우이 인스턴스의 <xref:System.Collections.Concurrent.BlockingCollection%601> 된 초기화 추가에 대 한 호출까지 차단할 수 있습니다 공간이 제공된 된 항목을 저장할 수 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-171">If a bounded capacity was specified when this instance of <xref:System.Collections.Concurrent.BlockingCollection%601> was initialized, a call to Add may block until space is available to store the provided item.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-172">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-172">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-173">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />는 추가 관련하여 완료된 것으로 표시되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-173">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete with regards to additions.</span>
          </span>
          <span data-ttu-id="634a3-174">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-174">-or-</span>
          </span>
          <span data-ttu-id="634a3-175">기본 컬렉션에서 항목을 적용하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-175">The underlying collection didn't accept the item.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-176">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-176">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-177">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-177">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(!T item, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(T item, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Add : 'T * System.Threading.CancellationToken -&gt; unit" Usage="blockingCollection.Add (item, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="634a3-178">컬렉션에 추가될 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-178">The item to be added to the collection.</span>
          </span>
          <span data-ttu-id="634a3-179">이 값은 null 참조일 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-179">The value can be a null reference.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="634a3-180">관찰할 취소 토큰입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-180">A cancellation token to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-181">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />에 항목을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-181">Adds the item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-182">한계 용량이 지정 된 경우 경우이 인스턴스의 <xref:System.Collections.Concurrent.BlockingCollection%601> 초기화 된 호출 <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> 공간이 제공 된 항목을 저장할 때까지 차단 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-182">If a bounded capacity was specified when this instance of <xref:System.Collections.Concurrent.BlockingCollection%601> was initialized, a call to <xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A> may block until space is available to store the provided item.</span></span>  
  
 <span data-ttu-id="634a3-183">이 메서드를 사용 하 여 조기에 반환 수는 <xref:System.OperationCanceledException> 경우는 `cancellationToken` 취소 됩니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-183">This method can return early with an <xref:System.OperationCanceledException> if the `cancellationToken` is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="634a3-184">
            <see cref="T:System.Threading.CancellationToken" />이 취소된 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-184">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-185">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />이 삭제되었거나 <paramref name="cancellationToken" />을 소유한 <see cref="T:System.Threading.CancellationTokenSource" />가 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-185">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed or the <see cref="T:System.Threading.CancellationTokenSource" /> that owns <paramref name="cancellationToken" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-186">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />는 추가 관련하여 완료된 것으로 표시되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-186">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete with regards to additions.</span>
          </span>
          <span data-ttu-id="634a3-187">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-187">-or-</span>
          </span>
          <span data-ttu-id="634a3-188">기본 컬렉션에서 항목을 적용하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-188">The underlying collection didn't accept the item.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-189">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-189">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-190">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-190">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddToAny">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="634a3-191">지정된 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 중 하나에 지정된 항목을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-191">Adds the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddToAny">
      <MemberSignature Language="C#" Value="public static int AddToAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AddToAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddToAny (collections As BlockingCollection(Of T)(), item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AddToAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, T item);" />
      <MemberSignature Language="F#" Value="static member AddToAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.AddToAny (collections, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="collections">
          <span data-ttu-id="634a3-192">컬렉션의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-192">The array of collections.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="634a3-193">컬렉션 중 하나에 추가될 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-193">The item to be added to one of the collections.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-194">지정된 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 중 하나에 지정된 항목을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-194">Adds the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-195">
            <paramref name="collections" /> 배열에서 항목이 추가된 컬렉션의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-195">The index of the collection in the <paramref name="collections" /> array to which the item was added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-196">제한 된 용량을 지정 하는 경우 때 모든는 <xref:System.Collections.Concurrent.BlockingCollection%601> 인스턴스가 초기화 된, 제공 된 항목을 저장할 컬렉션 중 하나에서 사용 가능한 공간이 생길 때까지 호출 AddToAny 차단할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-196">If a bounded capacity was specified when all of the <xref:System.Collections.Concurrent.BlockingCollection%601> instances were initialized, a call to AddToAny may block until space is available in one of the collections to store the provided item.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-197">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스가 하나 이상 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-197">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="634a3-198">
            <paramref name="collections" /> 인수가 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-198">The <paramref name="collections" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-199">
            <paramref name="collections" /> 횟수가 최대 크기(STA의 경우 62, MTA의 경우 63)보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-199">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="634a3-200">
            <paramref name="collections" /> 인수가 길이가 0 인 배열이거나 Null 요소를 포함하거나 또는 컬렉션 중 하나 이상이 추가를 완료한 것으로 표시되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-200">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-201">하나 이상의 기본 컬렉션에서 항목을 허용하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-201">At least one underlying collection didn't accept the item.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-202">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-202">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-203">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-203">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AddToAny">
      <MemberSignature Language="C#" Value="public static int AddToAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, T item, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AddToAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, !T item, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AddToAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, T item, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member AddToAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T * System.Threading.CancellationToken -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.AddToAny (collections, item, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="collections">
          <span data-ttu-id="634a3-204">컬렉션의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-204">The array of collections.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="634a3-205">컬렉션 중 하나에 추가될 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-205">The item to be added to one of the collections.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="634a3-206">관찰할 취소 토큰입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-206">A cancellation token to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-207">지정된 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 중 하나에 지정된 항목을 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-207">Adds the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-208">
            <paramref name="collections" /> 배열에서 항목이 추가된 컬렉션의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-208">The index of the collection in the <paramref name="collections" /> array to which the item was added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-209">제한 된 용량을 지정 하는 경우 때 모든는 <xref:System.Collections.Concurrent.BlockingCollection%601> 인스턴스가 초기화 된, 제공 된 항목을 저장할 컬렉션 중 하나에서 사용 가능한 공간이 생길 때까지 호출 AddToAny 차단할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-209">If a bounded capacity was specified when all of the <xref:System.Collections.Concurrent.BlockingCollection%601> instances were initialized, a call to AddToAny may block until space is available in one of the collections to store the provided item.</span></span> <span data-ttu-id="634a3-210">이 메서드는 경우 항목 컬렉션에 추가 되기 전에 반환할 수 있습니다는 `cancellationToken` 공간이 전에 취소 됩니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-210">This method may return before the item is added to any collection if the `cancellationToken` is canceled before space is available.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="634a3-211">
            <see cref="T:System.Threading.CancellationToken" />이 취소된 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-211">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-212">하나 이상의 기본 컬렉션에서 항목을 허용하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-212">At least one underlying collection didn't accept the item.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="634a3-213">
            <paramref name="collections" /> 인수가 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-213">The <paramref name="collections" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-214">
            <paramref name="collections" /> 횟수가 최대 크기(STA의 경우 62, MTA의 경우 63)보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-214">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="634a3-215">
            <paramref name="collections" /> 인수가 길이가 0 인 배열이거나 Null 요소를 포함하거나 또는 컬렉션 중 하나 이상이 추가를 완료한 것으로 표시되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-215">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-216">
            <paramref name="cancellationToken" />을 만든 하나 이상의 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 또는 <see cref="T:System.Threading.CancellationTokenSource" />가 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-216">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed, or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-217">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-217">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-218">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-218">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BoundedCapacity">
      <MemberSignature Language="C#" Value="public int BoundedCapacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BoundedCapacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.BlockingCollection`1.BoundedCapacity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundedCapacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BoundedCapacity { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BoundedCapacity : int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.BoundedCapacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="634a3-219">이 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스의 한계 용량을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-219">Gets the bounded capacity of this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="634a3-220">이 컬렉션의 한계 용량이거나 int.MaxValue(제공된 한계가 없는 경우)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-220">The bounded capacity of this collection, or int.MaxValue if no bound was supplied.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-221">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-221">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-222">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-222">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-223">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-223">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompleteAdding">
      <MemberSignature Language="C#" Value="public void CompleteAdding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompleteAdding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompleteAdding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompleteAdding();" />
      <MemberSignature Language="F#" Value="member this.CompleteAdding : unit -&gt; unit" Usage="blockingCollection.CompleteAdding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="634a3-224">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스를 더 이상 추가를 허용하지 않는 상태로 표시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-224">Marks the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances as not accepting any more additions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-225">컬렉션 추가 대해 완료 상태로 표시 되었는지, 컬렉션에 추가할 수 없습니다 후 컬렉션이 비어 있는 경우 컬렉션에서 제거 하려고 대기 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-225">After a collection has been marked as complete for adding, adding to the collection is not permitted and attempts to remove from the collection will not wait when the collection is empty.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-226">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-226">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-227">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-227">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-228">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-228">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : 'T[] * int -&gt; unit" Usage="blockingCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="634a3-229">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스에서 복사한 요소의 대상인 1차원 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-229">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span>
          </span>
          <span data-ttu-id="634a3-230">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-230">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="634a3-231">
            <paramref name="array" />에서 복사가 시작되는 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-231">The zero-based index in <paramref name="array" /> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-232">대상 배열의 지정된 인덱스부터 시작하여 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스의 모든 항목을 호환되는 1차원 배열에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-232">Copies all of the items in the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance to a compatible one-dimensional array, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-233">CopyTo 스냅숏을 시간 정확한 시점 컬렉션을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-233">CopyTo represents a snapshot of the collection at a precise point in time.</span></span> <span data-ttu-id="634a3-234">다른 스레드를 추가 또는 CopyTo 실행 되는 동안 항목을 제거할 경우 CopyTo 반환 하는 요소 컬렉션의 상태를 나타내지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-234">If other threads are adding or removing items while CopyTo is executing, then the elements returned by CopyTo might not represent the state of the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-235">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-235">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="634a3-236">
            <paramref name="array" /> 인수가 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-236">The <paramref name="array" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-237">
            <paramref name="index" /> 인수가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-237">The <paramref name="index" /> argument is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="634a3-238">
            <paramref name="index" /> 인수는 <paramref name="array" /> 길이보다 크거나 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-238">The <paramref name="index" /> argument is equal to or greater than the length of the <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="634a3-239">대상 배열이 모든 BlockingCcollection 요소를 수용하기에는 너무 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-239">The destination array is too small to hold all of the BlockingCcollection elements.</span>
          </span>
          <span data-ttu-id="634a3-240">배열 차수가 일치하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-240">The array rank doesn't match.</span>
          </span>
          <span data-ttu-id="634a3-241">배열 형식은 BlockingCollection 요소의 형식과 호환되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-241">The array type is incompatible with the type of the BlockingCollection elements.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-242">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-242">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-243">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-243">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.BlockingCollection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="634a3-244">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />에 들어 있는 항목 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-244">Gets the number of items contained in the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="634a3-245">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />에 들어 있는 항목 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-245">The number of items contained in the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-246">Count 속성 accessd 되는 동안 BlockingCollection의 모든 메서드가 실행 되는 경우 반환 값은 근사치입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-246">If any method in BlockingCollection is executing while the Count property is being accessd, the return value is approximate.</span></span> <span data-ttu-id="634a3-247">개수 중 하나는 숫자를 반영할 수 있습니다 크거나 실제 상태에서 BlockingCollection의 항목 수보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-247">Count may reflect a number that is either greater than or less than the actual number of items in the BlockingCollection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-248">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-248">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-249">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-249">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-250">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-250">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="634a3-251">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-251">Releases all resources used by the current instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="blockingCollection.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="634a3-252">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-252">Releases all resources used by the current instance of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-253">`Dispose` 메서드는 스레드로부터 안전 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-253">The `Dispose` method is not thread-safe.</span></span>  
  
 <span data-ttu-id="634a3-254">`Dispose` 사용을 마치면 <xref:System.Collections.Concurrent.BlockingCollection%601>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-254">Call `Dispose` when you are finished using the <xref:System.Collections.Concurrent.BlockingCollection%601>.</span></span> <span data-ttu-id="634a3-255">`Dispose` 메서드를 사용하면 <xref:System.Collections.Concurrent.BlockingCollection%601>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-255">The `Dispose` method leaves the <xref:System.Collections.Concurrent.BlockingCollection%601> in an unusable state.</span></span> <span data-ttu-id="634a3-256">호출한 후 `Dispose`에 대 한 모든 참조를 해제 해야 합니다 <xref:System.Collections.Concurrent.BlockingCollection%601> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.Collections.Concurrent.BlockingCollection%601> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-256">After calling `Dispose`, you must release all references to the <xref:System.Collections.Concurrent.BlockingCollection%601> so the garbage collector can reclaim the memory that the <xref:System.Collections.Concurrent.BlockingCollection%601> was occupying.</span></span>  
  
 <span data-ttu-id="634a3-257">자세한 내용은 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 하 고 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-257">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="634a3-258">`Dispose`에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Collections.Concurrent.BlockingCollection%601>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="634a3-258">Always call `Dispose` before you release your last reference to the <xref:System.Collections.Concurrent.BlockingCollection%601>.</span></span> <span data-ttu-id="634a3-259">이렇게 하지 않으면 가비지 수집기가 <xref:System.Collections.Concurrent.BlockingCollection%601> 개체의 `Finalize` 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-259">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Collections.Concurrent.BlockingCollection%601> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-260">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-260">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-261">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-261">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="blockingCollection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="634a3-262">명시적으로 삭제할지(true) 아니면 종료자로 삭제할지(false) 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-262">Whether being disposed explicitly (true) or due to a finalizer (false).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-263">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스에서 사용하는 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-263">Releases resources used by the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-264">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-264">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-265">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-265">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConsumingEnumerable">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="634a3-266">컬렉션에 있는 항목에 사용하는 <see cref="T:System.Collections.Generic.IEnumerator`1" />을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-266">Provides a consuming <see cref="T:System.Collections.Generic.IEnumerator`1" /> for items in the collection.</span>
          </span>
        </summary>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-267">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-267">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-268">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-268">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConsumingEnumerable">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; GetConsumingEnumerable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!T&gt; GetConsumingEnumerable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConsumingEnumerable () As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetConsumingEnumerable();" />
      <MemberSignature Language="F#" Value="member this.GetConsumingEnumerable : unit -&gt; seq&lt;'T&gt;" Usage="blockingCollection.GetConsumingEnumerable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="634a3-269">컬렉션에 있는 항목에 사용하는 <see cref="T:System.Collections.Generic.IEnumerator`1" />을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-269">Provides a consuming <see cref="T:System.Collections.Generic.IEnumerator`1" /> for items in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-270">컬렉션에서 항목을 제거하고 반환하는 <see cref="T:System.Collections.Generic.IEnumerable`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-270">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that removes and returns items from the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="634a3-271">다음 예제에서는 사용 하는 방법의 <xref:System.Collections.Concurrent.BlockingCollection%601.GetConsumingEnumerable%2A> 메서드:</span><span class="sxs-lookup"><span data-stu-id="634a3-271">The following example shows how to use the <xref:System.Collections.Concurrent.BlockingCollection%601.GetConsumingEnumerable%2A> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.BlockingCollection#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/cs/blockingcoll.cs#4)]
 [!code-vb[System.Collections.Concurrent.BlockingCollection#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/vb/blockingcoll.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-272">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-272">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-273">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-273">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-274">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-274">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetConsumingEnumerable">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; GetConsumingEnumerable (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!T&gt; GetConsumingEnumerable(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetConsumingEnumerable(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.GetConsumingEnumerable : System.Threading.CancellationToken -&gt; seq&lt;'T&gt;" Usage="blockingCollection.GetConsumingEnumerable cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Collections.Concurrent.BlockingCollection`1/&lt;GetConsumingEnumerable&gt;d__2))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Collections.Concurrent.BlockingCollection`1/&lt;GetConsumingEnumerable&gt;d__68))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="634a3-275">관찰할 취소 토큰입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-275">A cancellation token to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-276">컬렉션에 있는 항목에 사용하는 <see cref="T:System.Collections.Generic.IEnumerable`1" />을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-276">Provides a consuming <see cref="T:System.Collections.Generic.IEnumerable`1" /> for items in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-277">컬렉션에서 항목을 제거하고 반환하는 <see cref="T:System.Collections.Generic.IEnumerable`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-277">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that removes and returns items from the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-278">이 메서드를 사용 하면 클라이언트 코드 (각의 Visual Basic)에 대해 foreach 루프를 사용 하 여 컬렉션에서 항목을 제거 하거나 <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> 또는 PLINQ 쿼리 합니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-278">This method enables client code to remove items from the collection by using a foreach loop (For Each in Visual Basic), or <xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType> or a PLINQ query.</span></span> <span data-ttu-id="634a3-279">열거자를 계속 제공할 항목 (있는 경우)까지 <xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A> true를 반환 경우 <xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A> isfalse 루프 블록 항목이 사용 가능할 때까지 또는까지 <xref:System.Threading.CancellationToken> 취소 됩니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-279">The enumerator will continue to provide items (if any exist) until <xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A> returns true, and if <xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A> is false the loop blocks until an item becomes available or until the <xref:System.Threading.CancellationToken> is cancelled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="634a3-280">
            <see cref="T:System.Threading.CancellationToken" />이 취소된 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-280">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-281">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />이 삭제되었거나 <paramref name="cancellationToken" />을 만든 <see cref="T:System.Threading.CancellationTokenSource" />가 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-281">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-282">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-282">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-283">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-283">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IsAddingCompleted">
      <MemberSignature Language="C#" Value="public bool IsAddingCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddingCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.BlockingCollection`1.IsAddingCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAddingCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddingCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAddingCompleted : bool" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.IsAddingCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="634a3-284">이 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />이 추가에 대해 완료 상태로 표시되었는지 여부를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-284">Gets whether this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete for adding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="634a3-285">이 컬렉션이 추가에 대해 완료 상태로 표시되었는지 여부입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-285">Whether this collection has been marked as complete for adding.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-286">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-286">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-287">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-287">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-288">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-288">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.BlockingCollection`1.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="634a3-289">이 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />이 추가에 대해 완료 상태로 표시되었으며 비어 있는지 여부를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-289">Gets whether this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete for adding and is empty.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="634a3-290">이 컬렉션이 추가에 대해 완료 상태로 표시되었으며 비어 있는지 여부입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-290">Whether this collection has been marked as complete for adding and is empty.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-291">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-291">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-292">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-292">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-293">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-293">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="634a3-294">컬렉션에 있는 항목에 대한 <see cref="T:System.Collections.Generic.IEnumerator`1" />을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-294">Provides an <see cref="T:System.Collections.Generic.IEnumerator`1" /> for items in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-295">컬렉션에 있는 항목에 대한 <see cref="T:System.Collections.Generic.IEnumerator`1" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-295">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the items in the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-296">와 달리 <xref:System.Collections.Concurrent.BlockingCollection%601.GetConsumingEnumerable%2A>, <xref:System.Collections.Concurrent.BlockingCollection%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A?displayProperty=nameWithType> 기본 컬렉션을 수정 하지 않는 표준 열거자를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-296">Unlike <xref:System.Collections.Concurrent.BlockingCollection%601.GetConsumingEnumerable%2A>, <xref:System.Collections.Concurrent.BlockingCollection%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A?displayProperty=nameWithType> returns a standard enumerator that does not modify the underlying collection.</span></span> <span data-ttu-id="634a3-297">다른 스레드를 추가 또는 GetEnumerator 호출 될 때에 동시에 요소를 제거 하는 경우 열거자에서 반환한 요소 컬렉션의 현재 상태를 나타내지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-297">If other threads are adding or removing elements concurrently when GetEnumerator is called, then the elements returned by the enumerator might not represent the current state of the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-298">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-298">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-299">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-299">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-300">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-300">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="634a3-301">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스에서 복사한 요소의 대상인 1차원 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-301">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span>
          </span>
          <span data-ttu-id="634a3-302">배열에는 0부터 시작하는 인덱스가 있어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-302">The array must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="634a3-303">
            <paramref name="array" />에서 복사가 시작되는 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-303">The zero-based index in <paramref name="array" /> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-304">대상 배열의 지정된 인덱스부터 시작하여 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스의 모든 항목을 호환되는 1차원 배열에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-304">Copies all of the items in the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance to a compatible one-dimensional array, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-305">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-305">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="634a3-306">
            <paramref name="array" /> 인수가 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-306">The <paramref name="array" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-307">
            <paramref name="index" /> 인수가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-307">The <paramref name="index" /> argument is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="634a3-308">
            <paramref name="index" /> 인수는 <paramref name="array" /> 길이보다 크거나 같으며, 배열은 다차원이거나 컬렉션에 대한 형식 매개 변수는 대상 배열 형식에 자동으로 캐스팅될 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-308">The <paramref name="index" /> argument is equal to or greater than the length of the <paramref name="array" />, the array is multidimensional, or the type parameter for the collection cannot be cast automatically to the type of the destination array.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-309">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-309">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-310">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-310">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="634a3-311">
            <see cref="T:System.Collections.ICollection" />에 대한 액세스가 동기화되는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-311">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="634a3-312">항상 false를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-312">always returns false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-313">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-313">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-314">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-314">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-315">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-315">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="634a3-316">
            <see cref="T:System.Collections.ICollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-316">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="634a3-317">이 속성이 지원되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-317">This property is not supported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="634a3-318">null을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-318">returns null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="634a3-319">SyncRoot 속성은 지원되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-319">The SyncRoot property is not supported.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-320">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-320">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-321">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-321">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="634a3-322">컬렉션에 있는 항목에 대한 <see cref="T:System.Collections.IEnumerator" />을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-322">Provides an <see cref="T:System.Collections.IEnumerator" /> for items in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-323">컬렉션에 있는 항목에 대한 <see cref="T:System.Collections.IEnumerator" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-323">An <see cref="T:System.Collections.IEnumerator" /> for the items in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-324">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-324">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-325">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-325">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-326">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-326">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Take">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="634a3-327">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />에서 항목을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-327">Removes an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span>
          </span>
        </summary>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-328">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-328">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-329">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-329">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Take">
      <MemberSignature Language="C#" Value="public T Take ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Take() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.Take" />
      <MemberSignature Language="VB.NET" Value="Public Function Take () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Take();" />
      <MemberSignature Language="F#" Value="member this.Take : unit -&gt; 'T" Usage="blockingCollection.Take " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="634a3-330">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />에서 항목을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-330">Removes  an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-331">컬렉션에서 제거된 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-331">The item removed from the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-332">에 대 한 호출 <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> 항목을 제거할 수 있을 때까지 차단할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-332">A call to <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> may block until an item is available to be removed.</span></span>  
  
 <span data-ttu-id="634a3-333">항목이 제거 되는 순서를 만드는 데 사용 되는 컬렉션의 형식에 따라 달라 집니다는 <xref:System.Collections.Concurrent.BlockingCollection%601> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="634a3-333">The order in which an item is removed depends on the type of collection used to create the <xref:System.Collections.Concurrent.BlockingCollection%601> instance.</span></span> <span data-ttu-id="634a3-334">만들 때를 <xref:System.Collections.Concurrent.BlockingCollection%601> 개체를 사용 하는 컬렉션의 형식을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-334">When you create a <xref:System.Collections.Concurrent.BlockingCollection%601> object, you can specify the type of collection to use.</span></span> <span data-ttu-id="634a3-335">예를 들어 지정할 수 있습니다는 <xref:System.Collections.Concurrent.ConcurrentQueue%601> FIFO (선입 선출) 동작의 첫 번째에 대 한 개체 또는 <xref:System.Collections.Concurrent.ConcurrentStack%601> lifo (후입선출) 동작이 마지막에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-335">For example, you could specify a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object for first in, first out (FIFO) behavior, or a <xref:System.Collections.Concurrent.ConcurrentStack%601> object for last in, first out (LIFO) behavior.</span></span> <span data-ttu-id="634a3-336"><xref:System.Collections.Concurrent.IProducerConsumerCollection%601> 인터페이스를 구현하는 컬렉션 클래스를 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-336">You can use any collection class that implements the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span> <span data-ttu-id="634a3-337"><xref:System.Collections.Concurrent.BlockingCollection%601>의 기본 컬렉션 형식은 <xref:System.Collections.Concurrent.ConcurrentQueue%601>입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-337">The default collection type for <xref:System.Collections.Concurrent.BlockingCollection%601> is <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-338">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-338">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-339">내부 컬렉션은 이 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 외부에서 수정되었습니다. 그렇지 않으면 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />이 비어 있거나 컬렉션이 추가를 완료한 것으로 표시됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-339">The underlying collection was modified outside of this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance, or the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> is empty and the collection has been marked as complete for adding.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-340">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-340">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-341">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-341">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Take">
      <MemberSignature Language="C#" Value="public T Take (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Take(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Take(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Take : System.Threading.CancellationToken -&gt; 'T" Usage="blockingCollection.Take cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="634a3-342">빼내기 작업을 취소하는 데 사용할 수 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-342">Object that can be used to cancel the take operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-343">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />에서 항목을 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-343">Removes an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-344">컬렉션에서 제거된 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-344">The item removed from the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-345">에 대 한 호출 <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> 제거할 항목 수 또는 토큰이 취소 될 때까지 차단 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-345">A call to <xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A> may block until an item is available to be removed or the token is canceled.</span></span>  
  
 <span data-ttu-id="634a3-346">항목이 제거 되는 순서를 만드는 데 사용 되는 컬렉션의 형식에 따라 달라 집니다는 <xref:System.Collections.Concurrent.BlockingCollection%601> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="634a3-346">The order in which an item is removed depends on the type of collection used to create the <xref:System.Collections.Concurrent.BlockingCollection%601> instance.</span></span> <span data-ttu-id="634a3-347">만들 때를 <xref:System.Collections.Concurrent.BlockingCollection%601> 개체를 사용 하는 컬렉션의 형식을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-347">When you create a <xref:System.Collections.Concurrent.BlockingCollection%601> object, you can specify the type of collection to use.</span></span> <span data-ttu-id="634a3-348">예를 들어 지정할 수 있습니다는 <xref:System.Collections.Concurrent.ConcurrentQueue%601> FIFO (선입 선출) 동작의 첫 번째에 대 한 개체 또는 <xref:System.Collections.Concurrent.ConcurrentStack%601> lifo (후입선출) 동작이 마지막에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-348">For example, you could specify a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object for first in, first out (FIFO) behavior, or a <xref:System.Collections.Concurrent.ConcurrentStack%601> object for last in, first out (LIFO) behavior.</span></span> <span data-ttu-id="634a3-349"><xref:System.Collections.Concurrent.IProducerConsumerCollection%601> 인터페이스를 구현하는 컬렉션 클래스를 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-349">You can use any collection class that implements the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span> <span data-ttu-id="634a3-350"><xref:System.Collections.Concurrent.BlockingCollection%601>의 기본 컬렉션 형식은 <xref:System.Collections.Concurrent.ConcurrentQueue%601>입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-350">The default collection type for <xref:System.Collections.Concurrent.BlockingCollection%601> is <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="634a3-351">
            <see cref="T:System.Threading.CancellationToken" />이 취소되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-351">The <see cref="T:System.Threading.CancellationToken" /> is canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-352">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />이 삭제되었거나 토큰을 만든 <see cref="T:System.Threading.CancellationTokenSource" />가 취소되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-352">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed or the <see cref="T:System.Threading.CancellationTokenSource" /> that created the token was canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-353">내부 컬렉션은 이 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 외부에서 수정되었습니다. 그렇지 않으면 BlockingCollection은 추가를 완료한 것으로 표시되거나 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />이 비어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-353">The underlying collection was modified outside of this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance or the BlockingCollection is marked as complete for adding, or the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> is empty.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-354">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-354">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-355">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-355">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TakeFromAny">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="634a3-356">지정된 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 중 하나에서 항목을 빼냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-356">Takes an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span>
          </span>
        </summary>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-357">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-357">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-358">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-358">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="TakeFromAny">
      <MemberSignature Language="C#" Value="public static int TakeFromAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, out T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TakeFromAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, [out] !T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TakeFromAny (collections As BlockingCollection(Of T)(), ByRef item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TakeFromAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="static member TakeFromAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] *  -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TakeFromAny (collections, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="collections">
          <span data-ttu-id="634a3-359">컬렉션의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-359">The array of collections.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="634a3-360">컬렉션 중 하나에서 제거된 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-360">The item removed from one of the collections.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-361">지정된 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 중 하나에서 항목을 빼냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-361">Takes an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-362">
            <paramref name="collections" /> 배열에서 항목이 제거된 컬렉션의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-362">The index of the collection in the <paramref name="collections" /> array from which the item was removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-363">항목이 제거 될 수 있을 때까지 호출 takefromany가을 차단할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-363">A call to TakeFromAny may block until an item is available to be removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-364">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스가 하나 이상 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-364">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="634a3-365">
            <paramref name="collections" /> 인수가 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-365">The <paramref name="collections" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-366">
            <paramref name="collections" /> 횟수가 최대 크기(STA의 경우 62, MTA의 경우 63)보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-366">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="634a3-367">
            <paramref name="collections" /> 인수가 길이가 0 인 배열이거나 Null 요소를 포함하거나 <see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" />이 컬렉션에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-367">The <paramref name="collections" /> argument is a 0-length array or contains a null element or <see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" /> has been called on the collection.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-368">기본 컬렉션 중 하나 이상이 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 외부에서 수정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-368">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-369">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-369">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-370">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-370">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TakeFromAny">
      <MemberSignature Language="C#" Value="public static int TakeFromAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, out T item, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TakeFromAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, [out] !T&amp; item, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TakeFromAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, [Runtime::InteropServices::Out] T % item, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member TakeFromAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] *  * System.Threading.CancellationToken -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TakeFromAny (collections, item, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" RefType="out" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="collections">
          <span data-ttu-id="634a3-371">컬렉션의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-371">The array of collections.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="634a3-372">컬렉션 중 하나에서 제거된 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-372">The item removed from one of the collections.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="634a3-373">관찰할 취소 토큰입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-373">A cancellation token to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-374">지정된 취소 토큰을 관찰하는 동안 지정된 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 중 하나에서 항목을 빼냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-374">Takes an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances while observing the specified cancellation token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-375">
            <paramref name="collections" /> 배열에서 항목이 제거된 컬렉션의 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-375">The index of the collection in the <paramref name="collections" /> array from which the item was removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-376">항목이 제거 될 수 있을 때까지 호출 takefromany가을 차단할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-376">A call to TakeFromAny may block until an item is available to be removed.</span></span> <span data-ttu-id="634a3-377">메서드는 토큰이 취소 될 경우는 OperationCanceledException을 사용 하 여 초기 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-377">The method will return early with an OperationCanceledException if the token is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="634a3-378">
            <see cref="T:System.Threading.CancellationToken" />이 취소된 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-378">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-379">기본 컬렉션 중 하나 이상이 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 외부에서 수정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-379">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="634a3-380">
            <paramref name="collections" /> 인수가 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-380">The <paramref name="collections" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-381">
            <paramref name="collections" /> 횟수가 최대 크기(STA의 경우 62, MTA의 경우 63)보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-381">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="634a3-382">
            <paramref name="collections" /> 인수가 길이가 0 인 배열이거나 Null 요소를 포함하거나 <see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" />이 컬렉션에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-382">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or <see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" /> has been called on the collection.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-383">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스가 하나 이상 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-383">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-384">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-384">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-385">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-385">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; 'T[]" Usage="blockingCollection.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="634a3-386">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스의 항목을 새 배열로 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-386">Copies the items from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance into a new array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-387">컬렉션의 요소 복사본을 포함하는 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-387">An array containing copies of the elements of the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-388">복사 된 요소 컬렉션에서 제거 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-388">The copied elements are not removed from the collection.</span></span>  
  
 <span data-ttu-id="634a3-389">ToArray 메서드 실행 되는 동안 BlockingCollection의 모든 메서드가 실행 되는 경우 반환 값은 근사치입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-389">If any method in BlockingCollection is executing while the ToArray method executes, the return value is approximate.</span></span> <span data-ttu-id="634a3-390">ToArray 이미 제거 된 항목을 포함 또는 이미 삽입 된 항목을 제외할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-390">ToArray  may include items that have already been removed, or exclude items that have already been inserted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-391">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-391">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-392">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-392">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-393">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-393">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryAdd">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="634a3-394">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />에 지정된 항목을 추가하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-394">Tries to add the specified item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdd(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(T item);" />
      <MemberSignature Language="F#" Value="member this.TryAdd : 'T -&gt; bool" Usage="blockingCollection.TryAdd item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="634a3-395">컬렉션에 추가될 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-395">The item to be added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-396">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />에 지정된 항목을 추가하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-396">Tries to add the specified item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-397">
            <paramref name="item" />을 추가할 수 있는 경우 true이고 그렇지 않으면 false입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-397">true if <paramref name="item" /> could be added; otherwise false.</span>
          </span>
          <span data-ttu-id="634a3-398">항목이 중복이고 기본 컬렉션에서 중복 항목을 받아들이지 않는 경우에는 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-398">If the item is a duplicate, and the underlying collection does not accept duplicate items, then an <see cref="T:System.InvalidOperationException" /> is thrown.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-399">컬렉션은 바인딩된 컬렉션 이며 전체에이 메서드가 즉시 반환 false 항목을 추가 하지 않고 합니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-399">If the collection is a bounded collection, and is full, this method immediately returns false without adding the item.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-400">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-400">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-401">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />는 추가 관련하여 완료된 것으로 표시되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-401">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete with regards to additions.</span>
          </span>
          <span data-ttu-id="634a3-402">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-402">-or-</span>
          </span>
          <span data-ttu-id="634a3-403">기본 컬렉션에서 항목을 적용하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-403">The underlying collection didn't accept the item.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-404">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-404">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-405">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-405">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (T item, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdd(!T item, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (item As T, millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(T item, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="member this.TryAdd : 'T * int -&gt; bool" Usage="blockingCollection.TryAdd (item, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="634a3-406">컬렉션에 추가될 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-406">The item to be added to the collection.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="634a3-407">대기할 시간(밀리초)이거나, 무기한 대기할 경우 <see cref="F:System.Threading.Timeout.Infinite" />(-1)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-407">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-408">지정된 시간 안에 지정된 항목을 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />에 추가하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-408">Tries to add the specified item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> within the specified time period.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-409">지정된 시간 안에 <paramref name="item" />을 컬렉션에 추가할 수 있으면 true이고, 그렇지 않으면 false입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-409">true if the <paramref name="item" /> could be added to the collection within the specified time; otherwise, false.</span>
          </span>
          <span data-ttu-id="634a3-410">항목이 중복이고 기본 컬렉션에서 중복 항목을 받아들이지 않는 경우에는 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-410">If the item is a duplicate, and the underlying collection does not accept duplicate items, then an <see cref="T:System.InvalidOperationException" /> is thrown.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-411">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-411">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-412">
            <paramref name="millisecondsTimeout" />이 시간 제한 없음을 나타내는 -1 이외의 음수인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-412">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-413">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />는 추가 관련하여 완료된 것으로 표시되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-413">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete with regards to additions.</span>
          </span>
          <span data-ttu-id="634a3-414">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-414">-or-</span>
          </span>
          <span data-ttu-id="634a3-415">기본 컬렉션에서 항목을 적용하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-415">The underlying collection didn't accept the item.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-416">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-416">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-417">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-417">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (T item, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdd(!T item, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (item As T, timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(T item, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.TryAdd : 'T * TimeSpan -&gt; bool" Usage="blockingCollection.TryAdd (item, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="634a3-418">컬렉션에 추가될 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-418">The item to be added to the collection.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="634a3-419">대기할 시간(밀리초)을 나타내는 <see cref="T:System.TimeSpan" />이거나, 무한 대기하도록 -1밀리초를 나타내는 <see cref="T:System.TimeSpan" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-419">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-420">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />에 지정된 항목을 추가하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-420">Tries to add the specified item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-421">지정된 시간 범위 안에 <paramref name="item" />을 컬렉션에 추가할 수 있으면 true이고, 그렇지 않으면 false입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-421">true if the <paramref name="item" /> could be added to the collection within the specified time span; otherwise, false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-422">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-422">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-423">
            <paramref name="timeout" />이 무기한 시간 제한을 나타내는 -1밀리초 이외의 음수이거나 시간 제한이 <see cref="F:System.Int32.MaxValue" />보다 큰 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-423">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-424">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />는 추가 관련하여 완료된 것으로 표시되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-424">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete with regards to additions.</span>
          </span>
          <span data-ttu-id="634a3-425">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-425">-or-</span>
          </span>
          <span data-ttu-id="634a3-426">기본 컬렉션에서 항목을 적용하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-426">The underlying collection didn't accept the item.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-427">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-427">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-428">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-428">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (T item, int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdd(!T item, int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(T item, int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.TryAdd : 'T * int * System.Threading.CancellationToken -&gt; bool" Usage="blockingCollection.TryAdd (item, millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="634a3-429">컬렉션에 추가될 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-429">The item to be added to the collection.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="634a3-430">대기할 시간(밀리초)이거나, 무기한 대기할 경우 <see cref="F:System.Threading.Timeout.Infinite" />(-1)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-430">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="634a3-431">관찰할 취소 토큰입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-431">A cancellation token to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-432">취소 토큰을 관찰하는 동안 지정된 시간 안에 지정된 항목을 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />에 추가하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-432">Tries to add the specified item to the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> within the specified time period, while observing a cancellation token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-433">지정된 시간 안에 <paramref name="item" />을 컬렉션에 추가할 수 있으면 true이고, 그렇지 않으면 false입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-433">true if the <paramref name="item" /> could be added to the collection within the specified time; otherwise, false.</span>
          </span>
          <span data-ttu-id="634a3-434">항목이 중복이고 기본 컬렉션에서 중복 항목을 받아들이지 않는 경우에는 <see cref="T:System.InvalidOperationException" />이 throw됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-434">If the item is a duplicate, and the underlying collection does not accept duplicate items, then an <see cref="T:System.InvalidOperationException" /> is thrown.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="634a3-435">
            <see cref="T:System.Threading.CancellationToken" />이 취소된 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-435">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-436">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />이 삭제되었거나 기본 <see cref="T:System.Threading.CancellationTokenSource" />가 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-436">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed or the underlying <see cref="T:System.Threading.CancellationTokenSource" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-437">
            <paramref name="millisecondsTimeout" />이 시간 제한 없음을 나타내는 -1 이외의 음수인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-437">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-438">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />는 추가 관련하여 완료된 것으로 표시되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-438">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been marked as complete with regards to additions.</span>
          </span>
          <span data-ttu-id="634a3-439">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-439">-or-</span>
          </span>
          <span data-ttu-id="634a3-440">기본 컬렉션에서 항목을 적용하지 않았습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-440">The underlying collection didn't accept the item.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-441">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-441">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-442">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-442">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryAddToAny">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="634a3-443">지정된 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 중 하나에 지정된 항목을 추가하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-443">Tries to add the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryAddToAny">
      <MemberSignature Language="C#" Value="public static int TryAddToAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryAddToAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryAddToAny (collections As BlockingCollection(Of T)(), item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryAddToAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, T item);" />
      <MemberSignature Language="F#" Value="static member TryAddToAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryAddToAny (collections, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="collections">
          <span data-ttu-id="634a3-444">컬렉션의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-444">The array of collections.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="634a3-445">컬렉션 중 하나에 추가될 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-445">The item to be added to one of the collections.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-446">지정된 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 중 하나에 지정된 항목을 추가하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-446">Tries to add the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-447">항목이 추가된 <paramref name="collections" /> 배열의 컬렉션 인덱스이거나, 항목을 추가할 수 없으면 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-447">The index of the collection in the <paramref name="collections" /> array to which the item was added, or -1 if the item could not be added.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-448">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스가 하나 이상 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-448">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="634a3-449">
            <paramref name="collections" /> 인수가 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-449">The <paramref name="collections" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-450">
            <paramref name="collections" /> 횟수가 최대 크기(STA의 경우 62, MTA의 경우 63)보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-450">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="634a3-451">
            <paramref name="collections" /> 인수가 길이가 0 인 배열이거나 Null 요소를 포함하거나 또는 컬렉션 중 하나 이상이 추가를 완료한 것으로 표시되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-451">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-452">하나 이상의 기본 컬렉션에서 항목을 허용하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-452">At least one underlying collection didn't accept the item.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-453">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-453">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-454">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-454">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryAddToAny">
      <MemberSignature Language="C#" Value="public static int TryAddToAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, T item, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryAddToAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, !T item, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryAddToAny (collections As BlockingCollection(Of T)(), item As T, millisecondsTimeout As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryAddToAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, T item, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member TryAddToAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T * int -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryAddToAny (collections, item, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="collections">
          <span data-ttu-id="634a3-455">컬렉션의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-455">The array of collections.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="634a3-456">컬렉션 중 하나에 추가될 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-456">The item to be added to one of the collections.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="634a3-457">대기할 시간(밀리초)이거나, 무기한 대기할 경우 <see cref="F:System.Threading.Timeout.Infinite" />(-1)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-457">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-458">지정된 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 중 하나에 지정된 항목을 추가하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-458">Tries to add the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-459">항목이 추가된 <paramref name="collections" /> 배열의 컬렉션 인덱스이거나, 항목을 추가할 수 없으면 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-459">The index of the collection in the <paramref name="collections" /> array to which the item was added, or -1 if the item could not be added.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-460">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스가 하나 이상 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-460">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="634a3-461">
            <paramref name="collections" /> 인수가 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-461">The <paramref name="collections" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-462">
            <paramref name="millisecondsTimeout" />이 시간 제한 없음을 나타내는 -1 이외의 음수인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-462">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="634a3-463">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-463">-or-</span>
          </span>
          <span data-ttu-id="634a3-464">
            <paramref name="collections" /> 횟수가 최대 크기(STA의 경우 62, MTA의 경우 63)보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-464">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="634a3-465">
            <paramref name="collections" /> 인수가 길이가 0 인 배열이거나 Null 요소를 포함하거나 또는 컬렉션 중 하나 이상이 추가를 완료한 것으로 표시되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-465">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-466">하나 이상의 기본 컬렉션에서 항목을 허용하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-466">At least one underlying collection didn't accept the item.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-467">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-467">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-468">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-468">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryAddToAny">
      <MemberSignature Language="C#" Value="public static int TryAddToAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, T item, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryAddToAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, !T item, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryAddToAny (collections As BlockingCollection(Of T)(), item As T, timeout As TimeSpan) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryAddToAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, T item, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member TryAddToAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T * TimeSpan -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryAddToAny (collections, item, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="collections">
          <span data-ttu-id="634a3-469">컬렉션의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-469">The array of collections.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="634a3-470">컬렉션 중 하나에 추가될 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-470">The item to be added to one of the collections.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="634a3-471">대기할 시간(밀리초)을 나타내는 <see cref="T:System.TimeSpan" />이거나, 무한 대기하도록 -1밀리초를 나타내는 <see cref="T:System.TimeSpan" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-471">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-472">지정된 취소 토큰을 관찰하는 동안 지정된 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 중 하나에 지정된 항목을 추가해 봅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-472">Tries to add the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances while observing the specified cancellation token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-473">항목이 추가된 <paramref name="collections" /> 배열의 컬렉션 인덱스이거나, 항목을 추가할 수 없으면 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-473">The index of the collection in the <paramref name="collections" /> array to which the item was added, or -1 if the item could not be added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-474">이 메서드는 cancellationToken 공간 추가 작업에 사용할 수 있는 되기 전에 취소 된 경우 초기 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-474">This method can return early if the cancellationToken is cancelled before space was available for the Add operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-475">
            <paramref name="cancellationToken" />을 만든 하나 이상의 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 또는 <see cref="T:System.Threading.CancellationTokenSource" />가 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-475">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="634a3-476">
            <paramref name="collections" /> 인수가 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-476">The <paramref name="collections" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-477">
            <paramref name="timeout" />이 무기한 시간 제한을 나타내는 -1밀리초 이외의 음수이거나 시간 제한이 <see cref="F:System.Int32.MaxValue" />보다 큰 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-477">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="634a3-478">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-478">-or-</span>
          </span>
          <span data-ttu-id="634a3-479">
            <paramref name="collections" /> 횟수가 최대 크기(STA의 경우 62, MTA의 경우 63)보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-479">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="634a3-480">
            <paramref name="collections" /> 인수가 길이가 0 인 배열이거나 Null 요소를 포함하거나 또는 컬렉션 중 하나 이상이 추가를 완료한 것으로 표시되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-480">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-481">하나 이상의 기본 컬렉션에서 항목을 허용하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-481">At least one underlying collection didn't accept the item.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-482">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-482">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-483">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-483">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryAddToAny">
      <MemberSignature Language="C#" Value="public static int TryAddToAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, T item, int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryAddToAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, !T item, int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryAddToAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, T item, int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member TryAddToAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] * 'T * int * System.Threading.CancellationToken -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryAddToAny (collections, item, millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="collections">
          <span data-ttu-id="634a3-484">컬렉션의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-484">The array of collections.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="634a3-485">컬렉션 중 하나에 추가될 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-485">The item to be added to one of the collections.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="634a3-486">대기할 시간(밀리초)이거나, 무기한 대기할 경우 <see cref="F:System.Threading.Timeout.Infinite" />(-1)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-486">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="634a3-487">관찰할 취소 토큰입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-487">A cancellation token to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-488">지정된 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 중 하나에 지정된 항목을 추가하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-488">Tries to add the specified item to any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-489">항목이 추가된 <paramref name="collections" /> 배열의 컬렉션 인덱스이거나, 항목을 추가할 수 없으면 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-489">The index of the collection in the <paramref name="collections" /> array to which the item was added, or -1 if the item could not be added.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="634a3-490">
            <see cref="T:System.Threading.CancellationToken" />이 취소된 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-490">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-491">하나 이상의 기본 컬렉션에서 항목을 허용하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-491">At least one underlying collection didn't accept the item.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="634a3-492">
            <paramref name="collections" /> 인수가 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-492">The <paramref name="collections" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-493">
            <paramref name="millisecondsTimeout" />이 시간 제한 없음을 나타내는 -1 이외의 음수인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-493">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="634a3-494">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-494">-or-</span>
          </span>
          <span data-ttu-id="634a3-495">
            <paramref name="collections" /> 횟수가 최대 크기(STA의 경우 62, MTA의 경우 63)보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-495">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="634a3-496">
            <paramref name="collections" /> 인수가 길이가 0 인 배열이거나 Null 요소를 포함하거나 또는 컬렉션 중 하나 이상이 추가를 완료한 것으로 표시되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-496">The <paramref name="collections" /> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-497">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스가 하나 이상 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-497">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-498">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-498">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-499">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-499">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryTake">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="634a3-500">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />에서 항목을 제거하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-500">Tries to remove an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="634a3-501">다음 예제에서는 <xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A> 메서드를 사용하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-501">The following example shows how to use the <xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A> method.</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.BlockingCollection#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/cs/blockingcoll.cs#2)]
 [!code-vb[System.Collections.Concurrent.BlockingCollection#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/vb/blockingcoll.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-502">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-502">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-503">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-503">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryTake">
      <MemberSignature Language="C#" Value="public bool TryTake (out T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryTake([out] !T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryTake (ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryTake([Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="member this.TryTake :  -&gt; bool" Usage="blockingCollection.TryTake item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="634a3-504">컬렉션에서 제거할 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-504">The item to be removed from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-505">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />에서 항목을 제거하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-505">Tries to remove an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-506">항목을 제거할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-506">
              <see langword="true" /> if an item could be removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-507">컬렉션 비어 있으면이 메서드는 즉시 false를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-507">If the collection is empty, this method immediately returns false.</span></span>  
  
 <span data-ttu-id="634a3-508">항목이 제거 되는 순서를 만드는 데 사용 되는 컬렉션의 형식에 따라 달라 집니다는 <xref:System.Collections.Concurrent.BlockingCollection%601> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="634a3-508">The order in which an item is removed depends on the type of collection used to create the <xref:System.Collections.Concurrent.BlockingCollection%601> instance.</span></span> <span data-ttu-id="634a3-509">만들 때를 <xref:System.Collections.Concurrent.BlockingCollection%601> 개체를 사용 하는 컬렉션의 형식을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-509">When you create a <xref:System.Collections.Concurrent.BlockingCollection%601> object, you can specify the type of collection to use.</span></span> <span data-ttu-id="634a3-510">예를 들어 지정할 수 있습니다는 <xref:System.Collections.Concurrent.ConcurrentQueue%601> FIFO (선입 선출) 동작의 첫 번째에 대 한 개체 또는 <xref:System.Collections.Concurrent.ConcurrentStack%601> lifo (후입선출) 동작이 마지막에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-510">For example, you could specify a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object for first in, first out (FIFO) behavior, or a <xref:System.Collections.Concurrent.ConcurrentStack%601> object for last in, first out (LIFO) behavior.</span></span> <span data-ttu-id="634a3-511"><xref:System.Collections.Concurrent.IProducerConsumerCollection%601> 인터페이스를 구현하는 컬렉션 클래스를 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-511">You can use any collection class that implements the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span> <span data-ttu-id="634a3-512"><xref:System.Collections.Concurrent.BlockingCollection%601>의 기본 컬렉션 형식은 <xref:System.Collections.Concurrent.ConcurrentQueue%601>입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-512">The default collection type for <xref:System.Collections.Concurrent.BlockingCollection%601> is <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-513">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-513">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-514">기본 컬렉션이 이 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 외부에서 수정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-514">The underlying collection was modified outside of this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-515">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-515">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-516">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-516">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryTake">
      <MemberSignature Language="C#" Value="public bool TryTake (out T item, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryTake([out] !T&amp; item, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryTake (ByRef item As T, millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryTake([Runtime::InteropServices::Out] T % item, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="member this.TryTake :  * int -&gt; bool" Usage="blockingCollection.TryTake (item, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" RefType="out" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="634a3-517">컬렉션에서 제거할 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-517">The item to be removed from the collection.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="634a3-518">대기할 시간(밀리초)이거나, 무기한 대기할 경우 <see cref="F:System.Threading.Timeout.Infinite" />(-1)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-518">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-519">지정된 시간 안에 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />에서 항목을 제거하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-519">Tries to remove an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> in the specified time period.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-520">지정된 시간 안에 항목을 컬렉션에서 제거할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-520">
              <see langword="true" /> if an item could be removed from the collection within the specified  time; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-521">항목이 제거 되는 순서를 만드는 데 사용 되는 컬렉션의 형식에 따라 달라 집니다는 <xref:System.Collections.Concurrent.BlockingCollection%601> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="634a3-521">The order in which an item is removed depends on the type of collection used to create the <xref:System.Collections.Concurrent.BlockingCollection%601> instance.</span></span> <span data-ttu-id="634a3-522">만들 때를 <xref:System.Collections.Concurrent.BlockingCollection%601>를 사용 하 여 컬렉션의 유형을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-522">When you create a <xref:System.Collections.Concurrent.BlockingCollection%601>, you can specify the type of collection to use.</span></span> <span data-ttu-id="634a3-523">예를 들어 지정할 수 있습니다는 <xref:System.Collections.Concurrent.ConcurrentQueue%601> FIFO (선입 선출) 동작의 첫 번째에 대 한 개체 또는 <xref:System.Collections.Concurrent.ConcurrentStack%601> lifo (후입선출) 동작이 마지막에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-523">For example, you could specify a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object for first in, first out (FIFO) behavior, or a <xref:System.Collections.Concurrent.ConcurrentStack%601> object for last in, first out (LIFO) behavior.</span></span> <span data-ttu-id="634a3-524"><xref:System.Collections.Concurrent.IProducerConsumerCollection%601> 인터페이스를 구현하는 컬렉션 클래스를 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-524">You can use any collection class that implements the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span> <span data-ttu-id="634a3-525"><xref:System.Collections.Concurrent.BlockingCollection%601>의 기본 컬렉션 형식은 <xref:System.Collections.Concurrent.ConcurrentQueue%601>입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-525">The default collection type for <xref:System.Collections.Concurrent.BlockingCollection%601> is <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-526">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-526">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-527">
            <paramref name="millisecondsTimeout" />이 시간 제한 없음을 나타내는 -1 이외의 음수인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-527">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-528">기본 컬렉션이 이 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 외부에서 수정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-528">The underlying collection was modified outside of this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-529">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-529">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-530">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-530">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryTake">
      <MemberSignature Language="C#" Value="public bool TryTake (out T item, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryTake([out] !T&amp; item, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryTake (ByRef item As T, timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryTake([Runtime::InteropServices::Out] T % item, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.TryTake :  * TimeSpan -&gt; bool" Usage="blockingCollection.TryTake (item, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" RefType="out" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="634a3-531">컬렉션에서 제거할 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-531">The item to be removed from the collection.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="634a3-532">대기할 시간(밀리초)을 나타내는 개체이거나, 무한 대기하도록 -1밀리초를 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-532">An object that represents the number of milliseconds to wait, or an object that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-533">지정된 시간 안에 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />에서 항목을 제거하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-533">Tries to remove an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> in the specified time period.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-534">지정된 시간 안에 항목을 컬렉션에서 제거할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-534">
              <see langword="true" /> if an item could be removed from the collection within the specified  time; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-535">항목이 제거 되는 순서를 만드는 데 사용 되는 컬렉션의 형식에 따라 달라 집니다는 <xref:System.Collections.Concurrent.BlockingCollection%601> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="634a3-535">The order in which an item is removed depends on the type of collection used to create the <xref:System.Collections.Concurrent.BlockingCollection%601> instance.</span></span> <span data-ttu-id="634a3-536">만들 때를 <xref:System.Collections.Concurrent.BlockingCollection%601> 개체를 사용 하는 컬렉션의 형식을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-536">When you create a <xref:System.Collections.Concurrent.BlockingCollection%601> object, you can specify the type of collection to use.</span></span> <span data-ttu-id="634a3-537">예를 들어 지정할 수 있습니다는 <xref:System.Collections.Concurrent.ConcurrentQueue%601> FIFO (선입 선출) 동작의 첫 번째에 대 한 개체 또는 <xref:System.Collections.Concurrent.ConcurrentStack%601> lifo (후입선출) 동작이 마지막에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-537">For example, you could specify a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object for first in, first out (FIFO) behavior, or a <xref:System.Collections.Concurrent.ConcurrentStack%601> object for last in, first out (LIFO) behavior.</span></span> <span data-ttu-id="634a3-538"><xref:System.Collections.Concurrent.IProducerConsumerCollection%601> 인터페이스를 구현하는 컬렉션 클래스를 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-538">You can use any collection class that implements the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span> <span data-ttu-id="634a3-539"><xref:System.Collections.Concurrent.BlockingCollection%601>의 기본 컬렉션 형식은 <xref:System.Collections.Concurrent.ConcurrentQueue%601>입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-539">The default collection type for <xref:System.Collections.Concurrent.BlockingCollection%601> is <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-540">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />가 삭제된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-540">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-541">
            <paramref name="timeout" />은 시간 제한이 없음을 나타내는 -1밀리초 이외의 음수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-541">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="634a3-542">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-542">-or-</span>
          </span>
          <span data-ttu-id="634a3-543">
            <paramref name="timeout" />가 <see cref="F:System.Int32.MaxValue" />보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-543">
              <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-544">기본 컬렉션이 이 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 외부에서 수정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-544">The underlying collection was modified outside of this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-545">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-545">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-546">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-546">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryTake">
      <MemberSignature Language="C#" Value="public bool TryTake (out T item, int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryTake([out] !T&amp; item, int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryTake([Runtime::InteropServices::Out] T % item, int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.TryTake :  * int * System.Threading.CancellationToken -&gt; bool" Usage="blockingCollection.TryTake (item, millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" RefType="out" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="634a3-547">컬렉션에서 제거할 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-547">The item to be removed from the collection.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="634a3-548">대기할 시간(밀리초)이거나, 무기한 대기할 경우 <see cref="F:System.Threading.Timeout.Infinite" />(-1)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-548">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="634a3-549">관찰할 취소 토큰입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-549">A cancellation token to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-550">취소 토큰을 관찰하는 동안 지정된 시간 안에 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />에서 항목을 제거하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-550">Tries to remove an item from the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> in the specified time period while observing a cancellation token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-551">지정된 시간 안에 항목을 컬렉션에서 제거할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-551">
              <see langword="true" /> if an item could be removed from the collection within the specified  time; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-552">항목이 제거 되는 순서를 만드는 데 사용 되는 컬렉션의 형식에 따라 달라 집니다는 <xref:System.Collections.Concurrent.BlockingCollection%601> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="634a3-552">The order in which an item is removed depends on the type of collection used to create the <xref:System.Collections.Concurrent.BlockingCollection%601> instance.</span></span> <span data-ttu-id="634a3-553">만들 때를 <xref:System.Collections.Concurrent.BlockingCollection%601> 개체를 사용 하는 컬렉션의 형식을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-553">When you create a <xref:System.Collections.Concurrent.BlockingCollection%601> object, you can specify the type of collection to use.</span></span> <span data-ttu-id="634a3-554">예를 들어 지정할 수 있습니다는 <xref:System.Collections.Concurrent.ConcurrentQueue%601> FIFO (선입 선출) 동작의 첫 번째에 대 한 개체 또는 <xref:System.Collections.Concurrent.ConcurrentStack%601> lifo (후입선출) 동작이 마지막에 대 한 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-554">For example, you could specify a <xref:System.Collections.Concurrent.ConcurrentQueue%601> object for first in, first out (FIFO) behavior, or a <xref:System.Collections.Concurrent.ConcurrentStack%601> object for last in, first out (LIFO) behavior.</span></span> <span data-ttu-id="634a3-555"><xref:System.Collections.Concurrent.IProducerConsumerCollection%601> 인터페이스를 구현하는 컬렉션 클래스를 모두 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-555">You can use any collection class that implements the <xref:System.Collections.Concurrent.IProducerConsumerCollection%601> interface.</span></span> <span data-ttu-id="634a3-556"><xref:System.Collections.Concurrent.BlockingCollection%601>의 기본 컬렉션 형식은 <xref:System.Collections.Concurrent.ConcurrentQueue%601>입니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-556">The default collection type for <xref:System.Collections.Concurrent.BlockingCollection%601> is <xref:System.Collections.Concurrent.ConcurrentQueue%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="634a3-557">
            <see cref="T:System.Threading.CancellationToken" />이 취소된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-557">The <see cref="T:System.Threading.CancellationToken" /> has been canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-558">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />이 삭제되었거나 기본 <see cref="T:System.Threading.CancellationTokenSource" />가 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-558">The <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> has been disposed or the underlying <see cref="T:System.Threading.CancellationTokenSource" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-559">
            <paramref name="millisecondsTimeout" />이 시간 제한 없음을 나타내는 -1 이외의 음수인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-559">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-560">기본 컬렉션이 이 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 외부에서 수정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-560">The underlying collection was modified outside this <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-561">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-561">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-562">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-562">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryTakeFromAny">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="634a3-563">지정된 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 중 하나에서 항목을 제거하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-563">Tries to remove an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryTakeFromAny">
      <MemberSignature Language="C#" Value="public static int TryTakeFromAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, out T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryTakeFromAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, [out] !T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryTakeFromAny (collections As BlockingCollection(Of T)(), ByRef item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryTakeFromAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="static member TryTakeFromAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] *  -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryTakeFromAny (collections, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="collections">
          <span data-ttu-id="634a3-564">컬렉션의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-564">The array of collections.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="634a3-565">컬렉션 중 하나에서 제거된 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-565">The item removed from one of the collections.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-566">지정된 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 중 하나에서 항목을 제거하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-566">Tries to remove an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-567">항목이 제거된 <paramref name="collections" /> 배열의 컬렉션 인덱스이거나, 항목을 제거할 수 없으면 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-567">The index of the collection in the <paramref name="collections" /> array from which the item was removed, or -1 if an item could not be removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-568">항목이 제거 될 수 있을 때까지 호출 하는 TryTakeFromAny 차단할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-568">A call to TryTakeFromAny may block until an item is available to be removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="634a3-569">다음 예제에서는 사용 하는 방법의 <xref:System.Collections.Concurrent.BlockingCollection%601.TryTakeFromAny%2A?displayProperty=nameWithType> 메서드:</span><span class="sxs-lookup"><span data-stu-id="634a3-569">The following example shows how to use the <xref:System.Collections.Concurrent.BlockingCollection%601.TryTakeFromAny%2A?displayProperty=nameWithType> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.BlockingCollection#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/cs/blockingcoll.cs#3)]
 [!code-vb[System.Collections.Concurrent.BlockingCollection#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.blockingcollection/vb/blockingcoll.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-570">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스가 하나 이상 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-570">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="634a3-571">
            <paramref name="collections" /> 인수가 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-571">The <paramref name="collections" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-572">
            <paramref name="collections" /> 횟수가 최대 크기(STA의 경우 62, MTA의 경우 63)보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-572">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="634a3-573">
            <paramref name="collections" /> 인수가 길이가 0 인 배열이거나 Null 요소를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-573">The <paramref name="collections" /> argument is a 0-length array or contains a null element.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-574">기본 컬렉션 중 하나 이상이 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 외부에서 수정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-574">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-575">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-575">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-576">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-576">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryTakeFromAny">
      <MemberSignature Language="C#" Value="public static int TryTakeFromAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, out T item, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryTakeFromAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, [out] !T&amp; item, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryTakeFromAny (collections As BlockingCollection(Of T)(), ByRef item As T, millisecondsTimeout As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryTakeFromAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, [Runtime::InteropServices::Out] T % item, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member TryTakeFromAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] *  * int -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryTakeFromAny (collections, item, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" RefType="out" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="collections">
          <span data-ttu-id="634a3-577">컬렉션의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-577">The array of collections.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="634a3-578">컬렉션 중 하나에서 제거된 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-578">The item removed from one of the collections.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="634a3-579">대기할 시간(밀리초)이거나, 무기한 대기할 경우 <see cref="F:System.Threading.Timeout.Infinite" />(-1)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-579">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-580">지정된 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 중 하나에서 항목을 제거하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-580">Tries to remove an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-581">항목이 제거된 <paramref name="collections" /> 배열의 컬렉션 인덱스이거나, 항목을 제거할 수 없으면 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-581">The index of the collection in the <paramref name="collections" /> array from which the item was removed, or -1 if an item could not be removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-582">항목이 제거 될 수 있을 때까지 호출 하는 TryTakeFromAny 차단할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-582">A call to TryTakeFromAny may block until an item is available to be removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-583">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스가 하나 이상 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-583">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="634a3-584">
            <paramref name="collections" /> 인수가 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-584">The <paramref name="collections" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-585">
            <paramref name="millisecondsTimeout" />이 시간 제한 없음을 나타내는 -1 이외의 음수인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-585">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="634a3-586">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-586">-or-</span>
          </span>
          <span data-ttu-id="634a3-587">
            <paramref name="collections" /> 횟수가 최대 크기(STA의 경우 62, MTA의 경우 63)보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-587">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="634a3-588">
            <paramref name="collections" /> 인수가 길이가 0 인 배열이거나 Null 요소를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-588">The <paramref name="collections" /> argument is a 0-length array or contains a null element.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-589">기본 컬렉션 중 하나 이상이 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 외부에서 수정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-589">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-590">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-590">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-591">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-591">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryTakeFromAny">
      <MemberSignature Language="C#" Value="public static int TryTakeFromAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, out T item, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryTakeFromAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, [out] !T&amp; item, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryTakeFromAny (collections As BlockingCollection(Of T)(), ByRef item As T, timeout As TimeSpan) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryTakeFromAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, [Runtime::InteropServices::Out] T % item, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member TryTakeFromAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] *  * TimeSpan -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryTakeFromAny (collections, item, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" RefType="out" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="collections">
          <span data-ttu-id="634a3-592">컬렉션의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-592">The array of collections.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="634a3-593">컬렉션 중 하나에서 제거된 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-593">The item removed from one of the collections.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="634a3-594">대기할 시간(밀리초)을 나타내는 <see cref="T:System.TimeSpan" />이거나, 무한 대기하도록 -1밀리초를 나타내는 <see cref="T:System.TimeSpan" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-594">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-595">지정된 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 중 하나에서 항목을 제거하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-595">Tries to remove an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-596">항목이 제거된 <paramref name="collections" /> 배열의 컬렉션 인덱스이거나, 항목을 제거할 수 없으면 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-596">The index of the collection in the <paramref name="collections" /> array from which the item was removed, or -1 if an item could not be removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-597">항목이 제거 될 수 있을 때까지 호출 하는 TryTakeFromAny 차단할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-597">A call to TryTakeFromAny may block until an item is available to be removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-598">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스가 하나 이상 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-598">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="634a3-599">
            <paramref name="collections" /> 인수가 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-599">The <paramref name="collections" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-600">
            <paramref name="timeout" />이 무기한 시간 제한을 나타내는 -1밀리초 이외의 음수이거나 시간 제한이 <see cref="F:System.Int32.MaxValue" />보다 큰 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-600">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
          <span data-ttu-id="634a3-601">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-601">-or-</span>
          </span>
          <span data-ttu-id="634a3-602">
            <paramref name="collections" /> 횟수가 최대 크기(STA의 경우 62, MTA의 경우 63)보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-602">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="634a3-603">
            <paramref name="collections" /> 인수가 길이가 0 인 배열이거나 Null 요소를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-603">The <paramref name="collections" /> argument is a 0-length array or contains a null element.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-604">기본 컬렉션 중 하나 이상이 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 외부에서 수정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-604">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-605">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-605">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-606">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-606">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryTakeFromAny">
      <MemberSignature Language="C#" Value="public static int TryTakeFromAny (System.Collections.Concurrent.BlockingCollection&lt;T&gt;[] collections, out T item, int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TryTakeFromAny(class System.Collections.Concurrent.BlockingCollection`1&lt;!T&gt;[] collections, [out] !T&amp; item, int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TryTakeFromAny(cli::array &lt;System::Collections::Concurrent::BlockingCollection&lt;T&gt; ^&gt; ^ collections, [Runtime::InteropServices::Out] T % item, int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="static member TryTakeFromAny : System.Collections.Concurrent.BlockingCollection&lt;'T&gt;[] *  * int * System.Threading.CancellationToken -&gt; int" Usage="System.Collections.Concurrent.BlockingCollection&lt;'T&gt;.TryTakeFromAny (collections, item, millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collections" Type="System.Collections.Concurrent.BlockingCollection&lt;T&gt;[]" />
        <Parameter Name="item" Type="T" RefType="out" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="collections">
          <span data-ttu-id="634a3-607">컬렉션의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-607">The array of collections.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="634a3-608">컬렉션 중 하나에서 제거된 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-608">The item removed from one of the collections.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="634a3-609">대기할 시간(밀리초)이거나, 무기한 대기할 경우 <see cref="F:System.Threading.Timeout.Infinite" />(-1)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-609">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="634a3-610">관찰할 취소 토큰입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-610">A cancellation token to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="634a3-611">지정된 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 중 하나에서 항목을 제거하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-611">Tries to remove an item from any one of the specified <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="634a3-612">항목이 제거된 <paramref name="collections" /> 배열의 컬렉션 인덱스이거나, 항목을 제거할 수 없으면 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-612">The index of the collection in the <paramref name="collections" /> array from which the item was removed, or -1 if an item could not be removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="634a3-613">항목이 제거 될 수 있을 때까지 호출 하는 TryTakeFromAny 차단할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="634a3-613">A call to TryTakeFromAny may block until an item is available to be removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="634a3-614">
            <see cref="T:System.Threading.CancellationToken" />이 취소된 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-614">If the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="634a3-615">기본 컬렉션 중 하나 이상이 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스 외부에서 수정되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-615">At least one of the underlying collections was modified outside of its <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="634a3-616">
            <paramref name="collections" /> 인수가 null입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-616">The <paramref name="collections" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="634a3-617">
            <paramref name="millisecondsTimeout" />이 시간 제한 없음을 나타내는 -1 이외의 음수인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-617">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="634a3-618">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-618">-or-</span>
          </span>
          <span data-ttu-id="634a3-619">
            <paramref name="collections" /> 횟수가 최대 크기(STA의 경우 62, MTA의 경우 63)보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-619">The count of <paramref name="collections" /> is greater than the maximum size of 62 for STA and 63 for MTA.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="634a3-620">
            <paramref name="collections" /> 인수가 길이가 0 인 배열이거나 Null 요소를 포함합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-620">The <paramref name="collections" /> argument is a 0-length array or contains a null element.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="634a3-621">
            <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> 인스턴스가 하나 이상 삭제되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-621">At least one of the <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> instances has been disposed.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="634a3-622">스레드로부터 안전한 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-622">Thread-Safe Collections</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b">
          <span data-ttu-id="634a3-623">BlockingCollection 개요</span>
          <span class="sxs-lookup">
            <span data-stu-id="634a3-623">BlockingCollection Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>