<Type Name="EnumerablePartitionerOptions" FullName="System.Collections.Concurrent.EnumerablePartitionerOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="54cb931e87431d0b0df1ed237e554da3ff34cd10" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52347592" /></Metadata><TypeSignature Language="C#" Value="public enum EnumerablePartitionerOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EnumerablePartitionerOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.EnumerablePartitionerOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum EnumerablePartitionerOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class EnumerablePartitionerOptions" />
  <TypeSignature Language="F#" Value="type EnumerablePartitionerOptions = " />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e7505-101">파티 셔 너의 버퍼링 동작을 제어 하는 옵션을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7505-101">Specifies options to control the buffering behavior of a partitioner</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7505-102">기본 제공 파티셔너는 기본 동작 집합을 통해 생성됩니다.</span><span class="sxs-lookup"><span data-stu-id="e7505-102">Out-of-the-box partitioners are created with a set of default behaviors.</span></span> <span data-ttu-id="e7505-103">예를 들어, 기본적으로 일부 형식의 버퍼링 및 청크는 일반적인 시나리오에서 최적의 성능을 얻기 위해 여기서는 <xref:System.Collections.Generic.IEnumerable%601> 구현은 신속 하 고 비 중단 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7505-103">For example, by default, some form of buffering and chunking will be used to achieve optimal performance in the common scenario where an <xref:System.Collections.Generic.IEnumerable%601> implementation is fast and non-blocking.</span></span> <span data-ttu-id="e7505-104">사용 하 여 이러한 동작은이 열거형으로 재정의할 수 있습니다는 <xref:System.Collections.Concurrent.Partitioner.Create%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="e7505-104">These behaviors can be overridden by this enumeration by using the <xref:System.Collections.Concurrent.Partitioner.Create%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="NoBuffering">
      <MemberSignature Language="C#" Value="NoBuffering" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Collections.Concurrent.EnumerablePartitionerOptions NoBuffering = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Collections.Concurrent.EnumerablePartitionerOptions.NoBuffering" />
      <MemberSignature Language="VB.NET" Value="NoBuffering" />
      <MemberSignature Language="C++ CLI" Value="NoBuffering" />
      <MemberSignature Language="F#" Value="NoBuffering = 1" Usage="System.Collections.Concurrent.EnumerablePartitionerOptions.NoBuffering" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.EnumerablePartitionerOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e7505-105">한 번에 하나씩 열거 가능한 소스에서 항목을 사용 하 고 여러 스레드에서 보다 효율적으로 액세스할 수 있는 중간 저장소를 사용 하지 않습니다는 파티 셔 너를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="e7505-105">Create a partitioner that takes items from the source enumerable one at a time and does not use intermediate storage that can be accessed more efficiently by multiple threads.</span></span> <span data-ttu-id="e7505-106">이 옵션 (원본에서 사용할 수는 즉시 항목 처리) 하는 짧은 대기 시간에 대 한 지원을 제공합니다 하 고 (스레드 수 없습니다. 교착 상태에서 스레드 자체가 해야 하는 항목을 기다리면서 항목 간의 종속성에 대 한 부분 지원 제공 처리 중)입니다.</span><span class="sxs-lookup"><span data-stu-id="e7505-106">This option provides support for low latency (items will be processed as soon as they are available from the source) and provides partial support for dependencies between items (a thread cannot deadlock waiting for an item that the thread itself is responsible for processing).</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Collections.Concurrent.EnumerablePartitionerOptions None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Collections.Concurrent.EnumerablePartitionerOptions.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Collections.Concurrent.EnumerablePartitionerOptions.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.EnumerablePartitionerOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e7505-107">최적의 성능을 얻기 위해 버퍼링을 사용 하는 기본 동작을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="e7505-107">Use the default behavior, which is to use buffering to achieve optimal performance.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>