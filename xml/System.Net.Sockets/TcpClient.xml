<Type Name="TcpClient" FullName="System.Net.Sockets.TcpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="148e99577dc991e499e80919d989a9271b54d85e" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52208036" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TcpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type TcpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="f3457-101">TCP 네트워크 서비스에 대한 클라이언트 연결을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3457-101">Provides client connections for TCP network services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-102"><xref:System.Net.Sockets.TcpClient> 클래스를 전송에 연결 하는 간단한 방법을 제공 하 고 수신 동기식 차단 모드에서 네트워크를 통해 데이터를 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-102">The <xref:System.Net.Sockets.TcpClient> class provides simple methods for connecting, sending, and receiving stream data over a network in synchronous blocking mode.</span></span>  
  
 <span data-ttu-id="f3457-103">되려면에서 <xref:System.Net.Sockets.TcpClient> 연결 하 여 데이터를 교환 하는 <xref:System.Net.Sockets.TcpListener> 또는 <xref:System.Net.Sockets.Socket> TCP를 사용 하 여 만든 <xref:System.Net.Sockets.ProtocolType> 들어오는 연결 요청을 수신 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-103">In order for <xref:System.Net.Sockets.TcpClient> to connect and exchange data, a <xref:System.Net.Sockets.TcpListener> or <xref:System.Net.Sockets.Socket> created with the TCP <xref:System.Net.Sockets.ProtocolType> must be listening for incoming connection requests.</span></span> <span data-ttu-id="f3457-104">다음 두 가지 방법 중 하나에서이 수신기에 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-104">You can connect to this listener in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="f3457-105">만들기는 <xref:System.Net.Sockets.TcpClient> 사용 가능한 세 가지 중 하나를 호출 하 고 <xref:System.Net.Sockets.TcpClient.Connect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f3457-105">Create a <xref:System.Net.Sockets.TcpClient> and call one of the three available <xref:System.Net.Sockets.TcpClient.Connect%2A> methods.</span></span>  
  
-   <span data-ttu-id="f3457-106">만들기는 <xref:System.Net.Sockets.TcpClient> 호스트 이름을 사용 하 고 포트 번호는 원격 호스트의 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-106">Create a <xref:System.Net.Sockets.TcpClient> using the host name and port number of the remote host.</span></span> <span data-ttu-id="f3457-107">이 생성자는 자동 연결을 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-107">This constructor will automatically attempt a connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-108">동기식 차단 모드로 연결 없는 데이터 그램을 보내려는 경우 사용 된 <xref:System.Net.Sockets.UdpClient> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-108">If you want to send connectionless datagrams in synchronous blocking mode, use the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-109">다음 코드 예제에서는 설정 된 <xref:System.Net.Sockets.TcpClient> 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-109">The following code example establishes a <xref:System.Net.Sockets.TcpClient> connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CPP/tcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CS/tcpclient.cs#1)]
 [!code-vb[System.Net.Sockets.TcpClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/VB/tcpclient.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="f3457-110">나가는 연결을 설정 하거나 들어오는 요청을 받아들이는 권한입니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3457-110">Permission to establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="f3457-111">데이터 보내기 및 받기를 사용 하 여는 <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> 메서드는 <see cref="T:System.Net.Sockets.NetworkStream" />합니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="f3457-111">To send and receive data, use the <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> method to obtain a <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
        </span>
        <span data-ttu-id="f3457-112">호출을 <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> 및 <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> 의 메서드는 <see cref="T:System.Net.Sockets.NetworkStream" /> 원격 호스트를 사용 하 여 데이터를 주고받을 수입니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="f3457-112">Call the <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> methods of the <see cref="T:System.Net.Sockets.NetworkStream" /> to send and receive data with the remote host.</span>
        </span>
        <span data-ttu-id="f3457-113">사용 하 여는 <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> 연결 된 모든 리소스를 해제 하는 메서드에 <see cref="T:System.Net.Sockets.TcpClient" />합니다.</span>
        <span class="sxs-lookup">
          <span data-stu-id="f3457-113">Use the <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> method to release all resources associated with the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Net.Sockets.TcpListener" />
    <altmember cref="T:System.Net.Sockets.NetworkStream" />
    <altmember cref="T:System.Net.Sockets.Socket" />
    <altmember cref="T:System.Net.Sockets.ProtocolType" />
    <altmember cref="T:System.Net.IPEndPoint" />
    <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
    <related type="Article" href="~/docs/framework/network-programming/tcp-udp.md">
      <span data-ttu-id="f3457-114">TCP-UDP</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3457-114">TCP-UDP</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3457-115">
            <see cref="T:System.Net.Sockets.TcpClient" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-115">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3457-116">
            <see cref="T:System.Net.Sockets.TcpClient" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-116">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-117">이 생성자를 만듭니다 <xref:System.Net.Sockets.TcpClient> 에 가장 적합 한 로컬 IP 주소와 포트 번호를 할당 하려면 기본 서비스 공급자 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-117">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and allows the underlying service provider to assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="f3457-118">먼저 호출 해야 합니다는 <xref:System.Net.Sockets.TcpClient.Connect%2A> 데이터 보내기 및 받기 전에 메서드.</span><span class="sxs-lookup"><span data-stu-id="f3457-118">You must first call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-119">이 생성자는 IPv4 주소 형식에만 작동합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-119">This constructor works only with IPv4 address types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-120">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-120">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="f3457-121">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-121">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-122">다음 코드 예제에는 새 기본 생성자를 사용 하는 방법을 보여 줍니다. <xref:System.Net.Sockets.TcpClient>합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-122">The following code example demonstrates how to use the default constructor to create a new <xref:System.Net.Sockets.TcpClient>.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.IPEndPoint -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="f3457-123">TCP <see cref="T:System.Net.Sockets.Socket" />을 바인딩할 <see cref="T:System.Net.IPEndPoint" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-123">The <see cref="T:System.Net.IPEndPoint" /> to which you bind the TCP <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3457-124">
            <see cref="T:System.Net.Sockets.TcpClient" /> 클래스의 새 인스턴스를 초기화하고 해당 인스턴스를 지정된 로컬 엔드포인트에 바인딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-124">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and binds it to the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-125">이 생성자를 만듭니다 <xref:System.Net.Sockets.TcpClient> 에 바인딩합니다 합니다 <xref:System.Net.IPEndPoint> 에 지정 된 된 `localEP` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="f3457-125">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="f3457-126">이 생성자를 호출 하기 전에 만들어야 합니다를 <xref:System.Net.IPEndPoint> 보내고 데이터를 수신 하려는 IP 주소와 포트 번호를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-126">Before you call this constructor, you must create an <xref:System.Net.IPEndPoint> using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="f3457-127">연결 하 고 통신 하기 전에 로컬 IP 주소 및 포트 번호를 지정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-127">You do not need to specify a local IP address and port number before connecting and communicating.</span></span> <span data-ttu-id="f3457-128">만드는 경우를 <xref:System.Net.Sockets.TcpClient> 다른 생성자를 사용 하는 기본 서비스 공급자가 할당 가장 적절 한 로컬 IP 주소 및 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-128">If you create a <xref:System.Net.Sockets.TcpClient> using any other constructor, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="f3457-129">호출 해야 합니다는 <xref:System.Net.Sockets.TcpClient.Connect%2A> 데이터 보내기 및 받기 전에 메서드.</span><span class="sxs-lookup"><span data-stu-id="f3457-129">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-130">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-130">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="f3457-131">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-131">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-132">다음 코드 예제에는 인스턴스를 만드는 방법을 보여 줍니다는 <xref:System.Net.Sockets.TcpClient> 로컬 끝점을 사용 하 여 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-132">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3457-133">
            <paramref name="localEP" /> 매개 변수가 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-133">The  <paramref name="localEP" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient family" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="f3457-134">IP 프로토콜의 <see cref="P:System.Net.IPAddress.AddressFamily" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-134">The <see cref="P:System.Net.IPAddress.AddressFamily" /> of the IP protocol.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3457-135">지정된 패밀리를 사용하여 <see cref="T:System.Net.Sockets.TcpClient" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-135">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class with the specified family.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f3457-136">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-136">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="f3457-137">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-137">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-138">다음 코드 예제에는 인스턴스를 만드는 방법을 보여 줍니다는 <xref:System.Net.Sockets.TcpClient> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-138">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3457-139">
            <paramref name="family" /> 매개 변수가 AddressFamily.InterNetwork와 같지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-139">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetwork</span>
          </span>
          <span data-ttu-id="f3457-140">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-140">-or-</span>
          </span>
          <span data-ttu-id="f3457-141">
            <paramref name="family" /> 매개 변수가 AddressFamily.InterNetworkV6와 같지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-141">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetworkV6</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : string * int -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient (hostname, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="f3457-142">연결할 원격 호스트의 DNS 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-142">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="f3457-143">연결한 원격 호스트의 포트 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-143">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3457-144">
            <see cref="T:System.Net.Sockets.TcpClient" /> 클래스의 새 인스턴스를 초기화하고 지정된 호스트의 지정된 포트에 연결합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-144">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and connects to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-145">이 생성자를 만듭니다 <xref:System.Net.Sockets.TcpClient> 제공 된 호스트 이름으로 시도 하 고 포트 번호 동기 연결을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-145">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and makes a synchronous connection attempt to the provided host name and port number.</span></span> <span data-ttu-id="f3457-146">기본 서비스 공급자는 가장 적절 한 로컬 IP 주소 및 포트 번호를 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-146">The underlying service provider will assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="f3457-147"><xref:System.Net.Sockets.TcpClient> 연결 되거나 실패할 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-147"><xref:System.Net.Sockets.TcpClient> will block until it either connects or fails.</span></span> <span data-ttu-id="f3457-148">이 생성자를 사용 하면 초기화, DNS 호스트 이름을 확인 하 고 편리 하 게 한 번에 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-148">This constructor allows you to initialize, resolve the DNS host name, and connect in one convenient step.</span></span>  
  
 <span data-ttu-id="f3457-149">IPv6을 사용 하는 경우 및 <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> 메서드는 모두 IPv6로 확인 되는 호스트에 연결할 및 IPv4 주소, IPv6 주소에 대 한 연결 IPv4 주소 앞의 첫 번째 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-149">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="f3457-150">호스트의 IPv6 주소에서 수신 하지 않는 경우 연결을 설정 하는 시간을 지연이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-150">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-151">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-151">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="f3457-152">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-152">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-153">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-153">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="f3457-154">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-154">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-155">다음 코드 예제에는 인스턴스를 만드는 방법을 보여 줍니다는 <xref:System.Net.Sockets.TcpClient> 호스트 이름을 사용 하 여 클래스 및 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-155">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3457-156">
            <paramref name="hostname" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-156">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3457-157">
            <paramref name="port" /> 매개 변수가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-157">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="f3457-158">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-158">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Net.Sockets.TcpClient.#ctor" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool with get, set" Usage="System.Net.Sockets.TcpClient.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3457-159">연결되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-159">Gets or set a value that indicates whether a connection has been made.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3457-160">연결되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-160">
              <see langword="true" /> if the connection has been made; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-161">파생 된 클래스 <xref:System.Net.Sockets.TcpClient> 이 속성을 사용 하 여 연결 시도가 성공한 경우 결정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-161">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to determine if a connection attempt has succeeded.</span></span> <span data-ttu-id="f3457-162">지속적인 연결 상태를 모니터링 하지 않습니다 <xref:System.Net.Sockets.TcpClient>합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-162">It does not monitor the ongoing connection state of <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="f3457-163">원격 호스트 연결을 닫으면 <xref:System.Net.Sockets.TcpClient.Active%2A> 업데이트 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-163">If the remote host closes the connection, <xref:System.Net.Sockets.TcpClient.Active%2A> will not be updated.</span></span> <span data-ttu-id="f3457-164">파생 하는 경우 <xref:System.Net.Sockets.TcpClient> 연결 상태를 사용 하 여 좀 더 주의 해야 하 고는 <xref:System.Net.Sockets.Socket.Connected%2A> 의 속성을 <xref:System.Net.Sockets.Socket> 반환한는 <xref:System.Net.Sockets.TcpClient.Client%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f3457-164">If you are deriving from <xref:System.Net.Sockets.TcpClient> and require closer attention to the connection state, use the <xref:System.Net.Sockets.Socket.Connected%2A> property of the <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpClient.Client%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.Connected" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Available : int" Usage="System.Net.Sockets.TcpClient.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3457-165">네트워크에서 받아서 읽을 수 있는 데이터의 양을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-165">Gets the amount of data that has been received from the network and is available to be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3457-166">네트워크에서 받아서 읽을 수 있는 데이터의 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-166">The number of bytes of data received from the network and available to be read.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-167"><xref:System.Net.Sockets.TcpClient.Available%2A> 데이터가 읽기에 대 한 대기 될 수 있는지 여부를 결정 하는 방법 이며</span><span class="sxs-lookup"><span data-stu-id="f3457-167"><xref:System.Net.Sockets.TcpClient.Available%2A> is a way to determine whether data is queued for reading.</span></span> <span data-ttu-id="f3457-168">데이터를 사용할 수 있는 경우 호출 <xref:System.Net.Sockets.NetworkStream.Read%2A> 데이터를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-168">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="f3457-169">사용 가능한 데이터 읽기에 대 한 네트워크 버퍼에 대기 하는 데이터의 총 크기입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-169">The available data is the total amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="f3457-170">네트워크 버퍼에서 대기 중인 데이터가 없을 경우 <xref:System.Net.Sockets.TcpClient.Available%2A> 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-170">If no data is queued in the network buffer, <xref:System.Net.Sockets.TcpClient.Available%2A> returns 0.</span></span>  
  
 <span data-ttu-id="f3457-171">원격 호스트 종료 되거나 연결이 닫히면 <xref:System.Net.Sockets.TcpClient.Available%2A> throw 할 수는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-171">If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.TcpClient.Available%2A> may throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="f3457-172">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-172">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="f3457-173">이 코드를 가져온 후에 MSDN 라이브러리의 Windows 소켓 버전 2 API 오류 코드 설명서를 참조할 수 있습니다 [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library) 에 대 한 자세한 설명은 오류입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-173">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-174">다음 코드 예제에서는 <xref:System.Net.Sockets.TcpClient.Available%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-174">The following code example shows the use of the <xref:System.Net.Sockets.TcpClient.Available%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="f3457-175">소켓에 액세스하는 동안 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-175">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3457-176">
            <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-176">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginConnect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3457-177">원격 호스트 연결에 대한 비동기 요청을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-177">Begins an asynchronous request for a remote host connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress address, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress address, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (address As IPAddress, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::IPAddress ^ address, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (address, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="f3457-178">원격 호스트의 <see cref="T:System.Net.IPAddress" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-178">The <see cref="T:System.Net.IPAddress" /> of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="f3457-179">원격 호스트의 포트 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-179">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="f3457-180">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-180">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="f3457-181">연결 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-181">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="f3457-182">이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-182">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3457-183">원격 호스트 연결에 대한 비동기 요청을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-183">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="f3457-184">원격 호스트는 <see cref="T:System.Net.IPAddress" />와 포트 번호(<see cref="T:System.Int32" />)로 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-184">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3457-185">비동기 연결을 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-185">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-186">비동기 <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> 를 호출 하 여 작업을 완료 해야 합니다 <xref:System.Net.Sockets.TcpClient.EndConnect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f3457-186">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="f3457-187">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-187">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="f3457-188">이 메서드는 작업이 완료 될 때까지 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-188">This method does not block until the operation completes.</span></span> <span data-ttu-id="f3457-189">작업이 완료 될 때까지 차단 하려면 중 하나를 사용 합니다 <xref:System.Net.Sockets.TcpClient.Connect%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-189">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="f3457-190">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-190">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-191">다음 코드 예제는 <xref:System.Net.Sockets.TcpClient> 원격 호스트에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-191">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3457-192">
            <paramref name="address" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-192">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="f3457-193">소켓에 액세스하는 동안 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-193">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3457-194">
            <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-194">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="f3457-195">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-195">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3457-196">포트 번호가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-196">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress[] addresses, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress[] addresses, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (addresses As IPAddress(), port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress[] * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (addresses, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="f3457-197">원격 호스트를 지정하는 하나 이상의 <see cref="T:System.Net.IPAddress" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-197">At least one <see cref="T:System.Net.IPAddress" /> that designates the remote hosts.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="f3457-198">원격 호스트의 포트 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-198">The port number of the remote hosts.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="f3457-199">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-199">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="f3457-200">연결 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-200">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="f3457-201">이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-201">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3457-202">원격 호스트 연결에 대한 비동기 요청을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-202">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="f3457-203">원격 호스트는 <see cref="T:System.Net.IPAddress" /> 배열과 포트 번호(<see cref="T:System.Int32" />)로 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-203">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3457-204">비동기 연결을 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-204">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-205">비동기 <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> 를 호출 하 여 작업을 완료 해야 합니다 <xref:System.Net.Sockets.TcpClient.EndConnect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f3457-205">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="f3457-206">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-206">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="f3457-207">이 메서드는 작업이 완료 될 때까지 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-207">This method does not block until the operation completes.</span></span> <span data-ttu-id="f3457-208">작업이 완료 될 때까지 차단 하려면 중 하나를 사용 합니다 <xref:System.Net.Sockets.TcpClient.Connect%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-208">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="f3457-209">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-209">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 <span data-ttu-id="f3457-210">호출한 후 즉시이 메서드는 일반적으로 <xref:System.Net.Dns.BeginGetHostAddresses%2A> 메서드를 단일 호스트에 대 한 여러 IP 주소를 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-210">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-211">다음 코드 예제는 <xref:System.Net.Sockets.TcpClient> 원격 호스트에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-211">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3457-212">
            <paramref name="addresses" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-212">The <paramref name="addresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="f3457-213">소켓에 액세스하는 동안 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-213">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3457-214">
            <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-214">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="f3457-215">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-215">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3457-216">포트 번호가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-216">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (string host, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(string host, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (host As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::String ^ host, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : string * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (host, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="f3457-217">원격 호스트의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-217">The name of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="f3457-218">원격 호스트의 포트 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-218">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="f3457-219">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-219">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="f3457-220">연결 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-220">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="f3457-221">이 개체는 작업이 완료되면 <paramref name="requestCallback" /> 대리자에게 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-221">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3457-222">원격 호스트 연결에 대한 비동기 요청을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-222">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="f3457-223">원격 호스트는 호스트 이름(<see cref="T:System.String" />)과 포트 번호(<see cref="T:System.Int32" />)로 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-223">The remote host is specified by a host name (<see cref="T:System.String" />) and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3457-224">비동기 연결을 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-224">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-225">비동기 <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> 를 호출 하 여 작업을 완료 해야 합니다 <xref:System.Net.Sockets.TcpClient.EndConnect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f3457-225">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="f3457-226">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-226">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="f3457-227">이 메서드는 작업이 완료 될 때까지 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-227">This method does not block until the operation completes.</span></span> <span data-ttu-id="f3457-228">작업이 완료 될 때까지 차단 하려면 중 하나를 사용 합니다 <xref:System.Net.Sockets.TcpClient.Connect%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-228">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="f3457-229">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-229">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-230">다음 코드 예제는 <xref:System.Net.Sockets.TcpClient> 원격 호스트에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-230">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3457-231">
            <paramref name="host" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-231">The <paramref name="host" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="f3457-232">소켓에 액세스하는 동안 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-232">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3457-233">
            <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-233">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="f3457-234">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-234">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3457-235">포트 번호가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-235">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Client : System.Net.Sockets.Socket with get, set" Usage="System.Net.Sockets.TcpClient.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3457-236">내부 <see cref="T:System.Net.Sockets.Socket" />을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-236">Gets or sets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3457-237">내부 네트워크 <see cref="T:System.Net.Sockets.Socket" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-237">The underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-238"><xref:System.Net.Sockets.TcpClient> 만듭니다는 <xref:System.Net.Sockets.Socket> 네트워크를 통해 데이터를 주고받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-238"><xref:System.Net.Sockets.TcpClient> creates a <xref:System.Net.Sockets.Socket> to send and receive data over a network.</span></span> <span data-ttu-id="f3457-239">파생 된 클래스 <xref:System.Net.Sockets.TcpClient> 이 속성을 사용 하 여이 설정할 수 있습니다 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-239">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to get or set this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="f3457-240">기본 사용 <xref:System.Net.Sockets.Socket> 에서 반환 된 <xref:System.Net.Sockets.TcpClient.Client%2A> 필요한 경우 액세스 하는 것 이상의 <xref:System.Net.Sockets.TcpClient> 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-240">Use the underlying <xref:System.Net.Sockets.Socket> returned from <xref:System.Net.Sockets.TcpClient.Client%2A> if you require access beyond that which <xref:System.Net.Sockets.TcpClient> provides.</span></span> <span data-ttu-id="f3457-241">사용할 수도 있습니다 <xref:System.Net.Sockets.TcpClient.Client%2A> 기본 설정 <xref:System.Net.Sockets.Socket> 기존 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-241">You can also use <xref:System.Net.Sockets.TcpClient.Client%2A> to set the underlying <xref:System.Net.Sockets.Socket> to an existing <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="f3457-242">간단 하 게 활용 하려는 경우 유용할 수 있습니다 <xref:System.Net.Sockets.TcpClient> 기존의 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-242">This might be useful if you want to take advantage of the simplicity of <xref:System.Net.Sockets.TcpClient> using a pre-existing <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-243">다음 코드 예제에서는 <xref:System.Net.Sockets.TcpClient.Client%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-243">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpClient.Client%2A> property.</span></span> <span data-ttu-id="f3457-244">이 예제에서는 기본 수신 버퍼 크기를 <xref:System.Net.Sockets.Socket> 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-244">In this example, the receive buffer size of the underlying <xref:System.Net.Sockets.Socket> is changed.</span></span>  
  
 [!code-csharp[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="tcpClient.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3457-245">이 <see cref="T:System.Net.Sockets.TcpClient" /> 인스턴스를 삭제하고 내부 TCP 연결을 닫도록 요청합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-245">Disposes this <see cref="T:System.Net.Sockets.TcpClient" /> instance and requests that the underlying TCP connection be closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-246">합니다 <xref:System.Net.Sockets.TcpClient.Close%2A> 메서드 인스턴스 삭제 된 것으로 표시 하 고 요청 하는 연결 된 <xref:System.Net.Sockets.Socket> TCP 연결을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-246">The <xref:System.Net.Sockets.TcpClient.Close%2A> method marks the instance as disposed and requests that the associated <xref:System.Net.Sockets.Socket> close the TCP connection.</span></span> <span data-ttu-id="f3457-247">기반으로 합니다 <xref:System.Net.Sockets.TcpClient.LingerState%2A> 속성인 TCP 연결 수 개방 잠시 후에 대 한는 <xref:System.Net.Sockets.TcpClient.Close%2A> 보낼 데이터를 유지 하는 경우 메서드는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-247">Based on the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property, the TCP connection may stay open for some time after the <xref:System.Net.Sockets.TcpClient.Close%2A> method is called when data remains to be sent.</span></span> <span data-ttu-id="f3457-248">기본 연결을 닫는 완료 될 때 제공 된 알림이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-248">There is no notification provided when the underlying connection has completed closing.</span></span>  
  
 <span data-ttu-id="f3457-249">연결 된 종료 결국 하면이 메서드를 호출 <xref:System.Net.Sockets.Socket> 도 연결 된 닫힙니다 <xref:System.Net.Sockets.NetworkStream> 생성 된 데이터를 송수신 하는 데 사용 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-249">Calling this method will eventually result in the close of the associated <xref:System.Net.Sockets.Socket> and will also close the associated <xref:System.Net.Sockets.NetworkStream> that is used to send and receive data if one was created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-250">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-250">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="f3457-251">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-251">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-252">다음 코드 예제에는 닫는 방법을 보여 줍니다.는 <xref:System.Net.Sockets.TcpClient> 를 호출 하 여는 <xref:System.Net.Sockets.TcpClient.Close%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f3457-252">The following code example demonstrates closing a <xref:System.Net.Sockets.TcpClient> by calling the <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span>  
  
 [!code-cpp[NCLTCPClientSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLTcpClientSync/CPP/tcpclient.cpp#1)]
 [!code-csharp[NCLTCPClientSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3457-253">지정된 호스트 이름과 포트 번호를 사용하여 원격 TCP 호스트에 클라이언트를 연결합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-253">Connects the client to a remote TCP host using the specified host name and port number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (remoteEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ remoteEP);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPEndPoint -&gt; unit" Usage="tcpClient.Connect remoteEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="remoteEP">
          <span data-ttu-id="f3457-254">연결할 <see cref="T:System.Net.IPEndPoint" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-254">The <see cref="T:System.Net.IPEndPoint" /> to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3457-255">지정된 네트워크 엔드포인트를 사용하여 원격 TCP 호스트에 클라이언트를 연결합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-255">Connects the client to a remote TCP host using the specified remote network endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-256">지정 된 동기 원격 호스트 연결을 설정 하려면이 메서드를 호출 <xref:System.Net.IPEndPoint>합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-256">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="f3457-257">호출 하기 전에 <xref:System.Net.Sockets.TcpClient.Connect%2A> 의 인스턴스를 만들어야 합니다 <xref:System.Net.IPEndPoint> IP 주소 및 포트 번호를 사용 하 여 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-257">Before you call <xref:System.Net.Sockets.TcpClient.Connect%2A> you must create an instance of the <xref:System.Net.IPEndPoint> class using an IP address and a port number.</span></span> <span data-ttu-id="f3457-258">이 사용 하 여 <xref:System.Net.IPEndPoint> 으로 `remoteEP` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-258">Use this <xref:System.Net.IPEndPoint> as the `remoteEP` parameter.</span></span> <span data-ttu-id="f3457-259"><xref:System.Net.Sockets.TcpClient.Connect%2A> 메서드 연결 되거나 실패할 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-259">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="f3457-260">원격 호스트와 연결 되 면 사용 합니다 <xref:System.Net.Sockets.TcpClient.GetStream%2A> 메서드 내부 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-260">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="f3457-261">이 사용 하 여 <xref:System.Net.Sockets.NetworkStream> 데이터를 주고받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-261">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-262">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-262">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="f3457-263">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-263">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-264">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-264">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="f3457-265">자세한 내용은 참조 하세요. [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)</span><span class="sxs-lookup"><span data-stu-id="f3457-265">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-266">다음 코드 예제에서는 <xref:System.Net.IPEndPoint> 원격 호스트와 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-266">The following code example uses an <xref:System.Net.IPEndPoint> to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3457-267">
            <paramref name="remoteEp" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-267">The <paramref name="remoteEp" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="f3457-268">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-268">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3457-269">
            <see cref="T:System.Net.Sockets.TcpClient" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-269">The <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (address As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress * int -&gt; unit" Usage="tcpClient.Connect (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="f3457-270">연결할 호스트의 <see cref="T:System.Net.IPAddress" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-270">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="f3457-271">연결할 포트 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-271">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3457-272">지정된 IP 주소와 포트 번호를 사용하여 원격 TCP 호스트에 클라이언트를 연결합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-272">Connects the client to a remote TCP host using the specified IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-273">지정 된 동기 원격 호스트 연결을 설정 하려면이 메서드를 호출 <xref:System.Net.IPAddress> 및 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-273">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number.</span></span> <span data-ttu-id="f3457-274"><xref:System.Net.Sockets.TcpClient.Connect%2A> 메서드 연결 되거나 실패할 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-274">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="f3457-275">원격 호스트와 연결 되 면 사용 합니다 <xref:System.Net.Sockets.TcpClient.GetStream%2A> 메서드 내부 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-275">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="f3457-276">이 사용 하 여 <xref:System.Net.Sockets.NetworkStream> 데이터를 주고받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-276">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-277">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-277">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="f3457-278">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-278">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-279">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-279">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="f3457-280">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-280">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-281">다음 코드 예제에서는 원격 호스트와 연결할 IP 주소 및 포트 번호를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-281">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3457-282">
            <paramref name="address" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-282">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3457-283">
            <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-283">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="f3457-284">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-284">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3457-285">
            <see cref="T:System.Net.Sockets.TcpClient" />가 닫혀 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-285">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress[] ipAddresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress[] ipAddresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (ipAddresses As IPAddress(), port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(cli::array &lt;System::Net::IPAddress ^&gt; ^ ipAddresses, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress[] * int -&gt; unit" Usage="tcpClient.Connect (ipAddresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAddresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ipAddresses">
          <span data-ttu-id="f3457-286">연결할 호스트의 <see cref="T:System.Net.IPAddress" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-286">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="f3457-287">연결할 포트 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-287">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3457-288">지정된 IP 주소와 포트 번호를 사용하여 원격 TCP 호스트에 클라이언트를 연결합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-288">Connects the client to a remote TCP host using the specified IP addresses and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-289">호출한 후 즉시이 메서드는 일반적으로 <xref:System.Net.Dns.BeginGetHostAddresses%2A> 메서드를 단일 호스트에 대 한 여러 IP 주소를 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-289">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="f3457-290">호출 된 <xref:System.Net.Sockets.TcpClient.Connect%2A> 의 배열에서 지정 된 호스트에 동기 원격 호스트 연결을 설정 하는 방법 <xref:System.Net.IPAddress> 요소 및 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-290">Call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number.</span></span> <span data-ttu-id="f3457-291"><xref:System.Net.Sockets.TcpClient.Connect%2A> 메서드 연결 되거나 실패할 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-291">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="f3457-292">원격 호스트와 연결 되 면 사용 합니다 <xref:System.Net.Sockets.TcpClient.GetStream%2A> 메서드 내부 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-292">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="f3457-293">이 사용 하 여 <xref:System.Net.Sockets.NetworkStream> 데이터를 주고받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-293">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-294">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-294">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="f3457-295">이 코드를 가져온 후에 MSDN 라이브러리의 Windows 소켓 버전 2 API 오류 코드 설명서를 참조할 수 있습니다 [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library) 에 대 한 자세한 설명은 오류입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-295">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-296">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-296">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="f3457-297">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-297">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-298">다음 코드 예제에서는 원격 호스트와 연결할 IP 주소 및 포트 번호를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-298">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#8)]
 [!code-csharp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3457-299">
            <paramref name="ipAddresses" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-299">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3457-300">포트 번호가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-300">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="f3457-301">소켓에 액세스하는 동안 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-301">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3457-302">
            <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-302">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="f3457-303">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-303">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3457-304">이 메서드는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 플래그 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 플래그를 사용하는 소켓에 대해서만 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-304">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : string * int -&gt; unit" Usage="tcpClient.Connect (hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="f3457-305">연결할 원격 호스트의 DNS 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-305">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="f3457-306">연결한 원격 호스트의 포트 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-306">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3457-307">지정된 호스트의 지정된 포트에 클라이언트를 연결합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-307">Connects the client to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-308">및 포트 번호를 지정 된 호스트 이름에 동기 원격 호스트 연결을 설정 하려면이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-308">Call this method to establish a synchronous remote host connection to the specified host name and port number.</span></span> <span data-ttu-id="f3457-309"><xref:System.Net.Sockets.TcpClient.Connect%2A> 메서드 연결 되거나 실패할 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-309">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="f3457-310">원격 호스트와 연결 되 면 사용 합니다 <xref:System.Net.Sockets.TcpClient.GetStream%2A> 메서드 내부 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-310">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="f3457-311">이 사용 하 여 <xref:System.Net.Sockets.NetworkStream> 데이터를 주고받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-311">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
 <span data-ttu-id="f3457-312">IPv6을 사용 하는 경우 및 <xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29> 메서드는 모두 IPv6로 확인 되는 호스트에 연결할 및 IPv4 주소, IPv6 주소에 대 한 연결 IPv4 주소 앞의 첫 번째 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-312">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="f3457-313">호스트의 IPv6 주소에서 수신 하지 않는 경우 연결을 설정 하는 시간을 지연이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-313">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-314">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-314">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="f3457-315">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-315">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-316">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-316">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="f3457-317">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-317">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-318">다음 코드 예제에서는 사용 하 여 원격 호스트에 연결할 호스트 이름과 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-318">The following code example uses the host name and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3457-319">
            <paramref name="hostname" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-319">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3457-320">
            <paramref name="port" /> 매개 변수가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-320">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="f3457-321">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-321">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3457-322">
            <see cref="T:System.Net.Sockets.TcpClient" />가 닫혀 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-322">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3457-323">지정된 호스트 이름과 포트 번호를 사용하여 비동기 작업으로 원격 TCP 호스트에 클라이언트를 연결합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-323">Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (address As IPAddress, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="f3457-324">연결할 호스트의 <see cref="T:System.Net.IPAddress" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-324">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="f3457-325">연결할 포트 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-325">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3457-326">지정된 IP 주소와 포트 번호를 사용하여 비동기 작업으로 원격 TCP 호스트에 클라이언트를 연결합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-326">Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3457-327">
            <see cref="T:System.Threading.Tasks.Task" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-327">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="f3457-328">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-328">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-329">이 작업을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-329">This operation will not block.</span></span> <span data-ttu-id="f3457-330">반환 되는 <xref:System.Threading.Tasks.Task> 개체는 TCP 연결을 설정한 후에 완료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-330">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="f3457-331">연결 요청이 진행 중일 때이 메서드는 호출 스레드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-331">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="f3457-332">지정 된 동기 원격 호스트 연결을 설정 하려면이 메서드를 호출 <xref:System.Net.IPAddress> 및 비동기 작업으로 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-332">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number as an asynchronous operation.</span></span> <span data-ttu-id="f3457-333">원격 호스트와 연결 되 면 사용 합니다 <xref:System.Net.Sockets.TcpClient.GetStream%2A> 메서드 내부 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-333">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="f3457-334">이 사용 하 여 <xref:System.Net.Sockets.NetworkStream> 데이터를 주고받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-334">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-335">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-335">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="f3457-336">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-336">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-337">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-337">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="f3457-338">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-338">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3457-339">
            <paramref name="address" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-339">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3457-340">
            <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-340">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="f3457-341">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-341">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3457-342">
            <see cref="T:System.Net.Sockets.TcpClient" />가 닫혀 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-342">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress[] addresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress[] addresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (addresses As IPAddress(), port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress[] * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (addresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="f3457-343">연결할 호스트의 <see cref="T:System.Net.IPAddress" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-343">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="f3457-344">연결할 포트 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-344">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3457-345">지정된 IP 주소와 포트 번호를 사용하여 비동기 작업으로 원격 TCP 호스트에 클라이언트를 연결합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-345">Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3457-346">
            <see cref="T:System.Threading.Tasks.Task" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-346">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="f3457-347">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-347">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-348">이 작업을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-348">This operation will not block.</span></span> <span data-ttu-id="f3457-349">반환 되는 <xref:System.Threading.Tasks.Task> 개체는 TCP 연결을 설정한 후에 완료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-349">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="f3457-350">연결 요청이 진행 중일 때이 메서드는 호출 스레드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-350">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="f3457-351">호출한 후 즉시이 메서드는 일반적으로 <xref:System.Net.Dns.BeginGetHostAddresses%2A> 메서드를 단일 호스트에 대 한 여러 IP 주소를 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-351">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="f3457-352">배열에서 지정 된 호스트에 동기 원격 호스트 연결을 설정 하려면이 메서드를 호출 <xref:System.Net.IPAddress> 요소와 비동기 작업으로 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-352">Call this method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number as an asynchronous operation.</span></span> <span data-ttu-id="f3457-353">원격 호스트와 연결 되 면 사용 합니다 <xref:System.Net.Sockets.TcpClient.GetStream%2A> 메서드 내부 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-353">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="f3457-354">이 사용 하 여 <xref:System.Net.Sockets.NetworkStream> 데이터를 주고받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-354">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-355">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-355">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="f3457-356">이 코드를 가져온 후에 MSDN 라이브러리의 Windows 소켓 버전 2 API 오류 코드 설명서를 참조할 수 있습니다 [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library) 에 대 한 자세한 설명은 오류입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-356">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-357">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-357">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="f3457-358">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-358">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3457-359">
            <paramref name="ipAddresses" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-359">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3457-360">포트 번호가 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-360">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="f3457-361">소켓에 액세스하는 동안 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-361">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3457-362">
            <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-362">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="f3457-363">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-363">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f3457-364">이 메서드는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 플래그 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 플래그를 사용하는 소켓에 대해서만 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-364">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (host As String, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::String ^ host, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : string * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (host, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="f3457-365">연결할 원격 호스트의 DNS 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-365">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="f3457-366">연결한 원격 호스트의 포트 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-366">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3457-367">지정된 호스트의 지정된 TCP 포트에 클라이언트를 비동기 작업으로 연결합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-367">Connects the client to the specified TCP port on the specified host as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3457-368">
            <see cref="T:System.Threading.Tasks.Task" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-368">Returns <see cref="T:System.Threading.Tasks.Task" /></span>
          </span>
          <span data-ttu-id="f3457-369">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-369">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-370">이 작업을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-370">This operation will not block.</span></span> <span data-ttu-id="f3457-371">반환 되는 <xref:System.Threading.Tasks.Task> 개체는 TCP 연결을 설정한 후에 완료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-371">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="f3457-372">연결 요청이 진행 중일 때이 메서드는 호출 스레드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-372">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="f3457-373">지정 된 호스트 이름에 동기 원격 호스트 연결을 설정 하 여 포트 번호는 비동기 작업으로이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-373">Call this method to establish a synchronous remote host connection to the specified host name and port number as an asynchronous operation.</span></span> <span data-ttu-id="f3457-374">원격 호스트와 연결 되 면 사용 합니다 <xref:System.Net.Sockets.TcpClient.GetStream%2A> 메서드 내부 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-374">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="f3457-375">이 사용 하 여 <xref:System.Net.Sockets.NetworkStream> 데이터를 주고받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-375">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
 <span data-ttu-id="f3457-376">IPv6을 사용 하는 경우 및 <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> 메서드는 모두 IPv6로 확인 되는 호스트에 연결할 및 IPv4 주소, IPv6 주소에 대 한 연결 IPv4 주소 앞의 첫 번째 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-376">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="f3457-377">호스트의 IPv6 주소에서 수신 하지 않는 경우 연결을 설정 하는 시간을 지연이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-377">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-378">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-378">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="f3457-379">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-379">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-380">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-380">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="f3457-381">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-381">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3457-382">
            <paramref name="hostname" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-382">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f3457-383">
            <paramref name="port" /> 매개 변수가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-383">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="f3457-384">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-384">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3457-385">
            <see cref="T:System.Net.Sockets.TcpClient" />가 닫혀 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-385">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connected">
      <MemberSignature Language="C#" Value="public bool Connected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Connected" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Connected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Connected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Connected : bool" Usage="System.Net.Sockets.TcpClient.Connected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3457-386">
            <see cref="T:System.Net.Sockets.Socket" />의 내부 <see cref="T:System.Net.Sockets.TcpClient" />이 원격 호스트에 연결되어 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-386">Gets a value indicating whether the underlying <see cref="T:System.Net.Sockets.Socket" /> for a <see cref="T:System.Net.Sockets.TcpClient" /> is connected to a remote host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3457-387">가장 최근 작업에서 <see cref="P:System.Net.Sockets.TcpClient.Client" /> 소켓이 원격 리소스에 연결되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-387">
              <see langword="true" /> if the <see cref="P:System.Net.Sockets.TcpClient.Client" /> socket was connected to a remote resource as of the most recent operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-388"><xref:System.Net.Sockets.TcpClient.Connected%2A> 속성의 연결 상태를 가져옵니다는 <xref:System.Net.Sockets.TcpClient.Client%2A> 소켓 마지막 I/O 작업을 기준으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-388">The <xref:System.Net.Sockets.TcpClient.Connected%2A> property gets the connection state of the <xref:System.Net.Sockets.TcpClient.Client%2A> socket as of the last I/O operation.</span></span> <span data-ttu-id="f3457-389">반환 될 때 `false`, <xref:System.Net.Sockets.TcpClient.Client%2A> 소켓이 연결 된 적 또는 연결 되어 있지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-389">When it returns `false`, the <xref:System.Net.Sockets.TcpClient.Client%2A> socket was either never connected, or is no longer connected.</span></span>  
  
 <span data-ttu-id="f3457-390">때문에 <xref:System.Net.Sockets.TcpClient.Connected%2A> 가장 최근 작업 연결의 상태를만 반영 하는 속성, 현재 상태를 확인 하는 메시지를 받거나 보낼 하려고 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-390">Because the <xref:System.Net.Sockets.TcpClient.Connected%2A> property only reflects the state of the connection as of the most recent operation, you should attempt to send or receive a message to determine the current state.</span></span> <span data-ttu-id="f3457-391">이 속성은 더 이상 반환 메시지 보내기에 실패 하면 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-391">After the message send fails, this property no longer returns `true`.</span></span> <span data-ttu-id="f3457-392">이 동작은 의도적인 것을 참고 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-392">Note that this behavior is by design.</span></span> <span data-ttu-id="f3457-393">테스트 및 송신/수신 사이 시간, 연결 손실 되었을 수 있습니다 때문에 안정적으로 연결의 상태를 테스트할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-393">You cannot reliably test the state of the connection because, in the time between the test and a send/receive, the connection could have been lost.</span></span> <span data-ttu-id="f3457-394">코드는 소켓 연결 되어 있으며 정상적으로 처리 실패 한 전송을 가정해 야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-394">Your code should assume the socket is connected, and gracefully handle failed transmissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-395">다음 코드 예제는 원격 끝점에 연결 하 고 연결을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-395">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="tcpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3457-396">
            <see cref="T:System.Net.Sockets.TcpClient" />에서 사용하는 관리되는 리소스 및 관리되지 않는 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-396">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="tcpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="f3457-397">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-397">Set to <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3457-398">
            <see cref="T:System.Net.Sockets.TcpClient" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-398">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-399">이 메서드는 공용 `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f3457-399">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="f3457-400">`Dispose()` 이 메서드를 호출 합니다 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-400">`Dispose()` invokes this method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="f3457-401"><xref:System.Object.Finalize%2A> 이 메서드를 호출 `disposing` 로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-401"><xref:System.Object.Finalize%2A> invokes this method with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="f3457-402">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.Net.Sockets.TcpClient>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-402">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.TcpClient> references.</span></span> <span data-ttu-id="f3457-403">즉, 호출 하 여는 `Dispose()` 참조 된 각 개체의 메서드.</span><span class="sxs-lookup"><span data-stu-id="f3457-403">It does this by invoking the `Dispose()` method of each referenced object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-404">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-404">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="f3457-405">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-405">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f3457-406">
              <see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f3457-406">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="f3457-407">
              <see langword="Dispose(Boolean)" />를 재정의할 때 이전 <see langword="Dispose" /> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f3457-407">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="f3457-408">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f3457-408">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="f3457-409">에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />를 참조 하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="f3457-409">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndConnect">
      <MemberSignature Language="C#" Value="public void EndConnect (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndConnect(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndConnect : IAsyncResult -&gt; unit" Usage="tcpClient.EndConnect asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="f3457-410">
            <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />를 호출할 때 반환되는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-410">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3457-411">보류 중인 비동기 연결 시도를 끝냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-411">Ends a pending asynchronous connection attempt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-412">이 메서드 차단 작업이 때까지 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-412">This method blocks until the operation is complete.</span></span> <span data-ttu-id="f3457-413">이 작업을 동기적으로 수행 하려면 사용을 <xref:System.Net.Sockets.TcpClient.Connect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f3457-413">To perform this operation synchronously, use a <xref:System.Net.Sockets.TcpClient.Connect%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-414">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-414">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="f3457-415">이 코드를 가져온 후에 MSDN 라이브러리의 Windows 소켓 버전 2 API 오류 코드 설명서를 참조할 수 있습니다 [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library) 에 대 한 자세한 설명은 오류입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-415">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-416">다음 코드 예제에서는 비동기 연결 시도 종료합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-416">The following code example ends the asynchronous connection attempt.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f3457-417">
            <paramref name="asyncResult" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-417">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f3457-418">
            <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> 메서드를 호출했지만 <paramref name="asyncResult" /> 매개 변수가 반환되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-418">The <paramref name="asyncResult" /> parameter was not returned by a call to a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3457-419">
            <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> 메서드가 비동기 연결을 위해 이미 호출된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-419">The <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> method was previously called for the asynchronous connection.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="f3457-420">
            <see cref="T:System.Net.Sockets.Socket" />에 액세스하려고 시도하는 동안 오류가 발생한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-420">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3457-421">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-421">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3457-422">
            <see cref="T:System.Boolean" />가 하나의 포트를 하나의 클라이언트에서만 사용하도록 허용하는지 여부를 지정하는 <see cref="T:System.Net.Sockets.TcpClient" /> 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-422">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3457-423">
            <see cref="T:System.Net.Sockets.TcpClient" />에서 특정 포트를 하나의 클라이언트에서만 사용하도록 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-423">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f3457-424">Windows Server 2003 및 Windows XP 서비스 팩 2 이상에서는 기본값이 <see langword="true" />이고, 다른 모든 버전에서는 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-424">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-425">기본적으로 여러 클라이언트가 특정 포트를 사용할 수 있습니다. 그러나 클라이언트 중 하나만 포트로 전송 되는 네트워크 트래픽에 대 한 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-425">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="f3457-426">사용할 수는 <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> 여러 클라이언트가 특정 포트를 사용 하지 않도록 설정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-426">You can use the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="f3457-427">기본 소켓 클라이언트 포트에 바인딩된이 속성을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-427">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="f3457-428">호출 하는 경우 <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>를 <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, 또는 <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, 클라이언트 포트 메서드의 부작용으로 바인딩되어 있고 설정할 수 없습니다는 <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> 속성</span><span class="sxs-lookup"><span data-stu-id="f3457-428">If you call <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, or <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, the client port is bound as a side effect of the method, and you cannot subsequently set the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-429">다음 코드 예제에서는 <xref:System.Net.Sockets.TcpClient> 가져오고의 값을 설정 하 고는 <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-429">The following code example creates a <xref:System.Net.Sockets.TcpClient> and gets and sets the value of the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="f3457-430">내부 소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-430">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3457-431">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-431">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpClient ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="tcpClient.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3457-432">
            <see cref="T:System.Net.Sockets.TcpClient" /> 클래스에서 사용한 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-432">Frees resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-433">이 메서드는 <xref:System.Object.Finalize%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-433">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f3457-434">응용 프로그램 코드는이 메서드를 호출 하지 개체의 <xref:System.Object.Finalize%2A> 메서드를 호출 하 여 가비지 수집기에 의해 종료를 사용 하지 않도록 설정 된 경우가 아니면 자동으로 가비지를 수집 하는 동안 호출 됩니다는 <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f3457-434">Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f3457-435">합니다 <xref:System.Net.Sockets.TcpClient> 클래스 종료자 TCP 연결을 닫고 연결 된 모든 관리 되는 리소스를 해제 합니다 <xref:System.Net.Sockets.TcpClient>합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-435">The <xref:System.Net.Sockets.TcpClient> class finalizer closes the TCP connection and releases all managed resources associated with the <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="f3457-436">이러한 리소스로 내부 <xref:System.Net.Sockets.Socket> 원격 호스트와 연결 하는 데 및 <xref:System.Net.Sockets.NetworkStream> 데이터 전송 및 수신 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-436">These resources include the underlying <xref:System.Net.Sockets.Socket> used for connecting with the remote host, and the <xref:System.Net.Sockets.NetworkStream> used to send and receive data.</span></span> <span data-ttu-id="f3457-437">종료자는 관리 되지 않는 리소스를 해제 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-437">The finalizer does not release any unmanaged resources.</span></span>  
  
 <span data-ttu-id="f3457-438">자세한 내용은 [Finalize 메서드 및 소멸자](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100))를 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md), 및 [Finalize 메서드 재정의](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-438">For more information, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
        <related type="Article" href="~/docs/standard/garbage-collection/index.md">
          <span data-ttu-id="f3457-439">가비지 컬렉션</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-439">Garbage Collection</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.NetworkStream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.NetworkStream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As NetworkStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::NetworkStream ^ GetStream();" />
      <MemberSignature Language="F#" Value="member this.GetStream : unit -&gt; System.Net.Sockets.NetworkStream" Usage="tcpClient.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.NetworkStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3457-440">데이터를 보내고 받는 데 사용되는 <see cref="T:System.Net.Sockets.NetworkStream" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-440">Returns the <see cref="T:System.Net.Sockets.NetworkStream" /> used to send and receive data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3457-441">내부 <see cref="T:System.Net.Sockets.NetworkStream" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-441">The underlying <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-442"><xref:System.Net.Sockets.TcpClient.GetStream%2A> 반환 된 <xref:System.Net.Sockets.NetworkStream> 데이터를 받고 보내는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-442"><xref:System.Net.Sockets.TcpClient.GetStream%2A> returns a <xref:System.Net.Sockets.NetworkStream> that you can use to send and receive data.</span></span> <span data-ttu-id="f3457-443"><xref:System.Net.Sockets.NetworkStream> 클래스에서 상속 된 <xref:System.IO.Stream> 메서드 및 네트워크 통신을 용이 하 게 사용 되는 속성의 다양 한 컬렉션을 제공 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-443">The <xref:System.Net.Sockets.NetworkStream> class inherits from the <xref:System.IO.Stream> class, which provides a rich collection of methods and properties used to facilitate network communications.</span></span>  
  
 <span data-ttu-id="f3457-444">호출 해야 합니다는 <xref:System.Net.Sockets.TcpClient.Connect%2A> 메서드 첫 번째, 또는 <xref:System.Net.Sockets.TcpClient.GetStream%2A> 메서드는 throw는 <xref:System.InvalidOperationException>합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-444">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method first, or the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="f3457-445">가져온 후는 <xref:System.Net.Sockets.NetworkStream>를 호출 합니다 <xref:System.Net.Sockets.NetworkStream.Write%2A> 원격 호스트에 데이터를 전송 하는 방법.</span><span class="sxs-lookup"><span data-stu-id="f3457-445">After you have obtained the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method to send data to the remote host.</span></span> <span data-ttu-id="f3457-446">호출 된 <xref:System.Net.Sockets.NetworkStream.Read%2A> 원격 호스트에서 데이터를 수신 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-446">Call the <xref:System.Net.Sockets.NetworkStream.Read%2A> method to receive data arriving from the remote host.</span></span> <span data-ttu-id="f3457-447">두 가지이 방법에는 지정된 된 작업이 수행 될 때까지 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-447">Both of these methods block until the specified operation is performed.</span></span> <span data-ttu-id="f3457-448">확인 하 여 읽기 작업을 차단 하지 않아도 <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-448">You can avoid blocking on a read operation by checking the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property.</span></span> <span data-ttu-id="f3457-449">`true` 값은 데이터 원격 호스트에서 도착 되었으며 읽을 수 있음을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-449">A `true` value means that data has arrived from the remote host and is available for reading.</span></span> <span data-ttu-id="f3457-450">이 경우 <xref:System.Net.Sockets.NetworkStream.Read%2A> 즉시 완료 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-450">In this case, <xref:System.Net.Sockets.NetworkStream.Read%2A> is guaranteed to complete immediately.</span></span> <span data-ttu-id="f3457-451">원격 호스트에서 해당 연결을 종료 하는 경우 <xref:System.Net.Sockets.NetworkStream.Read%2A> 0 바이트를 사용 하 여 즉시 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-451">If the remote host has shutdown its connection, <xref:System.Net.Sockets.NetworkStream.Read%2A> will immediately return with zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-452">닫아야 합니다 <xref:System.Net.Sockets.NetworkStream> 후에 데이터 보내기 및 받기.</span><span class="sxs-lookup"><span data-stu-id="f3457-452">You must close the <xref:System.Net.Sockets.NetworkStream> when you are through sending and receiving data.</span></span> <span data-ttu-id="f3457-453">닫는 <xref:System.Net.Sockets.TcpClient> 해제 하지 않습니다는 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-453">Closing <xref:System.Net.Sockets.TcpClient> does not release the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-454">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-454">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="f3457-455">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-455">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f3457-456">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-456">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="f3457-457">자세한 내용은 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-457">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-458">다음 코드 예제에서는 <xref:System.Net.Sockets.TcpClient.GetStream%2A> 기본 가져오려고 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-458">The following code example uses <xref:System.Net.Sockets.TcpClient.GetStream%2A> to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="f3457-459">구한 후 합니다 <xref:System.Net.Sockets.NetworkStream>를 전송 하 고 사용 하 여 받고 해당 <xref:System.Net.Sockets.NetworkStream.Write%2A> 및 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f3457-459">After obtaining the <xref:System.Net.Sockets.NetworkStream>, it sends and receives using its <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#14)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#14)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f3457-460">
            <see cref="T:System.Net.Sockets.TcpClient" />가 원격 호스트에 연결되어 있지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-460">The <see cref="T:System.Net.Sockets.TcpClient" /> is not connected to a remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="f3457-461">
            <see cref="T:System.Net.Sockets.TcpClient" />이 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-461">The <see cref="T:System.Net.Sockets.TcpClient" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LingerState">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.LingerOption LingerState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.LingerOption LingerState" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.LingerState" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerState As LingerOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::LingerOption ^ LingerState { System::Net::Sockets::LingerOption ^ get(); void set(System::Net::Sockets::LingerOption ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LingerState : System.Net.Sockets.LingerOption with get, set" Usage="System.Net.Sockets.TcpClient.LingerState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.LingerOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3457-462">연결된 소켓의 링거 상태에 대한 정보를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-462">Gets or sets information about the linger state of the associated socket.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3457-463">
            <see cref="T:System.Net.Sockets.LingerOption" />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-463">A <see cref="T:System.Net.Sockets.LingerOption" />.</span>
          </span>
          <span data-ttu-id="f3457-464">기본적으로 링거는 비활성화됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-464">By default, lingering is disabled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-465">합니다 <xref:System.Net.Sockets.TcpClient.LingerState%2A> 속성이 변경 되는 방법은 <xref:System.Net.Sockets.Socket.Close%2A> 메서드 동작 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-465">The <xref:System.Net.Sockets.TcpClient.LingerState%2A> property changes the way <xref:System.Net.Sockets.Socket.Close%2A> method behaves.</span></span> <span data-ttu-id="f3457-466">집합 Winsock에서 연결을 다시 설정할는 조건을 수정 하는 경우이 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-466">This property when set modifies the conditions under which the connection can be reset by Winsock.</span></span> <span data-ttu-id="f3457-467">연결 다시 설정은 IP 프로토콜 동작에 따라 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-467">Connection resets can still occur based on the IP protocol behavior.</span></span>  
  
 <span data-ttu-id="f3457-468">이 속성에 대 한 호출 후 TCP 연결이 열린 채로 시간의 길이 제어 <xref:System.Net.Sockets.TcpClient.Close%2A> 데이터 전송 대기 상태인 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-468">This property controls the length of time that the TCP connection will remain open after a call to <xref:System.Net.Sockets.TcpClient.Close%2A> when data remains to be sent.</span></span> <span data-ttu-id="f3457-469">호출 하는 경우는 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드, 데이터를 보내는 네트워크 버퍼에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-469">When you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, data is placed in the outgoing network buffer.</span></span> <span data-ttu-id="f3457-470">이 데이터는 하기 전에 원격 호스트에 전송 되도록 하려면이 속성을 사용할 수는 <xref:System.Net.Sockets.TcpClient.Close%2A> 메서드가 연결을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-470">This property can be used to ensure that this data is sent to the remote host before the <xref:System.Net.Sockets.TcpClient.Close%2A> method drops the connection.</span></span>  
  
 <span data-ttu-id="f3457-471">활성화 하려면 만들기를 <xref:System.Net.Sockets.LingerOption> 원하는 값이 포함 된 인스턴스 및 설정의 <xref:System.Net.Sockets.TcpClient.LingerState%2A> 이 인스턴스에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-471">To enable lingering, create a <xref:System.Net.Sockets.LingerOption> instance containing the desired values, and set the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property to this instance.</span></span>  
  
 <span data-ttu-id="f3457-472">동작을 설명 하는 다음 표에서 <xref:System.Net.Sockets.TcpClient.Close%2A> 의 가능한 값에 대 한 메서드를 <xref:System.Net.Sockets.LingerOption.Enabled%2A> 속성 및 <xref:System.Net.Sockets.LingerOption.LingerTime%2A> 속성에 저장 됩니다는 <xref:System.Net.Sockets.TcpClient.LingerState%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-472">The following table describes the behavior of the <xref:System.Net.Sockets.TcpClient.Close%2A> method for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property.</span></span>  
  
|<span data-ttu-id="f3457-473">LingerState.Enabled</span><span class="sxs-lookup"><span data-stu-id="f3457-473">LingerState.Enabled</span></span>|<span data-ttu-id="f3457-474">LingerState.LingerTime</span><span class="sxs-lookup"><span data-stu-id="f3457-474">LingerState.LingerTime</span></span>|<span data-ttu-id="f3457-475">동작</span><span class="sxs-lookup"><span data-stu-id="f3457-475">Behavior</span></span>|  
|-------------------------|----------------------------|--------------|  
|<span data-ttu-id="f3457-476">`false` (사용 안 함), 기본값</span><span class="sxs-lookup"><span data-stu-id="f3457-476">`false` (disabled), the default value</span></span>|<span data-ttu-id="f3457-477">제한 시간이 적용 되지 않습니다 (기본값).</span><span class="sxs-lookup"><span data-stu-id="f3457-477">The time-out is not applicable, (default).</span></span>|<span data-ttu-id="f3457-478">기본 IP 프로토콜 제한 시간이 만료 될 때까지 보류 중인 데이터 보내려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-478">Attempts to send pending data until the default IP protocol time-out expires.</span></span>|  
|<span data-ttu-id="f3457-479">`true` (사용)</span><span class="sxs-lookup"><span data-stu-id="f3457-479">`true` (enabled)</span></span>|<span data-ttu-id="f3457-480">0이 아닌 제한 시간</span><span class="sxs-lookup"><span data-stu-id="f3457-480">A nonzero time-out</span></span>|<span data-ttu-id="f3457-481">지정된 된 제한 시간이 만료 되 면 시도가 실패 하면 다음 Winsock 연결을 다시 설정 될 때까지 보류 중인 데이터 보내려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-481">Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</span></span>|  
|<span data-ttu-id="f3457-482">`true` (사용)</span><span class="sxs-lookup"><span data-stu-id="f3457-482">`true` (enabled)</span></span>|<span data-ttu-id="f3457-483">0 시간 제한입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-483">A zero timeout.</span></span>|<span data-ttu-id="f3457-484">데이터 및 Winsock 재설정 보류 중인 연결을 삭제합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-484">Discards any pending data and Winsock resets the connection.</span></span>|  
  
 <span data-ttu-id="f3457-485">IP 스택이 연결의 왕복 시간을 기준으로 사용 하려면 기본 IP 프로토콜 제한 시간을 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-485">The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</span></span> <span data-ttu-id="f3457-486">대부분의 경우에서 시간 제한이 스택에 의해 계산 응용 프로그램에 의해 정의 된 보다 상대적입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-486">In most cases, the time-out computed by the stack is more relevant than one defined by an application.</span></span> <span data-ttu-id="f3457-487">소켓에 대 한 기본 동작은이 때는 <xref:System.Net.Sockets.TcpClient.LingerState%2A> 속성이 설정 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-487">This is the default behavior for a socket when the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is not set.</span></span>  
  
 <span data-ttu-id="f3457-488">경우는 <xref:System.Net.Sockets.LingerOption.LingerTime%2A> 속성에 저장 됩니다는 <xref:System.Net.Sockets.TcpClient.LingerState%2A> 속성의 기본 IP 프로토콜 제한 보다 큰, 기본 IP 프로토콜 제한 시간이 적용 되 고 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-488">When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-489">다음 코드 예제에서는 집합 및 소켓 링커 가져옵니다 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-489">The following code example sets and gets the sockets linger time.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#12)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#12)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.LingerOption" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NoDelay">
      <MemberSignature Language="C#" Value="public bool NoDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoDelay" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.NoDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property NoDelay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoDelay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NoDelay : bool with get, set" Usage="System.Net.Sockets.TcpClient.NoDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3457-490">송신 또는 수신 버퍼가 꽉 차지 않았을 때 지연을 비활성화하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-490">Gets or sets a value that disables a delay when send or receive buffers are not full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3457-491">지연이 비활성화되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-491">
              <see langword="true" /> if the delay is disabled, otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f3457-492">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-492">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-493">때 <xref:System.Net.Sockets.TcpClient.NoDelay%2A> 됩니다 `false`, <xref:System.Net.Sockets.TcpClient> 보내지 않도록 패킷이 네트워크를 통해 상당한 양의 보내는 데이터를 수집할 때까지 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-493">When <xref:System.Net.Sockets.TcpClient.NoDelay%2A> is `false`, a <xref:System.Net.Sockets.TcpClient> does not send a packet over the network until it has collected a significant amount of outgoing data.</span></span> <span data-ttu-id="f3457-494">TCP 세그먼트에 대 한 오버 헤드 양 때문 적은 양의 데이터를 보내는 비효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-494">Because of the amount of overhead in a TCP segment, sending small amounts of data is inefficient.</span></span> <span data-ttu-id="f3457-495">그러나 상황을 매우 적은 양의 데이터를 보내거나 보내는 각 패킷의 즉시 응답을 예상 해야 하는 방법이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-495">However, situations do exist where you need to send very small amounts of data or expect immediate responses from each packet you send.</span></span> <span data-ttu-id="f3457-496">의사 결정에는 응용 프로그램 요구 사항에 비해 네트워크 효율성의 상대적 중요도 평가 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-496">Your decision should weigh the relative importance of network efficiency versus application requirements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-497">다음 코드 예제에서는 지연 시간을 사용 하지 않도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-497">The following code example disables the delay.</span></span> <span data-ttu-id="f3457-498">값을 확인 한 다음 <xref:System.Net.Sockets.TcpClient.NoDelay%2A> 속성이 성공적으로 설정 된 것을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-498">It then checks the value of <xref:System.Net.Sockets.TcpClient.NoDelay%2A> to verify that the property was successfully set.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3457-499">수신 버퍼의 크기를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-499">Gets or sets the size of the receive buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3457-500">수신 버퍼의 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-500">The size of the receive buffer, in bytes.</span>
          </span>
          <span data-ttu-id="f3457-501">기본값은 8192,536바이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-501">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-502"><xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> 속성 수를 예상 하는 각 읽기 작업에 대 한 수신 버퍼에 저장 하는 바이트 수를 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-502">The <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property gets or sets the number of bytes that you are expecting to store in the receive buffer for each read operation.</span></span> <span data-ttu-id="f3457-503">이 속성에는 실제로 들어오는 데이터를 받기 위해 할당 된 네트워크 버퍼 공간을 조작 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-503">This property actually manipulates the network buffer space allocated for receiving incoming data.</span></span>  
  
 <span data-ttu-id="f3457-504">네트워크 버퍼 커야 이상으로 호출 하는 경우 원하는 데이터를 사용할 수 있도록 응용 프로그램 버퍼를 <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f3457-504">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be available when you call the <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f3457-505">사용 된 <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> 속성을이 크기를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-505">Use the <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="f3457-506">전달 해야 응용 프로그램은 대량 데이터를 받는 경우를 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드는 매우 큰 응용 프로그램 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-506">If your application will be receiving bulk data, you should pass the <xref:System.Net.Sockets.NetworkStream.Read%2A> method a very large application buffer.</span></span>  
  
 <span data-ttu-id="f3457-507">요청 하는 네트워크 버퍼 데이터의 양을 보다 작은 경우는 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드 됩니다 원하는 양의 단일 읽기 작업에서 데이터를 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-507">If the network buffer is smaller than the amount of data you request in the <xref:System.Net.Sockets.NetworkStream.Read%2A> method, you will not be able to retrieve the desired amount of data in one read operation.</span></span> <span data-ttu-id="f3457-508">이 오버 헤드가 추가로 호출 하 여 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f3457-508">This incurs the overhead of additional calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-509">다음 코드 예제에서는 설정 하 고 수신 버퍼 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-509">The following code example sets and gets the receive buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="f3457-510">버퍼 크기를 설정하는 동안 오류가 발생한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-510">An error occurred when setting the buffer size.</span>
          </span>
          <span data-ttu-id="f3457-511">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-511">-or-</span>
          </span>
          <span data-ttu-id="f3457-512">.NET Compact Framework 응용 프로그램에서 이 속성을 설정할 수 없는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-512">In .NET Compact Framework applications, you cannot set this property.</span>
          </span>
          <span data-ttu-id="f3457-513">해결 방법은 설명 부분의 플랫폼 참고를 참조하십시오.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-513">For a workaround, see the Platform Note in Remarks.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.Sockets.TcpClient.SendBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTimeout">
      <MemberSignature Language="C#" Value="public int ReceiveTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3457-514">읽기 작업이 시작된 후에 <see cref="T:System.Net.Sockets.TcpClient" />가 데이터를 수신하기 위해 대기하는 기간을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-514">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait to receive data once a read operation is initiated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3457-515">해당 연결의 제한 시간 값(밀리초)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-515">The time-out value of the connection in milliseconds.</span>
          </span>
          <span data-ttu-id="f3457-516">기본값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-516">The default value is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-517">합니다 <xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A> 속성 기간을 결정 하는 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드 데이터를 받을 수 있을 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-517">The <xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A> property determines the amount of time that the <xref:System.Net.Sockets.NetworkStream.Read%2A> method will block until it is able to receive data.</span></span> <span data-ttu-id="f3457-518">이 시간은 밀리초 단위로 측정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-518">This time is measured in milliseconds.</span></span> <span data-ttu-id="f3457-519">제한 시간 전에 만료 되 면 <xref:System.Net.Sockets.NetworkStream.Read%2A> 성공적으로 완료 되 면 <xref:System.Net.Sockets.TcpClient> throw를 <xref:System.IO.IOException>입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-519">If the time-out expires before <xref:System.Net.Sockets.NetworkStream.Read%2A> successfully completes, <xref:System.Net.Sockets.TcpClient> throws a <xref:System.IO.IOException>.</span></span> <span data-ttu-id="f3457-520">기본적으로는 제한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-520">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-521">다음 코드 예제에서는 설정 하 고 수신 제한 시간을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-521">The following code example sets and gets the receive time out.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.SendTimeout" />
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3457-522">송신 버퍼의 크기를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-522">Gets or sets the size of the send buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3457-523">송신 버퍼의 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-523">The size of the send buffer, in bytes.</span>
          </span>
          <span data-ttu-id="f3457-524">기본값은 8192,536바이트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-524">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-525">합니다 <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> 속성을 호출할 때마다 보낼 예상 되는 바이트 수를 가져오거나 설정 합니다.는 <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f3457-525">The <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property gets or sets the number of bytes that you are expecting to send in each call to the <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f3457-526">이 속성에는 실제로 송신 작업에 대 한 할당 된 네트워크 버퍼 공간을 조작 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-526">This property actually manipulates the network buffer space allocated for send operation.</span></span>  
  
 <span data-ttu-id="f3457-527">네트워크 버퍼는 적어도 원하는 데이터를 저장 및 한 번에 전송 되도록 응용 프로그램 버퍼은 커야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-527">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be stored and sent in one operation.</span></span> <span data-ttu-id="f3457-528">사용 된 <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> 속성을이 크기를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-528">Use the <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="f3457-529">응용 프로그램은 대량 데이터를 보내는 경우 전달 해야 합니다 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드는 매우 큰 응용 프로그램 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-529">If your application will be sending bulk data, you should pass the <xref:System.Net.Sockets.NetworkStream.Write%2A> method a very large application buffer.</span></span>  
  
 <span data-ttu-id="f3457-530">제공한 네트워크 버퍼 데이터의 양을 보다 작은 경우는 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드를 여러 네트워크 송신에 대 한 모든 호출에 대 한 작업을 수행할지를 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="f3457-530">If the network buffer is smaller than the amount of data you provide the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, several network send operations will be performed for every call you make to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="f3457-531">네트워크 버퍼 최소한 응용 프로그램 버퍼 크기는 함으로써 데이터 처리량을 얻을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-531">You can achieve greater data throughput by ensuring that your network buffer is at least as large as your application buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-532">다음 코드 예제에서는 설정 하 고 송신 버퍼 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-532">The following code example sets and gets the send buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SendTimeout">
      <MemberSignature Language="C#" Value="public int SendTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SendTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3457-533">보내기 작업을 성공적으로 완료하기 위해 <see cref="T:System.Net.Sockets.TcpClient" />가 대기하는 기간을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-533">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait for a send operation to complete successfully.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3457-534">송신 제한 시간 값(밀리초)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-534">The send time-out value, in milliseconds.</span>
          </span>
          <span data-ttu-id="f3457-535">기본값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3457-535">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3457-536">합니다 <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> 속성 기간을 결정 하는 <xref:System.Net.Sockets.Socket.Send%2A> 메서드는 성공적으로 반환할 수 있을 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-536">The <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> property determines the amount of time that the <xref:System.Net.Sockets.Socket.Send%2A> method will block until it is able to return successfully.</span></span> <span data-ttu-id="f3457-537">이 시간은 밀리초 단위로 측정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-537">This time is measured in milliseconds.</span></span>  
  
 <span data-ttu-id="f3457-538">호출한 후 합니다 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드를 기본 <xref:System.Net.Sockets.Socket> 실제로 호스트에 전송 된 바이트 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-538">After you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, the underlying <xref:System.Net.Sockets.Socket> returns the number of bytes actually sent to the host.</span></span> <span data-ttu-id="f3457-539"><xref:System.Net.Sockets.TcpClient.SendTimeout%2A> 기간을 결정 하는 속성을 <xref:System.Net.Sockets.TcpClient> 수신 바이트 수를 반환 하기 전에 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-539">The <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> property determines the amount of time a <xref:System.Net.Sockets.TcpClient> will wait before receiving the number of bytes returned.</span></span> <span data-ttu-id="f3457-540">되기 전에 제한 시간이 만료 되는 <xref:System.Net.Sockets.Socket.Send%2A> 메서드가 성공적으로 완료 되 면 <xref:System.Net.Sockets.TcpClient> 시킵니다는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-540">If the time-out expires before the <xref:System.Net.Sockets.Socket.Send%2A> method successfully completes, <xref:System.Net.Sockets.TcpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="f3457-541">기본적으로는 제한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-541">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3457-542">다음 코드 예제에서는 설정 하 고 가져옵니다는 <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f3457-542">The following code example sets and gets the <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> value.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>