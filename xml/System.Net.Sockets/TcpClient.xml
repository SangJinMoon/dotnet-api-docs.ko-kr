<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TcpClient.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f0b32dcca3fd97eae4e5ede9f35c940ea0ad6c30.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0b32dcca3fd97eae4e5ede9f35c940ea0ad6c30</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Provides client connections for TCP network services.</source>
          <target state="translated">TCP 네트워크 서비스에 대한 클라이언트 연결을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class provides simple methods for connecting, sending, and receiving stream data over a network in synchronous blocking mode.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 클래스 보내기, 연결 하기 위한 간단한 방법을 제공 하 고 차단 동기 모드에서 네트워크를 통해 스트림 데이터를 수신 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>In order for <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> to connect and exchange data, a <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> created with the TCP <ph id="ph4">&lt;xref:System.Net.Sockets.ProtocolType&gt;</ph> must be listening for incoming connection requests.</source>
          <target state="translated">에 대 한 순서 대로 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 연결 데이터를 교환 하는 <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> TCP를 사용 하 여 만든 <ph id="ph4">&lt;xref:System.Net.Sockets.ProtocolType&gt;</ph> 들어오는 연결 요청을 수신 해야 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>You can connect to this listener in one of the following two ways:</source>
          <target state="translated">다음 두 가지 방법 중 하나에이 수신기에 연결할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Create a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and call one of the three available <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> methods.</source>
          <target state="translated">만들기는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 사용할 수 있는 세 가지 중 하나를 호출 하 고 <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Create a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> using the host name and port number of the remote host.</source>
          <target state="translated">만들기는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 호스트 이름을 사용 하 고 포트 번호는 원격 호스트의 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>This constructor will automatically attempt a connection.</source>
          <target state="translated">이 생성자는 자동으로 연결을 시도 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>If you want to send connectionless datagrams in synchronous blocking mode, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class.</source>
          <target state="translated">블로킹 모드를 동기 연결 없는 데이터 그램을 보내려는 경우 사용 하 여는 <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>The following code example establishes a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> connection.</source>
          <target state="translated">다음 코드 예에서는 설정는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 연결 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Permission to establish an outgoing connection or accept an incoming request.</source>
          <target state="translated">들어오는 요청을 받아들이는 하거나 나가는 연결을 설정할 수 있는 권한</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>To send and receive data, use the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpClient.GetStream" /&gt;</ph> method to obtain a <ph id="ph2">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>.</source>
          <target state="translated">받거나 보내기 위해 데이터를 사용 하 여는 <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpClient.GetStream" /&gt;</ph> 를 얻는 메서드를 한 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Call the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> methods of the <ph id="ph3">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> to send and receive data with the remote host.</source>
          <target state="translated">호출의 <ph id="ph1">&lt;see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> 의 메서드는 <ph id="ph3">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> 원격 호스트와 데이터를 주고받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /&gt;</ph> method to release all resources associated with the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /&gt;</ph> 와 관련 된 모든 리소스를 해제 하는 메서드는 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and allows the underlying service provider to assign the most appropriate local IP address and port number.</source>
          <target state="translated">이 생성자는 새 만듭니다 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 가장 적절 한 로컬 IP 주소와 포트 번호를 할당 하려면 기본 서비스 공급자 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>You must first call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method before sending and receiving data.</source>
          <target state="translated">먼저 호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> 데이터 보내기 및 받기 전에 메서드.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>This constructor works only with IPv4 address types.</source>
          <target state="translated">이 생성자는 IPv4 주소 유형 에서만 작동합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>The following code example demonstrates how to use the default constructor to create a new <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 새로 만들려면 기본 생성자를 사용 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> to which you bind the TCP <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">TCP <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>을 바인딩할 <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class and binds it to the specified local endpoint.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 클래스의 새 인스턴스를 초기화하고 해당 인스턴스를 지정된 로컬 끝점에 바인딩합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and binds it to the <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> specified by the <ph id="ph3">`localEP`</ph> parameter.</source>
          <target state="translated">이 생성자는 새 만듭니다 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 에 바인딩합니다는 <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> 에 지정 된는 <ph id="ph3">`localEP`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>Before you call this constructor, you must create an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> using the IP address and port number from which you intend to send and receive data.</source>
          <target state="translated">이 생성자를 호출 하기 전에 만들어야 합니다는 <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> 보내고 받는 데이터를 가져오려는 IP 주소와 포트 번호를 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>You do not need to specify a local IP address and port number before connecting and communicating.</source>
          <target state="translated">연결 하 여 통신 하기 전에 로컬 IP 주소와 포트 번호를 지정할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>If you create a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> using any other constructor, the underlying service provider will assign the most appropriate local IP address and port number.</source>
          <target state="translated">만드는 경우는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 다른 생성자를 사용 하 여 내부 서비스 공급자가 할당 가장 적절 한 로컬 IP 주소와 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>You must call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method before sending and receiving data.</source>
          <target state="translated">호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> 데이터 보내기 및 받기 전에 메서드.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>The following code example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class using a local endpoint.</source>
          <target state="translated">다음 코드 예제에서는의 인스턴스를 만드는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 클래스 로컬 끝점을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>The  <ph id="ph1">&lt;paramref name="localEP" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localEP" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.IPAddress.AddressFamily" /&gt;</ph> of the IP protocol.</source>
          <target state="translated">IP 프로토콜의 <ph id="ph1">&lt;see cref="P:System.Net.IPAddress.AddressFamily" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class with the specified family.</source>
          <target state="translated">지정된 패밀리를 사용하여 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The following code example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제에서는의 인스턴스를 만드는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">&lt;paramref name="family" /&gt;</ph> parameter is not equal to AddressFamily.InterNetwork</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="family" /&gt;</ph> 매개 변수가 AddressFamily.InterNetwork와 같지 않은 경우</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">&lt;paramref name="family" /&gt;</ph> parameter is not equal to AddressFamily.InterNetworkV6</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="family" /&gt;</ph> 매개 변수가 AddressFamily.InterNetworkV6와 같지 않은 경우</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The DNS name of the remote host to which you intend to connect.</source>
          <target state="translated">연결할 원격 호스트의 DNS 이름입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The port number of the remote host to which you intend to connect.</source>
          <target state="translated">연결한 원격 호스트의 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class and connects to the specified port on the specified host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 클래스의 새 인스턴스를 초기화하고 지정된 호스트의 지정된 포트에 연결합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and makes a synchronous connection attempt to the provided host name and port number.</source>
          <target state="translated">이 생성자는 새 만듭니다 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 동기 연결을 제공된 된 호스트 이름 및 포트 번호를 만듭니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The underlying service provider will assign the most appropriate local IP address and port number.</source>
          <target state="translated">기본 서비스 공급자는 가장 적절 한 로컬 IP 주소와 포트 번호를 할당 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> will block until it either connects or fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 연결 되거나 실패할 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>This constructor allows you to initialize, resolve the DNS host name, and connect in one convenient step.</source>
          <target state="translated">이 생성자를 사용 하면 초기화 DNS 호스트 이름을 확인 하 고, 편리 하 게 한 번에 연결할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>If IPv6 is enabled and the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</source>
          <target state="translated">I p v 6이 사용 되는 경우 및 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph> ipv6 확인 되는 호스트에 연결할 메서드는 및 IPv4 주소, IPv6 주소에 대 한 연결 시도 후 IPv4 주소 앞입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</source>
          <target state="translated">호스트의 IPv6 주소에서 수신 하지 않는 경우 연결을 설정 하는 데 시간이 지연이 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">표시 되 면는 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>를 사용 하 여 <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> 특정 오류 코드를 얻어야 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">이 코드를 가져온 후에 Windows 소켓 버전 2 API 오류 코드 MSDN 설명서에서 오류에 대 한 자세한 설명은 참조할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The following code example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class using a host name and port number.</source>
          <target state="translated">다음 코드 예제에서는의 인스턴스를 만드는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 호스트 이름을 사용 하 여 클래스 및 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> parameter is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph>와 <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> 사이에 없습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">소켓에 액세스할 때 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>Gets or set a value that indicates whether a connection has been made.</source>
          <target state="translated">연결되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the connection has been made; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">연결되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>Classes deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> can use this property to determine if a connection attempt has succeeded.</source>
          <target state="translated">파생 된 클래스 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 연결 시도 성공 하는 경우를 확인 하려면이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>It does not monitor the ongoing connection state of <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</source>
          <target state="translated">진행 중인 연결 상태를 모니터링 하지 않습니다 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>If the remote host closes the connection, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Active%2A&gt;</ph> will not be updated.</source>
          <target state="translated">원격 호스트 연결을 닫으면 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Active%2A&gt;</ph> 업데이트 되지 것입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>If you are deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and require closer attention to the connection state, use the <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Connected%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> method.</source>
          <target state="translated">파생 하는 경우 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 연결 상태로 사용 하 여 좀 더 주의 해야 하 고는 <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Connected%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> 에서 반환 되는 <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>Gets the amount of data that has been received from the network and is available to be read.</source>
          <target state="translated">네트워크에서 받아서 읽을 수 있는 데이터의 양을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>The number of bytes of data received from the network and available to be read.</source>
          <target state="translated">네트워크에서 받아서 읽을 수 있는 데이터의 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> is a way to determine whether data is queued for reading.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> 읽기 위해 대기 중인 데이터가 있는지 여부를 결정 하는 방법이 됩니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>If data is available, call <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> to get the data.</source>
          <target state="translated">데이터를 사용할 수 있으면 호출 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> 데이터를 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>The available data is the total amount of data queued in the network buffer for reading.</source>
          <target state="translated">사용 가능한 데이터는 읽기에 대 한 네트워크 버퍼에서 대기 중인 총 데이터 양이 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>If no data is queued in the network buffer, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> returns 0.</source>
          <target state="translated">네트워크 버퍼에 대기 중인 데이터가 없을 경우 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> 0을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>If the remote host shuts down or closes the connection, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> may throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">원격 호스트 종료 되거나 연결이 닫히면 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> throw 될 수 있습니다는 <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">표시 되 면는 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>를 사용 하 여 <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> 특정 오류 코드를 얻어야 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept> for a detailed description of the error.</source>
          <target state="translated">이 코드를 가져온 후 MSDN library에서 Windows 소켓 버전 2 API 오류 코드 설명서를 참조할 수 있습니다 <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept> 오류에 대 한 자세한 설명은 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 사용을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">소켓에 액세스하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Begins an asynchronous request for a remote host connection.</source>
          <target state="translated">원격 호스트 연결에 대한 비동기 요청을 시작합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the remote host.</source>
          <target state="translated">원격 호스트의 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number of the remote host.</source>
          <target state="translated">원격 호스트의 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">작업이 완료되었을 때 호출할 메서드를 참조하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the connect operation.</source>
          <target state="translated">연결 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">이 개체는 작업이 완료되면 <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> 대리자에게 전달됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request for a remote host connection.</source>
          <target state="translated">원격 호스트 연결에 대한 비동기 요청을 시작합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The remote host is specified by an <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> and a port number (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</source>
          <target state="translated">원격 호스트는 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>와 포트 번호(<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>)로 지정됩니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous connection.</source>
          <target state="translated">비동기 연결을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> method.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> 호출 하 여 작업을 완료 해야는 <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">메서드는 일반적으로 <ph id="ph1">`asyncCallback`</ph> 위임 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation completes.</source>
          <target state="translated">이 메서드는 작업이 완료 될 때까지 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method overloads.</source>
          <target state="translated">작업이 완료 될 때까지 차단 하려면 중 사용 된 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>대<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and connects to a remote host.</source>
          <target state="translated">다음 코드 예제에서는 한 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 원격 호스트에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="address" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">소켓에 액세스하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number is not valid.</source>
          <target state="translated">포트 번호가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>At least one <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> that designates the remote hosts.</source>
          <target state="translated">원격 호스트를 지정하는 하나 이상의 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number of the remote hosts.</source>
          <target state="translated">원격 호스트의 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">작업이 완료되었을 때 호출할 메서드를 참조하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the connect operation.</source>
          <target state="translated">연결 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">이 개체는 작업이 완료되면 <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> 대리자에게 전달됩니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request for a remote host connection.</source>
          <target state="translated">원격 호스트 연결에 대한 비동기 요청을 시작합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The remote host is specified by an <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> array and a port number (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</source>
          <target state="translated">원격 호스트는 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> 배열과 포트 번호(<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>)로 지정됩니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous connection.</source>
          <target state="translated">비동기 연결을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> method.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> 호출 하 여 작업을 완료 해야는 <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">메서드는 일반적으로 <ph id="ph1">`asyncCallback`</ph> 위임 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation completes.</source>
          <target state="translated">이 메서드는 작업이 완료 될 때까지 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method overloads.</source>
          <target state="translated">작업이 완료 될 때까지 차단 하려면 중 사용 된 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>대<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This method is typically used immediately after a call to the <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> method, which can return multiple IP addresses for a single host.</source>
          <target state="translated">에 대 한 호출 직후이 메서드는 일반적으로 <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> 메서드를 단일 호스트에 대해 여러 IP 주소를 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and connects to a remote host.</source>
          <target state="translated">다음 코드 예제에서는 한 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 원격 호스트에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="addresses" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="addresses" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">소켓에 액세스하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number is not valid.</source>
          <target state="translated">포트 번호가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The name of the remote host.</source>
          <target state="translated">원격 호스트의 이름입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number of the remote host.</source>
          <target state="translated">원격 호스트의 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">작업이 완료되었을 때 호출할 메서드를 참조하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 대리자입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the connect operation.</source>
          <target state="translated">연결 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">이 개체는 작업이 완료되면 <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> 대리자에게 전달됩니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request for a remote host connection.</source>
          <target state="translated">원격 호스트 연결에 대한 비동기 요청을 시작합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The remote host is specified by a host name (<ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>) and a port number (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</source>
          <target state="translated">원격 호스트는 호스트 이름(<ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>)과 포트 번호(<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>)로 지정됩니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous connection.</source>
          <target state="translated">비동기 연결을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> method.</source>
          <target state="translated">비동기 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> 호출 하 여 작업을 완료 해야는 <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">메서드는 일반적으로 <ph id="ph1">`asyncCallback`</ph> 위임 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation completes.</source>
          <target state="translated">이 메서드는 작업이 완료 될 때까지 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method overloads.</source>
          <target state="translated">작업이 완료 될 때까지 차단 하려면 중 사용 된 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>대<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and connects to a remote host.</source>
          <target state="translated">다음 코드 예제에서는 한 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 원격 호스트에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="host" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="host" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">소켓에 액세스하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number is not valid.</source>
          <target state="translated">포트 번호가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>Gets or sets the underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">내부 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>The underlying network <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">내부 네트워크 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> creates a <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> to send and receive data over a network.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 만듭니다는 <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> 네트워크를 통해 데이터를 주고받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>Classes deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> can use this property to get or set this <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">파생 된 클래스 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 을 가져오거나 설정 합니다.이 속성을 사용할 수 <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>Use the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returned from <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> if you require access beyond that which <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> provides.</source>
          <target state="translated">기본 사용 하 여 <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> 에서 반환 된 <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> 필요한 경우 액세스 하는 것 이상의 <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>You can also use <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> to set the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> to an existing <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">사용할 수도 있습니다 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> 기본 설정 하려면 <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> 기존의 <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>This might be useful if you want to take advantage of the simplicity of <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> using a pre-existing <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">이의 단순성을 활용 하려는 경우 유용할 수 있습니다 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 기존를 사용 하 여 <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>In this example, the receive buffer size of the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> is changed.</source>
          <target state="translated">이 예제에서는 기본의 수신 버퍼 크기 <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> 변경 됩니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>Disposes this <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> instance and requests that the underlying TCP connection be closed.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 인스턴스를 삭제하고 내부 TCP 연결을 닫도록 요청합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method marks the instance as disposed and requests that the associated <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> close the TCP connection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> 메서드 인스턴스 삭제 된 것으로 표시 하 고 요청 하는 연결 된 <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> TCP 연결을 닫습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>Based on the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property, the TCP connection may stay open for some time after the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method is called when data remains to be sent.</source>
          <target state="translated">에 따라는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> 속성, TCP 연결 수 개방 후 일정 시간 동안은 <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> 메서드는 보낼 데이터가 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>There is no notification provided when the underlying connection has completed closing.</source>
          <target state="translated">아무런 알림이 표시는 기본 연결 닫기가 완료 하는 경우에 제공 합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>Calling this method will eventually result in the close of the associated <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> and will also close the associated <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> that is used to send and receive data if one was created.</source>
          <target state="translated">이 메서드를 호출 하면 결국 관련 된 닫히고 <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> 도 연결 된 닫힙니다 <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> 하나를 만든 경우 데이터를 송수신 하는 데 사용 되는 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>The following code example demonstrates closing a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method.</source>
          <target state="translated">다음 코드 예제에는 닫는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 호출 하 여는 <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Connects the client to a remote TCP host using the specified host name and port number.</source>
          <target state="translated">지정된 호스트 이름과 포트 번호를 사용하여 원격 TCP 호스트에 클라이언트를 연결합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> to which you intend to connect.</source>
          <target state="translated">연결할 <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Connects the client to a remote TCP host using the specified remote network endpoint.</source>
          <target state="translated">지정된 네트워크 끝점을 사용하여 원격 TCP 호스트에 클라이언트를 연결합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Call this method to establish a synchronous remote host connection to the specified <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</source>
          <target state="translated">지정 된 동기 원격 호스트 연결을 설정 하려면이 메서드를 호출 <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Before you call <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> you must create an instance of the <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> class using an IP address and a port number.</source>
          <target state="translated">호출 하기 전에 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> 의 인스턴스를 만들어야는 <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> 클래스 IP 주소와 포트 번호를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> as the <ph id="ph2">`remoteEP`</ph> parameter.</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> 로 <ph id="ph2">`remoteEP`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method will block until it either connects or fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> 메서드 연결 되거나 실패할 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">원격 호스트에 연결한 후 사용 하 여는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> 메서드 내부 <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> 데이터를 주고받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">표시 되 면는 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>를 사용 하 여 <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> 특정 오류 코드를 얻어야 합니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">이 코드를 가져온 후에 Windows 소켓 버전 2 API 오류 코드 MSDN 설명서에서 오류에 대 한 자세한 설명은 참조할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept></source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept></target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The following code example uses an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> to connect with a remote host.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> 원격 호스트와 연결 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;paramref name="remoteEp" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="remoteEp" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">소켓에 액세스할 때 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>가 닫힌 경우</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the host to which you intend to connect.</source>
          <target state="translated">연결할 호스트의 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The port number to which you intend to connect.</source>
          <target state="translated">연결할 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Connects the client to a remote TCP host using the specified IP address and port number.</source>
          <target state="translated">지정된 IP 주소와 포트 번호를 사용하여 원격 TCP 호스트에 클라이언트를 연결합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the specified <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> and port number.</source>
          <target state="translated">지정 된 동기 원격 호스트 연결을 설정 하려면이 메서드를 호출 <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> 및 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method will block until it either connects or fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> 메서드 연결 되거나 실패할 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">원격 호스트에 연결한 후 사용 하 여는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> 메서드 내부 <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> 데이터를 주고받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">표시 되 면는 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>를 사용 하 여 <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> 특정 오류 코드를 얻어야 합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">이 코드를 가져온 후에 Windows 소켓 버전 2 API 오류 코드 MSDN 설명서에서 오류에 대 한 자세한 설명은 참조할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The following code example uses an IP Address and port number to connect with a remote host.</source>
          <target state="translated">다음 코드 예제에서는 IP 주소와 포트 번호를 사용 하 여 원격 호스트와 연결 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="address" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph>와 <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> 사이에 없는 경우</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">소켓에 액세스할 때 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>가 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> array of the host to which you intend to connect.</source>
          <target state="translated">연결할 호스트의 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The port number to which you intend to connect.</source>
          <target state="translated">연결할 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>Connects the client to a remote TCP host using the specified IP addresses and port number.</source>
          <target state="translated">지정된 IP 주소와 포트 번호를 사용하여 원격 TCP 호스트에 클라이언트를 연결합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>This method is typically used immediately after a call to the <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> method, which can return multiple IP addresses for a single host.</source>
          <target state="translated">에 대 한 호출 직후이 메서드는 일반적으로 <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> 메서드를 단일 호스트에 대해 여러 IP 주소를 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method to establish a synchronous remote host connection to the host specified by the array of <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> elements and the port number.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> 의 배열에서 지정 된 호스트에 동기 원격 호스트 연결을 설정 하려면 <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> 요소와 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method will block until it either connects or fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> 메서드 연결 되거나 실패할 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">원격 호스트에 연결한 후 사용 하 여는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> 메서드 내부 <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> 데이터를 주고받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">표시 되 면는 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>를 사용 하 여 <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> 특정 오류 코드를 얻어야 합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept> for a detailed description of the error.</source>
          <target state="translated">이 코드를 가져온 후 MSDN library에서 Windows 소켓 버전 2 API 오류 코드 설명서를 참조할 수 있습니다 <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept> 오류에 대 한 자세한 설명은 합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The following code example uses an IP Address and port number to connect with a remote host.</source>
          <target state="translated">다음 코드 예제에서는 IP 주소와 포트 번호를 사용 하 여 원격 호스트와 연결 합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="ipAddresses" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ipAddresses" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The port number is not valid.</source>
          <target state="translated">포트 번호가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">소켓에 액세스하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>This method is valid for sockets that use the <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> flag or the <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph> flag.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> 플래그 또는 <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph> 플래그를 사용하는 소켓에 대해서만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The DNS name of the remote host to which you intend to connect.</source>
          <target state="translated">연결할 원격 호스트의 DNS 이름입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The port number of the remote host to which you intend to connect.</source>
          <target state="translated">연결한 원격 호스트의 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>Connects the client to the specified port on the specified host.</source>
          <target state="translated">지정된 호스트의 지정된 포트에 클라이언트를 연결합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the specified host name and port number.</source>
          <target state="translated">이 메서드는 동기 원격 호스트 연결에 지정된 된 호스트 이름 설정 하 고 포트 번호를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method will block until it either connects or fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> 메서드 연결 되거나 실패할 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">원격 호스트에 연결한 후 사용 하 여는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> 메서드 내부 <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> 데이터를 주고받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>If IPv6 is enabled and the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29&gt;</ph> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</source>
          <target state="translated">I p v 6이 사용 되는 경우 및 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29&gt;</ph> ipv6 확인 되는 호스트에 연결할 메서드는 및 IPv4 주소, IPv6 주소에 대 한 연결 시도 후 IPv4 주소 앞입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</source>
          <target state="translated">호스트의 IPv6 주소에서 수신 하지 않는 경우 연결을 설정 하는 데 시간이 지연이 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">표시 되 면는 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>를 사용 하 여 <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> 특정 오류 코드를 얻어야 합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">이 코드를 가져온 후에 Windows 소켓 버전 2 API 오류 코드 MSDN 설명서에서 오류에 대 한 자세한 설명은 참조할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The following code example uses the host name and port number to connect with a remote host.</source>
          <target state="translated">다음 코드 예제에서는 사용 하 여 원격 호스트와 연결 하는 호스트 이름과 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> parameter is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph>와 <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> 사이에 없습니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">소켓에 액세스할 때 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>가 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</source>
          <target state="translated">지정된 호스트 이름과 포트 번호를 사용하여 비동기 작업으로 원격 TCP 호스트에 클라이언트를 연결합니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the host to which you intend to connect.</source>
          <target state="translated">연결할 호스트의 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The port number to which you intend to connect.</source>
          <target state="translated">연결할 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</source>
          <target state="translated">지정된 IP 주소와 포트 번호를 사용하여 비동기 작업으로 원격 TCP 호스트에 클라이언트를 연결합니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The returned Returns <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the TCP connection has been established.</source>
          <target state="translated">반환 된 반환 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> 개체는 TCP 연결을 설정한 후 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>This method does not block the calling thread while the connection request is underway.</source>
          <target state="translated">이 메서드는 연결 요청을 처리 중 동안 호출 스레드를 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the specified <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> and port number as an asynchronous operation.</source>
          <target state="translated">지정 된 동기 원격 호스트 연결을 설정 하려면이 메서드를 호출 <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> 및 비동기 작업으로 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">원격 호스트에 연결한 후 사용 하 여는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> 메서드 내부 <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> 데이터를 주고받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">표시 되 면는 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>를 사용 하 여 <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> 특정 오류 코드를 얻어야 합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">이 코드를 가져온 후에 Windows 소켓 버전 2 API 오류 코드 MSDN 설명서에서 오류에 대 한 자세한 설명은 참조할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="address" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph>가 <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph>와 <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> 사이에 없는 경우</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">소켓에 액세스할 때 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>가 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> array of the host to which you intend to connect.</source>
          <target state="translated">연결할 호스트의 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The port number to which you intend to connect.</source>
          <target state="translated">연결할 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</source>
          <target state="translated">지정된 IP 주소와 포트 번호를 사용하여 비동기 작업으로 원격 TCP 호스트에 클라이언트를 연결합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The returned Returns <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the TCP connection has been established.</source>
          <target state="translated">반환 된 반환 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> 개체는 TCP 연결을 설정한 후 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This method does not block the calling thread while the connection request is underway.</source>
          <target state="translated">이 메서드는 연결 요청을 처리 중 동안 호출 스레드를 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This method is typically used immediately after a call to the <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> method, which can return multiple IP addresses for a single host.</source>
          <target state="translated">에 대 한 호출 직후이 메서드는 일반적으로 <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> 메서드를 단일 호스트에 대해 여러 IP 주소를 반환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the host specified by the array of <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> elements and the port number as an asynchronous operation.</source>
          <target state="translated">배열에서 지정 된 호스트에 동기 원격 호스트 연결을 설정 하려면이 메서드를 호출 <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> 요소와 비동기 작업으로 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">원격 호스트에 연결한 후 사용 하 여는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> 메서드 내부 <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> 데이터를 주고받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">표시 되 면는 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>를 사용 하 여 <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> 특정 오류 코드를 얻어야 합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept> for a detailed description of the error.</source>
          <target state="translated">이 코드를 가져온 후 MSDN library에서 Windows 소켓 버전 2 API 오류 코드 설명서를 참조할 수 있습니다 <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept> 오류에 대 한 자세한 설명은 합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="ipAddresses" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ipAddresses" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The port number is not valid.</source>
          <target state="translated">포트 번호가 잘못된 경우</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">소켓에 액세스하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This method is valid for sockets that use the <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> flag or the <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph> flag.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> 플래그 또는 <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph> 플래그를 사용하는 소켓에 대해서만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The DNS name of the remote host to which you intend to connect.</source>
          <target state="translated">연결할 원격 호스트의 DNS 이름입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The port number of the remote host to which you intend to connect.</source>
          <target state="translated">연결한 원격 호스트의 포트 번호입니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>Connects the client to the specified TCP port on the specified host as an asynchronous operation.</source>
          <target state="translated">지정된 호스트의 지정된 TCP 포트에 클라이언트를 비동기 작업으로 연결합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>This operation will not block.</source>
          <target state="translated">이 작업을 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The returned Returns <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the TCP connection has been established.</source>
          <target state="translated">반환 된 반환 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> 개체는 TCP 연결을 설정한 후 완료 됩니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>This method does not block the calling thread while the connection request is underway.</source>
          <target state="translated">이 메서드는 연결 요청을 처리 중 동안 호출 스레드를 차단 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the specified host name and port number as an asynchronous operation.</source>
          <target state="translated">지정 된 호스트 이름에 동기 원격 호스트 연결을 설정 하 고 포트 번호는 비동기 작업으로 하려면이 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">원격 호스트에 연결한 후 사용 하 여는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> 메서드 내부 <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> 데이터를 주고받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>If IPv6 is enabled and the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29&gt;</ph> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</source>
          <target state="translated">I p v 6이 사용 되는 경우 및 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29&gt;</ph> ipv6 확인 되는 호스트에 연결할 메서드는 및 IPv4 주소, IPv6 주소에 대 한 연결 시도 후 IPv4 주소 앞입니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</source>
          <target state="translated">호스트의 IPv6 주소에서 수신 하지 않는 경우 연결을 설정 하는 데 시간이 지연이 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">표시 되 면는 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>를 사용 하 여 <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> 특정 오류 코드를 얻어야 합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">이 코드를 가져온 후에 Windows 소켓 버전 2 API 오류 코드 MSDN 설명서에서 오류에 대 한 자세한 설명은 참조할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> parameter is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph>와 <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> 사이에 없습니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">소켓에 액세스할 때 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>가 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>Gets a value indicating whether the underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> for a <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is connected to a remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>의 내부 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>이 원격 호스트에 연결되어 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Net.Sockets.TcpClient.Client" /&gt;</ph> socket was connected to a remote resource as of the most recent operation; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">가장 최근 작업에서 <ph id="ph2">&lt;see cref="P:System.Net.Sockets.TcpClient.Client" /&gt;</ph> 소켓이 원격 리소스에 연결되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connected%2A&gt;</ph> property gets the connection state of the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> socket as of the last I/O operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connected%2A&gt;</ph> 속성의 연결 상태를 가져옵니다는 <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> 소켓 마지막 I/O 작업 합니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>When it returns <ph id="ph1">`false`</ph>, the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> socket was either never connected, or is no longer connected.</source>
          <target state="translated">반환 될 때 <ph id="ph1">`false`</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> 소켓이 연결 된 적 또는 더 이상 연결 합니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>Because the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connected%2A&gt;</ph> property only reflects the state of the connection as of the most recent operation, you should attempt to send or receive a message to determine the current state.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connected%2A&gt;</ph> 속성은 연결 가장 최근 작업의 상태를 반영만, 현재 상태를 확인 하는 메시지를 받거나 보낼 하려고 해야 합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>After the message send fails, this property no longer returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">이 속성은 더 이상 반환 메시지 보내기에 실패 하면 <ph id="ph1">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>Note that this behavior is by design.</source>
          <target state="translated">이 동작은 의도적인 유의 합니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>You cannot reliably test the state of the connection because, in the time between the test and a send/receive, the connection could have been lost.</source>
          <target state="translated">때문에, 테스트 및 송신/수신 사이 연결이 손실 되었을 수 있습니다에 안정적으로 연결의 상태를 테스트할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>Your code should assume the socket is connected, and gracefully handle failed transmissions.</source>
          <target state="translated">코드는 소켓이 연결 및 핸들 전송 실패 하는 적절 하 게 가정해 야 합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>The following code example connects to a remote endpoint and then verifies the connection.</source>
          <target state="translated">다음 코드 예제에서는 원격 끝점에 연결 하 고 연결을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Dispose">
          <source>Releases the managed and unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>에서 사용하는 관리되는 리소스 및 관리되지 않는 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>Set to <ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 public <ph id="ph1">`Dispose()`</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes this method with the <ph id="ph2">`disposing`</ph> parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 이 메서드를 호출는 <ph id="ph2">`disposing`</ph> 매개 변수 설정 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes this method with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 이 메서드를 호출 <ph id="ph2">`disposing`</ph> 로 설정 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> 매개 변수가 <ph id="ph2">`true`</ph>인 경우 이 메서드는 이 <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>It does this by invoking the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">호출 하 여 수행 된 <ph id="ph1">`Dispose()`</ph> 각 참조 된 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>는 다른 개체에서 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>를 재정의할 때 이전 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">구현 하는 방법에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>Dispose 메서드를 구현<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Finalize 메서드를 재정의<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object returned by a call to <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /&gt;</ph>를 호출할 때 반환되는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>Ends a pending asynchronous connection attempt.</source>
          <target state="translated">보류 중인 비동기 연결 시도를 끝냅니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>This method blocks until the operation is complete.</source>
          <target state="translated">이 메서드 차단 작업이 때까지 완료 합니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>To perform this operation synchronously, use a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">이 작업을 동기적으로 수행 하려면는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">표시 되 면는 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>를 사용 하 여 <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> 특정 오류 코드를 얻어야 합니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept> for a detailed description of the error.</source>
          <target state="translated">이 코드를 가져온 후 MSDN library에서 Windows 소켓 버전 2 API 오류 코드 설명서를 참조할 수 있습니다 <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept> 오류에 대 한 자세한 설명은 합니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The following code example ends the asynchronous connection attempt.</source>
          <target state="translated">다음 코드 예제에서는 비동기 연결 시도를 끝냅니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter was not returned by a call to a <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /&gt;</ph> 메서드를 호출했지만 <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 매개 변수가 반환되지 않은 경우</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /&gt;</ph> method was previously called for the asynchronous connection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /&gt;</ph> 메서드가 비동기 연결을 위해 이미 호출된 경우</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>An error occurred when attempting to access the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>에 액세스하려고 시도하는 동안 오류가 발생한 경우.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">내부 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> allows only one client to use a port.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>가 하나의 포트를 하나의 클라이언트에서만 사용하도록 허용하는지 여부를 지정하는 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> allows only one client to use a specific port; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>에서 특정 포트를 하나의 클라이언트에서만 사용하도록 허용하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <ph id="ph2">&lt;see langword="false" /&gt;</ph> for all other versions.</source>
          <target state="translated">Windows Server 2003 및 Windows XP 서비스 팩 2 이상에서는 기본값이 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 다른 모든 버전에서는 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</source>
          <target state="translated">기본적으로 여러 클라이언트가 특정 포트를 사용할 수 있습니다. 그러나 클라이언트 중 하나에만 포트에 전송 되는 네트워크 트래픽에 대 한 작업을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> property to prevent multiple clients from using a specific port.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> 여러 클라이언트가 특정 포트를 사용 하지 않도록 설정 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>This property must be set before the underlying socket is bound to a client port.</source>
          <target state="translated">이 속성은 기본 소켓 클라이언트 포트에 바인딩하기 전에 설정 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>If you call <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph>, the client port is bound as a side effect of the method, and you cannot subsequently set the <ph id="ph5">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> property</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph>메서드의 부작용으로 클라이언트 포트 바인딩되어 하 고 설정할 수 없습니다는 <ph id="ph5">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and gets and sets the value of the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 한 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 가져오고의 값을 설정 하 고는 <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>An error occurred when attempting to access the underlying socket.</source>
          <target state="translated">내부 소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">내부 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>이 닫힌 경우</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>Frees resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> 클래스에서 사용한 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 메서드는 <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>를 재정의합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>Application code should not call this method; an object's <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">응용 프로그램 코드,이 메서드를 호출 하지 않아야 개체의 <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 메서드를 호출 하 여 가비지 수집기의 종료를 사용 하지 않도록 설정 된 경우가 아니면 자동으로 가비지 수집 중 호출 됩니다는 <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class finalizer closes the TCP connection and releases all managed resources associated with the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 클래스 종료자 TCP 연결을 닫고 연결 된 모든 관리 되는 리소스를 해제는 <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>These resources include the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> used for connecting with the remote host, and the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> used to send and receive data.</source>
          <target state="translated">이러한 리소스는 기본 포함 <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> 원격 호스트와 연결 하는 데 사용 되 고 <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> 데이터 송수신 하는 데 사용 합니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>The finalizer does not release any unmanaged resources.</source>
          <target state="translated">종료자는 관리 되지 않는 리소스를 해제 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Finalize 메서드 및 소멸자<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>관리 되지 않는 리소스 정리<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, 및 <bpt id="p3">[</bpt>Finalize 메서드를 재정의<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> used to send and receive data.</source>
          <target state="translated">데이터를 보내고 받는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>.</source>
          <target state="translated">내부 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> returns a <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> that you can use to send and receive data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> 반환 된 <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> 데이터를 받거나 보내기 위해 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> class inherits from the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> class, which provides a rich collection of methods and properties used to facilitate network communications.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> 클래스에서 상속 된 <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> 메서드 및 네트워크 통신을 용이 하 게 하는 데 사용 되는 속성의 컬렉션이 들어 있는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>You must call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method first, or the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method will throw an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">호출 해야 합니다는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> 메서드, 첫 번째 또는 <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> 메서드는 throw는 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>After you have obtained the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, call the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method to send data to the remote host.</source>
          <target state="translated">가져온 후는 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, 호출는 <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> 메서드를 원격 호스트에 데이터를 전송 합니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method to receive data arriving from the remote host.</source>
          <target state="translated">호출 된 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> 메서드를 원격 호스트에서 데이터를 수신 합니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>Both of these methods block until the specified operation is performed.</source>
          <target state="translated">두이 방법 모두 지정 된 작업이 수행 될 때까지 차단 합니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>You can avoid blocking on a read operation by checking the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.DataAvailable%2A&gt;</ph> property.</source>
          <target state="translated">선택 하 여 읽기 작업에 대 한 차단을 방지할 수 있습니다는 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.DataAvailable%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>A <ph id="ph1">`true`</ph> value means that data has arrived from the remote host and is available for reading.</source>
          <target state="translated">A <ph id="ph1">`true`</ph> 값은 데이터 원격 호스트에서 도착 한 되었으며 읽기에 사용할 수 있음을 의미 합니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>In this case, <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> is guaranteed to complete immediately.</source>
          <target state="translated">이 경우 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> 즉시 완료 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>If the remote host has shutdown its connection, <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> will immediately return with zero bytes.</source>
          <target state="translated">원격 호스트에서 연결을 종료 하는 경우 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> 0 바이트를 즉시 반환 합니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>You must close the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> when you are through sending and receiving data.</source>
          <target state="translated">닫아야는 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> 후에 데이터 보내기 및 받기.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>Closing <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> does not release the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">닫는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 해제 하지 않습니다는 <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">표시 되 면는 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>를 사용 하 여 <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> 특정 오류 코드를 얻어야 합니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">이 코드를 가져온 후에 Windows 소켓 버전 2 API 오류 코드 MSDN 설명서에서 오류에 대 한 자세한 설명은 참조할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>.NET Framework의 네트워크 추적<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> 내부 얻으려고 <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>After obtaining the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, it sends and receives using its <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> methods.</source>
          <target state="translated">가져온 후는 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>를 보내고 받는 사용 하 여 해당 <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is not connected to a remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>가 원격 호스트에 연결되어 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> has been closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>이 닫혔습니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Gets or sets information about the linger state of the associated socket.</source>
          <target state="translated">연결된 소켓의 링거 상태에 대한 정보를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Sockets.LingerOption" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.LingerOption" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>By default, lingering is disabled.</source>
          <target state="translated">기본적으로 링거는 비활성화됩니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property changes the way <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Close%2A&gt;</ph> method behaves.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> 속성은 방법을 변경 <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Close%2A&gt;</ph> 메서드는 동작입니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>This property when set modifies the conditions under which the connection can be reset by Winsock.</source>
          <target state="translated">집합에는 연결이 다시 설정할 수 있습니다 Winsock에서 조건을 수정할 때이 속성입니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Connection resets can still occur based on the IP protocol behavior.</source>
          <target state="translated">연결 다시 설정은 여전히 IP 프로토콜 동작에 따라 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>This property controls the length of time that the TCP connection will remain open after a call to <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> when data remains to be sent.</source>
          <target state="translated">이 속성에 대 한 호출 후 TCP 연결이 열린 채로 시간의 길이 제어 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> 데이터 보낼 남아 있습니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>When you call the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method, data is placed in the outgoing network buffer.</source>
          <target state="translated">호출 하는 경우는 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> 메서드, 데이터 나가는 네트워크 버퍼에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>This property can be used to ensure that this data is sent to the remote host before the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method drops the connection.</source>
          <target state="translated">하기 전에 원격 호스트에이 데이터는 전송 되도록 하려면이 속성을 사용할 수는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> 메서드가 연결을 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>To enable lingering, create a <ph id="ph1">&lt;xref:System.Net.Sockets.LingerOption&gt;</ph> instance containing the desired values, and set the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property to this instance.</source>
          <target state="translated">활성화 하려면 만들기를 <ph id="ph1">&lt;xref:System.Net.Sockets.LingerOption&gt;</ph> 설정 하 고 원하는 값이 포함 된 인스턴스는 <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> 이 인스턴스에 대 한 속성입니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The following table describes the behavior of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method for the possible values of the <ph id="ph2">&lt;xref:System.Net.Sockets.LingerOption.Enabled%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt;</ph> property stored in the <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property.</source>
          <target state="translated">동작을 설명 하는 다음 표에서 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> 의 가능한 값에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Net.Sockets.LingerOption.Enabled%2A&gt;</ph> 속성 및 <ph id="ph3">&lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt;</ph> 속성에 저장 된는 <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>LingerState.Enabled</source>
          <target state="translated">LingerState.Enabled</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>LingerState.LingerTime</source>
          <target state="translated">LingerState.LingerTime</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Behavior</source>
          <target state="translated">동작</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source><ph id="ph1">`false`</ph> (disabled), the default value</source>
          <target state="translated"><ph id="ph1">`false`</ph> (사용 안 함), 기본값</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The time-out is not applicable, (default).</source>
          <target state="translated">제한 시간이 적용 되지 않습니다 (기본값).</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Attempts to send pending data until the default IP protocol time-out expires.</source>
          <target state="translated">기본 IP 프로토콜 시간 제한이 만료 될 때까지 보류 중인 데이터를 보내려고 시도 합니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source><ph id="ph1">`true`</ph> (enabled)</source>
          <target state="translated"><ph id="ph1">`true`</ph> (사용)</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>A nonzero time-out</source>
          <target state="translated">0이 아닌 시간 제한</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</source>
          <target state="translated">지정된 된 제한 시간이 만료 되 고 시도가 실패 하면 다음 Winsock 다시 설정 연결 될 때까지 보류 중인 데이터를 보내려고 시도 합니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source><ph id="ph1">`true`</ph> (enabled)</source>
          <target state="translated"><ph id="ph1">`true`</ph> (사용)</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>A zero timeout.</source>
          <target state="translated">0 시간 제한입니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Discards any pending data and Winsock resets the connection.</source>
          <target state="translated">모든 데이터와 Winsock 다시 설정 합니다. 보류 중인 연결을 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</source>
          <target state="translated">IP 스택에서 연결의 왕복 시간을 기반으로 사용 하려면 기본 IP 프로토콜 제한 시간을 계산 합니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>In most cases, the time-out computed by the stack is more relevant than one defined by an application.</source>
          <target state="translated">대부분의 경우에는 스택에서 계산 된 시간 제한은 응용 프로그램에 의해 정의 된 보다 상대적입니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>This is the default behavior for a socket when the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property is not set.</source>
          <target state="translated">이 소켓에 대 한 기본 동작 때는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> 속성이 설정 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>When the <ph id="ph1">&lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt;</ph> property stored in the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt;</ph> 속성에 저장 된 <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> 속성이 기본 IP 프로토콜 제한 시간 보다 큰 설정 되어 있으면 기본 IP 프로토콜 시간 제한이 적용 되 고 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The following code example sets and gets the sockets linger time.</source>
          <target state="translated">다음 코드 예제에서는 set 및 소켓 링커 get 시간입니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>Gets or sets a value that disables a delay when send or receive buffers are not full.</source>
          <target state="translated">송신 또는 수신 버퍼가 꽉 차지 않았을 때 지연을 비활성화하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the delay is disabled, otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지연이 비활성화되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>When <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.NoDelay%2A&gt;</ph> is <ph id="ph2">`false`</ph>, a <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> does not send a packet over the network until it has collected a significant amount of outgoing data.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.NoDelay%2A&gt;</ph> 은 <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 상당한 양의 보내는 데이터를 수집할 때까지 네트워크를 통해 패킷을 전송 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>Because of the amount of overhead in a TCP segment, sending small amounts of data is inefficient.</source>
          <target state="translated">TCP 세그먼트의 오버 헤드의 양이, 적은 양의 데이터를 보내는 비효율적입니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>However, situations do exist where you need to send very small amounts of data or expect immediate responses from each packet you send.</source>
          <target state="translated">그러나 상황을 매우 적은 양의 데이터를 보내거나 보내는 각 패킷의 즉시 응답을 예상 해야도 있습니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>Your decision should weigh the relative importance of network efficiency versus application requirements.</source>
          <target state="translated">결정 하는 데에 응용 프로그램 요구 사항 및 네트워크 효율성이의 상대적 중요도 저울질 해봐야 합니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>The following code example disables the delay.</source>
          <target state="translated">다음 코드 예제에서는 지연을 사용 하지 않도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>It then checks the value of <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.NoDelay%2A&gt;</ph> to verify that the property was successfully set.</source>
          <target state="translated">다음 값을 확인 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.NoDelay%2A&gt;</ph> 속성이 성공적으로 설정 되어 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>Gets or sets the size of the receive buffer.</source>
          <target state="translated">수신 버퍼의 크기를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>The size of the receive buffer, in bytes.</source>
          <target state="translated">수신 버퍼의 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>The default value is 8192 bytes.</source>
          <target state="translated">기본값은 8192,536바이트입니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A&gt;</ph> property gets or sets the number of bytes that you are expecting to store in the receive buffer for each read operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A&gt;</ph> 속성 각 읽기 작업에 대 한 수신 버퍼에 저장 하기를 기대 하는 바이트 수를 가져오거나 설정 합니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>This property actually manipulates the network buffer space allocated for receiving incoming data.</source>
          <target state="translated">이 속성에는 실제로 들어오는 데이터를 받기 위해 할당 된 네트워크 버퍼 공간을 조작 합니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>Your network buffer should be at least as large as your application buffer to ensure that the desired data will be available when you call the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">네트워크 버퍼 호출 하는 경우 원하는 데이터를 사용할 수 있도록 응용 프로그램 버퍼 이상이 있어야 합니다.는 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A&gt;</ph> property to set this size.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A&gt;</ph> 속성을이 크기를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>If your application will be receiving bulk data, you should pass the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method a very large application buffer.</source>
          <target state="translated">응용 프로그램은 대량 데이터를 받는 경우 전달 해야는 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> 메서드는 규모가 큰 응용 프로그램 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>If the network buffer is smaller than the amount of data you request in the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method, you will not be able to retrieve the desired amount of data in one read operation.</source>
          <target state="translated">요청한 네트워크 버퍼 데이터의 양보다 작으면는 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> 메서드를 됩니다 적정 한 번의 읽기 작업의 데이터를 검색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>This incurs the overhead of additional calls to the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method.</source>
          <target state="translated">이를 추가로 호출 오버 헤드를 유발는 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>The following code example sets and gets the receive buffer size.</source>
          <target state="translated">다음 코드 예제에서는 설정 하 고 수신 버퍼 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>An error occurred when setting the buffer size.</source>
          <target state="translated">버퍼 크기를 설정하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>In .NET Compact Framework applications, you cannot set this property.</source>
          <target state="translated">.NET Compact Framework 응용 프로그램에서 이 속성을 설정할 수 없는 경우.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>For a workaround, see the Platform Note in Remarks.</source>
          <target state="translated">해결 방법은 설명 부분의 플랫폼 참고를 참조하십시오.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>Gets or sets the amount of time a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> will wait to receive data once a read operation is initiated.</source>
          <target state="translated">읽기 작업이 시작된 후에 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>가 데이터를 수신하기 위해 대기하는 기간을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>The time-out value of the connection in milliseconds.</source>
          <target state="translated">해당 연결의 제한 시간 값(밀리초)입니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>The default value is 0.</source>
          <target state="translated">기본값은 0입니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A&gt;</ph> property determines the amount of time that the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method will block until it is able to receive data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A&gt;</ph> 속성 시간을 결정 하는 <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> 메서드 데이터를 받을 수 있을 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>This time is measured in milliseconds.</source>
          <target state="translated">이 시간은 밀리초 단위로 측정 됩니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>If the time-out expires before <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> successfully completes, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> throws a <ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph>.</source>
          <target state="translated">하기 전에 제한 시간이 만료 되는 경우 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> 성공적으로 완료 되 면 <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> throw 한 <ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>There is no time-out by default.</source>
          <target state="translated">기본적으로는 제한이 없습니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>The following code example sets and gets the receive time out.</source>
          <target state="translated">다음 코드 예제에서는 설정 하 고 수신 제한 시간을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>Gets or sets the size of the send buffer.</source>
          <target state="translated">송신 버퍼의 크기를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>The size of the send buffer, in bytes.</source>
          <target state="translated">송신 버퍼의 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>The default value is 8192 bytes.</source>
          <target state="translated">기본값은 8192,536바이트입니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendBufferSize%2A&gt;</ph> property gets or sets the number of bytes that you are expecting to send in each call to the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendBufferSize%2A&gt;</ph> 속성을 호출할 때마다 전송 하기를 기대 하는 바이트 수를 가져오거나 설정 합니다.는 <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>This property actually manipulates the network buffer space allocated for send operation.</source>
          <target state="translated">이 속성에는 실제로 보내기 작업에 할당 된 네트워크 버퍼 공간을 조작 합니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>Your network buffer should be at least as large as your application buffer to ensure that the desired data will be stored and sent in one operation.</source>
          <target state="translated">네트워크 버퍼에는 원하는 데이터를 저장 및 한 번에 전송 되도록 응용 프로그램 버퍼 이상이 해야 합니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendBufferSize%2A&gt;</ph> property to set this size.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendBufferSize%2A&gt;</ph> 속성을이 크기를 설정 합니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>If your application will be sending bulk data, you should pass the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method a very large application buffer.</source>
          <target state="translated">응용 프로그램은 대량 데이터를 전송 하는 경우 전달 해야는 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> 메서드는 규모가 큰 응용 프로그램 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>If the network buffer is smaller than the amount of data you provide the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method, several network send operations will be performed for every call you make to the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method.</source>
          <target state="translated">제공의 네트워크 버퍼 데이터의 양보다 작으면는 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> 메서드를 여러 네트워크 송신 하는 모든 호출에 대 한 작업이 수행 됩니다는 <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>You can achieve greater data throughput by ensuring that your network buffer is at least as large as your application buffer.</source>
          <target state="translated">네트워크 버퍼를 적어도 응용 프로그램 버퍼 크기를 확인 하 여 데이터 처리량을 높일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>The following code example sets and gets the send buffer size.</source>
          <target state="translated">다음 코드 예제에서는 설정 하 고 보내기 버퍼 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>Gets or sets the amount of time a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> will wait for a send operation to complete successfully.</source>
          <target state="translated">보내기 작업을 성공적으로 완료하기 위해 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>가 대기하는 기간을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The send time-out value, in milliseconds.</source>
          <target state="translated">송신 제한 시간 값(밀리초)입니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The default is 0.</source>
          <target state="translated">기본값은 0입니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> property determines the amount of time that the <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> method will block until it is able to return successfully.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> 속성 시간을 결정 하는 <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> 메서드가 성공적으로 반환 될 수 있을 때까지 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>This time is measured in milliseconds.</source>
          <target state="translated">이 시간은 밀리초 단위로 측정 됩니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>After you call the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method, the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returns the number of bytes actually sent to the host.</source>
          <target state="translated">호출한 후의 <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> 메서드를 기본 <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> 호스트에 실제로 보낸 바이트 수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> property determines the amount of time a <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> will wait before receiving the number of bytes returned.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> 속성 시간을 결정 한 <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> 에서 반환 된 바이트 수를 받기 전에 기다립니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>If the time-out expires before the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> method successfully completes, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> will throw a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">되기 전에 제한 시간이 만료 되는 <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> 메서드가 성공적으로 완료 되 면 <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> throw 됩니다는 <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>There is no time-out by default.</source>
          <target state="translated">기본적으로는 제한이 없습니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The following code example sets and gets the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> value.</source>
          <target state="translated">다음 코드 예제에서는 설정 하 고 가져옵니다는 <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> 값입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>