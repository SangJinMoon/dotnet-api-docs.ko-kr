<Type Name="TcpClient" FullName="System.Net.Sockets.TcpClient">
  <TypeSignature Language="C#" Value="public class TcpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpClient : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5b7d1-101">TCP 네트워크 서비스에 대한 클라이언트 연결을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-101">Provides client connections for TCP network services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-102"><xref:System.Net.Sockets.TcpClient> 클래스 보내기, 연결 하기 위한 간단한 방법을 제공 하 고 차단 동기 모드에서 네트워크를 통해 스트림 데이터를 수신 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-102">The <xref:System.Net.Sockets.TcpClient> class provides simple methods for connecting, sending, and receiving stream data over a network in synchronous blocking mode.</span></span>  
  
 <span data-ttu-id="5b7d1-103">에 대 한 순서 대로 <xref:System.Net.Sockets.TcpClient> 연결 데이터를 교환 하는 <xref:System.Net.Sockets.TcpListener> 또는 <xref:System.Net.Sockets.Socket> TCP를 사용 하 여 만든 <xref:System.Net.Sockets.ProtocolType> 들어오는 연결 요청을 수신 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-103">In order for <xref:System.Net.Sockets.TcpClient> to connect and exchange data, a <xref:System.Net.Sockets.TcpListener> or <xref:System.Net.Sockets.Socket> created with the TCP <xref:System.Net.Sockets.ProtocolType> must be listening for incoming connection requests.</span></span> <span data-ttu-id="5b7d1-104">다음 두 가지 방법 중 하나에이 수신기에 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-104">You can connect to this listener in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="5b7d1-105">만들기는 <xref:System.Net.Sockets.TcpClient> 사용할 수 있는 세 가지 중 하나를 호출 하 고 <xref:System.Net.Sockets.TcpClient.Connect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-105">Create a <xref:System.Net.Sockets.TcpClient> and call one of the three available <xref:System.Net.Sockets.TcpClient.Connect%2A> methods.</span></span>  
  
-   <span data-ttu-id="5b7d1-106">만들기는 <xref:System.Net.Sockets.TcpClient> 호스트 이름을 사용 하 고 포트 번호는 원격 호스트의 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-106">Create a <xref:System.Net.Sockets.TcpClient> using the host name and port number of the remote host.</span></span> <span data-ttu-id="5b7d1-107">이 생성자는 자동으로 연결을 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-107">This constructor will automatically attempt a connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-108">블로킹 모드를 동기 연결 없는 데이터 그램을 보내려는 경우 사용 하 여는 <xref:System.Net.Sockets.UdpClient> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-108">If you want to send connectionless datagrams in synchronous blocking mode, use the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-109">다음 코드 예에서는 설정는 <xref:System.Net.Sockets.TcpClient> 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-109">The following code example establishes a <xref:System.Net.Sockets.TcpClient> connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CPP/tcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CS/tcpclient.cs#1)]
 [!code-vb[System.Net.Sockets.TcpClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/VB/tcpclient.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="5b7d1-110">들어오는 요청을 받아들이는 하거나 나가는 연결을 설정할 수 있는 권한</span><span class="sxs-lookup"><span data-stu-id="5b7d1-110">Permission to establish an outgoing connection or accept an incoming request.</span></span></permission>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="5b7d1-111">받거나 보내기 위해 데이터를 사용 하 여는 <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> 를 얻는 메서드를 한 <see cref="T:System.Net.Sockets.NetworkStream" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-111">To send and receive data, use the <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> method to obtain a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span> <span data-ttu-id="5b7d1-112">호출의 <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> 및 <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> 의 메서드는 <see cref="T:System.Net.Sockets.NetworkStream" /> 원격 호스트와 데이터를 주고받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-112">Call the <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> methods of the <see cref="T:System.Net.Sockets.NetworkStream" /> to send and receive data with the remote host.</span></span> <span data-ttu-id="5b7d1-113">사용 하 여는 <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> 와 관련 된 모든 리소스를 해제 하는 메서드는 <see cref="T:System.Net.Sockets.TcpClient" />합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-113">Use the <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> method to release all resources associated with the <see cref="T:System.Net.Sockets.TcpClient" />.</span></span></para>
    </block>
    <altmember cref="T:System.Net.Sockets.TcpListener" />
    <altmember cref="T:System.Net.Sockets.NetworkStream" />
    <altmember cref="T:System.Net.Sockets.Socket" />
    <altmember cref="T:System.Net.Sockets.ProtocolType" />
    <altmember cref="T:System.Net.IPEndPoint" />
    <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5b7d1-114"><see cref="T:System.Net.Sockets.TcpClient" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-114">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5b7d1-115"><see cref="T:System.Net.Sockets.TcpClient" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-115">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-116">이 생성자는 새 만듭니다 <xref:System.Net.Sockets.TcpClient> 가장 적절 한 로컬 IP 주소와 포트 번호를 할당 하려면 기본 서비스 공급자 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-116">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and allows the underlying service provider to assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="5b7d1-117">먼저 호출 해야 합니다는 <xref:System.Net.Sockets.TcpClient.Connect%2A> 데이터 보내기 및 받기 전에 메서드.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-117">You must first call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-118">이 생성자는 IPv4 주소 유형 에서만 작동합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-118">This constructor works only with IPv4 address types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-119">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-119">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5b7d1-120">자세한 내용은 참조 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-120">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-121">다음 코드 예제에서는 새로 만들려면 기본 생성자를 사용 하는 방법을 보여 줍니다 <xref:System.Net.Sockets.TcpClient>합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-121">The following code example demonstrates how to use the default constructor to create a new <xref:System.Net.Sockets.TcpClient>.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP"><span data-ttu-id="5b7d1-122">TCP <see cref="T:System.Net.Sockets.Socket" />을 바인딩할 <see cref="T:System.Net.IPEndPoint" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-122">The <see cref="T:System.Net.IPEndPoint" /> to which you bind the TCP <see cref="T:System.Net.Sockets.Socket" />.</span></span></param>
        <summary><span data-ttu-id="5b7d1-123"><see cref="T:System.Net.Sockets.TcpClient" /> 클래스의 새 인스턴스를 초기화하고 해당 인스턴스를 지정된 로컬 끝점에 바인딩합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-123">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and binds it to the specified local endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-124">이 생성자는 새 만듭니다 <xref:System.Net.Sockets.TcpClient> 에 바인딩합니다는 <xref:System.Net.IPEndPoint> 에 지정 된는 `localEP` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-124">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="5b7d1-125">이 생성자를 호출 하기 전에 만들어야 합니다는 <xref:System.Net.IPEndPoint> 보내고 받는 데이터를 가져오려는 IP 주소와 포트 번호를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-125">Before you call this constructor, you must create an <xref:System.Net.IPEndPoint> using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="5b7d1-126">연결 하 여 통신 하기 전에 로컬 IP 주소와 포트 번호를 지정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-126">You do not need to specify a local IP address and port number before connecting and communicating.</span></span> <span data-ttu-id="5b7d1-127">만드는 경우는 <xref:System.Net.Sockets.TcpClient> 다른 생성자를 사용 하 여 내부 서비스 공급자가 할당 가장 적절 한 로컬 IP 주소와 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-127">If you create a <xref:System.Net.Sockets.TcpClient> using any other constructor, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="5b7d1-128">호출 해야 합니다는 <xref:System.Net.Sockets.TcpClient.Connect%2A> 데이터 보내기 및 받기 전에 메서드.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-128">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-129">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-129">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5b7d1-130">자세한 내용은 참조 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-130">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-131">다음 코드 예제에서는의 인스턴스를 만드는 방법을 보여 줍니다.는 <xref:System.Net.Sockets.TcpClient> 클래스 로컬 끝점을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-131">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b7d1-132"><paramref name="localEP" /> 매개 변수가 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-132">The  <paramref name="localEP" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family"><span data-ttu-id="5b7d1-133">IP 프로토콜의 <see cref="P:System.Net.IPAddress.AddressFamily" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-133">The <see cref="P:System.Net.IPAddress.AddressFamily" /> of the IP protocol.</span></span></param>
        <summary><span data-ttu-id="5b7d1-134">지정된 패밀리를 사용하여 <see cref="T:System.Net.Sockets.TcpClient" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-134">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class with the specified family.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-135">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-135">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5b7d1-136">자세한 내용은 참조 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-136">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-137">다음 코드 예제에서는의 인스턴스를 만드는 방법을 보여 줍니다.는 <xref:System.Net.Sockets.TcpClient> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-137">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5b7d1-138"><paramref name="family" /> 매개 변수가 AddressFamily.InterNetwork와 같지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-138">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetwork</span></span>  
  
 <span data-ttu-id="5b7d1-139">또는</span><span class="sxs-lookup"><span data-stu-id="5b7d1-139">-or-</span></span>  
  
 <span data-ttu-id="5b7d1-140"><paramref name="family" /> 매개 변수가 AddressFamily.InterNetworkV6와 같지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-140">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetworkV6</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::String ^ hostname, int port);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname"><span data-ttu-id="5b7d1-141">연결할 원격 호스트의 DNS 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-141">The DNS name of the remote host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="5b7d1-142">연결한 원격 호스트의 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-142">The port number of the remote host to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="5b7d1-143"><see cref="T:System.Net.Sockets.TcpClient" /> 클래스의 새 인스턴스를 초기화하고 지정된 호스트의 지정된 포트에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-143">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and connects to the specified port on the specified host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-144">이 생성자는 새 만듭니다 <xref:System.Net.Sockets.TcpClient> 동기 연결을 제공된 된 호스트 이름 및 포트 번호를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-144">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and makes a synchronous connection attempt to the provided host name and port number.</span></span> <span data-ttu-id="5b7d1-145">기본 서비스 공급자는 가장 적절 한 로컬 IP 주소와 포트 번호를 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-145">The underlying service provider will assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="5b7d1-146"><xref:System.Net.Sockets.TcpClient> 연결 되거나 실패할 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-146"><xref:System.Net.Sockets.TcpClient> will block until it either connects or fails.</span></span> <span data-ttu-id="5b7d1-147">이 생성자를 사용 하면 초기화 DNS 호스트 이름을 확인 하 고, 편리 하 게 한 번에 연결할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-147">This constructor allows you to initialize, resolve the DNS host name, and connect in one convenient step.</span></span>  
  
 <span data-ttu-id="5b7d1-148">I p v 6이 사용 되는 경우 및 <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> ipv6 확인 되는 호스트에 연결할 메서드는 및 IPv4 주소, IPv6 주소에 대 한 연결 시도 후 IPv4 주소 앞입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-148">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="5b7d1-149">호스트의 IPv6 주소에서 수신 하지 않는 경우 연결을 설정 하는 데 시간이 지연이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-149">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-150">표시 되 면는 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 얻어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-150">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5b7d1-151">이 코드를 가져온 후에 Windows 소켓 버전 2 API 오류 코드 MSDN 설명서에서 오류에 대 한 자세한 설명은 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-151">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-152">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-152">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5b7d1-153">자세한 내용은 참조 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-153">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-154">다음 코드 예제에서는의 인스턴스를 만드는 방법을 보여 줍니다.는 <xref:System.Net.Sockets.TcpClient> 호스트 이름을 사용 하 여 클래스 및 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-154">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b7d1-155"><paramref name="hostname" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-155">The <paramref name="hostname" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5b7d1-156"><paramref name="port" /> 매개 변수가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-156">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5b7d1-157">소켓에 액세스할 때 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-157">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="Overload:System.Net.Sockets.TcpClient.#ctor" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b7d1-158">연결되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-158">Gets or set a value that indicates whether a connection has been made.</span></span></summary>
        <value>
          <span data-ttu-id="5b7d1-159">연결되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-159"><see langword="true" /> if the connection has been made; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-160">파생 된 클래스 <xref:System.Net.Sockets.TcpClient> 연결 시도 성공 하는 경우를 확인 하려면이 속성을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-160">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to determine if a connection attempt has succeeded.</span></span> <span data-ttu-id="5b7d1-161">진행 중인 연결 상태를 모니터링 하지 않습니다 <xref:System.Net.Sockets.TcpClient>합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-161">It does not monitor the ongoing connection state of <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="5b7d1-162">원격 호스트 연결을 닫으면 <xref:System.Net.Sockets.TcpClient.Active%2A> 업데이트 되지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-162">If the remote host closes the connection, <xref:System.Net.Sockets.TcpClient.Active%2A> will not be updated.</span></span> <span data-ttu-id="5b7d1-163">파생 하는 경우 <xref:System.Net.Sockets.TcpClient> 연결 상태로 사용 하 여 좀 더 주의 해야 하 고는 <xref:System.Net.Sockets.Socket.Connected%2A> 의 속성은 <xref:System.Net.Sockets.Socket> 에서 반환 되는 <xref:System.Net.Sockets.TcpClient.Client%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-163">If you are deriving from <xref:System.Net.Sockets.TcpClient> and require closer attention to the connection state, use the <xref:System.Net.Sockets.Socket.Connected%2A> property of the <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpClient.Client%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.Connected" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b7d1-164">네트워크에서 받아서 읽을 수 있는 데이터의 양을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-164">Gets the amount of data that has been received from the network and is available to be read.</span></span></summary>
        <value><span data-ttu-id="5b7d1-165">네트워크에서 받아서 읽을 수 있는 데이터의 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-165">The number of bytes of data received from the network and available to be read.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-166"><xref:System.Net.Sockets.TcpClient.Available%2A> 읽기 위해 대기 중인 데이터가 있는지 여부를 결정 하는 방법이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-166"><xref:System.Net.Sockets.TcpClient.Available%2A> is a way to determine whether data is queued for reading.</span></span> <span data-ttu-id="5b7d1-167">데이터를 사용할 수 있으면 호출 <xref:System.Net.Sockets.NetworkStream.Read%2A> 데이터를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-167">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="5b7d1-168">사용 가능한 데이터는 읽기에 대 한 네트워크 버퍼에서 대기 중인 총 데이터 양이 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-168">The available data is the total amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="5b7d1-169">네트워크 버퍼에 대기 중인 데이터가 없을 경우 <xref:System.Net.Sockets.TcpClient.Available%2A> 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-169">If no data is queued in the network buffer, <xref:System.Net.Sockets.TcpClient.Available%2A> returns 0.</span></span>  
  
 <span data-ttu-id="5b7d1-170">원격 호스트 종료 되거나 연결이 닫히면 <xref:System.Net.Sockets.TcpClient.Available%2A> throw 될 수 있습니다는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-170">If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.TcpClient.Available%2A> may throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="5b7d1-171">표시 되 면는 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 얻어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-171">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5b7d1-172">이 코드를 가져온 후 MSDN library에서 Windows 소켓 버전 2 API 오류 코드 설명서를 참조할 수 있습니다 [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) 오류에 대 한 자세한 설명은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-172">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-173">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Net.Sockets.TcpClient.Available%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-173">The following code example shows the use of the <xref:System.Net.Sockets.TcpClient.Available%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5b7d1-174">소켓에 액세스하는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-174">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5b7d1-175"><see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-175">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginConnect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5b7d1-176">원격 호스트 연결에 대한 비동기 요청을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-176">Begins an asynchronous request for a remote host connection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress address, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress address, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (address As IPAddress, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::IPAddress ^ address, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="5b7d1-177">원격 호스트의 <see cref="T:System.Net.IPAddress" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-177">The <see cref="T:System.Net.IPAddress" /> of the remote host.</span></span></param>
        <param name="port"><span data-ttu-id="5b7d1-178">원격 호스트의 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-178">The port number of the remote host.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="5b7d1-179">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-179">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="5b7d1-180">연결 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-180">A user-defined object that contains information about the connect operation.</span></span> <span data-ttu-id="5b7d1-181">이 개체는 작업이 완료되면 <c>requestCallback</c> 대리자에게 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-181">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="5b7d1-182">원격 호스트 연결에 대한 비동기 요청을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-182">Begins an asynchronous request for a remote host connection.</span></span> <span data-ttu-id="5b7d1-183">원격 호스트는 <see cref="T:System.Net.IPAddress" />와 포트 번호(<see cref="T:System.Int32" />)로 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-183">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number (<see cref="T:System.Int32" />).</span></span></summary>
        <returns><span data-ttu-id="5b7d1-184">비동기 연결을 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-184">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-185">비동기 <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> 호출 하 여 작업을 완료 해야는 <xref:System.Net.Sockets.TcpClient.EndConnect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-185">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="5b7d1-186">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-186">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="5b7d1-187">이 메서드는 작업이 완료 될 때까지 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-187">This method does not block until the operation completes.</span></span> <span data-ttu-id="5b7d1-188">작업이 완료 될 때까지 차단 하려면 중 사용 된 <xref:System.Net.Sockets.TcpClient.Connect%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-188">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="5b7d1-189">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 [대](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-189">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-190">다음 코드 예제에서는 한 <xref:System.Net.Sockets.TcpClient> 원격 호스트에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-190">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b7d1-191"><paramref name="address" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-191">The <paramref name="address" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5b7d1-192">소켓에 액세스하는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-192">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5b7d1-193"><see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-193">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="5b7d1-194">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-194">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5b7d1-195">포트 번호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-195">The port number is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress[] addresses, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress[] addresses, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (addresses As IPAddress(), port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="addresses"><span data-ttu-id="5b7d1-196">원격 호스트를 지정하는 하나 이상의 <see cref="T:System.Net.IPAddress" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-196">At least one <see cref="T:System.Net.IPAddress" /> that designates the remote hosts.</span></span></param>
        <param name="port"><span data-ttu-id="5b7d1-197">원격 호스트의 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-197">The port number of the remote hosts.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="5b7d1-198">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-198">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="5b7d1-199">연결 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-199">A user-defined object that contains information about the connect operation.</span></span> <span data-ttu-id="5b7d1-200">이 개체는 작업이 완료되면 <c>requestCallback</c> 대리자에게 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-200">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="5b7d1-201">원격 호스트 연결에 대한 비동기 요청을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-201">Begins an asynchronous request for a remote host connection.</span></span> <span data-ttu-id="5b7d1-202">원격 호스트는 <see cref="T:System.Net.IPAddress" /> 배열과 포트 번호(<see cref="T:System.Int32" />)로 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-202">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number (<see cref="T:System.Int32" />).</span></span></summary>
        <returns><span data-ttu-id="5b7d1-203">비동기 연결을 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-203">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-204">비동기 <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> 호출 하 여 작업을 완료 해야는 <xref:System.Net.Sockets.TcpClient.EndConnect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-204">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="5b7d1-205">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-205">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="5b7d1-206">이 메서드는 작업이 완료 될 때까지 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-206">This method does not block until the operation completes.</span></span> <span data-ttu-id="5b7d1-207">작업이 완료 될 때까지 차단 하려면 중 사용 된 <xref:System.Net.Sockets.TcpClient.Connect%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-207">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="5b7d1-208">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 [대](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-208">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 <span data-ttu-id="5b7d1-209">에 대 한 호출 직후이 메서드는 일반적으로 <xref:System.Net.Dns.BeginGetHostAddresses%2A> 메서드를 단일 호스트에 대해 여러 IP 주소를 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-209">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-210">다음 코드 예제에서는 한 <xref:System.Net.Sockets.TcpClient> 원격 호스트에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-210">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b7d1-211"><paramref name="addresses" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-211">The <paramref name="addresses" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5b7d1-212">소켓에 액세스하는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-212">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5b7d1-213"><see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-213">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="5b7d1-214">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-214">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5b7d1-215">포트 번호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-215">The port number is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (string host, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(string host, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (host As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::String ^ host, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="5b7d1-216">원격 호스트의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-216">The name of the remote host.</span></span></param>
        <param name="port"><span data-ttu-id="5b7d1-217">원격 호스트의 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-217">The port number of the remote host.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="5b7d1-218">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-218">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="5b7d1-219">연결 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-219">A user-defined object that contains information about the connect operation.</span></span> <span data-ttu-id="5b7d1-220">이 개체는 작업이 완료되면 <c>requestCallback</c> 대리자에게 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-220">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="5b7d1-221">원격 호스트 연결에 대한 비동기 요청을 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-221">Begins an asynchronous request for a remote host connection.</span></span> <span data-ttu-id="5b7d1-222">원격 호스트는 호스트 이름(<see cref="T:System.String" />)과 포트 번호(<see cref="T:System.Int32" />)로 지정됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-222">The remote host is specified by a host name (<see cref="T:System.String" />) and a port number (<see cref="T:System.Int32" />).</span></span></summary>
        <returns><span data-ttu-id="5b7d1-223">비동기 연결을 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-223">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-224">비동기 <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> 호출 하 여 작업을 완료 해야는 <xref:System.Net.Sockets.TcpClient.EndConnect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-224">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="5b7d1-225">메서드는 일반적으로 `asyncCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-225">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="5b7d1-226">이 메서드는 작업이 완료 될 때까지 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-226">This method does not block until the operation completes.</span></span> <span data-ttu-id="5b7d1-227">작업이 완료 될 때까지 차단 하려면 중 사용 된 <xref:System.Net.Sockets.TcpClient.Connect%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-227">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="5b7d1-228">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 참조 [대](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-228">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-229">다음 코드 예제에서는 한 <xref:System.Net.Sockets.TcpClient> 원격 호스트에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-229">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b7d1-230"><paramref name="host" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-230">The <paramref name="host" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5b7d1-231">소켓에 액세스하는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-231">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5b7d1-232"><see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-232">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="5b7d1-233">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-233">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5b7d1-234">포트 번호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-234">The port number is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b7d1-235">내부 <see cref="T:System.Net.Sockets.Socket" />을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-235">Gets or sets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="5b7d1-236">내부 네트워크 <see cref="T:System.Net.Sockets.Socket" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-236">The underlying network <see cref="T:System.Net.Sockets.Socket" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-237"><xref:System.Net.Sockets.TcpClient> 만듭니다는 <xref:System.Net.Sockets.Socket> 네트워크를 통해 데이터를 주고받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-237"><xref:System.Net.Sockets.TcpClient> creates a <xref:System.Net.Sockets.Socket> to send and receive data over a network.</span></span> <span data-ttu-id="5b7d1-238">파생 된 클래스 <xref:System.Net.Sockets.TcpClient> 을 가져오거나 설정 합니다.이 속성을 사용할 수 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-238">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to get or set this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="5b7d1-239">기본 사용 하 여 <xref:System.Net.Sockets.Socket> 에서 반환 된 <xref:System.Net.Sockets.TcpClient.Client%2A> 필요한 경우 액세스 하는 것 이상의 <xref:System.Net.Sockets.TcpClient> 를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-239">Use the underlying <xref:System.Net.Sockets.Socket> returned from <xref:System.Net.Sockets.TcpClient.Client%2A> if you require access beyond that which <xref:System.Net.Sockets.TcpClient> provides.</span></span> <span data-ttu-id="5b7d1-240">사용할 수도 있습니다 <xref:System.Net.Sockets.TcpClient.Client%2A> 기본 설정 하려면 <xref:System.Net.Sockets.Socket> 기존의 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-240">You can also use <xref:System.Net.Sockets.TcpClient.Client%2A> to set the underlying <xref:System.Net.Sockets.Socket> to an existing <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="5b7d1-241">이의 단순성을 활용 하려는 경우 유용할 수 있습니다 <xref:System.Net.Sockets.TcpClient> 기존를 사용 하 여 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-241">This might be useful if you want to take advantage of the simplicity of <xref:System.Net.Sockets.TcpClient> using a pre-existing <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-242">다음 코드 예제에서는 <xref:System.Net.Sockets.TcpClient.Client%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-242">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpClient.Client%2A> property.</span></span> <span data-ttu-id="5b7d1-243">이 예제에서는 기본의 수신 버퍼 크기 <xref:System.Net.Sockets.Socket> 변경 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-243">In this example, the receive buffer size of the underlying <xref:System.Net.Sockets.Socket> is changed.</span></span>  
  
 [!code-csharp[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5b7d1-244">이 <see cref="T:System.Net.Sockets.TcpClient" /> 인스턴스를 삭제하고 내부 TCP 연결을 닫도록 요청합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-244">Disposes this <see cref="T:System.Net.Sockets.TcpClient" /> instance and requests that the underlying TCP connection be closed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-245"><xref:System.Net.Sockets.TcpClient.Close%2A> 메서드 인스턴스 삭제 된 것으로 표시 하 고 요청 하는 연결 된 <xref:System.Net.Sockets.Socket> TCP 연결을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-245">The <xref:System.Net.Sockets.TcpClient.Close%2A> method marks the instance as disposed and requests that the associated <xref:System.Net.Sockets.Socket> close the TCP connection.</span></span> <span data-ttu-id="5b7d1-246">에 따라는 <xref:System.Net.Sockets.TcpClient.LingerState%2A> 속성, TCP 연결 수 개방 후 일정 시간 동안은 <xref:System.Net.Sockets.TcpClient.Close%2A> 메서드는 보낼 데이터가 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-246">Based on the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property, the TCP connection may stay open for some time after the <xref:System.Net.Sockets.TcpClient.Close%2A> method is called when data remains to be sent.</span></span> <span data-ttu-id="5b7d1-247">아무런 알림이 표시는 기본 연결 닫기가 완료 하는 경우에 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-247">There is no notification provided when the underlying connection has completed closing.</span></span>  
  
 <span data-ttu-id="5b7d1-248">이 메서드를 호출 하면 결국 관련 된 닫히고 <xref:System.Net.Sockets.Socket> 도 연결 된 닫힙니다 <xref:System.Net.Sockets.NetworkStream> 하나를 만든 경우 데이터를 송수신 하는 데 사용 되는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-248">Calling this method will eventually result in the close of the associated <xref:System.Net.Sockets.Socket> and will also close the associated <xref:System.Net.Sockets.NetworkStream> that is used to send and receive data if one was created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-249">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-249">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5b7d1-250">자세한 내용은 참조 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-250">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-251">다음 코드 예제에는 닫는 방법을 보여 줍니다.는 <xref:System.Net.Sockets.TcpClient> 호출 하 여는 <xref:System.Net.Sockets.TcpClient.Close%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-251">The following code example demonstrates closing a <xref:System.Net.Sockets.TcpClient> by calling the <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span>  
  
 [!code-cpp[NCLTCPClientSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLTcpClientSync/CPP/tcpclient.cpp#1)]
 [!code-csharp[NCLTCPClientSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5b7d1-252">지정된 호스트 이름과 포트 번호를 사용하여 원격 TCP 호스트에 클라이언트를 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-252">Connects the client to a remote TCP host using the specified host name and port number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (remoteEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ remoteEP);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="remoteEP"><span data-ttu-id="5b7d1-253">연결할 <see cref="T:System.Net.IPEndPoint" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-253">The <see cref="T:System.Net.IPEndPoint" /> to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="5b7d1-254">지정된 네트워크 끝점을 사용하여 원격 TCP 호스트에 클라이언트를 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-254">Connects the client to a remote TCP host using the specified remote network endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-255">지정 된 동기 원격 호스트 연결을 설정 하려면이 메서드를 호출 <xref:System.Net.IPEndPoint>합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-255">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="5b7d1-256">호출 하기 전에 <xref:System.Net.Sockets.TcpClient.Connect%2A> 의 인스턴스를 만들어야는 <xref:System.Net.IPEndPoint> 클래스 IP 주소와 포트 번호를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-256">Before you call <xref:System.Net.Sockets.TcpClient.Connect%2A> you must create an instance of the <xref:System.Net.IPEndPoint> class using an IP address and a port number.</span></span> <span data-ttu-id="5b7d1-257">이 사용 하 여 <xref:System.Net.IPEndPoint> 로 `remoteEP` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-257">Use this <xref:System.Net.IPEndPoint> as the `remoteEP` parameter.</span></span> <span data-ttu-id="5b7d1-258"><xref:System.Net.Sockets.TcpClient.Connect%2A> 메서드 연결 되거나 실패할 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-258">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="5b7d1-259">원격 호스트에 연결한 후 사용 하 여는 <xref:System.Net.Sockets.TcpClient.GetStream%2A> 메서드 내부 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-259">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="5b7d1-260">이 사용 하 여 <xref:System.Net.Sockets.NetworkStream> 데이터를 주고받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-260">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-261">표시 되 면는 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 얻어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-261">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5b7d1-262">이 코드를 가져온 후에 Windows 소켓 버전 2 API 오류 코드 MSDN 설명서에서 오류에 대 한 자세한 설명은 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-262">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-263">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-263">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5b7d1-264">자세한 내용은 참조 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)</span><span class="sxs-lookup"><span data-stu-id="5b7d1-264">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-265">다음 코드 예제에서는 <xref:System.Net.IPEndPoint> 원격 호스트와 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-265">The following code example uses an <xref:System.Net.IPEndPoint> to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b7d1-266"><paramref name="remoteEp" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-266">The <paramref name="remoteEp" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5b7d1-267">소켓에 액세스할 때 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-267">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5b7d1-268"><see cref="T:System.Net.Sockets.TcpClient" />가 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-268">The <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span></span></exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (address As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ address, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="5b7d1-269">연결할 호스트의 <see cref="T:System.Net.IPAddress" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-269">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="5b7d1-270">연결할 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-270">The port number to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="5b7d1-271">지정된 IP 주소와 포트 번호를 사용하여 원격 TCP 호스트에 클라이언트를 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-271">Connects the client to a remote TCP host using the specified IP address and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-272">지정 된 동기 원격 호스트 연결을 설정 하려면이 메서드를 호출 <xref:System.Net.IPAddress> 및 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-272">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number.</span></span> <span data-ttu-id="5b7d1-273"><xref:System.Net.Sockets.TcpClient.Connect%2A> 메서드 연결 되거나 실패할 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-273">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="5b7d1-274">원격 호스트에 연결한 후 사용 하 여는 <xref:System.Net.Sockets.TcpClient.GetStream%2A> 메서드 내부 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-274">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="5b7d1-275">이 사용 하 여 <xref:System.Net.Sockets.NetworkStream> 데이터를 주고받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-275">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-276">표시 되 면는 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 얻어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-276">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5b7d1-277">이 코드를 가져온 후에 Windows 소켓 버전 2 API 오류 코드 MSDN 설명서에서 오류에 대 한 자세한 설명은 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-277">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-278">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-278">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5b7d1-279">자세한 내용은 참조 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-279">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-280">다음 코드 예제에서는 IP 주소와 포트 번호를 사용 하 여 원격 호스트와 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-280">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b7d1-281"><paramref name="address" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-281">The <paramref name="address" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5b7d1-282"><paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-282">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5b7d1-283">소켓에 액세스할 때 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-283">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5b7d1-284"><see cref="T:System.Net.Sockets.TcpClient" />가 닫혀 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-284"><see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress[] ipAddresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress[] ipAddresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (ipAddresses As IPAddress(), port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(cli::array &lt;System::Net::IPAddress ^&gt; ^ ipAddresses, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAddresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ipAddresses"><span data-ttu-id="5b7d1-285">연결할 호스트의 <see cref="T:System.Net.IPAddress" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-285">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="5b7d1-286">연결할 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-286">The port number to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="5b7d1-287">지정된 IP 주소와 포트 번호를 사용하여 원격 TCP 호스트에 클라이언트를 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-287">Connects the client to a remote TCP host using the specified IP addresses and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-288">에 대 한 호출 직후이 메서드는 일반적으로 <xref:System.Net.Dns.BeginGetHostAddresses%2A> 메서드를 단일 호스트에 대해 여러 IP 주소를 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-288">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="5b7d1-289">호출 된 <xref:System.Net.Sockets.TcpClient.Connect%2A> 의 배열에서 지정 된 호스트에 동기 원격 호스트 연결을 설정 하려면 <xref:System.Net.IPAddress> 요소와 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-289">Call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number.</span></span> <span data-ttu-id="5b7d1-290"><xref:System.Net.Sockets.TcpClient.Connect%2A> 메서드 연결 되거나 실패할 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-290">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="5b7d1-291">원격 호스트에 연결한 후 사용 하 여는 <xref:System.Net.Sockets.TcpClient.GetStream%2A> 메서드 내부 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-291">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="5b7d1-292">이 사용 하 여 <xref:System.Net.Sockets.NetworkStream> 데이터를 주고받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-292">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-293">표시 되 면는 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 얻어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-293">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5b7d1-294">이 코드를 가져온 후 MSDN library에서 Windows 소켓 버전 2 API 오류 코드 설명서를 참조할 수 있습니다 [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) 오류에 대 한 자세한 설명은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-294">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-295">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-295">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5b7d1-296">자세한 내용은 참조 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-296">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-297">다음 코드 예제에서는 IP 주소와 포트 번호를 사용 하 여 원격 호스트와 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-297">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#8)]
 [!code-csharp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b7d1-298"><paramref name="ipAddresses" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-298">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5b7d1-299">포트 번호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-299">The port number is not valid.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5b7d1-300">소켓에 액세스하는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-300">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5b7d1-301"><see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-301">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="5b7d1-302">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-302">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5b7d1-303">이 메서드는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 플래그 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 플래그를 사용하는 소켓에 대해서만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-303">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname"><span data-ttu-id="5b7d1-304">연결할 원격 호스트의 DNS 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-304">The DNS name of the remote host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="5b7d1-305">연결한 원격 호스트의 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-305">The port number of the remote host to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="5b7d1-306">지정된 호스트의 지정된 포트에 클라이언트를 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-306">Connects the client to the specified port on the specified host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-307">이 메서드는 동기 원격 호스트 연결에 지정된 된 호스트 이름 설정 하 고 포트 번호를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-307">Call this method to establish a synchronous remote host connection to the specified host name and port number.</span></span> <span data-ttu-id="5b7d1-308"><xref:System.Net.Sockets.TcpClient.Connect%2A> 메서드 연결 되거나 실패할 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-308">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="5b7d1-309">원격 호스트에 연결한 후 사용 하 여는 <xref:System.Net.Sockets.TcpClient.GetStream%2A> 메서드 내부 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-309">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="5b7d1-310">이 사용 하 여 <xref:System.Net.Sockets.NetworkStream> 데이터를 주고받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-310">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
 <span data-ttu-id="5b7d1-311">I p v 6이 사용 되는 경우 및 <xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29> ipv6 확인 되는 호스트에 연결할 메서드는 및 IPv4 주소, IPv6 주소에 대 한 연결 시도 후 IPv4 주소 앞입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-311">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="5b7d1-312">호스트의 IPv6 주소에서 수신 하지 않는 경우 연결을 설정 하는 데 시간이 지연이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-312">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-313">표시 되 면는 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 얻어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-313">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5b7d1-314">이 코드를 가져온 후에 Windows 소켓 버전 2 API 오류 코드 MSDN 설명서에서 오류에 대 한 자세한 설명은 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-314">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-315">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-315">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5b7d1-316">자세한 내용은 참조 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-316">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-317">다음 코드 예제에서는 사용 하 여 원격 호스트와 연결 하는 호스트 이름과 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-317">The following code example uses the host name and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b7d1-318"><paramref name="hostname" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-318">The <paramref name="hostname" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5b7d1-319"><paramref name="port" /> 매개 변수가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-319">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5b7d1-320">소켓에 액세스할 때 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-320">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5b7d1-321"><see cref="T:System.Net.Sockets.TcpClient" />가 닫혀 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-321"><see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5b7d1-322">지정된 호스트 이름과 포트 번호를 사용하여 비동기 작업으로 원격 TCP 호스트에 클라이언트를 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-322">Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (address As IPAddress, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::Net::IPAddress ^ address, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="5b7d1-323">연결할 호스트의 <see cref="T:System.Net.IPAddress" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-323">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="5b7d1-324">연결할 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-324">The port number to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="5b7d1-325">지정된 IP 주소와 포트 번호를 사용하여 비동기 작업으로 원격 TCP 호스트에 클라이언트를 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-325">Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="5b7d1-326"><see cref="T:System.Threading.Tasks.Task" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-326">Returns <see cref="T:System.Threading.Tasks.Task" /></span></span>  
  
 <span data-ttu-id="5b7d1-327">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-327">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-328">이 작업을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-328">This operation will not block.</span></span> <span data-ttu-id="5b7d1-329">반환 된 반환 <xref:System.Threading.Tasks.Task> 개체는 TCP 연결을 설정한 후 완료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-329">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="5b7d1-330">이 메서드는 연결 요청을 처리 중 동안 호출 스레드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-330">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="5b7d1-331">지정 된 동기 원격 호스트 연결을 설정 하려면이 메서드를 호출 <xref:System.Net.IPAddress> 및 비동기 작업으로 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-331">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number as an asynchronous operation.</span></span> <span data-ttu-id="5b7d1-332">원격 호스트에 연결한 후 사용 하 여는 <xref:System.Net.Sockets.TcpClient.GetStream%2A> 메서드 내부 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-332">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="5b7d1-333">이 사용 하 여 <xref:System.Net.Sockets.NetworkStream> 데이터를 주고받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-333">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-334">표시 되 면는 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 얻어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-334">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5b7d1-335">이 코드를 가져온 후에 Windows 소켓 버전 2 API 오류 코드 MSDN 설명서에서 오류에 대 한 자세한 설명은 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-335">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-336">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-336">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5b7d1-337">자세한 내용은 참조 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-337">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b7d1-338"><paramref name="address" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-338">The <paramref name="address" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5b7d1-339"><paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-339">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5b7d1-340">소켓에 액세스할 때 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-340">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5b7d1-341"><see cref="T:System.Net.Sockets.TcpClient" />가 닫혀 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-341"><see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress[] addresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress[] addresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (addresses As IPAddress(), port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addresses"><span data-ttu-id="5b7d1-342">연결할 호스트의 <see cref="T:System.Net.IPAddress" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-342">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="5b7d1-343">연결할 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-343">The port number to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="5b7d1-344">지정된 IP 주소와 포트 번호를 사용하여 비동기 작업으로 원격 TCP 호스트에 클라이언트를 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-344">Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="5b7d1-345"><see cref="T:System.Threading.Tasks.Task" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-345">Returns <see cref="T:System.Threading.Tasks.Task" /></span></span>  
  
 <span data-ttu-id="5b7d1-346">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-346">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-347">이 작업을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-347">This operation will not block.</span></span> <span data-ttu-id="5b7d1-348">반환 된 반환 <xref:System.Threading.Tasks.Task> 개체는 TCP 연결을 설정한 후 완료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-348">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="5b7d1-349">이 메서드는 연결 요청을 처리 중 동안 호출 스레드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-349">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="5b7d1-350">에 대 한 호출 직후이 메서드는 일반적으로 <xref:System.Net.Dns.BeginGetHostAddresses%2A> 메서드를 단일 호스트에 대해 여러 IP 주소를 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-350">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="5b7d1-351">배열에서 지정 된 호스트에 동기 원격 호스트 연결을 설정 하려면이 메서드를 호출 <xref:System.Net.IPAddress> 요소와 비동기 작업으로 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-351">Call this method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number as an asynchronous operation.</span></span> <span data-ttu-id="5b7d1-352">원격 호스트에 연결한 후 사용 하 여는 <xref:System.Net.Sockets.TcpClient.GetStream%2A> 메서드 내부 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-352">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="5b7d1-353">이 사용 하 여 <xref:System.Net.Sockets.NetworkStream> 데이터를 주고받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-353">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-354">표시 되 면는 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 얻어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-354">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5b7d1-355">이 코드를 가져온 후 MSDN library에서 Windows 소켓 버전 2 API 오류 코드 설명서를 참조할 수 있습니다 [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) 오류에 대 한 자세한 설명은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-355">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-356">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-356">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5b7d1-357">자세한 내용은 참조 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-357">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b7d1-358"><paramref name="ipAddresses" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-358">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5b7d1-359">포트 번호가 잘못된 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-359">The port number is not valid.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5b7d1-360">소켓에 액세스하는 동안 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-360">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5b7d1-361"><see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-361">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="5b7d1-362">호출 스택의 상위 호출자에게 요청된 작업을 수행할 권한이 없는 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-362">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5b7d1-363">이 메서드는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 플래그 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 플래그를 사용하는 소켓에 대해서만 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-363">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (host As String, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::String ^ host, int port);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="5b7d1-364">연결할 원격 호스트의 DNS 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-364">The DNS name of the remote host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="5b7d1-365">연결한 원격 호스트의 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-365">The port number of the remote host to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="5b7d1-366">지정된 호스트의 지정된 TCP 포트에 클라이언트를 비동기 작업으로 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-366">Connects the client to the specified TCP port on the specified host as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="5b7d1-367"><see cref="T:System.Threading.Tasks.Task" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-367">Returns <see cref="T:System.Threading.Tasks.Task" /></span></span>  
  
 <span data-ttu-id="5b7d1-368">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-368">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-369">이 작업을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-369">This operation will not block.</span></span> <span data-ttu-id="5b7d1-370">반환 된 반환 <xref:System.Threading.Tasks.Task> 개체는 TCP 연결을 설정한 후 완료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-370">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="5b7d1-371">이 메서드는 연결 요청을 처리 중 동안 호출 스레드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-371">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="5b7d1-372">지정 된 호스트 이름에 동기 원격 호스트 연결을 설정 하 고 포트 번호는 비동기 작업으로 하려면이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-372">Call this method to establish a synchronous remote host connection to the specified host name and port number as an asynchronous operation.</span></span> <span data-ttu-id="5b7d1-373">원격 호스트에 연결한 후 사용 하 여는 <xref:System.Net.Sockets.TcpClient.GetStream%2A> 메서드 내부 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-373">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="5b7d1-374">이 사용 하 여 <xref:System.Net.Sockets.NetworkStream> 데이터를 주고받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-374">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
 <span data-ttu-id="5b7d1-375">I p v 6이 사용 되는 경우 및 <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> ipv6 확인 되는 호스트에 연결할 메서드는 및 IPv4 주소, IPv6 주소에 대 한 연결 시도 후 IPv4 주소 앞입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-375">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="5b7d1-376">호스트의 IPv6 주소에서 수신 하지 않는 경우 연결을 설정 하는 데 시간이 지연이 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-376">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-377">표시 되 면는 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 얻어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-377">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5b7d1-378">이 코드를 가져온 후에 Windows 소켓 버전 2 API 오류 코드 MSDN 설명서에서 오류에 대 한 자세한 설명은 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-378">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-379">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-379">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5b7d1-380">자세한 내용은 참조 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-380">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b7d1-381"><paramref name="hostname" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-381">The <paramref name="hostname" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5b7d1-382"><paramref name="port" /> 매개 변수가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-382">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5b7d1-383">소켓에 액세스할 때 오류가 발생했습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-383">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5b7d1-384"><see cref="T:System.Net.Sockets.TcpClient" />가 닫혀 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-384"><see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connected">
      <MemberSignature Language="C#" Value="public bool Connected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Connected" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Connected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Connected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b7d1-385"><see cref="T:System.Net.Sockets.Socket" />의 내부 <see cref="T:System.Net.Sockets.TcpClient" />이 원격 호스트에 연결되어 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-385">Gets a value indicating whether the underlying <see cref="T:System.Net.Sockets.Socket" /> for a <see cref="T:System.Net.Sockets.TcpClient" /> is connected to a remote host.</span></span></summary>
        <value>
          <span data-ttu-id="5b7d1-386">가장 최근 작업에서 <see cref="P:System.Net.Sockets.TcpClient.Client" /> 소켓이 원격 리소스에 연결되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-386"><see langword="true" /> if the <see cref="P:System.Net.Sockets.TcpClient.Client" /> socket was connected to a remote resource as of the most recent operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-387"><xref:System.Net.Sockets.TcpClient.Connected%2A> 속성의 연결 상태를 가져옵니다는 <xref:System.Net.Sockets.TcpClient.Client%2A> 소켓 마지막 I/O 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-387">The <xref:System.Net.Sockets.TcpClient.Connected%2A> property gets the connection state of the <xref:System.Net.Sockets.TcpClient.Client%2A> socket as of the last I/O operation.</span></span> <span data-ttu-id="5b7d1-388">반환 될 때 `false`, <xref:System.Net.Sockets.TcpClient.Client%2A> 소켓이 연결 된 적 또는 더 이상 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-388">When it returns `false`, the <xref:System.Net.Sockets.TcpClient.Client%2A> socket was either never connected, or is no longer connected.</span></span>  
  
 <span data-ttu-id="5b7d1-389">때문에 <xref:System.Net.Sockets.TcpClient.Connected%2A> 속성은 연결 가장 최근 작업의 상태를 반영만, 현재 상태를 확인 하는 메시지를 받거나 보낼 하려고 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-389">Because the <xref:System.Net.Sockets.TcpClient.Connected%2A> property only reflects the state of the connection as of the most recent operation, you should attempt to send or receive a message to determine the current state.</span></span> <span data-ttu-id="5b7d1-390">이 속성은 더 이상 반환 메시지 보내기에 실패 하면 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-390">After the message send fails, this property no longer returns `true`.</span></span> <span data-ttu-id="5b7d1-391">이 동작은 의도적인 유의 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-391">Note that this behavior is by design.</span></span> <span data-ttu-id="5b7d1-392">때문에, 테스트 및 송신/수신 사이 연결이 손실 되었을 수 있습니다에 안정적으로 연결의 상태를 테스트할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-392">You cannot reliably test the state of the connection because, in the time between the test and a send/receive, the connection could have been lost.</span></span> <span data-ttu-id="5b7d1-393">코드는 소켓이 연결 및 핸들 전송 실패 하는 적절 하 게 가정해 야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-393">Your code should assume the socket is connected, and gracefully handle failed transmissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-394">다음 코드 예제에서는 원격 끝점에 연결 하 고 연결을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-394">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5b7d1-395"><see cref="T:System.Net.Sockets.TcpClient" />에서 사용하는 관리되는 리소스 및 관리되지 않는 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-395">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="5b7d1-396">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-396">Set to <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="5b7d1-397"><see cref="T:System.Net.Sockets.TcpClient" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-397">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-398">이 메서드는 public `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-398">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="5b7d1-399">`Dispose()` 이 메서드를 호출는 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-399">`Dispose()` invokes this method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="5b7d1-400"><xref:System.Object.Finalize%2A> 이 메서드를 호출 `disposing` 로 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-400"><xref:System.Object.Finalize%2A> invokes this method with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="5b7d1-401">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.Net.Sockets.TcpClient>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-401">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.TcpClient> references.</span></span> <span data-ttu-id="5b7d1-402">호출 하 여 수행 된 `Dispose()` 각 참조 된 개체의 메서드.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-402">It does this by invoking the `Dispose()` method of each referenced object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-403">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-403">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5b7d1-404">자세한 내용은 참조 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-404">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5b7d1-405"><see langword="Dispose" />는 다른 개체에서 여러 번 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-405"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="5b7d1-406"><see langword="Dispose(Boolean)" />를 재정의할 때 이전 <see langword="Dispose" /> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-406">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="5b7d1-407">구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />, 참조 [Dispose 메서드를 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-407">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="5b7d1-408">에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />, 참조 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드를 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-408">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndConnect">
      <MemberSignature Language="C#" Value="public void EndConnect (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndConnect(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="5b7d1-409"><see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />를 호출할 때 반환되는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-409">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span></span></param>
        <summary><span data-ttu-id="5b7d1-410">보류 중인 비동기 연결 시도를 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-410">Ends a pending asynchronous connection attempt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-411">이 메서드 차단 작업이 때까지 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-411">This method blocks until the operation is complete.</span></span> <span data-ttu-id="5b7d1-412">이 작업을 동기적으로 수행 하려면는 <xref:System.Net.Sockets.TcpClient.Connect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-412">To perform this operation synchronously, use a <xref:System.Net.Sockets.TcpClient.Connect%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-413">표시 되 면는 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 얻어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-413">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5b7d1-414">이 코드를 가져온 후 MSDN library에서 Windows 소켓 버전 2 API 오류 코드 설명서를 참조할 수 있습니다 [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) 오류에 대 한 자세한 설명은 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-414">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-415">다음 코드 예제에서는 비동기 연결 시도를 끝냅니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-415">The following code example ends the asynchronous connection attempt.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5b7d1-416"><paramref name="asyncResult" /> 매개 변수가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-416">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5b7d1-417"><see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> 메서드를 호출했지만 <paramref name="asyncResult" /> 매개 변수가 반환되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-417">The <paramref name="asyncResult" /> parameter was not returned by a call to a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5b7d1-418"><see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> 메서드가 비동기 연결을 위해 이미 호출된 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-418">The <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> method was previously called for the asynchronous connection.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5b7d1-419"><see cref="T:System.Net.Sockets.Socket" />에 액세스하려고 시도하는 동안 오류가 발생한 경우.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-419">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5b7d1-420">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-420">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b7d1-421"><see cref="T:System.Boolean" />가 하나의 포트를 하나의 클라이언트에서만 사용하도록 허용하는지 여부를 지정하는 <see cref="T:System.Net.Sockets.TcpClient" /> 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-421">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a port.</span></span></summary>
        <value>
          <span data-ttu-id="5b7d1-422"><see cref="T:System.Net.Sockets.TcpClient" />에서 특정 포트를 하나의 클라이언트에서만 사용하도록 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-422"><see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5b7d1-423">Windows Server 2003 및 Windows XP 서비스 팩 2 이상에서는 기본값이 <see langword="true" />이고, 다른 모든 버전에서는 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-423">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-424">기본적으로 여러 클라이언트가 특정 포트를 사용할 수 있습니다. 그러나 클라이언트 중 하나에만 포트에 전송 되는 네트워크 트래픽에 대 한 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-424">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="5b7d1-425">사용할 수는 <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> 여러 클라이언트가 특정 포트를 사용 하지 않도록 설정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-425">You can use the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="5b7d1-426">이 속성은 기본 소켓 클라이언트 포트에 바인딩하기 전에 설정 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-426">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="5b7d1-427">호출 하는 경우 <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, 또는 <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>메서드의 부작용으로 클라이언트 포트 바인딩되어 하 고 설정할 수 없습니다는 <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> 속성</span><span class="sxs-lookup"><span data-stu-id="5b7d1-427">If you call <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, or <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, the client port is bound as a side effect of the method, and you cannot subsequently set the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-428">다음 코드 예제에서는 한 <xref:System.Net.Sockets.TcpClient> 가져오고의 값을 설정 하 고는 <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-428">The following code example creates a <xref:System.Net.Sockets.TcpClient> and gets and sets the value of the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5b7d1-429">내부 소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-429">An error occurred when attempting to access the underlying socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5b7d1-430">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-430">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpClient ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5b7d1-431"><see cref="T:System.Net.Sockets.TcpClient" /> 클래스에서 사용한 리소스를 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-431">Frees resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-432">이 메서드는 <xref:System.Object.Finalize%2A?displayProperty=nameWithType>를 재정의합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-432">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5b7d1-433">응용 프로그램 코드,이 메서드를 호출 하지 않아야 개체의 <xref:System.Object.Finalize%2A> 메서드를 호출 하 여 가비지 수집기의 종료를 사용 하지 않도록 설정 된 경우가 아니면 자동으로 가비지 수집 중 호출 됩니다는 <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-433">Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="5b7d1-434"><xref:System.Net.Sockets.TcpClient> 클래스 종료자 TCP 연결을 닫고 연결 된 모든 관리 되는 리소스를 해제는 <xref:System.Net.Sockets.TcpClient>합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-434">The <xref:System.Net.Sockets.TcpClient> class finalizer closes the TCP connection and releases all managed resources associated with the <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="5b7d1-435">이러한 리소스는 기본 포함 <xref:System.Net.Sockets.Socket> 원격 호스트와 연결 하는 데 사용 되 고 <xref:System.Net.Sockets.NetworkStream> 데이터 송수신 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-435">These resources include the underlying <xref:System.Net.Sockets.Socket> used for connecting with the remote host, and the <xref:System.Net.Sockets.NetworkStream> used to send and receive data.</span></span> <span data-ttu-id="5b7d1-436">종료자는 관리 되지 않는 리소스를 해제 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-436">The finalizer does not release any unmanaged resources.</span></span>  
  
 <span data-ttu-id="5b7d1-437">자세한 내용은 참조 [Finalize 메서드 및 소멸자](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md), 및 [Finalize 메서드를 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-437">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.NetworkStream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.NetworkStream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As NetworkStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::NetworkStream ^ GetStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.NetworkStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5b7d1-438">데이터를 보내고 받는 데 사용되는 <see cref="T:System.Net.Sockets.NetworkStream" />을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-438">Returns the <see cref="T:System.Net.Sockets.NetworkStream" /> used to send and receive data.</span></span></summary>
        <returns><span data-ttu-id="5b7d1-439">내부 <see cref="T:System.Net.Sockets.NetworkStream" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-439">The underlying <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-440"><xref:System.Net.Sockets.TcpClient.GetStream%2A> 반환 된 <xref:System.Net.Sockets.NetworkStream> 데이터를 받거나 보내기 위해 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-440"><xref:System.Net.Sockets.TcpClient.GetStream%2A> returns a <xref:System.Net.Sockets.NetworkStream> that you can use to send and receive data.</span></span> <span data-ttu-id="5b7d1-441"><xref:System.Net.Sockets.NetworkStream> 클래스에서 상속 된 <xref:System.IO.Stream> 메서드 및 네트워크 통신을 용이 하 게 하는 데 사용 되는 속성의 컬렉션이 들어 있는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-441">The <xref:System.Net.Sockets.NetworkStream> class inherits from the <xref:System.IO.Stream> class, which provides a rich collection of methods and properties used to facilitate network communications.</span></span>  
  
 <span data-ttu-id="5b7d1-442">호출 해야 합니다는 <xref:System.Net.Sockets.TcpClient.Connect%2A> 메서드, 첫 번째 또는 <xref:System.Net.Sockets.TcpClient.GetStream%2A> 메서드는 throw는 <xref:System.InvalidOperationException>합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-442">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method first, or the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="5b7d1-443">가져온 후는 <xref:System.Net.Sockets.NetworkStream>, 호출는 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드를 원격 호스트에 데이터를 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-443">After you have obtained the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method to send data to the remote host.</span></span> <span data-ttu-id="5b7d1-444">호출 된 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드를 원격 호스트에서 데이터를 수신 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-444">Call the <xref:System.Net.Sockets.NetworkStream.Read%2A> method to receive data arriving from the remote host.</span></span> <span data-ttu-id="5b7d1-445">두이 방법 모두 지정 된 작업이 수행 될 때까지 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-445">Both of these methods block until the specified operation is performed.</span></span> <span data-ttu-id="5b7d1-446">선택 하 여 읽기 작업에 대 한 차단을 방지할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-446">You can avoid blocking on a read operation by checking the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property.</span></span> <span data-ttu-id="5b7d1-447">A `true` 값은 데이터 원격 호스트에서 도착 한 되었으며 읽기에 사용할 수 있음을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-447">A `true` value means that data has arrived from the remote host and is available for reading.</span></span> <span data-ttu-id="5b7d1-448">이 경우 <xref:System.Net.Sockets.NetworkStream.Read%2A> 즉시 완료 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-448">In this case, <xref:System.Net.Sockets.NetworkStream.Read%2A> is guaranteed to complete immediately.</span></span> <span data-ttu-id="5b7d1-449">원격 호스트에서 연결을 종료 하는 경우 <xref:System.Net.Sockets.NetworkStream.Read%2A> 0 바이트를 즉시 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-449">If the remote host has shutdown its connection, <xref:System.Net.Sockets.NetworkStream.Read%2A> will immediately return with zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-450">닫아야는 <xref:System.Net.Sockets.NetworkStream> 후에 데이터 보내기 및 받기.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-450">You must close the <xref:System.Net.Sockets.NetworkStream> when you are through sending and receiving data.</span></span> <span data-ttu-id="5b7d1-451">닫는 <xref:System.Net.Sockets.TcpClient> 해제 하지 않습니다는 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-451">Closing <xref:System.Net.Sockets.TcpClient> does not release the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-452">표시 되 면는 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 얻어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-452">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5b7d1-453">이 코드를 가져온 후에 Windows 소켓 버전 2 API 오류 코드 MSDN 설명서에서 오류에 대 한 자세한 설명은 참조할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-453">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5b7d1-454">응용 프로그램에 네트워크 추적을 사용하도록 설정하면 이 멤버에서 추적 정보를 출력합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-454">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="5b7d1-455">자세한 내용은 참조 [.NET Framework의 네트워크 추적](~/docs/framework/network-programming/network-tracing.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-455">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-456">다음 코드 예제에서는 <xref:System.Net.Sockets.TcpClient.GetStream%2A> 내부 얻으려고 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-456">The following code example uses <xref:System.Net.Sockets.TcpClient.GetStream%2A> to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="5b7d1-457">가져온 후는 <xref:System.Net.Sockets.NetworkStream>를 보내고 받는 사용 하 여 해당 <xref:System.Net.Sockets.NetworkStream.Write%2A> 및 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-457">After obtaining the <xref:System.Net.Sockets.NetworkStream>, it sends and receives using its <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#14)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#14)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5b7d1-458"><see cref="T:System.Net.Sockets.TcpClient" />가 원격 호스트에 연결되어 있지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-458">The <see cref="T:System.Net.Sockets.TcpClient" /> is not connected to a remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5b7d1-459"><see cref="T:System.Net.Sockets.TcpClient" />이 닫혔습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-459">The <see cref="T:System.Net.Sockets.TcpClient" /> has been closed.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LingerState">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.LingerOption LingerState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.LingerOption LingerState" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.LingerState" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerState As LingerOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::LingerOption ^ LingerState { System::Net::Sockets::LingerOption ^ get(); void set(System::Net::Sockets::LingerOption ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.LingerOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b7d1-460">연결된 소켓의 링거 상태에 대한 정보를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-460">Gets or sets information about the linger state of the associated socket.</span></span></summary>
        <value><span data-ttu-id="5b7d1-461"><see cref="T:System.Net.Sockets.LingerOption" /></span><span class="sxs-lookup"><span data-stu-id="5b7d1-461">A <see cref="T:System.Net.Sockets.LingerOption" />.</span></span> <span data-ttu-id="5b7d1-462">기본적으로 링거는 비활성화됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-462">By default, lingering is disabled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-463"><xref:System.Net.Sockets.TcpClient.LingerState%2A> 속성은 방법을 변경 <xref:System.Net.Sockets.Socket.Close%2A> 메서드는 동작입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-463">The <xref:System.Net.Sockets.TcpClient.LingerState%2A> property changes the way <xref:System.Net.Sockets.Socket.Close%2A> method behaves.</span></span> <span data-ttu-id="5b7d1-464">집합에는 연결이 다시 설정할 수 있습니다 Winsock에서 조건을 수정할 때이 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-464">This property when set modifies the conditions under which the connection can be reset by Winsock.</span></span> <span data-ttu-id="5b7d1-465">연결 다시 설정은 여전히 IP 프로토콜 동작에 따라 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-465">Connection resets can still occur based on the IP protocol behavior.</span></span>  
  
 <span data-ttu-id="5b7d1-466">이 속성에 대 한 호출 후 TCP 연결이 열린 채로 시간의 길이 제어 <xref:System.Net.Sockets.TcpClient.Close%2A> 데이터 보낼 남아 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-466">This property controls the length of time that the TCP connection will remain open after a call to <xref:System.Net.Sockets.TcpClient.Close%2A> when data remains to be sent.</span></span> <span data-ttu-id="5b7d1-467">호출 하는 경우는 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드, 데이터 나가는 네트워크 버퍼에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-467">When you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, data is placed in the outgoing network buffer.</span></span> <span data-ttu-id="5b7d1-468">하기 전에 원격 호스트에이 데이터는 전송 되도록 하려면이 속성을 사용할 수는 <xref:System.Net.Sockets.TcpClient.Close%2A> 메서드가 연결을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-468">This property can be used to ensure that this data is sent to the remote host before the <xref:System.Net.Sockets.TcpClient.Close%2A> method drops the connection.</span></span>  
  
 <span data-ttu-id="5b7d1-469">활성화 하려면 만들기를 <xref:System.Net.Sockets.LingerOption> 설정 하 고 원하는 값이 포함 된 인스턴스는 <xref:System.Net.Sockets.TcpClient.LingerState%2A> 이 인스턴스에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-469">To enable lingering, create a <xref:System.Net.Sockets.LingerOption> instance containing the desired values, and set the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property to this instance.</span></span>  
  
 <span data-ttu-id="5b7d1-470">동작을 설명 하는 다음 표에서 <xref:System.Net.Sockets.TcpClient.Close%2A> 의 가능한 값에 대 한 메서드는 <xref:System.Net.Sockets.LingerOption.Enabled%2A> 속성 및 <xref:System.Net.Sockets.LingerOption.LingerTime%2A> 속성에 저장 된는 <xref:System.Net.Sockets.TcpClient.LingerState%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-470">The following table describes the behavior of the <xref:System.Net.Sockets.TcpClient.Close%2A> method for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property.</span></span>  
  
|<span data-ttu-id="5b7d1-471">LingerState.Enabled</span><span class="sxs-lookup"><span data-stu-id="5b7d1-471">LingerState.Enabled</span></span>|<span data-ttu-id="5b7d1-472">LingerState.LingerTime</span><span class="sxs-lookup"><span data-stu-id="5b7d1-472">LingerState.LingerTime</span></span>|<span data-ttu-id="5b7d1-473">동작</span><span class="sxs-lookup"><span data-stu-id="5b7d1-473">Behavior</span></span>|  
|-------------------------|----------------------------|--------------|  
|<span data-ttu-id="5b7d1-474">`false` (사용 안 함), 기본값</span><span class="sxs-lookup"><span data-stu-id="5b7d1-474">`false` (disabled), the default value</span></span>|<span data-ttu-id="5b7d1-475">제한 시간이 적용 되지 않습니다 (기본값).</span><span class="sxs-lookup"><span data-stu-id="5b7d1-475">The time-out is not applicable, (default).</span></span>|<span data-ttu-id="5b7d1-476">기본 IP 프로토콜 시간 제한이 만료 될 때까지 보류 중인 데이터를 보내려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-476">Attempts to send pending data until the default IP protocol time-out expires.</span></span>|  
|<span data-ttu-id="5b7d1-477">`true` (사용)</span><span class="sxs-lookup"><span data-stu-id="5b7d1-477">`true` (enabled)</span></span>|<span data-ttu-id="5b7d1-478">0이 아닌 시간 제한</span><span class="sxs-lookup"><span data-stu-id="5b7d1-478">A nonzero time-out</span></span>|<span data-ttu-id="5b7d1-479">지정된 된 제한 시간이 만료 되 고 시도가 실패 하면 다음 Winsock 다시 설정 연결 될 때까지 보류 중인 데이터를 보내려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-479">Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</span></span>|  
|<span data-ttu-id="5b7d1-480">`true` (사용)</span><span class="sxs-lookup"><span data-stu-id="5b7d1-480">`true` (enabled)</span></span>|<span data-ttu-id="5b7d1-481">0 시간 제한입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-481">A zero timeout.</span></span>|<span data-ttu-id="5b7d1-482">모든 데이터와 Winsock 다시 설정 합니다. 보류 중인 연결을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-482">Discards any pending data and Winsock resets the connection.</span></span>|  
  
 <span data-ttu-id="5b7d1-483">IP 스택에서 연결의 왕복 시간을 기반으로 사용 하려면 기본 IP 프로토콜 제한 시간을 계산 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-483">The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</span></span> <span data-ttu-id="5b7d1-484">대부분의 경우에는 스택에서 계산 된 시간 제한은 응용 프로그램에 의해 정의 된 보다 상대적입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-484">In most cases, the time-out computed by the stack is more relevant than one defined by an application.</span></span> <span data-ttu-id="5b7d1-485">이 소켓에 대 한 기본 동작 때는 <xref:System.Net.Sockets.TcpClient.LingerState%2A> 속성이 설정 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-485">This is the default behavior for a socket when the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is not set.</span></span>  
  
 <span data-ttu-id="5b7d1-486">경우는 <xref:System.Net.Sockets.LingerOption.LingerTime%2A> 속성에 저장 된 <xref:System.Net.Sockets.TcpClient.LingerState%2A> 속성이 기본 IP 프로토콜 제한 시간 보다 큰 설정 되어 있으면 기본 IP 프로토콜 시간 제한이 적용 되 고 재정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-486">When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-487">다음 코드 예제에서는 set 및 소켓 링커 get 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-487">The following code example sets and gets the sockets linger time.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#12)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#12)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.LingerOption" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NoDelay">
      <MemberSignature Language="C#" Value="public bool NoDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoDelay" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.NoDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property NoDelay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoDelay { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b7d1-488">송신 또는 수신 버퍼가 꽉 차지 않았을 때 지연을 비활성화하는 값을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-488">Gets or sets a value that disables a delay when send or receive buffers are not full.</span></span></summary>
        <value>
          <span data-ttu-id="5b7d1-489">지연이 비활성화되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-489"><see langword="true" /> if the delay is disabled, otherwise <see langword="false" />.</span></span> <span data-ttu-id="5b7d1-490">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-490">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-491">때 <xref:System.Net.Sockets.TcpClient.NoDelay%2A> 은 `false`, <xref:System.Net.Sockets.TcpClient> 상당한 양의 보내는 데이터를 수집할 때까지 네트워크를 통해 패킷을 전송 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-491">When <xref:System.Net.Sockets.TcpClient.NoDelay%2A> is `false`, a <xref:System.Net.Sockets.TcpClient> does not send a packet over the network until it has collected a significant amount of outgoing data.</span></span> <span data-ttu-id="5b7d1-492">TCP 세그먼트의 오버 헤드의 양이, 적은 양의 데이터를 보내는 비효율적입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-492">Because of the amount of overhead in a TCP segment, sending small amounts of data is inefficient.</span></span> <span data-ttu-id="5b7d1-493">그러나 상황을 매우 적은 양의 데이터를 보내거나 보내는 각 패킷의 즉시 응답을 예상 해야도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-493">However, situations do exist where you need to send very small amounts of data or expect immediate responses from each packet you send.</span></span> <span data-ttu-id="5b7d1-494">결정 하는 데에 응용 프로그램 요구 사항 및 네트워크 효율성이의 상대적 중요도 저울질 해봐야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-494">Your decision should weigh the relative importance of network efficiency versus application requirements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-495">다음 코드 예제에서는 지연을 사용 하지 않도록 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-495">The following code example disables the delay.</span></span> <span data-ttu-id="5b7d1-496">다음 값을 확인 <xref:System.Net.Sockets.TcpClient.NoDelay%2A> 속성이 성공적으로 설정 되어 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-496">It then checks the value of <xref:System.Net.Sockets.TcpClient.NoDelay%2A> to verify that the property was successfully set.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b7d1-497">수신 버퍼의 크기를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-497">Gets or sets the size of the receive buffer.</span></span></summary>
        <value><span data-ttu-id="5b7d1-498">수신 버퍼의 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-498">The size of the receive buffer, in bytes.</span></span> <span data-ttu-id="5b7d1-499">기본값은 8192,536바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-499">The default value is 8192 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-500"><xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> 속성 각 읽기 작업에 대 한 수신 버퍼에 저장 하기를 기대 하는 바이트 수를 가져오거나 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-500">The <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property gets or sets the number of bytes that you are expecting to store in the receive buffer for each read operation.</span></span> <span data-ttu-id="5b7d1-501">이 속성에는 실제로 들어오는 데이터를 받기 위해 할당 된 네트워크 버퍼 공간을 조작 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-501">This property actually manipulates the network buffer space allocated for receiving incoming data.</span></span>  
  
 <span data-ttu-id="5b7d1-502">네트워크 버퍼 호출 하는 경우 원하는 데이터를 사용할 수 있도록 응용 프로그램 버퍼 이상이 있어야 합니다.는 <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-502">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be available when you call the <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="5b7d1-503">사용 하 여는 <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> 속성을이 크기를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-503">Use the <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="5b7d1-504">응용 프로그램은 대량 데이터를 받는 경우 전달 해야는 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드는 규모가 큰 응용 프로그램 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-504">If your application will be receiving bulk data, you should pass the <xref:System.Net.Sockets.NetworkStream.Read%2A> method a very large application buffer.</span></span>  
  
 <span data-ttu-id="5b7d1-505">요청한 네트워크 버퍼 데이터의 양보다 작으면는 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드를 됩니다 적정 한 번의 읽기 작업의 데이터를 검색할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-505">If the network buffer is smaller than the amount of data you request in the <xref:System.Net.Sockets.NetworkStream.Read%2A> method, you will not be able to retrieve the desired amount of data in one read operation.</span></span> <span data-ttu-id="5b7d1-506">이를 추가로 호출 오버 헤드를 유발는 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-506">This incurs the overhead of additional calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-507">다음 코드 예제에서는 설정 하 고 수신 버퍼 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-507">The following code example sets and gets the receive buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="5b7d1-508">버퍼 크기를 설정하는 동안 오류가 발생한 경우</span><span class="sxs-lookup"><span data-stu-id="5b7d1-508">An error occurred when setting the buffer size.</span></span>  
  
 <span data-ttu-id="5b7d1-509">또는</span><span class="sxs-lookup"><span data-stu-id="5b7d1-509">-or-</span></span>  
  
 <span data-ttu-id="5b7d1-510">.NET Compact Framework 응용 프로그램에서 이 속성을 설정할 수 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-510">In .NET Compact Framework applications, you cannot set this property.</span></span> <span data-ttu-id="5b7d1-511">해결 방법은 설명 부분의 플랫폼 참고를 참조하십시오.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-511">For a workaround, see the Platform Note in Remarks.</span></span></exception>
        <altmember cref="P:System.Net.Sockets.TcpClient.SendBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTimeout">
      <MemberSignature Language="C#" Value="public int ReceiveTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b7d1-512">읽기 작업이 시작된 후에 <see cref="T:System.Net.Sockets.TcpClient" />가 데이터를 수신하기 위해 대기하는 기간을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-512">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait to receive data once a read operation is initiated.</span></span></summary>
        <value><span data-ttu-id="5b7d1-513">해당 연결의 제한 시간 값(밀리초)입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-513">The time-out value of the connection in milliseconds.</span></span> <span data-ttu-id="5b7d1-514">기본값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-514">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-515"><xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A> 속성 시간을 결정 하는 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드 데이터를 받을 수 있을 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-515">The <xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A> property determines the amount of time that the <xref:System.Net.Sockets.NetworkStream.Read%2A> method will block until it is able to receive data.</span></span> <span data-ttu-id="5b7d1-516">이 시간은 밀리초 단위로 측정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-516">This time is measured in milliseconds.</span></span> <span data-ttu-id="5b7d1-517">하기 전에 제한 시간이 만료 되는 경우 <xref:System.Net.Sockets.NetworkStream.Read%2A> 성공적으로 완료 되 면 <xref:System.Net.Sockets.TcpClient> throw 한 <xref:System.IO.IOException>합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-517">If the time-out expires before <xref:System.Net.Sockets.NetworkStream.Read%2A> successfully completes, <xref:System.Net.Sockets.TcpClient> throws a <xref:System.IO.IOException>.</span></span> <span data-ttu-id="5b7d1-518">기본적으로는 제한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-518">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-519">다음 코드 예제에서는 설정 하 고 수신 제한 시간을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-519">The following code example sets and gets the receive time out.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.SendTimeout" />
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b7d1-520">송신 버퍼의 크기를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-520">Gets or sets the size of the send buffer.</span></span></summary>
        <value><span data-ttu-id="5b7d1-521">송신 버퍼의 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-521">The size of the send buffer, in bytes.</span></span> <span data-ttu-id="5b7d1-522">기본값은 8192,536바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-522">The default value is 8192 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-523"><xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> 속성을 호출할 때마다 전송 하기를 기대 하는 바이트 수를 가져오거나 설정 합니다.는 <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-523">The <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property gets or sets the number of bytes that you are expecting to send in each call to the <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="5b7d1-524">이 속성에는 실제로 보내기 작업에 할당 된 네트워크 버퍼 공간을 조작 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-524">This property actually manipulates the network buffer space allocated for send operation.</span></span>  
  
 <span data-ttu-id="5b7d1-525">네트워크 버퍼에는 원하는 데이터를 저장 및 한 번에 전송 되도록 응용 프로그램 버퍼 이상이 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-525">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be stored and sent in one operation.</span></span> <span data-ttu-id="5b7d1-526">사용 하 여는 <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> 속성을이 크기를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-526">Use the <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="5b7d1-527">응용 프로그램은 대량 데이터를 전송 하는 경우 전달 해야는 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드는 규모가 큰 응용 프로그램 버퍼입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-527">If your application will be sending bulk data, you should pass the <xref:System.Net.Sockets.NetworkStream.Write%2A> method a very large application buffer.</span></span>  
  
 <span data-ttu-id="5b7d1-528">제공의 네트워크 버퍼 데이터의 양보다 작으면는 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드를 여러 네트워크 송신 하는 모든 호출에 대 한 작업이 수행 됩니다는 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-528">If the network buffer is smaller than the amount of data you provide the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, several network send operations will be performed for every call you make to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="5b7d1-529">네트워크 버퍼를 적어도 응용 프로그램 버퍼 크기를 확인 하 여 데이터 처리량을 높일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-529">You can achieve greater data throughput by ensuring that your network buffer is at least as large as your application buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-530">다음 코드 예제에서는 설정 하 고 보내기 버퍼 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-530">The following code example sets and gets the send buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SendTimeout">
      <MemberSignature Language="C#" Value="public int SendTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SendTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5b7d1-531">보내기 작업을 성공적으로 완료하기 위해 <see cref="T:System.Net.Sockets.TcpClient" />가 대기하는 기간을 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-531">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait for a send operation to complete successfully.</span></span></summary>
        <value><span data-ttu-id="5b7d1-532">송신 제한 시간 값(밀리초)입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-532">The send time-out value, in milliseconds.</span></span> <span data-ttu-id="5b7d1-533">기본값은 0입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-533">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b7d1-534"><xref:System.Net.Sockets.TcpClient.SendTimeout%2A> 속성 시간을 결정 하는 <xref:System.Net.Sockets.Socket.Send%2A> 메서드가 성공적으로 반환 될 수 있을 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-534">The <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> property determines the amount of time that the <xref:System.Net.Sockets.Socket.Send%2A> method will block until it is able to return successfully.</span></span> <span data-ttu-id="5b7d1-535">이 시간은 밀리초 단위로 측정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-535">This time is measured in milliseconds.</span></span>  
  
 <span data-ttu-id="5b7d1-536">호출한 후의 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드를 기본 <xref:System.Net.Sockets.Socket> 호스트에 실제로 보낸 바이트 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-536">After you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, the underlying <xref:System.Net.Sockets.Socket> returns the number of bytes actually sent to the host.</span></span> <span data-ttu-id="5b7d1-537"><xref:System.Net.Sockets.TcpClient.SendTimeout%2A> 속성 시간을 결정 한 <xref:System.Net.Sockets.TcpClient> 에서 반환 된 바이트 수를 받기 전에 기다립니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-537">The <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> property determines the amount of time a <xref:System.Net.Sockets.TcpClient> will wait before receiving the number of bytes returned.</span></span> <span data-ttu-id="5b7d1-538">되기 전에 제한 시간이 만료 되는 <xref:System.Net.Sockets.Socket.Send%2A> 메서드가 성공적으로 완료 되 면 <xref:System.Net.Sockets.TcpClient> throw 됩니다는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-538">If the time-out expires before the <xref:System.Net.Sockets.Socket.Send%2A> method successfully completes, <xref:System.Net.Sockets.TcpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="5b7d1-539">기본적으로는 제한이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-539">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b7d1-540">다음 코드 예제에서는 설정 하 고 가져옵니다는 <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5b7d1-540">The following code example sets and gets the <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> value.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>