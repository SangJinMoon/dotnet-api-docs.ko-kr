<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UdpSingleSourceMulticastClient.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac522d8e0a33fcc708ac83a1356d04077ab35d0449c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22d8e0a33fcc708ac83a1356d04077ab35d0449c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpSingleSourceMulticastClient">
          <source>A client receiver for multicast traffic from a single source, also known as Source Specific Multicast (SSM).</source>
          <target state="translated">단일 소스의 멀티캐스트 트래픽을 받는 클라이언트 수신자로서, SSM(Source Specific Multicast)이라고도 합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpSingleSourceMulticastClient">
          <source>The multicast group address and sender source address must be known.</source>
          <target state="translated">멀티 캐스트 그룹 주소 및 보낸 소스 주소를 알 수 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpSingleSourceMulticastClient">
          <source>In addition to receiving multicast data from a specific sender, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> client can also send unicast data back to the sender.</source>
          <target state="translated">특정 보낸에서 멀티 캐스트 데이터를 받는 것 외에 <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> 클라이언트에서 보낸 사람에 게 유니캐스트 데이터 보낼 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpSingleSourceMulticastClient">
          <source>To receive multicast from multiple sources, or when the sources aren't known in advance, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> class instead.</source>
          <target state="translated">여러 원본에서 멀티 캐스트를 받거나 소스 없는 사전에 확인할 때 사용 된 <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> 클래스를 대신 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>The sender source address for this receiver to subscribe to.</source>
          <target state="translated">구독할 이 수신자에 대한 발신자 원본 주소입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>The multicast group address for this receiver to subscribe to.</source>
          <target state="translated">구독할 이 수신자에 대한 멀티캐스트 그룹 주소입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>The local port for this receiver to bind to.</source>
          <target state="translated">바인딩할 이 수신자에 대한 로컬 포트입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> UDP client that can subscribe to a group address and receive datagrams from a single source.</source>
          <target state="translated">그룹 주소를 구독하고 단일 소스의 데이터그램을 받을 수 있는 새 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> UDP 클라이언트를 만듭니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;</ph> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;</ph> 생성자 그룹 주소와 포트를 UDP 멀티 캐스트 소켓에 연결 하지만 바인딩할 않거나 그렇지 않은 경우 소켓을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">`groupAddress`</ph> parameter may be either an IPv6 or IPv4 multicast address.</source>
          <target state="translated"><ph id="ph1">`groupAddress`</ph> 매개 변수는 IPv4 또는 IPv6 멀티 캐스트 일 수 주소입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>However, the address family of the <ph id="ph1">`sourceAddress`</ph> and <ph id="ph2">`groupAddress`</ph> parameters must the same.</source>
          <target state="translated">그러나의 주소 패밀리는 <ph id="ph1">`sourceAddress`</ph> 및 <ph id="ph2">`groupAddress`</ph> 매개 변수는 동일 해야 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">`localPort`</ph> parameter must not specify a port less than 1,024.</source>
          <target state="translated"><ph id="ph1">`localPort`</ph> 매개 변수 1024 미만의 포트를 지정 해서는 안 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceAddress" /&gt;</ph> and <ph id="ph2">&lt;paramref name="groupAddress" /&gt;</ph> must be the same address family.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceAddress" /&gt;</ph> 및 <ph id="ph2">&lt;paramref name="groupAddress" /&gt;</ph>가 동일한 주소 패밀리여야 하는 경우</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="sourceAddress" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sourceAddress" /&gt;</ph>가 null 참조(Visual Basic의 경우 Nothing)인 경우</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="groupAddress" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="groupAddress" /&gt;</ph>가 null 참조(Visual Basic의 경우 Nothing)인 경우</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="localPort" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localPort" /&gt;</ph>이 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="localPort" /&gt;</ph> is greater than 65,535.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localPort" /&gt;</ph>가 65,535보다 큽니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="localPort" /&gt;</ph> is less than 1024</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localPort" /&gt;</ph>가 1024보다 작습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>A callback method to invoke when the operation completes.</source>
          <target state="translated">작업이 완료될 때 호출할 콜백 메서드입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>Optional state information to pass to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> method for this operation.</source>
          <target state="translated">이 작업을 위한 <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> 메서드에 전달할 선택적 상태 정보입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from a single source address.</source>
          <target state="translated">소켓을 바인딩하고 단일 원본 주소에서 데이터그램을 받을 수 있도록 멀티캐스트 그룹에 대한 조인 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references this operation.</source>
          <target state="translated">이 작업을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A&gt;</ph> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from a single source address.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A&gt;</ph> 메서드 UDP 멀티 캐스트 소켓 로컬 포트에 바인딩하고 단일 원본 주소에서 수신 되도록 데이터 그램 수 있도록 멀티 캐스트 그룹에 조인 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>The multicast group address, single source address, and local port to bind to are specified in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">에 지정 된 멀티 캐스트 그룹 주소, 단일 원본 주소 및 로컬 포트에 바인딩하는 <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>The method specified in the <ph id="ph1">`callback`</ph> parameter is invoked when the operation to join the multicast group has completed.</source>
          <target state="translated">에 지정 된 메서드는 <ph id="ph1">`callback`</ph> 멀티 캐스트 그룹에 가입 작업이 완료 되 면 매개 변수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>If required by the runtime, the  <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A&gt;</ph> method also performs a policy check to verify that the client is allowed to access the multicast group.</source>
          <target state="translated">런타임에서 필요한 경우는 <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A&gt;</ph> 메서드 클라이언트가 멀티 캐스트 그룹에 액세스할 수 있는지 확인 하려면 정책 검사를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>If the client is not allowed access, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown with <ph id="ph2">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.</source>
          <target state="translated">클라이언트 액세스를 허용 되지 않는 경우는 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> 함께 발생 <ph id="ph2">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>The multicast group has already been joined or a join operation is currently in progress.</source>
          <target state="translated">멀티캐스트 그룹이 이미 조인되었거나 조인 작업이 현재 진행 중인 경우</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph>가 삭제된 경우</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">소켓에 액세스하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The buffer to store the received data.</source>
          <target state="translated">받은 데이터를 저장할 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The offset, in bytes, from the beginning of the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> where the data should be stored.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>버퍼<ept id="p1">&lt;/c&gt;</ept> 시작부터 데이터를 저장해야 하는 오프셋(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to receive and store in the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>버퍼<ept id="p1">&lt;/c&gt;</ept>에서 받고 저장할 최대 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The callback method to invoke when the operation completes.</source>
          <target state="translated">작업이 완료될 때 호출할 콜백 메서드입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Optional state information to pass to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> method for this operation.</source>
          <target state="translated">이 작업을 위한 <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> 메서드에 전달할 선택적 상태 정보입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from a specified sender.</source>
          <target state="translated">조인된 멀티캐스트 그룹에서 패킷을 받는 작업을 시작하고 지정된 보낸 사람의 패킷이 그룹에 도착할 때 지정된 콜백을 호출합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references this operation.</source>
          <target state="translated">이 작업을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph> method begins an operation of receiving a UDP packet from the joined multicast group from a single sender.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph> 메서드 단일 발신자에서 조인된 된 멀티 캐스트 그룹에서 UDP 패킷을 수신한 다음의 작업을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The local port, multicast group, and sender source address are specified in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">에 지정 된 로컬 포트, 멀티 캐스트 그룹 및 발신자 원본 주소에서 <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The multicast client must also have completed a join to the multicast group.</source>
          <target state="translated">멀티 캐스트 클라이언트를 멀티 캐스트 그룹에 조인도 완료 해야 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The method specified in the <ph id="ph1">`callback`</ph> parameter is invoked when a packet has received.</source>
          <target state="translated">에 지정 된 메서드는 <ph id="ph1">`callback`</ph> 패킷을 받으면 매개 변수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP.</source>
          <target state="translated">Udp 일반적이 지는 않지만 수신 작업이 동기적으로, 실패 하면 소켓 오류가 있을 수는.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If a socket failure occurs, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">소켓 오류가 발생 하는 경우는 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">오류가 발생 했는가의 구성원으로 지정 된 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>가 null 참조(Visual Basic의 경우 Nothing)인 경우</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph>이 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is greater than the length of the <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>의 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus the count is greater than the length of the <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> + 개수가 <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>의 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">멀티캐스트 그룹이 아직 조인되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph>가 삭제된 경우</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket for receiving.</source>
          <target state="translated">받기 위해 소켓에 액세스하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The buffer that contains the data to send.</source>
          <target state="translated">보낼 데이터가 들어 있는 버퍼입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The offset, in bytes, from the beginning of the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> to read the data to be sent.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>버퍼<ept id="p1">&lt;/c&gt;</ept> 시작부터 보낼 데이터를 읽을 오프셋(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The number of bytes to send from the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>버퍼<ept id="p1">&lt;/c&gt;</ept>에서 보낼 바이트 수입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The remote port to which the packet is to be sent.</source>
          <target state="translated">패킷을 보내야 하는 원격 포트입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The remote address is specified by the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" /&gt;</ph> constructor.</source>
          <target state="translated">원격 주소는 <ph id="ph1">&lt;see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" /&gt;</ph> 생성자에서 지정합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The callback method to invoke when the operation completes.</source>
          <target state="translated">작업이 완료될 때 호출할 콜백 메서드입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Optional state information to pass to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> method for this operation.</source>
          <target state="translated">이 작업을 위한 <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> 메서드에 전달할 선택적 상태 정보입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins the operation of sending a unicast packet to the source previously specified.</source>
          <target state="translated">이전에 지정된 소스에 유니캐스트 패킷을 보내는 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references this operation.</source>
          <target state="translated">이 작업을 참조하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A&gt;</ph> method begins an operation of sending a UDP packet to the source previously specified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A&gt;</ph> 메서드 이전에 지정 된 원본 UDP 패킷을 보내는 작업을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Some protocols use this information to pass along flow control, quality of service statistics, or recovery messages.</source>
          <target state="translated">일부 프로토콜 흐름 제어, 서비스 통계 또는 복구 메시지의 품질을 전달 하려면이 정보를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The method specified in the <ph id="ph1">`callback`</ph> parameter is invoked when a packet has been sent.</source>
          <target state="translated">에 지정 된 메서드는 <ph id="ph1">`callback`</ph> 보내면 패킷을 매개 변수를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The client must have completed a join to the multicast group.</source>
          <target state="translated">클라이언트를 멀티 캐스트 그룹에 조인을 완료 해야 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If the destination port specified in the <ph id="ph1">`remotePort`</ph> parameter is less than 1,024, a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown with <ph id="ph3">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.</source>
          <target state="translated">대상 포트에 지정 된 경우는 <ph id="ph1">`remotePort`</ph> 매개 변수는 보다 작은 1024는 <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> 함께 발생 <ph id="ph3">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>It is possible to have a socket failure if a send operation fails synchronously, although this is uncommon with UDP.</source>
          <target state="translated">Udp 일반적이 지는 않지만 송신 작업이 동기적으로, 실패 하면 소켓 오류가 있을 수는.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If a socket failure occurs, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">소켓 오류가 발생 하는 경우는 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">오류가 발생 했는가의 구성원으로 지정 된 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>가 null 참조(Visual Basic의 경우 Nothing)인 경우</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph>이 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is greater than the length of the <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph>가 <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>의 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph>가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus the count is greater than the length of the <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> + 개수가 <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>의 길이보다 큽니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="remotePort" /&gt;</ph> is less than 0 or greater than 65,535.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="remotePort" /&gt;</ph>가 0보다 작거나 65,535보다 큽니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">멀티캐스트 그룹이 아직 조인되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph>가 삭제된 경우</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">소켓에 액세스하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
          <source>Leaves the multicast group and releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> class and the underlying the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">멀티캐스트 그룹을 탈퇴하고 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> 클래스의 현재 인스턴스 및 기본 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>에서 사용하는 모든 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph> 사용을 마치면 <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>를 사용할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> was occupying.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph>에 대 한 모든 참조를 해제 해야는 <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <ph id="ph3">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> 차지한 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph>에 대한 마지막 참조를 해제하기 전에 반드시 <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>를 호출하십시오.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> object's <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">이렇게 하지 않으면 가비지 수집기가 <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> 개체의 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>The result of the asynchronous join operation.</source>
          <target state="translated">비동기 조인 작업의 결과입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>Completes the asynchronous join group operation to a multicast group.</source>
          <target state="translated">멀티캐스트 그룹에 대한 비동기 조인 그룹 작업을 완료합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A&gt;</ph> method completes an asynchronous bind to a socket and join operation to a multicast group.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A&gt;</ph> 메서드는 비동기 바인딩할 멀티 캐스트 그룹에 대 한 소켓 및 조인 작업을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>If required by the runtime, the  <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A&gt;</ph> method also performs a policy check to verify that the client is allowed to access the multicast group.</source>
          <target state="translated">런타임에서 필요한 경우는 <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A&gt;</ph> 메서드 클라이언트가 멀티 캐스트 그룹에 액세스할 수 있는지 확인 하려면 정책 검사를 수행 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>If the client is not allowed access, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown with <ph id="ph2">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.</source>
          <target state="translated">클라이언트 액세스를 허용 되지 않는 경우는 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> 함께 발생 <ph id="ph2">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>If there is a socket failure while performing the join group operation, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">조인 그룹 작업을 수행 하는 동안 소켓 오류가 발생할 경우 한 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">오류가 발생 했는가의 구성원으로 지정 된 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="result" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="result" /&gt;</ph>가 null 참조(Visual Basic의 경우 Nothing)인 경우</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph>가 삭제된 경우</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">소켓에 액세스하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>The result of the asynchronous receive operation.</source>
          <target state="translated">비동기 받기 작업의 결과입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>The source endpoint where the packet was received from.</source>
          <target state="translated">패킷을 받은 소스 끝점입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.</source>
          <target state="translated">조인된 멀티캐스트 그룹에서 패킷을 받는 비동기 작업을 완료하고 받은 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>The length, in bytes, of the message stored in the <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> parameter passed to the <ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> 메서드에 전달된 <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 매개 변수에 저장된 메시지의 길이(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A&gt;</ph> method completes an asynchronous operation to receive a packet from a single source in a multicast group.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A&gt;</ph> 메서드를 멀티 캐스트 그룹에서 단일 소스에서 패킷을 받는 비동기 작업을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>If there is a socket failure while performing the receive operation, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">수신 작업을 수행 하는 동안 소켓 오류가 발생할 경우 한 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">오류가 발생 했는가의 구성원으로 지정 된 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source><ph id="ph1">&lt;paramref name="result" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="result" /&gt;</ph>가 null 참조(Visual Basic의 경우 Nothing)인 경우</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">멀티캐스트 그룹이 아직 조인되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph>가 삭제된 경우</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">소켓에 액세스하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>The result of the asynchronous send operation.</source>
          <target state="translated">비동기 보내기 작업의 결과입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>Completes the operation of sending a unicast packet to a single source.</source>
          <target state="translated">단일 소스에 유니캐스트 패킷을 보내는 작업을 완료합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A&gt;</ph> method completes an asynchronous operation to send a packet to single source previously specified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A&gt;</ph> 메서드 이전에 지정 된 단일 소스로 패킷을 보내야 하는 비동기 작업을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>If there is a socket failure while performing the receive operation, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">수신 작업을 수행 하는 동안 소켓 오류가 발생할 경우 한 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> throw 됩니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">오류가 발생 했는가의 구성원으로 지정 된 <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="result" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="result" /&gt;</ph>가 null 참조(Visual Basic의 경우 Nothing)인 경우</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">멀티캐스트 그룹이 아직 조인되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph>가 삭제된 경우</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">소켓에 액세스하는 동안 오류가 발생했습니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>Gets or sets the size, in bytes, of the receive buffer of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> used for multicast receive operations on this <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> instance.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> 인스턴스에 대한 멀티캐스트 수신 작업에 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>의 수신 버퍼 크기(바이트)를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>The size, in bytes, of the receive buffer.</source>
          <target state="translated">수신 버퍼의 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>The <ph id="ph1">`ReceiveBufferSize`</ph> property gets or sets the size, in bytes, of the receive buffer of the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> used for multicast receive operations on this <ph id="ph3">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">`ReceiveBufferSize`</ph> 속성은 기본 수신 버퍼를 바이트 단위로 크기를 설정 하거나 가져옵니다 <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> 이 멀티 캐스트 수신 작업에 사용 되는 <ph id="ph3">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>Specifically, the <ph id="ph1">`ReceiveBufferSize`</ph> property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph> method.</source>
          <target state="translated">특히,는 <ph id="ph1">`ReceiveBufferSize`</ph> 패킷이 도착 하면 응용 프로그램이 아직 호출 하지 않은 경우 스택에서 사용 되는 버퍼의 크기를 제어 하는 속성은 <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>If this buffer gets filled up and packets keep coming before the application calls the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A&gt;</ph> methods, old packets will get dropped.</source>
          <target state="translated">이 버퍼 채워지면 고 패킷을 계속 나타나는 경우 응용 프로그램 호출 하기 전에 <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A&gt;</ph> 메서드, 이전 패킷을 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph> method.</source>
          <target state="translated">응용 프로그램 이전 패킷을 받을 수 없습니다 및 최신 패킷을 호출할 때 대신 표시 됩니다는 <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>The default size of the receive buffer on Windows is 8,192.</source>
          <target state="translated">Windows의 수신 버퍼의 기본 크기는 8, 192입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>The buffer size specified is less than 0.</source>
          <target state="translated">지정된 버퍼 크기가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">멀티캐스트 그룹이 아직 조인되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph>가 삭제된 경우</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>Gets or sets the size, in bytes, of the send buffer of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> used for multicast send operations on this <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> instance.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> 인스턴스에서 멀티캐스트 전송 작업에 사용되는 <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>의 보내기 버퍼 크기(바이트)를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>The size, in bytes, of the send buffer.</source>
          <target state="translated">전송 버퍼의 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>The SendBufferSize property gets or sets the size, in bytes, of the send buffer of the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> used for multicast send operations on this <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> instance.</source>
          <target state="translated">SendBufferSize 속성은 기본 송신 버퍼를 바이트 단위로 크기를 설정 하거나 가져옵니다 <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> 이 멀티 캐스트 전송 작업에 사용 되는 <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>On Mac OS X, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A&gt;</ph> property controls how many bytes can be in the network stack's waiting-to-be-sent buffer before additional calls to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A&gt;</ph> method start failing.</source>
          <target state="translated">Mac OS X에는 <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A&gt;</ph> 속성에 대 한 추가 호출 하기 전에 네트워크 스택에서 전송 대기 중인 버퍼의 바이트 수 될 수 제어는 <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A&gt;</ph> 메서드 실패 하기 시작 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>Applications on Mac OS X may need to be concerned with this property if they are sending a large number of UDP packets in a short timeframe.</source>
          <target state="translated">Mac OS X에서 응용 프로그램 짧은 시간 내에 많은 수의 UDP 패킷 보내는 경우이 속성을 고려해 야 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>On Windows, calls to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A&gt;</ph> method will take longer to call the callback depending on the value of the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A&gt;</ph> property if the send buffer is full.</source>
          <target state="translated">Windows에서 호출 하는 <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A&gt;</ph> 메서드 호출의 값에 따라 콜백 하는 데 걸리는 <ph id="ph2">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A&gt;</ph> 송신 버퍼가 가득 찬 경우 속성을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A&gt;</ph> property only controls whether the user's buffer stays locked in physical memory until the send completes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A&gt;</ph> 속성 컨트롤만 보내기 완료 될 때까지 실제 메모리에 잠겨 있는지 여부는 사용자의 버퍼 상태를 유지 합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>The default size of the send buffer on Windows is 8,192.</source>
          <target state="translated">Windows에서 송신 버퍼의 기본 크기는 8, 192입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>The buffer size specified is less than 0.</source>
          <target state="translated">지정된 버퍼 크기가 0보다 작습니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">멀티캐스트 그룹이 아직 조인되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /&gt;</ph>가 삭제된 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>