<Type Name="UdpSingleSourceMulticastClient" FullName="System.Net.Sockets.UdpSingleSourceMulticastClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3323028bdc232ba978870f33c6458f41dd0c5153" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37643674" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpSingleSourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpSingleSourceMulticastClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpSingleSourceMulticastClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="37925-101">A client receiver for multicast traffic from a single source, also known as Source Specific Multicast (SSM).</span>
      <span class="sxs-lookup">
        <span data-stu-id="37925-101">A client receiver for multicast traffic from a single source, also known as Source Specific Multicast (SSM).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37925-102">멀티 캐스트 그룹 주소 및 발신자 원본 주소를 알고 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-102">The multicast group address and sender source address must be known.</span></span>  
  
 <span data-ttu-id="37925-103">특정 한 보낸에서 멀티 캐스트 데이터를 받는 것 외에 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> 클라이언트 보낸 사람에 게 유니캐스트 데이터를 보낼 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="37925-103">In addition to receiving multicast data from a specific sender, the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> client can also send unicast data back to the sender.</span></span>  
  
 <span data-ttu-id="37925-104">여러 소스의 멀티 캐스트를 받거나 원본 사전에 알려지지 않은 경우 사용 된 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> 클래스를 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-104">To receive multicast from multiple sources, or when the sources aren't known in advance, use the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> class instead.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpSingleSourceMulticastClient (System.Net.IPAddress sourceAddress, System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress sourceAddress, class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceAddress As IPAddress, groupAddress As IPAddress, localPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpSingleSourceMulticastClient(System::Net::IPAddress ^ sourceAddress, System::Net::IPAddress ^ groupAddress, int localPort);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpSingleSourceMulticastClient : System.Net.IPAddress * System.Net.IPAddress * int -&gt; System.Net.Sockets.UdpSingleSourceMulticastClient" Usage="new System.Net.Sockets.UdpSingleSourceMulticastClient (sourceAddress, groupAddress, localPort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">
          <span data-ttu-id="37925-105">The sender source address for this receiver to subscribe to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-105">The sender source address for this receiver to subscribe to.</span>
          </span>
        </param>
        <param name="groupAddress">
          <span data-ttu-id="37925-106">The multicast group address for this receiver to subscribe to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-106">The multicast group address for this receiver to subscribe to.</span>
          </span>
        </param>
        <param name="localPort">
          <span data-ttu-id="37925-107">The local port for this receiver to bind to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-107">The local port for this receiver to bind to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37925-108">Creates a new <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> UDP client that can subscribe to a group address and receive datagrams from a single source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-108">Creates a new <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> UDP client that can subscribe to a group address and receive datagrams from a single source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37925-109"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> 생성자 그룹 주소 및 포트를 사용 하 여 멀티 캐스트 UDP 소켓 연결 하지만 하지 바인딩 않거나 그렇지 않은 경우 소켓을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-109">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket.</span></span>  
  
 <span data-ttu-id="37925-110">`groupAddress` 매개 변수는 IPv6 또는 IPv4 멀티 캐스트 수 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="37925-110">The `groupAddress` parameter may be either an IPv6 or IPv4 multicast address.</span></span> <span data-ttu-id="37925-111">그러나의 주소 패밀리는 `sourceAddress` 고 `groupAddress` 매개 변수는 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-111">However, the address family of the `sourceAddress` and `groupAddress` parameters must the same.</span></span>  
  
 <span data-ttu-id="37925-112">`localPort` 1024 보다 작은 포트 매개 변수 지정 해서는 안 됩니다.</span><span class="sxs-lookup"><span data-stu-id="37925-112">The `localPort` parameter must not specify a port less than 1,024.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="37925-113">
            <paramref name="sourceAddress" /> and <paramref name="groupAddress" /> must be the same address family.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-113">
              <paramref name="sourceAddress" /> and <paramref name="groupAddress" /> must be the same address family.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="37925-114">
            <paramref name="sourceAddress" /> is a null reference (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-114">
              <paramref name="sourceAddress" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
          <span data-ttu-id="37925-115">-or-  <paramref name="groupAddress" /> is a null reference (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-115">-or-  <paramref name="groupAddress" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="37925-116">
            <paramref name="localPort" /> is less than 0  -or-  <paramref name="localPort" /> is greater than 65,535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-116">
              <paramref name="localPort" /> is less than 0  -or-  <paramref name="localPort" /> is greater than 65,535.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="37925-117">
            <paramref name="localPort" /> is less than 1024</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-117">
              <paramref name="localPort" /> is less than 1024</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginJoinGroup (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginJoinGroup(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginJoinGroup : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginJoinGroup (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="37925-118">A callback method to invoke when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-118">A callback method to invoke when the operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="37925-119">Optional state information to pass to the <c>callback</c> method for this operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-119">Optional state information to pass to the <c>callback</c> method for this operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37925-120">Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from a single source address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-120">Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from a single source address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37925-121">Returns <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-121">Returns <see cref="T:System.IAsyncResult" />.</span>
          </span>
          <span data-ttu-id="37925-122">An <see cref="T:System.IAsyncResult" /> that references this operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-122">An <see cref="T:System.IAsyncResult" /> that references this operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37925-123"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> 메서드 로컬 포트에 UDP 멀티 캐스트 소켓에 바인딩하고 데이터 그램을 단일 원본 주소에서 받을 수 있도록 멀티 캐스트 그룹에 조인 합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-123">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from a single source address.</span></span> <span data-ttu-id="37925-124">멀티 캐스트 그룹 주소, 단일 원본 주소 및 바인딩할 로컬 포트에 지정 된 된 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="37925-124">The multicast group address, single source address, and local port to bind to are specified in the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="37925-125">에 지정 된 메서드는 `callback` 멀티 캐스트 그룹에 가입 작업이 완료 되 면 매개 변수를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-125">The method specified in the `callback` parameter is invoked when the operation to join the multicast group has completed.</span></span>  
  
 <span data-ttu-id="37925-126">런타임에서 필요한 경우는 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> 메서드는 또한 클라이언트에서 멀티 캐스트 그룹 하 게 액세스할 수 있는지 확인 하려면 정책 검사를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-126">If required by the runtime, the  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group.</span></span> <span data-ttu-id="37925-127">클라이언트 액세스를 허용 되지 않는 경우는 <xref:System.Net.Sockets.SocketException> 이 throw <xref:System.Net.Sockets.SocketError.AccessDenied>합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-127">If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="37925-128">The multicast group has already been joined or a join operation is currently in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-128">The multicast group has already been joined or a join operation is currently in progress.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="37925-129">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-129">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="37925-130">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-130">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromSource (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromSource(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFromSource (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFromSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceiveFromSource : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginReceiveFromSource (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="37925-131">The buffer to store the received data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-131">The buffer to store the received data.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="37925-132">The offset, in bytes, from the beginning of the <c>buffer</c> where the data should be stored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-132">The offset, in bytes, from the beginning of the <c>buffer</c> where the data should be stored.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="37925-133">The maximum number of bytes to receive and store in the <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-133">The maximum number of bytes to receive and store in the <c>buffer</c>.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="37925-134">The callback method to invoke when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-134">The callback method to invoke when the operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="37925-135">Optional state information to pass to the <c>callback</c> method for this operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-135">Optional state information to pass to the <c>callback</c> method for this operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37925-136">Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from a specified sender.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-136">Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from a specified sender.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37925-137">Returns <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-137">Returns <see cref="T:System.IAsyncResult" />.</span>
          </span>
          <span data-ttu-id="37925-138">An <see cref="T:System.IAsyncResult" /> that references this operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-138">An <see cref="T:System.IAsyncResult" /> that references this operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37925-139"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> 메서드 단일 발신자에서 조인된 된 멀티 캐스트 그룹에서 UDP 패킷을 받는 작업을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-139">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method begins an operation of receiving a UDP packet from the joined multicast group from a single sender.</span></span> <span data-ttu-id="37925-140">로컬 포트, 멀티 캐스트 그룹 및 발신자 원본 주소에 지정 된 된 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="37925-140">The local port, multicast group, and sender source address are specified in the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor.</span></span> <span data-ttu-id="37925-141">멀티 캐스트 클라이언트도 완료 해야 멀티 캐스트 그룹에 조인 합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-141">The multicast client must also have completed a join to the multicast group.</span></span>  
  
 <span data-ttu-id="37925-142">에 지정 된 메서드는 `callback` 패킷을 받으면 매개 변수를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-142">The method specified in the `callback` parameter is invoked when a packet has received.</span></span>  
  
 <span data-ttu-id="37925-143">UDP를 사용 하 여 일반적인 아니지만 수신 작업이 동기적으로 실패 하면 소켓 오류가 있을 수는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="37925-143">It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP.</span></span> <span data-ttu-id="37925-144">소켓 오류가 발생 하는 경우는 <xref:System.Net.Sockets.SocketException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="37925-144">If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="37925-145">구성원으로 지정 된 오류가 <xref:System.Net.Sockets.SocketError> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="37925-145">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="37925-146">
            <paramref name="buffer" /> is a null reference (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-146">
              <paramref name="buffer" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="37925-147">
            <paramref name="offset" /> is less than 0  -or-  <paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-147">
              <paramref name="offset" /> is less than 0  -or-  <paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="37925-148">-or-  <paramref name="count" /> is less than 0  -or-  <paramref name="offset" /> plus the count is greater than the length of the <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-148">-or-  <paramref name="count" /> is less than 0  -or-  <paramref name="offset" /> plus the count is greater than the length of the <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="37925-149">The multicast group has not yet been joined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-149">The multicast group has not yet been joined.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="37925-150">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-150">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="37925-151">An error occurred when attempting to access the socket for receiving.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-151">An error occurred when attempting to access the socket for receiving.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToSource (byte[] buffer, int offset, int count, int remotePort, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToSource(unsigned int8[] buffer, int32 offset, int32 count, int32 remotePort, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendToSource (buffer As Byte(), offset As Integer, count As Integer, remotePort As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendToSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, int remotePort, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendToSource : byte[] * int * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginSendToSource (buffer, offset, count, remotePort, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remotePort" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="37925-152">The buffer that contains the data to send.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-152">The buffer that contains the data to send.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="37925-153">The offset, in bytes, from the beginning of the <c>buffer</c> to read the data to be sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-153">The offset, in bytes, from the beginning of the <c>buffer</c> to read the data to be sent.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="37925-154">The number of bytes to send from the <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-154">The number of bytes to send from the <c>buffer</c>.</span>
          </span>
        </param>
        <param name="remotePort">
          <span data-ttu-id="37925-155">The remote port to which the packet is to be sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-155">The remote port to which the packet is to be sent.</span>
          </span>
          <span data-ttu-id="37925-156">The remote address is specified by the <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" /> constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-156">The remote address is specified by the <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" /> constructor.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="37925-157">The callback method to invoke when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-157">The callback method to invoke when the operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="37925-158">Optional state information to pass to the <c>callback</c> method for this operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-158">Optional state information to pass to the <c>callback</c> method for this operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37925-159">Begins the operation of sending a unicast packet to the source previously specified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-159">Begins the operation of sending a unicast packet to the source previously specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37925-160">Returns <see cref="T:System.IAsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-160">Returns <see cref="T:System.IAsyncResult" />.</span>
          </span>
          <span data-ttu-id="37925-161">An <see cref="T:System.IAsyncResult" /> that references this operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-161">An <see cref="T:System.IAsyncResult" /> that references this operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37925-162"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> 메서드 이전에 지정한 원본에 UDP 패킷을 보내는 작업을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-162">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method begins an operation of sending a UDP packet to the source previously specified.</span></span>  
  
 <span data-ttu-id="37925-163">일부 프로토콜 흐름 제어, 서비스 통계 또는 복구 메시지의 품질을 전달 하려면이 정보를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-163">Some protocols use this information to pass along flow control, quality of service statistics, or recovery messages.</span></span>  
  
 <span data-ttu-id="37925-164">에 지정 된 메서드는 `callback` 패킷이 전송 되 면 매개 변수를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-164">The method specified in the `callback` parameter is invoked when a packet has been sent.</span></span>  
  
 <span data-ttu-id="37925-165">클라이언트가 멀티 캐스트 그룹에 조인을 완료 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-165">The client must have completed a join to the multicast group.</span></span>  
  
 <span data-ttu-id="37925-166">대상 포트에 지정 된 경우는 `remotePort` 매개 변수는 1024 보다 작은 <xref:System.Net.Sockets.SocketException> 이 throw 됩니다 <xref:System.Net.Sockets.SocketError.AccessDenied>합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-166">If the destination port specified in the `remotePort` parameter is less than 1,024, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 <span data-ttu-id="37925-167">UDP를 사용 하 여 일반적인 아니지만 보내기 작업이 동기적으로 실패 하면 소켓 오류가 있을 수는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="37925-167">It is possible to have a socket failure if a send operation fails synchronously, although this is uncommon with UDP.</span></span> <span data-ttu-id="37925-168">소켓 오류가 발생 하는 경우는 <xref:System.Net.Sockets.SocketException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="37925-168">If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="37925-169">구성원으로 지정 된 오류가 <xref:System.Net.Sockets.SocketError> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="37925-169">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="37925-170">
            <paramref name="buffer" /> is a null reference (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-170">
              <paramref name="buffer" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="37925-171">
            <paramref name="offset" /> is less than 0  -or-  <paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-171">
              <paramref name="offset" /> is less than 0  -or-  <paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="37925-172">-or-  <paramref name="count" /> is less than 0  -or-  <paramref name="offset" /> plus the count is greater than the length of the <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-172">-or-  <paramref name="count" /> is less than 0  -or-  <paramref name="offset" /> plus the count is greater than the length of the <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="37925-173">-or-  <paramref name="remotePort" /> is less than 0 or greater than 65,535.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-173">-or-  <paramref name="remotePort" /> is less than 0 or greater than 65,535.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="37925-174">The multicast group has not yet been joined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-174">The multicast group has not yet been joined.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="37925-175">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-175">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="37925-176">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-176">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpSingleSourceMulticastClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37925-177">Leaves the multicast group and releases all resources used by the current instance of the <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> class and the underlying the <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-177">Leaves the multicast group and releases all resources used by the current instance of the <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> class and the underlying the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37925-178"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> 사용을 마치면 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-178">Call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> when you are finished using the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</span></span> <span data-ttu-id="37925-179"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> 메서드를 사용하면 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>를 사용할 수 없게 됩니다.</span><span class="sxs-lookup"><span data-stu-id="37925-179">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> method leaves the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> in an unusable state.</span></span> <span data-ttu-id="37925-180">호출한 후 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>에 대 한 모든 참조를 해제 해야 합니다 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> 가비지 수집기에서 메모리를 회수할 수 있도록 하는 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> 차지한 합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-180">After calling <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>, you must release all references to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> was occupying.</span></span>  
  
 <span data-ttu-id="37925-181"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>를 호출하십시오.</span><span class="sxs-lookup"><span data-stu-id="37925-181">Always call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> before you release your last reference to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</span></span> <span data-ttu-id="37925-182">이렇게 하지 않으면 가비지 수집기가 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> 개체의 <xref:System.Object.Finalize%2A> 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="37925-182">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndJoinGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndJoinGroup(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndJoinGroup : IAsyncResult -&gt; unit" Usage="udpSingleSourceMulticastClient.EndJoinGroup result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="37925-183">The result of the asynchronous join operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-183">The result of the asynchronous join operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37925-184">Completes the asynchronous join group operation to a multicast group.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-184">Completes the asynchronous join group operation to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37925-185"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> 메서드는 비동기 바인딩할 멀티 캐스트 그룹에 소켓 및 조인 작업을 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-185">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> method completes an asynchronous bind to a socket and join operation to a multicast group.</span></span>  
  
 <span data-ttu-id="37925-186">런타임에서 필요한 경우는 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> 메서드는 또한 클라이언트에서 멀티 캐스트 그룹 하 게 액세스할 수 있는지 확인 하려면 정책 검사를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-186">If required by the runtime, the  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group.</span></span> <span data-ttu-id="37925-187">클라이언트 액세스를 허용 되지 않는 경우는 <xref:System.Net.Sockets.SocketException> 이 throw <xref:System.Net.Sockets.SocketError.AccessDenied>합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-187">If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 <span data-ttu-id="37925-188">조인 그룹 작업을 수행 하는 동안 소켓 오류가 발생 하는 경우는 <xref:System.Net.Sockets.SocketException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="37925-188">If there is a socket failure while performing the join group operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="37925-189">구성원으로 지정 된 오류가 <xref:System.Net.Sockets.SocketError> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="37925-189">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="37925-190">
            <paramref name="result" /> is a null reference (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-190">
              <paramref name="result" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="37925-191">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-191">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="37925-192">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-192">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromSource">
      <MemberSignature Language="C#" Value="public int EndReceiveFromSource (IAsyncResult result, out int sourcePort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromSource(class System.IAsyncResult result, [out] int32&amp; sourcePort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFromSource (result As IAsyncResult, ByRef sourcePort As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFromSource(IAsyncResult ^ result, [Runtime::InteropServices::Out] int % sourcePort);" />
      <MemberSignature Language="F#" Value="member this.EndReceiveFromSource : IAsyncResult *  -&gt; int" Usage="udpSingleSourceMulticastClient.EndReceiveFromSource (result, sourcePort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="sourcePort" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="37925-193">The result of the asynchronous receive operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-193">The result of the asynchronous receive operation.</span>
          </span>
        </param>
        <param name="sourcePort">
          <span data-ttu-id="37925-194">The source endpoint where the packet was received from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-194">The source endpoint where the packet was received from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37925-195">Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-195">Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37925-196">Returns <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-196">Returns <see cref="T:System.Int32" />.</span>
          </span>
          <span data-ttu-id="37925-197">The length, in bytes, of the message stored in the <paramref name="buffer" /> parameter passed to the <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-197">The length, in bytes, of the message stored in the <paramref name="buffer" /> parameter passed to the <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37925-198"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> 메서드 멀티 캐스트 그룹에서 하나의 원본에서 패킷을 수신 하는 비동기 작업을 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-198">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> method completes an asynchronous operation to receive a packet from a single source in a multicast group.</span></span>  
  
 <span data-ttu-id="37925-199">소켓 오류가 수신 작업을 수행 하는 동안 발생 하는 경우는 <xref:System.Net.Sockets.SocketException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="37925-199">If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="37925-200">구성원으로 지정 된 오류가 <xref:System.Net.Sockets.SocketError> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="37925-200">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="37925-201">
            <paramref name="result" /> is a null reference (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-201">
              <paramref name="result" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="37925-202">The multicast group has not yet been joined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-202">The multicast group has not yet been joined.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="37925-203">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-203">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="37925-204">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-204">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToSource">
      <MemberSignature Language="C#" Value="public void EndSendToSource (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToSource(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendToSource (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendToSource(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndSendToSource : IAsyncResult -&gt; unit" Usage="udpSingleSourceMulticastClient.EndSendToSource result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="37925-205">The result of the asynchronous send operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-205">The result of the asynchronous send operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37925-206">Completes the operation of sending a unicast packet to a single source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-206">Completes the operation of sending a unicast packet to a single source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37925-207"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A> 메서드 이전에 지정 된 단일 소스 패킷을 보내야 하는 비동기 작업을 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-207">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A> method completes an asynchronous operation to send a packet to single source previously specified.</span></span>  
  
 <span data-ttu-id="37925-208">소켓 오류가 수신 작업을 수행 하는 동안 발생 하는 경우는 <xref:System.Net.Sockets.SocketException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="37925-208">If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="37925-209">구성원으로 지정 된 오류가 <xref:System.Net.Sockets.SocketError> 열거형입니다.</span><span class="sxs-lookup"><span data-stu-id="37925-209">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="37925-210">
            <paramref name="result" /> is a null reference (Nothing in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-210">
              <paramref name="result" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="37925-211">The multicast group has not yet been joined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-211">The multicast group has not yet been joined.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="37925-212">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-212">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="37925-213">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-213">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37925-214">Gets or sets the size, in bytes, of the receive buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast receive operations on this <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-214">Gets or sets the size, in bytes, of the receive buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast receive operations on this <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="37925-215">
            <see cref="T:System.Int32" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-215">Returns <see cref="T:System.Int32" />.</span>
          </span>
          <span data-ttu-id="37925-216">수신 버퍼의 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-216">The size, in bytes, of the receive buffer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37925-217">합니다 `ReceiveBufferSize` 속성 내부의 수신 버퍼를 바이트 단위로 크기를 설정 하거나 가져옵니다 <xref:System.Net.Sockets.Socket> 이에 대 한 멀티 캐스트 수신 작업에 사용 되는 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="37925-217">The `ReceiveBufferSize` property gets or sets the size, in bytes, of the receive buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast receive operations on this <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance.</span></span> <span data-ttu-id="37925-218">특히 합니다 `ReceiveBufferSize` 패킷이 도착 하면 응용 프로그램이 아직 호출 하지 않은 경우 스택에서 사용 되는 버퍼의 크기를 제어 하는 속성을 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="37925-218">Specifically, the `ReceiveBufferSize` property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method.</span></span> <span data-ttu-id="37925-219">이 버퍼 채워지면 및 패킷 응용 프로그램 호출 하기 전에 들어오는 유지 하는 경우는 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> 고 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> 메서드, 이전 패킷이 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="37925-219">If this buffer gets filled up and packets keep coming before the application calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> and <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> methods, old packets will get dropped.</span></span> <span data-ttu-id="37925-220">응용 프로그램 이전 고 패킷을 받도록 할 수 없습니다 및 호출 때 최신 패킷을 받는 대신는 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="37925-220">The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method.</span></span>  
  
 <span data-ttu-id="37925-221">Windows의 수신 버퍼의 기본 크기는 8,192입니다.</span><span class="sxs-lookup"><span data-stu-id="37925-221">The default size of the receive buffer on Windows is 8,192.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="37925-222">The buffer size specified is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-222">The buffer size specified is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="37925-223">The multicast group has not yet been joined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-223">The multicast group has not yet been joined.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="37925-224">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-224">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37925-225">Gets or sets the size, in bytes, of the send buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast send operations on this <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-225">Gets or sets the size, in bytes, of the send buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast send operations on this <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="37925-226">
            <see cref="T:System.Int32" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-226">Returns <see cref="T:System.Int32" />.</span>
          </span>
          <span data-ttu-id="37925-227">전송 버퍼의 크기(바이트)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-227">The size, in bytes, of the send buffer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37925-228">SendBufferSize 속성 기본의 보내기 버퍼를 바이트 단위로 크기를 설정 하거나 가져옵니다 <xref:System.Net.Sockets.Socket> 이 멀티 캐스트 전송 작업에 사용 되는 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="37925-228">The SendBufferSize property gets or sets the size, in bytes, of the send buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast send operations on this <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance.</span></span>  
  
 <span data-ttu-id="37925-229">Mac OS X에서 합니다 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> 속성을 위한 추가적인 호출 하기 전에 네트워크 스택의 전송 대기 중인 버퍼의 바이트 수 수를 제어 합니다 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> 메서드가 실패 하기 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-229">On Mac OS X, the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property controls how many bytes can be in the network stack's waiting-to-be-sent buffer before additional calls to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method start failing.</span></span> <span data-ttu-id="37925-230">Mac OS X에서 응용 프로그램 단기간에 UDP 패킷이 많이 보내는 경우이 속성을 사용 하 여 관련 되도록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="37925-230">Applications on Mac OS X may need to be concerned with this property if they are sending a large number of UDP packets in a short timeframe.</span></span>  
  
 <span data-ttu-id="37925-231">Windows를 호출 합니다 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> 메서드는 값에 따라 콜백을 호출 하는 데 더 걸립니다를 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> 송신 버퍼가 가득 찬 경우 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="37925-231">On Windows, calls to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method will take longer to call the callback depending on the value of the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property if the send buffer is full.</span></span> <span data-ttu-id="37925-232"><xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> 보내기 완료 될 때까지 실제 메모리에서 잠긴 사용자의 버퍼의 유지 여부 속성 유일한 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="37925-232">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property only controls whether the user's buffer stays locked in physical memory until the send completes.</span></span>  
  
 <span data-ttu-id="37925-233">Windows의 송신 버퍼의 기본 크기는 8,192입니다.</span><span class="sxs-lookup"><span data-stu-id="37925-233">The default size of the send buffer on Windows is 8,192.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="37925-234">The buffer size specified is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-234">The buffer size specified is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="37925-235">The multicast group has not yet been joined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-235">The multicast group has not yet been joined.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="37925-236">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37925-236">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>