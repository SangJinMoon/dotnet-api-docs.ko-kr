<Type Name="UdpClient" FullName="System.Net.Sockets.UdpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7303a7e93d44ff0dec4634d108595cec87c458e6" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39911640" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UdpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="5d8ed-101">UDP(User Datagram Protocol) 네트워크 서비스를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5d8ed-101">Provides User Datagram Protocol (UDP) network services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-102"><xref:System.Net.Sockets.UdpClient> 클래스 동기식 차단 연결 없는 UDP 데이터 그램을 주고받기 위한 간단한 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-102">The <xref:System.Net.Sockets.UdpClient> class provides simple methods for sending and receiving connectionless UDP datagrams in blocking synchronous mode.</span></span> <span data-ttu-id="5d8ed-103">UDP 전송 연결 없는 프로토콜 이기 때문에 데이터 보내기 및 받기 전에 원격 호스트에 연결을 설정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-103">Because UDP is a connectionless transport protocol, you do not need to establish a remote host connection prior to sending and receiving data.</span></span> <span data-ttu-id="5d8ed-104">그러나 옵션이 다음 두 가지 방법 중 하나에서 기본 원격 호스트를 설정 하는 위해 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-104">You do, however, have the option of establishing a default remote host in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="5d8ed-105">인스턴스를 만듭니다는 <xref:System.Net.Sockets.UdpClient> 원격 호스트 이름을 사용 하 여 클래스 및 매개 변수로 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-105">Create an instance of the <xref:System.Net.Sockets.UdpClient> class using the remote host name and port number as parameters.</span></span>  
  
-   <span data-ttu-id="5d8ed-106">인스턴스를 만듭니다는 <xref:System.Net.Sockets.UdpClient> 클래스 및 호출 된 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-106">Create an instance of the <xref:System.Net.Sockets.UdpClient> class and then call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span>  
  
 <span data-ttu-id="5d8ed-107">제공 하는 송신 메서드 중 하나를 사용할 수는 <xref:System.Net.Sockets.UdpClient> 원격 장치에 데이터를 보내도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-107">You can use any of the send methods provided in the <xref:System.Net.Sockets.UdpClient> to send data to a remote device.</span></span> <span data-ttu-id="5d8ed-108">사용 된 <xref:System.Net.Sockets.UdpClient.Receive%2A> 원격 호스트에서 데이터를 수신 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-108">Use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method to receive data from remote hosts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-109">호출 하지 마세요 <xref:System.Net.Sockets.UdpClient.Send%2A> 호스트 이름을 사용 하 여 또는 <xref:System.Net.IPEndPoint> 이미 기본 원격 호스트를 지정한 경우.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-109">Do not call <xref:System.Net.Sockets.UdpClient.Send%2A> using a host name or <xref:System.Net.IPEndPoint> if you have already specified a default remote host.</span></span> <span data-ttu-id="5d8ed-110">이렇게 하면 <xref:System.Net.Sockets.UdpClient> 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-110">If you do, <xref:System.Net.Sockets.UdpClient> will throw an exception.</span></span>  
  
 <span data-ttu-id="5d8ed-111"><xref:System.Net.Sockets.UdpClient> 메서드를 사용 하면 멀티 캐스트 데이터 그램을 받고 보내는 데 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-111"><xref:System.Net.Sockets.UdpClient> methods also allow you to send and receive multicast datagrams.</span></span> <span data-ttu-id="5d8ed-112">사용 합니다 <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> 구독할 메서드는 <xref:System.Net.Sockets.UdpClient> 멀티 캐스트 그룹에.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-112">Use the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method to subscribe a <xref:System.Net.Sockets.UdpClient> to a multicast group.</span></span> <span data-ttu-id="5d8ed-113">사용 합니다 <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> 구독을 취소 하는 메서드를 <xref:System.Net.Sockets.UdpClient> 멀티 캐스트 그룹에서 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-113">Use the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method to unsubscribe a <xref:System.Net.Sockets.UdpClient> from a multicast group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-114">다음 예제에서는 설정 된 <xref:System.Net.Sockets.UdpClient> 11000 포트로 호스트 이름 www.contoso.com을 사용 하 여 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-114">The following example establishes a <xref:System.Net.Sockets.UdpClient> connection using the host name www.contoso.com on port 11000.</span></span> <span data-ttu-id="5d8ed-115">작은 문자열 메시지는 두 개의 별도 원격 호스트 컴퓨터에 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-115">A small string message is sent to two separate remote host machines.</span></span> <span data-ttu-id="5d8ed-116"><xref:System.Net.Sockets.UdpClient.Receive%2A> 메시지가 수신 될 때까지 메서드 실행을 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-116">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until a message is received.</span></span> <span data-ttu-id="5d8ed-117">사용 하 여 합니다 <xref:System.Net.IPEndPoint> 전달할 <xref:System.Net.Sockets.UdpClient.Receive%2A>, 응답 호스트의 id가 노출 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-117">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClientExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClientExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClientExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClientExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClientExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClientExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="5d8ed-118">나가는 연결을 설정 하거나 들어오는 요청을 수락 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5d8ed-118">To establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5d8ed-119">
            <see cref="T:System.Net.Sockets.UdpClient" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-119">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5d8ed-120">
            <see cref="T:System.Net.Sockets.UdpClient" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-120">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-121">이 생성자를 만듭니다 <xref:System.Net.Sockets.UdpClient> 에 가장 적합 한 로컬 IPv4 주소와 포트 번호를 할당 하려면 기본 서비스 공급자 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-121">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and allows the underlying service provider to assign the most appropriate local IPv4 address and port number.</span></span> <span data-ttu-id="5d8ed-122">이 생성자를 사용 하는 경우는 <xref:System.Net.Sockets.UdpClient> 인스턴스 변경 또는 IPv6 대상 사용 하 여 connect 메서드 호출에 의해 덮어쓸 수 없는 ipv4 주소 패밀리를 사용 하 여 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-122">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-123">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-123">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-124">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-124">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="5d8ed-125">이 생성자 소켓 바인딩에 수행 하지 않기 때문에 멀티 캐스트 그룹을 조인 하는 데 적합 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-125">This constructor is not suitable for joining a multicast group because it does not perform socket binding.</span></span> <span data-ttu-id="5d8ed-126">또한 IPv4 주소 형식에만 작동합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-126">Also, it works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-127">다음 예제에서는의 인스턴스를 만드는 기본 생성자를 사용 하는 방법에 설명 합니다 <xref:System.Net.Sockets.UdpClient> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-127">The following example demonstrates how to use the default constructor to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-128">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-128">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : int -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient port" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="5d8ed-129">통신할 로컬 포트 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-129">The local port number from which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-130">
            <see cref="T:System.Net.Sockets.UdpClient" /> 클래스의 새 인스턴스를 초기화하고 해당 인스턴스를 제공되는 로컬 포트 번호에 바인딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-130">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-131">이 생성자는 내부 만듭니다 <xref:System.Net.Sockets.Socket> 통신 하려는 포트 번호에 바인딩합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-131">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span> <span data-ttu-id="5d8ed-132">로컬 포트 번호를 설정 하려는 경우이 생성자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-132">Use this constructor if you are only interested in setting the local port number.</span></span> <span data-ttu-id="5d8ed-133">기본 서비스 공급자는 로컬 IP 주소를 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-133">The underlying service provider will assign the local IP address.</span></span> <span data-ttu-id="5d8ed-134">생성자에 0을 전달 하는 경우 기본 서비스 공급자 포트 번호를 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-134">If you pass 0 to the constructor, the underlying service provider will assign a port number.</span></span> <span data-ttu-id="5d8ed-135">이 생성자를 사용 하는 경우는 <xref:System.Net.Sockets.UdpClient> 인스턴스 변경 또는 IPv6 대상 사용 하 여 connect 메서드 호출에 의해 덮어쓸 수 없는 ipv4 주소 패밀리를 사용 하 여 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-135">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-136">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-136">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-137">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-137">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="5d8ed-138">이 생성자는 IPv4 주소 형식에만 작동합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-138">This constructor works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-139">다음 예제에서는 로컬 포트 번호를 사용 하 여의 인스턴스를 만드는 방법을 보여 줍니다는 <xref:System.Net.Sockets.UdpClient> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-139">The following example demonstrates using a local port number to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5d8ed-140">
            <paramref name="port" /> 매개 변수가 <see cref="F:System.Net.IPEndPoint.MaxPort" />보다 크거나 <see cref="F:System.Net.IPEndPoint.MinPort" />보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-140">The <paramref name="port" /> parameter is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-141">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-141">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : System.Net.IPEndPoint -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="5d8ed-142">UDP 연결을 바인딩할 로컬 엔드포인트를 나타내는 <see cref="T:System.Net.IPEndPoint" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-142">An <see cref="T:System.Net.IPEndPoint" /> that respresents the local endpoint to which you bind the UDP connection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-143">
            <see cref="T:System.Net.Sockets.UdpClient" /> 클래스의 새 인스턴스를 초기화하고 해당 인스턴스를 지정된 로컬 엔드포인트에 바인딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-143">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-144">이 생성자를 만듭니다 <xref:System.Net.Sockets.UdpClient> 에 바인딩합니다 합니다 <xref:System.Net.IPEndPoint> 에 지정 된 된 `localEP` 매개 변수.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-144">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="5d8ed-145">이 생성자를 호출 하기 전에 만들어야 합니다를 <xref:System.Net.IPEndPoint> 보내고 데이터를 수신 하려는 IP 주소와 포트 번호를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-145">Before you call this constructor, you must create an <xref:System.Net.IPEndPoint> using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="5d8ed-146">데이터 보내기 및 받기에 대 한 로컬 IP 주소 및 포트 번호를 지정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-146">You do not need to specify a local IP address and port number for sending and receiving data.</span></span> <span data-ttu-id="5d8ed-147">이렇게 하지 않으면 경우 기본 서비스 공급자가 가장 적합 한 로컬 IP 주소와 포트 번호를 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-147">If you do not, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="5d8ed-148">이 생성자를 사용 하는 경우는 <xref:System.Net.Sockets.UdpClient> 인스턴스는 지정 된 주소 패밀리를 사용 하 여 설정 됩니다는 `localEP` 매개 변수를 변경 하거나 다른 주소 패밀리를 사용 하 여 connect 메서드 호출에 의해 덮어쓸 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-148">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `localEP` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-149">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-149">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-150">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-150">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-151">다음 예에서는 인스턴스의 생성 하는 방법에 설명 합니다 <xref:System.Net.Sockets.UdpClient> 로컬 끝점을 사용 하 여 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-151">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5d8ed-152">
            <paramref name="localEP" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-152">
              <paramref name="localEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-153">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-153">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient family" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="5d8ed-154">소켓의 주소 지정 체계를 지정하는 <see cref="T:System.Net.Sockets.AddressFamily" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-154">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-155">
            <see cref="T:System.Net.Sockets.UdpClient" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-155">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-156">`family` 매개 변수는 수신기 IP 버전 4 주소 (IPv4) 또는 IP 버전 6(ipv6) 사용 하는지 여부를 결정 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-156">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="5d8ed-157">IPv4 주소를 사용 하려면 전달 된 <xref:System.Net.Sockets.AddressFamily.InterNetwork> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-157">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="5d8ed-158">IPv6 주소를 사용 하려면 전달 된 <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-158">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="5d8ed-159">다른 값을 전달 하면 메서드가 throw 하는 <xref:System.ArgumentException>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-159">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="5d8ed-160">이 생성자를 사용 하는 경우는 <xref:System.Net.Sockets.UdpClient> 인스턴스는 지정 된 주소 패밀리를 사용 하 여 설정 됩니다는 `family` 매개 변수를 변경 하거나 다른 주소 패밀리를 사용 하 여 connect 메서드 호출에 의해 덮어쓸 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-160">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-161">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-161">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-162">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-162">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="5d8ed-163"><xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> 소켓 바인딩에 수행 하지 않기 때문에 멀티 캐스트 그룹을 조인 하는 데 적합 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-163">The <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> is not suitable for joining a multicast group because it does not perform socket binding.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5d8ed-164">
            <paramref name="family" />이 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-164">
              <paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-165">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-165">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port, System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port, valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer, family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port, System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : int * System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient (port, family)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="5d8ed-166">들어오는 연결 시도를 수신하는 데 사용되는 포트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-166">The port on which to listen for incoming connection attempts.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="5d8ed-167">소켓의 주소 지정 체계를 지정하는 <see cref="T:System.Net.Sockets.AddressFamily" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-167">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-168">
            <see cref="T:System.Net.Sockets.UdpClient" /> 클래스의 새 인스턴스를 초기화하고 해당 인스턴스를 제공되는 로컬 포트 번호에 바인딩합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-168">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-169">이 생성자는 내부 만듭니다 <xref:System.Net.Sockets.Socket> 통신 하려는 포트 번호에 바인딩합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-169">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span>  
  
 <span data-ttu-id="5d8ed-170">`family` 매개 변수는 수신기 IP 버전 4 주소 (IPv4) 또는 IP 버전 6(ipv6) 사용 하는지 여부를 결정 주소입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-170">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="5d8ed-171">IPv4 주소를 사용 하려면 전달 된 <xref:System.Net.Sockets.AddressFamily.InterNetwork> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-171">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="5d8ed-172">IPv6 주소를 사용 하려면 전달 된 <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-172">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="5d8ed-173">다른 값을 전달 하면 메서드가 throw 하는 <xref:System.ArgumentException>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-173">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="5d8ed-174">이 생성자를 사용 하는 경우는 <xref:System.Net.Sockets.UdpClient> 인스턴스는 지정 된 주소 패밀리를 사용 하 여 설정 됩니다는 `family` 매개 변수를 변경 하거나 다른 주소 패밀리를 사용 하 여 connect 메서드 호출에 의해 덮어쓸 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-174">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-175">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-175">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-176">이 코드를 가져온 후 참조를 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-176">Once you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-177">다음 코드 예제에는 멀티 캐스트 그룹에서 사용 하는 UDP 클라이언트를 만드는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-177">The following code example shows how to create a UDP client to use in a multicast group.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#3)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5d8ed-178">
            <paramref name="family" />이 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 또는 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />이 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-178">
              <paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5d8ed-179">
            <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MaxPort" />보다 크거나 <see cref="F:System.Net.IPEndPoint.MinPort" />보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-179">
              <paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-180">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-180">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : string * int -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient (hostname, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="5d8ed-181">연결할 원격 DNS 호스트의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-181">The name of the remote DNS host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="5d8ed-182">연결할 원격 포트 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-182">The remote port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-183">
            <see cref="T:System.Net.Sockets.UdpClient" /> 클래스의 새 인스턴스를 초기화하고 기본 원격 호스트를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-183">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and establishes a default remote host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-184">이 생성자는 새 <xref:System.Net.Sockets.UdpClient> 를 사용 하 여 원격 호스트를 설정 하 고는 `hostname` 고 `port` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-184">This constructor initializes a new <xref:System.Net.Sockets.UdpClient> and establishes a remote host using the `hostname` and `port` parameters.</span></span> <span data-ttu-id="5d8ed-185">기본 원격 호스트를 설정 하는 것은 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-185">Establishing a default remote host is optional.</span></span> <span data-ttu-id="5d8ed-186">이 생성자를 사용 하는 경우 각 호출에서 원격 호스트를 지정할 필요가 없습니다를 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-186">If you use this constructor, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="5d8ed-187">기본 원격 호스트를 지정 하면 해당 호스트에 제한 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-187">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="5d8ed-188">호출 하 여 언제 든 지 기본 원격 호스트를 변경할 수는 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-188">You can change the default remote host at any time by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="5d8ed-189">호출 하는 원격 호스트를 지정 하려는 경우는 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드를이 생성자를 사용 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-189">If you want to specify a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, do not use this constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-190">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-190">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-191">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-191">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-192">다음 예에서는 인스턴스의 생성 하는 방법에 설명 합니다 <xref:System.Net.Sockets.UdpClient> 호스트 이름을 사용 하 여 클래스 및 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-192">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5d8ed-193">
            <paramref name="hostname" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-193">
              <paramref name="hostname" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5d8ed-194">
            <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-194">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-195">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-195">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool with get, set" Usage="System.Net.Sockets.UdpClient.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d8ed-196">기본 원격 호스트가 설정되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-196">Gets or sets a value indicating whether a default remote host has been established.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5d8ed-197">연결이 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-197">
              <see langword="true" /> if a connection is active; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-198">파생 된 클래스 <xref:System.Net.Sockets.UdpClient> 이 속성을 사용 하 여 기본 원격 호스트를 설정 된 경우를 결정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-198">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to determine if a default remote host has been established.</span></span> <span data-ttu-id="5d8ed-199">호출 하거나 적절 한 생성자를 사용 하 여 기본 원격 호스트를 설정할 수 있습니다는 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-199">You can establish a default remote host by using the appropriate constructor or by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="5d8ed-200">호출 하 여 원격 호스트에서 기본 원격 호스트를 설정 하는 경우 지정할 수 없습니다 <xref:System.Net.Sockets.UdpClient.Send%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-200">If you do establish a default remote host, you cannot specify a remote host in your call to <xref:System.Net.Sockets.UdpClient.Send%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.UdpClient" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      </Docs>
    </Member>
    <Member MemberName="AllowNatTraversal">
      <MemberSignature Language="C#" Value="public void AllowNatTraversal (bool allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AllowNatTraversal(bool allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllowNatTraversal (allowed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllowNatTraversal(bool allowed);" />
      <MemberSignature Language="F#" Value="member this.AllowNatTraversal : bool -&gt; unit" Usage="udpClient.AllowNatTraversal allowed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowed">
          <span data-ttu-id="5d8ed-201">NAT 통과를 설정 또는 해제할지를 지정하는 부울 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-201">A Boolean value that specifies whether to enable or disable NAT traversal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-202">
            <see cref="T:System.Net.Sockets.UdpClient" /> 인스턴스에 대해 NAT(Network Address Translation) 통과를 설정하거나 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-202">Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.UdpClient" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-203"><xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A> 메서드를 사용 하도록 설정 또는 NAT 통과 사용 하지 않도록 설정에 사용 되는 <xref:System.Net.Sockets.UdpClient> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-203">The <xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A> method is used to enable or disable NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span> <span data-ttu-id="5d8ed-204">Teredo, 6to4 또는 ISATAP 터널을 사용 하 여 NAT 통과 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-204">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="5d8ed-205">경우는 `allowed` 매개 변수는 false를 <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> 연결된 된 소켓에서 옵션을 설정 <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-205">When the `allowed` parameter is false, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span></span> <span data-ttu-id="5d8ed-206">이 명시적으로 사용 하지 않도록 설정에 대 한 NAT 통과 <xref:System.Net.Sockets.UdpClient> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-206">This explicitly disables NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span>  
  
 <span data-ttu-id="5d8ed-207">경우는 `allowed` 매개 변수는 true를 <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> 연결된 된 소켓에서 옵션을 설정 <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-207">When the `allowed` parameter is true, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="5d8ed-208">이 수에 대 한 NAT 통과 <xref:System.Net.Sockets.UdpClient> 시스템에서 방화벽 규칙에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-208">This may allow NAT traversal for a <xref:System.Net.Sockets.UdpClient> depending on firewall rules in place on the system.</span></span>  
  
 <span data-ttu-id="5d8ed-209">Teredo 주소는 2001의 접두사를 사용 하 여 IPv6 주소:: / 32입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-209">A Teredo address is an IPv6 address with the prefix of 2001::/32.</span></span> <span data-ttu-id="5d8ed-210">Teredo 주소는 일반 DNS 이름 확인을 통해 반환 또는 로컬 인터페이스에 할당 된 IPv6 주소로 열거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-210">Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Available : int" Usage="System.Net.Sockets.UdpClient.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d8ed-211">네트워크에서 받은 데이터 중 읽을 수 있는 데이터의 양을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-211">Gets the amount of data received from the network that is available to read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5d8ed-212">네트워크에서 받은 데이터의 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-212">The number of bytes of data received from the network.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-213"><xref:System.Net.Sockets.UdpClient.Available%2A> 속성 읽기에 대 한 네트워크 버퍼에 대기 하는 데이터의 양을 결정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-213">The <xref:System.Net.Sockets.UdpClient.Available%2A> property is used to determine the amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="5d8ed-214">데이터를 사용할 수 있는 경우 호출 <xref:System.Net.Sockets.NetworkStream.Read%2A> 데이터를 가져올 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-214">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="5d8ed-215">사용 가능한 데이터가 없는 경우는 <xref:System.Net.Sockets.UdpClient.Available%2A> 속성 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-215">If no data is available, the <xref:System.Net.Sockets.UdpClient.Available%2A> property returns 0.</span></span>  
  
 <span data-ttu-id="5d8ed-216">원격 호스트 종료 되거나 연결이 닫히면 합니다 <xref:System.Net.Sockets.UdpClient.Available%2A> 속성을 <xref:System.Net.Sockets.SocketException>입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-216">If the remote host shuts down or closes the connection, the <xref:System.Net.Sockets.UdpClient.Available%2A> property throws a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-217">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 MSDN library의 Windows 소켓 버전 2 API 오류 코드 설명서를 참조 하 [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)/에 대 한 자세한 설명은 합니다 오류가 발생 했습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-217">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)/ for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-218">다음 코드 예제에서는 <xref:System.Net.Sockets.UdpClient.Available%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-218">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Available%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-219">소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-219">An error occurred while attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5d8ed-220">
            <see cref="T:System.Net.Sockets.Socket" />이 닫혔습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-220">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginReceive (requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestCallback">
          <span data-ttu-id="5d8ed-221">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-221">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="5d8ed-222">수신 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-222">A user-defined object that contains information about the receive operation.</span>
          </span>
          <span data-ttu-id="5d8ed-223">이 개체는 작업이 완료되면 <c>requestCallback</c> 대리자에게 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-223">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-224">데이터그램을 원격 호스트에서 비동기적으로 받습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-224">Receives a datagram from a remote host asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5d8ed-225">비동기 수신을 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-225">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous receive.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-226">비동기 <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> 를 호출 하 여 작업을 완료 해야 합니다 <xref:System.Net.Sockets.UdpClient.EndReceive%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-226">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndReceive%2A> method.</span></span> <span data-ttu-id="5d8ed-227">메서드는 일반적으로 `requestCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-227">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="5d8ed-228">이 메서드는 작업이 완료 될 때까지 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-228">This method does not block until the operation is complete.</span></span> <span data-ttu-id="5d8ed-229">작업이 완료 될 때까지 차단 합니다 <xref:System.Net.Sockets.UdpClient.Receive%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-229">To block until the operation is complete, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="5d8ed-230">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-230">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-231">다음 코드 예제에서는 <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> 서버 응답을 비동기적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-231">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> to asynchronously receive a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSend">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5d8ed-232">데이터그램을 원격 호스트에 비동기적으로 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-232">Sends a datagram to a remote host asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginSend (datagram, bytes, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="5d8ed-233">보낼 데이터가 들어 있는 <see cref="T:System.Byte" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-233">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="5d8ed-234">보낼 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-234">The number of bytes to send.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="5d8ed-235">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-235">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="5d8ed-236">보내기 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-236">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="5d8ed-237">이 개체는 작업이 완료되면 <c>requestCallback</c> 대리자에게 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-237">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-238">데이터그램을 원격 호스트에 비동기적으로 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-238">Sends a datagram to a remote host asynchronously.</span>
          </span>
          <span data-ttu-id="5d8ed-239">대상은 이전에 <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />를 호출할 때 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-239">The destination was specified previously by a call to <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5d8ed-240">비동기 보내기를 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-240">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-241">비동기 <xref:System.Net.Sockets.UdpClient.BeginSend%2A> 를 호출 하 여 작업을 완료 해야 합니다 <xref:System.Net.Sockets.UdpClient.EndSend%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-241">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="5d8ed-242">메서드는 일반적으로 `requestCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-242">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="5d8ed-243">이 메서드는 작업이 완료 될 때까지 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-243">This method does not block until the operation completes.</span></span> <span data-ttu-id="5d8ed-244">작업이 완료 될 때까지 차단, 중 하나를 사용 합니다 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-244">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="5d8ed-245">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-245">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-246">다음 코드 예제에서는 <xref:System.Net.Sockets.UdpClient.BeginSend%2A> 서버 요청을 비동기적으로 보내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-246">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * System.Net.IPEndPoint * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginSend (datagram, bytes, endPoint, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="5d8ed-247">보낼 데이터가 들어 있는 <see cref="T:System.Byte" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-247">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="5d8ed-248">보낼 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-248">The number of bytes to send.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="5d8ed-249">데이터의 대상을 나타내는 <see cref="T:System.Net.EndPoint" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-249">The <see cref="T:System.Net.EndPoint" /> that represents the destination for the data.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="5d8ed-250">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-250">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="5d8ed-251">보내기 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-251">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="5d8ed-252">이 개체는 작업이 완료되면 <c>requestCallback</c> 대리자에게 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-252">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-253">데이터그램을 대상에 비동기적으로 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-253">Sends a datagram to a destination asynchronously.</span>
          </span>
          <span data-ttu-id="5d8ed-254">대상은 <see cref="T:System.Net.EndPoint" />에 지정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-254">The destination is specified by a <see cref="T:System.Net.EndPoint" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5d8ed-255">비동기 보내기를 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-255">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-256">비동기 <xref:System.Net.Sockets.UdpClient.BeginSend%2A> 를 호출 하 여 작업을 완료 해야 합니다 <xref:System.Net.Sockets.UdpClient.EndSend%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-256">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="5d8ed-257">메서드는 일반적으로 `requestCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-257">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="5d8ed-258">이 메서드는 작업이 완료 될 때까지 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-258">This method does not block until the operation is complete.</span></span> <span data-ttu-id="5d8ed-259">작업이 완료 될 때까지 차단, 중 하나를 사용 합니다 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-259">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="5d8ed-260">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-260">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-261">다음 코드 예제에서는 <xref:System.Net.Sockets.UdpClient.BeginSend%2A> 서버 요청을 비동기적으로 보내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-261">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, string hostname, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, string hostname, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, hostname As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * string * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginSend (datagram, bytes, hostname, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="5d8ed-262">보낼 데이터가 들어 있는 <see cref="T:System.Byte" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-262">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="5d8ed-263">보낼 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-263">The number of bytes to send.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="5d8ed-264">대상 호스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-264">The destination host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="5d8ed-265">대상 포트 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-265">The destination port number.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="5d8ed-266">작업이 완료되었을 때 호출할 메서드를 참조하는 <see cref="T:System.AsyncCallback" /> 대리자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-266">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="5d8ed-267">보내기 작업에 대한 정보가 들어 있는 사용자 정의 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-267">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="5d8ed-268">이 개체는 작업이 완료되면 <c>requestCallback</c> 대리자에게 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-268">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-269">데이터그램을 대상에 비동기적으로 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-269">Sends a datagram to a destination asynchronously.</span>
          </span>
          <span data-ttu-id="5d8ed-270">대상은 호스트 이름과 포트 번호를 사용하여 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-270">The destination is specified by the host name and port number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5d8ed-271">비동기 보내기를 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-271">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-272">비동기 <xref:System.Net.Sockets.UdpClient.BeginSend%2A> 를 호출 하 여 작업을 완료 해야 합니다 <xref:System.Net.Sockets.UdpClient.EndSend%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-272">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="5d8ed-273">메서드는 일반적으로 `requestCallback` 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-273">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="5d8ed-274">이 메서드는 작업이 완료 될 때까지 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-274">This method does not block until the operation is complete.</span></span> <span data-ttu-id="5d8ed-275">작업이 완료 될 때까지 차단, 중 하나를 사용 합니다 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-275">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="5d8ed-276">비동기 프로그래밍 모델을 사용 하는 방법에 대 한 자세한 내용은 [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-276">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-277">다음 코드 예제에서는 <xref:System.Net.Sockets.UdpClient.BeginSend%2A> 서버 요청을 비동기적으로 보내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-277">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Client : System.Net.Sockets.Socket with get, set" Usage="System.Net.Sockets.UdpClient.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d8ed-278">내부 네트워크 <see cref="T:System.Net.Sockets.Socket" />을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-278">Gets or sets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5d8ed-279">내부 네트워크 <see cref="T:System.Net.Sockets.Socket" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-279">The underlying Network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-280"><xref:System.Net.Sockets.UdpClient> 만듭니다는 <xref:System.Net.Sockets.Socket> 네트워크를 통해 데이터를 송수신 하는 데 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-280"><xref:System.Net.Sockets.UdpClient> creates a <xref:System.Net.Sockets.Socket> used to send and receive data over a network.</span></span> <span data-ttu-id="5d8ed-281">파생 된 클래스 <xref:System.Net.Sockets.UdpClient> 이 속성을 사용 하 여이 설정할 수 있습니다 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-281">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to get or set this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="5d8ed-282">기본 사용 <xref:System.Net.Sockets.Socket> 에서 반환 된 <xref:System.Net.Sockets.UdpClient.Client%2A> 필요한 경우 액세스 하는 것 이상의 <xref:System.Net.Sockets.UdpClient> 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-282">Use the underlying <xref:System.Net.Sockets.Socket> returned from <xref:System.Net.Sockets.UdpClient.Client%2A> if you require access beyond that which <xref:System.Net.Sockets.UdpClient> provides.</span></span> <span data-ttu-id="5d8ed-283">사용할 수도 있습니다 <xref:System.Net.Sockets.UdpClient.Client%2A> 기본 설정 <xref:System.Net.Sockets.Socket> 기존 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-283">You can also use <xref:System.Net.Sockets.UdpClient.Client%2A> to set the underlying <xref:System.Net.Sockets.Socket> to an existing <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="5d8ed-284">간단 하 게 활용 하려는 경우에 유용 <xref:System.Net.Sockets.UdpClient> 기존의 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-284">This is useful if you want to take advantage of the simplicity of <xref:System.Net.Sockets.UdpClient> using a pre-existing <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-285">다음 예제에서는 사용 된 <xref:System.Net.Sockets.UdpClient.Client%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-285">The following example demonstrates the use of the <xref:System.Net.Sockets.UdpClient.Client%2A> property.</span></span> <span data-ttu-id="5d8ed-286">이 예제에서는 브로드캐스트를 기본 활성화 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-286">In this example, broadcasting is enabled for the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="udpClient.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5d8ed-287">UDP 연결을 닫습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-287">Closes the UDP connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-288">합니다 <xref:System.Net.Sockets.UdpClient.Close%2A> 기본을 사용 하지 않도록 설정 <xref:System.Net.Sockets.Socket> 와 연결 된 모든 관리 및 비관리 리소스를 해제 하 고는 <xref:System.Net.Sockets.UdpClient>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-288">The <xref:System.Net.Sockets.UdpClient.Close%2A> disables the underlying <xref:System.Net.Sockets.Socket> and releases all managed and unmanaged resources associated with the <xref:System.Net.Sockets.UdpClient>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-289">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-289">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-290">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-290">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-291">다음 예제에는 닫는 방법을 보여 줍니다.는 <xref:System.Net.Sockets.UdpClient> 를 호출 하 여는 <xref:System.Net.Sockets.UdpClient.Close%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-291">The following example demonstrates closing a <xref:System.Net.Sockets.UdpClient> by calling the <xref:System.Net.Sockets.UdpClient.Close%2A> method.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-292">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-292">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5d8ed-293">기본 원격 호스트를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-293">Establishes a default remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (endPoint As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPEndPoint -&gt; unit" Usage="udpClient.Connect endPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="endPoint">
          <span data-ttu-id="5d8ed-294">데이터를 보낼 네트워크 엔드포인트를 지정하는 <see cref="T:System.Net.IPEndPoint" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-294">An <see cref="T:System.Net.IPEndPoint" /> that specifies the network endpoint to which you intend to send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-295">지정된 네트워크 엔드포인트를 사용하여 기본 원격 호스트를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-295">Establishes a default remote host using the specified network endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-296">합니다 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드 설정에 지정 된 값을 사용 하 여 기본 원격 호스트는 `endPoint` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-296">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the value specified in the `endPoint` parameter.</span></span> <span data-ttu-id="5d8ed-297">설정 되 면 각 호출에서 원격 호스트를 지정할 필요가 없습니다를 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-297">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="5d8ed-298">기본 원격 호스트를 설정 하는 것은 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-298">Establishing a default remote host is optional.</span></span> <span data-ttu-id="5d8ed-299">기본 원격 호스트를 지정 하면 해당 호스트에 제한 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-299">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="5d8ed-300">다른 원격 호스트에 데이터 그램을 보내려는 경우에 다른 호출을 확인 해야 합니다 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드를 만들거나 다른 <xref:System.Net.Sockets.UdpClient> 기본 원격 호스트 하지 않고 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-300">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="5d8ed-301">기본 원격을 사용 하도록 설정한 경우 호스트 하는 원격 호스트를 호출 하는 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드를 <xref:System.Net.Sockets.UdpClient.Send%2A> 시킵니다를 <xref:System.Net.Sockets.SocketException>입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-301">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="5d8ed-302">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-302">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-303">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-303">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="5d8ed-304">호출 하는 경우는 <xref:System.Net.Sockets.Socket.Connect%2A> 메서드를 지정된 된 기본 삭제 됩니다 이외의 주소에서 도착 하는 모든 데이터 그램입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-304">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="5d8ed-305">기본 원격 호스트에서 상속 하는 경우가 아니면이 메서드를 사용 하 여 브로드캐스트 주소를 설정할 수 없습니다 <xref:System.Net.Sockets.UdpClient>, 클라이언트 메서드를 사용 하 여 기본 가져올 <xref:System.Net.Sockets.Socket>, 소켓 옵션을 설정 하 고 <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-305">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the Client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="5d8ed-306">그러나 수, 기본 브로드캐스트 데이터 브로드캐스트 주소, 255.255.255.255를 지정 하는 경우 <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> 를 호출 하는 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-306">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="5d8ed-307">사용 하도록 되돌릴 수 응용 프로그램에 브로드캐스트 주소 보다 정교가 필요한 경우는 <xref:System.Net.Sockets.Socket> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-307">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-308">UDP 프로토콜은 연결 없는 프로토콜의 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-308">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="5d8ed-309">호출 하지 마십시오는 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드 멀티 캐스팅 된 데이터 그램을 수신 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-309">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-310">다음 예제에서는 <xref:System.Net.IPEndPoint> 기본 원격 호스트를 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-310">The following example uses an <xref:System.Net.IPEndPoint> to establish a default remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-311">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-311">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5d8ed-312">
            <paramref name="endPoint" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-312">
              <paramref name="endPoint" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5d8ed-313">
            <see cref="T:System.Net.Sockets.UdpClient" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-313">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress addr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress addr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (addr As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ addr, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress * int -&gt; unit" Usage="udpClient.Connect (addr, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addr">
          <span data-ttu-id="5d8ed-314">데이터를 보낼 원격 호스트의 <see cref="T:System.Net.IPAddress" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-314">The <see cref="T:System.Net.IPAddress" /> of the remote host to which you intend to send data.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="5d8ed-315">데이터를 보낼 포트 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-315">The port number to which you intend send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-316">지정된 IP 주소와 포트 번호를 사용하여 기본 원격 호스트를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-316">Establishes a default remote host using the specified IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-317"><xref:System.Net.Sockets.UdpClient.Connect%2A> 에 지정 된 값을 사용 하 여 기본 원격 호스트를 설정 하는 메서드를 `addr` 및 `port` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-317">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `addr` and `port` parameters.</span></span> <span data-ttu-id="5d8ed-318">설정 되 면 각 호출에서 원격 호스트를 지정할 필요가 없습니다를 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-318">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="5d8ed-319">기본 원격 호스트를 설정 하는 것은 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-319">Establishing a default remote host is optional.</span></span> <span data-ttu-id="5d8ed-320">기본 원격 호스트를 지정 하면 해당 호스트에 제한 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-320">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="5d8ed-321">다른 원격 호스트에 데이터 그램을 보내려는 경우에 다른 호출을 확인 해야 합니다 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드를 만들거나 다른 <xref:System.Net.Sockets.UdpClient> 기본 원격 호스트 하지 않고 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-321">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="5d8ed-322">기본 원격을 사용 하도록 설정한 경우 호스트 하는 원격 호스트를 호출 하는 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드를 <xref:System.Net.Sockets.UdpClient.Send%2A> 시킵니다를 <xref:System.Net.Sockets.SocketException>입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-322">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="5d8ed-323">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-323">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-324">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-324">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="5d8ed-325">호출 하는 경우는 <xref:System.Net.Sockets.Socket.Connect%2A> 메서드를 지정된 된 기본 삭제 됩니다 이외의 주소에서 도착 하는 모든 데이터 그램입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-325">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="5d8ed-326">기본 원격 호스트에서 상속 하는 경우가 아니면이 메서드를 사용 하 여 브로드캐스트 주소를 설정할 수 없습니다 <xref:System.Net.Sockets.UdpClient>, 클라이언트 메서드를 사용 하 여 기본 가져올 <xref:System.Net.Sockets.Socket>, 소켓 옵션을 설정 하 고 <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-326">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="5d8ed-327">그러나 수, 기본 브로드캐스트 데이터 브로드캐스트 주소, 255.255.255.255를 지정 하는 경우 <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> 를 호출 하는 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-327">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="5d8ed-328">사용 하도록 되돌릴 수 응용 프로그램에 브로드캐스트 주소 보다 정교가 필요한 경우는 <xref:System.Net.Sockets.Socket> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-328">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-329">UDP 프로토콜은 연결 없는 프로토콜의 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-329">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="5d8ed-330">호출 하지 마십시오는 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드 멀티 캐스팅 된 데이터 그램을 수신 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-330">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-331">다음 예에서는 원격 호스트와 연결 된 IP 주소와 포트 번호를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-331">The following example uses an IP address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5d8ed-332">
            <see cref="T:System.Net.Sockets.UdpClient" />가 닫혀 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-332">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5d8ed-333">
            <paramref name="addr" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-333">
              <paramref name="addr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5d8ed-334">
            <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-334">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-335">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-335">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : string * int -&gt; unit" Usage="udpClient.Connect (hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="5d8ed-336">데이터를 보낼 원격 호스트의 DNS 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-336">The DNS name of the remote host to which you intend send data.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="5d8ed-337">데이터를 보낼 원격 호스트의 포트 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-337">The port number on the remote host to which you intend to send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-338">지정된 호스트 이름과 포트 번호를 사용하여 기본 원격 호스트를 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-338">Establishes a default remote host using the specified host name and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-339"><xref:System.Net.Sockets.UdpClient.Connect%2A> 에 지정 된 값을 사용 하 여 기본 원격 호스트를 설정 하는 메서드를 `port` 및 `hostname` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-339">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `port` and `hostname` parameters.</span></span> <span data-ttu-id="5d8ed-340">설정 되 면 각 호출에서 원격 호스트를 지정할 필요가 없습니다를 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-340">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="5d8ed-341">기본 원격 호스트를 설정 하는 것은 선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-341">Establishing a default remote host is optional.</span></span> <span data-ttu-id="5d8ed-342">기본 원격 호스트를 지정 하면 해당 호스트에 제한 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-342">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="5d8ed-343">다른 원격 호스트에 데이터 그램을 보내려는 경우에 다른 호출을 확인 해야 합니다 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드를 만들거나 다른 <xref:System.Net.Sockets.UdpClient> 기본 원격 호스트 하지 않고 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-343">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span>  
  
 <span data-ttu-id="5d8ed-344">기본 원격을 사용 하도록 설정한 경우 호스트 하는 원격 호스트를 호출 하는 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드를 <xref:System.Net.Sockets.UdpClient.Send%2A> 시킵니다를 <xref:System.Net.Sockets.SocketException>입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-344">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="5d8ed-345">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-345">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-346">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-346">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="5d8ed-347">호출 하는 경우는 <xref:System.Net.Sockets.Socket.Connect%2A> 메서드를 지정된 된 기본 삭제 됩니다 이외의 주소에서 도착 하는 모든 데이터 그램입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-347">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="5d8ed-348">기본 원격 호스트에서 상속 하는 경우가 아니면이 메서드를 사용 하 여 브로드캐스트 주소를 설정할 수 없습니다 <xref:System.Net.Sockets.UdpClient>, 클라이언트 메서드를 사용 하 여 기본 가져올 <xref:System.Net.Sockets.Socket>, 소켓 옵션을 설정 하 고 <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-348">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="5d8ed-349">그러나 수, 기본 브로드캐스트 데이터 브로드캐스트 주소, 255.255.255.255를 지정 하는 경우 <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> 를 호출 하는 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-349">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="5d8ed-350">사용 하도록 되돌릴 수 응용 프로그램에 브로드캐스트 주소 보다 정교가 필요한 경우는 <xref:System.Net.Sockets.Socket> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-350">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-351">UDP 프로토콜은 연결 없는 프로토콜의 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드를 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-351">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="5d8ed-352">호출 하지 마십시오는 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드 멀티 캐스팅 된 데이터 그램을 수신 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-352">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-353">다음 예제에서는 원격 호스트에 연결할 호스트 이름과 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-353">The following example uses the host name and port number to connect to a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5d8ed-354">
            <see cref="T:System.Net.Sockets.UdpClient" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-354">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5d8ed-355">
            <paramref name="port" />가 <see cref="F:System.Net.IPEndPoint.MinPort" />와 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 사이에 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-355">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-356">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-356">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5d8ed-357">
            <see cref="T:System.Net.Sockets.UdpClient" />에서 사용하는 관리되는 리소스 및 관리되지 않는 리소스를 해제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-357">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="udpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="5d8ed-358">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-358">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-359">
            <see cref="T:System.Net.Sockets.UdpClient" />에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-359">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-360">이 메서드는 공용 `Dispose()` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-360">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="5d8ed-361">`Dispose()` 보호 된 호출 `Dispose(Boolean)` 메서드를 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-361">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="5d8ed-362"><xref:System.Object.Finalize%2A> 호출 `Dispose` 사용 하 여 `disposing` 로 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-362"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="5d8ed-363">경우는 `disposing` 매개 변수가 true 이면이 메서드는 관리 되는 개체가 보유 한 모든 리소스를 해제이 <xref:System.Net.Sockets.UdpClient> 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-363">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.UdpClient> references.</span></span> <span data-ttu-id="5d8ed-364">이 메서드는 참조되는 각 개체의 `Dispose()` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-364">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5d8ed-365">
            <para>
              <see langword="Dispose" /> 다른 개체에서 여러 번 호출할 수 있습니다. 재정의 하는 경우 <see langword="Dispose(Boolean)" /> 대 한 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 해야 <see langword="Dispose" />합니다. 구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />를 참조 하세요 [Dispose 메서드 구현](~/docs/standard/garbage-collection/implementing-dispose.md)합니다.  에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />를 참조 하십시오 [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md) 및 [Finalize 메서드 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-365">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DontFragment">
      <MemberSignature Language="C#" Value="public bool DontFragment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DontFragment" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.DontFragment" />
      <MemberSignature Language="VB.NET" Value="Public Property DontFragment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DontFragment { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DontFragment : bool with get, set" Usage="System.Net.Sockets.UdpClient.DontFragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d8ed-366">
            <see cref="T:System.Boolean" />에서 IP(인터넷 프로토콜) 데이터그램의 조각화를 허용하는지 여부를 나타내는 <see cref="T:System.Net.Sockets.UdpClient" /> 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-366">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows Internet Protocol (IP) datagrams to be fragmented.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5d8ed-367">
            <see cref="T:System.Net.Sockets.UdpClient" />에서 데이터그램 조각화를 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-367">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows datagram fragmentation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5d8ed-368">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-368">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-369">데이터 그램 크기는 최대 전송 단위 (MTU) 전송 매체의 초과 하는 경우 조각화가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-369">Datagrams require fragmentation when their size exceeds the Maximum Transfer Unit (MTU) of the transmission medium.</span></span> <span data-ttu-id="5d8ed-370">송신 호스트 하거나 중간 라우터 하 여 데이터 그램을 조각화 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-370">Datagrams may be fragmented by the sending host or by an intermediate router.</span></span> <span data-ttu-id="5d8ed-371">데이터 그램을 조각화 수 해야 하는 경우 및 <xref:System.Net.Sockets.Socket.DontFragment%2A> 옵션 설정, 데이터 그램 무시 되 고 데이터 그램의 보낸 사람에 게 제어 메시지 ICMP (Internet Protocol) 오류 메시지가 보내집니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-371">If a datagram must be fragmented, and the <xref:System.Net.Sockets.Socket.DontFragment%2A> option is set, the datagram is discarded, and an Internet Control Message Protocol (ICMP) error message is sent back to the sender of the datagram.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-372">다음 코드 예제에서는 <xref:System.Net.Sockets.Socket.DontFragment%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-372">The following code example shows the use of the <xref:System.Net.Sockets.Socket.DontFragment%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="5d8ed-373">이 속성은 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 플래그나 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 플래그를 사용하는 소켓에만 설정할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-373">This property can be set only for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DropMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5d8ed-374">멀티캐스트 그룹을 나갑니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-374">Leaves a multicast group.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberSignature Language="F#" Value="member this.DropMulticastGroup : System.Net.IPAddress -&gt; unit" Usage="udpClient.DropMulticastGroup multicastAddr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="5d8ed-375">나갈 멀티캐스트 그룹의 <see cref="T:System.Net.IPAddress" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-375">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-376">멀티캐스트 그룹을 나갑니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-376">Leaves a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-377">합니다 <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> 메서드를 삭제 합니다 <xref:System.Net.Sockets.UdpClient> 로 식별 된 멀티 캐스트 그룹에서 <xref:System.Net.IPAddress>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-377">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="5d8ed-378">호출 후의 <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> 메서드를 기본 <xref:System.Net.Sockets.Socket> 라우터에서 멀티 캐스트 그룹에서 제거 하면 라우터는 그룹 관리 IGMP (Internet Protocol) 패킷을 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-378">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="5d8ed-379">이후에 <xref:System.Net.Sockets.UdpClient> 작고 인출 그룹에서 더 이상 됩니다 해당 그룹에 전송 된 데이터 그램을 받을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-379">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-380">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-380">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-381">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-381">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-382">다음 예제에서는 멀티 캐스트 주소를 제공 하 여 멀티 캐스트 그룹을 삭제 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-382">The following example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5d8ed-383">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-383">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-384">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-384">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5d8ed-385">IP 주소가 소켓의 주소 지정 체계를 정의하는 <see cref="T:System.Net.Sockets.AddressFamily" /> 값과 호환되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-385">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5d8ed-386">
            <paramref name="multicastAddr" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-386">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr, int ifindex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr, int32 ifindex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress, ifindex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr, int ifindex);" />
      <MemberSignature Language="F#" Value="member this.DropMulticastGroup : System.Net.IPAddress * int -&gt; unit" Usage="udpClient.DropMulticastGroup (multicastAddr, ifindex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="ifindex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="5d8ed-387">나갈 멀티캐스트 그룹의 <see cref="T:System.Net.IPAddress" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-387">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span>
          </span>
        </param>
        <param name="ifindex">
          <span data-ttu-id="5d8ed-388">나갈 멀티캐스트 그룹의 로컬 주소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-388">The local address of the multicast group to leave.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-389">멀티캐스트 그룹을 나갑니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-389">Leaves a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-390">합니다 <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> 메서드를 삭제 합니다 <xref:System.Net.Sockets.UdpClient> 로 식별 된 멀티 캐스트 그룹에서 <xref:System.Net.IPAddress>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-390">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="5d8ed-391">호출 후의 <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> 메서드를 기본 <xref:System.Net.Sockets.Socket> 라우터에서 멀티 캐스트 그룹에서 제거 하면 라우터는 그룹 관리 IGMP (Internet Protocol) 패킷을 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-391">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="5d8ed-392">이후에 <xref:System.Net.Sockets.UdpClient> 작고 인출 그룹에서 더 이상 됩니다 해당 그룹에 전송 된 데이터 그램을 받을 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-392">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-393">수신 되 면를 <xref:System.Net.Sockets.SocketException>를 사용 하 여를 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 속성을 특정 오류 코드를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-393">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-394">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-394">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-395">다음 코드 예제에서는 멀티 캐스트 주소를 제공 하 여 멀티 캐스트 그룹을 삭제 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-395">The following code example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5d8ed-396">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-396">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-397">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-397">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5d8ed-398">IP 주소가 소켓의 주소 지정 체계를 정의하는 <see cref="T:System.Net.Sockets.AddressFamily" /> 값과 호환되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-398">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5d8ed-399">
            <paramref name="multicastAddr" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-399">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="EnableBroadcast">
      <MemberSignature Language="C#" Value="public bool EnableBroadcast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableBroadcast" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.EnableBroadcast" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableBroadcast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableBroadcast { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableBroadcast : bool with get, set" Usage="System.Net.Sockets.UdpClient.EnableBroadcast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d8ed-400">
            <see cref="T:System.Boolean" />가 브로드캐스트 패킷을 보내거나 받을 수 있는지 여부를 지정하는 <see cref="T:System.Net.Sockets.UdpClient" /> 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-400">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> may send or receive broadcast packets.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5d8ed-401">
            <see cref="T:System.Net.Sockets.UdpClient" />이 브로드캐스트 패킷을 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-401">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows broadcast packets; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5d8ed-402">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-402">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-403">브로드캐스트는 특정 서브넷으로 제한 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-403">Broadcasting is limited to a specific subnet.</span></span> <span data-ttu-id="5d8ed-404">255.255.255.255;로 패킷을 전송 하 여 로컬 서브넷에 브로드캐스트할 수 있습니다. 또는 네트워크의 호스트 부분에 설정 된 모든 비트를 사용 하 여 IP (인터넷 프로토콜) 주소 부분은 지정 된 브로드캐스트 주소로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-404">You can broadcast to your local subnet by sending a packet to 255.255.255.255; or, you can use the directed broadcast address, which is the network portion of an Internet Protocol (IP) address with all bits set in the host portion.</span></span> <span data-ttu-id="5d8ed-405">예를 들어, 사용자의 IP 주소는 처음 세 옥텟은 네트워크 부분이와 호스트 부분 클래스 C 주소를 이어서 마지막 8 진수 192.168.1.40 인 경우에 지정 된 브로드캐스트 주소로 192.168.1.255입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-405">For example, if your IP address is 192.168.1.40 (a Class C address, with the network portion as the first three octets, and the host portion is the last octet), your directed broadcast address is 192.168.1.255.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-406">다음 코드 예제에서는 <xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-406">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public byte[] EndReceive (IAsyncResult asyncResult, ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EndReceive(class System.IAsyncResult asyncResult, class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (asyncResult As IAsyncResult, ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EndReceive(IAsyncResult ^ asyncResult, System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.EndReceive : IAsyncResult *  -&gt; byte[]" Usage="udpClient.EndReceive (asyncResult, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="5d8ed-407">
            <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />를 호출할 때 반환되는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-407">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</span>
          </span>
        </param>
        <param name="remoteEP">
          <span data-ttu-id="5d8ed-408">지정된 원격 엔드포인트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-408">The specified remote endpoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-409">보류 중인 비동기 수신을 끝냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-409">Ends a pending asynchronous receive.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5d8ed-410">성공하면 데이터그램 데이터가 포함된 바이트 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-410">If successful, an array of bytes that contains datagram data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-411">이 메서드 차단 작업이 때까지 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-411">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="5d8ed-412">이 작업을 동기적으로 수행 하려면 사용 된 <xref:System.Net.Sockets.UdpClient.Receive%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-412">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-413">다음 코드 예제에서는 <xref:System.Net.Sockets.UdpClient.BeginSend%2A> 서버 응답의 비동기적으로 받는 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-413">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous receive of a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5d8ed-414">
            <paramref name="asyncResult" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-414">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5d8ed-415">
            <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> 메서드를 호출했지만 <paramref name="asyncResult" />가 반환되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-415">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5d8ed-416">
            <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" />가 비동기 읽기를 위해 이미 호출된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-416">
              <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> was previously called for the asynchronous read.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-417">내부 <see cref="T:System.Net.Sockets.Socket" />에 액세스하려고 시도하는 동안 오류가 발생한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-417">An error occurred when attempting to access the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5d8ed-418">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-418">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndSend">
      <MemberSignature Language="C#" Value="public int EndSend (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSend(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSend (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSend(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndSend : IAsyncResult -&gt; int" Usage="udpClient.EndSend asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="5d8ed-419">
            <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />를 호출할 때 반환되는 <see cref="T:System.IAsyncResult" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-419">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-420">보류 중인 비동기 보내기를 끝냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-420">Ends a pending asynchronous send.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5d8ed-421">메서드가 성공할 경우 <see cref="T:System.Net.Sockets.UdpClient" />에 보낸 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-421">If successful, the number of bytes sent to the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-422">이 메서드 차단 작업이 때까지 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-422">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="5d8ed-423">이 작업을 동기적으로 수행 하려면 사용 된 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-423">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-424">다음 코드 예제에서는 <xref:System.Net.Sockets.UdpClient.BeginSend%2A> 서버 요청의 비동기 보내기 작업을 완료 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-424">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous send of a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5d8ed-425">
            <paramref name="asyncResult" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-425">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5d8ed-426">
            <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 메서드를 호출했지만 <paramref name="asyncResult" />가 반환되지 않은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-426">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5d8ed-427">
            <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" />가 비동기 읽기를 위해 이미 호출된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-427">
              <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> was previously called for the asynchronous read.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-428">내부 소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-428">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5d8ed-429">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-429">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.UdpClient.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d8ed-430">
            <see cref="T:System.Boolean" />가 하나의 포트를 하나의 클라이언트에서만 사용하도록 허용하는지 여부를 지정하는 <see cref="T:System.Net.Sockets.UdpClient" /> 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-430">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5d8ed-431">
            <see cref="T:System.Net.Sockets.UdpClient" />에서 특정 포트를 하나의 클라이언트에서만 사용하도록 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-431">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5d8ed-432">Windows Server 2003 및 Windows XP 서비스 팩 2 이상에서는 기본값이 <see langword="true" />이고, 다른 모든 버전에서는 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-432">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-433">기본적으로 여러 클라이언트가 특정 포트를 사용할 수 있습니다. 그러나 클라이언트 중 하나만 포트로 전송 되는 네트워크 트래픽에 대 한 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-433">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="5d8ed-434">사용할 수는 <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> 여러 클라이언트가 특정 포트를 사용 하지 않도록 설정 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-434">You can use the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="5d8ed-435">기본 소켓 클라이언트 포트에 바인딩된이 속성을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-435">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="5d8ed-436">호출 하는 경우 <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>를 <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>, 또는 <xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>, 클라이언트 포트 생성자의 부작용으로 바인딩되어 있고 설정할 수 없습니다는 <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> 속성</span><span class="sxs-lookup"><span data-stu-id="5d8ed-436">If you call <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>, or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>, the client port is bound as a side effect of the constructor, and you cannot subsequently set the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-437">다음 코드 예제에서는 <xref:System.Net.Sockets.UdpClient>를 가져오고 설정 하 고는 <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-437">The following code example creates a <xref:System.Net.Sockets.UdpClient>, and gets and sets the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-438">내부 소켓에 액세스하려고 시도하는 동안 오류가 발생한 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-438">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5d8ed-439">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-439">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!UdpClient ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="udpClient.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="JoinMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5d8ed-440">멀티캐스트 그룹에 <see cref="T:System.Net.Sockets.UdpClient" />를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-440">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : System.Net.IPAddress -&gt; unit" Usage="udpClient.JoinMulticastGroup multicastAddr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="5d8ed-441">가입할 그룹의 멀티캐스트 <see cref="T:System.Net.IPAddress" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-441">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-442">멀티캐스트 그룹에 <see cref="T:System.Net.Sockets.UdpClient" />를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-442">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-443"><xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> 메서드를 구독 합니다 <xref:System.Net.Sockets.UdpClient> 사용 하 여 지정 된 멀티 캐스트 그룹에 <xref:System.Net.IPAddress>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-443">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="5d8ed-444">호출 후의 <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> 메서드를 기본 <xref:System.Net.Sockets.Socket> 라우터에서 멀티 캐스트 그룹 멤버 자격을 요청 하는 그룹 관리 IGMP (Internet Protocol) 패킷을 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-444">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="5d8ed-445">멀티 캐스트 주소 범위가 224.0.0.0에서 239.255.255.255 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-445">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="5d8ed-446">이 범위를 벗어나는 주소를 지정 하는 경우 또는 요청이 수행 됩니다 라우터가 없는 경우 멀티 캐스트 사용 하도록 설정 <xref:System.Net.Sockets.UdpClient> 시킵니다는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-446">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="5d8ed-447">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-447">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-448">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-448">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span> <span data-ttu-id="5d8ed-449">한 번 합니다 <xref:System.Net.Sockets.UdpClient> 포함 된 멀티 캐스트 그룹의 구성원으로 라우터를 사용 하 여 지정 된 전송 멀티 데이터 그램을 받을 수 있게 됩니다 <xref:System.Net.IPAddress>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-449">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-450">만들어야 합니다를 <xref:System.Net.Sockets.UdpClient> , 멀티 캐스트 포트 번호를 사용 하 여이 고, 그렇지 됩니다 멀티 데이터 그램을 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-450">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number; otherwise, you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="5d8ed-451">호출 하지 마십시오는 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드 호출 하기 전에 <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> 메서드 또는 <xref:System.Net.Sockets.UdpClient.Receive%2A> 방법이 작동 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-451">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, or the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will not work.</span></span> <span data-ttu-id="5d8ed-452">데이터 그램을 보내려면 멀티 캐스트 IP 주소에 멀티 캐스트 그룹에 속한 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-452">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="5d8ed-453">멀티 캐스트 그룹에 합류 하기 전에 소켓 끝점 포트에 바인딩되어 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-453">Before joining a multicast group, make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="5d8ed-454">이렇게 하려면 포트 또는 끝점 매개 변수로 수락 하는 생성자 중 하나를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-454">You do that by calling one of the constructors that accept a port or an endpoint as a parameter.</span></span>  
  
 <span data-ttu-id="5d8ed-455">멀티 캐스팅 된 데이터 그램을 수신를 중지 하려면 호출을 <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> 메서드 제공를 <xref:System.Net.IPAddress> 올 인출 하려는 그룹의 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-455">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-456">IPv6의 경우 여러 멀티 캐스트 주소 범위에서 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-456">In the IPv6 case, there are several multicast address ranges you can choose from.</span></span> <span data-ttu-id="5d8ed-457">IETF RFC 2375를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-457">Please, refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-458">호출할 수 없습니다 <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> 에 <xref:System.Net.Sockets.UdpClient> 특정 로컬 포트 없이 생성 된 (즉, 합니다 <xref:System.Net.Sockets.UdpClient.%23ctor> 또는 <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> 생성자).</span><span class="sxs-lookup"><span data-stu-id="5d8ed-458">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-459">다음 코드 예제에는 멀티 캐스트 주소를 제공 하 여 멀티 캐스트 그룹을 조인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-459">The following code example demonstrates how to join a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#1)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5d8ed-460">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-460">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-461">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-461">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5d8ed-462">IP 주소가 소켓의 주소 지정 체계를 정의하는 <see cref="T:System.Net.Sockets.AddressFamily" /> 값과 호환되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-462">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (int ifindex, System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(int32 ifindex, class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (ifindex As Integer, multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(int ifindex, System::Net::IPAddress ^ multicastAddr);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : int * System.Net.IPAddress -&gt; unit" Usage="udpClient.JoinMulticastGroup (ifindex, multicastAddr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifindex" Type="System.Int32" />
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="ifindex">
          <span data-ttu-id="5d8ed-463">멀티캐스트 그룹을 연결할 로컬 IP 주소에 연결된 인터페이스 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-463">The interface index associated with the local IP address on which to join the multicast group.</span>
          </span>
        </param>
        <param name="multicastAddr">
          <span data-ttu-id="5d8ed-464">가입할 그룹의 멀티캐스트 <see cref="T:System.Net.IPAddress" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-464">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-465">멀티캐스트 그룹에 <see cref="T:System.Net.Sockets.UdpClient" />를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-465">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-466">멀티 캐스트 그룹에 합류 하기 전에 소켓 포트 또는 끝점에 바인딩되어 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-466">Before joining a multicast group, be sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="5d8ed-467">포트 또는 끝점을 매개 변수로 허용 하는 생성자 중 하나를 호출 하 여이 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-467">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
 <span data-ttu-id="5d8ed-468">`infindex` 매개 변수를 사용 하는 동일한 링크에 있는 하드웨어 인터페이스를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-468">The `infindex` parameter is used to identify a hardware interface on the same link.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-469">여러 멀티 캐스트 주소 범위에서 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-469">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="5d8ed-470">IETF RFC 2375 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-470">Refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-471">호출할 수 없습니다 <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> 에 <xref:System.Net.Sockets.UdpClient> 특정 로컬 포트 없이 생성 된 (즉, 합니다 <xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType> 또는 <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> 생성자).</span><span class="sxs-lookup"><span data-stu-id="5d8ed-471">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> constructor).</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#5)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5d8ed-472">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-472">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-473">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-473">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, int timeToLive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, int32 timeToLive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, timeToLive As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, int timeToLive);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : System.Net.IPAddress * int -&gt; unit" Usage="udpClient.JoinMulticastGroup (multicastAddr, timeToLive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="timeToLive" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="5d8ed-474">가입할 멀티캐스트 그룹의 <see cref="T:System.Net.IPAddress" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-474">The <see cref="T:System.Net.IPAddress" /> of the multicast group to join.</span>
          </span>
        </param>
        <param name="timeToLive">
          <span data-ttu-id="5d8ed-475">라우터 홉 수 단위로 측정된 TTL(Time to Live)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-475">The Time to Live (TTL), measured in router hops.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-476">지정된 TTL(Time to Live)을 사용하여 멀티캐스트 그룹에 <see cref="T:System.Net.Sockets.UdpClient" />를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-476">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group with the specified Time to Live (TTL).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-477"><xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> 메서드를 구독 합니다 <xref:System.Net.Sockets.UdpClient> 사용 하 여 지정 된 멀티 캐스트 그룹에 <xref:System.Net.IPAddress>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-477">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="5d8ed-478">호출 후의 <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> 메서드를 기본 <xref:System.Net.Sockets.Socket> 라우터에서 멀티 캐스트 그룹 멤버 자격을 요청 하는 그룹 관리 IGMP (Internet Protocol) 패킷을 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-478">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="5d8ed-479">멀티 캐스트 주소 범위가 224.0.0.0에서 239.255.255.255 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-479">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="5d8ed-480">이 범위를 벗어나는 주소를 지정 하는 경우 또는 요청이 수행 됩니다 라우터가 없는 경우 멀티 캐스트 사용 하도록 설정 <xref:System.Net.Sockets.UdpClient> 시킵니다는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-480">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="5d8ed-481">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-481">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-482">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-482">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span> <span data-ttu-id="5d8ed-483">`timeToLive` 라우터 홉 수 멀티 캐스팅 된 데이터 그램에 삭제 되기 전에 매개 변수를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-483">The `timeToLive` parameter specifies how many router hops will be allowed for a multicasted datagram before being discarded.</span></span> <span data-ttu-id="5d8ed-484">한 번 합니다 <xref:System.Net.Sockets.UdpClient> 포함 된 멀티 캐스트 그룹의 구성원으로 라우터를 사용 하 여 지정 된 전송 멀티 데이터 그램을 받을 수 있게 됩니다 <xref:System.Net.IPAddress>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-484">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-485">만들어야 합니다를 <xref:System.Net.Sockets.UdpClient> 캐스트 포트 번호를 사용 하 여 그렇지 않으면 됩니다 멀티 수입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-485">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number otherwise you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="5d8ed-486">호출 하지 마십시오 합니다 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드를 호출 하기 전에 <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> 메서드 또는 receive 메서드가 작동 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-486">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method or the receive method will not work.</span></span> <span data-ttu-id="5d8ed-487">데이터 그램을 보내려면 멀티 캐스트 IP 주소에 멀티 캐스트 그룹에 속한 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-487">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="5d8ed-488">멀티 캐스트 그룹에 가입 하기 전에 소켓 끝점 포트에 바인딩되어 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-488">Before joining a multicast group make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="5d8ed-489">이렇게 하려면 끝점 또는 포트를 매개 변수로 수락 하는 생성자 중 하나를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-489">You do that by calling one of the constructors that accept as parameter a port or an endpoint.</span></span>  
  
 <span data-ttu-id="5d8ed-490">멀티 캐스팅 된 데이터 그램을 수신를 중지 하려면 호출을 <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> 메서드 제공를 <xref:System.Net.IPAddress> 올 인출 하려는 그룹의 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-490">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-491">호출할 수 없습니다 <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> 에 <xref:System.Net.Sockets.UdpClient> 특정 로컬 포트 없이 생성 된 (즉, 합니다 <xref:System.Net.Sockets.UdpClient.%23ctor> 또는 <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> 생성자).</span><span class="sxs-lookup"><span data-stu-id="5d8ed-491">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-492">다음 예제에서는 두 개의 매개 변수, 멀티 캐스트 주소를 TTL을 나타내는 숫자를 제공 하 여 멀티 캐스트 그룹을 조인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-492">The following example demonstrates how to join a multicast group by providing two parameters, a multicast address, and a number that represents the TTL.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5d8ed-493">제공된 TTL이 0에서 255 사이에 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-493">The TTL provided is not between 0 and 255</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5d8ed-494">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-494">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-495">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-495">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5d8ed-496">
            <paramref name="multicastAddr" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-496">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5d8ed-497">IP 주소가 소켓의 주소 지정 체계를 정의하는 <see cref="T:System.Net.Sockets.AddressFamily" /> 값과 호환되지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-497">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, System.Net.IPAddress localAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, class System.Net.IPAddress localAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, localAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, System::Net::IPAddress ^ localAddress);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : System.Net.IPAddress * System.Net.IPAddress -&gt; unit" Usage="udpClient.JoinMulticastGroup (multicastAddr, localAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="localAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="5d8ed-498">가입할 그룹의 멀티캐스트 <see cref="T:System.Net.IPAddress" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-498">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <param name="localAddress">
          <span data-ttu-id="5d8ed-499">로컬 <see cref="T:System.Net.IPAddress" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-499">The local <see cref="T:System.Net.IPAddress" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-500">멀티캐스트 그룹에 <see cref="T:System.Net.Sockets.UdpClient" />를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-500">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-501">멀티 캐스트 그룹에 조인 하기 전에 소켓 포트 또는 끝점에 바인딩되어 있음을 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-501">Before you join a multicast group, be sure that the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="5d8ed-502">포트 또는 끝점을 매개 변수로 허용 하는 생성자 중 하나를 호출 하 여이 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-502">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-503">여러 멀티 캐스트 주소 범위에서 선택할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-503">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="5d8ed-504">IETF RFC 2375에서 찾을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-504">You can find them in the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-505">호출할 수 없습니다 <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> 에 <xref:System.Net.Sockets.UdpClient> 특정 로컬 포트 없이 생성 된 (즉, 합니다 <xref:System.Net.Sockets.UdpClient.%23ctor> 또는 <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> 생성자).</span><span class="sxs-lookup"><span data-stu-id="5d8ed-505">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-506">다음 코드 예제에서는 <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-506">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.UdpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5d8ed-507">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-507">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-508">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-508">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.MulticastLoopback" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MulticastLoopback { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastLoopback : bool with get, set" Usage="System.Net.Sockets.UdpClient.MulticastLoopback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d8ed-509">나가는 멀티캐스트 패킷을 보내는 응용 프로그램에 전달할지 여부를 지정하는 <see cref="T:System.Boolean" /> 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-509">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether outgoing multicast packets are delivered to the sending application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5d8ed-510">
            <see cref="T:System.Net.Sockets.UdpClient" />이 나가는 멀티캐스트 패킷을 받으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-510">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> receives outgoing multicast packets; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-511">멀티 캐스트는 인터넷에서 다 대 다 통신을 위한 확장 가능한 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-511">Multicast is a scalable method for many-to-many communication on the Internet.</span></span> <span data-ttu-id="5d8ed-512">프로세스 멀티 캐스트 주소를 구독 하는 경우 모든 패킷을 전송한 프로세스 멀티 캐스트 주소에 등록 된 다른 모든 프로세스에 의해 수신 된 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-512">If a process subscribes to a multicast address, any packets sent by that process are received by every other process that has subscribed to the multicast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-513">다음 코드 예제에서는 <xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-513">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.UdpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public byte[] Receive (ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Receive(class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Receive(System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.Receive :  -&gt; byte[]" Usage="udpClient.Receive remoteEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="remoteEP">
          <span data-ttu-id="5d8ed-514">데이터를 보낸 원격 호스트를 나타내는 <see cref="T:System.Net.IPEndPoint" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-514">An <see cref="T:System.Net.IPEndPoint" /> that represents the remote host from which the data was sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-515">원격 호스트가 보낸 UDP 데이터그램을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-515">Returns a UDP datagram that was sent by a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5d8ed-516">데이터그램 데이터를 포함하는 <see cref="T:System.Byte" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-516">An array of type <see cref="T:System.Byte" /> that contains datagram data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-517"><xref:System.Net.Sockets.UdpClient.Receive%2A> 메서드는 데이터 그램을 원격 호스트에서 도착할 때까지 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-517">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method will block until a datagram arrives from a remote host.</span></span> <span data-ttu-id="5d8ed-518">데이터를 사용할 수 있으면는 <xref:System.Net.Sockets.UdpClient.Receive%2A> 메서드는 첫 번째 큐에 넣은 데이터 그램을 읽고 데이터 부분을 바이트 배열로 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-518">When data is available, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will read the first enqueued datagram and return the data portion as a byte array.</span></span> <span data-ttu-id="5d8ed-519">이 메서드는 `remoteEP` 매개 변수는 <xref:System.Net.IPAddress> 및 보낸 사람의 포트 번호입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-519">This method populates the `remoteEP` parameter with the <xref:System.Net.IPAddress> and port number of the sender.</span></span>  
  
 <span data-ttu-id="5d8ed-520">기본 원격 호스트를 지정 하는 경우는 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드는 <xref:System.Net.Sockets.UdpClient.Receive%2A> 메서드 데이터 그램만 해당 호스트에서 허용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-520">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will accept datagrams from that host only.</span></span> <span data-ttu-id="5d8ed-521">다른 모든 데이터 그램 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-521">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="5d8ed-522">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-522">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-523">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-523">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-524">멀티 캐스팅 된 데이터 그램을 수신 하려는 경우를 호출 하지 마십시오 합니다 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드를 호출 하기 전에 <xref:System.Net.Sockets.UdpClient.Receive%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-524">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="5d8ed-525"><xref:System.Net.Sockets.UdpClient> 수신 하는 데 캐스트 포트 번호를 사용 하 여 데이터 그램을 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-525">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-526">다음 예제는 <xref:System.Net.Sockets.UdpClient.Receive%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-526">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="5d8ed-527"><xref:System.Net.Sockets.UdpClient.Receive%2A> 메서드는 메시지를 받을 때까지 실행을 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-527">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until it receives a message.</span></span> <span data-ttu-id="5d8ed-528">사용 하 여 합니다 <xref:System.Net.IPEndPoint> 전달할 <xref:System.Net.Sockets.UdpClient.Receive%2A>, 응답 호스트의 id가 노출 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-528">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5d8ed-529">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-529">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-530">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-530">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.IPAddress" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;valuetype System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.ReceiveAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveAsync () As Task(Of UdpReceiveResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::UdpReceiveResult&gt; ^ ReceiveAsync();" />
      <MemberSignature Language="F#" Value="member this.ReceiveAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt;" Usage="udpClient.ReceiveAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5d8ed-531">원격 호스트가 보낸 UDP 데이터그램을 비동기적으로 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-531">Returns a UDP datagram asynchronously that was sent by a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5d8ed-532">
            <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-532">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="5d8ed-533">비동기 작업(operation)을 나타내는 작업(task) 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-533">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-534">이 작업을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-534">This operation will not block.</span></span> <span data-ttu-id="5d8ed-535">반환 된 <xref:System.Threading.Tasks.Task%601>> 개체는 UDP 패킷에 수신한 후 완료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-535">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the UDP packet has been received.</span></span>  
  
 <span data-ttu-id="5d8ed-536">기본 원격 호스트를 지정 하는 경우는 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드를이 메서드는 데이터 그램만 해당 호스트에서 수락 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-536">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, this method will accept datagrams from that host only.</span></span> <span data-ttu-id="5d8ed-537">다른 모든 데이터 그램 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-537">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="5d8ed-538">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-538">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-539">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-539">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="5d8ed-540">멀티 캐스팅 된 데이터 그램을 수신 하려는 경우를 호출 하지 마십시오는 <xref:System.Net.Sockets.UdpClient.Connect%2A> 이 메서드를 호출 하기 전에 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-540">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling this method.</span></span> <span data-ttu-id="5d8ed-541"><xref:System.Net.Sockets.UdpClient> 수신 하는 데 캐스트 포트 번호를 사용 하 여 데이터 그램을 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-541">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5d8ed-542">내부 <see cref="T:System.Net.Sockets.Socket" />이 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-542">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-543">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-543">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5d8ed-544">원격 호스트에 UDP 데이터그램을 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-544">Sends a UDP datagram to a remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int -&gt; int" Usage="udpClient.Send (dgram, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="5d8ed-545">보내려는 UDP 데이터그램을 바이트 배열로 나타내는 <see cref="T:System.Byte" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-545">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="5d8ed-546">데이터그램의 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-546">The number of bytes in the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-547">원격 호스트에 UDP 데이터그램을 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-547">Sends a UDP datagram to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5d8ed-548">보낸 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-548">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-549">이 오버 로드에 설정 된 원격 호스트에 데이터 그램을 보냅니다는 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드와 보낸 바이트 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-549">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and returns the number of bytes sent.</span></span> <span data-ttu-id="5d8ed-550">호출 하지 마십시오 <xref:System.Net.Sockets.UdpClient.Connect%2A> 이 오버 로드를 호출 하기 전에 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드는 throw를 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-550">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="5d8ed-551">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-551">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-552">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-552">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="5d8ed-553">다른 원격 호스트에 데이터 그램을 보내려는 경우 호출 해야 합니다 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드 원하는 원격 호스트를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-553">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="5d8ed-554">다른 중 하나를 사용 하 여 <xref:System.Net.Sockets.UdpClient.Send%2A> 브로드캐스트 주소에 데이터 그램을 보낼 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-554">Use either of the other <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-555">다음 예제는 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-555">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="5d8ed-556">이 오버 로드를 사용 하기 전에 기본 원격 호스트를 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-556">You must establish a default remote host prior to using this overload.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5d8ed-557">
            <paramref name="dgram" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-557">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5d8ed-558">
            <see cref="T:System.Net.Sockets.UdpClient" />가 이미 기본 원격 호스트를 설정한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-558">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5d8ed-559">
            <see cref="T:System.Net.Sockets.UdpClient" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-559">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-560">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-560">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int * System.Net.IPEndPoint -&gt; int" Usage="udpClient.Send (dgram, bytes, endPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="5d8ed-561">보내려는 UDP 데이터그램을 바이트 배열로 나타내는 <see cref="T:System.Byte" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-561">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send, represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="5d8ed-562">데이터그램의 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-562">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="5d8ed-563">데이터그램을 보낼 호스트와 포트를 나타내는 <see cref="T:System.Net.IPEndPoint" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-563">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-564">지정된 원격 엔드포인트에서 호스트에 UDP 데이터그램을 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-564">Sends a UDP datagram to the host at the specified remote endpoint.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5d8ed-565">보낸 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-565">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-566"><xref:System.Net.Sockets.UdpClient.Send%2A> 메서드는 지정된 된 끝점에 데이터 그램을 보냅니다 및 성공적으로 보낸 바이트 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-566">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the specified endpoint and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="5d8ed-567">이 오버 로드를 호출 하기 전에 먼저 만들어야 합니다를 <xref:System.Net.IPEndPoint> 데이터 그램이 배달할 수 원격 호스트의 IP 주소와 포트 번호를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-567">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="5d8ed-568">기본 브로드캐스트를 데이터 그램을 보낼 수 있습니다 주소, 255.255.255.255를 지정 하 여 <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> 에 대 한는 <xref:System.Net.IPAddress.Address%2A> 의 속성을 <xref:System.Net.IPEndPoint>입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-568">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="5d8ed-569">이 만든 후 <xref:System.Net.IPEndPoint>에 전달 합니다 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드를 `endPoint` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-569">After you have created this <xref:System.Net.IPEndPoint>, pass it to the <xref:System.Net.Sockets.UdpClient.Send%2A> method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="5d8ed-570">사용 하 여 다른 모든 브로드캐스트 주소 데이터 그램을 보내려는 경우는 <xref:System.Net.Sockets.UdpClient.Client%2A> 메서드 내부 <xref:System.Net.Sockets.Socket>, 소켓 옵션을 설정 하 고 <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-570">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5d8ed-571">사용 하 여 되돌릴 수 있습니다는 <xref:System.Net.Sockets.Socket> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-571">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-572">제공 하지는 `endPoint` 매개 변수를 사용 하 여 원격 호스트를 이미 설정한 경우이 메서드는 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-572">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="5d8ed-573">그럴 경우 합니다 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드는 throw를 <xref:System.Net.Sockets.SocketException>입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-573">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="5d8ed-574">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-574">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-575">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-575">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-576">다음 예제는 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-576">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="5d8ed-577">이 예제에서는 <xref:System.Net.IPEndPoint> 대상 호스트를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-577">This example uses an <xref:System.Net.IPEndPoint> to specify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5d8ed-578">
            <paramref name="dgram" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-578">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5d8ed-579">
            <see cref="T:System.Net.Sockets.UdpClient" />가 이미 기본 원격 호스트를 설정한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-579">
              <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5d8ed-580">
            <see cref="T:System.Net.Sockets.UdpClient" />가 닫혀 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-580">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-581">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-581">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, hostname As String, port As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int * string * int -&gt; int" Usage="udpClient.Send (dgram, bytes, hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="5d8ed-582">보내려는 UDP 데이터그램을 바이트 배열로 나타내는 <see cref="T:System.Byte" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-582">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="5d8ed-583">데이터그램의 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-583">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="5d8ed-584">데이터그램을 보내려는 원격 호스트의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-584">The name of the remote host to which you intend to send the datagram.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="5d8ed-585">통신하려는 원격 포트 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-585">The remote port number with which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-586">지정된 원격 호스트의 지정된 포트에 UDP 데이터그램을 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-586">Sends a UDP datagram to a specified port on a specified remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5d8ed-587">보낸 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-587">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-588"><xref:System.Net.Sockets.UdpClient.Send%2A> 메서드는 지정 되는 값을 데이터 그램을 보냅니다 합니다 `hostname` 및 `port` 매개 변수 및 반환 성공적으로 보낸 바이트 수입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-588">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the values specified by the `hostname` and `port` parameters and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="5d8ed-589">기본 브로드캐스트 주소에 대 한 "255.255.255.255"를 지정 하 여 데이터 그램을 보낼 수 있습니다는 `hostname` 매개 변수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-589">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="5d8ed-590">사용 하 여 다른 모든 브로드캐스트 주소 데이터 그램을 보내려는 경우는 <xref:System.Net.Sockets.UdpClient.Client%2A> 메서드 내부 <xref:System.Net.Sockets.Socket>, 소켓 옵션을 설정 하 고 <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-590">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5d8ed-591">사용 하 여 되돌릴 수 있습니다는 <xref:System.Net.Sockets.Socket> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-591">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5d8ed-592">호스트 이름을 지정 하지 않거나 포트 번호가이 메서드를 사용 하 여 원격 호스트를 이미 설정한 경우는 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-592">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="5d8ed-593">그럴 경우 합니다 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드는 throw를 <xref:System.Net.Sockets.SocketException>입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-593">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="5d8ed-594">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-594">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-595">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-595">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-596">다음 예제는 <xref:System.Net.Sockets.UdpClient.Send%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-596">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="5d8ed-597">이 예제에서는 대상 호스트를 식별 하는 호스트 이름과 포트 번호를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-597">This example uses a host name and a port number to identify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5d8ed-598">
            <paramref name="dgram" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-598">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5d8ed-599">
            <see cref="T:System.Net.Sockets.UdpClient" />가 이미 기본 원격 호스트를 설정한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-599">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5d8ed-600">
            <see cref="T:System.Net.Sockets.UdpClient" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-600">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-601">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-601">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5d8ed-602">UDP 데이터그램을 원격 호스트에 비동기적으로 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-602">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : byte[] * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="udpClient.SendAsync (datagram, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="5d8ed-603">보내려는 UDP 데이터그램을 바이트 배열로 나타내는 <see cref="T:System.Byte" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-603">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="5d8ed-604">데이터그램의 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-604">The number of bytes in the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-605">UDP 데이터그램을 원격 호스트에 비동기적으로 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-605">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5d8ed-606">
            <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-606">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-607">이 오버 로드에 설정 된 원격 호스트에 데이터 그램을 보냅니다는 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-607">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="5d8ed-608">호출 하지 마십시오 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드를이 오버 로드를 호출 하기 전에 throw 됩니다는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-608">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="5d8ed-609">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-609">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-610">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-610">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="5d8ed-611">다른 원격 호스트에 데이터 그램을 보내려는 경우 호출 해야 합니다 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드 원하는 원격 호스트를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-611">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="5d8ed-612">다른 중 하나를 사용 하 여 <xref:System.Net.Sockets.UdpClient.SendAsync%2A> 브로드캐스트 주소에 데이터 그램을 보낼 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-612">Use either of the other <xref:System.Net.Sockets.UdpClient.SendAsync%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5d8ed-613">
            <paramref name="dgram" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-613">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5d8ed-614">
            <see cref="T:System.Net.Sockets.UdpClient" />가 이미 기본 원격 호스트를 설정한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-614">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5d8ed-615">
            <see cref="T:System.Net.Sockets.UdpClient" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-615">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-616">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-616">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : byte[] * int * System.Net.IPEndPoint -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="udpClient.SendAsync (datagram, bytes, endPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="5d8ed-617">보내려는 UDP 데이터그램을 바이트 배열로 나타내는 <see cref="T:System.Byte" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-617">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="5d8ed-618">데이터그램의 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-618">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="5d8ed-619">데이터그램을 보낼 호스트와 포트를 나타내는 <see cref="T:System.Net.IPEndPoint" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-619">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-620">UDP 데이터그램을 원격 호스트에 비동기적으로 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-620">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5d8ed-621">
            <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-621">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-622">이 메서드는 지정된 된 끝점에 데이터 그램을 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-622">This method sends datagrams to the specified endpoint.</span></span> <span data-ttu-id="5d8ed-623">이 오버 로드를 호출 하기 전에 먼저 만들어야 합니다를 <xref:System.Net.IPEndPoint> 데이터 그램이 배달할 수 원격 호스트의 IP 주소와 포트 번호를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-623">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="5d8ed-624">기본 브로드캐스트를 데이터 그램을 보낼 수 있습니다 주소, 255.255.255.255를 지정 하 여 <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> 에 대 한는 <xref:System.Net.IPAddress.Address%2A> 의 속성을 <xref:System.Net.IPEndPoint>입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-624">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="5d8ed-625">이 만든 후 <xref:System.Net.IPEndPoint>,이 메서드로 전달 된 `endPoint` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-625">After you have created this <xref:System.Net.IPEndPoint>, pass it to this method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="5d8ed-626">사용 하 여 다른 모든 브로드캐스트 주소 데이터 그램을 보내려는 경우는 <xref:System.Net.Sockets.UdpClient.Client%2A> 메서드 내부 <xref:System.Net.Sockets.Socket>, 소켓 옵션을 설정 하 고 <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-626">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5d8ed-627">사용 하 여 되돌릴 수 있습니다는 <xref:System.Net.Sockets.Socket> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-627">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="5d8ed-628">제공 하지는 `endPoint` 매개 변수를 사용 하 여 원격 호스트를 이미 설정한 경우이 메서드는 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-628">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="5d8ed-629">이 메서드는 throw 하는 경우는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-629">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="5d8ed-630">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-630">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-631">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-631">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5d8ed-632">
            <paramref name="dgram" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-632">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5d8ed-633">
            <see cref="T:System.Net.Sockets.UdpClient" />가 이미 기본 원격 호스트를 설정한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-633">
              <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5d8ed-634">
            <see cref="T:System.Net.Sockets.UdpClient" />가 닫혀 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-634">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-635">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-635">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, hostname As String, port As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : byte[] * int * string * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="udpClient.SendAsync (datagram, bytes, hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="5d8ed-636">보내려는 UDP 데이터그램을 바이트 배열로 나타내는 <see cref="T:System.Byte" /> 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-636">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="5d8ed-637">데이터그램의 바이트 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-637">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="5d8ed-638">데이터그램을 보내려는 원격 호스트의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-638">The name of the remote host to which you intend to send the datagram.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="5d8ed-639">통신하려는 원격 포트 번호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-639">The remote port number with which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5d8ed-640">UDP 데이터그램을 원격 호스트에 비동기적으로 보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-640">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5d8ed-641">
            <see cref="T:System.Threading.Tasks.Task`1" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-641">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-642">이 메서드는 지정 되는 값을 데이터 그램을 전송 합니다 `hostname` 및 `port` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-642">This method sends datagrams to the values specified by the `hostname` and `port` parameters.</span></span> <span data-ttu-id="5d8ed-643">기본 브로드캐스트 주소에 대 한 "255.255.255.255"를 지정 하 여 데이터 그램을 보낼 수 있습니다는 `hostname` 매개 변수 값입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-643">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="5d8ed-644">사용 하 여 다른 모든 브로드캐스트 주소 데이터 그램을 보내려는 경우는 <xref:System.Net.Sockets.UdpClient.Client%2A> 메서드 내부 <xref:System.Net.Sockets.Socket>, 소켓 옵션을 설정 하 고 <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-644">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5d8ed-645">사용 하 여 되돌릴 수 있습니다는 <xref:System.Net.Sockets.Socket> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-645">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="5d8ed-646">호스트 이름을 지정 하지 않거나 포트 번호가이 메서드를 사용 하 여 원격 호스트를 이미 설정한 경우는 <xref:System.Net.Sockets.UdpClient.Connect%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-646">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="5d8ed-647">이 메서드는 throw 하는 경우는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-647">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="5d8ed-648">표시 되 면을 <xref:System.Net.Sockets.SocketException>를 사용 하 여 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 특정 오류 코드를 가져오는 합니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-648">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="5d8ed-649">이 코드를 가져온 후를 참조할 수 있습니다 합니다 [Windows 소켓 버전 2 API 오류 코드](/windows/desktop/winsock/windows-sockets-error-codes-2) 오류의 자세한 설명에 대 한 설명서입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-649">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5d8ed-650">
            <paramref name="dgram" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-650">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5d8ed-651">
            <see cref="T:System.Net.Sockets.UdpClient" />가 이미 기본 원격 호스트를 설정한 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-651">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5d8ed-652">
            <see cref="T:System.Net.Sockets.UdpClient" />가 닫힌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-652">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="5d8ed-653">소켓에 액세스할 때 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-653">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ttl">
      <MemberSignature Language="C#" Value="public short Ttl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Ttl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Ttl" />
      <MemberSignature Language="VB.NET" Value="Public Property Ttl As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short Ttl { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.Ttl : int16 with get, set" Usage="System.Net.Sockets.UdpClient.Ttl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d8ed-654">
            <see cref="T:System.Net.Sockets.UdpClient" />에서 보낸 IP(인터넷 프로토콜) 패킷의 TTL(Time to Live) 값을 지정하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-654">Gets or sets a value that specifies the Time to Live (TTL) value of Internet Protocol (IP) packets sent by the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5d8ed-655">TTL 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d8ed-655">The TTL value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d8ed-656">TTL 값은 라우터 라우터 패킷 및는 제어 메시지 ICMP (Internet Protocol) "TTL 초과"를 삭제 하기 전에 패킷이 이동할 수의 최대 수를 나타내는 오류 메시지가 보낸 사람에 게 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-656">The TTL value indicates the maximum number of routers a packet can traverse before the router discards the packet and an Internet Control Message Protocol (ICMP) "TTL exceeded" error message is returned to the sender.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d8ed-657">다음 코드 예제에서는 <xref:System.Net.Sockets.UdpClient.Ttl%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5d8ed-657">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Ttl%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>