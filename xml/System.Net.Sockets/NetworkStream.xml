<Type Name="NetworkStream" FullName="System.Net.Sockets.NetworkStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="da6f477a2cb785859d916208bd6d3718adc35921" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36550629" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NetworkStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetworkStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.NetworkStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NetworkStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetworkStream : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type NetworkStream = class&#xA;    inherit Stream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a02b9-101">Provides the underlying stream of data for network access.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a02b9-101">Provides the underlying stream of data for network access.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-102"><xref:System.Net.Sockets.NetworkStream> 클래스 메서드를 통해 데이터를 송수신 제공 <xref:System.Net.Sockets.SocketType.Stream> 블로킹 모드에서 소켓 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-102">The <xref:System.Net.Sockets.NetworkStream> class provides methods for sending and receiving data over <xref:System.Net.Sockets.SocketType.Stream> sockets in blocking mode.</span></span> <span data-ttu-id="a02b9-103">블로킹 및에 대 한 자세한 내용은 비블로킹 <xref:System.Net.Sockets.Socket>s, 참조 [비동기 클라이언트 소켓을 사용 하 여](~/docs/framework/network-programming/using-an-asynchronous-client-socket.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-103">For more information about blocking versus nonblocking <xref:System.Net.Sockets.Socket>s, see [Using an Asynchronous Client Socket](~/docs/framework/network-programming/using-an-asynchronous-client-socket.md).</span></span> <span data-ttu-id="a02b9-104">사용할 수는 <xref:System.Net.Sockets.NetworkStream> 동기 및 비동기 데이터 전송 모두에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-104">You can use the <xref:System.Net.Sockets.NetworkStream> class for both synchronous and asynchronous data transfer.</span></span> <span data-ttu-id="a02b9-105">동기 및 비동기 통신에 대 한 자세한 내용은 참조 [소켓](~/docs/framework/network-programming/sockets.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-105">For more information about synchronous and asynchronous communication, see [Sockets](~/docs/framework/network-programming/sockets.md).</span></span>  
  
 <span data-ttu-id="a02b9-106">만들려는 <xref:System.Net.Sockets.NetworkStream>, 연결 된 제공 해야 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-106">To create a <xref:System.Net.Sockets.NetworkStream>, you must provide a connected <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="a02b9-107">지정할 수도 있습니다 <xref:System.IO.FileAccess> 권한은 <xref:System.Net.Sockets.NetworkStream> 에 제공 된 동안 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-107">You can also specify what <xref:System.IO.FileAccess> permission the <xref:System.Net.Sockets.NetworkStream> has over the provided <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="a02b9-108">기본적으로 닫는 <xref:System.Net.Sockets.NetworkStream> 제공 된 닫히지 않습니다 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-108">By default, closing the <xref:System.Net.Sockets.NetworkStream> does not close the provided <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="a02b9-109">원하는 경우는 <xref:System.Net.Sockets.NetworkStream> 제공 된 닫을 수 있는 권한이 있어야 <xref:System.Net.Sockets.Socket>를 지정 해야 합니다 `true` 의 값에 대 한는 `ownsSocket` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-109">If you want the <xref:System.Net.Sockets.NetworkStream> to have permission to close the provided <xref:System.Net.Sockets.Socket>, you must specify `true` for the value of the `ownsSocket` parameter.</span></span>  
  
 <span data-ttu-id="a02b9-110">사용 하 여는 <xref:System.Net.Sockets.NetworkStream.Write%2A> 및 <xref:System.Net.Sockets.NetworkStream.Read%2A> 단순한 단일 스레드 차단 동기 I/O입니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-110">Use the <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods for simple single thread synchronous blocking I/O.</span></span> <span data-ttu-id="a02b9-111">사용 하 여 별도 스레드를 사용 하 여 I/O를 처리 하려는 경우 고려해는 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 및 <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> 메서드 또는 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 및 <xref:System.Net.Sockets.NetworkStream.EndRead%2A> 통신 하기 위한 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-111">If you want to process your I/O using separate threads, consider using the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> and <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> methods, or the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> and <xref:System.Net.Sockets.NetworkStream.EndRead%2A> methods for communication.</span></span>  
  
 <span data-ttu-id="a02b9-112"><xref:System.Net.Sockets.NetworkStream> 네트워크 데이터 스트림에 대 한 임의 액세스를 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-112">The <xref:System.Net.Sockets.NetworkStream> does not support random access to the network data stream.</span></span> <span data-ttu-id="a02b9-113">값은 <xref:System.Net.Sockets.NetworkStream.CanSeek%2A> 스트림이 검색을 지원 여부를 나타내는 속성은 항상 `false`; 읽기는 <xref:System.Net.Sockets.NetworkStream.Position%2A> 속성을 읽는 <xref:System.Net.Sockets.NetworkStream.Length%2A> 속성 또는 호출의 <xref:System.Net.Sockets.NetworkStream.Seek%2A> 메서드는 는throw<xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="a02b9-113">The value of the <xref:System.Net.Sockets.NetworkStream.CanSeek%2A> property, which indicates whether the stream supports seeking, is always `false`; reading the <xref:System.Net.Sockets.NetworkStream.Position%2A> property, reading the <xref:System.Net.Sockets.NetworkStream.Length%2A> property, or calling the <xref:System.Net.Sockets.NetworkStream.Seek%2A> method will throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="a02b9-114">읽기 및 쓰기 작업의 인스턴스에서 동시에 수행할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream> 동기화에 대 한 필요 없이 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-114">Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization.</span></span> <span data-ttu-id="a02b9-115">가 쓰기 작업에 대 한 하나의 고유 스레드 및 읽기 작업에 대해 하나의 고유한 스레드도 읽기 사이의 방해 하지 됩니다 되며 쓰기 스레드 및 동기화가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-115">As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a02b9-116">다음 코드 예제에서는 만드는 방법을 보여 줍니다.는 <xref:System.Net.Sockets.NetworkStream> 연결 된 <xref:System.Net.Sockets.SocketType.Stream> <xref:System.Net.Sockets.Socket> 기본 동기 차단 I/O를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-116">The following code example demonstrates how to create a <xref:System.Net.Sockets.NetworkStream> from a connected <xref:System.Net.Sockets.SocketType.Stream><xref:System.Net.Sockets.Socket> and perform basic synchronous blocking I/O.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a02b9-117">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-117">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream socket" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
      </Parameters>
      <Docs>
        <param name="socket">
          <span data-ttu-id="a02b9-118">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-118">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a02b9-119">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-119">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-120"><xref:System.Net.Sockets.NetworkStream> 지정 된에 대 한 읽기/쓰기 액세스를 사용 하 여 만들어집니다 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-120">The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="a02b9-121"><xref:System.Net.Sockets.NetworkStream> 내부 소유 하지 않는 <xref:System.Net.Sockets.Socket>를 호출 하므로 <xref:System.Net.Sockets.NetworkStream.Close%2A> 닫히지 않습니다는 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-121">The <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a02b9-122">다음 코드 예제를 만드는 예제는 <xref:System.Net.Sockets.NetworkStream> 와 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-122">The following code example illustrates how to create a <xref:System.Net.Sockets.NetworkStream> with a <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a02b9-123">The <paramref name="socket" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-123">The <paramref name="socket" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="a02b9-124">The <paramref name="socket" /> parameter is not connected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-124">The <paramref name="socket" /> parameter is not connected.</span>
          </span>
          <span data-ttu-id="a02b9-125">-or-  The <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-125">-or-  The <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span>
          </span>
          <span data-ttu-id="a02b9-126">-or-  The <paramref name="socket" /> parameter is in a nonblocking state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-126">-or-  The <paramref name="socket" /> parameter is in a nonblocking state.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, bool ownsSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, bool ownsSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, bool ownsSocket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * bool -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, ownsSocket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="ownsSocket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="socket">
          <span data-ttu-id="a02b9-127">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-127">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span>
          </span>
        </param>
        <param name="ownsSocket">
          <span data-ttu-id="a02b9-128">Set to <see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> will take ownership of the <see cref="T:System.Net.Sockets.Socket" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-128">Set to <see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> will take ownership of the <see cref="T:System.Net.Sockets.Socket" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a02b9-129">Initializes a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified <see cref="T:System.Net.Sockets.Socket" /> ownership.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-129">Initializes a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified <see cref="T:System.Net.Sockets.Socket" /> ownership.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-130"><xref:System.Net.Sockets.NetworkStream> 지정 된에 대 한 읽기/쓰기 액세스를 사용 하 여 만들어집니다 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-130">The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="a02b9-131">하는 경우의 값 `ownsSocket` 매개 변수는 `true`, <xref:System.Net.Sockets.NetworkStream> 내부의 소유권을 갖습니다 <xref:System.Net.Sockets.Socket>, 호출의 <xref:System.Net.Sockets.NetworkStream.Close%2A> 메서드 내부도 닫힙니다 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-131">If the value of `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a02b9-132">다음 코드 예제에서는 한 <xref:System.Net.Sockets.NetworkStream> 의 소유권을 갖는 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-132">The following code example creates a <xref:System.Net.Sockets.NetworkStream> with ownership of the <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a02b9-133">The <paramref name="socket" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-133">The <paramref name="socket" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="a02b9-134">The <paramref name="socket" /> parameter is not connected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-134">The <paramref name="socket" /> parameter is not connected.</span>
          </span>
          <span data-ttu-id="a02b9-135">-or-  the value of the <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-135">-or-  the value of the <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span>
          </span>
          <span data-ttu-id="a02b9-136">-or-  the <paramref name="socket" /> parameter is in a nonblocking state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-136">-or-  the <paramref name="socket" /> parameter is in a nonblocking state.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * System.IO.FileAccess -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="socket">
          <span data-ttu-id="a02b9-137">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-137">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="a02b9-138">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values that specify the type of access given to the <see cref="T:System.Net.Sockets.NetworkStream" /> over the provided <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-138">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values that specify the type of access given to the <see cref="T:System.Net.Sockets.NetworkStream" /> over the provided <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a02b9-139">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified access rights.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-139">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified access rights.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-140"><xref:System.Net.Sockets.NetworkStream> 지정 된 지정된 된 액세스를 사용 하 여 만들어집니다 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-140">The <xref:System.Net.Sockets.NetworkStream> is created with the specified access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="a02b9-141">이 생성자는 <xref:System.Net.Sockets.NetworkStream> 내부 소유 하지 않는 <xref:System.Net.Sockets.Socket>를 호출 하므로 <xref:System.Net.Sockets.NetworkStream.Close%2A> 닫히지 않습니다 내부 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-141">With this constructor, the <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 <span data-ttu-id="a02b9-142">`access` 매개 변수 집합의 <xref:System.Net.Sockets.NetworkStream.CanRead%2A> 및 <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> 의 속성은 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-142">The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="a02b9-143">지정 하는 경우 <xref:System.IO.FileAccess.Write>, 하면 <xref:System.Net.Sockets.NetworkStream> 를 호출할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-143">If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="a02b9-144">지정 하는 경우 <xref:System.IO.FileAccess.Read>, 하면 <xref:System.Net.Sockets.NetworkStream> 를 호출할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-144">If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="a02b9-145">지정 하는 경우 <xref:System.IO.FileAccess.ReadWrite>, 두 메서드 호출을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-145">If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a02b9-146">다음 코드 예제에서는 한 <xref:System.Net.Sockets.NetworkStream> 를 읽고 쓸 수는 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-146">The following code example creates a <xref:System.Net.Sockets.NetworkStream> with the ability to read and write to the <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#1)]
 [!code-vb[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a02b9-147">The <paramref name="socket" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-147">The <paramref name="socket" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="a02b9-148">The <paramref name="socket" /> parameter is not connected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-148">The <paramref name="socket" /> parameter is not connected.</span>
          </span>
          <span data-ttu-id="a02b9-149">-or-  the <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-149">-or-  the <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span>
          </span>
          <span data-ttu-id="a02b9-150">-or-  the <paramref name="socket" /> parameter is in a nonblocking state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-150">-or-  the <paramref name="socket" /> parameter is in a nonblocking state.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileAccess" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access, bool ownsSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, valuetype System.IO.FileAccess access, bool ownsSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, System::IO::FileAccess access, bool ownsSocket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * System.IO.FileAccess * bool -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, access, ownsSocket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="ownsSocket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="socket">
          <span data-ttu-id="a02b9-151">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-151">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="a02b9-152">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values that specifies the type of access given to the <see cref="T:System.Net.Sockets.NetworkStream" /> over the provided <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-152">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values that specifies the type of access given to the <see cref="T:System.Net.Sockets.NetworkStream" /> over the provided <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </param>
        <param name="ownsSocket">
          <span data-ttu-id="a02b9-153">Set to <see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> will take ownership of the <see cref="T:System.Net.Sockets.Socket" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-153">Set to <see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> will take ownership of the <see cref="T:System.Net.Sockets.Socket" />; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a02b9-154">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified access rights and the specified <see cref="T:System.Net.Sockets.Socket" /> ownership.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-154">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified access rights and the specified <see cref="T:System.Net.Sockets.Socket" /> ownership.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-155"><xref:System.Net.Sockets.NetworkStream> 지정 된에 대 한 읽기/쓰기 액세스를 사용 하 여 만들어집니다 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-155">The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="a02b9-156">경우의 값은 `ownsSocket` 매개 변수는 `true`, <xref:System.Net.Sockets.NetworkStream> 내부의 소유권을 갖습니다 <xref:System.Net.Sockets.Socket>, 호출는 <xref:System.Net.Sockets.NetworkStream.Close%2A> 메서드 내부도 닫힙니다 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-156">If the value of the `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 <span data-ttu-id="a02b9-157">`access` 매개 변수 집합의 <xref:System.Net.Sockets.NetworkStream.CanRead%2A> 및 <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> 의 속성은 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-157">The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="a02b9-158">지정 하는 경우 <xref:System.IO.FileAccess.Write>, 하면 <xref:System.Net.Sockets.NetworkStream> 를 호출할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-158">If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="a02b9-159">지정 하는 경우 <xref:System.IO.FileAccess.Read>, 하면 <xref:System.Net.Sockets.NetworkStream> 를 호출할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-159">If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="a02b9-160">지정 하는 경우 <xref:System.IO.FileAccess.ReadWrite>, 두 메서드 호출을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-160">If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a02b9-161">다음 코드 예제에서는 한 <xref:System.Net.Sockets.NetworkStream> 를 읽고 쓸 수는 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-161">The following code example creates a <xref:System.Net.Sockets.NetworkStream> with the ability to read and write to the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="a02b9-162">소유권은 <xref:System.Net.Sockets.Socket> 이 가리키는 <xref:System.Net.Sockets.NetworkStream> 지정 하 여 `true` 에 대 한는 `ownsSocket` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-162">Ownership of the <xref:System.Net.Sockets.Socket> is given to this <xref:System.Net.Sockets.NetworkStream> by specifying `true` for the `ownsSocket` parameter.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#1)]
 [!code-vb[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a02b9-163">The <paramref name="socket" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-163">The <paramref name="socket" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="a02b9-164">The <paramref name="socket" /> parameter is not connected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-164">The <paramref name="socket" /> parameter is not connected.</span>
          </span>
          <span data-ttu-id="a02b9-165">-or-  The <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-165">-or-  The <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span>
          </span>
          <span data-ttu-id="a02b9-166">-or-  The <paramref name="socket" /> parameter is in a nonblocking state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-166">-or-  The <paramref name="socket" /> parameter is in a nonblocking state.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.FileAccess" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int size, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 size, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, size As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="networkStream.BeginRead (buffer, offset, size, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="a02b9-167">An array of type <see cref="T:System.Byte" /> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-167">An array of type <see cref="T:System.Byte" /> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="a02b9-168">The location in <c>buffer</c> to begin storing the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-168">The location in <c>buffer</c> to begin storing the data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="a02b9-169">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-169">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="a02b9-170">The <see cref="T:System.AsyncCallback" /> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-170">The <see cref="T:System.AsyncCallback" /> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="a02b9-171">An object that contains any additional user-defined data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-171">An object that contains any additional user-defined data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a02b9-172">Begins an asynchronous read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-172">Begins an asynchronous read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a02b9-173">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-173">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-174"><xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 메서드가 비동기적으로 들어오는 네트워크 버퍼에서 데이터를 읽기 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-174">The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method starts asynchronously reading data from the incoming network buffers.</span></span> <span data-ttu-id="a02b9-175">호출 된 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 메서드는 별도 실행 스레드 내에서 데이터를 수신할 수 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-175">Calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method gives you the ability to receive data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="a02b9-176">구현 하는 콜백 메서드를 만들어야 합니다는 <xref:System.AsyncCallback> 대리자를 전달 하 고 이름을 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-176">You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span> <span data-ttu-id="a02b9-177">최소한, 프로그램 `state` 매개 변수를 포함 해야 합니다는 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-177">At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="a02b9-178">콜백 메서드 내에서 받은 데이터 하려고 하므로 작은 클래스 또는 읽기 버퍼 및 기타 유용한 정보를 저장할 구조를 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-178">Because you will want to obtain the received data within your callback method, you should create a small class or structure to hold a read buffer and any other useful information.</span></span> <span data-ttu-id="a02b9-179">구조체 또는 클래스 인스턴스를 전달 된 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 통해 메서드는 `state` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-179">Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="a02b9-180">콜백 메서드를 호출 해야는 <xref:System.Net.Sockets.NetworkStream.EndRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-180">Your callback method should call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method.</span></span> <span data-ttu-id="a02b9-181">응용 프로그램 호출 하는 경우 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, 시스템 또는 데이터를 수신 하 고, 오류가 발생 하 고, 시스템에서 지정 된 콜백 메서드 및 블록을 실행 하는 별도 스레드로 사용 됩니다 다음 때까지 기다립니다 <xref:System.Net.Sockets.NetworkStream.EndRead%2A> 까지 제공 된 <xref:System.Net.Sockets.NetworkStream> 읽기 데이터 또는 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-181">When your application calls <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, the system will wait until data is received or an error occurs, and then the system will use a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndRead%2A> until the provided <xref:System.Net.Sockets.NetworkStream> reads data or throws an exception.</span></span> <span data-ttu-id="a02b9-182">원래 스레드가 차단 호출한 후 사용 하려는 경우는 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 메서드를 사용 하 여는 <xref:System.Threading.WaitHandle.WaitOne%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-182">If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="a02b9-183">호출 <xref:System.Threading.EventWaitHandle.Set%2A> 콜백 메서드에서 원래 스레드가 계속 실행 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="a02b9-183">Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="a02b9-184">콜백 메서드를 작성 하는 방법에 대 한 자세한 내용은 참조 하십시오. [콜백 메서드로 대리자 마샬링](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-184">For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="a02b9-185"><xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 메서드에 지정 된 바이트 수까지 사용 가능한 많은 데이터를 읽습니다.는 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-185">The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method reads as much data as is available, up to the number of bytes specified by the `size` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a02b9-186">표시 되 면는 <xref:System.IO.IOException>, 확인 된 <xref:System.Exception.InnerException%2A> 속성 것 인 한 것을 확인 하는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-186">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="a02b9-187">그렇다면 사용 하는 <xref:System.Net.Sockets.SocketException.ErrorCode%2A> 속성을 특정 오류 코드는 Windows 소켓 버전 2 API 오류 코드 MSDN 설명서에서에서 오류에 대 한 자세한 설명은 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="a02b9-187">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="a02b9-188">읽기 및 쓰기 작업의 인스턴스에서 동시에 수행할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream> 동기화에 대 한 필요 없이 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-188">Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization.</span></span> <span data-ttu-id="a02b9-189">가 쓰기 작업에 대 한 하나의 고유 스레드 및 읽기 작업에 대해 하나의 고유한 스레드도 읽기 사이의 방해 하지 됩니다 되며 쓰기 스레드 및 동기화가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-189">As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a02b9-190">다음 코드 예제에서는 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 네트워크 스트림에서 비동기적으로 데이터를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-190">The following code example uses <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> to read data asynchronously from the network stream.</span></span> <span data-ttu-id="a02b9-191">`myReadCallBack` 메서드 구현에서 <xref:System.AsyncCallback> 위임 하 고 시스템에 의해 호출 때 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-191">The `myReadCallBack` method implements the <xref:System.AsyncCallback> delegate and is called by the system when <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> returns.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a02b9-192">The <paramref name="buffer" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-192">The <paramref name="buffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a02b9-193">The <paramref name="offset" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-193">The <paramref name="offset" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="a02b9-194">-or-  The <paramref name="offset" /> parameter is greater than the length of the <paramref name="buffer" /> paramater.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-194">-or-  The <paramref name="offset" /> parameter is greater than the length of the <paramref name="buffer" /> paramater.</span>
          </span>
          <span data-ttu-id="a02b9-195">-or-  The <paramref name="size" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-195">-or-  The <paramref name="size" /> is less than 0.</span>
          </span>
          <span data-ttu-id="a02b9-196">-or-  The <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-196">-or-  The <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="a02b9-197">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-197">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span>
          </span>
          <span data-ttu-id="a02b9-198">-or-  There was a failure while reading from the network.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-198">-or-  There was a failure while reading from the network.</span>
          </span>
          <span data-ttu-id="a02b9-199">-or-  An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-199">-or-  An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="a02b9-200">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-200">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int size, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 size, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, size As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="networkStream.BeginWrite (buffer, offset, size, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="a02b9-201">An array of type <see cref="T:System.Byte" /> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-201">An array of type <see cref="T:System.Byte" /> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="a02b9-202">The location in <c>buffer</c> to begin sending the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-202">The location in <c>buffer</c> to begin sending the data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="a02b9-203">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-203">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="a02b9-204">The <see cref="T:System.AsyncCallback" /> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-204">The <see cref="T:System.AsyncCallback" /> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="a02b9-205">An object that contains any additional user-defined data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-205">An object that contains any additional user-defined data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a02b9-206">Begins an asynchronous write to a stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-206">Begins an asynchronous write to a stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a02b9-207">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-207">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-208"><xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 메서드 원격 호스트에 비동기 발신 작업을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-208">The <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method starts an asynchronous send operation to the remote host.</span></span> <span data-ttu-id="a02b9-209">호출 된 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 메서드는 별도 실행 스레드 내에서 데이터를 보내는 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-209">Calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method gives you the ability to send data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="a02b9-210">구현 하는 콜백 메서드를 만들어야 합니다는 <xref:System.AsyncCallback> 대리자를 전달 하 고 이름을 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-210">You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method.</span></span> <span data-ttu-id="a02b9-211">최소한, 프로그램 `state` 매개 변수를 포함 해야 합니다는 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-211">At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="a02b9-212">콜백에 자세한 정보를 작은 클래스 또는 저장할 구조를 만들 수 있습니다는 <xref:System.Net.Sockets.NetworkStream> 및 기타 필요한 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-212">If your callback needs more information, you can create a small class or structure to hold the <xref:System.Net.Sockets.NetworkStream> and the other required information.</span></span> <span data-ttu-id="a02b9-213">구조체 또는 클래스 인스턴스를 전달 된 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 통해 메서드는 `state` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-213">Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="a02b9-214">콜백 메서드를 구현 해야는 <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-214">Your callback method should implement the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method.</span></span> <span data-ttu-id="a02b9-215">응용 프로그램 호출 하는 경우 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, 시스템 지정 된 콜백 메서드를 실행 하는 별도 스레드를 사용 하 고 차단 <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> 될 때까지 <xref:System.Net.Sockets.NetworkStream> 요청 된 바이트의 번호를 전송 하거나 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-215">When your application calls <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, the system uses a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> until the <xref:System.Net.Sockets.NetworkStream> sends the number of bytes requested or throws an exception.</span></span> <span data-ttu-id="a02b9-216">원래 스레드가 차단 호출한 후 사용 하려는 경우는 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 메서드를 사용 하 여는 <xref:System.Threading.WaitHandle.WaitOne%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-216">If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="a02b9-217">호출 <xref:System.Threading.EventWaitHandle.Set%2A> 콜백 메서드에서 원래 스레드가 계속 실행 하려는 경우.</span><span class="sxs-lookup"><span data-stu-id="a02b9-217">Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="a02b9-218">콜백 메서드를 작성 하는 방법에 대 한 자세한 내용은 참조 하십시오. [콜백 메서드로 대리자 마샬링](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-218">For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a02b9-219">표시 되 면는 <xref:System.IO.IOException>, 확인 된 <xref:System.Exception.InnerException%2A> 속성 것 인 한 것을 확인 하는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-219">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="a02b9-220">그렇다면 사용 하는 <xref:System.Net.Sockets.SocketException.ErrorCode%2A> 속성을 특정 오류 코드는 Windows 소켓 버전 2 API 오류 코드 MSDN 설명서에서에서 오류에 대 한 자세한 설명은 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="a02b9-220">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="a02b9-221">읽기 및 쓰기 작업의 인스턴스에서 동시에 수행할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream> 동기화에 대 한 필요 없이 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-221">Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization.</span></span> <span data-ttu-id="a02b9-222">가 쓰기 작업에 대 한 하나의 고유 스레드 및 읽기 작업에 대해 하나의 고유한 스레드도 읽기 사이의 방해 하지 됩니다 되며 쓰기 스레드 및 동기화가 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-222">As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a02b9-223">다음 코드 예제에서는 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 네트워크 스트림에 비동기적으로 데이터를 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-223">The following code example uses <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> to write data asynchronously to a network stream.</span></span> <span data-ttu-id="a02b9-224">`myWriteCallBack` 메서드 구현에서 <xref:System.AsyncCallback> 위임 하 고 시스템에 의해 호출 때 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-224">The `myWriteCallBack` method implements the <xref:System.AsyncCallback> delegate and is called by the system when <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> returns.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a02b9-225">The <paramref name="buffer" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-225">The <paramref name="buffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a02b9-226">The <paramref name="offset" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-226">The <paramref name="offset" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="a02b9-227">-or-  The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-227">-or-  The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="a02b9-228">-or-  The <paramref name="size" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-228">-or-  The <paramref name="size" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="a02b9-229">-or-  The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-229">-or-  The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="a02b9-230">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-230">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span>
          </span>
          <span data-ttu-id="a02b9-231">-or-  There was a failure while writing to the network.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-231">-or-  There was a failure while writing to the network.</span>
          </span>
          <span data-ttu-id="a02b9-232">-or-  An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-232">-or-  An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="a02b9-233">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-233">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Sockets.NetworkStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a02b9-234">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> supports reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-234">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> supports reading.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a02b9-235">
            <see langword="true" /> 스트림에서 데이터를 읽을 수 있는 경우 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-235">
              <see langword="true" /> if data can be read from the stream; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a02b9-236">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-236">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-237">경우 <xref:System.Net.Sockets.NetworkStream.CanRead%2A> 은 `true`, <xref:System.Net.Sockets.NetworkStream> 를 호출할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-237">If <xref:System.Net.Sockets.NetworkStream.CanRead%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="a02b9-238">적절 한 제공 <xref:System.IO.FileAccess> 열거형 값 읽기 및 쓰기 가능성을 설정 하는 생성자에는 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-238">Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="a02b9-239"><xref:System.Net.Sockets.NetworkStream.CanRead%2A> 속성을 설정 하는 경우는 <xref:System.Net.Sockets.NetworkStream> 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-239">The <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a02b9-240">다음 코드 예제에서는 <xref:System.Net.Sockets.NetworkStream.CanRead%2A> 되었는지 확인 하는 <xref:System.Net.Sockets.NetworkStream> 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-240">The following code example checks <xref:System.Net.Sockets.NetworkStream.CanRead%2A> to verify that the <xref:System.Net.Sockets.NetworkStream> is readable.</span></span> <span data-ttu-id="a02b9-241">다음에 읽기 작업을 수행할는 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-241">It then performs a read operation on the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.Readable" />
        <altmember cref="T:System.IO.FileAccess" />
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Sockets.NetworkStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a02b9-242">Gets a value that indicates whether the stream supports seeking.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-242">Gets a value that indicates whether the stream supports seeking.</span>
          </span>
          <span data-ttu-id="a02b9-243">This property is not currently supported.This property always returns <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-243">This property is not currently supported.This property always returns <see langword="false" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a02b9-244">
            <see langword="false" /> 모든 경우에 해당 <see cref="T:System.Net.Sockets.NetworkStream" /> 스트림의 특정 위치를 검색할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-244">
              <see langword="false" /> in all cases to indicate that <see cref="T:System.Net.Sockets.NetworkStream" /> cannot seek a specific location in the stream.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Sockets.NetworkStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a02b9-245">Indicates whether timeout properties are usable for <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-245">Indicates whether timeout properties are usable for <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a02b9-246">모든 경우에 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-246">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-247">상속 하기 때문에이 속성은 현재 <xref:System.IO.Stream>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-247">This property is present because it is inherited from <xref:System.IO.Stream>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Sockets.NetworkStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a02b9-248">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> supports writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-248">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> supports writing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a02b9-249">
            <see langword="true" /> 데이터를 쓸 수 있으면는 <see cref="T:System.Net.Sockets.NetworkStream" />, 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-249">
              <see langword="true" /> if data can be written to the <see cref="T:System.Net.Sockets.NetworkStream" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a02b9-250">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-250">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-251">경우 <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> 은 `true`, <xref:System.Net.Sockets.NetworkStream> 를 호출할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-251">If <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="a02b9-252">적절 한 제공 <xref:System.IO.FileAccess> 열거형 값 읽기 및 쓰기 가능성을 설정 하는 생성자에는 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-252">Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="a02b9-253"><xref:System.Net.Sockets.NetworkStream.CanWrite%2A> 속성을 설정 하는 경우는 <xref:System.Net.Sockets.NetworkStream> 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-253">The <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a02b9-254">다음 코드 예제에서는 <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> 되었는지 확인 하는 <xref:System.Net.Sockets.NetworkStream> 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-254">The following code example checks <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> to verify that the <xref:System.Net.Sockets.NetworkStream> is writable.</span></span> <span data-ttu-id="a02b9-255">다음에 쓰기 작업을 수행할는 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-255">It then performs a write operation on the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
        <altmember cref="T:System.IO.FileAccess" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close(int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(int timeout);" />
      <MemberSignature Language="F#" Value="override this.Close : int -&gt; unit" Usage="networkStream.Close timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="a02b9-256">A 32-bit signed integer that specifies the number of milliseconds to wait to send any remaining data before closing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-256">A 32-bit signed integer that specifies the number of milliseconds to wait to send any remaining data before closing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a02b9-257">Closes the <see cref="T:System.Net.Sockets.NetworkStream" /> after waiting the specified time to allow data to be sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-257">Closes the <see cref="T:System.Net.Sockets.NetworkStream" /> after waiting the specified time to allow data to be sent.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-258"><xref:System.Net.Sockets.NetworkStream.Close%2A> 와 연결 된 관리 되지 않는 및 관리 되는 리소스를 해제 하는 메서드는 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-258">The <xref:System.Net.Sockets.NetworkStream.Close%2A> method frees both unmanaged and managed resources associated with the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="a02b9-259">경우는 <xref:System.Net.Sockets.NetworkStream> 내부 소유 <xref:System.Net.Sockets.Socket>, 함께 닫힙니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-259">If the <xref:System.Net.Sockets.NetworkStream> owns the underlying <xref:System.Net.Sockets.Socket>, it is closed as well.</span></span>  
  
 <span data-ttu-id="a02b9-260">경우는 <xref:System.Net.Sockets.NetworkStream> 연결 된 한 <xref:System.Net.Sockets.TcpClient>, <xref:System.Net.Sockets.NetworkStream.Close%2A> 메서드는 TCP 연결을 종료 하지만 연결 된 삭제 하지 <xref:System.Net.Sockets.TcpClient>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-260">If a <xref:System.Net.Sockets.NetworkStream> was associated with a <xref:System.Net.Sockets.TcpClient>, the <xref:System.Net.Sockets.NetworkStream.Close%2A> method will close the TCP connection, but not dispose of the associated <xref:System.Net.Sockets.TcpClient>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a02b9-261">The <paramref name="timeout" /> parameter is less than -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-261">The <paramref name="timeout" /> parameter is less than -1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DataAvailable">
      <MemberSignature Language="C#" Value="public virtual bool DataAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.DataAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DataAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DataAvailable : bool" Usage="System.Net.Sockets.NetworkStream.DataAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a02b9-262">Gets a value that indicates whether data is available on the <see cref="T:System.Net.Sockets.NetworkStream" /> to be read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-262">Gets a value that indicates whether data is available on the <see cref="T:System.Net.Sockets.NetworkStream" /> to be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a02b9-263">
            <see langword="true" /> 스트림에서 읽을 데이터를 사용할 수 있는 경우 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-263">
              <see langword="true" /> if data is available on the stream to be read; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-264">사용 된 <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> 데이터를 읽을 수 인지 확인 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-264">Use the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property to determine if data is ready to be read.</span></span> <span data-ttu-id="a02b9-265">경우 <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> 은 `true`에 대 한 호출 <xref:System.Net.Sockets.NetworkStream.Read%2A> 즉시 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-265">If <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> is `true`, a call to <xref:System.Net.Sockets.NetworkStream.Read%2A> returns immediately.</span></span> <span data-ttu-id="a02b9-266">원격 호스트 종료 되거나 연결이 닫히면 <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> throw 될 수 있습니다는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-266">If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> may throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a02b9-267">다음 코드 예제에서 읽고는 <xref:System.Net.Sockets.NetworkStream> 으로 데이터를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-267">The following code example reads from the <xref:System.Net.Sockets.NetworkStream> as long as data is available.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="a02b9-268">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-268">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="a02b9-269">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-269">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="a02b9-270">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-270">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="networkStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="a02b9-271">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-271">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a02b9-272">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.NetworkStream" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-272">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.NetworkStream" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-273">이 메서드는 public `Dispose` 메서드 및 <xref:System.Object.Finalize%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-273">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="a02b9-274">`Dispose` 보호 된 호출 `Dispose(Boolean)` 메서드는 `disposing` 매개 변수 설정 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-274">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="a02b9-275"><xref:System.Object.Finalize%2A> 호출 `Dispose` 와 `disposing` 로 설정 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-275"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="a02b9-276">`disposing` 매개 변수가 `true`인 경우 이 메서드는 이 <xref:System.Net.Sockets.NetworkStream>에서 참조하는 관리 개체가 보유하고 있는 리소스를 모두 해제합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-276">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.NetworkStream> references.</span></span> <span data-ttu-id="a02b9-277">이 메서드는 참조되는 각 개체의 `Dispose` 메서드를 호출합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-277">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a02b9-278">
            <para>
              <see langword="Dispose" /> 다른 개체에서 여러 번 호출할 수 있습니다. <see langword="Dispose(Boolean)" />를 재정의할 때 이전 <see langword="Dispose" /> 호출에서 삭제된 개체를 참조하지 않도록 주의하십시오. 구현 하는 방법에 대 한 자세한 내용은 <see langword="Dispose(Boolean)" />, 참조 [Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md) 구현 합니다.  에 대 한 자세한 내용은 <see langword="Dispose" /> 및 <see cref="M:System.Object.Finalize" />, 참조 [관리 되지 않는 Resources](~/docs/standard/garbage-collection/unmanaged.md) 정리 하 고 [Finalize 메서드를 재정의] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-278">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="networkStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="a02b9-279">An <see cref="T:System.IAsyncResult" /> that represents an asynchronous call.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-279">An <see cref="T:System.IAsyncResult" /> that represents an asynchronous call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a02b9-280">Handles the end of an asynchronous read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-280">Handles the end of an asynchronous read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a02b9-281">The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-281">The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-282"><xref:System.Net.Sockets.NetworkStream.EndRead%2A> 시작 비동기 읽기 작업을 완료 하는 메서드는 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-282">The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes the asynchronous read operation started in the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span>  
  
 <span data-ttu-id="a02b9-283">호출 하기 전에 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>를 구현 하는 콜백 메서드를 만들어야 할는 <xref:System.AsyncCallback> 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-283">Before calling <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="a02b9-284">이 콜백 메서드는 별도의 스레드에서 실행 한 후 시스템에 의해 호출 됩니다 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-284">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> returns.</span></span> <span data-ttu-id="a02b9-285">콜백 메서드는 <xref:System.IAsyncResult> 에서 반환 되는 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 메서드에 매개 변수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-285">The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="a02b9-286">콜백 메서드 내에서 <xref:System.IAsyncResult.AsyncState%2A> 속성은 <xref:System.IAsyncResult> 에 전달 된 상태 개체를 가져올 수는 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-286">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult> to obtain the state object passed to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span> <span data-ttu-id="a02b9-287">수신 추출 <xref:System.Net.Sockets.NetworkStream> 에서이 상태 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-287">Extract the receiving <xref:System.Net.Sockets.NetworkStream> from this state object.</span></span> <span data-ttu-id="a02b9-288">가져온 후는 <xref:System.Net.Sockets.NetworkStream>, 호출의 <xref:System.Net.Sockets.NetworkStream.EndRead%2A> 메서드를 성공적으로 읽기 작업을 완료 하 고 읽은 바이트 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-288">After obtaining the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method to successfully complete the read operation and return the number of bytes read.</span></span>  
  
 <span data-ttu-id="a02b9-289"><xref:System.Net.Sockets.NetworkStream.EndRead%2A> 메서드 데이터를 사용할 때까지 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-289">The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method blocks until data is available.</span></span> <span data-ttu-id="a02b9-290"><xref:System.Net.Sockets.NetworkStream.EndRead%2A> 메서드에 지정 된 바이트 수까지 사용 가능한 많은 데이터를 읽습니다.는 `size` 의 매개 변수는 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-290">The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method reads as much data as is available up to the number of bytes specified in the `size` parameter of the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span> <span data-ttu-id="a02b9-291">원격 호스트를 종료 하는 경우는 <xref:System.Net.Sockets.Socket> 연결 및 사용 가능한 모든 데이터 수신 되기는 <xref:System.Net.Sockets.NetworkStream.EndRead%2A> 메서드가 즉시 완료 되 고 0 바이트가 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-291">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection and all available data has been received, the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes immediately and returns zero bytes.</span></span>  
  
 <span data-ttu-id="a02b9-292">호출을 받은 데이터를 가져오려면는 <xref:System.IAsyncResult.AsyncState%2A> 의 속성은 <xref:System.IAsyncResult>, 결과 상태 개체에 포함 된 버퍼를 추출 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-292">To obtain the received data, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult>, and extract the buffer contained in the resulting state object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a02b9-293">표시 되 면는 <xref:System.IO.IOException>, 확인 된 <xref:System.Exception.InnerException%2A> 속성 것 인 한 것을 확인 하는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-293">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="a02b9-294">그렇다면 사용 하는 <xref:System.Net.Sockets.SocketException.ErrorCode%2A> 속성을 특정 오류 코드는 Windows 소켓 버전 2 API 오류 코드 MSDN 설명서에서에서 오류에 대 한 자세한 설명은 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="a02b9-294">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a02b9-295">다음 코드 예에서 `myReadCallback` 에 제공 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 콜백 메서드로 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-295">In the following code example, `myReadCallback` is provided to <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> as the callback method.</span></span> <span data-ttu-id="a02b9-296"><xref:System.Net.Sockets.NetworkStream.EndRead%2A> 구현 되는 `myReadCallback` 읽기에 의해 시작 하는 호출을 비동기 끝나기를 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-296"><xref:System.Net.Sockets.NetworkStream.EndRead%2A> is implemented in `myReadCallback` to complete the asynchronous read call started by <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#5)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#5)]
 [!code-vb[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a02b9-297">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-297">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="a02b9-298">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-298">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span>
          </span>
          <span data-ttu-id="a02b9-299">-or-  An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-299">-or-  An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="a02b9-300">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-300">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="networkStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="a02b9-301">The <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-301">The <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a02b9-302">Handles the end of an asynchronous write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-302">Handles the end of an asynchronous write.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-303"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> 시작 비동기 발신 작업을 완료 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-303"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> completes the asynchronous send operation started in <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.</span></span>  
  
 <span data-ttu-id="a02b9-304">호출 하기 전에 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>를 구현 하는 콜백 메서드를 만들어야 할는 <xref:System.AsyncCallback> 위임 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-304">Before calling <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="a02b9-305">이 콜백 메서드는 별도의 스레드에서 실행 한 후 시스템에 의해 호출 됩니다 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-305">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> returns.</span></span> <span data-ttu-id="a02b9-306">콜백 메서드는 <xref:System.IAsyncResult> 에서 반환 되는 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 메서드에 매개 변수로 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-306">The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="a02b9-307">콜백 메서드 내에서 <xref:System.IAsyncResult.AsyncState%2A> 속성은 `IAsyncResult` 를 가져오려면는 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-307">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the `IAsyncResult` parameter to obtain the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="a02b9-308">가져온 후의 <xref:System.Net.Sockets.NetworkStream>를 호출할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> 메서드를 성공적으로 송신 작업을 완료 하 고 보낸 바이트 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-308">After obtaining the <xref:System.Net.Sockets.NetworkStream>, you can call the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method to successfully complete the send operation and return the number of bytes sent.</span></span>  
  
 <span data-ttu-id="a02b9-309"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> 메서드는 바이트 수가 요청 된 전송 될 때까지 차단 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-309">The <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method blocks until the requested number of bytes are sent.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a02b9-310">표시 되 면는 <xref:System.IO.IOException>, 확인 된 <xref:System.Exception.InnerException%2A> 속성 것 인 한 것을 확인 하는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-310">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="a02b9-311">그렇다면 사용 하는 <xref:System.Net.Sockets.SocketException.ErrorCode%2A> 속성을 특정 오류 코드는 Windows 소켓 버전 2 API 오류 코드 MSDN 설명서에서에서 오류에 대 한 자세한 설명은 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="a02b9-311">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a02b9-312">다음 코드 예에서 `myWriteCallback` 에 제공 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 콜백 메서드로 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-312">In the following code example, `myWriteCallback` is provided to <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> as the callback method.</span></span> <span data-ttu-id="a02b9-313"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> 구현 되는 `myWriteCallback` 에 의해 시작 된 비동기 쓰기 호출을 완료 하려면 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-313"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> is implemented in `myWriteCallback` to complete the asynchronous write call started by <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a02b9-314">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-314">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="a02b9-315">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-315">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span>
          </span>
          <span data-ttu-id="a02b9-316">-or-  An error occurred while writing to the network.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-316">-or-  An error occurred while writing to the network.</span>
          </span>
          <span data-ttu-id="a02b9-317">-or-  An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-317">-or-  An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="a02b9-318">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-318">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~NetworkStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!NetworkStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="networkStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a02b9-319">Releases all resources used by the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-319">Releases all resources used by the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-320">이 메서드를 재정의 <xref:System.Object.Finalize%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-320">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a02b9-321">응용 프로그램 코드,이 메서드를 호출 하지 않아야 개체의 <xref:System.Object.Finalize%2A> 메서드를 호출 하 여 가비지 수집기의 종료를 사용 하지 않도록 설정 된 경우가 아니면 자동으로 가비지 수집 중 호출 됩니다는 <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-321">Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a02b9-322">Finalize 메서드를 사용 하는 방법에 대 한 자세한 내용은 참조 [Finalize 메서드 및 소멸자](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [관리 되지 않는 리소스 정리](~/docs/standard/garbage-collection/unmanaged.md), 및 [Finalize 메서드를 재정의](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3) .</span><span class="sxs-lookup"><span data-stu-id="a02b9-322">For more information about using the Finalize method, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="networkStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a02b9-323">Flushes data from the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-323">Flushes data from the stream.</span>
          </span>
          <span data-ttu-id="a02b9-324">This method is reserved for future use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-324">This method is reserved for future use.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-325"><xref:System.Net.Sockets.NetworkStream.Flush%2A> 메서드 구현은 <xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType> 메서드 소비량이 적어지지만 때문에 <xref:System.Net.Sockets.NetworkStream> 은 영향을 주지 않습니다 네트워크 스트림을에 아무런 버퍼링 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-325">The <xref:System.Net.Sockets.NetworkStream.Flush%2A> method implements the <xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType> method; however, because <xref:System.Net.Sockets.NetworkStream> is not buffered, it has no affect on network streams.</span></span> <span data-ttu-id="a02b9-326">호출 된 <xref:System.Net.Sockets.NetworkStream.Flush%2A> 메서드 예외를 throw 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-326">Calling the <xref:System.Net.Sockets.NetworkStream.Flush%2A> method does not throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="networkStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="a02b9-327">A cancellation token used to propagate notification that this  operation should be canceled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-327">A cancellation token used to propagate notification that this  operation should be canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a02b9-328">Flushes data from the stream as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-328">Flushes data from the stream as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a02b9-329">Returns <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-329">Returns <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
          <span data-ttu-id="a02b9-330">The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-330">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-331">이 작업을 차단 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-331">This operation will not block.</span></span> <span data-ttu-id="a02b9-332">반환 된 <xref:System.Threading.Tasks.Task> 개체에 대 한 스트림에서 데이터가 플러시된 완성 합니다는 <xref:System.Net.Sockets.NetworkStream> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="a02b9-332">The returned <xref:System.Threading.Tasks.Task> object will complete after data has been flushed from the stream for the <xref:System.Net.Sockets.NetworkStream> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Sockets.NetworkStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a02b9-333">Gets the length of the data available on the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-333">Gets the length of the data available on the stream.</span>
          </span>
          <span data-ttu-id="a02b9-334">This property is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-334">This property is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a02b9-335">스트림에서 사용할 수 있는 데이터의 길이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-335">The length of the data available on the stream.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a02b9-336">Any use of this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-336">Any use of this property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Sockets.NetworkStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a02b9-337">Gets or sets the current position in the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-337">Gets or sets the current position in the stream.</span>
          </span>
          <span data-ttu-id="a02b9-338">This property is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-338">This property is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a02b9-339">스트림 내의 현재 위치입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-339">The current position in the stream.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a02b9-340">Any use of this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-340">Any use of this property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, size As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="networkStream.Read (buffer, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="a02b9-341">An array of type <see cref="T:System.Byte" /> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-341">An array of type <see cref="T:System.Byte" /> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="a02b9-342">The location in <c>buffer</c> to begin storing the data to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-342">The location in <c>buffer</c> to begin storing the data to.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="a02b9-343">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-343">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a02b9-344">Reads data from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-344">Reads data from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a02b9-345">The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />, or 0 if the socket is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-345">The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />, or 0 if the socket is closed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-346">이 메서드는 데이터를 읽습니다는 `buffer` 매개 변수 및 성공적으로 읽은 바이트 수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-346">This method reads data into the `buffer` parameter and returns the number of bytes successfully read.</span></span> <span data-ttu-id="a02b9-347">소켓 닫혀 있는 경우는 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드에서 0을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-347">If the socket is closed, the <xref:System.Net.Sockets.NetworkStream.Read%2A> method returns 0.</span></span> <span data-ttu-id="a02b9-348"><xref:System.Net.Sockets.NetworkStream.Read%2A> 작업에 지정 된 바이트 수까지 사용 가능한 데이터를 읽습니다는 `size` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-348">The <xref:System.Net.Sockets.NetworkStream.Read%2A> operation reads as much data as is available, up to the number of bytes specified by the `size` parameter.</span></span> <span data-ttu-id="a02b9-349">원격 호스트 연결을 종료 하 고 사용 가능한 모든 데이터를 받았습니다는 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드 즉시 완료 되 고 0 바이트를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-349">If the remote host shuts down the connection, and all available data has been received, the <xref:System.Net.Sockets.NetworkStream.Read%2A> method completes immediately and return zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a02b9-350">확인은 <xref:System.Net.Sockets.NetworkStream> 를 호출 하 여 읽을 수는 <xref:System.Net.Sockets.NetworkStream.CanRead%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-350">Check to see if the <xref:System.Net.Sockets.NetworkStream> is readable by calling the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property.</span></span> <span data-ttu-id="a02b9-351">읽을 하려고 하면는 <xref:System.Net.Sockets.NetworkStream> 읽을 수 없는, 받아볼 수는 <xref:System.IO.IOException>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-351">If you attempt to read from a <xref:System.Net.Sockets.NetworkStream> that is not readable, you will get an <xref:System.IO.IOException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a02b9-352">표시 되 면는 <xref:System.IO.IOException>, 확인 된 <xref:System.Exception.InnerException%2A> 속성 것 인 한 것을 확인 하는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-352">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="a02b9-353">그렇다면 사용 하는 <xref:System.Net.Sockets.SocketException.ErrorCode%2A> 속성을 특정 오류 코드는 Windows 소켓 버전 2 API 오류 코드 MSDN 설명서에서에서 오류에 대 한 자세한 설명은 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="a02b9-353">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a02b9-354">다음 코드 예제에서는 <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> 읽을 수 있는 데이터 인지 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="a02b9-354">The following code example uses <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> to determine if data is available to be read.</span></span> <span data-ttu-id="a02b9-355">읽을 데이터를 사용할 수 있으면는 <xref:System.Net.Sockets.NetworkStream>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-355">If data is available, it reads from the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a02b9-356">The <paramref name="buffer" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-356">The <paramref name="buffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a02b9-357">The <paramref name="offset" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-357">The <paramref name="offset" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="a02b9-358">-or-  The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-358">-or-  The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="a02b9-359">-or-  The <paramref name="size" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-359">-or-  The <paramref name="size" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="a02b9-360">-or-  The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-360">-or-  The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          </span>
          <span data-ttu-id="a02b9-361">-or-  An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-361">-or-  An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="a02b9-362">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-362">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="a02b9-363">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-363">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span>
          </span>
          <span data-ttu-id="a02b9-364">-or-  There is a failure reading from the network.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-364">-or-  There is a failure reading from the network.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
      </Docs>
    </Member>
    <Member MemberName="Readable">
      <MemberSignature Language="C#" Value="protected bool Readable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Readable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Readable" />
      <MemberSignature Language="VB.NET" Value="Protected Property Readable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Readable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Readable : bool with get, set" Usage="System.Net.Sockets.NetworkStream.Readable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a02b9-365">Gets or sets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> can be read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-365">Gets or sets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> can be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a02b9-366">
            <see langword="true" /> 해당는 <see cref="T:System.Net.Sockets.NetworkStream" /> 수 읽기 없으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-366">
              <see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> can be read; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a02b9-367">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-367">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-368">파생 되어야 합니다는 <xref:System.Net.Sockets.NetworkStream> 사용 하는 클래스는 <xref:System.Net.Sockets.NetworkStream.Readable%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-368">You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Readable%2A> property.</span></span> <span data-ttu-id="a02b9-369">경우 <xref:System.Net.Sockets.NetworkStream.Readable%2A> 은 `true`, <xref:System.Net.Sockets.NetworkStream> 를 호출할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-369">If <xref:System.Net.Sockets.NetworkStream.Readable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="a02b9-370">확인할 수도 있습니다 여부는 <xref:System.Net.Sockets.NetworkStream> 가 공개적으로 액세스할 수를 확인 하 여 읽을 수 <xref:System.Net.Sockets.NetworkStream.CanRead%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-370">You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is readable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property.</span></span>  
  
 <span data-ttu-id="a02b9-371"><xref:System.Net.Sockets.NetworkStream.Readable%2A> 속성을 설정 하는 경우는 <xref:System.Net.Sockets.NetworkStream> 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-371">The <xref:System.Net.Sockets.NetworkStream.Readable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a02b9-372">다음 코드 예제에서는 `CanCommunicate` 속성 검사는 <xref:System.Net.Sockets.NetworkStream.Readable%2A> 여부를 확인 하는 속성은 <xref:System.Net.Sockets.NetworkStream> 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-372">In the following code example, the `CanCommunicate` property checks the <xref:System.Net.Sockets.NetworkStream.Readable%2A> property to determine if the <xref:System.Net.Sockets.NetworkStream> is readable.</span></span>  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int size, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="networkStream.ReadAsync (buffer, offset, size, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="size">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Sockets.NetworkStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a02b9-373">Gets or sets the amount of time that a read operation blocks waiting for data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-373">Gets or sets the amount of time that a read operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a02b9-374">A <see cref="T:System.Int32" /> 읽기 작업이 실패 하기 전에 경과 되는 밀리초 단위로 시간을 지정 하 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-374">A <see cref="T:System.Int32" /> that specifies the amount of time, in milliseconds, that will elapse before a read operation fails.</span>
          </span>
          <span data-ttu-id="a02b9-375">기본 값, <see cref="F:System.Threading.Timeout.Infinite" />, 읽기 작업에 제한 시간이 없음을 지정 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-375">The default value, <see cref="F:System.Threading.Timeout.Infinite" />, specifies that the read operation does not time out.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-376">이 속성에서 지정한 시간 내에 읽기 작업이 완료 되지 않으면, 읽기 작업에서 throw 한 <xref:System.IO.IOException>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-376">If the read operation does not complete within the time specified by this property, the read operation throws an <xref:System.IO.IOException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a02b9-377">이 속성은 적용 동기 읽기에만 호출 하 여 수행 된 <xref:System.Net.Sockets.NetworkStream.Read%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-377">This property affects only synchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="a02b9-378">이 속성은 비동기 읽기를 호출 하 여 수행에 영향을 주지 않습니다는 <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-378">This property does not affect asynchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a02b9-379">다음 코드 예제에서는 10 밀리초 네트워크 스트림에 대 한 읽기 제한 시간을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-379">The following code example sets the read time-out for a network stream to 10 milliseconds.</span></span>  
  
 [!code-csharp[NCLTcpClientSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a02b9-380">The value specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-380">The value specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="networkStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="a02b9-381">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-381">This parameter is not used.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="a02b9-382">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-382">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a02b9-383">Sets the current position of the stream to the given value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-383">Sets the current position of the stream to the given value.</span>
          </span>
          <span data-ttu-id="a02b9-384">This method is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-384">This method is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a02b9-385">The position in the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-385">The position in the stream.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a02b9-386">Any use of this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-386">Any use of this property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="networkStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a02b9-387">This parameter is not used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-387">This parameter is not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a02b9-388">Sets the length of the stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-388">Sets the length of the stream.</span>
          </span>
          <span data-ttu-id="a02b9-389">This method always throws a <see cref="T:System.NotSupportedException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-389">This method always throws a <see cref="T:System.NotSupportedException" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a02b9-390">Any use of this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-390">Any use of this property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Socket">
      <MemberSignature Language="C#" Value="protected System.Net.Sockets.Socket Socket { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Socket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Socket" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Socket As Socket" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Net::Sockets::Socket ^ Socket { System::Net::Sockets::Socket ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Socket : System.Net.Sockets.Socket" Usage="System.Net.Sockets.NetworkStream.Socket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a02b9-391">Gets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-391">Gets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a02b9-392">A <see cref="T:System.Net.Sockets.Socket" /> 기본 네트워크 연결을 나타내는입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-392">A <see cref="T:System.Net.Sockets.Socket" /> that represents the underlying network connection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-393">파생 된 클래스 <xref:System.Net.Sockets.NetworkStream> 이 속성을 사용 하 여 기본 가져올 수 <xref:System.Net.Sockets.Socket>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-393">Classes deriving from <xref:System.Net.Sockets.NetworkStream> can use this property to get the underlying <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="a02b9-394">기본 사용 하 여 <xref:System.Net.Sockets.Socket> 에서 반환 되는 <xref:System.Net.Sockets.NetworkStream.Socket%2A> 는 그 외에도 필요 하면 액세스 <xref:System.Net.Sockets.NetworkStream> 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-394">Use the underlying <xref:System.Net.Sockets.Socket> returned from the <xref:System.Net.Sockets.NetworkStream.Socket%2A> property if you require access beyond that which <xref:System.Net.Sockets.NetworkStream> provides.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a02b9-395">이 속성은이 클래스 또는 파생된 클래스를 통해서만 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-395">This property is accessible only through this class or a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a02b9-396">다음 코드 예제에서는 기본 검색 <xref:System.Net.Sockets.Socket> 활성 연결을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-396">The following code example retrieves the underlying <xref:System.Net.Sockets.Socket> to verify an active connection.</span></span>  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="networkStream.Write (buffer, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="a02b9-397">An array of type <see cref="T:System.Byte" /> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-397">An array of type <see cref="T:System.Byte" /> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="a02b9-398">The location in <c>buffer</c> from which to start writing data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-398">The location in <c>buffer</c> from which to start writing data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="a02b9-399">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-399">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a02b9-400">Writes data to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-400">Writes data to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-401"><xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드를 지정 된 위치에서 시작 `offset` 보냅니다 `size` 의 내용에서 바이트 `buffer` 네트워크에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-401">The <xref:System.Net.Sockets.NetworkStream.Write%2A> method starts at the specified `offset` and sends `size` bytes from the contents of `buffer` to the network.</span></span> <span data-ttu-id="a02b9-402"><xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드가 요청 된 바이트 수를 보낼 때까지 또는 차단 <xref:System.Net.Sockets.SocketException> throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-402">The <xref:System.Net.Sockets.NetworkStream.Write%2A> method blocks until the requested number of bytes is sent or a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="a02b9-403">표시 되 면 한 <xref:System.Net.Sockets.SocketException>를 사용 하 여는 <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> 속성을 특정 오류 코드는 Windows 소켓 버전 2 API 오류 코드 MSDN 설명서에서에서 오류에 대 한 자세한 설명은 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="a02b9-403">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code, and refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a02b9-404">확인은 <xref:System.Net.Sockets.NetworkStream> 이 액세스 하 여 쓰기 가능한는 <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-404">Check to see if the <xref:System.Net.Sockets.NetworkStream> is writable by accessing the <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property.</span></span> <span data-ttu-id="a02b9-405">에 쓰기를 시도 하는 경우는 <xref:System.Net.Sockets.NetworkStream> 쓰기 가능 하지 않습니다, 받아볼 수는 <xref:System.IO.IOException>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-405">If you attempt to write to a <xref:System.Net.Sockets.NetworkStream> that is not writable, you will get an <xref:System.IO.IOException>.</span></span> <span data-ttu-id="a02b9-406">표시 되 면는 <xref:System.IO.IOException>, 확인 된 <xref:System.Exception.InnerException%2A> 속성 것 인 한 것을 확인 하는 <xref:System.Net.Sockets.SocketException>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-406">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a02b9-407">다음 코드 예제에서는 볼 수 있는지 여부를 <xref:System.Net.Sockets.NetworkStream> 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-407">The following code example checks to see whether the <xref:System.Net.Sockets.NetworkStream> is writable.</span></span> <span data-ttu-id="a02b9-408">인 경우 다음 <xref:System.Net.Sockets.NetworkStream.Write%2A> 작은 메시지를 기록 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-408">If it is, then <xref:System.Net.Sockets.NetworkStream.Write%2A> is used to write a small message.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a02b9-409">The <paramref name="buffer" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-409">The <paramref name="buffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a02b9-410">The <paramref name="offset" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-410">The <paramref name="offset" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="a02b9-411">-or-  The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-411">-or-  The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="a02b9-412">-or-  The <paramref name="size" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-412">-or-  The <paramref name="size" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="a02b9-413">-or-  The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-413">-or-  The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="a02b9-414">There was a failure while writing to the network.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-414">There was a failure while writing to the network.</span>
          </span>
          <span data-ttu-id="a02b9-415">-or-  An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-415">-or-  An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="a02b9-416">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-416">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span>
          </span>
          <span data-ttu-id="a02b9-417">-or-  There was a failure reading from the network.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-417">-or-  There was a failure reading from the network.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
      </Docs>
    </Member>
    <Member MemberName="Writeable">
      <MemberSignature Language="C#" Value="protected bool Writeable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Writeable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Writeable" />
      <MemberSignature Language="VB.NET" Value="Protected Property Writeable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Writeable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Writeable : bool with get, set" Usage="System.Net.Sockets.NetworkStream.Writeable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a02b9-418">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> is writable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-418">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> is writable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a02b9-419">
            <see langword="true" /> 데이터 스트림;에 쓸 수 있으면 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-419">
              <see langword="true" /> if data can be written to the stream; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a02b9-420">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-420">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-421">파생 되어야 합니다는 <xref:System.Net.Sockets.NetworkStream> 사용 하는 클래스는 <xref:System.Net.Sockets.NetworkStream.Writeable%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-421">You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property.</span></span> <span data-ttu-id="a02b9-422">경우 <xref:System.Net.Sockets.NetworkStream.Writeable%2A> 은 `true`, <xref:System.Net.Sockets.NetworkStream> 를 호출할 수 있습니다는 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-422">If <xref:System.Net.Sockets.NetworkStream.Writeable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="a02b9-423">확인할 수도 있습니다 여부는 <xref:System.Net.Sockets.NetworkStream> 공개적으로 액세스할 수 있는 검사 하 여 쓰기 가능한가 <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-423">You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is writable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property.</span></span>  
  
 <span data-ttu-id="a02b9-424"><xref:System.Net.Sockets.NetworkStream.Writeable%2A> 속성을 설정 하는 경우는 <xref:System.Net.Sockets.NetworkStream> 초기화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-424">The <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a02b9-425">다음 코드 예제에서는 `CanCommunicate` 속성 검사는 <xref:System.Net.Sockets.NetworkStream.Writeable%2A> 여부를 확인 하는 속성은 <xref:System.Net.Sockets.NetworkStream> 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-425">In the following code example, the `CanCommunicate` property checks the <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property to determine if the <xref:System.Net.Sockets.NetworkStream> is writable.</span></span>  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Readable" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int size, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="networkStream.WriteAsync (buffer, offset, size, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="size">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Sockets.NetworkStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a02b9-426">Gets or sets the amount of time that a write operation blocks waiting for data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-426">Gets or sets the amount of time that a write operation blocks waiting for data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a02b9-427">A <see cref="T:System.Int32" /> 시간, 쓰기 작업이 실패 하기 전에 경과 되는 밀리초 단위로 지정 하 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-427">A <see cref="T:System.Int32" /> that specifies the amount of time, in milliseconds, that will elapse before a write operation fails.</span>
          </span>
          <span data-ttu-id="a02b9-428">기본 값, <see cref="F:System.Threading.Timeout.Infinite" />, 쓰기 작업에 제한 시간이 없음을 지정 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-428">The default value, <see cref="F:System.Threading.Timeout.Infinite" />, specifies that the write operation does not time out.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b9-429">이 속성에서 지정한 시간 내에 쓰기 작업이 완료 되지 않으면, 쓰기 작업이 throw 한 <xref:System.IO.IOException>합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-429">If the write operation does not complete within the time specified by this property, the write operation throws a <xref:System.IO.IOException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a02b9-430">이 속성에는 호출 하 여 수행 하는 동기 쓰기 작업에 적용 된 <xref:System.Net.Sockets.NetworkStream.Write%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-430">This property affects only synchronous write operations performed by calling the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="a02b9-431">이 속성은 호출 하 여 수행 된 비동기 쓰기 영향을 주지 않습니다는 <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a02b9-431">This property does not affect asynchronous writes performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a02b9-432">다음 코드 예제에서는 10 밀리초 네트워크 스트림에 쓰기 제한 시간을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="a02b9-432">The following code example sets the write time-out for a network stream to 10 milliseconds.</span></span>  
  
 [!code-cpp[NCLTcpServerSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclTcpServerSync/cpp/tcplistener.cpp#0)]
 [!code-csharp[NCLTcpServerSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclTcpServerSync/CS/tcplistener.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a02b9-433">The value specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a02b9-433">The value specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>