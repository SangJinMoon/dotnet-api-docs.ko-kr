<Type Name="DynamicUpdateMapQuery" FullName="System.Activities.DynamicUpdate.DynamicUpdateMapQuery">
  <TypeSignature Language="C#" Value="public class DynamicUpdateMapQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicUpdateMapQuery extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicUpdateMapQuery" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicUpdateMapQuery" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2bc50-101">동적 업데이트 맵 쿼리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="2bc50-101">Represents a dynamic update map query.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2bc50-102">이 클래스는 버전 관리 및 Windows Workflow Foundation의 동적 업데이트 기능을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="2bc50-102">This class supports the versioning and dynamic update functionality of Windows Workflow Foundation.</span></span> <span data-ttu-id="2bc50-103">워크플로 버전 관리, 워크플로 id 및 동적 업데이트에 대 한 자세한 내용은 다음 항목을 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="2bc50-103">For more information about workflow versioning, workflow identity, and dynamic update, see the following topics.</span></span>  
  
 [<span data-ttu-id="2bc50-104">워크플로 버전 관리</span><span class="sxs-lookup"><span data-stu-id="2bc50-104">Workflow Versioning</span></span>](http://go.microsoft.com/fwlink/?LinkID=271561)  
 <span data-ttu-id="2bc50-105">에 도입 된 워크플로 버전 관리 기능에 설명 [!INCLUDE[net_v45](~/includes/net-v45-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="2bc50-105">Describes the workflow versioning functionality introduced in [!INCLUDE[net_v45](~/includes/net-v45-md.md)].</span></span>  
  
 [<span data-ttu-id="2bc50-106">동적 업데이트</span><span class="sxs-lookup"><span data-stu-id="2bc50-106">Dynamic Update</span></span>](http://go.microsoft.com/fwlink/?LinkId=271563)  
 <span data-ttu-id="2bc50-107">동적 업데이트를 사용 하 여 지속형된 워크플로 인스턴스의 워크플로 정의 업데이트 하는 방법에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="2bc50-107">Describes how to update the workflow definition of a persisted workflow instance by using dynamic update.</span></span>  
  
 [<span data-ttu-id="2bc50-108">WorkflowApplication Id 및 버전 관리를 사용 하 여</span><span class="sxs-lookup"><span data-stu-id="2bc50-108">Using WorkflowApplication Identity and Versioning</span></span>](http://go.microsoft.com/fwlink/?LinkId=271564)  
 <span data-ttu-id="2bc50-109"><xref:System.Activities.WorkflowIdentity>를 사용하여 여러 버전의 워크플로를 함께 호스트하는 방법에 대해 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="2bc50-109">Describes how to use <xref:System.Activities.WorkflowIdentity> to host multiple versions of a workflow side-by-side.</span></span>  
  
 [<span data-ttu-id="2bc50-110">WorkflowServiceHost에서 Side-by-side 버전 관리</span><span class="sxs-lookup"><span data-stu-id="2bc50-110">Side by Side Versioning in WorkflowServiceHost</span></span>](http://go.microsoft.com/fwlink/?LinkId=271565)  
 <span data-ttu-id="2bc50-111">여러 버전의 단일 끝점에서 워크플로 호스트 하는 방법을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="2bc50-111">Describes how to host multiple versions of a workflow on a single endpoint.</span></span>  
  
 [<span data-ttu-id="2bc50-112">방법: 여러 버전의 워크플로 Side-by-Side 호스트</span><span class="sxs-lookup"><span data-stu-id="2bc50-112">How to: Host Multiple Versions of a Workflow Side-by-Side</span></span>](http://go.microsoft.com/fwlink/?LinkId=271566)  
 <span data-ttu-id="2bc50-113">이 단계는 [초보자를 위한 자습서](http://go.microsoft.com/fwlink/?LinkId=271570) 워크플로 정의 업데이트 하 고 동시에 이전 및 새 정의 사용 하 여 워크플로 호스트 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2bc50-113">This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating a workflow definition, and hosting workflows using both the old and new definition at the same time.</span></span>  
  
 [<span data-ttu-id="2bc50-114">방법: 실행 중인 워크플로 인스턴스의 정의 업데이트</span><span class="sxs-lookup"><span data-stu-id="2bc50-114">How to: Update the Definition of a Running Workflow Instance</span></span>](http://go.microsoft.com/fwlink/?LinkId=271567)  
 <span data-ttu-id="2bc50-115">이 단계는 [초보자를 위한 자습서](http://go.microsoft.com/fwlink/?LinkId=271570) 새 워크플로 정의 사용 하는 지속형된 워크플로 인스턴스를 업데이트 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="2bc50-115">This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating persisted workflow instances to use a new workflow definition.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanApplyUpdateWhileRunning">
      <MemberSignature Language="C#" Value="public bool CanApplyUpdateWhileRunning (System.Activities.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanApplyUpdateWhileRunning(class System.Activities.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.DynamicUpdateMapQuery.CanApplyUpdateWhileRunning(System.Activities.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanApplyUpdateWhileRunning(System::Activities::Activity ^ activity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="2bc50-116">현재 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="2bc50-116">The current activity.</span></span></param>
        <summary><span data-ttu-id="2bc50-117"><see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" />를 실행하는 동안 업데이트할 수 있는지 여부를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="2bc50-117">Specifies whether the <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" /> can update while running.</span></span></summary>
        <returns>
          <span data-ttu-id="2bc50-118"><see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" />를 실행 중에 업데이트할 수 있으면 <see langword="True" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="2bc50-118"><see langword="True" /> if the <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" /> can update while running; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindMatch">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2bc50-119"><see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" />와 일치하는 항목을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="2bc50-119">Searches for the match with <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindMatch">
      <MemberSignature Language="C#" Value="public System.Activities.Activity FindMatch (System.Activities.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Activity FindMatch(class System.Activities.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.DynamicUpdateMapQuery.FindMatch(System.Activities.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Activity ^ FindMatch(System::Activities::Activity ^ activity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="2bc50-120">일치 항목을 검색할 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="2bc50-120">The activity to be searched for a match.</span></span></param>
        <summary><span data-ttu-id="2bc50-121">지정된 동작을 사용하여 <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" />와 일치하는 항목을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="2bc50-121">Searches for the match with <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" /> using the specified activities.</span></span></summary>
        <returns><span data-ttu-id="2bc50-122">동작에 대한 일치입니다.</span><span class="sxs-lookup"><span data-stu-id="2bc50-122">The match for the activity.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMatch">
      <MemberSignature Language="C#" Value="public System.Activities.Variable FindMatch (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Variable FindMatch(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DynamicUpdate.DynamicUpdateMapQuery.FindMatch(System.Activities.Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Variable ^ FindMatch(System::Activities::Variable ^ variable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Variable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="2bc50-123">일치 항목을 검색할 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="2bc50-123">The variable to be searched for a match.</span></span></param>
        <summary><span data-ttu-id="2bc50-124">지정된 변수를 사용하여 <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" />와 일치하는 항목을 검색합니다.</span><span class="sxs-lookup"><span data-stu-id="2bc50-124">Searches for the match with <see cref="T:System.Activities.DynamicUpdate.DynamicUpdateMapQuery" /> using the specified variable.</span></span></summary>
        <returns><span data-ttu-id="2bc50-125">변수에 일치하는 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="2bc50-125">The match for the variable.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>