<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CaseInsensitiveHashCodeProvider.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5319b813ecdf2dee9aa52b1fd4eb55dfc997ff415.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">319b813ecdf2dee9aa52b1fd4eb55dfc997ff415</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.CaseInsensitiveHashCodeProvider">
          <source>Supplies a hash code for an object, using a hashing algorithm that ignores the case of strings.</source>
          <target state="translated">문자열의 대/소문자를 구분하지 않는 해시 알고리즘을 사용하여 개체에 대해 해시 코드를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CaseInsensitiveHashCodeProvider">
          <source><ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph> implements the <ph id="ph2">&lt;xref:System.Collections.IHashCodeProvider&gt;</ph> interface supporting case-insensitive comparisons on strings, just as <ph id="ph3">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph> implements the <ph id="ph4">&lt;xref:System.Collections.IComparer&gt;</ph> interface supporting case-insensitive comparisons on strings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph> 구현 하는 <ph id="ph2">&lt;xref:System.Collections.IHashCodeProvider&gt;</ph> 마찬가지로 문자열 대/소문자 구분 비교를 지 원하는 인터페이스 <ph id="ph3">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph> 구현 하는 <ph id="ph4">&lt;xref:System.Collections.IComparer&gt;</ph> 문자열에 대해 대/소문자 구분 비교를 지 원하는 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CaseInsensitiveHashCodeProvider">
          <source>The objects used as keys by a <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> are required to override the <ph id="ph2">&lt;xref:System.Object.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> method (or the <ph id="ph3">&lt;xref:System.Collections.IHashCodeProvider&gt;</ph> interface) and the <ph id="ph4">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph> method (or the <ph id="ph5">&lt;xref:System.Collections.IComparer&gt;</ph> interface).</source>
          <target state="translated">키로 사용 되는 개체는 <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> 재정의 하는 데 필요한는 <ph id="ph2">&lt;xref:System.Object.GetHashCode%2A?displayProperty=nameWithType&gt;</ph> 메서드 (또는 <ph id="ph3">&lt;xref:System.Collections.IHashCodeProvider&gt;</ph> 인터페이스) 및 <ph id="ph4">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph> 메서드 (또는 <ph id="ph5">&lt;xref:System.Collections.IComparer&gt;</ph> 인터페이스).</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CaseInsensitiveHashCodeProvider">
          <source>The implementation of both methods or interfaces must handle case sensitivity the same way; otherwise, the <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> might behave incorrectly.</source>
          <target state="translated">메서드나 인터페이스의 구현을 대/소문자 구분; 같은 방식으로 처리 해야 합니다. 그렇지 않은 경우는 <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> 올바르게 작동할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CaseInsensitiveHashCodeProvider">
          <source>For example, when creating a <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph>, you must use this class with the <ph id="ph2">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph> class or any case-insensitive <ph id="ph3">&lt;xref:System.Collections.IComparer&gt;</ph> implementation.</source>
          <target state="translated">예를 들어, 만들 때 한 <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph>를 사용 하 여이 클래스를 사용 해야는 <ph id="ph2">&lt;xref:System.Collections.CaseInsensitiveComparer&gt;</ph> 클래스 또는 대/소문자 구분 <ph id="ph3">&lt;xref:System.Collections.IComparer&gt;</ph> 구현 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.CaseInsensitiveHashCodeProvider">
          <source>The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.</source>
          <target state="translated">다음 코드 예제에서는 대/소문자 구분 해시 테이블 및 대/소문자 구분 해시 테이블 만들고 동일한 요소가 모두 포함 하는 경우에 해당 명령의 동작은 차이 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.Collections.CaseInsensitiveHashCodeProvider">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /&gt;</ph> class using the <ph id="ph2">&lt;see cref="P:System.Threading.Thread.CurrentCulture" /&gt;</ph> of the current thread.</source>
          <target state="translated">현재 스레드의 <ph id="ph1">&lt;see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /&gt;</ph>를 사용하여 <ph id="ph2">&lt;see cref="P:System.Threading.Thread.CurrentCulture" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor">
          <source>When the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph> instance is created using this constructor, the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> of the current thread is saved.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph> 인스턴스가이 생성자를 사용 하 여 생성 되는 <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> 현재 스레드의 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor">
          <source>Comparison procedures use the saved culture to determine the casing rules; therefore, hash code comparisons might have different results depending on the culture.</source>
          <target state="translated">대/소문자 규칙;을 확인 하려면 저장 된 문화권을 사용 하는 비교 프로시저 따라서 해시 코드 비교는 culture에 따라 다른 결과 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor">
          <source>For more information on culture-specific comparisons, see the <ph id="ph1">&lt;xref:System.Globalization&gt;</ph> namespace and <bpt id="p1">[</bpt>Globalization and Localization<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.</source>
          <target state="translated">문화권별 비교에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Globalization&gt;</ph> 네임 스페이스 및 <bpt id="p1">[</bpt>전역화 및 지역화<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor">
          <source>The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.</source>
          <target state="translated">다음 코드 예제에서는 대/소문자 구분 해시 테이블 및 대/소문자 구분 해시 테이블 만들고 동일한 요소가 모두 포함 하는 경우에 해당 명령의 동작은 차이 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> to use for the new <ph id="ph2">&lt;see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /&gt;</ph>.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>에 사용할 <ph id="ph2">&lt;see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /&gt;</ph> class using the specified <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /&gt;</ph>를 사용하여 <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)">
          <source>Comparison procedures use the specified <ph id="ph1">&lt;xref:System.Globalization.CultureInfo?displayProperty=nameWithType&gt;</ph> to determine the casing rules.</source>
          <target state="translated">비교 프로시저를 사용 하 여 지정 된 <ph id="ph1">&lt;xref:System.Globalization.CultureInfo?displayProperty=nameWithType&gt;</ph> 대/소문자 규칙을 결정 하 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)">
          <source>Hash code comparisons might have different results depending on the culture.</source>
          <target state="translated">해시 코드 비교는 culture에 따라 다른 결과 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)">
          <source>For more information on culture-specific comparisons, see the <ph id="ph1">&lt;xref:System.Globalization&gt;</ph> namespace and <bpt id="p1">[</bpt>Globalization and Localization<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.</source>
          <target state="translated">문화권별 비교에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Globalization&gt;</ph> 네임 스페이스 및 <bpt id="p1">[</bpt>전역화 및 지역화<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)">
          <source>The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.</source>
          <target state="translated">다음 코드 예제에서는 대/소문자 구분 해시 테이블 및 대/소문자 구분 해시 테이블 만들고 동일한 요소가 모두 포함 하는 경우에 해당 명령의 동작은 차이 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)">
          <source><ph id="ph1">&lt;paramref name="culture" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="culture" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Collections.CaseInsensitiveHashCodeProvider.Default">
          <source>Gets an instance of <ph id="ph1">&lt;see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /&gt;</ph> that is associated with the <ph id="ph2">&lt;see cref="P:System.Threading.Thread.CurrentCulture" /&gt;</ph> of the current thread and that is always available.</source>
          <target state="translated">현재 스레드의 <ph id="ph1">&lt;see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /&gt;</ph>와 관련되어 있고 항상 사용 가능한 <ph id="ph2">&lt;see cref="P:System.Threading.Thread.CurrentCulture" /&gt;</ph>의 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CaseInsensitiveHashCodeProvider.Default">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /&gt;</ph> that is associated with the <ph id="ph2">&lt;see cref="P:System.Threading.Thread.CurrentCulture" /&gt;</ph> of the current thread.</source>
          <target state="translated">현재 스레드의 <ph id="ph1">&lt;see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /&gt;</ph>와 관련된 <ph id="ph2">&lt;see cref="P:System.Threading.Thread.CurrentCulture" /&gt;</ph>의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CaseInsensitiveHashCodeProvider.Default">
          <source>When the <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph> instance is created using the parameterless constructor, the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> of the current thread is saved.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Collections.CaseInsensitiveHashCodeProvider&gt;</ph> 매개 변수가 없는 생성자를 사용 하 여 인스턴스가 생성 되는 <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> 현재 스레드의 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CaseInsensitiveHashCodeProvider.Default">
          <source>Comparison procedures use the saved culture to determine the casing rules; therefore, hash code comparisons might have different results depending on the culture.</source>
          <target state="translated">대/소문자 규칙;을 확인 하려면 저장 된 문화권을 사용 하는 비교 프로시저 따라서 해시 코드 비교는 culture에 따라 다른 결과 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CaseInsensitiveHashCodeProvider.Default">
          <source>For more information on culture-specific comparisons, see the <ph id="ph1">&lt;xref:System.Globalization&gt;</ph> namespace and <bpt id="p1">[</bpt>Globalization and Localization<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.</source>
          <target state="translated">문화권별 비교에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Globalization&gt;</ph> 네임 스페이스 및 <bpt id="p1">[</bpt>전역화 및 지역화<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant">
          <source>Gets an instance of <ph id="ph1">&lt;see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /&gt;</ph> that is associated with <ph id="ph2">&lt;see cref="P:System.Globalization.CultureInfo.InvariantCulture" /&gt;</ph> and that is always available.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /&gt;</ph>와 관련되어 있고 항상 사용 가능한 <ph id="ph2">&lt;see cref="P:System.Globalization.CultureInfo.InvariantCulture" /&gt;</ph>의 인스턴스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /&gt;</ph> that is associated with <ph id="ph2">&lt;see cref="P:System.Globalization.CultureInfo.InvariantCulture" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /&gt;</ph>와 관련된 <ph id="ph2">&lt;see cref="P:System.Globalization.CultureInfo.InvariantCulture" /&gt;</ph>의 인스턴스입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant">
          <source>Comparison procedures use the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph> to determine the casing rules.</source>
          <target state="translated">사용 하 여 비교 프로시저는 <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType&gt;</ph> 대/소문자 규칙을 결정 하 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant">
          <source>Hash code comparisons might have different results depending on the culture.</source>
          <target state="translated">해시 코드 비교는 culture에 따라 다른 결과 있을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant">
          <source>For more information on culture-specific comparisons, see the <ph id="ph1">&lt;xref:System.Globalization&gt;</ph> namespace and <bpt id="p1">[</bpt>Globalization and Localization<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>.</source>
          <target state="translated">문화권별 비교에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Globalization&gt;</ph> 네임 스페이스 및 <bpt id="p1">[</bpt>전역화 및 지역화<ept id="p1">](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant">
          <source>The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.</source>
          <target state="translated">다음 코드 예제에서는 대/소문자 구분 해시 테이블 및 대/소문자 구분 해시 테이블 만들고 동일한 요소가 모두 포함 하는 경우에 해당 명령의 동작은 차이 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> for which a hash code is to be returned.</source>
          <target state="translated">해시 코드가 반환될 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)">
          <source>Returns a hash code for the given object, using a hashing algorithm that ignores the case of strings.</source>
          <target state="translated">문자열의 대/소문자를 구분하지 않는 해시 알고리즘을 사용하여 지정된 개체의 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)">
          <source>A hash code for the given object, using a hashing algorithm that ignores the case of strings.</source>
          <target state="translated">문자열의 대/소문자를 구분하지 않는 해시 알고리즘을 사용하는 지정된 개체의 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)">
          <source>The return value from this method must not be persisted for two reasons.</source>
          <target state="translated">이 메서드의 반환 값 지속 되지 않아야 하는 두 가지 이유입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)">
          <source>First, the hash function of a class might be altered to generate a better distribution, thereby rendering any values from the old hash function useless.</source>
          <target state="translated">첫째, 오래 된 해시 함수에서 값 쓸모 되므로 향상 된 분포를 생성 하는 클래스의 해시 함수를 변경 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)">
          <source>Second, the default implementation of this class does not guarantee that the same value will be returned by different instances.</source>
          <target state="translated">둘째,이 클래스의 기본 구현은 동일한 값이 서로 다른 인스턴스에서 반환 될을 보장 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>