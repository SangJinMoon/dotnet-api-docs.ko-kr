<Type Name="IEqualityComparer" FullName="System.Collections.IEqualityComparer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="08d537b18fa6d11e4453df23dc3b19ca9719f29f" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52214133" /></Metadata><TypeSignature Language="C#" Value="public interface IEqualityComparer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEqualityComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IEqualityComparer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEqualityComparer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEqualityComparer" />
  <TypeSignature Language="F#" Value="type IEqualityComparer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fbc0c-101">같음에 대해 개체 비교를 지원하는 메서드를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-101">Defines methods to support the comparison of objects for equality.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="fbc0c-102">이 인터페이스는 컬렉션에 대 한 사용자 지정 된 같음 비교를 구현할을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-102">This interface allows the implementation of customized equality comparison for collections.</span></span> <span data-ttu-id="fbc0c-103">고유한 같음 정의 만들고이 정의 허용 하는 컬렉션 형식을 사용할 수를 지정 하는,는 <xref:System.Collections.IEqualityComparer> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-103">That is, you can create your own definition of equality, and specify that this definition be used with a collection type that accepts the <xref:System.Collections.IEqualityComparer> interface.</span></span> <span data-ttu-id="fbc0c-104">.NET framework에서의 생성자는 <xref:System.Collections.Hashtable>, <xref:System.Collections.Specialized.NameValueCollection>, 및 <xref:System.Collections.Specialized.OrderedDictionary> 컬렉션 형식은이 인터페이스를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-104">In the .NET Framework, constructors of the <xref:System.Collections.Hashtable>, <xref:System.Collections.Specialized.NameValueCollection>, and <xref:System.Collections.Specialized.OrderedDictionary> collection types accept this interface.</span></span>  

<span data-ttu-id="fbc0c-105">이 인터페이스의 제네릭 버전을 참조 하세요. <xref:System.Collections.Generic.IEqualityComparer%601?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-105">For the generic version of this interface, see <xref:System.Collections.Generic.IEqualityComparer%601?displayProperty=nameWithType>.</span></span>  
  
<span data-ttu-id="fbc0c-106">`IEqualityComparer` 인터페이스 같음 비교만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-106">The `IEqualityComparer` interface supports only equality comparisons.</span></span> <span data-ttu-id="fbc0c-107">제공 하는 사용자 지정 정렬 및 순서에 대 한 비교는 <xref:System.Collections.IComparer> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-107">Customization of comparisons for sorting and ordering is provided by the <xref:System.Collections.IComparer> interface.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Hashtable" />
    <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
    <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
    <altmember cref="T:System.Collections.IComparer" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As Object, y As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ x, System::Object ^ y);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj * obj -&gt; bool" Usage="iEqualityComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="fbc0c-108">비교할 첫 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-108">The first object to compare.</span></span></param>
        <param name="y"><span data-ttu-id="fbc0c-109">비교할 두 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-109">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="fbc0c-110">지정한 개체가 같은지를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-110">Determines whether the specified objects are equal.</span></span></summary>
        <returns><span data-ttu-id="fbc0c-111">지정한 개체가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-111"><see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbc0c-112">개체에 대 한 사용자 지정 된 같음 비교를 제공 하려면이 메서드를 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-112">Implement this method to provide a customized equality comparison for objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbc0c-113">다음 코드 예제는 대/소문자의 구현을 보여 줍니다. <xref:System.Collections.IEqualityComparer>합니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-113">The following code example demonstrates the implementation of a case-insensitive <xref:System.Collections.IEqualityComparer>.</span></span> <span data-ttu-id="fbc0c-114">이 예제는 <xref:System.Collections.CaseInsensitiveComparer.Compare%2A?displayProperty=nameWithType> 메서드는 두 개체가 같은지 여부를 제공 된 기준 결정 데 <xref:System.Globalization.CultureInfo>합니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-114">In this example, the <xref:System.Collections.CaseInsensitiveComparer.Compare%2A?displayProperty=nameWithType> method is used to determine whether two objects are equal, based on the provided <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#2)]
 [!code-csharp[System.Collections.Hashtable_ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#2)]
 [!code-vb[System.Collections.Hashtable_ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fbc0c-115"><paramref name="x" /> 및 <paramref name="y" /> 가 형식이 다르므로 및 없는 다른 비교를 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-115"><paramref name="x" /> and <paramref name="y" /> are of different types and neither one can handle comparisons with the other.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="fbc0c-116"><see cref="M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)" /> 메서드는 재귀, 대칭, 및 전이적입니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-116">The <see cref="M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)" /> method is reflexive, symmetric, and transitive.</span></span> <span data-ttu-id="fbc0c-117">즉, 반환 <see langword="true" /> 자체를 사용 하 여 개체를 비교 하는 데 사용 하는 경우 <see langword="true" /> 두 개체에 대 한 <paramref name="x" /> 하 고 <paramref name="y" /> 경우 <see langword="true" /> 에 대 한 <paramref name="y" /> 하 고 <paramref name="x" />; 및 <see langword="true" /> 두 개체에 대 한 <paramref name="x" /> 및 <c>z</c> 경우<see langword="true" />에 대 한 <paramref name="x" /> 하 고 <paramref name="y" /> 그리고 <see langword="true" /> 에 대 한 <paramref name="y" /> 하 고 <c>z</c>입니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-117">That is, it returns <see langword="true" /> if used to compare an object with itself; <see langword="true" /> for two objects <paramref name="x" /> and <paramref name="y" /> if it is <see langword="true" /> for <paramref name="y" /> and <paramref name="x" />; and <see langword="true" /> for two objects <paramref name="x" /> and <c>z</c> if it is <see langword="true" /> for <paramref name="x" /> and <paramref name="y" /> and also <see langword="true" /> for <paramref name="y" /> and <c>z</c>.</span></span>  
  
<span data-ttu-id="fbc0c-118">구현이 있는지를 확인 하는 데 필요한 합니다 <see cref="M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)" /> 메서드가 반환 되는 <see langword="true" /> 두 개체에 대 한 <paramref name="x" /> 및 <paramref name="y" />, 반환한 값을 <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> 메서드를 <paramref name="x" /> 에 대 한 반환 값과 같아야 <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-118">Implementations are required to ensure that if the <see cref="M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)" /> method returns <see langword="true" /> for two objects <paramref name="x" /> and <paramref name="y" />, then the value returned by the <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method for <paramref name="x" /> must equal the value returned for <paramref name="y" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : obj -&gt; int" Usage="iEqualityComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="fbc0c-119"><see cref="T:System.Object" /> 는 해시 코드를 반환 하는 것에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-119">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span></span></param>
        <summary><span data-ttu-id="fbc0c-120">지정한 개체의 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-120">Returns a hash code for the specified object.</span></span></summary>
        <returns><span data-ttu-id="fbc0c-121">지정한 개체의 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-121">A hash code for the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbc0c-122">제공한 사용자 지정 된 같음 비교를 해당 개체에 대 한 사용자 지정 된 해시 코드를 제공 하려면이 메서드를 구현 합니다 <xref:System.Collections.IEqualityComparer.Equals%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-122">Implement this method to provide customized hash codes for objects,corresponding to the customized equality comparison provided by the <xref:System.Collections.IEqualityComparer.Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbc0c-123">다음 코드 예제는 대/소문자의 구현을 보여 줍니다. <xref:System.Collections.IEqualityComparer>합니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-123">The following code example demonstrates the implementation of a case-insensitive <xref:System.Collections.IEqualityComparer>.</span></span> <span data-ttu-id="fbc0c-124">이 예제에서는 합니다 <xref:System.Collections.IEqualityComparer.GetHashCode%2A> 제공한 해시 코드를 반환 하는 메서드는 <xref:System.Object> 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-124">In this example, the <xref:System.Collections.IEqualityComparer.GetHashCode%2A> method returns the hash code provided by the <xref:System.Object> type.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#2)]
 [!code-csharp[System.Collections.Hashtable_ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#2)]
 [!code-vb[System.Collections.Hashtable_ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fbc0c-125">유형의 <paramref name="obj" /> 는 참조 형식 및 <paramref name="obj" /> 는 <see langword="null" />합니다.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-125">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="fbc0c-126">구현이 있는지를 확인 하는 데 필요한 합니다 <see cref="M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)" /> 메서드가 반환 되는 <see langword="true" /> 두 개체에 대 한 <paramref name="x" /> 및 <paramref name="y" />, 반환한 값을 <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> 메서드를 <paramref name="x" /> 에 대 한 반환 값과 같아야 <paramref name="y" />.</span><span class="sxs-lookup"><span data-stu-id="fbc0c-126">Implementations are required to ensure that if the <see cref="M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)" /> method returns <see langword="true" /> for two objects <paramref name="x" /> and <paramref name="y" />, then the value returned by the <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method for <paramref name="x" /> must equal the value returned for <paramref name="y" />.</span></span></para></block>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
  </Members>
</Type>