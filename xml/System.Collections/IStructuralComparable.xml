<Type Name="IStructuralComparable" FullName="System.Collections.IStructuralComparable">
  <TypeSignature Language="C#" Value="public interface IStructuralComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralComparable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a9baf-101">컬렉션 개체의 구조적 비교를 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-101">Supports the structural comparison of collection objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9baf-102"><xref:System.Collections.IStructuralComparable> 인터페이스를 사용 하면 컬렉션 멤버에 대 한 사용자 지정 된 비교를 구현할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-102">The <xref:System.Collections.IStructuralComparable> interface enables you to implement customized comparisons for collection members.</span></span> <span data-ttu-id="a9baf-103">즉, 정확 하 게 그 의미를 앞에 따르거나 정렬 순서에서 두 번째 컬렉션 개체를 같은 위치에서 발생 한 컬렉션 개체에 대 한을 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-103">That is, you can define precisely what it means for one collection object to precede, follow, or occur in the same position in the sort order as a second collection object.</span></span> <span data-ttu-id="a9baf-104">이 정의 허용 하는 컬렉션 형식으로 사용할 수 있는지 지정할 수 있습니다는 <xref:System.Collections.IStructuralComparable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-104">You can then specify that this definition be used with a collection type that accepts the <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="a9baf-105">인터페이스에는 단일 멤버 <xref:System.Collections.IStructuralComparable.CompareTo%2A>, 현재 컬렉션 개체 보다 작은지, 같은지 또는 정렬 순서에서 두 번째 개체 보다 크면 인지를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-105">The interface has a single member, <xref:System.Collections.IStructuralComparable.CompareTo%2A>, which determines whether the current collection object is less than, equal to, or greater than a second object in the sort order.</span></span> <span data-ttu-id="a9baf-106">멤버 또는 두 번째 개체를 사용 하 여 현재 인스턴스의 요소 실제 비교를 수행 하 여 프로그램 <xref:System.Collections.IComparer> 사용자 지정 비교의 정의 포함 하는 인터페이스 구현.</span><span class="sxs-lookup"><span data-stu-id="a9baf-106">The actual comparison of the members or elements in the current instance with those in a second object is performed by an <xref:System.Collections.IComparer> interface implementation, which contains the definition of your custom comparison.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9baf-107"><xref:System.Collections.IStructuralComparable> 인터페이스 정렬 또는 순서에 대 한 구조 비교만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-107">The <xref:System.Collections.IStructuralComparable> interface supports only structural comparisons for sorting or ordering.</span></span> <span data-ttu-id="a9baf-108"><xref:System.Collections.IStructuralEquatable> 인터페이스 구조적 같음에 대 한 사용자 지정 비교를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-108">The <xref:System.Collections.IStructuralEquatable> interface supports custom comparisons for structural equality.</span></span>  
  
 <span data-ttu-id="a9baf-109">.NET Framework는 두 명의 기본 비교자를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-109">The .NET Framework provides two default comparers.</span></span> <span data-ttu-id="a9baf-110">반환 되는 <xref:System.Collections.StructuralComparisons.StructuralComparer%2A?displayProperty=nameWithType> 속성에서 반환 되 고 다른는 <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-110">One is returned by the <xref:System.Collections.StructuralComparisons.StructuralComparer%2A?displayProperty=nameWithType> property; the other is returned by the <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="a9baf-111">제네릭 튜플 클래스 (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>등) 및 <xref:System.Array> 클래스의 명시적 구현을 제공는 <xref:System.Collections.IStructuralComparable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-111">The generic tuple classes (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>, and so on) and the <xref:System.Array> class provide explicit implementations of the <xref:System.Collections.IStructuralComparable> interface.</span></span> <span data-ttu-id="a9baf-112">캐스팅 (C#) 또는 변환 (Visual Basic의 경우)의 배열 또는 튜플의 현재 인스턴스에 의해는 <xref:System.Collections.IStructuralComparable> 인터페이스 값 제공 하 여 <xref:System.Collections.IComparer> 구현에 대 한 인수로 <xref:System.Collections.IStructuralComparable.CompareTo%2A> 메서드를 사용자 지정 정렬 순서를 정의할 수 있습니다는 배열 또는 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-112">By casting (in C#) or converting (in Visual Basic) the current instance of an array or tuple to an <xref:System.Collections.IStructuralComparable> interface value and providing your <xref:System.Collections.IComparer> implementation as an argument to the <xref:System.Collections.IStructuralComparable.CompareTo%2A> method, you can define a custom sort order for the array or collection.</span></span> <span data-ttu-id="a9baf-113">그러나 호출 하지는 않습니다는 <xref:System.Collections.IStructuralComparable.CompareTo%2A> 대부분의 경우에서 직접 메서드.</span><span class="sxs-lookup"><span data-stu-id="a9baf-113">However, you do not call the <xref:System.Collections.IStructuralComparable.CompareTo%2A> method directly in most cases.</span></span> <span data-ttu-id="a9baf-114">대신,는 <xref:System.Collections.IStructuralComparable.CompareTo%2A> 메서드는 같은 정렬 메서드 <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29>합니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-114">Instead, the <xref:System.Collections.IStructuralComparable.CompareTo%2A> method is called by sorting methods such as <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29>.</span></span> <span data-ttu-id="a9baf-115">정의 하는 경우에 프로그램 <xref:System.Collections.IComparer> 구현 된 정렬 메서드나 컬렉션 개체의 클래스 생성자에 인수로 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-115">In this case, you define your <xref:System.Collections.IComparer> implementation and pass it as an argument to a sorting method or collection object's class constructor.</span></span> <span data-ttu-id="a9baf-116"><xref:System.Collections.IStructuralComparable.CompareTo%2A> 사용자 사용자 지정 비교자와 함께 메서드는 컬렉션을 정렬할 될 때마다 자동으로 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-116">The <xref:System.Collections.IStructuralComparable.CompareTo%2A> method with your custom comparer is then called automatically whenever the collection is sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9baf-117">다음 예제에서는 배열을 <xref:System.Tuple%606> 1960에서 2000 세 미국 도시의 인구 데이터에 포함 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-117">The following example creates an array of <xref:System.Tuple%606> objects that contains population data for three U.S. cities from 1960 to 2000.</span></span> <span data-ttu-id="a9baf-118">6 중의 첫 번째 구성 요소는 도시 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-118">The sextuple's first component is the city name.</span></span> <span data-ttu-id="a9baf-119">나머지 5 개의 구성 요소를 2000 1960에서 10 년 간격 인구를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-119">The remaining five components represent the population at ten-year intervals from 1960 to 2000.</span></span>  
  
 <span data-ttu-id="a9baf-120">`PopulationComparer` 클래스를 제공는 <xref:System.Collections.IComparer> 해당 구성 요소 중 하나에 의해 정렬 로스엔젤레스와 6 배열을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-120">The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of sextuples to be sorted by any one of its components.</span></span> <span data-ttu-id="a9baf-121">두 값에 제공 되는 `PopulationComparer` 클래스의 생성자에: 정렬 순서를 정의 하는 구성 요소 및 튜플 개체를 오름차순 또는 내림차순으로 정렬할지 여부를 나타내는 부울 값의 위치입니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-121">Two values are provided to the `PopulationComparer` class in its constructor: the position of the component that defines the sort order, and a Boolean value that indicates whether the tuple objects should be sorted in ascending or descending order.</span></span>  
  
 <span data-ttu-id="a9baf-122">이 예제에서는 다음 순서로 정렬 되지 않은 배열 요소를 표시, 세 번째 구성 요소 (1970의 인구)를 기준으로 정렬 하 고, 및 다음 여섯 번째 구성 요소 (2000에서 인구)를 기준으로 정렬을 표시 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-122">The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1970) and displays them, and then sorts them by the sixth component (the population in 2000) and displays them.</span></span> <span data-ttu-id="a9baf-123">이 예제에서는 직접 호출 하지 않는 참고는 <xref:System.Collections.IStructuralComparable.CompareTo%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="a9baf-123">Note that the example does not directly call the <xref:System.Collections.IStructuralComparable.CompareTo%2A> method.</span></span> <span data-ttu-id="a9baf-124">메서드가 의해 암시적으로 호출 되는 <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29> 메서드는 배열에 있는 각 튜플 개체에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-124">The method is called implicitly by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29> method for each tuple object in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.IStructuralEquatable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralComparer" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="a9baf-125">현재 인스턴스와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-125">The object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="a9baf-126">현재 컬렉션 개체의 멤버를 <c>other</c>의 해당하는 멤버와 비교하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-126">An object that compares members of the current collection object with the corresponding members of <c>other</c>.</span></span></param>
        <summary><span data-ttu-id="a9baf-127">정렬 순서에서 현재 컬렉션 개체의 위치가 다른 개체보다 앞인지, 뒤인지 또는 동일한지를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-127">Determines whether the current collection object precedes, occurs in the same position as, or follows another object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="a9baf-128">다음 표와 같이 현재 컬렉션 개체와 <paramref name="other" /> 사이의 관계를 나타내는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-128">An integer that indicates the relationship of the current collection object to <paramref name="other" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="a9baf-129"><list type="table"><listheader><term> 반환 값</span><span class="sxs-lookup"><span data-stu-id="a9baf-129"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="a9baf-130"></term><description> 설명</span><span class="sxs-lookup"><span data-stu-id="a9baf-130"></term><description> Description</span></span>  
  
 <span data-ttu-id="a9baf-131"></description></listheader><item><term> -1</span><span class="sxs-lookup"><span data-stu-id="a9baf-131"></description></listheader><item><term> -1</span></span>  
  
 <span data-ttu-id="a9baf-132"></term><description> 현재 인스턴스가 <paramref name="other" /> 앞에 옵니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-132"></term><description> The current instance precedes <paramref name="other" />.</span></span>  
  
 <span data-ttu-id="a9baf-133"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="a9baf-133"></description></item><item><term> 0</span></span>  
  
 <span data-ttu-id="a9baf-134"></term><description> 현재 인스턴스와 <paramref name="other" />이 같습니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-134"></term><description> The current instance and <paramref name="other" /> are equal.</span></span>  
  
 <span data-ttu-id="a9baf-135"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="a9baf-135"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="a9baf-136"></term><description> 현재 인스턴스가 <paramref name="other" /> 뒤에 옵니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-136"></term><description> The current instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9baf-137"><xref:System.Collections.IStructuralComparable.CompareTo%2A> 구조적 사용자 지정 비교 및 정렬 배열과 튜플 개체의 메서드를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-137">The <xref:System.Collections.IStructuralComparable.CompareTo%2A> method supports custom structural comparison and sorting of array and tuple objects.</span></span> <span data-ttu-id="a9baf-138"><xref:System.Collections.IStructuralComparable.CompareTo%2A> 메서드 호출의 `comparer` 개체의 <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> 튜플 구성, 첫 번째 요소 또는 구성 요소 시작 또는 개별 배열 요소를 비교 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="a9baf-138">The <xref:System.Collections.IStructuralComparable.CompareTo%2A> method calls the `comparer` object's <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> method to compare individual array elements or tuple components, starting with the first element or component.</span></span> <span data-ttu-id="a9baf-139">에 대 한 개별 호출이 <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> 끝 및 <xref:System.Collections.IStructuralComparable.CompareTo%2A> 다음 조건 중 하나가 해지면 메서드 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-139">The individual calls to <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> end and the <xref:System.Collections.IStructuralComparable.CompareTo%2A> method returns a value when one of the following conditions becomes true:</span></span>  
  
-   <span data-ttu-id="a9baf-140"><xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> 메서드는-1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-140">The <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> method returns -1.</span></span>  
  
-   <span data-ttu-id="a9baf-141"><xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> 메서드 1을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-141">The <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> method returns 1.</span></span>  
  
-   <span data-ttu-id="a9baf-142"><xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> 마지막 요소 또는 구성 요소 컬렉션 개체에 대해 메서드가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-142">The <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> method is called for the last element or component in the collection object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9baf-143">다음 예제에서는 배열을 <xref:System.Tuple%606> 1960에서 2000 세 미국 도시의 인구 데이터에 포함 된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-143">The following example creates an array of <xref:System.Tuple%606> objects that contains population data for three U.S. cities from 1960 to 2000.</span></span> <span data-ttu-id="a9baf-144">6 중의 첫 번째 구성 요소는 도시 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-144">The sextuple's first component is the city name.</span></span> <span data-ttu-id="a9baf-145">나머지 5 개의 구성 요소를 2000 1960에서 10 년 간격 인구를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-145">The remaining five components represent the population at ten-year intervals from 1960 to 2000.</span></span>  
  
 <span data-ttu-id="a9baf-146">`PopulationComparer` 클래스를 제공는 <xref:System.Collections.IComparer> 해당 구성 요소 중 하나에 의해 정렬 로스엔젤레스와 6 배열을 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-146">The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of sextuples to be sorted by any one of its components.</span></span> <span data-ttu-id="a9baf-147">두 값에 제공 되는 `PopulationComparer` 클래스의 생성자에: 정렬 순서를 정의 하는 구성의 위치 및 <xref:System.Boolean> 튜플 개체를 오름차순 또는 내림차순으로 정렬할지 여부를 나타내는 값입니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-147">Two values are provided to the `PopulationComparer` class in its constructor: the position of the component that defines the sort order, and a <xref:System.Boolean> value that indicates whether the tuple objects should be sorted in ascending or descending order.</span></span>  
  
 <span data-ttu-id="a9baf-148">이 예제에서는 다음 순서로 정렬 되지 않은 배열 요소를 표시, 세 번째 구성 요소 (1970의 인구)를 기준으로 정렬 하 고, 및 다음 여섯 번째 구성 요소 (2000에서 인구)를 기준으로 정렬을 표시 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-148">The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1970) and displays them, and then sorts them by the sixth component (the population in 2000) and displays them.</span></span> <span data-ttu-id="a9baf-149">이 예제에서는 직접 호출 하지 않는 참고는 <xref:System.Collections.IStructuralComparable.CompareTo%2A?displayProperty=nameWithType> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-149">Note that the example does not directly call the <xref:System.Collections.IStructuralComparable.CompareTo%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="a9baf-150">메서드가 의해 암시적으로 호출 되는 <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29> 메서드는 배열에 있는 각 튜플 개체에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="a9baf-150">The method is called implicitly by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29> method for each tuple object in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a9baf-151">이 인스턴스와 <paramref name="other" />가 동일한 형식이 아닌 경우</span><span class="sxs-lookup"><span data-stu-id="a9baf-151">This instance and <paramref name="other" /> are not the same type.</span></span></exception>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
  </Members>
</Type>