<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IStructuralEquatable.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e79517aa8dab302204c461cf349e6d34f100645e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e79517aa8dab302204c461cf349e6d34f100645e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.IStructuralEquatable">
          <source>Defines methods to support the comparison of objects for structural equality.</source>
          <target state="translated">구조적 같음에 대한 개체 비교를 지원하는 메서드를 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>Structural equality means that two objects are equal because they have equal values.</source>
          <target state="translated">구조적 같음 값이 같으면 두 개체가 같은지를 의미 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>It differs from reference equality, which indicates that two object references are equal because they reference the same physical object.</source>
          <target state="translated">동일한 실제 개체를 참조 하기 때문에 두 개체 참조가 같은지를 나타내는 참조 일치에서 점이 다릅니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface enables you to implement customized comparisons to check for the structural equality of collection objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> 인터페이스를 사용 하면 컬렉션 개체의 구조적으로 같은지 확인 하려면 사용자 지정 된 비교를 구현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>That is, you can create your own definition of structural equality and specify that this definition be used with a collection type that accepts the <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">구조적 일치의 고유한 정의 만들어 허용 하는 컬렉션 형식으로 사용 하도록이 정의 지정 하는 즉,는 <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The interface has two members: <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph>, which tests for equality by using a specified <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> implementation, and <ph id="ph3">&lt;xref:System.Collections.IStructuralEquatable.GetHashCode%2A&gt;</ph>, which returns identical hash codes for objects that are equal.</source>
          <target state="translated">인터페이스는 두 명의 멤버가: <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph>, 지정 된를 사용 하 여 같음 여부를 테스트 하는 <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> 구현 및 <ph id="ph3">&lt;xref:System.Collections.IStructuralEquatable.GetHashCode%2A&gt;</ph>, 동일한 개체에 대해 동일한 해시 코드를 반환 하는 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface supports only custom comparisons for structural equality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> 인터페이스 구조적 같음에 대 한 사용자 지정 비교만 지원 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface supports custom structural comparisons for sorting and ordering.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> 인터페이스 정렬 및 순서 지정에 대 한 사용자 지정의 구조적 비교를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The .NET Framework also provides default equality comparers, which are returned by the <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType&gt;</ph> properties.</source>
          <target state="translated">.NET Framework 또한 기본 제공 하 여 반환 되는 같음 비교자는 <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>For more information, see the example.</source>
          <target state="translated">자세한 내용은 예제를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The generic tuple classes (<ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%602&gt;</ph>, <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph>, and so on) and the <ph id="ph4">&lt;xref:System.Array&gt;</ph> class provide explicit implementations of the <ph id="ph5">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">제네릭 튜플 클래스 (<ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%602&gt;</ph>, <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph>등) 및 <ph id="ph4">&lt;xref:System.Array&gt;</ph> 클래스의 명시적 구현을 제공는 <ph id="ph5">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>By casting (in C#) or converting (in Visual Basic) the current instance of an array or tuple to an <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface value and providing your <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> implementation as an argument to the <ph id="ph3">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph> method, you can define a custom equality comparison for the array or collection.</source>
          <target state="translated">캐스팅 (C#) 또는 변환 (Visual Basic의 경우)의 배열 또는 튜플의 현재 인스턴스에 의해는 <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> 인터페이스 값 제공 하 여 <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer&gt;</ph> 구현에 대 한 인수로 <ph id="ph3">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph> 메서드를 사용자 지정 비교를 정의할 수 있습니다 배열 또는 컬렉션에 대 한 비교 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The default equality comparer, <ph id="ph1">`EqualityComparer&lt;Object&gt;.Default.Equals`</ph>, considers two <ph id="ph2">`NaN`</ph> values to be equal.</source>
          <target state="translated">기본 같음 비교자 <ph id="ph1">`EqualityComparer&lt;Object&gt;.Default.Equals`</ph>, 두 개의 고려 <ph id="ph2">`NaN`</ph> 값과 같아야 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>However, in some cases, you may want the comparison of <ph id="ph1">`NaN`</ph> values for equality to return <ph id="ph2">`false`</ph>, which indicates that the values cannot be compared.</source>
          <target state="translated">그러나, 경우에 따라 설정할 수 있습니다의 비교 <ph id="ph1">`NaN`</ph> 값이 같은지 반환할 <ph id="ph2">`false`</ph>는 값을 비교할 수 없음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The following example defines a <ph id="ph1">`NanComparer`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`NanComparer`</ph> 인터페이스를 구현하는 <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> 클래스를 정의합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>It compares two <ph id="ph1">&lt;xref:System.Double&gt;</ph> or two <ph id="ph2">&lt;xref:System.Single&gt;</ph> values by using the equality operator.</source>
          <target state="translated">두 비교 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 또는 두 개의 <ph id="ph2">&lt;xref:System.Single&gt;</ph> 같음 연산자를 사용 하 여 값입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>It passes values of any other type to the default equality comparer.</source>
          <target state="translated">기본 같음 비교자를 다른 형식의 값을 전달 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The following example creates two identical 3-tuple objects whose components consist of three <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 세 개인 구성 요소가 구성 됩니다. 두 개의 동일한 3-튜플 개체 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The value of the second component is <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">두 번째 구성 요소 값은 <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The example then calls the <ph id="ph1">&lt;xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType&gt;</ph> method, and it calls the <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType&gt;</ph> method three times.</source>
          <target state="translated">이 예에서는 다음 호출에서 <ph id="ph1">&lt;xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType&gt;</ph> 메서드를 호출 하는 <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType&gt;</ph> 메서드를 세 번입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The first time, it passes the default equality comparer that is returned by the <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">처음으로 가져갈에서 반환 되는 기본 같음 비교자는 <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The second time, it passes the default equality comparer that is returned by the <ph id="ph1">&lt;xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">반환 되는 기본 같음 비교자를 전달 하기는 두 번째로 <ph id="ph1">&lt;xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>The third time, it passes the custom <ph id="ph1">`NanComparer`</ph> object.</source>
          <target state="translated">세 번째 사용자 지정 전달 <ph id="ph1">`NanComparer`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.IStructuralEquatable">
          <source>As the output from the example shows, the first three method calls return <ph id="ph1">`true`</ph>, whereas the fourth call returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">처음 세 개의 메서드 호출 반환 예제의 출력에서 볼 수 있듯이 <ph id="ph1">`true`</ph>, 네 번째 호출에서 반환 하는 반면, <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The object to compare with the current instance.</source>
          <target state="translated">현재 인스턴스와 비교할 개체입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>An object that determines whether the current instance and <bpt id="p1">&lt;c&gt;</bpt>other<ept id="p1">&lt;/c&gt;</ept> are equal.</source>
          <target state="translated">현재 인스턴스와 <bpt id="p1">&lt;c&gt;</bpt>other<ept id="p1">&lt;/c&gt;</ept>이 같은지를 확인하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>Determines whether an object is structurally equal to the current instance.</source>
          <target state="translated">개체가 현재 인스턴스와 구조적으로 같은지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two objects are equal; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">두 개체가 같으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph> method supports custom structural comparison of array and tuple objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph> 메서드 배열과 튜플 개체의 구조적 비교를 사용자 지정을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>This method in turn calls the <ph id="ph1">`comparer`</ph> object's <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> method to compare individual array elements or tuple components, starting with the first element or component.</source>
          <target state="translated">이 메서드 호출의 <ph id="ph1">`comparer`</ph> 개체의 <ph id="ph2">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> 튜플 구성, 첫 번째 요소 또는 구성 요소 시작 또는 개별 배열 요소를 비교 하는 메서드.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The individual calls to <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> end and the <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType&gt;</ph> method returns a value either when a method call returns <ph id="ph3">`false`</ph> or after all array elements or tuple components have been compared.</source>
          <target state="translated">에 대 한 개별 호출이 <ph id="ph1">&lt;xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType&gt;</ph> 끝 및 <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType&gt;</ph> 메서드 값을 반환 하거나 메서드 호출이 반환 될 때 <ph id="ph3">`false`</ph> 모든 배열 요소 또는 튜플 구성 요소가 비교 된 후 또는 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The default equality comparer, <ph id="ph1">`EqualityComparer&lt;Object&gt;.Default.Equals`</ph>, considers two <ph id="ph2">`NaN`</ph> values to be equal.</source>
          <target state="translated">기본 같음 비교자 <ph id="ph1">`EqualityComparer&lt;Object&gt;.Default.Equals`</ph>, 두 개의 고려 <ph id="ph2">`NaN`</ph> 값과 같아야 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>However, in some cases, you may want the comparison of <ph id="ph1">`NaN`</ph> values for equality to return <ph id="ph2">`false`</ph>, which indicates that the values cannot be compared.</source>
          <target state="translated">그러나, 경우에 따라 설정할 수 있습니다의 비교 <ph id="ph1">`NaN`</ph> 값이 같은지 반환할 <ph id="ph2">`false`</ph>는 값을 비교할 수 없음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The following example defines a <ph id="ph1">`NanComparer`</ph> class that implements the <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`NanComparer`</ph> 인터페이스를 구현하는 <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> 클래스를 정의합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>It compares two <ph id="ph1">&lt;xref:System.Double&gt;</ph> or two <ph id="ph2">&lt;xref:System.Single&gt;</ph> values by using the equality operator.</source>
          <target state="translated">두 비교 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 또는 두 개의 <ph id="ph2">&lt;xref:System.Single&gt;</ph> 같음 연산자를 사용 하 여 값입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>It passes values of any other type to the default equality comparer.</source>
          <target state="translated">기본 같음 비교자를 다른 형식의 값을 전달 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The following example creates two identical 3-tuple objects whose components consist of three <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">다음 예제에서는 세 개인 구성 요소가 구성 됩니다. 두 개의 동일한 3-튜플 개체 <ph id="ph1">&lt;xref:System.Double&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The value of the second component is <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">두 번째 구성 요소 값은 <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The example then calls the <ph id="ph1">&lt;xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType&gt;</ph> method, and it calls the <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType&gt;</ph> method three times.</source>
          <target state="translated">이 예에서는 다음 호출에서 <ph id="ph1">&lt;xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType&gt;</ph> 메서드를 호출 하는 <ph id="ph2">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType&gt;</ph> 메서드를 세 번입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The first time, it passes the default equality comparer that is returned by the <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">처음으로 가져갈에서 반환 되는 기본 같음 비교자는 <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The second time, it passes the default equality comparer that is returned by the <ph id="ph1">&lt;xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">반환 되는 기본 같음 비교자를 전달 하기는 두 번째로 <ph id="ph1">&lt;xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>The third time, it passes the custom <ph id="ph1">`NanComparer`</ph> object.</source>
          <target state="translated">세 번째 사용자 지정 전달 <ph id="ph1">`NanComparer`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
          <source>As the output from the example shows, the first three method calls return <ph id="ph1">`true`</ph>, whereas the fourth call returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">처음 세 개의 메서드 호출 반환 예제의 출력에서 볼 수 있듯이 <ph id="ph1">`true`</ph>, 네 번째 호출에서 반환 하는 반면, <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)">
          <source>An object that computes the hash code of the current object.</source>
          <target state="translated">현재 개체의 해시 코드를 계산하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)">
          <source>Returns a hash code for the current instance.</source>
          <target state="translated">현재 인스턴스의 해시 코드를 반환합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)">
          <source>The hash code for the current instance.</source>
          <target state="translated">현재 인스턴스에 대한 해시 코드입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)">
          <source>Implement this method to return customized hash codes for collection objects that correspond to the customized comparison for structural equality provided by the <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph> method.</source>
          <target state="translated">구현에서 제공 하는 구조적 같음에 대 한 사용자 지정된 비교에 해당 하는 컬렉션 개체에 대 한 사용자 지정 된 해시 코드를 반환 하려면이 메서드는 <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable.Equals%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)">
          <source>If the <ph id="ph1">&lt;see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /&gt;</ph> method returns <ph id="ph2">&lt;see langword="true" /&gt;</ph> for two objects, the values returned by the <ph id="ph3">&lt;see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /&gt;</ph> method for the two objects must also be equal.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /&gt;</ph> 메서드가 반환 되 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 두 개체에 대해 반환 하는 값은 <ph id="ph3">&lt;see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /&gt;</ph> 메서드 두 개체도 같아야 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>