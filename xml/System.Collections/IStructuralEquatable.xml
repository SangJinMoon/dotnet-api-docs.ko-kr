<Type Name="IStructuralEquatable" FullName="System.Collections.IStructuralEquatable">
  <TypeSignature Language="C#" Value="public interface IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralEquatable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralEquatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="91ff4-101">구조적 같음에 대한 개체 비교를 지원하는 메서드를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-101">Defines methods to support the comparison of objects for structural equality.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91ff4-102">구조적 같음 값이 같으면 두 개체가 같은지를 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-102">Structural equality means that two objects are equal because they have equal values.</span></span> <span data-ttu-id="91ff4-103">동일한 실제 개체를 참조 하기 때문에 두 개체 참조가 같은지를 나타내는 참조 일치에서 점이 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-103">It differs from reference equality, which indicates that two object references are equal because they reference the same physical object.</span></span> <span data-ttu-id="91ff4-104"><xref:System.Collections.IStructuralEquatable> 인터페이스를 사용 하면 컬렉션 개체의 구조적으로 같은지 확인 하려면 사용자 지정 된 비교를 구현할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-104">The <xref:System.Collections.IStructuralEquatable> interface enables you to implement customized comparisons to check for the structural equality of collection objects.</span></span> <span data-ttu-id="91ff4-105">구조적 일치의 고유한 정의 만들어 허용 하는 컬렉션 형식으로 사용 하도록이 정의 지정 하는 즉,는 <xref:System.Collections.IStructuralEquatable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-105">That is, you can create your own definition of structural equality and specify that this definition be used with a collection type that accepts the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="91ff4-106">인터페이스는 두 명의 멤버가: <xref:System.Collections.IStructuralEquatable.Equals%2A>, 지정 된를 사용 하 여 같음 여부를 테스트 하는 <xref:System.Collections.IEqualityComparer> 구현 및 <xref:System.Collections.IStructuralEquatable.GetHashCode%2A>, 동일한 개체에 대해 동일한 해시 코드를 반환 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-106">The interface has two members: <xref:System.Collections.IStructuralEquatable.Equals%2A>, which tests for equality by using a specified <xref:System.Collections.IEqualityComparer> implementation, and <xref:System.Collections.IStructuralEquatable.GetHashCode%2A>, which returns identical hash codes for objects that are equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="91ff4-107"><xref:System.Collections.IStructuralEquatable> 인터페이스 구조적 같음에 대 한 사용자 지정 비교만 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-107">The <xref:System.Collections.IStructuralEquatable> interface supports only custom comparisons for structural equality.</span></span> <span data-ttu-id="91ff4-108"><xref:System.Collections.IStructuralComparable> 인터페이스 정렬 및 순서 지정에 대 한 사용자 지정의 구조적 비교를 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-108">The <xref:System.Collections.IStructuralComparable> interface supports custom structural comparisons for sorting and ordering.</span></span>  
  
 <span data-ttu-id="91ff4-109">.NET Framework 또한 기본 제공 하 여 반환 되는 같음 비교자는 <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> 및 <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-109">The .NET Framework also provides default equality comparers, which are returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> and <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="91ff4-110">자세한 내용은 예제를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-110">For more information, see the example.</span></span>  
  
 <span data-ttu-id="91ff4-111">제네릭 튜플 클래스 (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>등) 및 <xref:System.Array> 클래스의 명시적 구현을 제공는 <xref:System.Collections.IStructuralEquatable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-111">The generic tuple classes (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>, and so on) and the <xref:System.Array> class provide explicit implementations of the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="91ff4-112">캐스팅 (C#) 또는 변환 (Visual Basic의 경우)의 배열 또는 튜플의 현재 인스턴스에 의해는 <xref:System.Collections.IStructuralEquatable> 인터페이스 값 제공 하 여 <xref:System.Collections.IEqualityComparer> 구현에 대 한 인수로 <xref:System.Collections.IStructuralEquatable.Equals%2A> 메서드를 사용자 지정 비교를 정의할 수 있습니다 배열 또는 컬렉션에 대 한 비교 합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-112">By casting (in C#) or converting (in Visual Basic) the current instance of an array or tuple to an <xref:System.Collections.IStructuralEquatable> interface value and providing your <xref:System.Collections.IEqualityComparer> implementation as an argument to the <xref:System.Collections.IStructuralEquatable.Equals%2A> method, you can define a custom equality comparison for the array or collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91ff4-113">기본 같음 비교자 `EqualityComparer<Object>.Default.Equals`, 두 개의 고려 `NaN` 값과 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-113">The default equality comparer, `EqualityComparer<Object>.Default.Equals`, considers two `NaN` values to be equal.</span></span> <span data-ttu-id="91ff4-114">그러나, 경우에 따라 설정할 수 있습니다의 비교 `NaN` 값이 같은지 반환할 `false`는 값을 비교할 수 없음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-114">However, in some cases, you may want the comparison of `NaN` values for equality to return `false`, which indicates that the values cannot be compared.</span></span> <span data-ttu-id="91ff4-115">다음 예제에서는 `NanComparer` 인터페이스를 구현하는 <xref:System.Collections.IStructuralEquatable> 클래스를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-115">The following example defines a `NanComparer` class that implements the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="91ff4-116">두 비교 <xref:System.Double> 또는 두 개의 <xref:System.Single> 같음 연산자를 사용 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-116">It compares two <xref:System.Double> or two <xref:System.Single> values by using the equality operator.</span></span> <span data-ttu-id="91ff4-117">기본 같음 비교자를 다른 형식의 값을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-117">It passes values of any other type to the default equality comparer.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 <span data-ttu-id="91ff4-118">다음 예제에서는 세 개인 구성 요소가 구성 됩니다. 두 개의 동일한 3-튜플 개체 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-118">The following example creates two identical 3-tuple objects whose components consist of three <xref:System.Double> values.</span></span> <span data-ttu-id="91ff4-119">두 번째 구성 요소 값은 <xref:System.Double.NaN?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-119">The value of the second component is <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="91ff4-120">이 예에서는 다음 호출에서 <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> 메서드를 호출 하는 <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> 메서드를 세 번입니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-120">The example then calls the <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> method, and it calls the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method three times.</span></span> <span data-ttu-id="91ff4-121">처음으로 가져갈에서 반환 되는 기본 같음 비교자는 <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-121">The first time, it passes the default equality comparer that is returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="91ff4-122">반환 되는 기본 같음 비교자를 전달 하기는 두 번째로 <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-122">The second time, it passes the default equality comparer that is returned by the <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="91ff4-123">세 번째 사용자 지정 전달 `NanComparer` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-123">The third time, it passes the custom `NanComparer` object.</span></span> <span data-ttu-id="91ff4-124">처음 세 개의 메서드 호출 반환 예제의 출력에서 볼 수 있듯이 `true`, 네 번째 호출에서 반환 하는 반면, `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-124">As the output from the example shows, the first three method calls return `true`, whereas the fourth call returns `false`.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEqualityComparer" />
    <altmember cref="T:System.Collections.IStructuralComparable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object, comparer As IEqualityComparer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="91ff4-125">현재 인스턴스와 비교할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-125">The object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="91ff4-126">현재 인스턴스와 <c>other</c>이 같은지를 확인하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-126">An object that determines whether the current instance and <c>other</c> are equal.</span></span></param>
        <summary><span data-ttu-id="91ff4-127">개체가 현재 인스턴스와 구조적으로 같은지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-127">Determines whether an object is structurally equal to the current instance.</span></span></summary>
        <returns>
          <span data-ttu-id="91ff4-128">두 개체가 같으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-128"><see langword="true" /> if the two objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91ff4-129"><xref:System.Collections.IStructuralEquatable.Equals%2A> 메서드 배열과 튜플 개체의 구조적 비교를 사용자 지정을 지원 합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-129">The <xref:System.Collections.IStructuralEquatable.Equals%2A> method supports custom structural comparison of array and tuple objects.</span></span> <span data-ttu-id="91ff4-130">이 메서드 호출의 `comparer` 개체의 <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> 튜플 구성, 첫 번째 요소 또는 구성 요소 시작 또는 개별 배열 요소를 비교 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="91ff4-130">This method in turn calls the `comparer` object's <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> method to compare individual array elements or tuple components, starting with the first element or component.</span></span> <span data-ttu-id="91ff4-131">에 대 한 개별 호출이 <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> 끝 및 <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> 메서드 값을 반환 하거나 메서드 호출이 반환 될 때 `false` 모든 배열 요소 또는 튜플 구성 요소가 비교 된 후 또는 합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-131">The individual calls to <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> end and the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method returns a value either when a method call returns `false` or after all array elements or tuple components have been compared.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91ff4-132">기본 같음 비교자 `EqualityComparer<Object>.Default.Equals`, 두 개의 고려 `NaN` 값과 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-132">The default equality comparer, `EqualityComparer<Object>.Default.Equals`, considers two `NaN` values to be equal.</span></span> <span data-ttu-id="91ff4-133">그러나, 경우에 따라 설정할 수 있습니다의 비교 `NaN` 값이 같은지 반환할 `false`는 값을 비교할 수 없음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-133">However, in some cases, you may want the comparison of `NaN` values for equality to return `false`, which indicates that the values cannot be compared.</span></span> <span data-ttu-id="91ff4-134">다음 예제에서는 `NanComparer` 인터페이스를 구현하는 <xref:System.Collections.IStructuralEquatable> 클래스를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-134">The following example defines a `NanComparer` class that implements the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="91ff4-135">두 비교 <xref:System.Double> 또는 두 개의 <xref:System.Single> 같음 연산자를 사용 하 여 값입니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-135">It compares two <xref:System.Double> or two <xref:System.Single> values by using the equality operator.</span></span> <span data-ttu-id="91ff4-136">기본 같음 비교자를 다른 형식의 값을 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-136">It passes values of any other type to the default equality comparer.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 <span data-ttu-id="91ff4-137">다음 예제에서는 세 개인 구성 요소가 구성 됩니다. 두 개의 동일한 3-튜플 개체 <xref:System.Double> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-137">The following example creates two identical 3-tuple objects whose components consist of three <xref:System.Double> values.</span></span> <span data-ttu-id="91ff4-138">두 번째 구성 요소 값은 <xref:System.Double.NaN?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-138">The value of the second component is <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="91ff4-139">이 예에서는 다음 호출에서 <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> 메서드를 호출 하는 <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> 메서드를 세 번입니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-139">The example then calls the <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> method, and it calls the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method three times.</span></span> <span data-ttu-id="91ff4-140">처음으로 가져갈에서 반환 되는 기본 같음 비교자는 <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-140">The first time, it passes the default equality comparer that is returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="91ff4-141">반환 되는 기본 같음 비교자를 전달 하기는 두 번째로 <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-141">The second time, it passes the default equality comparer that is returned by the <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="91ff4-142">세 번째 사용자 지정 전달 `NanComparer` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-142">The third time, it passes the custom `NanComparer` object.</span></span> <span data-ttu-id="91ff4-143">처음 세 개의 메서드 호출 반환 예제의 출력에서 볼 수 있듯이 `true`, 네 번째 호출에서 반환 하는 반면, `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-143">As the output from the example shows, the first three method calls return `true`, whereas the fourth call returns `false`.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (comparer As IEqualityComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(System::Collections::IEqualityComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="91ff4-144">현재 개체의 해시 코드를 계산하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-144">An object that computes the hash code of the current object.</span></span></param>
        <summary><span data-ttu-id="91ff4-145">현재 인스턴스의 해시 코드를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-145">Returns a hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="91ff4-146">현재 인스턴스에 대한 해시 코드입니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-146">The hash code for the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91ff4-147">구현에서 제공 하는 구조적 같음에 대 한 사용자 지정된 비교에 해당 하는 컬렉션 개체에 대 한 사용자 지정 된 해시 코드를 반환 하려면이 메서드는 <xref:System.Collections.IStructuralEquatable.Equals%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="91ff4-147">Implement this method to return customized hash codes for collection objects that correspond to the customized comparison for structural equality provided by the <xref:System.Collections.IStructuralEquatable.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="91ff4-148">경우는 <see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /> 메서드가 반환 되 <see langword="true" /> 두 개체에 대해 반환 하는 값은 <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> 메서드 두 개체도 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="91ff4-148">If the <see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /> method returns <see langword="true" /> for two objects, the values returned by the <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> method for the two objects must also be equal.</span></span></para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>