<Type Name="IDictionaryEnumerator" FullName="System.Collections.IDictionaryEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd4868d08027795c4570df9fc458a5f059c257f2" />
    <Meta Name="ms.sourcegitcommit" Value="850a55c780d5a95b534467969add0232fd3a6125" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/07/2018" />
    <Meta Name="ms.locfileid" Value="34829390" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDictionaryEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDictionaryEnumerator implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IDictionaryEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDictionaryEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDictionaryEnumerator : System::Collections::IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cf679-101">제네릭이 아닌 사전의 요소를 열거합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cf679-101">Enumerates the elements of a nongeneric dictionary.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf679-102">@FSHO1@C# 언어의 `foreach` 문(Visual Basic의 경우 `for each`)은 열거자의 복잡성을 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-102">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="cf679-103">따라서 사용 하 여 `foreach` 열거자를 직접 조작 하는 대신 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-103">Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="cf679-104">열거자를 사용하여 컬렉션의 데이터를 읽을 수는 있지만 내부 컬렉션을 수정할 수는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-104">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="cf679-105">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-105">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="cf679-106"><xref:System.Collections.IEnumerator.Reset%2A> 메서드도 실행 하면 열거자가이 위치로 복원 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-106">The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="cf679-107">이 위치에서 <xref:System.Collections.IEnumerator.Current%2A>는 정의되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-107">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="cf679-108">따라서 호출 해야 합니다는 <xref:System.Collections.IEnumerator.MoveNext%2A> 하 여 열거자의 값을 읽기 전에 컬렉션의 첫 번째 요소로 메서드 <xref:System.Collections.IEnumerator.Current%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-108">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="cf679-109"><xref:System.Collections.IEnumerator.Current%2A>에서는 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 <xref:System.Collections.IEnumerator.Reset%2A>이 호출될 때까지 동일한 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-109"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="cf679-110"><xref:System.Collections.IEnumerator.MoveNext%2A>는 <xref:System.Collections.IEnumerator.Current%2A>를 다음 요소로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-110"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="cf679-111">경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-111">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="cf679-112">열거자가 있는 경우이 위치에 대 한 후속 호출에서 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환할 수도 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-112">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="cf679-113">마지막으로 호출 하는 경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`, <xref:System.Collections.IEnumerator.Current%2A> 정의 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-113">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="cf679-114"><xref:System.Collections.IEnumerator.Current%2A>를 컬렉션의 첫째 요소에 다시 설정하려면 <xref:System.Collections.IEnumerator.Reset%2A>을 호출한 뒤 <xref:System.Collections.IEnumerator.MoveNext%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-114">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="cf679-115">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-115">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="cf679-116">변경, 추가 하는 등 컬렉션을 수정 하거나 요소를 삭제 하면 열거자가 더 유효 하지 않으며을 다음에 호출할 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 <xref:System.Collections.IEnumerator.Reset%2A> throw는 <xref:System.InvalidOperationException>합니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-116">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>
  
 <span data-ttu-id="cf679-117">열거자는 컬렉션에 배타적으로 액세스하지 못하므로 컬렉션을 열거하는 것은 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-117">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="cf679-118">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-118">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="cf679-119">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-119">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf679-120">구현 하는 사전 열거자를 정의 하는 방법을 보여 주는 코드 예제는 <xref:System.Collections.IDictionaryEnumerator> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-120">This code example shows how to define a dictionary enumerator that implements the <xref:System.Collections.IDictionaryEnumerator> interface.</span></span>  
  
 [!code-cpp[Dictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#1)]
 [!code-csharp[Dictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#1)]
 [!code-vb[Dictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="cf679-121">
        <para>
          <see cref="P:System.Collections.IEnumerator.Current" /> 속성에서 상속 된 <see cref="T:System.Collections.IEnumerator" /> 반환는 <see cref="T:System.Object" /> 즉 boxed <see cref="T:System.Collections.DictionaryEntry" />의 반환 값과 마찬가지로는 <see cref="P:System.Collections.IDictionaryEnumerator.Entry" /> 속성입니다.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="cf679-121">
          <para>The <see cref="P:System.Collections.IEnumerator.Current" /> property that is inherited from <see cref="T:System.Collections.IEnumerator" /> returns an <see cref="T:System.Object" /> that is a boxed <see cref="T:System.Collections.DictionaryEntry" />, similar to the return value of the <see cref="P:System.Collections.IDictionaryEnumerator.Entry" /> property.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="T:System.Collections.IEnumerator" />
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
  </Docs>
  <Members>
    <Member MemberName="Entry">
      <MemberSignature Language="C#" Value="public System.Collections.DictionaryEntry Entry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.DictionaryEntry Entry" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionaryEnumerator.Entry" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entry As DictionaryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::DictionaryEntry Entry { System::Collections::DictionaryEntry get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.DictionaryEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf679-122">현재 사전 엔트리의 키와 값을 모두 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf679-122">Gets both the key and the value of the current dictionary entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cf679-123">현재 사전 엔트리의 키와 값을 모두 포함하는 <see cref="T:System.Collections.DictionaryEntry" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf679-123">A <see cref="T:System.Collections.DictionaryEntry" /> containing both the key and the value of the current dictionary entry.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="cf679-124"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> 다음 조건에서 정의 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-124"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="cf679-125">열거자는 열거자를 만든 직후는 컬렉션의 첫 번째 요소 앞에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-125">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.</span></span> <span data-ttu-id="cf679-126"><xref:System.Collections.IEnumerator.MoveNext%2A> 호출 하 여 열거자의 값을 읽기 전에 컬렉션의 첫 번째 요소를 <xref:System.Collections.IDictionaryEnumerator.Entry%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-126"><xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IDictionaryEnumerator.Entry%2A>.</span></span>  
  
-   <span data-ttu-id="cf679-127">마지막으로 호출한 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`, 컬렉션의 끝을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-127">The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="cf679-128">열거자는 컬렉션을 추가, 수정 또는 삭제 요소와 같은 변경 작업으로 인해 무효화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-128">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="cf679-129"><xref:System.Collections.IDictionaryEnumerator.Entry%2A>는 <xref:System.Collections.IEnumerator.MoveNext%2A>가 호출될 때까지 동일한 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-129"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="cf679-130"><xref:System.Collections.IEnumerator.MoveNext%2A>는 <xref:System.Collections.IDictionaryEnumerator.Entry%2A>를 다음 요소로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-130"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IDictionaryEnumerator.Entry%2A> to the next element.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="cf679-131">
            <para>
              <see cref="P:System.Collections.IEnumerator.Current" /> 속성에서 상속 된 <see cref="T:System.Collections.IEnumerator" /> 반환는 <see cref="T:System.Object" /> 즉 boxed <see cref="T:System.Collections.DictionaryEntry" />의 반환 값과 마찬가지로는 <see cref="P:System.Collections.IDictionaryEnumerator.Entry" /> 속성입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cf679-131">
              <para>The <see cref="P:System.Collections.IEnumerator.Current" /> property that is inherited from <see cref="T:System.Collections.IEnumerator" /> returns an <see cref="T:System.Object" /> that is a boxed <see cref="T:System.Collections.DictionaryEntry" />, similar to the return value of the <see cref="P:System.Collections.IDictionaryEnumerator.Entry" /> property.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Key" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Value" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public object Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Key" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionaryEnumerator.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Key { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf679-132">현재 사전 엔트리의 키를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf679-132">Gets the key of the current dictionary entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cf679-133">현재 열거 요소의 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf679-133">The key of the current element of the enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
 <span data-ttu-id="cf679-134"><xref:System.Collections.IDictionaryEnumerator.Key%2A> 다음 조건에서 정의 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-134"><xref:System.Collections.IDictionaryEnumerator.Key%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="cf679-135">열거자는 열거자를 만든 직후는 컬렉션의 첫 번째 요소 앞에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-135">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.</span></span> <span data-ttu-id="cf679-136"><xref:System.Collections.IEnumerator.MoveNext%2A> 호출 하 여 열거자의 값을 읽기 전에 컬렉션의 첫 번째 요소를 <xref:System.Collections.IDictionaryEnumerator.Key%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-136"><xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IDictionaryEnumerator.Key%2A>.</span></span>  
  
-   <span data-ttu-id="cf679-137">마지막으로 호출한 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`, 컬렉션의 끝을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-137">The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="cf679-138">열거자는 컬렉션을 추가, 수정 또는 삭제 요소와 같은 변경 작업으로 인해 무효화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-138">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="cf679-139"><xref:System.Collections.IDictionaryEnumerator.Key%2A>는 <xref:System.Collections.IEnumerator.MoveNext%2A>가 호출될 때까지 동일한 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-139"><xref:System.Collections.IDictionaryEnumerator.Key%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="cf679-140"><xref:System.Collections.IEnumerator.MoveNext%2A> 설정 <xref:System.Collections.IDictionaryEnumerator.Key%2A> 열거형의 다음 요소로의 키에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-140"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IDictionaryEnumerator.Key%2A> to the key of the next element in enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Value" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Entry" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionaryEnumerator.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cf679-141">현재 사전 엔트리의 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf679-141">Gets the value of the current dictionary entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cf679-142">현재 열거 요소의 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cf679-142">The value of the current element of the enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf679-143"><xref:System.Collections.IDictionaryEnumerator.Value%2A> 다음 조건에서 정의 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-143"><xref:System.Collections.IDictionaryEnumerator.Value%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="cf679-144">열거자는 열거자를 만든 직후는 컬렉션의 첫 번째 요소 앞에 배치 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-144">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.</span></span> <span data-ttu-id="cf679-145"><xref:System.Collections.IEnumerator.MoveNext%2A> 호출 하 여 열거자의 값을 읽기 전에 컬렉션의 첫 번째 요소를 <xref:System.Collections.IDictionaryEnumerator.Value%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-145"><xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IDictionaryEnumerator.Value%2A>.</span></span>  
  
-   <span data-ttu-id="cf679-146">마지막으로 호출한 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`, 컬렉션의 끝을 나타내는입니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-146">The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="cf679-147">열거자는 컬렉션을 추가, 수정 또는 삭제 요소와 같은 변경 작업으로 인해 무효화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-147">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="cf679-148"><xref:System.Collections.IDictionaryEnumerator.Value%2A>는 <xref:System.Collections.IEnumerator.MoveNext%2A>가 호출될 때까지 동일한 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-148"><xref:System.Collections.IDictionaryEnumerator.Value%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="cf679-149"><xref:System.Collections.IEnumerator.MoveNext%2A> 설정 <xref:System.Collections.IDictionaryEnumerator.Value%2A> 열거형에서 다음 요소의 값입니다.</span><span class="sxs-lookup"><span data-stu-id="cf679-149"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IDictionaryEnumerator.Value%2A> to the value of the next element in enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Key" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Entry" />
      </Docs>
    </Member>
  </Members>
</Type>