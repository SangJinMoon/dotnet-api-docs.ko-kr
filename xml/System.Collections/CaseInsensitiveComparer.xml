<Type Name="CaseInsensitiveComparer" FullName="System.Collections.CaseInsensitiveComparer">
  <TypeSignature Language="C#" Value="public class CaseInsensitiveComparer : System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CaseInsensitiveComparer extends System.Object implements class System.Collections.IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.CaseInsensitiveComparer" />
  <TypeSignature Language="VB.NET" Value="Public Class CaseInsensitiveComparer&#xA;Implements IComparer" />
  <TypeSignature Language="C++ CLI" Value="public ref class CaseInsensitiveComparer : System::Collections::IComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="74476-101">문자열의 대/소문자를 무시하고 두 개체를 비교합니다.</span><span class="sxs-lookup"><span data-stu-id="74476-101">Compares two objects for equivalence, ignoring the case of strings.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74476-102"><xref:System.Collections.CaseInsensitiveComparer> 구현 하는 <xref:System.Collections.IComparer> 마찬가지로 문자열 대/소문자 구분 비교를 지 원하는 인터페이스 <xref:System.Collections.CaseInsensitiveHashCodeProvider> 구현 하는 <xref:System.Collections.IHashCodeProvider> 문자열에 대해 대/소문자 구분 비교를 지 원하는 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="74476-102"><xref:System.Collections.CaseInsensitiveComparer> implements the <xref:System.Collections.IComparer> interface supporting case-insensitive comparisons on strings, just as <xref:System.Collections.CaseInsensitiveHashCodeProvider> implements the <xref:System.Collections.IHashCodeProvider> interface supporting case-insensitive comparisons on strings.</span></span>  
  
 <span data-ttu-id="74476-103"><xref:System.Collections.Comparer> 클래스의 기본 구현은 <xref:System.Collections.IComparer> 인터페이스 및 대/소문자 구분 문자열 비교를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="74476-103">The <xref:System.Collections.Comparer> class is the default implementation of the <xref:System.Collections.IComparer> interface and performs case-sensitive string comparisons.</span></span>  
  
 <span data-ttu-id="74476-104">키로 사용 되는 개체는 <xref:System.Collections.Hashtable> 재정의 하는 데 필요한는 <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> 메서드 (또는 <xref:System.Collections.IHashCodeProvider> 인터페이스) 및 <xref:System.Object.Equals%2A?displayProperty=nameWithType> 메서드 (또는 <xref:System.Collections.IComparer> 인터페이스).</span><span class="sxs-lookup"><span data-stu-id="74476-104">The objects used as keys by a <xref:System.Collections.Hashtable> are required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method (or the <xref:System.Collections.IHashCodeProvider> interface) and the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method (or the <xref:System.Collections.IComparer> interface).</span></span> <span data-ttu-id="74476-105">메서드나 인터페이스의 구현을 대/소문자 구분; 같은 방식으로 처리 해야 합니다. 그렇지 않은 경우는 <xref:System.Collections.Hashtable> 올바르게 작동할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74476-105">The implementation of both methods or interfaces must handle case sensitivity the same way; otherwise, the <xref:System.Collections.Hashtable> might behave incorrectly.</span></span> <span data-ttu-id="74476-106">예를 들어, 만들 때 한 <xref:System.Collections.Hashtable>를 사용 하 여이 클래스를 사용 해야는 <xref:System.Collections.CaseInsensitiveHashCodeProvider> 클래스 또는 대/소문자 구분 <xref:System.Collections.IHashCodeProvider> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="74476-106">For example, when creating a <xref:System.Collections.Hashtable>, you must use this class with the <xref:System.Collections.CaseInsensitiveHashCodeProvider> class or any case-insensitive <xref:System.Collections.IHashCodeProvider> implementation.</span></span>  
  
 <span data-ttu-id="74476-107">문자열 비교는 culture에 따라 다른 결과 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74476-107">String comparisons might have different results depending on the culture.</span></span> <span data-ttu-id="74476-108">문화권별 비교에 대 한 자세한 내용은 참조는 <xref:System.Globalization> 네임 스페이스 및 [전역화 및 지역화](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)합니다.</span><span class="sxs-lookup"><span data-stu-id="74476-108">For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74476-109">다음 코드 예제에서는 대/소문자 구분 해시 테이블 및 대/소문자 구분 해시 테이블 만들고 동일한 요소가 모두 포함 하는 경우에 해당 명령의 동작은 차이 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="74476-109">The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.</span></span>  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IComparer" />
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.Comparer" />
    <altmember cref="T:System.Globalization.CompareInfo" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74476-110"><see cref="T:System.Collections.CaseInsensitiveComparer" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="74476-110">Initializes a new instance of the <see cref="T:System.Collections.CaseInsensitiveComparer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CaseInsensitiveComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveComparer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CaseInsensitiveComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74476-111">현재 스레드의 <see cref="T:System.Collections.CaseInsensitiveComparer" />를 사용하여 <see cref="P:System.Threading.Thread.CurrentCulture" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="74476-111">Initializes a new instance of the <see cref="T:System.Collections.CaseInsensitiveComparer" /> class using the <see cref="P:System.Threading.Thread.CurrentCulture" /> of the current thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74476-112">경우는 <xref:System.Collections.CaseInsensitiveComparer> 인스턴스가이 생성자를 사용 하 여 생성 되는 <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> 현재 스레드의 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="74476-112">When the <xref:System.Collections.CaseInsensitiveComparer> instance is created using this constructor, the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> of the current thread is saved.</span></span> <span data-ttu-id="74476-113">정렬 순서 및 대/소문자 규칙을 결정 하는 저장 된 문화권을 사용 하는 비교 프로시저 따라서 문자열 비교는 culture에 따라 다른 결과 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74476-113">Comparison procedures use the saved culture to determine the sort order and casing rules; therefore, string comparisons might have different results depending on the culture.</span></span> <span data-ttu-id="74476-114">문화권별 비교에 대 한 자세한 내용은 참조는 <xref:System.Globalization> 네임 스페이스 및 [전역화 및 지역화](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)합니다.</span><span class="sxs-lookup"><span data-stu-id="74476-114">For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74476-115">다음 코드 예제에서는 대/소문자 구분 해시 테이블 및 대/소문자 구분 해시 테이블 만들고 동일한 요소가 모두 포함 하는 경우에 해당 명령의 동작은 차이 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="74476-115">The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.</span></span>  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CaseInsensitiveComparer (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CaseInsensitiveComparer(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="74476-116">새 <see cref="T:System.Globalization.CultureInfo" />에 사용할 <see cref="T:System.Collections.CaseInsensitiveComparer" />입니다.</span><span class="sxs-lookup"><span data-stu-id="74476-116">The <see cref="T:System.Globalization.CultureInfo" /> to use for the new <see cref="T:System.Collections.CaseInsensitiveComparer" />.</span></span></param>
        <summary><span data-ttu-id="74476-117">지정된 <see cref="T:System.Collections.CaseInsensitiveComparer" />를 사용하여 <see cref="T:System.Globalization.CultureInfo" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="74476-117">Initializes a new instance of the <see cref="T:System.Collections.CaseInsensitiveComparer" /> class using the specified <see cref="T:System.Globalization.CultureInfo" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74476-118">비교 프로시저를 사용 하 여 지정 된 <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> 대/소문자 규칙 및 정렬 순서를 결정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74476-118">Comparison procedures use the specified <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> to determine the sort order and casing rules.</span></span> <span data-ttu-id="74476-119">문자열 비교는 culture에 따라 다른 결과 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74476-119">String comparisons might have different results depending on the culture.</span></span> <span data-ttu-id="74476-120">문화권별 비교에 대 한 자세한 내용은 참조는 <xref:System.Globalization> 네임 스페이스 및 [전역화 및 지역화](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)합니다.</span><span class="sxs-lookup"><span data-stu-id="74476-120">For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74476-121">다음 코드 예제에서는 대/소문자 구분 해시 테이블 및 대/소문자 구분 해시 테이블 만들고 동일한 요소가 모두 포함 하는 경우에 해당 명령의 동작은 차이 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="74476-121">The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.</span></span>  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="74476-122"><paramref name="culture" />가 <see langword="null" />인 경우</span><span class="sxs-lookup"><span data-stu-id="74476-122"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(object a, object b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (a As Object, b As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::Object ^ a, System::Object ^ b);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="74476-123">비교할 첫 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="74476-123">The first object to compare.</span></span></param>
        <param name="b"><span data-ttu-id="74476-124">비교할 두 번째 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="74476-124">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="74476-125">대/소문자를 구분하지 않고 같은 형식의 두 개체를 비교한 다음 한 개체가 다른 개체보다 작은지, 큰지 또는 두 개체가 같은지 여부를 나타내는 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="74476-125">Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.</span></span></summary>
        <returns><span data-ttu-id="74476-126">다음 표와 같이 <paramref name="a" /> 및 <paramref name="b" />의 상대 값을 나타내는 부호 있는 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="74476-126">A signed integer that indicates the relative values of <paramref name="a" /> and <paramref name="b" />, as shown in the following table.</span></span>  
  
 <span data-ttu-id="74476-127"><list type="table"><listheader><term> 값</span><span class="sxs-lookup"><span data-stu-id="74476-127"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="74476-128"></term><description> 의미</span><span class="sxs-lookup"><span data-stu-id="74476-128"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="74476-129"></description></listheader><item><term> 0보다 작음</span><span class="sxs-lookup"><span data-stu-id="74476-129"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="74476-130"></term><description><paramref name="a" />는 대/소문자를 구분하지 않은 상태에서 <paramref name="b" />보다 작습니다.</span><span class="sxs-lookup"><span data-stu-id="74476-130"></term><description><paramref name="a" /> is less than <paramref name="b" />, with casing ignored.</span></span>  
  
 <span data-ttu-id="74476-131"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="74476-131"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="74476-132"></term><description><paramref name="a" />는 대/소문자를 구분하지 않은 상태에서 <paramref name="b" />와 같습니다.</span><span class="sxs-lookup"><span data-stu-id="74476-132"></term><description><paramref name="a" /> equals <paramref name="b" />, with casing ignored.</span></span>  
  
 <span data-ttu-id="74476-133"></description></item><item><term> 0보다 큼</span><span class="sxs-lookup"><span data-stu-id="74476-133"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="74476-134"></term><description><paramref name="a" />는 대/소문자를 구분하지 않은 상태에서 <paramref name="b" />보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="74476-134"></term><description><paramref name="a" /> is greater than <paramref name="b" />, with casing ignored.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74476-135">경우 `a` 및 `b` 사용 하 여 두 문자열이 면이 메서드에서 <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> 대/소문자와 문자열을 비교 무시 됩니다; 그렇지 않으면 사용는 <xref:System.IComparable> 두 개체의 구현입니다.</span><span class="sxs-lookup"><span data-stu-id="74476-135">If `a` and `b` are both strings, this method uses <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> to compare the strings with the casing ignored; otherwise, it uses the <xref:System.IComparable> implementation of either object.</span></span> <span data-ttu-id="74476-136">즉, 경우 `a` 구현 <xref:System.IComparable>,이 메서드는 결과를 반환 하는 다음 `a`합니다.</span><span class="sxs-lookup"><span data-stu-id="74476-136">That is, if `a` implements <xref:System.IComparable>, then this method returns the result of `a`.</span></span> <span data-ttu-id="74476-137">`CompareTo` (`b`), 그렇지 않으면 경우 `b` 구현 <xref:System.IComparable>, 부정된 결과를 반환 하는 다음 `b`합니다.</span><span class="sxs-lookup"><span data-stu-id="74476-137">`CompareTo` (`b`); otherwise, if `b` implements <xref:System.IComparable>, then it returns the negated result of `b`.</span></span> <span data-ttu-id="74476-138">`CompareTo` (`a`).</span><span class="sxs-lookup"><span data-stu-id="74476-138">`CompareTo` (`a`).</span></span>  
  
 <span data-ttu-id="74476-139">비교 `null` 종류와 허용 되 고 사용 하는 경우 예외가 생성 되지 않습니다 <xref:System.IComparable>합니다.</span><span class="sxs-lookup"><span data-stu-id="74476-139">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="74476-140">정렬할 때 `null` 다른 개체 보다 작은 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="74476-140">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="74476-141">문자열 비교는 culture에 따라 다른 결과 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74476-141">String comparisons might have different results depending on the culture.</span></span> <span data-ttu-id="74476-142">문화권별 비교에 대 한 자세한 내용은 참조는 <xref:System.Globalization> 네임 스페이스 및 [전역화 및 지역화](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)합니다.</span><span class="sxs-lookup"><span data-stu-id="74476-142">For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="74476-143"><paramref name="a" /> 또는 <paramref name="b" /> 모두 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않는 경우</span><span class="sxs-lookup"><span data-stu-id="74476-143">Neither <paramref name="a" /> nor <paramref name="b" /> implements the <see cref="T:System.IComparable" /> interface.</span></span>  
  
 <span data-ttu-id="74476-144">또는</span><span class="sxs-lookup"><span data-stu-id="74476-144">-or-</span></span>  
  
 <span data-ttu-id="74476-145"><paramref name="a" />와 <paramref name="b" />가 형식이 다른 경우</span><span class="sxs-lookup"><span data-stu-id="74476-145"><paramref name="a" /> and <paramref name="b" /> are of different types.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Globalization.CompareInfo" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.CaseInsensitiveComparer Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.CaseInsensitiveComparer Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CaseInsensitiveComparer.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As CaseInsensitiveComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::CaseInsensitiveComparer ^ Default { System::Collections::CaseInsensitiveComparer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.CaseInsensitiveComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74476-146">현재 스레드의 <see cref="T:System.Collections.CaseInsensitiveComparer" />와 관련되어 있고 항상 사용 가능한 <see cref="P:System.Threading.Thread.CurrentCulture" />의 인스턴스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="74476-146">Gets an instance of <see cref="T:System.Collections.CaseInsensitiveComparer" /> that is associated with the <see cref="P:System.Threading.Thread.CurrentCulture" /> of the current thread and that is always available.</span></span></summary>
        <value><span data-ttu-id="74476-147">현재 스레드의 <see cref="T:System.Collections.CaseInsensitiveComparer" />와 관련된 <see cref="P:System.Threading.Thread.CurrentCulture" />의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="74476-147">An instance of <see cref="T:System.Collections.CaseInsensitiveComparer" /> that is associated with the <see cref="P:System.Threading.Thread.CurrentCulture" /> of the current thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74476-148">경우는 <xref:System.Collections.CaseInsensitiveComparer> 매개 변수가 없는 생성자를 사용 하 여 인스턴스가 생성 되는 <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> 현재 스레드의 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="74476-148">When the <xref:System.Collections.CaseInsensitiveComparer> instance is created using the parameterless constructor, the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> of the current thread is saved.</span></span> <span data-ttu-id="74476-149">정렬 순서 및 대/소문자 규칙을 결정 하는 저장 된 문화권을 사용 하는 비교 프로시저 따라서 문자열 비교는 culture에 따라 다른 결과 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74476-149">Comparison procedures use the saved culture to determine the sort order and casing rules; therefore, string comparisons might have different results depending on the culture.</span></span> <span data-ttu-id="74476-150">문화권별 비교에 대 한 자세한 내용은 참조는 <xref:System.Globalization> 네임 스페이스 및 [전역화 및 지역화](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)합니다.</span><span class="sxs-lookup"><span data-stu-id="74476-150">For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="DefaultInvariant">
      <MemberSignature Language="C#" Value="public static System.Collections.CaseInsensitiveComparer DefaultInvariant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.CaseInsensitiveComparer DefaultInvariant" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CaseInsensitiveComparer.DefaultInvariant" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultInvariant As CaseInsensitiveComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::CaseInsensitiveComparer ^ DefaultInvariant { System::Collections::CaseInsensitiveComparer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.CaseInsensitiveComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74476-151"><see cref="T:System.Collections.CaseInsensitiveComparer" />와 관련되어 있고 항상 사용 가능한 <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />의 인스턴스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="74476-151">Gets an instance of <see cref="T:System.Collections.CaseInsensitiveComparer" /> that is associated with <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> and that is always available.</span></span></summary>
        <value><span data-ttu-id="74476-152"><see cref="T:System.Collections.CaseInsensitiveComparer" />와 관련된 <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />의 인스턴스입니다.</span><span class="sxs-lookup"><span data-stu-id="74476-152">An instance of <see cref="T:System.Collections.CaseInsensitiveComparer" /> that is associated with <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74476-153">사용 하 여 비교 프로시저는 <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> 정렬 순서 및 대/소문자 규칙을 결정 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="74476-153">Comparison procedures use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> to determine the sort order and casing rules.</span></span> <span data-ttu-id="74476-154">문자열 비교는 culture에 따라 다른 결과 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="74476-154">String comparisons might have different results depending on the culture.</span></span> <span data-ttu-id="74476-155">문화권별 비교에 대 한 자세한 내용은 참조는 <xref:System.Globalization> 네임 스페이스 및 [전역화 및 지역화](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02)합니다.</span><span class="sxs-lookup"><span data-stu-id="74476-155">For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](http://msdn.microsoft.com/library/9a59696b-d89b-45bd-946d-c75da4732d02).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74476-156">다음 코드 예제에서는 대/소문자 구분 해시 테이블 및 대/소문자 구분 해시 테이블 만들고 동일한 요소가 모두 포함 하는 경우에 해당 명령의 동작은 차이 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="74476-156">The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.</span></span>  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
  </Members>
</Type>