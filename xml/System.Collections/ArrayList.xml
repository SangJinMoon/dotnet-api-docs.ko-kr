<Type Name="ArrayList" FullName="System.Collections.ArrayList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a2fad0839675db188f67de1c4ab0e60a2324c6da" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48598749" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ArrayList : ICloneable, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ArrayList extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ArrayList" />
  <TypeSignature Language="VB.NET" Value="Public Class ArrayList&#xA;Implements ICloneable, IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArrayList : ICloneable, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ArrayList = class&#xA;    interface IList&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.ArrayList/ArrayListDebugView))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="92764-101">필요에 따라 크기가 동적으로 증가하는 배열을 사용하여 <see cref="T:System.Collections.IList" /> 인터페이스를 구현합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="92764-101">Implements the <see cref="T:System.Collections.IList" /> interface using an array whose size is dynamically increased as required.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-102"><xref:System.Collections.ArrayList> 클래스는 개체의 유형이 다른 컬렉션을 보유 하도록 설계 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-102">The <xref:System.Collections.ArrayList> class is designed to hold heterogeneous collections of objects.</span></span> <span data-ttu-id="92764-103">그러나 제공 하지 않습니다 항상 최상의 성능을 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-103">However, it does not always offer the best performance.</span></span> <span data-ttu-id="92764-104">대신 다음 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-104">Instead, we recommend the following:</span></span>  
  
-   <span data-ttu-id="92764-105">개체의 유형이 다른 컬렉션을 사용 합니다 `List<Object>` (C#의 경우)의 또는 `List(Of Object)` (Visual Basic) 입력 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-105">For a heterogeneous collection of objects, use the `List<Object>` (in C#) or `List(Of Object)` (in Visual Basic) type.</span></span>  
  
-   <span data-ttu-id="92764-106">개체의 유형이 같은 컬렉션에 대 한 사용을 <xref:System.Collections.Generic.List%601> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-106">For a homogeneous collection of objects, use the <xref:System.Collections.Generic.List%601> class.</span></span>  
  
 <span data-ttu-id="92764-107">"성능 고려 사항" 섹션을 참조 합니다 <xref:System.Collections.Generic.List%601> 이러한 클래스의 상대적 성능의 토론에 대 한 참조 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-107">See the "Performance Considerations" section in the <xref:System.Collections.Generic.List%601> reference topic for a discussion of the relative performance of these classes.</span></span>  
  
 <span data-ttu-id="92764-108"><xref:System.Collections.ArrayList> 정렬 되도록 보장 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-108">The <xref:System.Collections.ArrayList> is not guaranteed to be sorted.</span></span>  <span data-ttu-id="92764-109">정렬 해야 합니다는 <xref:System.Collections.ArrayList> 호출 하 여 해당 <xref:System.Collections.ArrayList.Sort%2A> 작업을 수행 하기 전에 메서드 (같은 <xref:System.Collections.ArrayList.BinarySearch%2A>) 해야 하는 <xref:System.Collections.ArrayList> 정렬할.</span><span class="sxs-lookup"><span data-stu-id="92764-109">You must sort the <xref:System.Collections.ArrayList> by calling its <xref:System.Collections.ArrayList.Sort%2A> method prior to performing operations (such as <xref:System.Collections.ArrayList.BinarySearch%2A>) that require the <xref:System.Collections.ArrayList> to be sorted.</span></span> <span data-ttu-id="92764-110">새 요소를 추가할 때 자동으로 정렬 되는 컬렉션을 유지 하려면 사용할 수는 <xref:System.Collections.Generic.SortedSet%601> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-110">To maintain a collection that is automatically sorted as new elements are added, you can use the <xref:System.Collections.Generic.SortedSet%601> class.</span></span>  
  
 <span data-ttu-id="92764-111">용량을 <xref:System.Collections.ArrayList> 요소입니다는 <xref:System.Collections.ArrayList> 보유할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-111">The capacity of an <xref:System.Collections.ArrayList> is the number of elements the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="92764-112">요소에 추가 되는 <xref:System.Collections.ArrayList>, 용량을 자동으로 증가 하면 재할당을 통해 필요에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-112">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required through reallocation.</span></span> <span data-ttu-id="92764-113">호출 하 여 용량을 줄일 수 있습니다 <xref:System.Collections.ArrayList.TrimToSize%2A> 하거나 설정 하 여는 <xref:System.Collections.ArrayList.Capacity%2A> 속성이 명시적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-113">The capacity can be decreased by calling <xref:System.Collections.ArrayList.TrimToSize%2A> or by setting the <xref:System.Collections.ArrayList.Capacity%2A> property explicitly.</span></span>  
  
 <span data-ttu-id="92764-114">에 대 한 대규모 <xref:System.Collections.ArrayList> 개체를 설정 하 여 64 비트 시스템에서 2 십억 요소에 최대 용량을 늘릴 수는 `enabled` 구성 요소의 특성 `true` 런타임 환경에서.</span><span class="sxs-lookup"><span data-stu-id="92764-114">For very large <xref:System.Collections.ArrayList> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the  configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="92764-115">이 컬렉션의 요소는 정수 인덱스를 사용 하 여 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-115">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="92764-116">이 컬렉션의 인덱스는 0부터 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-116">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="92764-117">합니다 <xref:System.Collections.ArrayList> 받아들이며 `null` 유효한 값으로.</span><span class="sxs-lookup"><span data-stu-id="92764-117">The <xref:System.Collections.ArrayList> collection accepts `null` as a valid value.</span></span> <span data-ttu-id="92764-118">또한 중복 요소가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-118">It also allows duplicate elements.</span></span>  
  
 <span data-ttu-id="92764-119">다차원 배열에서 요소로 사용 하는 <xref:System.Collections.ArrayList> 컬렉션은 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-119">Using multidimensional arrays as elements in an <xref:System.Collections.ArrayList> collection is not supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-120">다음 코드 예제를 만들고 초기화 하는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList> 및 해당 값을 표시 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-120">The following code example shows how to create and initialize an <xref:System.Collections.ArrayList> and how to display its values.</span></span>  
  
 [!code-cpp[Classic ArrayList Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="92764-121">공용 정적 (<see langword="Shared" /> Visual Basic의)이 형식의 멤버는 스레드로부터 안전 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="92764-121">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="92764-122">인터페이스 멤버는 스레드로부터 안전하지 않습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="92764-122">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="92764-123">
        <see cref="T:System.Collections.ArrayList" /> 지원할 수 있습니다 여러 판독기 동시에 따라 컬렉션을 수정 되지 않습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="92764-123">An <see cref="T:System.Collections.ArrayList" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="92764-124">스레드로부터 안전을 보장 하려면 합니다 <see cref="T:System.Collections.ArrayList" />에서 반환 되는 래퍼를 통해 모든 작업을 완료 해야 합니다 <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" /> 메서드.</span>
      <span class="sxs-lookup">
        <span data-stu-id="92764-124">To guarantee the thread safety of the <see cref="T:System.Collections.ArrayList" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" /> method.</span>
      </span>
      <span data-ttu-id="92764-125">컬렉션 전체를 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="92764-125">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="92764-126">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="92764-126">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="92764-127">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="92764-127">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.Generic.List`1" />
    <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
      <span data-ttu-id="92764-128">컬렉션에서 Culture를 구분하지 않는 문자열 작업 수행</span>
      <span class="sxs-lookup">
        <span data-stu-id="92764-128">Performing Culture-Insensitive String Operations in Collections</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92764-129">
            <see cref="T:System.Collections.ArrayList" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-129">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92764-130">비어 있는 상태에서 기본 초기 용량을 가지는 <see cref="T:System.Collections.ArrayList" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-130">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that is empty and has the default initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-131">용량을 <xref:System.Collections.ArrayList> 요소입니다는 <xref:System.Collections.ArrayList> 보유할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-131">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="92764-132">요소에 추가 되는 <xref:System.Collections.ArrayList>, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-132">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="92764-133">컬렉션의 크기를 예상할 수 있는 경우에 여러 요소를 추가 하는 동안 크기 조정 작업을 수행할 필요가 없습니다 초기 용량을 지정 합니다 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-133">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="92764-134">이 생성자는 o (1) 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-134">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList(System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="new System.Collections.ArrayList : System.Collections.ICollection -&gt; System.Collections.ArrayList" Usage="new System.Collections.ArrayList c" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="92764-135">요소가 새 목록에 복사되는 <see cref="T:System.Collections.ICollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-135">The <see cref="T:System.Collections.ICollection" /> whose elements are copied to the new list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-136">지정한 컬렉션에서 복사된 요소가 포함되어 있고 복사된 요소의 수와 같은 초기 용량을 가지는 <see cref="T:System.Collections.ArrayList" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-136">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that contains elements copied from the specified collection and that has the same initial capacity as the number of elements copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-137">용량을 <xref:System.Collections.ArrayList> 요소입니다는 <xref:System.Collections.ArrayList> 보유할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-137">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="92764-138">요소에 추가 되는 <xref:System.Collections.ArrayList>, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-138">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="92764-139">컬렉션의 크기를 예상할 수 있는 경우에 여러 요소를 추가 하는 동안 크기 조정 작업을 수행할 필요가 없습니다 초기 용량을 지정 합니다 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-139">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="92764-140">요소에 복사 됩니다는 <xref:System.Collections.ArrayList> 읽은 것과 동일한 순서로 합니다 <xref:System.Collections.IEnumerator> 의 <xref:System.Collections.ICollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-140">The elements are copied onto the <xref:System.Collections.ArrayList> in the same order they are read by the <xref:System.Collections.IEnumerator> of the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="92764-141">이 생성자는 (`n`) 작업, 여기서 `n` 에 있는 요소의 수는 `c`합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-141">This constructor is an O(`n`) operation, where `n` is the number of elements in `c`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92764-142">
            <paramref name="c" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-142">
              <paramref name="c" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.ArrayList : int -&gt; System.Collections.ArrayList" Usage="new System.Collections.ArrayList capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="92764-143">새 목록에 처음부터 저장할 수 있는 요소의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-143">The number of elements that the new list can initially store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-144">비어 있는 상태에서 지정한 초기 용량을 가지는 <see cref="T:System.Collections.ArrayList" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-144">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that is empty and has the specified initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-145">용량을 <xref:System.Collections.ArrayList> 요소입니다는 <xref:System.Collections.ArrayList> 보유할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-145">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="92764-146">요소에 추가 되는 <xref:System.Collections.ArrayList>, 용량을 증가 시켜 자동으로 내부 배열을 다시 할당 하 여 필요에 따라 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-146">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="92764-147">컬렉션의 크기를 예상할 수 있는 경우에 여러 요소를 추가 하는 동안 크기 조정 작업을 수행할 필요가 없습니다 초기 용량을 지정 합니다 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-147">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="92764-148">이 생성자는 O (`n`) 작업, 여기서 `n` 는 `capacity`합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-148">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92764-149">
            <paramref name="capacity" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-149">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Adapter">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Adapter (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Adapter(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Adapter(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Adapter (list As IList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Adapter(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member Adapter : System.Collections.IList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.Adapter list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="92764-150">래핑할 <see cref="T:System.Collections.IList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-150">The <see cref="T:System.Collections.IList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-151">특정 <see cref="T:System.Collections.IList" />에 대해 <see cref="T:System.Collections.ArrayList" /> 래퍼를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-151">Creates an <see cref="T:System.Collections.ArrayList" /> wrapper for a specific <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-152">
            <see cref="T:System.Collections.IList" /> 주변의 <see cref="T:System.Collections.ArrayList" /> 래퍼입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-152">The <see cref="T:System.Collections.ArrayList" /> wrapper around the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-153"><xref:System.Collections.ArrayList.Adapter%2A> 내용을 복사 하지 않습니다 <xref:System.Collections.IList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-153"><xref:System.Collections.ArrayList.Adapter%2A> does not copy the contents of <xref:System.Collections.IList>.</span></span> <span data-ttu-id="92764-154">대신만 만듭니다는 <xref:System.Collections.ArrayList> 래퍼 <xref:System.Collections.IList>하므로로 변경 합니다 <xref:System.Collections.IList> 도 영향을 줄를 <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="92764-154">Instead, it only creates an <xref:System.Collections.ArrayList> wrapper around <xref:System.Collections.IList>; therefore, changes to the <xref:System.Collections.IList> also affect the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="92764-155"><xref:System.Collections.ArrayList> 클래스는 제네릭 제공 <xref:System.Collections.ArrayList.Reverse%2A>, <xref:System.Collections.ArrayList.BinarySearch%2A> 고 <xref:System.Collections.ArrayList.Sort%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="92764-155">The <xref:System.Collections.ArrayList> class provides generic <xref:System.Collections.ArrayList.Reverse%2A>, <xref:System.Collections.ArrayList.BinarySearch%2A> and <xref:System.Collections.ArrayList.Sort%2A> methods.</span></span> <span data-ttu-id="92764-156">이 래퍼에 이러한 메서드를 사용 하는 수단을 수 있습니다 <xref:System.Collections.IList>하지만 직접에 적용 하는 작업 보다 덜 효율적일 수 있습니다는 래퍼를 통해 이러한 일반 작업을 수행 합니다 <xref:System.Collections.IList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-156">This wrapper can be a means to use those methods on <xref:System.Collections.IList>; however, performing these generic operations through the wrapper might be less efficient than operations applied directly on the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="92764-157">이 방법은 O(1) 작업에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-157">This method is an O(1) operation.</span></span>  
  
## <a name="version-compatibility"></a><span data-ttu-id="92764-158">버전 호환성</span><span class="sxs-lookup"><span data-stu-id="92764-158">Version Compatibility</span></span>  
 <span data-ttu-id="92764-159">.NET Framework 버전 1.0 및 1.1의에서 호출을 <xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29> 메서드 오버 로드에는 <xref:System.Collections.ArrayList> 래퍼 아닌 수로 상한을으로 두 번째 인수를 처리 하는 열거자를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-159">In the .NET Framework version 1.0 and 1.1, calling the <xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29> method overload on the <xref:System.Collections.ArrayList> wrapper returned an enumerator that treated the second argument as an upper bound rather than as a count.</span></span> <span data-ttu-id="92764-160">에 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] 두 번째 인수 수로 올바르게 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-160">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] the second argument is correctly treated as a count.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92764-161">
            <paramref name="list" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-161">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
        <altmember cref="M:System.Collections.ArrayList.Reverse" />
        <altmember cref="M:System.Collections.ArrayList.Sort" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; int&#xA;override this.Add : obj -&gt; int" Usage="arrayList.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="92764-162">
            <see cref="T:System.Object" />의 끝에 추가할 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-162">The <see cref="T:System.Object" /> to be added to the end of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="92764-163">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-163">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-164">개체를 <see cref="T:System.Collections.ArrayList" />의 끝 부분에 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-164">Adds an object to the end of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-165">
            <paramref name="value" />가 추가된 <see cref="T:System.Collections.ArrayList" /> 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-165">The <see cref="T:System.Collections.ArrayList" /> index at which the <paramref name="value" /> has been added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-166"><xref:System.Collections.ArrayList> 허용 `null` 유효한 값으로 중복 요소를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-166"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="92764-167">경우 <xref:System.Collections.ArrayList.Count%2A> 이미 같은 <xref:System.Collections.ArrayList.Capacity%2A>의 용량을 <xref:System.Collections.ArrayList> 자동으로 내부 배열을 다시 할당 하 여 증가 하는 새 요소가 추가 되기 전에 기존 요소를 새 배열에 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-167">If <xref:System.Collections.ArrayList.Count%2A> already equals <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="92764-168">하는 경우 <xref:System.Collections.ArrayList.Count%2A> 는 보다 작은 <xref:System.Collections.ArrayList.Capacity%2A>,이 메서드는 o (1) 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-168">If <xref:System.Collections.ArrayList.Count%2A> is less than <xref:System.Collections.ArrayList.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="92764-169">이 메서드는 O가 용량을 늘려야 하는 새 요소를 수용할 수 있도록 하는 경우 (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.ArrayList.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-169">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-170">다음 코드 예제에서는 요소를 추가 하는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-170">The following code example shows how to add elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92764-171">
            <see cref="T:System.Collections.ArrayList" />이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-171">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="92764-172">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-172">-or-</span>
          </span>
          <span data-ttu-id="92764-173">
            <see cref="T:System.Collections.ArrayList" />가 고정 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-173">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="abstract member AddRange : System.Collections.ICollection -&gt; unit&#xA;override this.AddRange : System.Collections.ICollection -&gt; unit" Usage="arrayList.AddRange c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="92764-174">요소가 <see cref="T:System.Collections.ICollection" />의 끝에 추가되어야 하는 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-174">The <see cref="T:System.Collections.ICollection" /> whose elements should be added to the end of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="92764-175">컬렉션 자체가 <see langword="null" />일 수는 없지만 <see langword="null" />인 요소를 포함할 수는 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-175">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-176">
            <see cref="T:System.Collections.ICollection" />의 끝에 <see cref="T:System.Collections.ArrayList" />의 요소를 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-176">Adds the elements of an <see cref="T:System.Collections.ICollection" /> to the end of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-177"><xref:System.Collections.ArrayList> 허용 `null` 유효한 값으로 중복 요소를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-177"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="92764-178">요소의 순서를 <xref:System.Collections.ICollection> 에 보존 되는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-178">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="92764-179">하는 경우 새 <xref:System.Collections.ArrayList.Count%2A> (현재 <xref:System.Collections.ArrayList.Count%2A> 컬렉션의 크기를 더한) 보다 커야 <xref:System.Collections.ArrayList.Capacity%2A>의 용량을 <xref:System.Collections.ArrayList> 자동으로 새 요소를 수용 하기 위해 내부 배열을 다시 할당 하 여 증가 및 기존 요소는 새 요소가 추가 되기 전에 새 배열에 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-179">If the new <xref:System.Collections.ArrayList.Count%2A> (the current <xref:System.Collections.ArrayList.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="92764-180">경우는 <xref:System.Collections.ArrayList> 증가 하지 않고 새 요소를 수용할 수는 <xref:System.Collections.ArrayList.Capacity%2A>,이 메서드는 (`n`) 작업을 여기서 `n` 추가할 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-180">If the <xref:System.Collections.ArrayList> can accommodate the new elements without increasing the <xref:System.Collections.ArrayList.Capacity%2A>, this method is an O(`n`) operation, where `n` is the number of elements to be added.</span></span> <span data-ttu-id="92764-181">용량에 새 요소에 맞게 늘어날 수 해야 하는 경우이 메서드는 O를 됩니다 (`n` + `m`) 작업을 여기서 `n` 요소를 추가할 수는 및 `m` 는 <xref:System.Collections.ArrayList.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-181">If the capacity needs to be increased to accommodate the new elements, this method becomes an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-182">다음 코드 예제에서는 요소를 추가 하는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-182">The following code example shows how to add elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92764-183">
            <paramref name="c" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-183">
              <paramref name="c" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92764-184">
            <see cref="T:System.Collections.ArrayList" />이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-184">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="92764-185">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-185">-or-</span>
          </span>
          <span data-ttu-id="92764-186">
            <see cref="T:System.Collections.ArrayList" />가 고정 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-186">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BinarySearch">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92764-187">이진 검색 알고리즘을 사용하여 정렬된 <see cref="T:System.Collections.ArrayList" />나 그 일부에서 특정 요소를 찾습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-187">Uses a binary search algorithm to locate a specific element in the sorted <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member BinarySearch : obj -&gt; int&#xA;override this.BinarySearch : obj -&gt; int" Usage="arrayList.BinarySearch value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="92764-188">찾을 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-188">The <see cref="T:System.Object" /> to locate.</span>
          </span>
          <span data-ttu-id="92764-189">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-189">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-190">기본 비교자를 사용하여 정렬된 전체 <see cref="T:System.Collections.ArrayList" />에서 요소를 검색하고 요소의 인덱스(0부터 시작)를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-190">Searches the entire sorted <see cref="T:System.Collections.ArrayList" /> for an element using the default comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-191">
            <paramref name="value" />가 있는 경우 정렬된 <see cref="T:System.Collections.ArrayList" />에 있는 <paramref name="value" />의 0부터 시작하는 인덱스이고, 그렇지 않은 경우 <paramref name="value" />보다 큰 다음 요소의 인덱스에 대한 비트 보수인 음수이고, 더 큰 요소가 없는 경우 <see cref="P:System.Collections.ArrayList.Count" />의 비트 보수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-191">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-192">`value` 매개 변수 및 각 요소의 합니다 <xref:System.Collections.ArrayList> 구현 해야 합니다는 <xref:System.IComparable> 비교에 사용 되는 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-192">The `value` parameter and each element of the <xref:System.Collections.ArrayList> must implement the <xref:System.IComparable> interface, which is used for comparisons.</span></span> <span data-ttu-id="92764-193">요소를 <xref:System.Collections.ArrayList> 에 정의 된 정렬 순서에 따라 값이 증가 이미 정렬 되어야 합니다는 <xref:System.IComparable> 구현을 제공 합니다; 그렇지 않으면 결과가 올바르지 않을 수입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-193">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="92764-194">비교 `null` 형식을 사용 하 여 허용 되 고 사용 하는 경우 예외를 생성 하지 않습니다 <xref:System.IComparable>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-194">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="92764-195">정렬할 때 `null` 다른 개체 보다 작은 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-195">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="92764-196">경우는 <xref:System.Collections.ArrayList> 포함 된 둘 이상의 요소가 동일한 값을 가진 메서드가 반환 반드시 첫 번째 항목을 중 하나를 반환할 수는 항목 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-196">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="92764-197">경우는 <xref:System.Collections.ArrayList> 지정 된 값을 포함 하지 않는 메서드가 음수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-197">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="92764-198">검색 값 보다 큰 첫 번째 요소의 인덱스를 가져올이 음의 정수 비트 보수 연산의 (~)를 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-198">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="92764-199">값을 삽입 하는 경우는 <xref:System.Collections.ArrayList>, 정렬 순서를 유지 하기 위해이 인덱스를 삽입 지점으로 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-199">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="92764-200">이 메서드는 O (로그 `n`) 작업, 여기서 `n` 는 <xref:System.Collections.ArrayList.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-200">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-201">다음 코드 예제를 사용 하는 방법을 보여 줍니다 <xref:System.Collections.ArrayList.BinarySearch%2A> 의 특정 개체를 찾으려고 합니다 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-201">The following code example shows how to use <xref:System.Collections.ArrayList.BinarySearch%2A> to locate a specific object in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92764-202">
            <paramref name="value" />와 <see cref="T:System.Collections.ArrayList" />의 요소 둘 다 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-202">Neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="92764-203">
            <paramref name="value" />가 <see cref="T:System.Collections.ArrayList" />의 요소와 동일한 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-203">
              <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="92764-204">컬렉션에서 Culture를 구분하지 않는 문자열 작업 수행</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-204">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (value As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member BinarySearch : obj * System.Collections.IComparer -&gt; int&#xA;override this.BinarySearch : obj * System.Collections.IComparer -&gt; int" Usage="arrayList.BinarySearch (value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="92764-205">찾을 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-205">The <see cref="T:System.Object" /> to locate.</span>
          </span>
          <span data-ttu-id="92764-206">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-206">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="92764-207">요소를 비교할 때 사용하는 <see cref="T:System.Collections.IComparer" /> 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-207">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="92764-208">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-208">-or-</span>
          </span>
          <span data-ttu-id="92764-209">각 요소의 <see cref="T:System.IComparable" /> 구현인 기본 비교자를 사용하면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-209">
              <see langword="null" /> to use the default comparer that is the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-210">지정된 비교자를 사용하여 정렬된 전체 <see cref="T:System.Collections.ArrayList" />에서 요소를 검색하고 요소의 인덱스(0부터 시작)를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-210">Searches the entire sorted <see cref="T:System.Collections.ArrayList" /> for an element using the specified comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-211">
            <paramref name="value" />가 있는 경우 정렬된 <see cref="T:System.Collections.ArrayList" />에 있는 <paramref name="value" />의 0부터 시작하는 인덱스이고, 그렇지 않은 경우 <paramref name="value" />보다 큰 다음 요소의 인덱스에 대한 비트 보수인 음수이고, 더 큰 요소가 없는 경우 <see cref="P:System.Collections.ArrayList.Count" />의 비트 보수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-211">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-212">비교자는 요소를 비교 하는 방법을 사용자 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-212">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="92764-213">예를 들어 사용할 수 있습니다는 <xref:System.Collections.CaseInsensitiveComparer> 인스턴스로 대/소문자 문자열 검색을 수행 하는 비교자입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-213">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="92764-214">하는 경우 `comparer` 제공 되는 요소의 합니다 <xref:System.Collections.ArrayList> 사용 하 여 지정된 된 값과 비교할 <xref:System.Collections.IComparer> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-214">If `comparer` is provided, the elements of the <xref:System.Collections.ArrayList> are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="92764-215">요소를 <xref:System.Collections.ArrayList> 에 정의 된 정렬 순서에 따라 값이 증가 이미 정렬 되어야 합니다 `comparer`고, 그렇지 않으면 결과가 올바르지 않을 수입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-215">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="92764-216">경우 `comparer` 됩니다 `null`, 비교가 수행 되를 사용 하 여는 <xref:System.IComparable> 요소 자체 또는 지정된 된 값으로 제공 되는 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-216">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="92764-217">요소를 <xref:System.Collections.ArrayList> 에 정의 된 정렬 순서에 따라 값이 증가 이미 정렬 되어야 합니다는 <xref:System.IComparable> 구현을 제공 합니다; 그렇지 않으면 결과가 올바르지 않을 수입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-217">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="92764-218">비교 `null` 형식을 사용 하 여 허용 되 고 사용 하는 경우 예외를 생성 하지 않습니다 <xref:System.IComparable>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-218">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="92764-219">정렬할 때 `null` 다른 개체 보다 작은 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-219">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="92764-220">경우는 <xref:System.Collections.ArrayList> 포함 된 둘 이상의 요소가 동일한 값을 가진 메서드가 반환 반드시 첫 번째 항목을 중 하나를 반환할 수는 항목 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-220">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="92764-221">경우는 <xref:System.Collections.ArrayList> 지정 된 값을 포함 하지 않는 메서드가 음수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-221">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="92764-222">검색 값 보다 큰 첫 번째 요소의 인덱스를 가져올이 음의 정수 비트 보수 연산의 (~)를 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-222">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="92764-223">값을 삽입 하는 경우는 <xref:System.Collections.ArrayList>, 정렬 순서를 유지 하기 위해이 인덱스를 삽입 지점으로 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-223">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="92764-224">이 메서드는 O (로그 `n`) 작업, 여기서 `n` 는 <xref:System.Collections.ArrayList.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-224">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-225">다음 예제에서는 <xref:System.Collections.ArrayList> 색이 지정 된 동물 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-225">The following example creates an <xref:System.Collections.ArrayList> of colored animals.</span></span> <span data-ttu-id="92764-226">제공 된 <xref:System.Collections.IComparer> 이진 검색에 대 한 문자열 비교를 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-226">The provided <xref:System.Collections.IComparer> performs the string comparison for the binary search.</span></span> <span data-ttu-id="92764-227">반복 검색 및 이진 검색의 결과가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-227">The results of both an iterative search and a binary search are displayed.</span></span>  
  
 [!code-cpp[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92764-228">
            <paramref name="comparer" />가 <see langword="null" />이고 <paramref name="value" /> 및 <see cref="T:System.Collections.ArrayList" />의 요소 둘 다 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-228">
              <paramref name="comparer" /> is <see langword="null" /> and neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="92764-229">
            <paramref name="comparer" />가 <see langword="null" />이고 <paramref name="value" />가 <see cref="T:System.Collections.ArrayList" />의 요소와 동일한 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-229">
              <paramref name="comparer" /> is <see langword="null" /> and <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="92764-230">컬렉션에서 Culture를 구분하지 않는 문자열 작업 수행</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-230">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (int index, int count, object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(int32 index, int32 count, object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (index As Integer, count As Integer, value As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(int index, int count, System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member BinarySearch : int * int * obj * System.Collections.IComparer -&gt; int&#xA;override this.BinarySearch : int * int * obj * System.Collections.IComparer -&gt; int" Usage="arrayList.BinarySearch (index, count, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92764-231">검색할 범위의 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-231">The zero-based starting index of the range to search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92764-232">검색할 범위의 길이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-232">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="92764-233">찾을 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-233">The <see cref="T:System.Object" /> to locate.</span>
          </span>
          <span data-ttu-id="92764-234">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-234">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="92764-235">요소를 비교할 때 사용하는 <see cref="T:System.Collections.IComparer" /> 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-235">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="92764-236">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-236">-or-</span>
          </span>
          <span data-ttu-id="92764-237">각 요소의 <see cref="T:System.IComparable" /> 구현인 기본 비교자를 사용하면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-237">
              <see langword="null" /> to use the default comparer that is the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-238">지정된 비교자를 사용하여 정렬된 <see cref="T:System.Collections.ArrayList" />의 요소 범위에서 요소를 검색하고 요소의 인덱스(0부터 시작)를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-238">Searches a range of elements in the sorted <see cref="T:System.Collections.ArrayList" /> for an element using the specified comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-239">
            <paramref name="value" />가 있는 경우 정렬된 <see cref="T:System.Collections.ArrayList" />에 있는 <paramref name="value" />의 0부터 시작하는 인덱스이고, 그렇지 않은 경우 <paramref name="value" />보다 큰 다음 요소의 인덱스에 대한 비트 보수인 음수이고, 더 큰 요소가 없는 경우 <see cref="P:System.Collections.ArrayList.Count" />의 비트 보수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-239">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-240">비교자는 요소를 비교 하는 방법을 사용자 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-240">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="92764-241">예를 들어 사용할 수 있습니다는 <xref:System.Collections.CaseInsensitiveComparer> 인스턴스로 대/소문자 문자열 검색을 수행 하는 비교자입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-241">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="92764-242">하는 경우 `comparer` 제공 되는 요소의 합니다 <xref:System.Collections.ArrayList> 사용 하 여 지정된 된 값과 비교할 <xref:System.Collections.IComparer> 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-242">If `comparer` is provided, the elements of the <xref:System.Collections.ArrayList> are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="92764-243">요소를 <xref:System.Collections.ArrayList> 에 정의 된 정렬 순서에 따라 값이 증가 이미 정렬 되어야 합니다 `comparer`고, 그렇지 않으면 결과가 올바르지 않을 수입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-243">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="92764-244">경우 `comparer` 됩니다 `null`, 비교가 수행 되를 사용 하 여는 <xref:System.IComparable> 요소 자체 또는 지정된 된 값으로 제공 되는 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-244">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="92764-245">요소를 <xref:System.Collections.ArrayList> 에 정의 된 정렬 순서에 따라 값이 증가 이미 정렬 되어야 합니다는 <xref:System.IComparable> 구현을 제공 합니다; 그렇지 않으면 결과가 올바르지 않을 수입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-245">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="92764-246">비교 `null` 형식을 사용 하 여 허용 되 고 사용 하는 경우 예외를 생성 하지 않습니다 <xref:System.IComparable>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-246">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="92764-247">정렬할 때 `null` 다른 개체 보다 작은 것으로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-247">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="92764-248">경우는 <xref:System.Collections.ArrayList> 포함 된 둘 이상의 요소가 동일한 값을 가진 메서드가 반환 반드시 첫 번째 항목을 중 하나를 반환할 수는 항목 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-248">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="92764-249">경우는 <xref:System.Collections.ArrayList> 지정 된 값을 포함 하지 않는 메서드가 음수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-249">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="92764-250">검색 값 보다 큰 첫 번째 요소의 인덱스를 가져올이 음의 정수 비트 보수 연산의 (~)를 적용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-250">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="92764-251">값을 삽입 하는 경우는 <xref:System.Collections.ArrayList>, 정렬 순서를 유지 하기 위해이 인덱스를 삽입 지점으로 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-251">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="92764-252">이 메서드는 O (로그 `n`) 작업, 여기서 `n` 는 `count`합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-252">This method is an O(log `n`) operation, where `n` is `count`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92764-253">
            <paramref name="index" /> 및 <paramref name="count" />가 <see cref="T:System.Collections.ArrayList" />의 올바른 범위를 나타내지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-253">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="92764-254">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-254">-or-</span>
          </span>
          <span data-ttu-id="92764-255">
            <paramref name="comparer" />가 <see langword="null" />이고 <paramref name="value" /> 및 <see cref="T:System.Collections.ArrayList" />의 요소 둘 다 <see cref="T:System.IComparable" /> 인터페이스를 구현하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-255">
              <paramref name="comparer" /> is <see langword="null" /> and neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="92764-256">
            <paramref name="comparer" />가 <see langword="null" />이고 <paramref name="value" />가 <see cref="T:System.Collections.ArrayList" />의 요소와 동일한 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-256">
              <paramref name="comparer" /> is <see langword="null" /> and <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92764-257">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-257">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="92764-258">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-258">-or-</span>
          </span>
          <span data-ttu-id="92764-259">
            <paramref name="count" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-259">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="92764-260">컬렉션에서 Culture를 구분하지 않는 문자열 작업 수행</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-260">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public virtual int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Collections.ArrayList.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92764-261">
            <see cref="T:System.Collections.ArrayList" />에 포함될 수 있는 요소의 수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-261">Gets or sets the number of elements that the <see cref="T:System.Collections.ArrayList" /> can contain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92764-262">
            <see cref="T:System.Collections.ArrayList" />에 포함될 수 있는 요소의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-262">The number of elements that the <see cref="T:System.Collections.ArrayList" /> can contain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-263"><xref:System.Collections.ArrayList.Capacity%2A> 요소의 수는 <xref:System.Collections.ArrayList> 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-263"><xref:System.Collections.ArrayList.Capacity%2A> is the number of elements that the <xref:System.Collections.ArrayList> can store.</span></span> <span data-ttu-id="92764-264"><xref:System.Collections.ArrayList.Count%2A> 에 실제로 있는 요소의 수는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-264"><xref:System.Collections.ArrayList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="92764-265"><xref:System.Collections.ArrayList.Capacity%2A> 항상 보다 크거나 같음 <xref:System.Collections.ArrayList.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-265"><xref:System.Collections.ArrayList.Capacity%2A> is always greater than or equal to <xref:System.Collections.ArrayList.Count%2A>.</span></span> <span data-ttu-id="92764-266">하는 경우 <xref:System.Collections.ArrayList.Count%2A> 초과 <xref:System.Collections.ArrayList.Capacity%2A> 요소를 추가 하는 동안 용량을 자동으로 증가 이전 요소를 복사 하 고 새 요소를 추가 하기 전에 내부 배열을 다시 할당 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-266">If <xref:System.Collections.ArrayList.Count%2A> exceeds <xref:System.Collections.ArrayList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="92764-267">호출 하 여 용량을 줄일 수 있습니다 <xref:System.Collections.ArrayList.TrimToSize%2A> 하거나 설정 하 여는 <xref:System.Collections.ArrayList.Capacity%2A> 속성이 명시적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-267">The capacity can be decreased by calling <xref:System.Collections.ArrayList.TrimToSize%2A> or by setting the <xref:System.Collections.ArrayList.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="92764-268">때 변수의 <xref:System.Collections.ArrayList.Capacity%2A> 설정 된 명시적으로 지정된 된 용량에 맞게 내부 배열을 다시 할당 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-268">When the value of <xref:System.Collections.ArrayList.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="92764-269">이 속성의 값을 검색 하는 것은 O(1) 작업; 속성을 설정 하는 O (`n`) 작업을 여기서 `n` 새 용량입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-269">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92764-270">
            <see cref="P:System.Collections.ArrayList.Capacity" />가 <see cref="P:System.Collections.ArrayList.Count" />보다 작은 값으로 설정되어 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-270">
              <see cref="P:System.Collections.ArrayList.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="92764-271">시스템에 사용 가능한 메모리가 부족합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-271">There is not enough memory available on the system.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="arrayList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92764-272">
            <see cref="T:System.Collections.ArrayList" />에서 모든 요소를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-272">Removes all elements from the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-273"><xref:System.Collections.ArrayList.Count%2A> 가 0으로 설정 하 고 컬렉션의 요소에서 다른 개체에 대 한 참조도 해제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-273"><xref:System.Collections.ArrayList.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="92764-274"><xref:System.Collections.ArrayList.Capacity%2A> 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-274"><xref:System.Collections.ArrayList.Capacity%2A> remains unchanged.</span></span>  <span data-ttu-id="92764-275">용량을 다시 설정 하는 <xref:System.Collections.ArrayList>, 호출 <xref:System.Collections.ArrayList.TrimToSize%2A> 설정할지를 <xref:System.Collections.ArrayList.Capacity%2A> 속성을 직접.</span><span class="sxs-lookup"><span data-stu-id="92764-275">To reset the capacity of the <xref:System.Collections.ArrayList>, call <xref:System.Collections.ArrayList.TrimToSize%2A> or set the <xref:System.Collections.ArrayList.Capacity%2A> property directly.</span></span> <span data-ttu-id="92764-276">빈 트리밍 <xref:System.Collections.ArrayList> 의 용량을 설정 합니다 <xref:System.Collections.ArrayList> 기본 용량입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-276">Trimming an empty <xref:System.Collections.ArrayList> sets the capacity of the <xref:System.Collections.ArrayList> to the default capacity.</span></span>  
  
 <span data-ttu-id="92764-277">이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.ArrayList.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-277">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-278">다음 코드 예제를 사용 하지 않는 부분을 트리밍하는 방법을 보여 줍니다 합니다 <xref:System.Collections.ArrayList> 값의 선택을 취소 하는 방법과 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-278">The following code example shows how to trim the unused portions of the <xref:System.Collections.ArrayList> and how to clear the values of the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92764-279">
            <see cref="T:System.Collections.ArrayList" />이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-279">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="92764-280">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-280">-or-</span>
          </span>
          <span data-ttu-id="92764-281">
            <see cref="T:System.Collections.ArrayList" />가 고정 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-281">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.TrimToSize" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="arrayList.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92764-282">
            <see cref="T:System.Collections.ArrayList" />의 부분 복사본을 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-282">Creates a shallow copy of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-283">
            <see cref="T:System.Collections.ArrayList" />의 부분 복사본입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-283">A shallow copy of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-284">컬렉션의 단순 복사본은 참조 형식 또는 값 형식에만 참조에서 참조 하는 개체 복사는 하지 여부를 컬렉션의 요소를 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-284">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="92764-285">새 컬렉션에 대 한 참조는 원본 컬렉션에 대 한 참조를 가리키는 동일한 개체를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="92764-285">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="92764-286">반면, 컬렉션의 전체 복사본을 요소를 복사 하 고 뿐만 아니라 요소에 의해 직접 또는 간접적으로 참조 하는 모든 것.</span><span class="sxs-lookup"><span data-stu-id="92764-286">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="92764-287">이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.ArrayList.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-287">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="arrayList.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="92764-288">
            <see cref="T:System.Object" />에서 찾을 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-288">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="92764-289">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-289">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-290">
            <see cref="T:System.Collections.ArrayList" />에 요소가 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-290">Determines whether an element is in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-291">
            <see langword="true" />가 <paramref name="item" />에 있으면 <see cref="T:System.Collections.ArrayList" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-291">
              <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.ArrayList" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-292">이 메서드는; 선형 검색을 수행합니다. 따라서이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.ArrayList.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-292">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="92764-293">이 메서드를 호출 하 여 같은지 확인 <xref:System.Object.Equals%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-293">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="92764-294">컬렉션의 개체를 사용 하 여이 메서드는.NET Framework 2.0 부터는 <xref:System.Object.Equals%2A> 하 고 <xref:System.IComparable.CompareTo%2A> 메서드를 `item` 항목이 있는지 여부를 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="92764-294">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="92764-295">.NET Framework의 이전 버전을 사용 하 여이 결정 했습니다 합니다 <xref:System.Object.Equals%2A> 및 <xref:System.IComparable.CompareTo%2A> 의 메서드는 `item` 컬렉션의 개체에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-295">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="92764-296">컬렉션에서 Culture를 구분하지 않는 문자열 작업 수행</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-296">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92764-297">
            <see cref="T:System.Collections.ArrayList" /> 또는 그 일부를 1차원 배열에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-297">Copies the <see cref="T:System.Collections.ArrayList" /> or a portion of it to a one-dimensional array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array -&gt; unit&#xA;override this.CopyTo : Array -&gt; unit" Usage="arrayList.CopyTo array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="92764-298">
            <see cref="T:System.Array" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-298">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="92764-299">
            <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-299">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-300">대상 배열의 맨 처음부터 시작하여 전체 <see cref="T:System.Collections.ArrayList" />를 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-300">Copies the entire <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the beginning of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-301">지정된 된 배열의 호환 되는 형식 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-301">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="92764-302">이 메서드는 <xref:System.Array.Copy%2A?displayProperty=nameWithType> 요소를 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-302">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="92764-303">요소에 복사 됩니다는 <xref:System.Array> 열거자가 반복 나타나는 순서에서는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-303">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="92764-304">이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.ArrayList.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-304">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-305">다음 코드 예제에서는 복사 하는 방법을 보여 줍니다.는 <xref:System.Collections.ArrayList> 는 1 차원으로 <xref:System.Array?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-305">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92764-306">
            <paramref name="array" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-306">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92764-307">
            <paramref name="array" />가 다차원 배열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-307">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="92764-308">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-308">-or-</span>
          </span>
          <span data-ttu-id="92764-309">소스 <see cref="T:System.Collections.ArrayList" /> 요소 수가 대상 <paramref name="array" />를 포함할 수 있는 요소 수보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-309">The number of elements in the source <see cref="T:System.Collections.ArrayList" /> is greater than the number of elements that the destination <paramref name="array" /> can contain.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="92764-310">소스 <see cref="T:System.Collections.ArrayList" />의 형식을 대상 <paramref name="array" />의 형식으로 자동 캐스팅할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-310">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="arrayList.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="92764-311">
            <see cref="T:System.Array" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-311">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="92764-312">
            <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-312">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="92764-313">
            <c>배열</c>에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-313">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-314">대상 배열의 지정된 인덱스에서 시작하여 전체 <see cref="T:System.Collections.ArrayList" />을 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-314">Copies the entire <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-315">지정된 된 배열의 호환 되는 형식 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-315">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="92764-316">이 메서드는 <xref:System.Array.Copy%2A?displayProperty=nameWithType> 요소를 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-316">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="92764-317">요소에 복사 됩니다는 <xref:System.Array> 열거자가 반복 나타나는 순서에서는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-317">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="92764-318">이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.ArrayList.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-318">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-319">다음 코드 예제에서는 복사 하는 방법을 보여 줍니다.는 <xref:System.Collections.ArrayList> 는 1 차원으로 <xref:System.Array?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-319">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92764-320">
            <paramref name="array" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-320">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92764-321">
            <paramref name="arrayIndex" />가 0보다 작습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-321">
              <paramref name="arrayIndex" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92764-322">
            <paramref name="array" />가 다차원 배열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-322">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="92764-323">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-323">-or-</span>
          </span>
          <span data-ttu-id="92764-324">소스 <see cref="T:System.Collections.ArrayList" />의 요소 수가 대상 <paramref name="array" />의 <paramref name="arrayIndex" />부터 끝까지 사용 가능한 공간보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-324">The number of elements in the source <see cref="T:System.Collections.ArrayList" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="92764-325">소스 <see cref="T:System.Collections.ArrayList" />의 형식을 대상 <paramref name="array" />의 형식으로 자동 캐스팅할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-325">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (int index, Array array, int arrayIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int32 index, class System.Array array, int32 arrayIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(int index, Array ^ array, int arrayIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : int * Array * int * int -&gt; unit&#xA;override this.CopyTo : int * Array * int * int -&gt; unit" Usage="arrayList.CopyTo (index, array, arrayIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92764-326">소스 <see cref="T:System.Collections.ArrayList" />에서 복사가 시작되는 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-326">The zero-based index in the source <see cref="T:System.Collections.ArrayList" /> at which copying begins.</span>
          </span>
        </param>
        <param name="array">
          <span data-ttu-id="92764-327">
            <see cref="T:System.Array" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-327">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="92764-328">
            <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-328">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="92764-329">
            <c>배열</c>에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-329">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92764-330">복사할 요소의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-330">The number of elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-331">대상 배열의 지정한 인덱스에서 시작하여 <see cref="T:System.Collections.ArrayList" />의 요소 범위를 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-331">Copies a range of elements from the <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-332">지정된 된 배열의 호환 되는 형식 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-332">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="92764-333">이 메서드는 <xref:System.Array.Copy%2A?displayProperty=nameWithType> 요소를 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-333">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="92764-334">요소에 복사 됩니다는 <xref:System.Array> 열거자가 반복 나타나는 순서에서는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-334">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="92764-335">이 메서드는 O (`n`) 작업, 여기서 `n` 는 `count`합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-335">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-336">다음 코드 예제에서는 복사 하는 방법을 보여 줍니다.는 <xref:System.Collections.ArrayList> 는 1 차원으로 <xref:System.Array?displayProperty=nameWithType>입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-336">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92764-337">
            <paramref name="array" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-337">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92764-338">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-338">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="92764-339">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-339">-or-</span>
          </span>
          <span data-ttu-id="92764-340">
            <paramref name="arrayIndex" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-340">
              <paramref name="arrayIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="92764-341">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-341">-or-</span>
          </span>
          <span data-ttu-id="92764-342">
            <paramref name="count" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-342">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92764-343">
            <paramref name="array" />가 다차원 배열인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-343">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="92764-344">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-344">-or-</span>
          </span>
          <span data-ttu-id="92764-345">
            <paramref name="index" />가 소스 <see cref="T:System.Collections.ArrayList" />의 <see cref="P:System.Collections.ArrayList.Count" />보다 크거나 같습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-345">
              <paramref name="index" /> is equal to or greater than the <see cref="P:System.Collections.ArrayList.Count" /> of the source <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="92764-346">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-346">-or-</span>
          </span>
          <span data-ttu-id="92764-347">소스 <see cref="T:System.Collections.ArrayList" />의 <paramref name="index" />부터 끝까지에 포함된 요소 수가 대상 <paramref name="array" />의 <paramref name="arrayIndex" />부터 끝까지의 사용 가능한 공간보다 큽니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-347">The number of elements from <paramref name="index" /> to the end of the source <see cref="T:System.Collections.ArrayList" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="92764-348">소스 <see cref="T:System.Collections.ArrayList" />의 형식을 대상 <paramref name="array" />의 형식으로 자동 캐스팅할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-348">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.ArrayList.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92764-349">
            <see cref="T:System.Collections.ArrayList" />에 실제로 포함된 요소의 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-349">Gets the number of elements actually contained in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92764-350">
            <see cref="T:System.Collections.ArrayList" />에 실제로 포함된 요소의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-350">The number of elements actually contained in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-351"><xref:System.Collections.ArrayList.Capacity%2A> 요소의 수는 <xref:System.Collections.ArrayList> 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-351"><xref:System.Collections.ArrayList.Capacity%2A> is the number of elements that the <xref:System.Collections.ArrayList> can store.</span></span> <span data-ttu-id="92764-352"><xref:System.Collections.ArrayList.Count%2A> 에 실제로 있는 요소의 수는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-352"><xref:System.Collections.ArrayList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="92764-353"><xref:System.Collections.ArrayList.Capacity%2A> 항상 보다 크거나 같음 <xref:System.Collections.ArrayList.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-353"><xref:System.Collections.ArrayList.Capacity%2A> is always greater than or equal to <xref:System.Collections.ArrayList.Count%2A>.</span></span> <span data-ttu-id="92764-354">하는 경우 <xref:System.Collections.ArrayList.Count%2A> 초과 <xref:System.Collections.ArrayList.Capacity%2A> 요소를 추가 하는 동안 용량을 자동으로 증가 이전 요소를 복사 하 고 새 요소를 추가 하기 전에 내부 배열을 다시 할당 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-354">If <xref:System.Collections.ArrayList.Count%2A> exceeds <xref:System.Collections.ArrayList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="92764-355">이 속성 값을 검색하는 것은 O(1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-355">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FixedSize">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92764-356">요소를 수정할 수는 있지만 추가하거나 제거할 수는 없는 고정 크기의 목록 래퍼를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-356">Returns a list wrapper with a fixed size, where elements are allowed to be modified, but not added or removed.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FixedSize">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList FixedSize (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList FixedSize(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FixedSize (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ FixedSize(System::Collections::ArrayList ^ list);" />
      <MemberSignature Language="F#" Value="static member FixedSize : System.Collections.ArrayList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.FixedSize list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="92764-357">래핑할 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-357">The <see cref="T:System.Collections.ArrayList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-358">고정 크기의 <see cref="T:System.Collections.ArrayList" /> 래퍼를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-358">Returns an <see cref="T:System.Collections.ArrayList" /> wrapper with a fixed size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-359">고정 크기의 <see cref="T:System.Collections.ArrayList" /> 래퍼입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-359">An <see cref="T:System.Collections.ArrayList" /> wrapper with a fixed size.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-360">이 래퍼를 추가 및 원래에서 삭제를 방지 하기 위해 사용할 수 <xref:System.Collections.ArrayList>입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-360">This wrapper can be used to prevent additions to and deletions from the original <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="92764-361">여전히 요소를 수정 하거나 바꿀 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-361">The elements can still be modified or replaced.</span></span>  
  
 <span data-ttu-id="92764-362">크기가 고정된 된 컬렉션은 요소; 추가 및 제거를 방지 하는 래퍼를 지정 된 컬렉션 따라서 기본 컬렉션 추가 또는 제거 요소를 포함 하 여 변경 된 경우 고정 크기 컬렉션에 해당 내용을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-362">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="92764-363">이 방법은 O(1) 작업에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-363">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-364">다음 코드 예제에는 고정 크기 래퍼를 만드는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-364">The following code example shows how to create a fixed-size wrapper around an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92764-365">
            <paramref name="list" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-365">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FixedSize">
      <MemberSignature Language="C#" Value="public static System.Collections.IList FixedSize (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList FixedSize(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.FixedSize(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FixedSize (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ FixedSize(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member FixedSize : System.Collections.IList -&gt; System.Collections.IList" Usage="System.Collections.ArrayList.FixedSize list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="92764-366">래핑할 <see cref="T:System.Collections.IList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-366">The <see cref="T:System.Collections.IList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-367">고정 크기의 <see cref="T:System.Collections.IList" /> 래퍼를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-367">Returns an <see cref="T:System.Collections.IList" /> wrapper with a fixed size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-368">고정 크기의 <see cref="T:System.Collections.IList" /> 래퍼입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-368">An <see cref="T:System.Collections.IList" /> wrapper with a fixed size.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-369">이 래퍼를 추가 및 원래에서 삭제를 방지 하기 위해 사용할 수 <xref:System.Collections.IList>입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-369">This wrapper can be used to prevent additions to and deletions from the original <xref:System.Collections.IList>.</span></span> <span data-ttu-id="92764-370">여전히 요소를 수정 하거나 바꿀 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-370">The elements can still be modified or replaced.</span></span>  
  
 <span data-ttu-id="92764-371">크기가 고정된 된 컬렉션은 요소; 추가 및 제거를 방지 하는 래퍼를 지정 된 컬렉션 따라서 기본 컬렉션 추가 또는 제거 요소를 포함 하 여 변경 된 경우 고정 크기 컬렉션에 해당 내용을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-371">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="92764-372">이 방법은 O(1) 작업에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-372">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92764-373">
            <paramref name="list" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-373">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92764-374">
            <see cref="T:System.Collections.ArrayList" />를 반복하는 열거자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-374">Returns an enumerator that iterates through the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="arrayList.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92764-375">전체 <see cref="T:System.Collections.ArrayList" />에 대한 열거자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-375">Returns an enumerator for the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-376">전체 <see cref="T:System.Collections.IEnumerator" />의 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-376">An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-377">@FSHO1@C# 언어의 `foreach` 문(Visual Basic의 경우 `for each`)은 열거자의 복잡성을 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="92764-377">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="92764-378">그러므로 열거자를 직접 조작하는 대신 `foreach`를 사용하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-378">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="92764-379">열거자를 사용하여 컬렉션의 데이터를 읽을 수는 있지만 내부 컬렉션을 수정할 수는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-379">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="92764-380">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-380">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="92764-381"><xref:System.Collections.IEnumerator.Reset%2A>을 실행하면 열거자가 이 위치로 복원됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-381"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="92764-382">이 위치에서 <xref:System.Collections.IEnumerator.Current%2A>는 정의되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-382">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="92764-383">따라서 <xref:System.Collections.IEnumerator.MoveNext%2A>의 값을 읽기 전에 <xref:System.Collections.IEnumerator.Current%2A>를 호출하여 열거자를 해당 컬렉션의 첫 번째 요소로 보내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-383">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="92764-384"><xref:System.Collections.IEnumerator.Current%2A>에서는 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 <xref:System.Collections.IEnumerator.Reset%2A>이 호출될 때까지 동일한 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-384"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="92764-385"><xref:System.Collections.IEnumerator.MoveNext%2A>는 <xref:System.Collections.IEnumerator.Current%2A>를 다음 요소로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-385"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="92764-386">경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 열거자를 컬렉션의 끝 컬렉션의 마지막 요소 뒤에 배치 되는 전달 하 고 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-386">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="92764-387">열거자가 있는 경우이 위치에 대 한 후속 호출은 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환할 수도 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-387">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="92764-388">마지막으로 호출 하는 경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`, <xref:System.Collections.IEnumerator.Current%2A> 정의 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-388">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="92764-389"><xref:System.Collections.IEnumerator.Current%2A>를 컬렉션의 첫째 요소에 다시 설정하려면 <xref:System.Collections.IEnumerator.Reset%2A>을 호출한 뒤 <xref:System.Collections.IEnumerator.MoveNext%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-389">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="92764-390">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-390">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="92764-391">컬렉션에 대해 변경 내용을 수행하면(예: 요소 추가, 수정 또는 삭제) 열거자는 복구 불가능하게 무효화되고 해당 동작은 정의되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-391">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="92764-392">열거자는 컬렉션에 배타적으로 액세스하지 못하므로 컬렉션을 열거하는 것은 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="92764-392">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="92764-393">열거 동안 스레드 보안을 보장하려면 전체 열거 동안 컬렉션을 잠그면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-393">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="92764-394">여러 스레드에서 컬렉션에 액세스하여 읽고 쓸 수 있도록 허용하려면 사용자 지정 동기화를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-394">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="92764-395">이 방법은 O(1) 작업에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-395">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-396">다음 예제에 대 한 열거자를 가져옵니다는 <xref:System.Collections.ArrayList>, 및의 요소 범위에 대 한 열거자를 <xref:System.Collections.ArrayList>입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-396">The following example gets the enumerator for an <xref:System.Collections.ArrayList>, and the enumerator for a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-csharp[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR/collections.arraylist.getenumerator/cs/program.cs#1)]
 [!code-vb[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/collections.arraylist.getenumerator/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator (index As Integer, count As Integer) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : int * int -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : int * int -&gt; System.Collections.IEnumerator" Usage="arrayList.GetEnumerator (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92764-397">열거자가 참조해야 하는 <see cref="T:System.Collections.ArrayList" /> 섹션의 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-397">The zero-based starting index of the <see cref="T:System.Collections.ArrayList" /> section that the enumerator should refer to.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92764-398">열거자가 참조해야 하는 <see cref="T:System.Collections.ArrayList" /> 섹션의 요소 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-398">The number of elements in the <see cref="T:System.Collections.ArrayList" /> section that the enumerator should refer to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-399">
            <see cref="T:System.Collections.ArrayList" />의 요소 범위에 대한 열거자를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-399">Returns an enumerator for a range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-400">
            <see cref="T:System.Collections.IEnumerator" />의 지정된 요소 범위에 대한 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-400">An <see cref="T:System.Collections.IEnumerator" /> for the specified range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-401">합니다 `foreach` C# 언어의 (`for each` Visual c + +에서는 `For Each` Visual Basic) 열거자의 복잡성을 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="92764-401">The `foreach` statement of the C# language (`for each` in Visual C++, `For Each` Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="92764-402">그러므로 열거자를 직접 조작하는 대신 `foreach`를 사용하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-402">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="92764-403">열거자를 사용하여 컬렉션의 데이터를 읽을 수는 있지만 내부 컬렉션을 수정할 수는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-403">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="92764-404">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-404">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="92764-405"><xref:System.Collections.IEnumerator.Reset%2A>을 실행하면 열거자가 이 위치로 복원됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-405"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="92764-406">이 위치에서 <xref:System.Collections.IEnumerator.Current%2A>는 정의되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-406">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="92764-407">따라서 <xref:System.Collections.IEnumerator.MoveNext%2A>의 값을 읽기 전에 <xref:System.Collections.IEnumerator.Current%2A>를 호출하여 열거자를 해당 컬렉션의 첫 번째 요소로 보내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-407">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="92764-408"><xref:System.Collections.IEnumerator.Current%2A>에서는 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 <xref:System.Collections.IEnumerator.Reset%2A>이 호출될 때까지 동일한 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-408"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="92764-409"><xref:System.Collections.IEnumerator.MoveNext%2A>는 <xref:System.Collections.IEnumerator.Current%2A>를 다음 요소로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-409"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="92764-410">경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 열거자를 컬렉션의 끝 컬렉션의 마지막 요소 뒤에 배치 되는 전달 하 고 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-410">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="92764-411">열거자가 있는 경우이 위치에 대 한 후속 호출은 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환할 수도 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-411">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="92764-412">마지막으로 호출 하는 경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`, <xref:System.Collections.IEnumerator.Current%2A> 정의 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-412">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="92764-413"><xref:System.Collections.IEnumerator.Current%2A>를 컬렉션의 첫째 요소에 다시 설정하려면 <xref:System.Collections.IEnumerator.Reset%2A>을 호출한 뒤 <xref:System.Collections.IEnumerator.MoveNext%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-413">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="92764-414">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-414">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="92764-415">컬렉션에 대해 변경 내용을 수행하면(예: 요소 추가, 수정 또는 삭제) 열거자는 복구 불가능하게 무효화되고 해당 동작은 정의되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-415">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="92764-416">열거자는 컬렉션에 배타적으로 액세스하지 못하므로 컬렉션을 열거하는 것은 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="92764-416">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="92764-417">열거 동안 스레드 보안을 보장하려면 전체 열거 동안 컬렉션을 잠그면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-417">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="92764-418">여러 스레드에서 컬렉션에 액세스하여 읽고 쓸 수 있도록 허용하려면 사용자 지정 동기화를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-418">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="92764-419">이 방법은 O(1) 작업에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-419">This method is an O(1) operation.</span></span>  
  
## <a name="version-compatibility"></a><span data-ttu-id="92764-420">버전 호환성</span><span class="sxs-lookup"><span data-stu-id="92764-420">Version Compatibility</span></span>  
 <span data-ttu-id="92764-421">에 대 한.NET Framework 버전 1.0 및 1.1에서는 열거자는 <xref:System.Collections.ArrayList> 반환한 래퍼는 <xref:System.Collections.ArrayList.Adapter%2A> 메서드 아닌 수로 상한을으로 두 번째 인수를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-421">In the .NET Framework versions 1.0 and 1.1, the enumerator for an <xref:System.Collections.ArrayList> wrapper returned by the <xref:System.Collections.ArrayList.Adapter%2A> method treated the second argument as an upper bound rather than as a count.</span></span> <span data-ttu-id="92764-422">에 [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] 두 번째 인수 수로 올바르게 처리 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-422">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] the second argument is correctly treated as a count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-423">다음 예제에 대 한 열거자를 가져옵니다는 <xref:System.Collections.ArrayList>, 및의 요소 범위에 대 한 열거자를 <xref:System.Collections.ArrayList>입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-423">The following example gets the enumerator for an <xref:System.Collections.ArrayList>, and the enumerator for a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-csharp[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR/collections.arraylist.getenumerator/cs/program.cs#1)]
 [!code-vb[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/collections.arraylist.getenumerator/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92764-424">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-424">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="92764-425">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-425">-or-</span>
          </span>
          <span data-ttu-id="92764-426">
            <paramref name="count" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-426">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92764-427">
            <paramref name="index" /> 및 <paramref name="count" />가 <see cref="T:System.Collections.ArrayList" />의 올바른 범위를 지정하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-427">
              <paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetRange">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ArrayList GetRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ArrayList GetRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRange (index As Integer, count As Integer) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ArrayList ^ GetRange(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member GetRange : int * int -&gt; System.Collections.ArrayList&#xA;override this.GetRange : int * int -&gt; System.Collections.ArrayList" Usage="arrayList.GetRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92764-428">범위가 시작되는 <see cref="T:System.Collections.ArrayList" /> 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-428">The zero-based <see cref="T:System.Collections.ArrayList" /> index at which the range starts.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92764-429">범위의 요소 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-429">The number of elements in the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-430">소스 <see cref="T:System.Collections.ArrayList" />에서 요소의 하위 집합을 나타내는 <see cref="T:System.Collections.ArrayList" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-430">Returns an <see cref="T:System.Collections.ArrayList" /> which represents a subset of the elements in the source <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-431">소스 <see cref="T:System.Collections.ArrayList" />에서 요소의 하위 집합을 나타내는 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-431">An <see cref="T:System.Collections.ArrayList" /> which represents a subset of the elements in the source <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-432">이 메서드는 요소의 복사본을 만들지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-432">This method does not create copies of the elements.</span></span> <span data-ttu-id="92764-433">새 <xref:System.Collections.ArrayList> 소스에만 보기 창이 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-433">The new <xref:System.Collections.ArrayList> is only a view window into the source <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="92764-434">그러나 원본의 모든 후속 변경 내용이 <xref:System.Collections.ArrayList> 이 보기 창을 통해 해야 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-434">However, all subsequent changes to the source <xref:System.Collections.ArrayList> must be done through this view window <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="92764-435">원본에 직접 변경 되 면 <xref:System.Collections.ArrayList>를 보기 창 <xref:System.Collections.ArrayList> 무효화 될 모든 작업을 반환 합니다는 <xref:System.InvalidOperationException>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-435">If changes are made directly to the source <xref:System.Collections.ArrayList>, the view window <xref:System.Collections.ArrayList> is invalidated and any operations on it will return an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="92764-436">이 방법은 O(1) 작업에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-436">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-437">다음 코드 예제에서 요소의 범위를 가져와 설정 하는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-437">The following code example shows how to set and get a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.SetRange Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.SetRange Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.SetRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92764-438">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-438">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="92764-439">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-439">-or-</span>
          </span>
          <span data-ttu-id="92764-440">
            <paramref name="count" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-440">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92764-441">
            <paramref name="index" /> 및 <paramref name="count" />가 <see cref="T:System.Collections.ArrayList" />에 있는 요소의 올바른 범위를 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-441">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92764-442">
            <see cref="T:System.Collections.ArrayList" /> 또는 그 일부에서 처음 나오는 값의 인덱스(0부터 시작)를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-442">Returns the zero-based index of the first occurrence of a value in the <see cref="T:System.Collections.ArrayList" /> or in a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj -&gt; int&#xA;override this.IndexOf : obj -&gt; int" Usage="arrayList.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="92764-443">
            <see cref="T:System.Object" />에서 찾을 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-443">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="92764-444">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-444">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-445">지정한 <see cref="T:System.Object" />를 검색하고, 전체 <see cref="T:System.Collections.ArrayList" /> 내에서 처음 나오는 0부터 시작하는 인덱스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-445">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-446">
            <paramref name="value" />가 있으면 전체 <see cref="T:System.Collections.ArrayList" />에서 맨 처음 발견되는 값의 0부터 시작하는 인덱스이고, 그렇지 않으면 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-446">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Collections.ArrayList" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-447"><xref:System.Collections.ArrayList> 검색은 앞으로 첫 번째 요소부터 마지막 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-447">The <xref:System.Collections.ArrayList> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="92764-448">이 메서드는; 선형 검색을 수행합니다. 따라서이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.ArrayList.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-448">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="92764-449">이 메서드를 호출 하 여 같은지 확인 <xref:System.Object.Equals%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-449">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="92764-450">컬렉션의 개체를 사용 하 여이 메서드는.NET Framework 2.0 부터는 <xref:System.Object.Equals%2A> 하 고 <xref:System.IComparable.CompareTo%2A> 메서드를 `item` 항목이 있는지 여부를 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="92764-450">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="92764-451">.NET Framework의 이전 버전을 사용 하 여이 결정 했습니다 합니다 <xref:System.Object.Equals%2A> 및 <xref:System.IComparable.CompareTo%2A> 의 메서드는 `item` 컬렉션의 개체에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-451">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-452">다음 코드 예제에는 지정된 된 요소 중 첫 번째 요소의 인덱스를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="92764-452">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="92764-453">컬렉션에서 Culture를 구분하지 않는 문자열 작업 수행</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-453">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj * int -&gt; int&#xA;override this.IndexOf : obj * int -&gt; int" Usage="arrayList.IndexOf (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="92764-454">
            <see cref="T:System.Object" />에서 찾을 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-454">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="92764-455">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-455">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="92764-456">검색의 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-456">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="92764-457">0은 빈 목록에서 유효합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-457">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-458">지정된 <see cref="T:System.Object" />를 검색하고, 지정된 인덱스부터 마지막 요소까지 포함되는 <see cref="T:System.Collections.ArrayList" />의 요소 범위에서 처음 나오는 0부터 시작하는 인덱스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-458">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-459">
            <paramref name="startIndex" />부터 마지막 요소까지 포함하는 <see cref="T:System.Collections.ArrayList" />의 요소 범위에 <paramref name="value" />이 있으면 처음으로 검색한 개체의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-459">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from <paramref name="startIndex" /> to the last element, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-460">합니다 <xref:System.Collections.ArrayList> 부터 앞으로 검색 됩니다 `startIndex` 및 마지막 요소에 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-460">The <xref:System.Collections.ArrayList> is searched forward starting at `startIndex` and ending at the last element.</span></span>  
  
 <span data-ttu-id="92764-461">이 메서드는; 선형 검색을 수행합니다. 따라서이 메서드는 O (`n`) 작업을 여기서 `n` 의 요소입니다 `startIndex` 의 끝에는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-461">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="92764-462">이 메서드를 호출 하 여 같은지 확인 <xref:System.Object.Equals%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-462">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="92764-463">컬렉션의 개체를 사용 하 여이 메서드는.NET Framework 2.0 부터는 <xref:System.Object.Equals%2A> 하 고 <xref:System.IComparable.CompareTo%2A> 메서드를 `item` 항목이 있는지 여부를 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="92764-463">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="92764-464">.NET Framework의 이전 버전을 사용 하 여이 결정 했습니다 합니다 <xref:System.Object.Equals%2A> 및 <xref:System.IComparable.CompareTo%2A> 의 메서드는 `item` 컬렉션의 개체에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-464">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-465">다음 코드 예제에는 지정된 된 요소 중 첫 번째 요소의 인덱스를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="92764-465">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92764-466">
            <paramref name="startIndex" />가 <see cref="T:System.Collections.ArrayList" />의 유효한 인덱스 범위를 벗어납니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-466">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="92764-467">컬렉션에서 Culture를 구분하지 않는 문자열 작업 수행</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-467">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj * int * int -&gt; int&#xA;override this.IndexOf : obj * int * int -&gt; int" Usage="arrayList.IndexOf (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="92764-468">
            <see cref="T:System.Object" />에서 찾을 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-468">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="92764-469">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-469">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="92764-470">검색의 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-470">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="92764-471">0은 빈 목록에서 유효합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-471">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92764-472">검색할 섹션에 있는 요소 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-472">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-473">지정된 <see cref="T:System.Object" />를 검색하고, 지정된 인덱스부터 시작하여 지정된 수의 요소를 포함하는 <see cref="T:System.Collections.ArrayList" />의 요소 범위에서 처음 나오는 0부터 시작하는 인덱스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-473">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that starts at the specified index and contains the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-474">
            <paramref name="startIndex" />에서 시작하여 <paramref name="count" />개의 요소를 포함하는 <see cref="T:System.Collections.ArrayList" />의 요소 범위에 <paramref name="value" />이 있으면 처음으로 검색한 개체의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-474">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that starts at <paramref name="startIndex" /> and contains <paramref name="count" /> number of elements, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-475"><xref:System.Collections.ArrayList> 부터 앞으로 검색 됩니다 `startIndex` 에서 끝나는 `startIndex` plus `count` 에서 1을 뺀 경우 `count` 0 보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="92764-475">The <xref:System.Collections.ArrayList> is searched forward starting at `startIndex` and ending at `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="92764-476">이 메서드는; 선형 검색을 수행합니다. 따라서이 메서드는 O (`n`) 작업, 여기서 `n` 는 `count`합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-476">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="92764-477">이 메서드를 호출 하 여 같은지 확인 <xref:System.Object.Equals%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-477">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="92764-478">컬렉션의 개체를 사용 하 여이 메서드는.NET Framework 2.0 부터는 <xref:System.Object.Equals%2A> 하 고 <xref:System.IComparable.CompareTo%2A> 메서드를 `item` 항목이 있는지 여부를 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="92764-478">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="92764-479">.NET Framework의 이전 버전을 사용 하 여이 결정 했습니다 합니다 <xref:System.Object.Equals%2A> 및 <xref:System.IComparable.CompareTo%2A> 의 메서드는 `item` 컬렉션의 개체에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-479">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-480">다음 코드 예제에는 지정된 된 요소 중 첫 번째 요소의 인덱스를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="92764-480">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92764-481">
            <paramref name="startIndex" />가 <see cref="T:System.Collections.ArrayList" />의 유효한 인덱스 범위를 벗어납니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-481">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="92764-482">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-482">-or-</span>
          </span>
          <span data-ttu-id="92764-483">
            <paramref name="count" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-483">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="92764-484">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-484">-or-</span>
          </span>
          <span data-ttu-id="92764-485">
            <paramref name="startIndex" /> 및 <paramref name="count" />가 <see cref="T:System.Collections.ArrayList" />에서 올바른 섹션을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-485">
              <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="92764-486">컬렉션에서 Culture를 구분하지 않는 문자열 작업 수행</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-486">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit&#xA;override this.Insert : int * obj -&gt; unit" Usage="arrayList.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92764-487">
            <c>value</c>를 삽입할 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-487">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="92764-488">삽입할 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-488">The <see cref="T:System.Object" /> to insert.</span>
          </span>
          <span data-ttu-id="92764-489">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-489">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-490">
            <see cref="T:System.Collections.ArrayList" />의 지정된 인덱스에 요소를 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-490">Inserts an element into the <see cref="T:System.Collections.ArrayList" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-491"><xref:System.Collections.ArrayList> 허용 `null` 유효한 값으로 중복 요소를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-491"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="92764-492">경우 <xref:System.Collections.ArrayList.Count%2A> 이미 같은 <xref:System.Collections.ArrayList.Capacity%2A>의 용량을 <xref:System.Collections.ArrayList> 자동으로 내부 배열을 다시 할당 하 여 증가 하는 새 요소가 추가 되기 전에 기존 요소를 새 배열에 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-492">If <xref:System.Collections.ArrayList.Count%2A> already equals <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="92764-493">하는 경우 `index` 값과 같음 <xref:System.Collections.ArrayList.Count%2A>를 `value` 끝에 추가 됩니다 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-493">If `index` is equal to <xref:System.Collections.ArrayList.Count%2A>, `value` is added to the end of <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="92764-494">목록처럼 연속된 요소로 구성된 컬렉션에서는 삽입 지점 다음에 있는 요소를 아래로 이동하여 새 요소로 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-494">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="92764-495">컬렉션에 인덱스가 지정된 경우 이동되는 요소의 인덱스도 업데이트됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-495">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="92764-496">요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화되어 있는 컬렉션에는 이러한 동작이 적용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-496">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="92764-497">이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.ArrayList.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-497">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-498">다음 코드 예제에서는 요소를 삽입 하는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-498">The following code example shows how to insert elements into the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Insert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92764-499">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-499">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="92764-500">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-500">-or-</span>
          </span>
          <span data-ttu-id="92764-501">
            <paramref name="index" />가 <see cref="P:System.Collections.ArrayList.Count" />보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-501">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92764-502">
            <see cref="T:System.Collections.ArrayList" />이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-502">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="92764-503">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-503">-or-</span>
          </span>
          <span data-ttu-id="92764-504">
            <see cref="T:System.Collections.ArrayList" />가 고정 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-504">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public virtual void InsertRange (int index, System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertRange(int32 index, class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertRange (index As Integer, c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertRange(int index, System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="abstract member InsertRange : int * System.Collections.ICollection -&gt; unit&#xA;override this.InsertRange : int * System.Collections.ICollection -&gt; unit" Usage="arrayList.InsertRange (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92764-505">새 요소가 삽입되어야 하는 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-505">The zero-based index at which the new elements should be inserted.</span>
          </span>
        </param>
        <param name="c">
          <span data-ttu-id="92764-506">요소가 <see cref="T:System.Collections.ICollection" />에 삽입되어야 하는 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-506">The <see cref="T:System.Collections.ICollection" /> whose elements should be inserted into the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="92764-507">컬렉션 자체가 <see langword="null" />일 수는 없지만 <see langword="null" />인 요소를 포함할 수는 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-507">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-508">
            <see cref="T:System.Collections.ArrayList" />의 지정된 인덱스에 컬렉션의 요소를 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-508">Inserts the elements of a collection into the <see cref="T:System.Collections.ArrayList" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-509"><xref:System.Collections.ArrayList> 허용 `null` 유효한 값으로 중복 요소를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-509"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="92764-510">하는 경우 새 <xref:System.Collections.ArrayList.Count%2A> (현재 <xref:System.Collections.ArrayList.Count%2A> 컬렉션의 크기를 더한) 보다 커야 <xref:System.Collections.ArrayList.Capacity%2A>의 용량을 <xref:System.Collections.ArrayList> 자동으로 새 요소를 수용 하기 위해 내부 배열을 다시 할당 하 여 증가 및 기존 요소는 새 요소가 추가 되기 전에 새 배열에 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-510">If the new <xref:System.Collections.ArrayList.Count%2A> (the current <xref:System.Collections.ArrayList.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="92764-511">하는 경우 `index` 값과 같음 <xref:System.Collections.ArrayList.Count%2A>, 요소 끝에 추가 됩니다 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-511">If `index` is equal to <xref:System.Collections.ArrayList.Count%2A>, the elements are added to the end of <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="92764-512">요소의 순서를 <xref:System.Collections.ICollection> 에 보존 되는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-512">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="92764-513">목록처럼 연속된 요소로 구성된 컬렉션에서는 삽입 지점 다음에 있는 요소를 아래로 이동하여 새 요소로 적용합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-513">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="92764-514">컬렉션에 인덱스가 지정된 경우 이동되는 요소의 인덱스도 업데이트됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-514">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="92764-515">요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화되어 있는 컬렉션에는 이러한 동작이 적용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-515">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="92764-516">이 메서드는 O (`n` + `m`) 작업을 여기서 `n` 요소를 추가할 수는 및 `m` 는 <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92764-516">This method is an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-517">다음 코드 예제에서는 요소를 삽입 하는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-517">The following code example shows how to insert elements into the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Insert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92764-518">
            <paramref name="c" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-518">
              <paramref name="c" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92764-519">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-519">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="92764-520">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-520">-or-</span>
          </span>
          <span data-ttu-id="92764-521">
            <paramref name="index" />가 <see cref="P:System.Collections.ArrayList.Count" />보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-521">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92764-522">
            <see cref="T:System.Collections.ArrayList" />이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-522">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="92764-523">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-523">-or-</span>
          </span>
          <span data-ttu-id="92764-524">
            <see cref="T:System.Collections.ArrayList" />가 고정 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-524">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.ArrayList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92764-525">
            <see cref="T:System.Collections.ArrayList" />의 크기가 고정되어 있는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-525">Gets a value indicating whether the <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92764-526">
            <see langword="true" />의 크기가 고정되어 있으면 <see cref="T:System.Collections.ArrayList" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-526">
              <see langword="true" /> if the <see cref="T:System.Collections.ArrayList" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="92764-527">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-527">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-528">크기가 고정된 컬렉션에서는 컬렉션을 만든 다음에 요소를 추가하거나 제거할 수 없지만 기존 요소는 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-528">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="92764-529">크기가 고정된 된 컬렉션은 요소; 추가 및 제거를 방지 하는 래퍼를 지정 된 컬렉션 따라서 기본 컬렉션 추가 또는 제거 요소를 포함 하 여 변경 된 경우 고정 크기 컬렉션에 해당 내용을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-529">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="92764-530">이 속성 값을 검색하는 것은 O(1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-530">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-531">다음 코드 예제에는 고정 크기 래퍼를 만드는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-531">The following code example shows how to create a fixed-size wrapper around an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.ArrayList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92764-532">
            <see cref="T:System.Collections.ArrayList" />가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-532">Gets a value indicating whether the <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92764-533">
            <see langword="true" />가 읽기 전용이면 <see cref="T:System.Collections.ArrayList" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-533">
              <see langword="true" /> if the <see cref="T:System.Collections.ArrayList" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="92764-534">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-534">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-535">읽기 전용 컬렉션에서는 컬렉션을 만든 다음에 요소를 추가, 제거 또는 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-535">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="92764-536">읽기 전용 컬렉션은 지정 된 컬렉션을 수정 하지 못하도록 하는 래퍼 컬렉션 따라서 기본 컬렉션이 변경 되 면 읽기 전용 컬렉션에 이러한 내용을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-536">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="92764-537">이 속성 값을 검색하는 것은 O(1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-537">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-538">다음 코드 예제에는 읽기 전용 래퍼를 만드는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList> 여부를 확인 하는 방법과 <xref:System.Collections.ArrayList> 읽기 전용인 경우.</span><span class="sxs-lookup"><span data-stu-id="92764-538">The following code example shows how to create a read-only wrapper around an <xref:System.Collections.ArrayList> and how to determine if an <xref:System.Collections.ArrayList> is read-only.</span></span>  
  
 [!code-cpp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.ArrayList.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92764-539">
            <see cref="T:System.Collections.ArrayList" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-539">Gets a value indicating whether access to the <see cref="T:System.Collections.ArrayList" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92764-540">
            <see langword="true" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 <see cref="T:System.Collections.ArrayList" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-540">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ArrayList" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="92764-541">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-541">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-542">스레드로부터 안전을 보장 하려면 합니다 <xref:System.Collections.ArrayList>에서 반환 되는 래퍼를 통해 모든 작업을 완료 해야 합니다 <xref:System.Collections.ArrayList.Synchronized%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="92764-542">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through the wrapper returned by the <xref:System.Collections.ArrayList.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="92764-543">컬렉션 전체를 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-543">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="92764-544">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-544">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="92764-545">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-545">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-546">다음 코드 예제에 사용 하 여 컬렉션을 잠그는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList.SyncRoot%2A> 열거 하는 중입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-546">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="92764-547">이 속성 값을 검색하는 것은 O(1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-547">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="92764-548">다음 코드 예제에는 동기화 하는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList>, 확인을 <xref:System.Collections.ArrayList> 동기화 되 고 동기화를 사용 하 여 <xref:System.Collections.ArrayList>입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-548">The following code example shows how to synchronize an <xref:System.Collections.ArrayList>, determine if an <xref:System.Collections.ArrayList> is synchronized and use a synchronized <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Collections.ArrayList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92764-549">가져오거나 설정할 요소의 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-549">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-550">지정한 인덱스에 있는 요소를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-550">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92764-551">지정한 인덱스의 요소입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-551">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-552">합니다 <xref:System.Collections.ArrayList.Item%2A> 반환을 <xref:System.Object>이므로를 조작 하기 위해 반환 된 값을 원래 형식으로 캐스팅 해야 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-552">The <xref:System.Collections.ArrayList.Item%2A> returns an <xref:System.Object>, so you may need to cast the returned value to the original type in order to manipulate it.</span></span> <span data-ttu-id="92764-553">것이 중요 한 사실은 <xref:System.Collections.ArrayList> 강력한 형식의 컬렉션이 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="92764-553">It is important to note that <xref:System.Collections.ArrayList> is not a strongly-typed collection.</span></span> <span data-ttu-id="92764-554">강력한 대안을 참조 하세요. <xref:System.Collections.Generic.List%601>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-554">For a strongly-typed alternative, see <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="92764-555"><xref:System.Collections.ArrayList> 허용 `null` 유효한 값으로 중복 요소를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-555"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="92764-556">이 속성은 `myCollection[index]` 구문을 사용하여 컬렉션의 특정 요소에 액세스하는 기능을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-556">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="92764-557">C# 언어 키워드를 사용 하 여 구현 하는 대신 인덱서를 정의 하는 <xref:System.Collections.ArrayList.Item%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-557">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ArrayList.Item%2A> property.</span></span> <span data-ttu-id="92764-558">Visual Basic에서는 동일한 인덱싱 기능을 제공하는 <xref:System.Collections.ArrayList.Item%2A>을 기본 속성으로 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-558">Visual Basic implements <xref:System.Collections.ArrayList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="92764-559">이 속성의 값을 검색 하는 것은 O(1) 작업; O(1) 작업 이기도 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-559">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-560">다음 코드 예제는 <xref:System.Collections.ArrayList> 여러 항목을 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-560">The following code example creates an <xref:System.Collections.ArrayList> and adds several items.</span></span> <span data-ttu-id="92764-561">예제에서는 사용 하 여 요소에 액세스 하는 <xref:System.Collections.ArrayList.Item%2A> 속성 (C# 인덱서) 및 새 값을 할당 하 여 요소를 변경를 <xref:System.Collections.ArrayList.Item%2A> 지정된 된 인덱스의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-561">The example demonstrates accessing elements with the <xref:System.Collections.ArrayList.Item%2A> property (the indexer in C#), and changing an element by assigning a new value to the <xref:System.Collections.ArrayList.Item%2A> property for a specified index.</span></span> <span data-ttu-id="92764-562">또한이 예제에서는는 <xref:System.Collections.ArrayList.Item%2A> 액세스 목록의 현재 크기가 외부 요소를 추가 하거나 속성을 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-562">The example also shows that the <xref:System.Collections.ArrayList.Item%2A> property cannot be used to access or add elements outside the current size of the list.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Item#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/cpp/source.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Item#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/CS/source.cs#1)]
 [!code-vb[System.Collections.ArrayList.Item#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/VB/source.vb#1)]  
  
 <span data-ttu-id="92764-563">다음 예제에서는 <xref:System.Collections.ArrayList.Item%2A> 속성 값 목록에서 항목을 할당을 명시적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-563">The following example uses the <xref:System.Collections.ArrayList.Item%2A> property explicitly to assign values to items in the list.</span></span> <span data-ttu-id="92764-564">이 예제에서는 상속 된 클래스 정의 <xref:System.Collections.ArrayList> 목록 항목을 암호화 하는 메서드를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-564">The example defines a class that inherits an <xref:System.Collections.ArrayList> and adds a method to scramble the list items.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Item#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/cpp/source2.cpp#2)]
 [!code-csharp[System.Collections.ArrayList.Item#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/CS/source2.cs#2)]
 [!code-vb[System.Collections.ArrayList.Item#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92764-565">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-565">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="92764-566">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-566">-or-</span>
          </span>
          <span data-ttu-id="92764-567">
            <paramref name="index" />가 <see cref="P:System.Collections.ArrayList.Count" />보다 크거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-567">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92764-568">
            <see cref="T:System.Collections.ArrayList" /> 또는 그 일부에서 마지막으로 나오는 값의 인덱스(0부터 시작)를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-568">Returns the zero-based index of the last occurrence of a value in the <see cref="T:System.Collections.ArrayList" /> or in a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : obj -&gt; int&#xA;override this.LastIndexOf : obj -&gt; int" Usage="arrayList.LastIndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="92764-569">
            <see cref="T:System.Object" />에서 찾을 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-569">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="92764-570">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-570">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-571">지정한 <see cref="T:System.Object" /> 검색하고, 전체 <see cref="T:System.Collections.ArrayList" /> 내에서 마지막으로 검색된 항목의 0부터 시작하는 인덱스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-571">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-572">전체 <see cref="T:System.Collections.ArrayList" />에 <paramref name="value" />이 있으면 마지막으로 검색한 개체의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-572">The zero-based index of the last occurrence of <paramref name="value" /> within the entire the <see cref="T:System.Collections.ArrayList" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-573"><xref:System.Collections.ArrayList> 뒤로 마지막 요소에서 시작 하 고 첫 번째 요소에서 끝나는 검색 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-573">The <xref:System.Collections.ArrayList> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="92764-574">이 메서드는; 선형 검색을 수행합니다. 따라서이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.ArrayList.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-574">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="92764-575">컬렉션의 개체를 사용 하 여이 메서드는.NET Framework 2.0 부터는 <xref:System.Object.Equals%2A> 하 고 <xref:System.IComparable.CompareTo%2A> 메서드를 `item` 항목이 있는지 여부를 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="92764-575">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="92764-576">.NET Framework의 이전 버전을 사용 하 여이 결정 했습니다 합니다 <xref:System.Object.Equals%2A> 및 <xref:System.IComparable.CompareTo%2A> 의 메서드는 `item` 컬렉션의 개체에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-576">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-577">다음 코드 예제에는 지정된 된 요소 중 마지막 요소의 인덱스를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="92764-577">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="92764-578">컬렉션에서 Culture를 구분하지 않는 문자열 작업 수행</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-578">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : obj * int -&gt; int&#xA;override this.LastIndexOf : obj * int -&gt; int" Usage="arrayList.LastIndexOf (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="92764-579">
            <see cref="T:System.Object" />에서 찾을 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-579">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="92764-580">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-580">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="92764-581">역방향 검색의 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-581">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-582">지정된 <see cref="T:System.Object" />를 검색하고, 첫 번째 요소부터 지정된 인덱스까지 확장되는 <see cref="T:System.Collections.ArrayList" />의 요소 범위에서 마지막으로 검색된 항목의 0부터 시작하는 인덱스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-582">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-583">첫 번째 요소부터 <paramref name="startIndex" />까지 확장하는 <see cref="T:System.Collections.ArrayList" />의 요소 범위에 <paramref name="value" />이 있으면 마지막으로 검색한 개체의 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-583">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-584">합니다 <xref:System.Collections.ArrayList> 뒤로 검색 됩니다에서 `startIndex` 첫 번째 요소에서 끝나는 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-584">The <xref:System.Collections.ArrayList> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="92764-585">이 메서드는; 선형 검색을 수행합니다. 따라서이 메서드는 O (`n`) 작업 위치 `n` 의 시작 부분에서 요소의 수를 <xref:System.Collections.ArrayList> 에 `startIndex`합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-585">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is the number of elements from the beginning of the <xref:System.Collections.ArrayList> to `startIndex`.</span></span>  
  
 <span data-ttu-id="92764-586">이 메서드를 호출 하 여 같은지 확인 <xref:System.Object.Equals%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-586">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="92764-587">컬렉션의 개체를 사용 하 여이 메서드는.NET Framework 2.0 부터는 <xref:System.Object.Equals%2A> 하 고 <xref:System.IComparable.CompareTo%2A> 메서드를 `item` 항목이 있는지 여부를 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="92764-587">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="92764-588">.NET Framework의 이전 버전을 사용 하 여이 결정 했습니다 합니다 <xref:System.Object.Equals%2A> 및 <xref:System.IComparable.CompareTo%2A> 의 메서드는 `item` 컬렉션의 개체에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-588">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-589">다음 코드 예제에는 지정된 된 요소 중 마지막 요소의 인덱스를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="92764-589">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92764-590">
            <paramref name="startIndex" />가 <see cref="T:System.Collections.ArrayList" />의 유효한 인덱스 범위를 벗어납니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-590">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="92764-591">컬렉션에서 Culture를 구분하지 않는 문자열 작업 수행</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-591">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : obj * int * int -&gt; int&#xA;override this.LastIndexOf : obj * int * int -&gt; int" Usage="arrayList.LastIndexOf (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="92764-592">
            <see cref="T:System.Object" />에서 찾을 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-592">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="92764-593">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-593">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="92764-594">역방향 검색의 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-594">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92764-595">검색할 섹션에 있는 요소 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-595">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-596">지정된 <see cref="T:System.Object" />를 검색하며, 지정된 수의 요소를 포함하고 지정된 인덱스에서 끝나는 <see cref="T:System.Collections.ArrayList" />의 요소 범위에서 마지막으로 검색되는 0부터 시작하는 인덱스를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-596">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-597">
            <paramref name="count" />개의 요소를 포함하고 <paramref name="startIndex" />에서 끝나는 <see cref="T:System.Collections.ArrayList" />의 요소 범위에 마지막으로 검색한 <paramref name="value" />의 인덱스(0부터 시작)이고, 검색되지 않으면 -1입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-597">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that contains <paramref name="count" /> number of elements and ends at <paramref name="startIndex" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-598"><xref:System.Collections.ArrayList> 검색에서 시작 됩니다 `startIndex` 에서 끝나는 `startIndex` 빼기 `count` + 1, 경우 `count` 0 보다 큽니다.</span><span class="sxs-lookup"><span data-stu-id="92764-598">The <xref:System.Collections.ArrayList> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="92764-599">이 메서드는; 선형 검색을 수행합니다. 따라서이 메서드는 O (`n`) 작업, 여기서 `n` 는 `count`합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-599">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="92764-600">이 메서드를 호출 하 여 같은지 확인 <xref:System.Object.Equals%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-600">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="92764-601">컬렉션의 개체를 사용 하 여이 메서드는.NET Framework 2.0 부터는 <xref:System.Object.Equals%2A> 하 고 <xref:System.IComparable.CompareTo%2A> 메서드를 `item` 항목이 있는지 여부를 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="92764-601">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="92764-602">.NET Framework의 이전 버전을 사용 하 여이 결정 했습니다 합니다 <xref:System.Object.Equals%2A> 및 <xref:System.IComparable.CompareTo%2A> 의 메서드는 `item` 컬렉션의 개체에 대 한 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-602">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-603">다음 코드 예제에는 지정된 된 요소 중 마지막 요소의 인덱스를 확인 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="92764-603">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span> <span data-ttu-id="92764-604">`LastIndexOf` 이전 버전과 검색 하므로 `count` 보다 작거나 같음 `startIndex` + 1입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-604">Note that `LastIndexOf` is a backward search; therefore, `count` must be less than or equal to `startIndex` + 1.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92764-605">
            <paramref name="startIndex" />가 <see cref="T:System.Collections.ArrayList" />의 유효한 인덱스 범위를 벗어납니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-605">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="92764-606">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-606">-or-</span>
          </span>
          <span data-ttu-id="92764-607">
            <paramref name="count" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-607">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="92764-608">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-608">-or-</span>
          </span>
          <span data-ttu-id="92764-609">
            <paramref name="startIndex" /> 및 <paramref name="count" />가 <see cref="T:System.Collections.ArrayList" />에서 올바른 섹션을 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-609">
              <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="92764-610">컬렉션에서 Culture를 구분하지 않는 문자열 작업 수행</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-610">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadOnly">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92764-611">읽기 전용인 목록 래퍼를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-611">Returns a list wrapper that is read-only.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList ReadOnly (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList ReadOnly(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ ReadOnly(System::Collections::ArrayList ^ list);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Collections.ArrayList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.ReadOnly list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="92764-612">래핑할 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-612">The <see cref="T:System.Collections.ArrayList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-613">읽기 전용 <see cref="T:System.Collections.ArrayList" /> 래퍼를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-613">Returns a read-only <see cref="T:System.Collections.ArrayList" /> wrapper.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-614">
            <paramref name="list" /> 주변의 읽기 전용 <see cref="T:System.Collections.ArrayList" /> 래퍼입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-614">A read-only <see cref="T:System.Collections.ArrayList" /> wrapper around <paramref name="list" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-615">수정 하지 못하게 하려면 `list`에 노출 `list` 이 래퍼를 사용할 때만 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-615">To prevent any modifications to `list`, expose `list` only through this wrapper.</span></span>  
  
 <span data-ttu-id="92764-616">읽기 전용 컬렉션은 컬렉션을 수정 하지 못하도록 하는 래퍼를 사용 하 여 컬렉션 하기만 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-616">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="92764-617">기본 컬렉션이 변경 되 면 읽기 전용 컬렉션을 해당 변경 내용을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-617">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="92764-618">이 방법은 O(1) 작업에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-618">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-619">다음 코드 예제에는 읽기 전용 래퍼를 만드는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList> 여부를 확인 하는 방법과 <xref:System.Collections.ArrayList> 읽기 전용인 경우.</span><span class="sxs-lookup"><span data-stu-id="92764-619">The following code example shows how to create a read-only wrapper around an <xref:System.Collections.ArrayList> and how to determine if an <xref:System.Collections.ArrayList> is read-only.</span></span>  
  
 [!code-cpp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92764-620">
            <paramref name="list" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-620">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Collections.IList ReadOnly (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList ReadOnly(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ ReadOnly(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Collections.IList -&gt; System.Collections.IList" Usage="System.Collections.ArrayList.ReadOnly list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="92764-621">래핑할 <see cref="T:System.Collections.IList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-621">The <see cref="T:System.Collections.IList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-622">읽기 전용 <see cref="T:System.Collections.IList" /> 래퍼를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-622">Returns a read-only <see cref="T:System.Collections.IList" /> wrapper.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-623">
            <paramref name="list" /> 주변의 읽기 전용 <see cref="T:System.Collections.IList" /> 래퍼입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-623">A read-only <see cref="T:System.Collections.IList" /> wrapper around <paramref name="list" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-624">수정 하지 못하게 하려면 `list`에 노출 `list` 이 래퍼를 사용할 때만 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-624">To prevent any modifications to `list`, expose `list` only through this wrapper.</span></span>  
  
 <span data-ttu-id="92764-625">읽기 전용 컬렉션은 컬렉션을 수정 하지 못하도록 하는 래퍼를 사용 하 여 컬렉션 하기만 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-625">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="92764-626">기본 컬렉션이 변경 되 면 읽기 전용 컬렉션을 해당 변경 내용을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-626">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="92764-627">이 방법은 O(1) 작업에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-627">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92764-628">
            <paramref name="list" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-628">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="arrayList.Remove obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="92764-629">
            <see cref="T:System.Object" />에서 제거할 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-629">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="92764-630">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-630">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-631">
            <see cref="T:System.Collections.ArrayList" />에서 맨 처음 발견되는 특정 개체를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-631">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-632">경우는 <xref:System.Collections.ArrayList> 지정된 된 개체를 포함 하지 않습니다는 <xref:System.Collections.ArrayList> 그대로 유지 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-632">If the <xref:System.Collections.ArrayList> does not contain the specified object, the <xref:System.Collections.ArrayList> remains unchanged.</span></span> <span data-ttu-id="92764-633">예외가 throw되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-633">No exception is thrown.</span></span>  
  
 <span data-ttu-id="92764-634">이 메서드는; 선형 검색을 수행합니다. 따라서이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.ArrayList.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-634">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="92764-635">이 메서드를 호출 하 여 같은지 확인 <xref:System.Object.Equals%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-635">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="92764-636">목록처럼 연속된 요소로 구성된 컬렉션에서는 제거된 요소 다음에 있는 요소를 위로 이동하여 빈 자리를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="92764-636">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="92764-637">컬렉션에 인덱스가 지정된 경우 이동되는 요소의 인덱스도 업데이트됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-637">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="92764-638">요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화되어 있는 컬렉션에는 이러한 동작이 적용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-638">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-639">다음 코드 예제에서 요소를 제거 하는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-639">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92764-640">
            <see cref="T:System.Collections.ArrayList" />이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-640">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="92764-641">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-641">-or-</span>
          </span>
          <span data-ttu-id="92764-642">
            <see cref="T:System.Collections.ArrayList" />가 고정 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-642">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="92764-643">컬렉션에서 Culture를 구분하지 않는 문자열 작업 수행</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-643">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="arrayList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92764-644">제거할 요소의 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-644">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-645">
            <see cref="T:System.Collections.ArrayList" />의 지정된 인덱스에 있는 요소를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-645">Removes the element at the specified index of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-646">컬렉션의 크기가 조정 되어 요소를 제거한 후의 값을 <xref:System.Collections.ArrayList.Count%2A> 속성은 1 씩 감소 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-646">After the element is removed, the size of the collection is adjusted and the value of the <xref:System.Collections.ArrayList.Count%2A> property is decreased by one.</span></span>  
  
 <span data-ttu-id="92764-647">목록처럼 연속된 요소로 구성된 컬렉션에서는 제거된 요소 다음에 있는 요소를 위로 이동하여 빈 자리를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="92764-647">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="92764-648">컬렉션에 인덱스가 지정된 경우 이동되는 요소의 인덱스도 업데이트됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-648">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="92764-649">요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화되어 있는 컬렉션에는 이러한 동작이 적용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-649">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="92764-650">이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.ArrayList.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-650">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-651">다음 코드 예제에서 요소를 제거 하는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-651">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92764-652">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-652">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="92764-653">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-653">-or-</span>
          </span>
          <span data-ttu-id="92764-654">
            <paramref name="index" />가 <see cref="P:System.Collections.ArrayList.Count" />보다 크거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-654">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92764-655">
            <see cref="T:System.Collections.ArrayList" />이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-655">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="92764-656">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-656">-or-</span>
          </span>
          <span data-ttu-id="92764-657">
            <see cref="T:System.Collections.ArrayList" />가 고정 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-657">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public virtual void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveRange(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member RemoveRange : int * int -&gt; unit&#xA;override this.RemoveRange : int * int -&gt; unit" Usage="arrayList.RemoveRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92764-658">제거할 요소의 범위에 대한 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-658">The zero-based starting index of the range of elements to remove.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92764-659">제거할 요소의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-659">The number of elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-660">
            <see cref="T:System.Collections.ArrayList" />에서 요소의 범위를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-660">Removes a range of elements from the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-661">목록처럼 연속된 요소로 구성된 컬렉션에서는 제거된 요소 다음에 있는 요소를 위로 이동하여 빈 자리를 채웁니다.</span><span class="sxs-lookup"><span data-stu-id="92764-661">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="92764-662">컬렉션에 인덱스가 지정된 경우 이동되는 요소의 인덱스도 업데이트됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-662">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="92764-663">요소가 해시 테이블 같은 버킷으로 개념적으로 그룹화되어 있는 컬렉션에는 이러한 동작이 적용되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-663">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="92764-664">이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.ArrayList.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-664">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-665">다음 코드 예제에서 요소를 제거 하는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-665">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92764-666">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-666">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="92764-667">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-667">-or-</span>
          </span>
          <span data-ttu-id="92764-668">
            <paramref name="count" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-668">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92764-669">
            <paramref name="index" /> 및 <paramref name="count" />가 <see cref="T:System.Collections.ArrayList" />에 있는 요소의 올바른 범위를 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-669">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92764-670">
            <see cref="T:System.Collections.ArrayList" />이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-670">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="92764-671">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-671">-or-</span>
          </span>
          <span data-ttu-id="92764-672">
            <see cref="T:System.Collections.ArrayList" />가 고정 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-672">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      </Docs>
    </Member>
    <Member MemberName="Repeat">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Repeat (object value, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Repeat(object value, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Repeat (value As Object, count As Integer) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Repeat(System::Object ^ value, int count);" />
      <MemberSignature Language="F#" Value="static member Repeat : obj * int -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.Repeat (value, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="92764-673">새 <see cref="T:System.Object" />에서 여러 번 복사할 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-673">The <see cref="T:System.Object" /> to copy multiple times in the new <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="92764-674">값은 <see langword="null" />이 될 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-674">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92764-675">
            <c>value</c>가 복사되어야 하는 횟수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-675">The number of times <c>value</c> should be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-676">요소가 지정된 값의 복사본인 <see cref="T:System.Collections.ArrayList" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-676">Returns an <see cref="T:System.Collections.ArrayList" /> whose elements are copies of the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-677">모두 <paramref name="count" />의 복사본에 해당하는 <paramref name="value" />의 요소 수를 포함하는 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-677">An <see cref="T:System.Collections.ArrayList" /> with <paramref name="count" /> number of elements, all of which are copies of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-678"><xref:System.Collections.ArrayList> 허용 `null` 유효한 값으로 중복 요소를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-678"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="92764-679">이 메서드는 O (`n`) 작업, 여기서 `n` 는 `count`합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-679">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-680">다음 코드 예제를 만들고 새 초기화 하는 방법을 보여 줍니다 <xref:System.Collections.ArrayList> 과 동일한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-680">The following code example shows how to create and initialize a new <xref:System.Collections.ArrayList> with the same value.</span></span>  
  
 [!code-cpp[Classic ArrayList.Repeat Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Repeat Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Repeat Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92764-681">
            <paramref name="count" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-681">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reverse">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92764-682">
            <see cref="T:System.Collections.ArrayList" /> 또는 그 일부에서 요소의 순서를 반대로 바꿉니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-682">Reverses the order of the elements in the <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public virtual void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reverse();" />
      <MemberSignature Language="F#" Value="abstract member Reverse : unit -&gt; unit&#xA;override this.Reverse : unit -&gt; unit" Usage="arrayList.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92764-683">전체 <see cref="T:System.Collections.ArrayList" />에서 요소의 순서를 반대로 바꿉니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-683">Reverses the order of the elements in the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-684">이 메서드는 <xref:System.Array.Reverse%2A?displayProperty=nameWithType> 되는 요소의 순서를 반대로 하려면 되도록 요소 <xref:System.Collections.ArrayList> [i] 여기서 i 범위 내 모든 인덱스는 이동할 <xref:System.Collections.ArrayList> [j] j가 인 `index`  +  `index`  +  `count` -i-1입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-684">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements, such that the element at <xref:System.Collections.ArrayList> [i], where i is any index within the range, moves to <xref:System.Collections.ArrayList> [j], where j equals `index` + `index` + `count` - i - 1.</span></span>  
  
 <span data-ttu-id="92764-685">이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.ArrayList.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-685">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-686">다음 코드 예제에 있는 값의 정렬 순서를 반대로 하는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-686">The following code example shows how to reverse the sort order of the values in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Reverse Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Reverse Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Reverse Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92764-687">
            <see cref="T:System.Collections.ArrayList" />이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-687">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public virtual void Reverse (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reverse(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reverse (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reverse(int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Reverse : int * int -&gt; unit&#xA;override this.Reverse : int * int -&gt; unit" Usage="arrayList.Reverse (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92764-688">순서를 반대로 바꿀 범위의 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-688">The zero-based starting index of the range to reverse.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92764-689">순서를 반대로 바꿀 범위의 요소 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-689">The number of elements in the range to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-690">지정된 범위에서 요소의 순서를 반대로 바꿉니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-690">Reverses the order of the elements in the specified range.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-691">이 메서드는 <xref:System.Array.Reverse%2A?displayProperty=nameWithType> 되는 요소의 순서를 반대로 하려면 되도록 요소 <xref:System.Collections.ArrayList> [i] 여기서 i 범위 내 모든 인덱스는 이동할 <xref:System.Collections.ArrayList> [j] j가 인 `index`  +  `index`  +  `count` -i-1입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-691">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements, such that the element at <xref:System.Collections.ArrayList> [i], where i is any index within the range, moves to <xref:System.Collections.ArrayList> [j], where j equals `index` + `index` + `count` - i - 1.</span></span>  
  
 <span data-ttu-id="92764-692">이 메서드는 O (`n`) 작업, 여기서 `n` 는 `count`합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-692">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-693">다음 코드 예제에서 요소의 범위에 있는 값의 정렬 순서를 반대로 하는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-693">The following code example shows how to reverse the sort order of the values in a range of elements in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92764-694">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-694">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="92764-695">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-695">-or-</span>
          </span>
          <span data-ttu-id="92764-696">
            <paramref name="count" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-696">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92764-697">
            <paramref name="index" /> 및 <paramref name="count" />가 <see cref="T:System.Collections.ArrayList" />에 있는 요소의 올바른 범위를 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-697">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92764-698">
            <see cref="T:System.Collections.ArrayList" />이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-698">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetRange">
      <MemberSignature Language="C#" Value="public virtual void SetRange (int index, System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRange(int32 index, class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetRange (index As Integer, c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetRange(int index, System::Collections::ICollection ^ c);" />
      <MemberSignature Language="F#" Value="abstract member SetRange : int * System.Collections.ICollection -&gt; unit&#xA;override this.SetRange : int * System.Collections.ICollection -&gt; unit" Usage="arrayList.SetRange (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92764-699">
            <c>c</c>의 요소 복사를 시작할 <see cref="T:System.Collections.ArrayList" /> 인덱스(0부터 시작)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-699">The zero-based <see cref="T:System.Collections.ArrayList" /> index at which to start copying the elements of <c>c</c>.</span>
          </span>
        </param>
        <param name="c">
          <span data-ttu-id="92764-700">
            <see cref="T:System.Collections.ICollection" />에 요소를 복사할 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-700">The <see cref="T:System.Collections.ICollection" /> whose elements to copy to the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="92764-701">컬렉션 자체가 <see langword="null" />일 수는 없지만 <see langword="null" />인 요소를 포함할 수는 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-701">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-702">
            <see cref="T:System.Collections.ArrayList" />의 요소 범위에 대해 컬렉션의 요소를 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-702">Copies the elements of a collection over a range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-703"><xref:System.Collections.ArrayList> 허용 `null` 유효한 값으로 중복 요소를 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-703"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="92764-704">요소의 순서를 <xref:System.Collections.ICollection> 에 보존 되는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-704">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="92764-705">이 메서드는 O (`n` + 1) 작업, 여기서 `n` 는 <xref:System.Collections.ArrayList.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-705">This method is an O(`n` + 1) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-706">다음 코드 예제에서 요소의 범위를 가져와 설정 하는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-706">The following code example shows how to set and get a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.SetRange Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.SetRange Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.SetRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92764-707">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-707">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="92764-708">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-708">-or-</span>
          </span>
          <span data-ttu-id="92764-709">
            <paramref name="index" />와 <paramref name="c" />의 요소 수를 더한 값이 <see cref="P:System.Collections.ArrayList.Count" />보다 큰 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-709">
              <paramref name="index" /> plus the number of elements in <paramref name="c" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92764-710">
            <paramref name="c" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-710">
              <paramref name="c" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92764-711">
            <see cref="T:System.Collections.ArrayList" />이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-711">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92764-712">
            <see cref="T:System.Collections.ArrayList" /> 또는 그 일부에 포함된 요소를 정렬합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-712">Sorts the elements in the <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort();" />
      <MemberSignature Language="F#" Value="abstract member Sort : unit -&gt; unit&#xA;override this.Sort : unit -&gt; unit" Usage="arrayList.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92764-713">전체 <see cref="T:System.Collections.ArrayList" />의 요소를 정렬합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-713">Sorts the elements in the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-714">이 메서드는 <xref:System.Array.Sort%2A?displayProperty=nameWithType>, 빠른 정렬 알고리즘을 사용 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-714">This method uses <xref:System.Array.Sort%2A?displayProperty=nameWithType>, which uses the QuickSort algorithm.</span></span> <span data-ttu-id="92764-715">빠른 정렬 알고리즘은 비교 (불안정 한 정렬을 라고도 함)는 "보다 작거나 같음"을 의미 하는 정렬 비교 연산을 결정 어떤 두 요소 값은 최종 정렬 된 목록에서 먼저 수행 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-715">The QuickSort algorithm is a comparison sort (also called an unstable sort), which means that a "less than or equal to" comparison operation determines which of two elements should occur first in the final sorted list.</span></span> <span data-ttu-id="92764-716">그러나 두 요소가 같은 경우 원래 순서 유지 되지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-716">However, if two elements are equal, their original order might not be preserved.</span></span> <span data-ttu-id="92764-717">반면, 안정 된 정렬 같지 않은 요소의 순서를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-717">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="92764-718">안정 된 정렬을 수행 하려면 사용자 지정 구현 해야 <xref:System.Collections.IComparer> 이 메서드의 다른 오버 로드를 사용 하는 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-718">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface to use with the other overloads of this method.</span></span>  
  
 <span data-ttu-id="92764-719">평균적으로이 메서드는 O (`n` 로그 `n`) 작업을 여기서 `n` 됩니다 <xref:System.Collections.ArrayList.Count%2A>최악의 경우에서는 o (`n`^2) 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-719">On average, this method is an O(`n` log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>; in the worst case it is an O(`n`^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-720">다음 코드 예제에서는 값을 정렬 하는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-720">The following code example shows how to sort the values in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Sort Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Sort Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Sort Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92764-721">
            <see cref="T:System.Collections.ArrayList" />이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-721">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="92764-722">컬렉션에서 Culture를 구분하지 않는 문자열 작업 수행</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-722">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Sort : System.Collections.IComparer -&gt; unit&#xA;override this.Sort : System.Collections.IComparer -&gt; unit" Usage="arrayList.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="92764-723">요소를 비교할 때 사용하는 <see cref="T:System.Collections.IComparer" /> 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-723">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="92764-724">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-724">-or-</span>
          </span>
          <span data-ttu-id="92764-725">각 요소의 <see cref="T:System.IComparable" /> 구현을 사용하기 위한 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-725">A null reference (<see langword="Nothing" /> in Visual Basic) to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-726">지정된 비교자를 사용하여 전체 <see cref="T:System.Collections.ArrayList" />에 있는 요소를 정렬합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-726">Sorts the elements in the entire <see cref="T:System.Collections.ArrayList" /> using the specified comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-727">사용 합니다 <xref:System.Collections.ArrayList.Sort%2A> 메서드를 구현 하는 사용자 지정 비교자를 사용 하 여 개체의 목록을 정렬 하는 <xref:System.Collections.IComparer> 인터페이스.</span><span class="sxs-lookup"><span data-stu-id="92764-727">Use the <xref:System.Collections.ArrayList.Sort%2A> method to  sort a list of objects with a custom comparer that implements the <xref:System.Collections.IComparer> interface.</span></span> <span data-ttu-id="92764-728">전달 하는 경우 `null` 에 대 한 `comparer`,이 메서드는 사용 된 <xref:System.IComparable> 각 요소의 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-728">If you pass `null` for `comparer`, this method uses the <xref:System.IComparable> implementation of each element.</span></span> <span data-ttu-id="92764-729">이 경우 목록에 포함 된 개체를 구현 하는지 확인 해야 합니다 <xref:System.Collections.IComparer> 인터페이스 또는 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-729">In this case, you must make sure that the objects contained in the list implement the <xref:System.Collections.IComparer> interface or an exception will occur.</span></span>  
  
 <span data-ttu-id="92764-730">또한를 사용 하는 <xref:System.IComparable> 구현 (불안정 한 정렬을 라고도 함)을 비교 정렬 수행 하는 목록 의미, 즉, 두 요소가 같은 경우 순서 수 유지 되지 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-730">In addition, using the <xref:System.IComparable> implementation means the list performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="92764-731">반면, 안정 된 정렬 같지 않은 요소의 순서를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-731">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="92764-732">안정 된 정렬을 수행 하려면 사용자 지정 구현 해야 <xref:System.Collections.IComparer> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-732">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface.</span></span>  
  
 <span data-ttu-id="92764-733">평균적으로이 메서드는 O (`n` 로그 `n`) 작업을 여기서 `n` 됩니다 <xref:System.Collections.ArrayList.Count%2A>최악의 경우에서는 o (`n`^2) 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-733">On average, this method is an O(`n` log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>; in the worst case it is an O(`n`^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-734">다음 코드 예제에서는 값을 정렬 하는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList> 역순으로 정렬 하는 사용자 지정 비교자와 기본 비교자를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-734">The following code example shows how to sort the values in an <xref:System.Collections.ArrayList> using the default comparer and a custom comparer that reverses the sort order.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CPP/arraylist_sort2.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CS/arraylist_sort2.cs#1)]
 [!code-vb[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/VB/arraylist_sort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92764-735">
            <see cref="T:System.Collections.ArrayList" />이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-735">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="92764-736">두 요소를 비교하는 동안 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-736">An error occurred while comparing two elements.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92764-737">
            <paramref name="comparer" />에 대해 <see langword="null" />이 전달되고 목록에 있는 요소가 <see cref="T:System.IComparable" />을 구현하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-737">
              <see langword="null" /> is passed for <paramref name="comparer" />, and the elements in the list do not implement <see cref="T:System.IComparable" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="92764-738">컬렉션에서 Culture를 구분하지 않는 문자열 작업 수행</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-738">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (int index, int count, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(int32 index, int32 count, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (index As Integer, count As Integer, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(int index, int count, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Sort : int * int * System.Collections.IComparer -&gt; unit&#xA;override this.Sort : int * int * System.Collections.IComparer -&gt; unit" Usage="arrayList.Sort (index, count, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="92764-739">정렬할 범위의 0부터 시작하는 인덱스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-739">The zero-based starting index of the range to sort.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="92764-740">정렬할 범위의 길이입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-740">The length of the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="92764-741">요소를 비교할 때 사용하는 <see cref="T:System.Collections.IComparer" /> 구현입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-741">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="92764-742">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-742">-or-</span>
          </span>
          <span data-ttu-id="92764-743">각 요소의 <see cref="T:System.IComparable" /> 구현을 사용하기 위한 null 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-743">A null reference (<see langword="Nothing" /> in Visual Basic) to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-744">지정된 비교자를 사용하여 <see cref="T:System.Collections.ArrayList" />의 요소 범위에 있는 요소를 정렬합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-744">Sorts the elements in a range of elements in <see cref="T:System.Collections.ArrayList" /> using the specified comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-745">하는 경우 `comparer` 로 설정 된 `null`,이 메서드가 수행 (불안정 한 정렬을 라고도 함)을 비교 정렬, 즉, 두 요소가 같은 경우 순서 수 유지 되지 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-745">If `comparer` is set to `null`, this method performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="92764-746">반면, 안정 된 정렬 같지 않은 요소의 순서를 유지 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-746">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="92764-747">안정 된 정렬을 수행 하려면 사용자 지정 구현 해야 <xref:System.Collections.IComparer> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-747">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface.</span></span>  
  
 <span data-ttu-id="92764-748">평균적으로이 메서드는 O (`n` 로그 `n`) 작업, 여기서 `n` 는 `count`최악의 경우에서 O(n^2) 작업이 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-748">On average, this method is an O(`n` log `n`) operation, where `n` is `count`; in the worst case it is an O(n^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-749">다음 코드 예제에서 요소의 범위에서 값을 정렬 하는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList> 역순으로 정렬 하는 사용자 지정 비교자와 기본 비교자를 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-749">The following code example shows how to sort the values in a range of elements in an <xref:System.Collections.ArrayList> using the default comparer and a custom comparer that reverses the sort order.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/CPP/arraylist_sort3.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/CS/arraylist_sort3.cs#1)]
 [!code-vb[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/VB/arraylist_sort3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="92764-750">
            <paramref name="index" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-750">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="92764-751">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-751">-or-</span>
          </span>
          <span data-ttu-id="92764-752">
            <paramref name="count" />가 0보다 작은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-752">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="92764-753">
            <paramref name="index" /> 및 <paramref name="count" />가 <see cref="T:System.Collections.ArrayList" />의 올바른 범위를 지정하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-753">
              <paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92764-754">
            <see cref="T:System.Collections.ArrayList" />이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-754">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="92764-755">두 요소를 비교하는 동안 오류가 발생했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-755">An error occurred while comparing two elements.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="92764-756">컬렉션에서 Culture를 구분하지 않는 문자열 작업 수행</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-756">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Synchronized">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92764-757">동기화되어 스레드로부터 안전하게 보호되는 목록 래퍼를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-757">Returns a list wrapper that is synchronized (thread safe).</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Synchronized (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Synchronized(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Synchronized(System::Collections::ArrayList ^ list);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.ArrayList -&gt; System.Collections.ArrayList" Usage="System.Collections.ArrayList.Synchronized list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="92764-758">동기화할 <see cref="T:System.Collections.ArrayList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-758">The <see cref="T:System.Collections.ArrayList" /> to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-759">동기화되어 스레드로부터 안전하게 보호되는 <see cref="T:System.Collections.ArrayList" /> 래퍼를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-759">Returns an <see cref="T:System.Collections.ArrayList" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-760">동기화되어 스레드로부터 안전하게 보호되는 <see cref="T:System.Collections.ArrayList" /> 래퍼입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-760">An <see cref="T:System.Collections.ArrayList" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-761">스레드로부터 안전을 보장 하려면를 <xref:System.Collections.ArrayList>을이 래퍼를 통해 모든 작업을 완료 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-761">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through this wrapper.</span></span>  
  
 <span data-ttu-id="92764-762">컬렉션 전체를 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-762">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="92764-763">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-763">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="92764-764">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-764">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-765">다음 코드 예제에 사용 하 여 컬렉션을 잠그는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList.SyncRoot%2A> 열거 하는 중입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-765">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="92764-766">이 방법은 O(1) 작업에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-766">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="92764-767">다음 코드 예제에는 동기화 하는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList>, 확인을 <xref:System.Collections.ArrayList> 동기화 되 고 동기화를 사용 하 여 <xref:System.Collections.ArrayList>입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-767">The following code example shows how to synchronize an <xref:System.Collections.ArrayList>, determine if an <xref:System.Collections.ArrayList> is synchronized and use a synchronized <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92764-768">
            <paramref name="list" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-768">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.IList Synchronized (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList Synchronized(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ Synchronized(System::Collections::IList ^ list);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.IList -&gt; System.Collections.IList" Usage="System.Collections.ArrayList.Synchronized list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="92764-769">동기화할 <see cref="T:System.Collections.IList" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-769">The <see cref="T:System.Collections.IList" /> to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-770">동기화되어 스레드로부터 안전하게 보호되는 <see cref="T:System.Collections.IList" /> 래퍼를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-770">Returns an <see cref="T:System.Collections.IList" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-771">동기화되어 스레드로부터 안전하게 보호되는 <see cref="T:System.Collections.IList" /> 래퍼입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-771">An <see cref="T:System.Collections.IList" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-772">스레드로부터 안전을 보장 하려면를 <xref:System.Collections.ArrayList>을이 래퍼를 통해 모든 작업을 완료 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-772">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through this wrapper.</span></span>  
  
 <span data-ttu-id="92764-773">컬렉션 전체를 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-773">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="92764-774">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-774">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="92764-775">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-775">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-776">다음 코드 예제에 사용 하 여 컬렉션을 잠그는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList.SyncRoot%2A> 열거 하는 중입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-776">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="92764-777">이 방법은 O(1) 작업에 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-777">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92764-778">
            <paramref name="list" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-778">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.ArrayList.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="92764-779">
            <see cref="T:System.Collections.ArrayList" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-779">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="92764-780">
            <see cref="T:System.Collections.ArrayList" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-780">An object that can be used to synchronize access to the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-781">동기화 된 버전을 만들려면 합니다 <xref:System.Collections.ArrayList>를 사용 하 여를 <xref:System.Collections.ArrayList.Synchronized%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="92764-781">To create a synchronized version of the <xref:System.Collections.ArrayList>, use the <xref:System.Collections.ArrayList.Synchronized%2A> method.</span></span> <span data-ttu-id="92764-782">하지만 파생된 클래스의 동기화 된 버전을 제공할 수 있습니다 합니다 <xref:System.Collections.ArrayList> 를 사용 하 여는 <xref:System.Collections.ArrayList.SyncRoot%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-782">However, derived classes can provide their own synchronized version of the <xref:System.Collections.ArrayList> using the <xref:System.Collections.ArrayList.SyncRoot%2A> property.</span></span> <span data-ttu-id="92764-783">동기화 하는 코드에서 작업을 수행 해야 합니다 <xref:System.Collections.ArrayList.SyncRoot%2A> 의 합니다 <xref:System.Collections.ArrayList>에서 직접는 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-783">The synchronizing code must perform operations on the <xref:System.Collections.ArrayList.SyncRoot%2A> of the <xref:System.Collections.ArrayList>, not directly on the <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="92764-784">이렇게 하면 다른 개체에서 파생되는 컬렉션에 대해 적절한 작업이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-784">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="92764-785">특히, 동시에 수정할 수 있는 다른 스레드와 적절 한 동기화를 유지 관리는 <xref:System.Collections.ArrayList> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-785">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.ArrayList> object.</span></span>  
  
 <span data-ttu-id="92764-786">컬렉션 전체를 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-786">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="92764-787">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-787">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="92764-788">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="92764-788">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-789">다음 코드 예제에 사용 하 여 컬렉션을 잠그는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList.SyncRoot%2A> 열거 하는 중입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-789">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="92764-790">이 속성 값을 검색하는 것은 O(1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-790">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
        <altmember cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToArray">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="92764-791">
            <see cref="T:System.Collections.ArrayList" />의 요소를 새 배열에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-791">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual object[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToArray () As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="abstract member ToArray : unit -&gt; obj[]&#xA;override this.ToArray : unit -&gt; obj[]" Usage="arrayList.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92764-792">
            <see cref="T:System.Collections.ArrayList" />의 요소를 새 <see cref="T:System.Object" /> 배열에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-792">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new <see cref="T:System.Object" /> array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-793">
            <see cref="T:System.Object" />의 요소 복사본을 포함하는 <see cref="T:System.Collections.ArrayList" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-793">An <see cref="T:System.Object" /> array containing copies of the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-794">사용 하 여 요소가 복사 되 <xref:System.Array.Copy%2A?displayProperty=nameWithType>, O는 (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92764-794">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual Array ToArray (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Array ToArray(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ToArray(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Array ^ ToArray(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member ToArray : Type -&gt; Array&#xA;override this.ToArray : Type -&gt; Array" Usage="arrayList.ToArray type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="92764-795">요소를 복사해 넣기 위해 새로 만들 대상 배열의 요소 <see cref="T:System.Type" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-795">The element <see cref="T:System.Type" /> of the destination array to create and copy elements to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="92764-796">
            <see cref="T:System.Collections.ArrayList" />의 요소를 지정된 요소 형식의 새 배열에 복사합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-796">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new array of the specified element type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="92764-797">
            <see cref="T:System.Collections.ArrayList" />의 요소 복사본을 포함하는 지정된 요소 형식의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-797">An array of the specified element type containing copies of the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-798">개체의 모든는 <xref:System.Collections.ArrayList> 개체를 캐스팅할 수는 <xref:System.Type> 에 지정 된는 `type` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-798">All of the objects in the <xref:System.Collections.ArrayList> object will be cast to the <xref:System.Type> specified in the `type` parameter.</span></span>  
  
 <span data-ttu-id="92764-799">사용 하 여 요소가 복사 되 <xref:System.Array.Copy%2A?displayProperty=nameWithType>, O는 (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="92764-799">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-800">다음의 요소를 복사 하는 방법을 보여 줍니다는 <xref:System.Collections.ArrayList> 문자열 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-800">The following copy example shows how to copy the elements of an <xref:System.Collections.ArrayList> to a string array.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.ToArray#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/CPP/arraylist_toarray.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.ToArray#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/CS/arraylist_toarray.cs#1)]
 [!code-vb[System.Collections.ArrayList.ToArray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/VB/arraylist_toarray.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="92764-801">
            <paramref name="type" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-801">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="92764-802">소스 <see cref="T:System.Collections.ArrayList" /> 형식을 지정된 형식으로 자동 캐스팅할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-802">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the specified type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public virtual void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimToSize();" />
      <MemberSignature Language="F#" Value="abstract member TrimToSize : unit -&gt; unit&#xA;override this.TrimToSize : unit -&gt; unit" Usage="arrayList.TrimToSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="92764-803">용량을 <see cref="T:System.Collections.ArrayList" />의 실제 요소 수로 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-803">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92764-804">이 메서드는 새 요소가 컬렉션에 추가 될 경우 컬렉션의 메모리 오버 헤드를 최소화할 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="92764-804">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span>  
  
 <span data-ttu-id="92764-805">다시 설정 하는 <xref:System.Collections.ArrayList> 초기 상태로 호출 합니다 <xref:System.Collections.ArrayList.Clear%2A> 메서드를 호출 하기 전에 <xref:System.Collections.ArrayList.TrimToSize%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-805">To reset a <xref:System.Collections.ArrayList> to its initial state, call the <xref:System.Collections.ArrayList.Clear%2A> method before calling <xref:System.Collections.ArrayList.TrimToSize%2A>.</span></span> <span data-ttu-id="92764-806">빈 트리밍 <xref:System.Collections.ArrayList> 의 용량을 설정 합니다 <xref:System.Collections.ArrayList> 기본 용량입니다.</span><span class="sxs-lookup"><span data-stu-id="92764-806">Trimming an empty <xref:System.Collections.ArrayList> sets the capacity of the <xref:System.Collections.ArrayList> to the default capacity.</span></span>  
  
 <span data-ttu-id="92764-807">이 메서드는 O (`n`) 작업, 여기서 `n` 는 <xref:System.Collections.ArrayList.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-807">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92764-808">다음 코드 예제를 사용 하지 않는 부분을 트리밍하는 방법을 보여 줍니다 합니다 <xref:System.Collections.ArrayList> 값의 선택을 취소 하는 방법과 <xref:System.Collections.ArrayList>합니다.</span><span class="sxs-lookup"><span data-stu-id="92764-808">The following code example shows how to trim the unused portions of the <xref:System.Collections.ArrayList> and how to clear the values of the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="92764-809">
            <see cref="T:System.Collections.ArrayList" />이 읽기 전용인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-809">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="92764-810">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-810">-or-</span>
          </span>
          <span data-ttu-id="92764-811">
            <see cref="T:System.Collections.ArrayList" />가 고정 크기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="92764-811">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.Clear" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
  </Members>
</Type>