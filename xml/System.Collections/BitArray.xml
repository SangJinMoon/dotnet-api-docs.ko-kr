<Type Name="BitArray" FullName="System.Collections.BitArray">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ffde1f48eb95a937a8428d1baaa03319c02844e2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36644264" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BitArray : ICloneable, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit BitArray extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.BitArray" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BitArray&#xA;Implements ICloneable, ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class BitArray sealed : ICloneable, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type BitArray = class&#xA;    interface ICollection&#xA;    interface ICloneable&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c68d2-101">Manages a compact array of bit values, which are represented as Booleans, where <see langword="true" /> indicates that the bit is on (1) and <see langword="false" /> indicates the bit is off (0).</span>
      <span class="sxs-lookup">
        <span data-stu-id="c68d2-101">Manages a compact array of bit values, which are represented as Booleans, where <see langword="true" /> indicates that the bit is on (1) and <see langword="false" /> indicates the bit is off (0).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-102"><xref:System.Collections.BitArray> 클래스는 컬렉션 클래스는 용량은 항상 개수와 동일 합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-102">The <xref:System.Collections.BitArray> class is a collection class in which the capacity is always the same as the count.</span></span> <span data-ttu-id="c68d2-103">요소에 추가 됩니다 한 <xref:System.Collections.BitArray> 늘려는 <xref:System.Collections.BitArray.Length%2A> 속성 요소는 감소 하 여 삭제는 <xref:System.Collections.BitArray.Length%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="c68d2-103">Elements are added to a <xref:System.Collections.BitArray> by increasing the <xref:System.Collections.BitArray.Length%2A> property; elements are deleted by decreasing the <xref:System.Collections.BitArray.Length%2A> property.</span></span> <span data-ttu-id="c68d2-104">크기는 <xref:System.Collections.BitArray> 의 끝을 지나서 인덱싱 않으면 클라이언트에 의해 제어 되는 <xref:System.Collections.BitArray> throw는 <xref:System.ArgumentException>합니다. <xref:System.Collections.BitArray> 여러 요소를 한 번에 같은 사용 하 여 필터를 수정할 수를 포함 하 여 다른 컬렉션에서 찾을 수 없는 메서드를 제공 하는 클래스 <xref:System.Collections.BitArray.And%2A>, <xref:System.Collections.BitArray.Or%2A>, <xref:System.Collections.BitArray.Xor%2A> , <xref:System.Collections.BitArray.Not%2A>, 및 <xref:System.Collections.BitArray.SetAll%2A>.</span><span class="sxs-lookup"><span data-stu-id="c68d2-104">The size of a <xref:System.Collections.BitArray> is controlled by the client; indexing past the end of the <xref:System.Collections.BitArray> throws an <xref:System.ArgumentException>.The <xref:System.Collections.BitArray> class provides methods that are not found in other collections, including those that allow multiple elements to be modified at once using a filter, such as <xref:System.Collections.BitArray.And%2A>, <xref:System.Collections.BitArray.Or%2A>, <xref:System.Collections.BitArray.Xor%2A> , <xref:System.Collections.BitArray.Not%2A>, and <xref:System.Collections.BitArray.SetAll%2A>.</span></span>  
  
 <span data-ttu-id="c68d2-105"><xref:System.Collections.Specialized.BitVector32> 클래스와 동일한 기능을 제공 하는 구조는 <xref:System.Collections.BitArray>, 하지만 속도가 합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-105">The <xref:System.Collections.Specialized.BitVector32> class is a structure that provides the same functionality as <xref:System.Collections.BitArray>, but with faster performance.</span></span> <span data-ttu-id="c68d2-106"><xref:System.Collections.Specialized.BitVector32> 따라서 반면 스택, 할당 및 값 형식이 때문에 속도가 빨라집니다 <xref:System.Collections.BitArray> 참조 형식이 고 따라서 힙에 할당 합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-106"><xref:System.Collections.Specialized.BitVector32> is faster because it is a value type and therefore allocated on the stack, whereas <xref:System.Collections.BitArray> is a reference type and, therefore, allocated on the heap.</span></span>  
  
 <span data-ttu-id="c68d2-107"><xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType> 32 비트 정확 하 게 저장할 수 있지만 <xref:System.Collections.BitArray> 다양 한 수의 비트를 저장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-107"><xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType> can store exactly 32 bits, whereas <xref:System.Collections.BitArray> can store a variable number of bits.</span></span> <span data-ttu-id="c68d2-108"><xref:System.Collections.Specialized.BitVector32> 비트 플래그와 되므로 노출 되는 데이터에 대 한 이상적인 사용자에 게 작은 정수를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-108"><xref:System.Collections.Specialized.BitVector32> stores both bit flags and small integers, thereby making it ideal for data that is not exposed to the user.</span></span> <span data-ttu-id="c68d2-109">그러나 필요한 비트 플래그의 수를 알 수 없는 변수는 변수, 또는 32 보다 큰 경우, 경우에 사용 <xref:System.Collections.BitArray> 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-109">However, if the number of required bit flags is unknown, is variable, or is greater than 32, use <xref:System.Collections.BitArray> instead.</span></span>  
  
 <span data-ttu-id="c68d2-110"><xref:System.Collections.BitArray> 에 <xref:System.Collections> 네임 스페이스 <xref:System.Collections.Specialized.BitVector32> 에 <xref:System.Collections.Specialized> 네임 스페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-110"><xref:System.Collections.BitArray> is in the <xref:System.Collections> namespace; <xref:System.Collections.Specialized.BitVector32> is in the <xref:System.Collections.Specialized> namespace.</span></span>  
  
 <span data-ttu-id="c68d2-111">이 컬렉션의 요소는 정수 인덱스를 사용 하 여 액세스할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-111">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="c68d2-112">이 컬렉션의 인덱스는 0부터 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-112">Indexes in this collection are zero-based.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c68d2-113">다음 코드 예제를 만들고 초기화 하는 방법을 보여 줍니다는 <xref:System.Collections.BitArray> 및 해당 값을 출력 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-113">The following code example shows how to create and initialize a <xref:System.Collections.BitArray> and how to print out its values.</span></span>  
  
 [!code-cpp[Classic BitArray Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="c68d2-114">공용 정적 (<see langword="Shared" /> Visual basic에서)이 형식의 멤버는 스레드로부터 안전 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c68d2-114">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="c68d2-115">인터페이스 멤버는 스레드로부터 안전하지 않습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c68d2-115">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="c68d2-116">이 구현에서는 동기화 된 제공 하지 않습니다 (스레드로부터 안전함) 래퍼에 대 한는 <see cref="T:System.Collections.BitArray" />합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c68d2-116">This implementation does not provide a synchronized (thread safe) wrapper for a <see cref="T:System.Collections.BitArray" />.</span>
      </span>
      <span data-ttu-id="c68d2-117">컬렉션 전체를 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c68d2-117">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="c68d2-118">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c68d2-118">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="c68d2-119">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c68d2-119">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.Specialized.BitVector32" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c68d2-120">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class whose capacity and initial values can be specified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-120">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class whose capacity and initial values can be specified.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (bool[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Boolean[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As Boolean())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(cli::array &lt;bool&gt; ^ values);" />
      <MemberSignature Language="F#" Value="new System.Collections.BitArray : bool[] -&gt; System.Collections.BitArray" Usage="new System.Collections.BitArray values" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="System.Boolean[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="c68d2-121">An array of Booleans to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-121">An array of Booleans to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c68d2-122">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that contains bit values copied from the specified array of Booleans.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-122">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that contains bit values copied from the specified array of Booleans.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-123">이 생성자는는 O (`n`) 작업, 여기서 `n` 에 있는 요소의 수는 `values`합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-123">This constructor is an O(`n`) operation, where `n` is the number of elements in `values`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c68d2-124">
            <paramref name="values" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-124">
              <paramref name="values" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="new System.Collections.BitArray : byte[] -&gt; System.Collections.BitArray" Usage="new System.Collections.BitArray bytes" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="c68d2-125">An array of bytes containing the values to copy, where each byte represents eight consecutive bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-125">An array of bytes containing the values to copy, where each byte represents eight consecutive bits.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c68d2-126">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that contains bit values copied from the specified array of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-126">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that contains bit values copied from the specified array of bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-127">두 번째 바이트 나타냅니다 8부터 15 비트를 배열의 첫 번째 바이트 비트 0-7 비트를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-127">The first byte in the array represents bits 0 through 7, the second byte represents bits 8 through 15, and so on.</span></span> <span data-ttu-id="c68d2-128">각 바이트의 최하위 비트 가장 낮은 인덱스 값을 나타내는: " `bytes` [0] & 1"를 나타내는 비트 0, " `bytes` [0] & 2"를 나타내는 비트 1, " `bytes` [0] & 비트 2 및 등을" 4"나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-128">The Least Significant Bit of each byte represents the lowest index value: " `bytes` [0] & 1" represents bit 0, " `bytes` [0] & 2" represents bit 1, " `bytes` [0] & 4" represents bit 2, and so on.</span></span>  
  
 <span data-ttu-id="c68d2-129">이 생성자는는 O (`n`) 작업, 여기서 `n` 에 있는 요소의 수는 `bytes`합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-129">This constructor is an O(`n`) operation, where `n` is the number of elements in `bytes`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c68d2-130">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-130">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c68d2-131">The length of <paramref name="bytes" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-131">The length of <paramref name="bytes" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (System.Collections.BitArray bits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.BitArray bits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Collections.BitArray)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bits As BitArray)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(System::Collections::BitArray ^ bits);" />
      <MemberSignature Language="F#" Value="new System.Collections.BitArray : System.Collections.BitArray -&gt; System.Collections.BitArray" Usage="new System.Collections.BitArray bits" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bits" Type="System.Collections.BitArray" />
      </Parameters>
      <Docs>
        <param name="bits">
          <span data-ttu-id="c68d2-132">The <see cref="T:System.Collections.BitArray" /> to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-132">The <see cref="T:System.Collections.BitArray" /> to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c68d2-133">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that contains bit values copied from the specified <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-133">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that contains bit values copied from the specified <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-134">이 생성자는는 O (`n`) 작업, 여기서 `n` 에 있는 요소의 수는 `bits`합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-134">This constructor is an O(`n`) operation, where `n` is the number of elements in `bits`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c68d2-135">
            <paramref name="bits" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-135">
              <paramref name="bits" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(int length);" />
      <MemberSignature Language="F#" Value="new System.Collections.BitArray : int -&gt; System.Collections.BitArray" Usage="new System.Collections.BitArray length" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">
          <span data-ttu-id="c68d2-136">The number of bit values in the new <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-136">The number of bit values in the new <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c68d2-137">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that can hold the specified number of bit values, which are initially set to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-137">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that can hold the specified number of bit values, which are initially set to <see langword="false" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-138">이 생성자는는 O (`n`) 작업, 여기서 `n` 은 `length`합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-138">This constructor is an O(`n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c68d2-139">
            <paramref name="length" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-139">
              <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (int[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(cli::array &lt;int&gt; ^ values);" />
      <MemberSignature Language="F#" Value="new System.Collections.BitArray : int[] -&gt; System.Collections.BitArray" Usage="new System.Collections.BitArray values" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="c68d2-140">An array of integers containing the values to copy, where each integer represents 32 consecutive bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-140">An array of integers containing the values to copy, where each integer represents 32 consecutive bits.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c68d2-141">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that contains bit values copied from the specified array of 32-bit integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-141">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that contains bit values copied from the specified array of 32-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-142">첫 번째 범위에서 번호 `values` 배열 요소 나타냅니다 비트 0-31, 32부터 63 비트 등에 배열의 두 번째 숫자를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-142">The number in the first `values` array element represents bits 0 through 31, the second number in the array represents bits 32 through 63, and so on.</span></span> <span data-ttu-id="c68d2-143">각 정수 최하위 비트 가장 낮은 인덱스 값을 나타내는: " `values` [0] & 1"를 나타내는 비트 0, " `values` [0] & 2"를 나타내는 비트 1, " `values` [0] & 비트 2 및 등을" 4"나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-143">The Least Significant Bit of each integer represents the lowest index value: " `values` [0] & 1" represents bit 0, " `values` [0] & 2" represents bit 1, " `values` [0] & 4" represents bit 2, and so on.</span></span>  
  
 <span data-ttu-id="c68d2-144">이 생성자는는 O (`n`) 작업, 여기서 `n` 에 있는 요소의 수는 `values`합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-144">This constructor is an O(`n`) operation, where `n` is the number of elements in `values`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c68d2-145">
            <paramref name="values" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-145">
              <paramref name="values" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c68d2-146">The length of <paramref name="values" /> is greater than <see cref="F:System.Int32.MaxValue" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-146">The length of <paramref name="values" /> is greater than <see cref="F:System.Int32.MaxValue" /></span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (int length, bool defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 length, bool defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (length As Integer, defaultValue As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(int length, bool defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Collections.BitArray : int * bool -&gt; System.Collections.BitArray" Usage="new System.Collections.BitArray (length, defaultValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="defaultValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="length">
          <span data-ttu-id="c68d2-147">The number of bit values in the new <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-147">The number of bit values in the new <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </param>
        <param name="defaultValue">
          <span data-ttu-id="c68d2-148">The Boolean value to assign to each bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-148">The Boolean value to assign to each bit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c68d2-149">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that can hold the specified number of bit values, which are initially set to the specified value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-149">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that can hold the specified number of bit values, which are initially set to the specified value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-150">이 생성자는는 O (`n`) 작업, 여기서 `n` 은 `length`합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-150">This constructor is an O(`n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c68d2-151">
            <paramref name="length" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-151">
              <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray And (System.Collections.BitArray value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray And(class System.Collections.BitArray value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.And(System.Collections.BitArray)" />
      <MemberSignature Language="VB.NET" Value="Public Function And (value As BitArray) As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ And(System::Collections::BitArray ^ value);" />
      <MemberSignature Language="F#" Value="member this.And : System.Collections.BitArray -&gt; System.Collections.BitArray" Usage="bitArray.And value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.BitArray" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c68d2-152">The array with which to perform the bitwise AND operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-152">The array with which to perform the bitwise AND operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c68d2-153">Performs the bitwise AND operation between the elements of the current <see cref="T:System.Collections.BitArray" /> object and the corresponding elements in the specified array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-153">Performs the bitwise AND operation between the elements of the current <see cref="T:System.Collections.BitArray" /> object and the corresponding elements in the specified array.</span>
          </span>
          <span data-ttu-id="c68d2-154">The current <see cref="T:System.Collections.BitArray" /> object will be modified to store the result of the bitwise AND operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-154">The current <see cref="T:System.Collections.BitArray" /> object will be modified to store the result of the bitwise AND operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c68d2-155">An array containing the result of the bitwise AND operation, which is a reference to the current <see cref="T:System.Collections.BitArray" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-155">An array containing the result of the bitwise AND operation, which is a reference to the current <see cref="T:System.Collections.BitArray" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-156">비트 AND 연산을 반환 `true` 피연산자가 모두 경우 `true`, 반환 `false` 하나 또는 두 피연산자가 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-156">The bitwise AND operation returns `true` if both operands are `true`, and returns `false` if one or both operands are `false`.</span></span>  
  
 <span data-ttu-id="c68d2-157">이 메서드는 O는 (`n`) 작업, 여기서 `n` 은 <xref:System.Collections.BitArray.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-157">This method is an O(`n`) operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c68d2-158">다음 코드 예제에서는 두 비트 AND 연산을 수행 하는 방법을 보여 줍니다. <xref:System.Collections.BitArray> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-158">The following code example shows how to perform the bitwise AND operation between two <xref:System.Collections.BitArray> objects.</span></span>  
  
 [!code-cpp[Classic BitArray.And Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.And Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.And Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.And Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.And Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.And Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c68d2-159">
            <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-159">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c68d2-160">
            <paramref name="value" /> and the current <see cref="T:System.Collections.BitArray" /> do not have the same number of elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-160">
              <paramref name="value" /> and the current <see cref="T:System.Collections.BitArray" /> do not have the same number of elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="bitArray.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c68d2-161">Creates a shallow copy of the <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-161">Creates a shallow copy of the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c68d2-162">A shallow copy of the <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-162">A shallow copy of the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-163">컬렉션의 단순 복사본은 참조 형식 또는 값 형식 참조에서 참조 하는 개체를 복사 하지 않습니다 여부는 컬렉션의 요소에만 복사 합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-163">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="c68d2-164">새 컬렉션에 대 한 참조는 원본 컬렉션에 대 한 참조를 가리키는 동일한 개체를 가리킵니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-164">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="c68d2-165">반면, 요소를 복사 하는 컬렉션의 전체 복사본 및 뿐만 아니라 해당 요소에서 직접 또는 간접적으로 참조 하는 모든 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-165">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="c68d2-166">이 메서드는 O는 (`n`) 작업, 여기서 `n` 은 <xref:System.Collections.BitArray.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-166">This method is an O(`n`) operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="bitArray.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="c68d2-167">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-167">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.BitArray" />.</span>
          </span>
          <span data-ttu-id="c68d2-168">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-168">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c68d2-169">The zero-based index in <c>array</c> at which copying begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-169">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c68d2-170">Copies the entire <see cref="T:System.Collections.BitArray" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-170">Copies the entire <see cref="T:System.Collections.BitArray" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-171">지정된 된 배열의 호환 되는 형식 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-171">The specified array must be of a compatible type.</span></span> <span data-ttu-id="c68d2-172">만 `bool`, `int`, 및 `byte` 형식의 배열만 지원 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-172">Only `bool`, `int`, and `byte` types of arrays are supported.</span></span>  
  
 <span data-ttu-id="c68d2-173">이 방법은 사용 하 여 <xref:System.Array.Copy%2A?displayProperty=nameWithType> 요소를 복사해올 합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-173">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="c68d2-174">이 메서드는 O는 (`n`) 작업, 여기서 `n` 은 <xref:System.Collections.BitArray.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-174">This method is an O(`n`) operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c68d2-175">다음 코드 예제를 복사 하는 방법을 보여 줍니다는 <xref:System.Collections.BitArray> 로 <xref:System.Array>합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-175">The following code example shows how to copy a <xref:System.Collections.BitArray> into a one-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic BitArray.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c68d2-176">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-176">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c68d2-177">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-177">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c68d2-178">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-178">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="c68d2-179">-or-  The number of elements in the source <see cref="T:System.Collections.BitArray" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-179">-or-  The number of elements in the source <see cref="T:System.Collections.BitArray" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="c68d2-180">The type of the source <see cref="T:System.Collections.BitArray" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-180">The type of the source <see cref="T:System.Collections.BitArray" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.BitArray.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c68d2-181">Gets the number of elements contained in the <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-181">Gets the number of elements contained in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c68d2-182">
            <see cref="T:System.Collections.BitArray" />에 포함된 요소의 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-182">The number of elements contained in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-183"><xref:System.Collections.BitArray.Length%2A> 및 <xref:System.Collections.BitArray.Count%2A> 동일한 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-183"><xref:System.Collections.BitArray.Length%2A> and <xref:System.Collections.BitArray.Count%2A> return the same value.</span></span> <span data-ttu-id="c68d2-184"><xref:System.Collections.BitArray.Length%2A> 특정 값으로 설정할 수 있지만 <xref:System.Collections.BitArray.Count%2A> 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-184"><xref:System.Collections.BitArray.Length%2A> can be set to a specific value, but <xref:System.Collections.BitArray.Count%2A> is read-only.</span></span>  
  
 <span data-ttu-id="c68d2-185">이 속성 값을 검색하는 것은 O(1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-185">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public bool Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Get(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Get(int index);" />
      <MemberSignature Language="F#" Value="member this.Get : int -&gt; bool" Usage="bitArray.Get index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="c68d2-186">The zero-based index of the value to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-186">The zero-based index of the value to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c68d2-187">Gets the value of the bit at a specific position in the <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-187">Gets the value of the bit at a specific position in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c68d2-188">The value of the bit at position <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-188">The value of the bit at position <paramref name="index" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-189">이 메서드는 o (1) 작업.</span><span class="sxs-lookup"><span data-stu-id="c68d2-189">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c68d2-190">다음 코드 예제에는 설정 하 고 특정 요소를 가져오는 방법을 보여 줍니다는 <xref:System.Collections.BitArray>합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-190">The following code example shows how to set and get specific elements in a <xref:System.Collections.BitArray>.</span></span>  
  
 [!code-cpp[Classic BitArray.Get Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Get Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c68d2-191">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-191">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c68d2-192">-or-  <paramref name="index" /> is greater than or equal to the number of elements in the <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-192">-or-  <paramref name="index" /> is greater than or equal to the number of elements in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="bitArray.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c68d2-193">Returns an enumerator that iterates through the <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-193">Returns an enumerator that iterates through the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c68d2-194">An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-194">An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-195">@FSHO1@C# 언어의 `foreach` 문(Visual Basic의 경우 `for each`)은 열거자의 복잡성을 숨깁니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-195">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="c68d2-196">그러므로 열거자를 직접 조작하는 대신 `foreach`를 사용하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-196">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="c68d2-197">열거자를 사용하여 컬렉션의 데이터를 읽을 수는 있지만 내부 컬렉션을 수정할 수는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-197">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="c68d2-198">처음에 열거자는 컬렉션의 첫 번째 요소 앞에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-198">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="c68d2-199"><xref:System.Collections.IEnumerator.Reset%2A>을 실행하면 열거자가 이 위치로 복원됩니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-199"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="c68d2-200">이 위치에서 <xref:System.Collections.IEnumerator.Current%2A>는 정의되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-200">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="c68d2-201">따라서 <xref:System.Collections.IEnumerator.MoveNext%2A>의 값을 읽기 전에 <xref:System.Collections.IEnumerator.Current%2A>를 호출하여 열거자를 해당 컬렉션의 첫 번째 요소로 보내야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-201">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="c68d2-202"><xref:System.Collections.IEnumerator.Current%2A>에서는 <xref:System.Collections.IEnumerator.MoveNext%2A> 또는 <xref:System.Collections.IEnumerator.Reset%2A>이 호출될 때까지 동일한 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-202"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="c68d2-203"><xref:System.Collections.IEnumerator.MoveNext%2A>는 <xref:System.Collections.IEnumerator.Current%2A>를 다음 요소로 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-203"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="c68d2-204">경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 전달 컬렉션의 마지막 요소 뒤에 열거자는 컬렉션의 끝에 배치 되 고 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-204">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="c68d2-205">열거자가 있는 경우이 위치에 대 한 후속 호출에서 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환할 수도 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-205">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="c68d2-206">마지막으로 호출 하는 경우 <xref:System.Collections.IEnumerator.MoveNext%2A> 반환 `false`, <xref:System.Collections.IEnumerator.Current%2A> 정의 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-206">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="c68d2-207"><xref:System.Collections.IEnumerator.Current%2A>를 컬렉션의 첫째 요소에 다시 설정하려면 <xref:System.Collections.IEnumerator.Reset%2A>을 호출한 뒤 <xref:System.Collections.IEnumerator.MoveNext%2A>를 호출해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-207">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="c68d2-208">열거자는 컬렉션이 변경되지 않은 상태로 유지되는 한 유효한 상태를 유지합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-208">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="c68d2-209">컬렉션에 대해 변경 내용을 수행하면(예: 요소 추가, 수정 또는 삭제) 열거자는 복구 불가능하게 무효화되고 해당 동작은 정의되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-209">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="c68d2-210">열거자는 컬렉션에 배타적으로 액세스하지 못하므로 컬렉션을 열거하는 것은 본질적으로 스레드로부터 안전한 프로시저가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-210">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="c68d2-211">열거 동안 스레드 보안을 보장하려면 전체 열거 동안 컬렉션을 잠그면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-211">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="c68d2-212">여러 스레드에서 컬렉션에 액세스하여 읽고 쓸 수 있도록 허용하려면 사용자 지정 동기화를 구현해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-212">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="c68d2-213">이 메서드는 o (1) 작업.</span><span class="sxs-lookup"><span data-stu-id="c68d2-213">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.BitArray.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c68d2-214">Gets a value indicating whether the <see cref="T:System.Collections.BitArray" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-214">Gets a value indicating whether the <see cref="T:System.Collections.BitArray" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c68d2-215">이 속성은 항상 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-215">This property is always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-216"><xref:System.Collections.BitArray> 구현 하는 <xref:System.Collections.BitArray.IsReadOnly%2A> 속성에 필요 하기 때문에 <xref:System.Collections.IList?displayProperty=nameWithType> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-216"><xref:System.Collections.BitArray> implements the <xref:System.Collections.BitArray.IsReadOnly%2A> property because it is required by the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="c68d2-217">읽기 전용 컬렉션에서는 컬렉션을 만든 다음에 요소를 추가, 제거 또는 수정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-217">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="c68d2-218">읽기 전용 컬렉션은 지정 된 컬렉션을 수정 하지 못하도록 하는 래퍼 컬렉션 따라서 기본 컬렉션이 변경 될 경우 읽기 전용 컬렉션 해당 변경 내용을 반영 합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-218">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="c68d2-219">이 메서드는 o (1) 작업.</span><span class="sxs-lookup"><span data-stu-id="c68d2-219">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.BitArray.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c68d2-220">Gets a value indicating whether access to the <see cref="T:System.Collections.BitArray" /> is synchronized (thread safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-220">Gets a value indicating whether access to the <see cref="T:System.Collections.BitArray" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c68d2-221">이 속성은 항상 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-221">This property is always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-222"><xref:System.Collections.BitArray> 구현 하는 <xref:System.Collections.BitArray.IsSynchronized%2A> 속성에 필요 하기 때문에 <xref:System.Collections.ICollection?displayProperty=nameWithType> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-222"><xref:System.Collections.BitArray> implements the <xref:System.Collections.BitArray.IsSynchronized%2A> property because it is required by the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="c68d2-223">컬렉션 전체를 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-223">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="c68d2-224">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-224">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="c68d2-225">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-225">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c68d2-226">다음 코드 예제에 사용 하 여 컬렉션을 잠그는 방법을 보여 줍니다는 <xref:System.Collections.BitArray.SyncRoot%2A> 열거 하는 중입니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-226">The following code example shows how to lock the collection using the <xref:System.Collections.BitArray.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic BitArray Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic BitArray Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray Example/CS/source2.cs#2)]
 [!code-vb[Classic BitArray Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="c68d2-227">이 메서드는 o (1) 작업.</span><span class="sxs-lookup"><span data-stu-id="c68d2-227">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.BitArray.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public bool this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool default[int] { bool get(int index); void set(int index, bool value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : bool with get, set" Usage="System.Collections.BitArray.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="c68d2-228">The zero-based index of the value to get or set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-228">The zero-based index of the value to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c68d2-229">Gets or sets the value of the bit at a specific position in the <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-229">Gets or sets the value of the bit at a specific position in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c68d2-230">위치의 비트 값 <paramref name="index" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-230">The value of the bit at position <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-231">이 속성은 `myCollection[index]` 구문을 사용하여 컬렉션의 특정 요소에 액세스하는 기능을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-231">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="c68d2-232">C# 언어의 키워드를 사용 하 여 구현 하는 대신 인덱서를 정의 하는 <xref:System.Collections.BitArray.Item%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-232">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.BitArray.Item%2A> property.</span></span> <span data-ttu-id="c68d2-233">Visual Basic에서는 동일한 인덱싱 기능을 제공하는 <xref:System.Collections.BitArray.Item%2A>을 기본 속성으로 구현합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-233">Visual Basic implements <xref:System.Collections.BitArray.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="c68d2-234">이 속성의 값을 검색 하 하는 것은 o (1) 연산입니다. o (1) 작업 이기도 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-234">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c68d2-235">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-235">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c68d2-236">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.BitArray.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-236">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.BitArray.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.BitArray.Count" />
      </Docs>
    </Member>
    <Member MemberName="LeftShift">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray LeftShift (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray LeftShift(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.LeftShift(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LeftShift (count As Integer) As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ LeftShift(int count);" />
      <MemberSignature Language="F#" Value="member this.LeftShift : int -&gt; System.Collections.BitArray" Usage="bitArray.LeftShift count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Length : int with get, set" Usage="System.Collections.BitArray.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c68d2-237">Gets or sets the number of elements in the <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-237">Gets or sets the number of elements in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c68d2-238">
            <see cref="T:System.Collections.BitArray" />의 요소 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-238">The number of elements in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-239"><xref:System.Collections.BitArray.Length%2A> 및 <xref:System.Collections.BitArray.Count%2A> 동일한 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-239"><xref:System.Collections.BitArray.Length%2A> and <xref:System.Collections.BitArray.Count%2A> return the same value.</span></span> <span data-ttu-id="c68d2-240"><xref:System.Collections.BitArray.Length%2A> 특정 값으로 설정할 수 있지만 <xref:System.Collections.BitArray.Count%2A> 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-240"><xref:System.Collections.BitArray.Length%2A> can be set to a specific value, but <xref:System.Collections.BitArray.Count%2A> is read-only.</span></span>  
  
 <span data-ttu-id="c68d2-241">경우 <xref:System.Collections.BitArray.Length%2A> 를 값으로 설정 되어 보다 작은 <xref:System.Collections.BitArray.Count%2A>, <xref:System.Collections.BitArray> 잘립니다 및 인덱스 뒤에 있는 요소 `value` -1에서 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-241">If <xref:System.Collections.BitArray.Length%2A> is set to a value that is less than <xref:System.Collections.BitArray.Count%2A>, the <xref:System.Collections.BitArray> is truncated and the elements after the index `value` -1 are deleted.</span></span>  
  
 <span data-ttu-id="c68d2-242">경우 <xref:System.Collections.BitArray.Length%2A> 보다 큰 값으로 설정 되어 <xref:System.Collections.BitArray.Count%2A>, 새 요소가로 설정 되어 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-242">If <xref:System.Collections.BitArray.Length%2A> is set to a value that is greater than <xref:System.Collections.BitArray.Count%2A>, the new elements are set to `false`.</span></span>  
  
 <span data-ttu-id="c68d2-243">이 속성 값을 검색하는 것은 O(1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-243">Retrieving the value of this property is an O(1) operation.</span></span> <span data-ttu-id="c68d2-244">이 속성을 설정 하는 O (`n`) 작업입니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-244">Setting this property is an O(`n`) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c68d2-245">The property is set to a value that is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-245">The property is set to a value that is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray Not ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray Not() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Not" />
      <MemberSignature Language="VB.NET" Value="Public Function Not () As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ Not();" />
      <MemberSignature Language="F#" Value="member this.Not : unit -&gt; System.Collections.BitArray" Usage="bitArray.Not " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c68d2-246">Inverts all the bit values in the current <see cref="T:System.Collections.BitArray" />, so that elements set to <see langword="true" /> are changed to <see langword="false" />, and elements set to <see langword="false" /> are changed to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-246">Inverts all the bit values in the current <see cref="T:System.Collections.BitArray" />, so that elements set to <see langword="true" /> are changed to <see langword="false" />, and elements set to <see langword="false" /> are changed to <see langword="true" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c68d2-247">The current instance with inverted bit values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-247">The current instance with inverted bit values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-248">이 메서드는 O는 (`n`) 작업, 여기서 `n` 은 <xref:System.Collections.BitArray.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-248">This method is an O(`n`) operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c68d2-249">다음 코드 예제에 적용 하는 방법을 보여 줍니다는 <xref:System.Collections.BitArray>합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-249">The following code example shows how to apply NOT to a <xref:System.Collections.BitArray>.</span></span>  
  
 [!code-cpp[Classic BitArray.Not Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Not Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Not Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Not Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Not Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Not Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray Or (System.Collections.BitArray value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray Or(class System.Collections.BitArray value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Or(System.Collections.BitArray)" />
      <MemberSignature Language="VB.NET" Value="Public Function Or (value As BitArray) As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ Or(System::Collections::BitArray ^ value);" />
      <MemberSignature Language="F#" Value="member this.Or : System.Collections.BitArray -&gt; System.Collections.BitArray" Usage="bitArray.Or value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.BitArray" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c68d2-250">The array with which to perform the bitwise OR operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-250">The array with which to perform the bitwise OR operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c68d2-251">Performs the bitwise OR operation between the elements of the current <see cref="T:System.Collections.BitArray" /> object and the corresponding elements in the specified array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-251">Performs the bitwise OR operation between the elements of the current <see cref="T:System.Collections.BitArray" /> object and the corresponding elements in the specified array.</span>
          </span>
          <span data-ttu-id="c68d2-252">The current <see cref="T:System.Collections.BitArray" /> object will be modified to store the result of the bitwise OR operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-252">The current <see cref="T:System.Collections.BitArray" /> object will be modified to store the result of the bitwise OR operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c68d2-253">An array containing the result of the bitwise OR operation, which is a reference to the current <see cref="T:System.Collections.BitArray" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-253">An array containing the result of the bitwise OR operation, which is a reference to the current <see cref="T:System.Collections.BitArray" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-254">비트 OR 연산의 반환 `true` 하나 또는 두 피연산자가 `true`, 반환 `false` 피연산자가 모두 경우 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-254">The bitwise OR operation returns `true` if one or both operands are `true`, and returns `false` if both operands are `false`.</span></span>  
  
 <span data-ttu-id="c68d2-255">이 메서드는 O는 (`n`) 작업, 여기서 `n` 은 <xref:System.Collections.BitArray.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-255">This method is an O(`n`) operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c68d2-256">다음 코드 예제에서는 두 OR 연산을 수행 하는 방법을 보여 줍니다. <xref:System.Collections.BitArray> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-256">The following code example shows how to perform the OR operation between two <xref:System.Collections.BitArray> objects.</span></span>  
  
 [!code-cpp[Classic BitArray.Or Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Or Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Or Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Or Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Or Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Or Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c68d2-257">
            <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-257">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c68d2-258">
            <paramref name="value" /> and the current <see cref="T:System.Collections.BitArray" /> do not have the same number of elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-258">
              <paramref name="value" /> and the current <see cref="T:System.Collections.BitArray" /> do not have the same number of elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RightShift">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray RightShift (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray RightShift(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.RightShift(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RightShift (count As Integer) As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ RightShift(int count);" />
      <MemberSignature Language="F#" Value="member this.RightShift : int -&gt; System.Collections.BitArray" Usage="bitArray.RightShift count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (int index, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(int32 index, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (index As Integer, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Set(int index, bool value);" />
      <MemberSignature Language="F#" Value="member this.Set : int * bool -&gt; unit" Usage="bitArray.Set (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="c68d2-259">The zero-based index of the bit to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-259">The zero-based index of the bit to set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c68d2-260">The Boolean value to assign to the bit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-260">The Boolean value to assign to the bit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c68d2-261">Sets the bit at a specific position in the <see cref="T:System.Collections.BitArray" /> to the specified value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-261">Sets the bit at a specific position in the <see cref="T:System.Collections.BitArray" /> to the specified value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-262">이 메서드는 o (1) 작업.</span><span class="sxs-lookup"><span data-stu-id="c68d2-262">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c68d2-263">다음 코드 예제에는 설정 하 고 특정 요소를 가져오는 방법을 보여 줍니다는 <xref:System.Collections.BitArray>합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-263">The following code example shows how to set and get specific elements in a <xref:System.Collections.BitArray>.</span></span>  
  
 [!code-cpp[Classic BitArray.Get Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Get Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c68d2-264">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-264">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="c68d2-265">-or-  <paramref name="index" /> is greater than or equal to the number of elements in the <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-265">-or-  <paramref name="index" /> is greater than or equal to the number of elements in the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAll">
      <MemberSignature Language="C#" Value="public void SetAll (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAll(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.SetAll(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAll (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAll(bool value);" />
      <MemberSignature Language="F#" Value="member this.SetAll : bool -&gt; unit" Usage="bitArray.SetAll value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c68d2-266">The Boolean value to assign to all bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-266">The Boolean value to assign to all bits.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c68d2-267">Sets all bits in the <see cref="T:System.Collections.BitArray" /> to the specified value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-267">Sets all bits in the <see cref="T:System.Collections.BitArray" /> to the specified value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-268">이 메서드는 O는 (`n`) 작업, 여기서 `n` 은 <xref:System.Collections.BitArray.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-268">This method is an O(`n`) operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c68d2-269">다음 코드 예제에는 설정 하 고 특정 요소를 가져오는 방법을 보여 줍니다는 <xref:System.Collections.BitArray>합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-269">The following code example shows how to set and get specific elements in a <xref:System.Collections.BitArray>.</span></span>  
  
 [!code-cpp[Classic BitArray.Get Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Get Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.BitArray.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c68d2-270">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.BitArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-270">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c68d2-271">
            <see cref="T:System.Collections.BitArray" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-271">An object that can be used to synchronize access to the <see cref="T:System.Collections.BitArray" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-272">파생된 클래스의 동기화 된 버전을 제공할 수 있습니다는 <xref:System.Collections.BitArray> 를 사용 하 여 <xref:System.Collections.BitArray.SyncRoot%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="c68d2-272">Derived classes can provide their own synchronized version of the <xref:System.Collections.BitArray> using the <xref:System.Collections.BitArray.SyncRoot%2A> property.</span></span> <span data-ttu-id="c68d2-273">동기화 하는 코드에서 작업을 수행 해야는 <xref:System.Collections.BitArray.SyncRoot%2A> 의 <xref:System.Collections.BitArray>에서 직접는 <xref:System.Collections.BitArray>합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-273">The synchronizing code must perform operations on the <xref:System.Collections.BitArray.SyncRoot%2A> of the <xref:System.Collections.BitArray>, not directly on the <xref:System.Collections.BitArray>.</span></span> <span data-ttu-id="c68d2-274">이렇게 하면 다른 개체에서 파생되는 컬렉션에 대해 적절한 작업이 수행됩니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-274">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="c68d2-275">특히, 동시에 수정할 수 있는 다른 스레드와 적절 한 동기화를 유지 관리는 <xref:System.Collections.BitArray> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-275">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.BitArray> object.</span></span>  
  
 <span data-ttu-id="c68d2-276">컬렉션 전체를 열거하는 프로시저는 기본적으로 스레드로부터 안전하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-276">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="c68d2-277">컬렉션이 동기화되어 있을 때 다른 스레드에서 해당 컬렉션을 수정할 수 있으므로 이렇게 되면 열거자에서 예외가 throw됩니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-277">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="c68d2-278">열거하는 동안 스레드로부터 안전을 보장하려면 전체 열거를 수행하는 동안 컬렉션을 잠그거나 다른 스레드에서 변경된 내용으로 인해 발생한 예외를 catch하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-278">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c68d2-279">다음 코드 예제에 사용 하 여 컬렉션을 잠그는 방법을 보여 줍니다는 <xref:System.Collections.BitArray.SyncRoot%2A> 열거 하는 중입니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-279">The following code example shows how to lock the collection using the <xref:System.Collections.BitArray.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic BitArray Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic BitArray Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray Example/CS/source2.cs#2)]
 [!code-vb[Classic BitArray Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="c68d2-280">이 속성 값을 검색하는 것은 O(1) 연산입니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-280">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.BitArray.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.BitArray.System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.BitArray.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.BitArray.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray Xor (System.Collections.BitArray value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray Xor(class System.Collections.BitArray value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Xor(System.Collections.BitArray)" />
      <MemberSignature Language="VB.NET" Value="Public Function Xor (value As BitArray) As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ Xor(System::Collections::BitArray ^ value);" />
      <MemberSignature Language="F#" Value="member this.Xor : System.Collections.BitArray -&gt; System.Collections.BitArray" Usage="bitArray.Xor value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.BitArray" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c68d2-281">The array with which to perform the bitwise exclusive OR operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-281">The array with which to perform the bitwise exclusive OR operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c68d2-282">Performs the bitwise exclusive OR operation between the elements of the current <see cref="T:System.Collections.BitArray" /> object against the corresponding elements in the specified array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-282">Performs the bitwise exclusive OR operation between the elements of the current <see cref="T:System.Collections.BitArray" /> object against the corresponding elements in the specified array.</span>
          </span>
          <span data-ttu-id="c68d2-283">The current <see cref="T:System.Collections.BitArray" /> object will be modified to store the result of the bitwise exclusive OR operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-283">The current <see cref="T:System.Collections.BitArray" /> object will be modified to store the result of the bitwise exclusive OR operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c68d2-284">An array containing the result of the bitwise exclusive OR operation, which is a reference to the current <see cref="T:System.Collections.BitArray" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-284">An array containing the result of the bitwise exclusive OR operation, which is a reference to the current <see cref="T:System.Collections.BitArray" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c68d2-285">배타적 비트 OR 연산이 반환 `true` 정확히 하나의 피연산자가 `true`, 반환 `false` 두 피연산자 모두 동일한 부울 값을 포함 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="c68d2-285">The bitwise exclusive OR operation returns `true` if exactly one operand is `true`, and returns `false` if both operands have the same Boolean value.</span></span>  
  
 <span data-ttu-id="c68d2-286">이 메서드는 O는 (`n`) 작업, 여기서 `n` 은 <xref:System.Collections.BitArray.Count%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-286">This method is an O(`n`) operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c68d2-287">다음 코드 예제에서는 두 XOR 연산을 수행 하는 방법을 보여 줍니다. <xref:System.Collections.BitArray> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="c68d2-287">The following code example shows how to perform the XOR operation between two <xref:System.Collections.BitArray> objects.</span></span>  
  
 [!code-cpp[Classic BitArray.Xor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Xor Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Xor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Xor Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Xor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Xor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c68d2-288">
            <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-288">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c68d2-289">
            <paramref name="value" /> and the current <see cref="T:System.Collections.BitArray" /> do not have the same number of elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c68d2-289">
              <paramref name="value" /> and the current <see cref="T:System.Collections.BitArray" /> do not have the same number of elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>