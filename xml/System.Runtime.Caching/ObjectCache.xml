<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ObjectCache.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53a3f877a2a018a9c5f39e477e544f6da9125c9cd.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3a3f877a2a018a9c5f39e477e544f6da9125c9cd</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Caching.ObjectCache">
          <source>Represents an object cache and provides the base methods and properties for accessing the object cache.</source>
          <target state="translated">개체 캐시에 액세스하기 위한 기본 메서드 및 속성을 제공하는 개체 캐시를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> type is the primary type for the in-memory object cache.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> 형식은 메모리 내 개체 캐시에 대 한 기본 형식입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>To develop a custom cache implementation, you derive from the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class.</source>
          <target state="translated">파생 한 사용자 지정 캐시 구현을 개발 하려면는 <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class is new as of the <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> 클래스의 새는 <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The built-in <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> class derives from the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class.</source>
          <target state="translated">기본 제공 <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> 클래스에서 파생 되는 <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> class is the only concrete object cache implementation in the <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> that derives from the <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache&gt;</ph> 클래스는 유일 하 게 구체적인 개체 캐시 구현에는 <ph id="ph2">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 에서 파생 되는 <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>This type is thread safe.</source>
          <target state="translated">이 형식은 스레드로부터 안전합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>Because the <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> type represents only common cache functions, there is no requirement for how an <ph id="ph2">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> instance must be instantiated and obtained.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> 형식은 일반 캐시 기능, 방법에 대 한 요구 사항은 없습니다는 <ph id="ph2">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> 인스턴스를 시작 하 고 얻는 해야 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>In addition, there is no requirement that concrete implementations of the <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> class must be singletons.</source>
          <target state="translated">또한의 구체적인 구현은 않아도 됩니다는 <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> 클래스를 singleton 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source><ph id="ph1">&lt;block subset="none" type="note"&gt;</ph><ph id="ph2">&lt;para&gt;</ph><ph id="ph3">&lt;see cref="T:System.Runtime.Caching.MemoryCache" /&gt;</ph> is not a singleton, but you should create only a few or potentially only one <ph id="ph4">&lt;see cref="T:System.Runtime.Caching.MemoryCache" /&gt;</ph> instance and code that caches items should use those instances.</source>
          <target state="translated"><ph id="ph1">&lt;block subset="none" type="note"&gt;</ph><ph id="ph2">&lt;para&gt;</ph><ph id="ph3">&lt;see cref="T:System.Runtime.Caching.MemoryCache" /&gt;</ph> singleton 하지만 몇 가지 또는 잠재적으로 단일 암호만 만들어야 <ph id="ph4">&lt;see cref="T:System.Runtime.Caching.MemoryCache" /&gt;</ph> 인스턴스와 개의 항목만 캐시 하는 코드에서 이러한 인스턴스를 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> class, you must override its methods.</source>
          <target state="translated">상속 하는 경우는 <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> 클래스의 메서드를 재정의 해야 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.#ctor">
          <source>Called from constructors in derived classes in order to initialize the <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> 클래스를 초기화하기 위해 파생 클래스의 생성자에서 호출됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Runtime.Caching.ObjectCache">
          <source>When overridden in a derived class, inserts a cache entry into the cache, without requiring that an existing cache entry with a matching key be returned.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 키가 일치하는 기존 캐시 엔트리를 반환하도록 요구하지 않고 캐시 엔트리를 캐시에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method overloads try to insert a cache entry into the cache, without overwriting or removing an existing cache entry that has the same key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> 메서드 오버 로드를 덮어쓰거나 동일한 키를 가진 기존 캐시 엔트리를 제거 하지 않고 캐시에 캐시 엔트리를 삽입 하려고 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The cache entry can be a typed <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> object or a generic object.</source>
          <target state="translated">캐시 항목을 형식화 된 일 수 있습니다 <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> 개체 또는 일반 개체입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method overloads and the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method overloads have one significant difference.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> 메서드 오버 로드와 <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> 메서드 오버 로드는 한 가지 중요 한 차이점이 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>When these methods insert a cache entry, if a matching entry is found in the cache, the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method overloads return the existing cache entry, but the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method overloads do not.</source>
          <target state="translated">이러한 메서드는 일치 하는 항목이 캐시에서 발견 되는 경우 캐시 항목을 삽입 하는 경우는 <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> 메서드 오버 로드는 기존 캐시 엔트리를 반환 하지만 <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> 메서드 오버 로드는 그렇지 않습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>Having these different method overloads enables callers to optimize their code based on whether they need the existing cache entry.</source>
          <target state="translated">이러한 다른 메서드 오버 로드를 있으면 기존 캐시 항목의 필요 여부에 따라 코드를 최적화 하기 위해 호출자가 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>In distributed caches, returning an existing value by using the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method might be more expensive than returning a Boolean value by using <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method.</source>
          <target state="translated">분산 된 캐시에서 사용 하 여 기존 값을 반환 된 <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> 메서드를 사용 하 여 부울 값을 반환 하는 데 비해 수 <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>The object to add.</source>
          <target state="translated">추가할 개체입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>When overridden in a derived class, tries to insert a cache entry into the cache as a <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> instance, and adds details about how the entry should be evicted.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 캐시 엔트리를 캐시에 <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> 인스턴스로 삽입하려고 하고 해당 엔트리를 제거하는 방법에 대한 정보를 추가합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if insertion succeeded, or <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there is an already an entry in the cache that has the same key as <ph id="ph3">&lt;paramref name="item" /&gt;</ph>.</source>
          <target state="translated">삽입이 성공하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 캐시에 <ph id="ph3">&lt;paramref name="item" /&gt;</ph>과 키가 같은 엔트리가 이미 있으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method overloads are virtual (not abstract) on the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class, because the <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method internally calls <ph id="ph4">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> 메서드 오버 로드는 가상 (추상이 아님)에 <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> 때문에 클래스는 <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> 메서드를 내부적으로 호출 <ph id="ph4">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>This reduces the number of method overloads that a cache implementer has to provide.</source>
          <target state="translated">이 캐시 자가 제공 해야 하는 메서드 오버 로드의 수를 줄입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>If a cache implementation does not require any special behavior for the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method, it can just implement the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method overloads.</source>
          <target state="translated">캐시를 구현 하는 경우 특별 한 동작에 대 한 필요 하지 않습니다는 <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> 메서드를 구현할 수 있는 것은 <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">캐시 엔트리의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The object to insert.</source>
          <target state="translated">삽입할 개체입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The fixed date and time at which the cache entry will expire.</source>
          <target state="translated">캐시 엔트리가 만료될 고정된 날짜 및 시간입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>This parameter is required when the <ph id="ph1">&lt;see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /&gt;</ph> 메서드가 호출되는 경우 이 매개 변수가 필요합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">영역이 구현된 경우 캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>Because regions are not implemented in <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, the default value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">영역은 <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>에서 구현되지 않기 때문에 기본값은 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>When overridden in a derived class, inserts a cache entry into the cache without overwriting any existing cache entry.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 기존 캐시 엔트리를 덮어쓰지 않고 캐시 엔트리를 캐시에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if insertion succeeded, or <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there is an already an entry in the cache that has the same key as <ph id="ph3">&lt;paramref name="key" /&gt;</ph>.</source>
          <target state="translated">삽입이 성공하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 캐시에 <ph id="ph3">&lt;paramref name="key" /&gt;</ph>과 키가 같은 엔트리가 이미 있으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method overloads are virtual (not abstract) on the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class, because the <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method internally calls <ph id="ph4">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> 메서드 오버 로드는 가상 (추상이 아님)에 <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> 때문에 클래스는 <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> 메서드를 내부적으로 호출 <ph id="ph4">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>This reduces the number of method overloads that a cache implementer has to provide.</source>
          <target state="translated">이 캐시 자가 제공 해야 하는 메서드 오버 로드의 수를 줄입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>If a cache implementation does not require any special behavior for the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method, it can just implement the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method overloads.</source>
          <target state="translated">캐시를 구현 하는 경우 특별 한 동작에 대 한 필요 하지 않습니다는 <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> 메서드를 구현할 수 있는 것은 <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">캐시 엔트리의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The object to insert.</source>
          <target state="translated">삽입할 개체입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">영역이 구현된 경우 캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">선택적 매개 변수에 대한 기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>When overridden in a derived class, inserts a cache entry into the cache, specifying information about how the entry will be evicted.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 캐시 엔트리를 캐시에 삽입하고 엔트리의 제거 방법에 대한 정보를 지정합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the insertion try succeeds, or <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there is an already an entry in the cache with the same key as <ph id="ph3">&lt;paramref name="key" /&gt;</ph>.</source>
          <target state="translated">삽입 시도가 성공하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 캐시에 <ph id="ph3">&lt;paramref name="key" /&gt;</ph>와 키가 같은 엔트리가 이미 있으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method overloads are virtual (not abstract) on the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class, because the <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method internally calls <ph id="ph4">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> 메서드 오버 로드는 가상 (추상이 아님)에 <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> 때문에 클래스는 <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> 메서드를 내부적으로 호출 <ph id="ph4">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>This reduces the number of method overloads that a cache implementer has to provide.</source>
          <target state="translated">이 캐시 자가 제공 해야 하는 메서드 오버 로드의 수를 줄입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>If a cache implementation does not require any special behavior for the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> method, it can just implement the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method overloads.</source>
          <target state="translated">캐시를 구현 하는 경우 특별 한 동작에 대 한 필요 하지 않습니다는 <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> 메서드를 구현할 수 있는 것은 <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="T:System.Runtime.Caching.ObjectCache">
          <source>When overridden in a derived class, tries to insert a cache entry into the cache, and returns an existing cache entry with a matching key.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 캐시 엔트리를 캐시에 삽입하려고 하고 키가 일치하는 기존 캐시 엔트리를 반환합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> method overloads insert an entry into the cache.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> 메서드 오버 로드를 캐시에 항목을 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>If a cache entry with a matching key already exists, they return the existing entry.</source>
          <target state="translated">일치 하는 키가 캐시 엔트리가 이미 있는 경우 기존 항목을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The cache entry can be a <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> object or a generic object.</source>
          <target state="translated">캐시 항목 수는 <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> 개체 또는 일반 개체입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>There is one difference between the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> overloads and the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> overloads.</source>
          <target state="translated">하나의 차이가 <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> 오버 로드와 <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>When these overloaded methods try to insert a cache entry, if an existing entry is found that has a key that matches an existing inserted cache entry, the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> overloads return the existing cache entry.</source>
          <target state="translated">이러한 오버 로드 된 메서드를 삽입 하려고 캐시 항목에는 기존 일치 하는 키 넣었는지 캐시 항목을 기존 항목이 발견 되는 경우는 <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A&gt;</ph> 오버 로드는 기존 캐시 엔트리를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> overloads do not.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Add%2A&gt;</ph> 오버 로드는 그렇지 않습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>The object to insert.</source>
          <target state="translated">삽입할 개체입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>When overridden in a derived class, inserts the specified <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> object into the cache, specifying information about how the entry will be evicted.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 엔트리를 제거하는 방법에 대한 정보를 지정하여 지정된 <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> 개체를 캐시에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>If a cache entry with the same key exists, the specified cache entry; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">키가 같은 캐시 엔트리가 있으면 지정된 캐시 엔트리이고, 그렇지 않으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">캐시 엔트리의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The object to insert.</source>
          <target state="translated">삽입할 개체입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The fixed date and time at which the cache entry will expire.</source>
          <target state="translated">캐시 엔트리가 만료될 고정된 날짜 및 시간입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">영역이 구현된 경우 캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">선택적 매개 변수에 대한 기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>When overridden in a derived class, inserts a cache entry into the cache, by using a key, an object for the cache entry, an absolute expiration value, and an optional region to add the cache into.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 캐시 엔트리의 키와 개체, 절대 만료 값 및 캐시를 추가할 선택적 영역을 사용하여 캐시 엔트리를 캐시에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>If a cache entry with the same key exists, the specified cache entry's value; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">키가 같은 캐시 엔트리가 있으면 지정된 캐시 엔트리의 값이고, 그렇지 않으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>This <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29&gt;</ph> method overload returns an object value, not a <ph id="ph2">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> object.</source>
          <target state="translated">이 <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29&gt;</ph> 메서드 오버 로드 하지는 개체 값을 반환는 <ph id="ph2">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">캐시 엔트리의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The object to insert.</source>
          <target state="translated">삽입할 개체입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">영역이 구현된 경우 캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">선택적 매개 변수에 대한 기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>When overridden in a derived class, inserts a cache entry into the cache, specifying a key and a value for the cache entry, and information about how the entry will be evicted.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 캐시 엔트리의 키와 값 및 해당 엔트리를 제거하는 방법에 대한 정보를 지정하여 캐시 엔트리를 캐시에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>If a cache entry with the same key exists, the specified cache entry's value; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">키가 같은 캐시 엔트리가 있으면 지정된 캐시 엔트리의 값이고, 그렇지 않으면 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29&gt;</ph> method returns an object value, not a <ph id="ph2">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29&gt;</ph> 메서드는 개체 값을 하지 반환는 <ph id="ph2">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">캐시 엔트리의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)">
          <source>A named region in the cache where the cache can be found, if regions are implemented.</source>
          <target state="translated">영역이 구현된 경우 캐시를 찾을 수 있는 캐시의 명명된 영역입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">선택적 매개 변수에 대한 기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)">
          <source>When overridden in a derived class, checks whether the cache entry already exists in the cache.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 캐시 엔트리가 캐시에 이미 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the cache contains a cache entry with the same key value as <ph id="ph2">&lt;paramref name="key" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">캐시에 키 값이 <ph id="ph2">&lt;paramref name="key" /&gt;</ph>와 같은 캐시 엔트리가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>The unique identifiers for cache entries to monitor.</source>
          <target state="translated">모니터링할 캐시 엔트리의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>A named region in the cache where the cache keys in the <bpt id="p1">&lt;c&gt;</bpt>keys<ept id="p1">&lt;/c&gt;</ept> parameter exist, if regions are implemented.</source>
          <target state="translated">영역이 구현된 경우 <bpt id="p1">&lt;c&gt;</bpt>keys<ept id="p1">&lt;/c&gt;</ept> 매개 변수의 캐시 키가 있는 캐시의 명명된 영역입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">선택적 매개 변수에 대한 기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>When overridden in a derived class, creates a <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /&gt;</ph> object that can trigger events in response to changes to specified cache entries.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 지정된 캐시 엔트리의 변경에 대한 응답으로 이벤트를 트리거할 수 있는 <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /&gt;</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>A change monitor that monitors cache entries in the cache.</source>
          <target state="translated">캐시의 캐시 엔트리를 모니터링하는 변경 모니터입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>When a derived <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class overrides the base <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A&gt;</ph> method, the cache implementation must create a <ph id="ph3">&lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt;</ph> object.</source>
          <target state="translated">파생 된 경우 <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> 클래스가 재정의 기본 <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A&gt;</ph> 캐시 구현을 작성 해야 메서드를 한 <ph id="ph3">&lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>This specialized change monitor notifies callers when there are changes to the cache entries that are specified in the <ph id="ph1">`keys`</ph> parameter.</source>
          <target state="translated">이 특수 변경 모니터에 지정 된 캐시 항목에는 변경 될 때 호출자에 게 알리는 <ph id="ph1">`keys`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>For example, if a monitored item in the <ph id="ph1">`keys`</ph> parameter is updated or removed from the cache, the change monitor created by this method triggers an event.</source>
          <target state="translated">예를 들어 모니터링 되는 항목에는 <ph id="ph1">`keys`</ph> 이 메서드에서 만든 변경 모니터는 이벤트를 트리거합니다, 매개 변수를 업데이트 또는 캐시에서 제거 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>If a cache implementation supports named cache regions, a string value can be specified as the <ph id="ph1">`regionName`</ph> parameter.</source>
          <target state="translated">캐시를 구현 하는 명명 된 캐시 영역을 지 원하는 경우 문자열 값으로 지정할 수 있습니다는 <ph id="ph1">`regionName`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>Otherwise, the parameter defaults to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">그렇지 않으면 매개 변수 기본값으로 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>Not all cache implementations support cache-entry change monitors.</source>
          <target state="translated">일부 캐시 구현 변경 모니터 캐시 항목을 지원합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>To determine whether your cache implementation supports <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt;</ph> objects, see the documentation for the specific cache implementation.</source>
          <target state="translated">캐시 구현 지원 하는지 확인 하려면 <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheEntryChangeMonitor&gt;</ph> 개체를 특정 캐시 구현에 대 한 설명서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="P:System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities">
          <source>When overridden in a derived class, gets a description of the features that a cache implementation provides.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 캐시 구현에서 제공하는 기능 설명을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities">
          <source>A bitwise combination of flags that indicate the default capabilities of a cache implementation.</source>
          <target state="translated">캐시 구현의 기본 기능을 나타내는 플래그의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)">
          <source>A unique identifier for the cache entry to get.</source>
          <target state="translated">가져올 캐시 엔트리의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)">
          <source>A named region in the cache to which the cache entry was added, if regions are implemented.</source>
          <target state="translated">영역이 구현된 경우 캐시 엔트리가 추가된 캐시의 명명된 영역입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">선택적 매개 변수에 대한 기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)">
          <source>When overridden in a derived class, gets the specified cache entry from the cache as an object.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 지정된 캐시 엔트리를 캐시에서 개체로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)">
          <source>The cache entry that is identified by <ph id="ph1">&lt;paramref name="key" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph>로 식별되는 캐시 엔트리입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>A unique identifier for the cache entry to get.</source>
          <target state="translated">가져올 캐시 엔트리의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>A named region in the cache to which the cache was added, if regions are implemented.</source>
          <target state="translated">영역이 구현된 경우 캐시가 추가된 캐시의 명명된 영역입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>Because regions are not implemented in <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, the default is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">영역은 <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>에서 구현되지 않기 때문에 기본값은 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>When overridden in a derived class, gets the specified cache entry from the cache as a <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> instance.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 지정된 캐시 엔트리를 캐시에서 <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> 인스턴스로 가져옵니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>The cache entry that is identified by <ph id="ph1">&lt;paramref name="key" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph>로 식별되는 캐시 엔트리입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>This method overload exists because some cache implementations might extend the <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> class.</source>
          <target state="translated">일부 캐시 구현 길어질 수 있으므로이 메서드 오버 로드가 존재는 <ph id="ph1">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>In that case, the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;</ph> method overload will not necessarily return all the information about cached data.</source>
          <target state="translated">이 경우에 <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;</ph> 메서드 오버 로드는 반드시 캐시 된 데이터에 대 한 모든 정보를 반환 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>However, the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29&gt;</ph> method overload enables custom caches to return more than just the cache value.</source>
          <target state="translated">그러나는 <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29&gt;</ph> 메서드 오버 로드 보다 더 캐시 값을 반환 하도록 사용자 지정 캐시를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29&gt;</ph> method is like the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;</ph> method, except that the <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29&gt;</ph> method returns return the cache entry as a <ph id="ph4">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29&gt;</ph> 방법은 <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29&gt;</ph> 메서드와 비슷하지만 <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29&gt;</ph> 메서드 반환 반환로 캐시 엔트리를 <ph id="ph4">&lt;xref:System.Runtime.Caching.CacheItem&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)">
          <source>A named region in the cache for which the cache entry count should be computed, if regions are implemented.</source>
          <target state="translated">영역이 구현된 경우 캐시 엔트리 수를 계산해야 하는 캐시의 명명된 영역입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">선택적 매개 변수에 대한 기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)">
          <source>When overridden in a derived class, gets the total number of cache entries in the cache.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 캐시의 총 캐시 엔트리 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)">
          <source>The number of cache entries in the cache.</source>
          <target state="translated">캐시에 있는 총 캐시 엔트리 수입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)">
          <source>If <ph id="ph1">&lt;paramref name="regionName" /&gt;</ph> is not <ph id="ph2">&lt;see langword="null" /&gt;</ph>, the count indicates the number of entries that are in the specified cache region.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="regionName" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이 아니면 지정된 캐시 영역에 있는 엔트리의 수를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetEnumerator">
          <source>When overridden in a derived class, creates an enumerator that can be used to iterate through a collection of cache entries.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 캐시 엔트리의 컬렉션을 반복하는 데 사용할 수 있는 열거자를 만듭니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetEnumerator">
          <source>The enumerator object that provides access to the cache entries in the cache.</source>
          <target state="translated">캐시의 캐시 항목에 대한 액세스를 제공하는 열거자 개체입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetEnumerator">
          <source>Cache implementers can override and extend this method to provide a custom means of iterating through a collection of cache entries.</source>
          <target state="translated">캐시 구현자는 무시 하 고 캐시 항목의 컬렉션을 반복 하는 사용자 지정 수단을 제공 하려면이 메서드를 확장할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetEnumerator">
          <source>Returning an enumerator is typically a more expensive operation than returning the entire cache entry.</source>
          <target state="translated">열거자를 반환 합니다. 일반적으로 전체 캐시 항목을 반환 하는 보다 더 비용이 많이 드는 작업 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetEnumerator">
          <source>This method is called by the explicit interface implementations that the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class has for the <ph id="ph2">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> methods.</source>
          <target state="translated">이 메서드는 명시적 인터페이스 구현 하는 <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> 에 대 한 클래스에는 <ph id="ph2">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="T:System.Runtime.Caching.ObjectCache">
          <source>Gets a set of cache entries.</source>
          <target state="translated">캐시 엔트리 집합을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>A collection of unique identifiers for the cache entries to get.</source>
          <target state="translated">가져올 캐시 엔트리의 고유 식별자 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>A named region in the cache to which the cache entry or entries were added, if regions are implemented.</source>
          <target state="translated">영역이 구현된 경우 캐시 엔트리가 추가된 캐시의 명명된 영역입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">선택적 매개 변수에 대한 기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>When overridden in a derived class, gets a set of cache entries that correspond to the specified keys.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 지정된 키와 일치하는 캐시 엔트리 집합을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>A dictionary of key/value pairs that represent cache entries.</source>
          <target state="translated">캐시 엔트리를 나타내는 키/값 쌍의 사전입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</ph> method overload is a performance optimization for distributed caches that support fetching multiple cache entries from the cache during a single network call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</ph> 메서드 오버 로드는 단일 네트워크를 호출 하는 동안 여러 캐시 항목이 캐시에서 가져올 수 있는 분산 된 캐시에 대 한 성능 최적화.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>Although a caller can pass one or more keys to the method, there is no guarantee that all keys represent entries in the cache.</source>
          <target state="translated">호출자가 하나 이상의 키 메서드를 전달할 수는 없지만 보장이 없습니다 모든 키 캐시의 엔트리를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
          <source>Therefore, the returned dictionary might contain fewer items than the number of keys that were passed to the method.</source>
          <target state="translated">따라서 반환 된 사전 메서드에 전달 된 키의 수보다 적은 수의 항목을 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>A named region in the cache to which the cache entry or entries were added, if regions are implemented.</source>
          <target state="translated">영역이 구현된 경우 캐시 엔트리가 추가된 캐시의 명명된 영역입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>Because regions are not implemented in <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, the default is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">영역은 <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>에서 구현되지 않기 때문에 기본값은 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>A collection of unique identifiers for the cache entries to get.</source>
          <target state="translated">가져올 캐시 엔트리의 고유 식별자 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>Gets a set of cache entries that correspond to the specified keys.</source>
          <target state="translated">지정된 키에 해당하는 캐시 엔트리 집합을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>A dictionary of key/value pairs that represent cache entries.</source>
          <target state="translated">캐시 엔트리를 나타내는 키/값 쌍의 사전입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType&gt;</ph> method overload is like the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</ph> method overload, but lets you pass the named region by using optional parameter syntax that is supported by managed languages such as C#.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType&gt;</ph> 메서드 오버 로드는 <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</ph> 메서드 오버 로드 하지만 C#과 같은 관리 되는 언어에서 지원 되는 선택적 매개 변수 구문을 사용 하 여 명명 된 영역을 전달할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])">
          <source>This method is a virtual method because the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> class provides a default implementation that passes the <ph id="ph2">`params`</ph> array to the <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</ph> method overload.</source>
          <target state="translated">때문에이 메서드는 가상 메서드는 <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> 클래스를 전달 하는 기본 구현을 제공는 <ph id="ph2">`params`</ph> 배열을 <ph id="ph3">&lt;xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29&gt;</ph> 메서드 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>Gets or set a reference to a managed hosting environment that is available to <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> implementations and that can provide host-specific services to <ph id="ph2">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> implementations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> 구현에 사용할 수 있고 <ph id="ph2">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> 구현에 호스트별 서비스를 제공할 수 있는 관리되는 호스팅 환경에 대한 참조를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>A reference to a cache-aware managed hosting environment.</source>
          <target state="translated">캐시를 인식하는 관리되는 호스팅 환경에 대한 참조입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Host%2A&gt;</ph> property is intended for use by <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> host environments and by cache implementations that implement behavior that depends on the .NET Framework host environment.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Host%2A&gt;</ph> 속성에서 사용 하기 위한 <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 환경와.NET Framework에 의존 하는 동작을 구현 하는 캐시 구현 환경을 호스팅합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>The following table lists the set of host environment services that might be available from a managed hosting environment and that are available to <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> implementations through the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Host%2A&gt;</ph> property:</source>
          <target state="translated">다음 표에서 관리 호스팅 환경에서 사용할 수 있는 정보와를 사용할 수 있는 호스트 환경 서비스 집합이 나열 <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> 구현을 통해는 <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.Host%2A&gt;</ph> 속성:</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>Service</source>
          <target state="translated">서비스</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>Lets host environments provide application domain identifiers that might be needed by a cache implementation for features such as identifying performance counters.</source>
          <target state="translated">예: 성능 카운터를 확인 하는 기능에 대 한 캐시 구현에 의해 필요할 수 있는 응용 프로그램 도메인 식별자를 제공 하는 호스트 환경이 수 있습니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>Lets host environments provide a custom file-change notification system, instead of using the one provided in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">호스트 환경에서 제공 되는 것을 사용 하는 대신 사용자 지정 파일 변경 알림 시스템을 제공할 수 있습니다는 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>Lets cache implementations report cache memory consumption to the host environment.</source>
          <target state="translated">호스트 환경에 캐시 구현 보고서 캐시 메모리 소비량을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>This enables host environments to centrally manage memory consumption across multiple cache implementations.</source>
          <target state="translated">따라서 호스트 환경이 여러 캐시 구현에서 메모리 소비를 중앙에서 관리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>Callers of this property value require unrestricted code access security permissions.</source>
          <target state="translated">이 속성 값의 호출자에 게 무제한 코드 액세스 보안 권한이 필요합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>The value being assigned to the property is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">속성에 할당되는 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>An attempt was made to set the property value more than one time.</source>
          <target state="translated">속성 값을 두 번 이상 설정하기 위한 시도가 있었습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>for full trust for all accessors of this property.</source>
          <target state="translated">이 속성의 모든 접근자에 대 한 완전 신뢰 합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Host">
          <source>This property cannot be used by partially trusted code.</source>
          <target state="translated">부분적으로 신뢰할 수 있는 코드에서이 속성을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration">
          <source>Gets a value that indicates that a cache entry has no absolute expiration.</source>
          <target state="translated">캐시 엔트리에 절대 만료 시간이 없음을 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration">
          <source>A cache entry that is inserted into the cache with the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&gt;</ph> field value set as the expiration value should never expire based on an absolute point in time.</source>
          <target state="translated">와 캐시에 삽입 되는 캐시 엔트리에 <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&gt;</ph> 절대 점을 시간에서 기준으로 필드 값이 만료 값은 만료 되지 않도록 해야 하는 대로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration">
          <source>However, a cache entry with this setting can be evicted from the cache for other reasons that are determined by a particular cache implementation, such as a change-monitor event eviction caused by memory pressure.</source>
          <target state="translated">그러나 메모리 부족으로 인 한 변경 모니터 이벤트 제거와 같은 특정 캐시 구현에 의해 결정 된 다른 이유로이 설정 사용 하 여 캐시 엔트리를 캐시에서 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.Runtime.Caching.ObjectCache.Item(System.String)">
          <source>A unique identifier for a cache entry in the cache.</source>
          <target state="translated">캐시에 있는 캐시 엔트리의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Runtime.Caching.ObjectCache.Item(System.String)">
          <source>Gets or sets the default indexer for the <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> 클래스의 기본 인덱서를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Item(System.String)">
          <source>A key that serves as an indexer into the cache instance.</source>
          <target state="translated">캐시 인스턴스의 인덱서로 작동하는 키입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Item(System.String)">
          <source>The behavior of the set accessor of this property is like the <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29&gt;</ph> method.</source>
          <target state="translated">이 속성의 set 접근자의 동작은 같은 <ph id="ph1">&lt;xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Item(System.String)">
          <source>Internally, a cache implementation could set the absolute expiration of the specified value to the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&gt;</ph> method.</source>
          <target state="translated">내부적으로 캐시 구현에 지정된 된 값의 절대 만료를 설정할 수는 <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Item(System.String)">
          <source>However this behavior is ultimately up to the cache implementation.</source>
          <target state="translated">그러나이 문제는 결국 캐시 구현 합니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Item(System.String)">
          <source>The behavior of get accessor is like calling the <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29&gt;</ph> method and using <ph id="ph2">`null`</ph> for the region name.</source>
          <target state="translated">Get 접근자의 동작은 호출 처럼는 <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29&gt;</ph> 메서드와 사용 하 여 <ph id="ph2">`null`</ph> 영역 이름에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="P:System.Runtime.Caching.ObjectCache.Name">
          <source>Gets the name of a specific <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> instance.</source>
          <target state="translated">특정한 <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.ObjectCache" /&gt;</ph> 인스턴스의 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Name">
          <source>The name of a specific cache instance.</source>
          <target state="translated">특정한 캐시 인스턴스의 이름입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Name">
          <source>Some cache implementations might support multiple instances of the cache that is running in a single application.</source>
          <target state="translated">일부 캐시 구현에는 단일 응용 프로그램에서 실행 되는 캐시를 여러 개 지원할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Caching.ObjectCache.Name">
          <source>This property lets cache implementers return a name that identifies a specific cache instance.</source>
          <target state="translated">이 속성을 사용 하면 캐시 구현자는 특정 캐시 인스턴스를 식별 하는 이름을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration">
          <source>Indicates that a cache entry has no sliding expiration time.</source>
          <target state="translated">캐시 엔트리에 상대(sliding) 만료 시간이 없음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration">
          <source>Expiration that is based on duration or a defined window of time is also referred to as sliding expiration.</source>
          <target state="translated">기간 또는 정의 된 기간에 따라 만료를 상대 만료는 라고도 합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration">
          <source>Normally, a cache implementation that evicts items that are based on sliding expiration will remove an item that has not been accessed in the specified window of time.</source>
          <target state="translated">일반적으로 상대 만료 기반으로 하는 항목을 제거 하는 캐시 구현 시간의 하며 지정한 창에 액세스 하지 않은 항목을 제거 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration">
          <source>A cache entry that is inserted into the cache with the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration&gt;</ph> field value set as the expiration value should never be evicted because of non-activity in a sliding time window.</source>
          <target state="translated">와 캐시에 삽입 되는 캐시 엔트리에 <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration&gt;</ph> 필드 값이 설정으로 슬라이딩 기간이으로 인해 만료 값을 제거 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration">
          <source>However, a cache item can be evicted if it has an absolute expiration, or if some other eviction event occurs, such a change monitor or memory pressure.</source>
          <target state="translated">그러나 절대 만료 나 일부 다른 eviction이 이벤트가 발생 하면 이러한는 변경 모니터 또는 메모리가 중 캐시 항목을 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">캐시 엔트리의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>A named region in the cache to which the cache entry was added, if regions are implemented.</source>
          <target state="translated">영역이 구현된 경우 캐시 엔트리가 추가된 캐시의 명명된 영역입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">선택적 매개 변수에 대한 기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>When overridden in a derived class, removes the cache entry from the cache.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 캐시에서 캐시 엔트리를 제거합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>An object that represents the value of the removed cache entry that was specified by the key, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the specified entry was not found.</source>
          <target state="translated">키로 지정된 제거되는 캐시 엔트리의 값을 나타내는 개체이며, 지정된 엔트리가 없는 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>If you override this method in a custom cache implementation, if there is a cache entry in the cache that corresponds to <ph id="ph1">`key`</ph>, the value of the removed item should be returned.</source>
          <target state="translated">캐시 항목이 캐시에 해당 하는 경우 사용자 지정 캐시 구현에서이 메서드를 재정의 하는 경우 <ph id="ph1">`key`</ph>, 제거 된 항목의 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>If nothing was removed from the cache, the method should return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">메서드는 반환 해야 하는 경우 캐시에서 제거 된 아무, <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>Some distributed cache implementations might not support the ability to return the value that was removed from the cache.</source>
          <target state="translated">일부 분산된 캐시 구현 캐시에서 제거 된 값을 반환 하는 기능을 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>This might be because the cache implementation does not support returning the value of a removed cache item.</source>
          <target state="translated">캐시 구현이 제거 된 캐시 항목의 값 반환을 지원 하지 않는 때문일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>It might also be because marshaling the object as a return value is too expensive.</source>
          <target state="translated">반환 값은 너무 비용이 저렴 한 개체가 마샬링 때문에 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)">
          <source>In such cases, cache implementations can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">이러한 경우 캐시 구현을 반환할 수 있습니다 <ph id="ph1">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="T:System.Runtime.Caching.ObjectCache">
          <source>When overridden in a derived class, inserts a cache entry into the cache.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 캐시 엔트리를 캐시에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>The typical behavior of the <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Set%2A&gt;</ph> overload methods is an insert-or-update operation.</source>
          <target state="translated">일반적인 동작의 <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache.Set%2A&gt;</ph> 메서드 오버 로드는 삽입 또는 업데이트 작업 합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Caching.ObjectCache">
          <source>A cache entry is either inserted as a new entry if the specified entry does not exist, or the cache entry is updated with a new value if it already exists.</source>
          <target state="translated">캐시 항목은 지정 된 항목이 없거나 캐시 항목이 이미 있는 경우 새 값으로 업데이트 된 경우 새 항목으로 삽입 되거나 합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>The cache item to add.</source>
          <target state="translated">추가할 캐시 항목입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>When overridden in a derived class, inserts the cache entry into the cache as a <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> instance, specifying information about how the entry will be evicted.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 엔트리를 제거하는 방법에 대한 정보를 지정하여 캐시 엔트리를 캐시에 <ph id="ph1">&lt;see cref="T:System.Runtime.Caching.CacheItem" /&gt;</ph> 인스턴스로 삽입합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>If the key for <ph id="ph1">`item`</ph> does not exist, <ph id="ph2">`item`</ph> is inserted as a new cache entry.</source>
          <target state="translated">경우에 대 한 키 <ph id="ph1">`item`</ph> 존재 하지 않는 <ph id="ph2">`item`</ph> 새 캐시 항목으로 삽입 됩니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
          <source>If an item with a key that matches <ph id="ph1">`item`</ph> exists, the value from <ph id="ph2">`item`</ph> is used to update or overwrite the value of the existing cache entry.</source>
          <target state="translated">경우 일치 하는 키를 가진 항목이 <ph id="ph1">`item`</ph> 의 값 존재 <ph id="ph2">`item`</ph> 업데이트 하거나 기존 캐시 항목의 값을 덮어쓰는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">캐시 엔트리의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The object to insert.</source>
          <target state="translated">삽입할 개체입니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The fixed date and time at which the cache entry will expire.</source>
          <target state="translated">캐시 엔트리가 만료될 고정된 날짜 및 시간입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">영역이 구현된 경우 캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">선택적 매개 변수에 대한 기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>When overridden in a derived class, inserts a cache entry into the cache, specifying time-based expiration details.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 시간 기반 만료 정보를 지정하여 캐시 엔트리를 캐시에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>If an item that matches <ph id="ph1">`key`</ph> does not exist in the cache, <ph id="ph2">`value`</ph> and <ph id="ph3">`key`</ph> are used to insert as a new cache entry.</source>
          <target state="translated">일치 하는 항목이 있으면 <ph id="ph1">`key`</ph> 캐시에 존재 하지 않는 <ph id="ph2">`value`</ph> 및 <ph id="ph3">`key`</ph> 새 캐시 항목으로 삽입 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
          <source>If an item with a key that matches <ph id="ph1">`item`</ph> exists, the cache entry is updated or overwritten by using <ph id="ph2">`value`</ph>.</source>
          <target state="translated">경우 일치 하는 키를 가진 항목이 <ph id="ph1">`item`</ph> 있으면 캐시 항목을 업데이트 하거나 사용 하 여 덮어쓸 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>A unique identifier for the cache entry.</source>
          <target state="translated">캐시 엔트리의 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The object to insert.</source>
          <target state="translated">삽입할 개체입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>An object that contains eviction details for the cache entry.</source>
          <target state="translated">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>This object provides more options for eviction than a simple absolute expiration.</source>
          <target state="translated">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>Optional.</source>
          <target state="translated">선택 사항입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>A named region in the cache to which the cache entry can be added, if regions are implemented.</source>
          <target state="translated">영역이 구현된 경우 캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>The default value for the optional parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">선택적 매개 변수에 대한 기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>When overridden in a derived class, inserts a cache entry into the cache.</source>
          <target state="translated">파생 클래스에서 재정의된 경우 캐시 엔트리를 캐시에 삽입합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>This method overload lets you provide more eviction or expiration details than those that are available in time-based absolute expiration.</source>
          <target state="translated">이 메서드 오버 로드에서 절대 만료 시간을 기준으로 사용할 수 있는 것 보다 더 많은 제거 또는 만료 정보를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>If an item that matches <ph id="ph1">`key`</ph> does not exist in the cache, <ph id="ph2">`value`</ph> and <ph id="ph3">`key`</ph> are used to insert as a new cache entry.</source>
          <target state="translated">일치 하는 항목이 있으면 <ph id="ph1">`key`</ph> 캐시에 존재 하지 않는 <ph id="ph2">`value`</ph> 및 <ph id="ph3">`key`</ph> 새 캐시 항목으로 삽입 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
          <source>If an item with a key that matches <ph id="ph1">`item`</ph> exists, the cache entry is updated or overwritten by using <ph id="ph2">`value`</ph>.</source>
          <target state="translated">경우 일치 하는 키를 가진 항목이 <ph id="ph1">`item`</ph> 있으면 캐시 항목을 업데이트 하거나 사용 하 여 덮어쓸 <ph id="ph2">`value`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator">
          <source>Supports iteration over a generic collection.</source>
          <target state="translated">제네릭 컬렉션 반복을 지원합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator object that provides access to the items in the cache.</source>
          <target state="translated">캐시의 항목에 대한 액세스를 제공하는 열거자 개체입니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">이 멤버는 명시적 인터페이스 멤버 구현이며,</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when a derived <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">파생 된 경우에 사용할 수 있습니다 <ph id="ph1">&lt;xref:System.Runtime.Caching.ObjectCache&gt;</ph> 인스턴스로 캐스팅 되는 <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> 인터페이스입니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator">
          <source>Developers can use this method to iterate through a generic collection of cache entries.</source>
          <target state="translated">개발자는 캐시 항목의 제네릭 컬렉션을 반복이 메서드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator">
          <source>This is the default <ph id="ph1">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> implementation that internally calls the <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">이것이 기본 <ph id="ph1">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph> 내부적으로 호출 하는 구현에서 <ph id="ph2">&lt;xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A&gt;</ph> 메서드.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>