<Type Name="ObjectCache" FullName="System.Runtime.Caching.ObjectCache">
  <TypeSignature Language="C#" Value="public abstract class ObjectCache : System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectCache extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.ObjectCache" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ObjectCache&#xA;Implements IEnumerable(Of KeyValuePair(Of String, Object))" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectCache abstract : System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="448e2-101">개체 캐시에 액세스하기 위한 기본 메서드 및 속성을 제공하는 개체 캐시를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-101">Represents an object cache and provides the base methods and properties for accessing the object cache.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-102"><xref:System.Runtime.Caching.ObjectCache> 형식은 메모리 내 개체 캐시에 대 한 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-102">The <xref:System.Runtime.Caching.ObjectCache> type is the primary type for the in-memory object cache.</span></span> <span data-ttu-id="448e2-103">파생 한 사용자 지정 캐시 구현을 개발 하려면는 <xref:System.Runtime.Caching.ObjectCache> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-103">To develop a custom cache implementation, you derive from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="448e2-104"><xref:System.Runtime.Caching.ObjectCache> 클래스의 새는 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-104">The <xref:System.Runtime.Caching.ObjectCache> class is new as of the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span>  
  
 <span data-ttu-id="448e2-105">기본 제공 <xref:System.Runtime.Caching.MemoryCache> 클래스에서 파생 되는 <xref:System.Runtime.Caching.ObjectCache> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-105">The built-in <xref:System.Runtime.Caching.MemoryCache> class derives from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span> <span data-ttu-id="448e2-106"><xref:System.Runtime.Caching.MemoryCache> 클래스는 유일 하 게 구체적인 개체 캐시 구현에는 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 에서 파생 되는 <xref:System.Runtime.Caching.ObjectCache> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-106">The <xref:System.Runtime.Caching.MemoryCache> class is the only concrete object cache implementation in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] that derives from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="448e2-107">이 형식은 스레드로부터 안전합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-107">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="448e2-108">때문에 <see cref="T:System.Runtime.Caching.ObjectCache" /> 형식은 일반 캐시 기능, 방법에 대 한 요구 사항은 없습니다는 <see cref="T:System.Runtime.Caching.ObjectCache" /> 인스턴스를 시작 하 고 얻는 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-108">Because the <see cref="T:System.Runtime.Caching.ObjectCache" /> type represents only common cache functions, there is no requirement for how an <see cref="T:System.Runtime.Caching.ObjectCache" /> instance must be instantiated and obtained.</span></span> <span data-ttu-id="448e2-109">또한의 구체적인 구현은 않아도 됩니다는 <see cref="T:System.Runtime.Caching.ObjectCache" /> 클래스를 singleton 이어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-109">In addition, there is no requirement that concrete implementations of the <see cref="T:System.Runtime.Caching.ObjectCache" /> class must be singletons.</span></span>  
  
 <span data-ttu-id="448e2-110"><block subset="none" type="note"><para><see cref="T:System.Runtime.Caching.MemoryCache" /> singleton 하지만 몇 가지 또는 잠재적으로 단일 암호만 만들어야 <see cref="T:System.Runtime.Caching.MemoryCache" /> 인스턴스와 개의 항목만 캐시 하는 코드에서 이러한 인스턴스를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-110"><block subset="none" type="note"><para><see cref="T:System.Runtime.Caching.MemoryCache" /> is not a singleton, but you should create only a few or potentially only one <see cref="T:System.Runtime.Caching.MemoryCache" /> instance and code that caches items should use those instances.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="448e2-111">상속 하는 경우는 <see cref="T:System.Runtime.Caching.ObjectCache" /> 클래스의 메서드를 재정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-111">When you inherit from the <see cref="T:System.Runtime.Caching.ObjectCache" /> class, you must override its methods.</span></span></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectCache ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="448e2-112"><see cref="T:System.Runtime.Caching.ObjectCache" /> 클래스를 초기화하기 위해 파생 클래스의 생성자에서 호출됩니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-112">Called from constructors in derived classes in order to initialize the <see cref="T:System.Runtime.Caching.ObjectCache" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="448e2-113">파생 클래스에서 재정의된 경우 키가 일치하는 기존 캐시 엔트리를 반환하도록 요구하지 않고 캐시 엔트리를 캐시에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-113">When overridden in a derived class, inserts a cache entry into the cache, without requiring that an existing cache entry with a matching key be returned.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-114"><xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드 오버 로드를 덮어쓰거나 동일한 키를 가진 기존 캐시 엔트리를 제거 하지 않고 캐시에 캐시 엔트리를 삽입 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-114">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads try to insert a cache entry into the cache, without overwriting or removing an existing cache entry that has the same key.</span></span> <span data-ttu-id="448e2-115">캐시 항목을 형식화 된 일 수 있습니다 <xref:System.Runtime.Caching.CacheItem> 개체 또는 일반 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-115">The cache entry can be a typed <xref:System.Runtime.Caching.CacheItem> object or a generic object.</span></span>  
  
 <span data-ttu-id="448e2-116"><xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버 로드와 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드 오버 로드는 한 가지 중요 한 차이점이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-116">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads and the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads have one significant difference.</span></span> <span data-ttu-id="448e2-117">이러한 메서드는 일치 하는 항목이 캐시에서 발견 되는 경우 캐시 항목을 삽입 하는 경우는 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버 로드는 기존 캐시 엔트리를 반환 하지만 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드 오버 로드는 그렇지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-117">When these methods insert a cache entry, if a matching entry is found in the cache, the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads return the existing cache entry, but the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads do not.</span></span> <span data-ttu-id="448e2-118">이러한 다른 메서드 오버 로드를 있으면 기존 캐시 항목의 필요 여부에 따라 코드를 최적화 하기 위해 호출자가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-118">Having these different method overloads enables callers to optimize their code based on whether they need the existing cache entry.</span></span> <span data-ttu-id="448e2-119">분산 된 캐시에서 사용 하 여 기존 값을 반환 된 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드를 사용 하 여 부울 값을 반환 하는 데 비해 수 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="448e2-119">In distributed caches, returning an existing value by using the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method might be more expensive than returning a Boolean value by using <xref:System.Runtime.Caching.ObjectCache.Add%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (item As CacheItem, policy As CacheItemPolicy) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Add(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="448e2-120">추가할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-120">The object to add.</span></span></param>
        <param name="policy"><span data-ttu-id="448e2-121">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-121">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="448e2-122">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-122">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <summary><span data-ttu-id="448e2-123">파생 클래스에서 재정의된 경우 캐시 엔트리를 캐시에 <see cref="T:System.Runtime.Caching.CacheItem" /> 인스턴스로 삽입하려고 하고 해당 엔트리를 제거하는 방법에 대한 정보를 추가합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-123">When overridden in a derived class, tries to insert a cache entry into the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance, and adds details about how the entry should be evicted.</span></span></summary>
        <returns>
          <span data-ttu-id="448e2-124">삽입이 성공하면 <see langword="true" />이고, 캐시에 <paramref name="item" />과 키가 같은 엔트리가 이미 있으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-124"><see langword="true" /> if insertion succeeded, or <see langword="false" /> if there is an already an entry in the cache that has the same key as <paramref name="item" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-125"><xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드 오버 로드는 가상 (추상이 아님)에 <xref:System.Runtime.Caching.ObjectCache> 때문에 클래스는 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드를 내부적으로 호출 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-125">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="448e2-126">이 캐시 자가 제공 해야 하는 메서드 오버 로드의 수를 줄입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-126">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="448e2-127">캐시를 구현 하는 경우 특별 한 동작에 대 한 필요 하지 않습니다는 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드를 구현할 수 있는 것은 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-127">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="448e2-128">캐시 엔트리의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-128">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="448e2-129">삽입할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-129">The object to insert.</span></span></param>
        <param name="absoluteExpiration"><span data-ttu-id="448e2-130">캐시 엔트리가 만료될 고정된 날짜 및 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-130">The fixed date and time at which the cache entry will expire.</span></span> <span data-ttu-id="448e2-131"><see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /> 메서드가 호출되는 경우 이 매개 변수가 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-131">This parameter is required when the <see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /> method is called.</span></span></param>
        <param name="regionName"><span data-ttu-id="448e2-132">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-132">Optional.</span></span> <span data-ttu-id="448e2-133">영역이 구현된 경우 캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-133">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="448e2-134">영역은 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]에서 구현되지 않기 때문에 기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-134">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="448e2-135">파생 클래스에서 재정의된 경우 기존 캐시 엔트리를 덮어쓰지 않고 캐시 엔트리를 캐시에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-135">When overridden in a derived class, inserts a cache entry into the cache without overwriting any existing cache entry.</span></span></summary>
        <returns>
          <span data-ttu-id="448e2-136">삽입이 성공하면 <see langword="true" />이고, 캐시에 <paramref name="key" />과 키가 같은 엔트리가 이미 있으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-136"><see langword="true" /> if insertion succeeded, or <see langword="false" /> if there is an already an entry in the cache that has the same key as <paramref name="key" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-137"><xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드 오버 로드는 가상 (추상이 아님)에 <xref:System.Runtime.Caching.ObjectCache> 때문에 클래스는 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드를 내부적으로 호출 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-137">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="448e2-138">이 캐시 자가 제공 해야 하는 메서드 오버 로드의 수를 줄입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-138">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="448e2-139">캐시를 구현 하는 경우 특별 한 동작에 대 한 필요 하지 않습니다는 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드를 구현할 수 있는 것은 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-139">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="448e2-140">캐시 엔트리의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-140">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="448e2-141">삽입할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-141">The object to insert.</span></span></param>
        <param name="policy"><span data-ttu-id="448e2-142">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-142">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="448e2-143">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-143">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <param name="regionName"><span data-ttu-id="448e2-144">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-144">Optional.</span></span> <span data-ttu-id="448e2-145">영역이 구현된 경우 캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-145">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="448e2-146">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-146">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="448e2-147">파생 클래스에서 재정의된 경우 캐시 엔트리를 캐시에 삽입하고 엔트리의 제거 방법에 대한 정보를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-147">When overridden in a derived class, inserts a cache entry into the cache, specifying information about how the entry will be evicted.</span></span></summary>
        <returns>
          <span data-ttu-id="448e2-148">삽입 시도가 성공하면 <see langword="true" />이고, 캐시에 <paramref name="key" />와 키가 같은 엔트리가 이미 있으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-148"><see langword="true" /> if the insertion try succeeds, or <see langword="false" /> if there is an already an entry in the cache with the same key as <paramref name="key" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-149"><xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드 오버 로드는 가상 (추상이 아님)에 <xref:System.Runtime.Caching.ObjectCache> 때문에 클래스는 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드를 내부적으로 호출 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-149">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="448e2-150">이 캐시 자가 제공 해야 하는 메서드 오버 로드의 수를 줄입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-150">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="448e2-151">캐시를 구현 하는 경우 특별 한 동작에 대 한 필요 하지 않습니다는 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드를 구현할 수 있는 것은 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-151">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOrGetExisting">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="448e2-152">파생 클래스에서 재정의된 경우 캐시 엔트리를 캐시에 삽입하려고 하고 키가 일치하는 기존 캐시 엔트리를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-152">When overridden in a derived class, tries to insert a cache entry into the cache, and returns an existing cache entry with a matching key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-153"><xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버 로드를 캐시에 항목을 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-153">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads insert an entry into the cache.</span></span> <span data-ttu-id="448e2-154">일치 하는 키가 캐시 엔트리가 이미 있는 경우 기존 항목을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-154">If a cache entry with a matching key already exists, they return the existing entry.</span></span> <span data-ttu-id="448e2-155">캐시 항목 수는 <xref:System.Runtime.Caching.CacheItem> 개체 또는 일반 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-155">The cache entry can be a <xref:System.Runtime.Caching.CacheItem> object or a generic object.</span></span>  
  
 <span data-ttu-id="448e2-156">하나의 차이가 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 오버 로드와 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-156">There is one difference between the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> overloads and the <xref:System.Runtime.Caching.ObjectCache.Add%2A> overloads.</span></span> <span data-ttu-id="448e2-157">이러한 오버 로드 된 메서드를 삽입 하려고 캐시 항목에는 기존 일치 하는 키 넣었는지 캐시 항목을 기존 항목이 발견 되는 경우는 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 오버 로드는 기존 캐시 엔트리를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-157">When these overloaded methods try to insert a cache entry, if an existing entry is found that has a key that matches an existing inserted cache entry, the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> overloads return the existing cache entry.</span></span> <span data-ttu-id="448e2-158"><xref:System.Runtime.Caching.ObjectCache.Add%2A> 오버 로드는 그렇지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-158">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> overloads do not.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem AddOrGetExisting (System.Runtime.Caching.CacheItem value, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem AddOrGetExisting(class System.Runtime.Caching.CacheItem value, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (value As CacheItem, policy As CacheItemPolicy) As CacheItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Runtime::Caching::CacheItem ^ AddOrGetExisting(System::Runtime::Caching::CacheItem ^ value, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="448e2-159">삽입할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-159">The object to insert.</span></span></param>
        <param name="policy"><span data-ttu-id="448e2-160">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-160">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="448e2-161">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-161">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <summary><span data-ttu-id="448e2-162">파생 클래스에서 재정의된 경우 엔트리를 제거하는 방법에 대한 정보를 지정하여 지정된 <see cref="T:System.Runtime.Caching.CacheItem" /> 개체를 캐시에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-162">When overridden in a derived class, inserts the specified <see cref="T:System.Runtime.Caching.CacheItem" /> object into the cache, specifying information about how the entry will be evicted.</span></span></summary>
        <returns><span data-ttu-id="448e2-163">키가 같은 캐시 엔트리가 있으면 지정된 캐시 엔트리이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-163">If a cache entry with the same key exists, the specified cache entry; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="448e2-164">캐시 엔트리의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-164">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="448e2-165">삽입할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-165">The object to insert.</span></span></param>
        <param name="absoluteExpiration"><span data-ttu-id="448e2-166">캐시 엔트리가 만료될 고정된 날짜 및 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-166">The fixed date and time at which the cache entry will expire.</span></span></param>
        <param name="regionName"><span data-ttu-id="448e2-167">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-167">Optional.</span></span> <span data-ttu-id="448e2-168">영역이 구현된 경우 캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-168">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="448e2-169">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-169">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="448e2-170">파생 클래스에서 재정의된 경우 캐시 엔트리의 키와 개체, 절대 만료 값 및 캐시를 추가할 선택적 영역을 사용하여 캐시 엔트리를 캐시에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-170">When overridden in a derived class, inserts a cache entry into the cache, by using a key, an object for the cache entry, an absolute expiration value, and an optional region to add the cache into.</span></span></summary>
        <returns><span data-ttu-id="448e2-171">키가 같은 캐시 엔트리가 있으면 지정된 캐시 엔트리의 값이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-171">If a cache entry with the same key exists, the specified cache entry's value; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-172">이 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> 메서드 오버 로드 하지는 개체 값을 반환는 <xref:System.Runtime.Caching.CacheItem> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-172">This <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method overload returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="448e2-173">캐시 엔트리의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-173">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="448e2-174">삽입할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-174">The object to insert.</span></span></param>
        <param name="policy"><span data-ttu-id="448e2-175">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-175">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="448e2-176">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-176">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <param name="regionName"><span data-ttu-id="448e2-177">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-177">Optional.</span></span> <span data-ttu-id="448e2-178">영역이 구현된 경우 캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-178">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="448e2-179">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-179">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="448e2-180">파생 클래스에서 재정의된 경우 캐시 엔트리의 키와 값 및 해당 엔트리를 제거하는 방법에 대한 정보를 지정하여 캐시 엔트리를 캐시에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-180">When overridden in a derived class, inserts a cache entry into the cache, specifying a key and a value for the cache entry, and information about how the entry will be evicted.</span></span></summary>
        <returns><span data-ttu-id="448e2-181">키가 같은 캐시 엔트리가 있으면 지정된 캐시 엔트리의 값이고, 그렇지 않으면 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-181">If a cache entry with the same key exists, the specified cache entry's value; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-182"><xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29> 메서드는 개체 값을 하지 반환는 <xref:System.Runtime.Caching.CacheItem> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-182">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29> method returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public abstract bool Contains (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Contains (key As String, Optional regionName As String = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="448e2-183">캐시 엔트리의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-183">A unique identifier for the cache entry.</span></span></param>
        <param name="regionName"><span data-ttu-id="448e2-184">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-184">Optional.</span></span> <span data-ttu-id="448e2-185">영역이 구현된 경우 캐시를 찾을 수 있는 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-185">A named region in the cache where the cache can be found, if regions are implemented.</span></span> <span data-ttu-id="448e2-186">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-186">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="448e2-187">파생 클래스에서 재정의된 경우 캐시 엔트리가 캐시에 이미 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-187">When overridden in a derived class, checks whether the cache entry already exists in the cache.</span></span></summary>
        <returns>
          <span data-ttu-id="448e2-188">캐시에 키 값이 <paramref name="key" />와 같은 캐시 엔트리가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-188"><see langword="true" /> if the cache contains a cache entry with the same key value as <paramref name="key" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCacheEntryChangeMonitor">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCacheEntryChangeMonitor (keys As IEnumerable(Of String), Optional regionName As String = null) As CacheEntryChangeMonitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheEntryChangeMonitor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="448e2-189">모니터링할 캐시 엔트리의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-189">The unique identifiers for cache entries to monitor.</span></span></param>
        <param name="regionName"><span data-ttu-id="448e2-190">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-190">Optional.</span></span> <span data-ttu-id="448e2-191">영역이 구현된 경우 <c>keys</c> 매개 변수의 캐시 키가 있는 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-191">A named region in the cache where the cache keys in the <c>keys</c> parameter exist, if regions are implemented.</span></span> <span data-ttu-id="448e2-192">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-192">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="448e2-193">파생 클래스에서 재정의된 경우 지정된 캐시 엔트리의 변경에 대한 응답으로 이벤트를 트리거할 수 있는 <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> 개체를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-193">When overridden in a derived class, creates a <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> object that can trigger events in response to changes to specified cache entries.</span></span></summary>
        <returns><span data-ttu-id="448e2-194">캐시의 캐시 엔트리를 모니터링하는 변경 모니터입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-194">A change monitor that monitors cache entries in the cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-195">파생 된 경우 <xref:System.Runtime.Caching.ObjectCache> 클래스가 재정의 기본 <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A> 캐시 구현을 작성 해야 메서드를 한 <xref:System.Runtime.Caching.CacheEntryChangeMonitor> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-195">When a derived <xref:System.Runtime.Caching.ObjectCache> class overrides the base <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A> method, the cache implementation must create a <xref:System.Runtime.Caching.CacheEntryChangeMonitor> object.</span></span> <span data-ttu-id="448e2-196">이 특수 변경 모니터에 지정 된 캐시 항목에는 변경 될 때 호출자에 게 알리는 `keys` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-196">This specialized change monitor notifies callers when there are changes to the cache entries that are specified in the `keys` parameter.</span></span> <span data-ttu-id="448e2-197">예를 들어 모니터링 되는 항목에는 `keys` 이 메서드에서 만든 변경 모니터는 이벤트를 트리거합니다, 매개 변수를 업데이트 또는 캐시에서 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-197">For example, if a monitored item in the `keys` parameter is updated or removed from the cache, the change monitor created by this method triggers an event.</span></span>  
  
 <span data-ttu-id="448e2-198">캐시를 구현 하는 명명 된 캐시 영역을 지 원하는 경우 문자열 값으로 지정할 수 있습니다는 `regionName` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-198">If a cache implementation supports named cache regions, a string value can be specified as the `regionName` parameter.</span></span> <span data-ttu-id="448e2-199">그렇지 않으면 매개 변수 기본값으로 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-199">Otherwise, the parameter defaults to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="448e2-200">일부 캐시 구현 변경 모니터 캐시 항목을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-200">Not all cache implementations support cache-entry change monitors.</span></span> <span data-ttu-id="448e2-201">캐시 구현 지원 하는지 확인 하려면 <xref:System.Runtime.Caching.CacheEntryChangeMonitor> 개체를 특정 캐시 구현에 대 한 설명서를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="448e2-201">To determine whether your cache implementation supports <xref:System.Runtime.Caching.CacheEntryChangeMonitor> objects, see the documentation for the specific cache implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCacheCapabilities">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultCacheCapabilities As DefaultCacheCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Runtime::Caching::DefaultCacheCapabilities DefaultCacheCapabilities { System::Runtime::Caching::DefaultCacheCapabilities get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.DefaultCacheCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="448e2-202">파생 클래스에서 재정의된 경우 캐시 구현에서 제공하는 기능 설명을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-202">When overridden in a derived class, gets a description of the features that a cache implementation provides.</span></span></summary>
        <value><span data-ttu-id="448e2-203">캐시 구현의 기본 기능을 나타내는 플래그의 비트 조합입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-203">A bitwise combination of flags that indicate the default capabilities of a cache implementation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract object Get (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Get(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (key As String, Optional regionName As String = null) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="448e2-204">가져올 캐시 엔트리의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-204">A unique identifier for the cache entry to get.</span></span></param>
        <param name="regionName"><span data-ttu-id="448e2-205">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-205">Optional.</span></span> <span data-ttu-id="448e2-206">영역이 구현된 경우 캐시 엔트리가 추가된 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-206">A named region in the cache to which the cache entry was added, if regions are implemented.</span></span> <span data-ttu-id="448e2-207">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-207">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="448e2-208">파생 클래스에서 재정의된 경우 지정된 캐시 엔트리를 캐시에서 개체로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-208">When overridden in a derived class, gets the specified cache entry from the cache as an object.</span></span></summary>
        <returns><span data-ttu-id="448e2-209"><paramref name="key" />로 식별되는 캐시 엔트리입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-209">The cache entry that is identified by <paramref name="key" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheItem">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem GetCacheItem (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem GetCacheItem(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCacheItem (key As String, Optional regionName As String = null) As CacheItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="448e2-210">가져올 캐시 엔트리의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-210">A unique identifier for the cache entry to get.</span></span></param>
        <param name="regionName"><span data-ttu-id="448e2-211">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-211">Optional.</span></span> <span data-ttu-id="448e2-212">영역이 구현된 경우 캐시가 추가된 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-212">A named region in the cache to which the cache was added, if regions are implemented.</span></span> <span data-ttu-id="448e2-213">영역은 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]에서 구현되지 않기 때문에 기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-213">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="448e2-214">파생 클래스에서 재정의된 경우 지정된 캐시 엔트리를 캐시에서 <see cref="T:System.Runtime.Caching.CacheItem" /> 인스턴스로 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-214">When overridden in a derived class, gets the specified cache entry from the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance.</span></span></summary>
        <returns><span data-ttu-id="448e2-215"><paramref name="key" />로 식별되는 캐시 엔트리입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-215">The cache entry that is identified by <paramref name="key" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-216">일부 캐시 구현 길어질 수 있으므로이 메서드 오버 로드가 존재는 <xref:System.Runtime.Caching.CacheItem> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-216">This method overload exists because some cache implementations might extend the <xref:System.Runtime.Caching.CacheItem> class.</span></span> <span data-ttu-id="448e2-217">이 경우에 <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> 메서드 오버 로드는 반드시 캐시 된 데이터에 대 한 모든 정보를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-217">In that case, the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method overload will not necessarily return all the information about cached data.</span></span> <span data-ttu-id="448e2-218">그러나는 <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> 메서드 오버 로드 보다 더 캐시 값을 반환 하도록 사용자 지정 캐시를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-218">However, the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method overload enables custom caches to return more than just the cache value.</span></span>  
  
 <span data-ttu-id="448e2-219"><xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> 방법은 <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> 메서드와 비슷하지만 <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> 메서드 반환 반환로 캐시 엔트리를 <xref:System.Runtime.Caching.CacheItem> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="448e2-219">The <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method is like the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method, except that the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method returns return the cache entry as a <xref:System.Runtime.Caching.CacheItem> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public abstract long GetCount (string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetCount(string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCount (Optional regionName As String = null) As Long" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="regionName"><span data-ttu-id="448e2-220">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-220">Optional.</span></span> <span data-ttu-id="448e2-221">영역이 구현된 경우 캐시 엔트리 수를 계산해야 하는 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-221">A named region in the cache for which the cache entry count should be computed, if regions are implemented.</span></span> <span data-ttu-id="448e2-222">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-222">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="448e2-223">파생 클래스에서 재정의된 경우 캐시의 총 캐시 엔트리 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-223">When overridden in a derived class, gets the total number of cache entries in the cache.</span></span></summary>
        <returns><span data-ttu-id="448e2-224">캐시에 있는 총 캐시 엔트리 수입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-224">The number of cache entries in the cache.</span></span> <span data-ttu-id="448e2-225"><paramref name="regionName" />이 <see langword="null" />이 아니면 지정된 캐시 영역에 있는 엔트리의 수를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-225">If <paramref name="regionName" /> is not <see langword="null" />, the count indicates the number of entries that are in the specified cache region.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="448e2-226">파생 클래스에서 재정의된 경우 캐시 엔트리의 컬렉션을 반복하는 데 사용할 수 있는 열거자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-226">When overridden in a derived class, creates an enumerator that can be used to iterate through a collection of cache entries.</span></span></summary>
        <returns><span data-ttu-id="448e2-227">캐시의 캐시 항목에 대한 액세스를 제공하는 열거자 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-227">The enumerator object that provides access to the cache entries in the cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-228">캐시 구현자는 무시 하 고 캐시 항목의 컬렉션을 반복 하는 사용자 지정 수단을 제공 하려면이 메서드를 확장할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-228">Cache implementers can override and extend this method to provide a custom means of iterating through a collection of cache entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="448e2-229">열거자를 반환 합니다. 일반적으로 전체 캐시 항목을 반환 하는 보다 더 비용이 많이 드는 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-229">Returning an enumerator is typically a more expensive operation than returning the entire cache entry.</span></span>  
  
 <span data-ttu-id="448e2-230">이 메서드는 명시적 인터페이스 구현 하는 <xref:System.Runtime.Caching.ObjectCache> 에 대 한 클래스에는 <xref:System.Collections.IEnumerable.GetEnumerator%2A> 및 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="448e2-230">This method is called by the explicit interface implementations that the <xref:System.Runtime.Caching.ObjectCache> class has for the <xref:System.Collections.IEnumerable.GetEnumerator%2A> and <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValues">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="448e2-231">캐시 엔트리 집합을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-231">Gets a set of cache entries.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValues (keys As IEnumerable(Of String), Optional regionName As String = null) As IDictionary(Of String, Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="448e2-232">가져올 캐시 엔트리의 고유 식별자 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-232">A collection of unique identifiers for the cache entries to get.</span></span></param>
        <param name="regionName"><span data-ttu-id="448e2-233">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-233">Optional.</span></span> <span data-ttu-id="448e2-234">영역이 구현된 경우 캐시 엔트리가 추가된 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-234">A named region in the cache to which the cache entry or entries were added, if regions are implemented.</span></span> <span data-ttu-id="448e2-235">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-235">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="448e2-236">파생 클래스에서 재정의된 경우 지정된 키와 일치하는 캐시 엔트리 집합을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-236">When overridden in a derived class, gets a set of cache entries that correspond to the specified keys.</span></span></summary>
        <returns><span data-ttu-id="448e2-237">캐시 엔트리를 나타내는 키/값 쌍의 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-237">A dictionary of key/value pairs that represent cache entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-238"><xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> 메서드 오버 로드는 단일 네트워크를 호출 하는 동안 여러 캐시 항목이 캐시에서 가져올 수 있는 분산 된 캐시에 대 한 성능 최적화.</span><span class="sxs-lookup"><span data-stu-id="448e2-238">The <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload is a performance optimization for distributed caches that support fetching multiple cache entries from the cache during a single network call.</span></span>  
  
 <span data-ttu-id="448e2-239">호출자가 하나 이상의 키 메서드를 전달할 수는 없지만 보장이 없습니다 모든 키 캐시의 엔트리를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-239">Although a caller can pass one or more keys to the method, there is no guarantee that all keys represent entries in the cache.</span></span> <span data-ttu-id="448e2-240">따라서 반환 된 사전 메서드에 전달 된 키의 수보다 적은 수의 항목을 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-240">Therefore, the returned dictionary might contain fewer items than the number of keys that were passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (string regionName, params string[] keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(string regionName, string[] keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValues (regionName As String, ParamArray keys As String()) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetValues(System::String ^ regionName, ... cli::array &lt;System::String ^&gt; ^ keys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
        <Parameter Name="keys" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="regionName"><span data-ttu-id="448e2-241">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-241">Optional.</span></span> <span data-ttu-id="448e2-242">영역이 구현된 경우 캐시 엔트리가 추가된 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-242">A named region in the cache to which the cache entry or entries were added, if regions are implemented.</span></span> <span data-ttu-id="448e2-243">영역은 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]에서 구현되지 않기 때문에 기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-243">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is <see langword="null" />.</span></span></param>
        <param name="keys"><span data-ttu-id="448e2-244">가져올 캐시 엔트리의 고유 식별자 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-244">A collection of unique identifiers for the cache entries to get.</span></span></param>
        <summary><span data-ttu-id="448e2-245">지정된 키에 해당하는 캐시 엔트리 집합을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-245">Gets a set of cache entries that correspond to the specified keys.</span></span></summary>
        <returns><span data-ttu-id="448e2-246">캐시 엔트리를 나타내는 키/값 쌍의 사전입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-246">A dictionary of key/value pairs that represent cache entries.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-247"><xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType> 메서드 오버 로드는 <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> 메서드 오버 로드 하지만 C#과 같은 관리 되는 언어에서 지원 되는 선택적 매개 변수 구문을 사용 하 여 명명 된 영역을 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-247">The <xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType> method overload is like the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload, but lets you pass the named region by using optional parameter syntax that is supported by managed languages such as C#.</span></span>  
  
 <span data-ttu-id="448e2-248">때문에이 메서드는 가상 메서드는 <xref:System.Runtime.Caching.ObjectCache> 클래스를 전달 하는 기본 구현을 제공는 `params` 배열을 <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-248">This method is a virtual method because the <xref:System.Runtime.Caching.ObjectCache> class provides a default implementation that passes the `params` array to the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public static IServiceProvider Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IServiceProvider Host" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Host" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Host As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property IServiceProvider ^ Host { IServiceProvider ^ get(); void set(IServiceProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="448e2-249"><see cref="T:System.Runtime.Caching.ObjectCache" /> 구현에 사용할 수 있고 <see cref="T:System.Runtime.Caching.ObjectCache" /> 구현에 호스트별 서비스를 제공할 수 있는 관리되는 호스팅 환경에 대한 참조를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-249">Gets or set a reference to a managed hosting environment that is available to <see cref="T:System.Runtime.Caching.ObjectCache" /> implementations and that can provide host-specific services to <see cref="T:System.Runtime.Caching.ObjectCache" /> implementations.</span></span></summary>
        <value><span data-ttu-id="448e2-250">캐시를 인식하는 관리되는 호스팅 환경에 대한 참조입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-250">A reference to a cache-aware managed hosting environment.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-251"><xref:System.Runtime.Caching.ObjectCache.Host%2A> 속성에서 사용 하기 위한 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 환경와.NET Framework에 의존 하는 동작을 구현 하는 캐시 구현 환경을 호스팅합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-251">The <xref:System.Runtime.Caching.ObjectCache.Host%2A> property is intended for use by [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] host environments and by cache implementations that implement behavior that depends on the .NET Framework host environment.</span></span>  
  
 <span data-ttu-id="448e2-252">다음 표에서 관리 호스팅 환경에서 사용할 수 있는 정보와를 사용할 수 있는 호스트 환경 서비스 집합이 나열 <xref:System.Runtime.Caching.ObjectCache> 구현을 통해는 <xref:System.Runtime.Caching.ObjectCache.Host%2A> 속성:</span><span class="sxs-lookup"><span data-stu-id="448e2-252">The following table lists the set of host environment services that might be available from a managed hosting environment and that are available to <xref:System.Runtime.Caching.ObjectCache> implementations through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property:</span></span>  
  
|<span data-ttu-id="448e2-253">서비스</span><span class="sxs-lookup"><span data-stu-id="448e2-253">Service</span></span>|<span data-ttu-id="448e2-254">설명</span><span class="sxs-lookup"><span data-stu-id="448e2-254">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.Runtime.Caching.Hosting.IApplicationIdentifier>|<span data-ttu-id="448e2-255">예: 성능 카운터를 확인 하는 기능에 대 한 캐시 구현에 의해 필요할 수 있는 응용 프로그램 도메인 식별자를 제공 하는 호스트 환경이 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-255">Lets host environments provide application domain identifiers that might be needed by a cache implementation for features such as identifying performance counters.</span></span>|  
|<xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>|<span data-ttu-id="448e2-256">호스트 환경에서 제공 되는 것을 사용 하는 대신 사용자 지정 파일 변경 알림 시스템을 제공할 수 있습니다는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-256">Lets host environments provide a custom file-change notification system, instead of using the one provided in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>|  
|<xref:System.Runtime.Caching.Hosting.IMemoryCacheManager>|<span data-ttu-id="448e2-257">호스트 환경에 캐시 구현 보고서 캐시 메모리 소비량을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-257">Lets cache implementations report cache memory consumption to the host environment.</span></span> <span data-ttu-id="448e2-258">따라서 호스트 환경이 여러 캐시 구현에서 메모리 소비를 중앙에서 관리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-258">This enables host environments to centrally manage memory consumption across multiple cache implementations.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="448e2-259">이 속성 값의 호출자에 게 무제한 코드 액세스 보안 권한이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-259">Callers of this property value require unrestricted code access security permissions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="448e2-260">속성에 할당되는 값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-260">The value being assigned to the property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="448e2-261">속성 값을 두 번 이상 설정하기 위한 시도가 있었습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-261">An attempt was made to set the property value more than one time.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="448e2-262">이 속성의 모든 접근자에 대 한 완전 신뢰 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-262">for full trust for all accessors of this property.</span></span> <span data-ttu-id="448e2-263">부분적으로 신뢰할 수 있는 코드에서이 속성을 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-263">This property cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="InfiniteAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset InfiniteAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset InfiniteAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteAbsoluteExpiration As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset InfiniteAbsoluteExpiration;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="448e2-264">캐시 엔트리에 절대 만료 시간이 없음을 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-264">Gets a value that indicates that a cache entry has no absolute expiration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-265">와 캐시에 삽입 되는 캐시 엔트리에 <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> 절대 점을 시간에서 기준으로 필드 값이 만료 값은 만료 되지 않도록 해야 하는 대로 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-265">A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> field value set as the expiration value should never expire based on an absolute point in time.</span></span> <span data-ttu-id="448e2-266">그러나 메모리 부족으로 인 한 변경 모니터 이벤트 제거와 같은 특정 캐시 구현에 의해 결정 된 다른 이유로이 설정 사용 하 여 캐시 엔트리를 캐시에서 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-266">However, a cache entry with this setting can be evicted from the cache for other reasons that are determined by a particular cache implementation, such as a change-monitor event eviction caused by memory pressure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="448e2-267">캐시에 있는 캐시 엔트리의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-267">A unique identifier for a cache entry in the cache.</span></span></param>
        <summary><span data-ttu-id="448e2-268"><see cref="T:System.Runtime.Caching.ObjectCache" /> 클래스의 기본 인덱서를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-268">Gets or sets the default indexer for the <see cref="T:System.Runtime.Caching.ObjectCache" /> class.</span></span></summary>
        <value><span data-ttu-id="448e2-269">캐시 인스턴스의 인덱서로 작동하는 키입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-269">A key that serves as an indexer into the cache instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-270">이 속성의 set 접근자의 동작은 같은 <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="448e2-270">The behavior of the set accessor of this property is like the <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method.</span></span> <span data-ttu-id="448e2-271">내부적으로 캐시 구현에 지정된 된 값의 절대 만료를 설정할 수는 <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> 메서드.</span><span class="sxs-lookup"><span data-stu-id="448e2-271">Internally, a cache implementation could set the absolute expiration of the specified value to the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> method.</span></span> <span data-ttu-id="448e2-272">그러나이 문제는 결국 캐시 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-272">However this behavior is ultimately up to the cache implementation.</span></span>  
  
 <span data-ttu-id="448e2-273">Get 접근자의 동작은 호출 처럼는 <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29> 메서드와 사용 하 여 `null` 영역 이름에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-273">The behavior of get accessor is like calling the <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29> method and using `null` for the region name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="448e2-274">특정한 <see cref="T:System.Runtime.Caching.ObjectCache" /> 인스턴스의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-274">Gets the name of a specific <see cref="T:System.Runtime.Caching.ObjectCache" /> instance.</span></span></summary>
        <value><span data-ttu-id="448e2-275">특정한 캐시 인스턴스의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-275">The name of a specific cache instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-276">일부 캐시 구현에는 단일 응용 프로그램에서 실행 되는 캐시를 여러 개 지원할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-276">Some cache implementations might support multiple instances of the cache that is running in a single application.</span></span> <span data-ttu-id="448e2-277">이 속성을 사용 하면 캐시 구현자는 특정 캐시 인스턴스를 식별 하는 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-277">This property lets cache implementers return a name that identifies a specific cache instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoSlidingExpiration As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan NoSlidingExpiration;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="448e2-278">캐시 엔트리에 상대(sliding) 만료 시간이 없음을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-278">Indicates that a cache entry has no sliding expiration time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-279">기간 또는 정의 된 기간에 따라 만료를 상대 만료는 라고도 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-279">Expiration that is based on duration or a defined window of time is also referred to as sliding expiration.</span></span> <span data-ttu-id="448e2-280">일반적으로 상대 만료 기반으로 하는 항목을 제거 하는 캐시 구현 시간의 하며 지정한 창에 액세스 하지 않은 항목을 제거 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-280">Normally, a cache implementation that evicts items that are based on sliding expiration will remove an item that has not been accessed in the specified window of time.</span></span>  
  
 <span data-ttu-id="448e2-281">와 캐시에 삽입 되는 캐시 엔트리에 <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> 필드 값이 설정으로 슬라이딩 기간이으로 인해 만료 값을 제거 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-281">A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> field value set as the expiration value should never be evicted because of non-activity in a sliding time window.</span></span> <span data-ttu-id="448e2-282">그러나 절대 만료 나 일부 다른 eviction이 이벤트가 발생 하면 이러한는 변경 모니터 또는 메모리가 중 캐시 항목을 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-282">However, a cache item can be evicted if it has an absolute expiration, or if some other eviction event occurs, such a change monitor or memory pressure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract object Remove (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Remove(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Remove (key As String, Optional regionName As String = null) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="448e2-283">캐시 엔트리의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-283">A unique identifier for the cache entry.</span></span></param>
        <param name="regionName"><span data-ttu-id="448e2-284">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-284">Optional.</span></span> <span data-ttu-id="448e2-285">영역이 구현된 경우 캐시 엔트리가 추가된 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-285">A named region in the cache to which the cache entry was added, if regions are implemented.</span></span> <span data-ttu-id="448e2-286">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-286">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="448e2-287">파생 클래스에서 재정의된 경우 캐시에서 캐시 엔트리를 제거합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-287">When overridden in a derived class, removes the cache entry from the cache.</span></span></summary>
        <returns><span data-ttu-id="448e2-288">키로 지정된 제거되는 캐시 엔트리의 값을 나타내는 개체이며, 지정된 엔트리가 없는 경우 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-288">An object that represents the value of the removed cache entry that was specified by the key, or <see langword="null" /> if the specified entry was not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-289">캐시 항목이 캐시에 해당 하는 경우 사용자 지정 캐시 구현에서이 메서드를 재정의 하는 경우 `key`, 제거 된 항목의 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-289">If you override this method in a custom cache implementation, if there is a cache entry in the cache that corresponds to `key`, the value of the removed item should be returned.</span></span> <span data-ttu-id="448e2-290">메서드는 반환 해야 하는 경우 캐시에서 제거 된 아무, `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-290">If nothing was removed from the cache, the method should return `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="448e2-291">일부 분산된 캐시 구현 캐시에서 제거 된 값을 반환 하는 기능을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-291">Some distributed cache implementations might not support the ability to return the value that was removed from the cache.</span></span> <span data-ttu-id="448e2-292">캐시 구현이 제거 된 캐시 항목의 값 반환을 지원 하지 않는 때문일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-292">This might be because the cache implementation does not support returning the value of a removed cache item.</span></span> <span data-ttu-id="448e2-293">반환 값은 너무 비용이 저렴 한 개체가 마샬링 때문에 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-293">It might also be because marshaling the object as a return value is too expensive.</span></span> <span data-ttu-id="448e2-294">이러한 경우 캐시 구현을 반환할 수 있습니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-294">In such cases, cache implementations can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Set">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="448e2-295">파생 클래스에서 재정의된 경우 캐시 엔트리를 캐시에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-295">When overridden in a derived class, inserts a cache entry into the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-296">일반적인 동작의 <xref:System.Runtime.Caching.ObjectCache.Set%2A> 메서드 오버 로드는 삽입 또는 업데이트 작업 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-296">The typical behavior of the <xref:System.Runtime.Caching.ObjectCache.Set%2A> overload methods is an insert-or-update operation.</span></span> <span data-ttu-id="448e2-297">캐시 항목은 지정 된 항목이 없거나 캐시 항목이 이미 있는 경우 새 값으로 업데이트 된 경우 새 항목으로 삽입 되거나 합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-297">A cache entry is either inserted as a new entry if the specified entry does not exist, or the cache entry is updated with a new value if it already exists.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (item As CacheItem, policy As CacheItemPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Set(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="448e2-298">추가할 캐시 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-298">The cache item to add.</span></span></param>
        <param name="policy"><span data-ttu-id="448e2-299">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-299">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="448e2-300">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-300">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <summary><span data-ttu-id="448e2-301">파생 클래스에서 재정의된 경우 엔트리를 제거하는 방법에 대한 정보를 지정하여 캐시 엔트리를 캐시에 <see cref="T:System.Runtime.Caching.CacheItem" /> 인스턴스로 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-301">When overridden in a derived class, inserts the cache entry into the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance, specifying information about how the entry will be evicted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-302">경우에 대 한 키 `item` 존재 하지 않는 `item` 새 캐시 항목으로 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-302">If the key for `item` does not exist, `item` is inserted as a new cache entry.</span></span> <span data-ttu-id="448e2-303">경우 일치 하는 키를 가진 항목이 `item` 의 값 존재 `item` 업데이트 하거나 기존 캐시 항목의 값을 덮어쓰는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-303">If an item with a key that matches `item` exists, the value from `item` is used to update or overwrite the value of the existing cache entry.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="448e2-304">캐시 엔트리의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-304">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="448e2-305">삽입할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-305">The object to insert.</span></span></param>
        <param name="absoluteExpiration"><span data-ttu-id="448e2-306">캐시 엔트리가 만료될 고정된 날짜 및 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-306">The fixed date and time at which the cache entry will expire.</span></span></param>
        <param name="regionName"><span data-ttu-id="448e2-307">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-307">Optional.</span></span> <span data-ttu-id="448e2-308">영역이 구현된 경우 캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-308">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="448e2-309">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-309">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="448e2-310">파생 클래스에서 재정의된 경우 시간 기반 만료 정보를 지정하여 캐시 엔트리를 캐시에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-310">When overridden in a derived class, inserts a cache entry into the cache, specifying time-based expiration details.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-311">일치 하는 항목이 있으면 `key` 캐시에 존재 하지 않는 `value` 및 `key` 새 캐시 항목으로 삽입 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-311">If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry.</span></span> <span data-ttu-id="448e2-312">경우 일치 하는 키를 가진 항목이 `item` 있으면 캐시 항목을 업데이트 하거나 사용 하 여 덮어쓸 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-312">If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="448e2-313">캐시 엔트리의 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-313">A unique identifier for the cache entry.</span></span></param>
        <param name="value"><span data-ttu-id="448e2-314">삽입할 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-314">The object to insert.</span></span></param>
        <param name="policy"><span data-ttu-id="448e2-315">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-315">An object that contains eviction details for the cache entry.</span></span> <span data-ttu-id="448e2-316">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-316">This object provides more options for eviction than a simple absolute expiration.</span></span></param>
        <param name="regionName"><span data-ttu-id="448e2-317">선택 사항입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-317">Optional.</span></span> <span data-ttu-id="448e2-318">영역이 구현된 경우 캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-318">A named region in the cache to which the cache entry can be added, if regions are implemented.</span></span> <span data-ttu-id="448e2-319">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-319">The default value for the optional parameter is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="448e2-320">파생 클래스에서 재정의된 경우 캐시 엔트리를 캐시에 삽입합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-320">When overridden in a derived class, inserts a cache entry into the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-321">이 메서드 오버 로드에서 절대 만료 시간을 기준으로 사용할 수 있는 것 보다 더 많은 제거 또는 만료 정보를 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-321">This method overload lets you provide more eviction or expiration details than those that are available in time-based absolute expiration.</span></span>  
  
 <span data-ttu-id="448e2-322">일치 하는 항목이 있으면 `key` 캐시에 존재 하지 않는 `value` 및 `key` 새 캐시 항목으로 삽입 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-322">If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry.</span></span> <span data-ttu-id="448e2-323">경우 일치 하는 키를 가진 항목이 `item` 있으면 캐시 항목을 업데이트 하거나 사용 하 여 덮어쓸 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-323">If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,object&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object)) Implements IEnumerable(Of KeyValuePair(Of String, Object)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="448e2-324">제네릭 컬렉션 반복을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-324">Supports iteration over a generic collection.</span></span></summary>
        <returns><span data-ttu-id="448e2-325">캐시의 항목에 대한 액세스를 제공하는 열거자 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-325">The enumerator object that provides access to the items in the cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448e2-326">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="448e2-326">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="448e2-327">파생 된 경우에 사용할 수 있습니다 <xref:System.Runtime.Caching.ObjectCache> 인스턴스로 캐스팅 되는 <xref:System.Collections.IEnumerable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-327">It can be used only when a derived <xref:System.Runtime.Caching.ObjectCache> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="448e2-328">개발자는 캐시 항목의 제네릭 컬렉션을 반복이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="448e2-328">Developers can use this method to iterate through a generic collection of cache entries.</span></span>  
  
 <span data-ttu-id="448e2-329">이것이 기본 <xref:System.Collections.IEnumerable.GetEnumerator%2A> 내부적으로 호출 하는 구현에서 <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="448e2-329">This is the default <xref:System.Collections.IEnumerable.GetEnumerator%2A> implementation that internally calls the <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>