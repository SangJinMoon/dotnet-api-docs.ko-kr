<Type Name="ObjectCache" FullName="System.Runtime.Caching.ObjectCache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1a611d24c5fb21ef987889fe68369933899ab53b" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52733852" /></Metadata><TypeSignature Language="C#" Value="public abstract class ObjectCache : System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectCache extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.ObjectCache" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ObjectCache&#xA;Implements IEnumerable(Of KeyValuePair(Of String, Object))" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectCache abstract : System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;" />
  <TypeSignature Language="F#" Value="type ObjectCache = class&#xA;    interface seq&lt;KeyValuePair&lt;string, obj&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>개체 캐시를 나타내며 개체 캐시에 액세스 하기 위한 기본 메서드 및 속성을 제공 합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.ObjectCache> 형식은 메모리 내 개체 캐시에 대 한 기본 형식입니다. 파생 하는 사용자 지정 캐시 구현을 개발 하는 <xref:System.Runtime.Caching.ObjectCache> 클래스입니다.  
  
> [!NOTE]
>  합니다 <xref:System.Runtime.Caching.ObjectCache> 클래스의 새로운는 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]합니다.  
  
 기본 제공 <xref:System.Runtime.Caching.MemoryCache> 클래스에서 파생 되는 <xref:System.Runtime.Caching.ObjectCache> 클래스입니다. <xref:System.Runtime.Caching.MemoryCache> 클래스는 유일 하 게 구체적인 개체 캐시 구현에는 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 에서 파생 되는 <xref:System.Runtime.Caching.ObjectCache> 클래스입니다.  
  
 ]]></format>
    </remarks>
    <threadsafe>이 형식은 스레드로부터 안전합니다.</threadsafe>
    <block subset="none" type="overrides"><para>때문에 합니다 <see cref="T:System.Runtime.Caching.ObjectCache" /> 형식을 나타내는 일반적인 캐시 함수만, 하는 방법에 대 한 요구 사항은 없습니다는 <see cref="T:System.Runtime.Caching.ObjectCache" /> 인스턴스를 시작 하 고 가져옵니다. 또한 요구 사항은 없습니다의 구체적인 구현은는 <see cref="T:System.Runtime.Caching.ObjectCache" /> 클래스는 단일 항목 이어야 합니다.  
  
 <block subset="none" type="note"><para><see cref="T:System.Runtime.Caching.MemoryCache" /> 단일 되지 않지만 하나에만 적거나 잠재적으로 만들어야 <see cref="T:System.Runtime.Caching.MemoryCache" /> 인스턴스 및 항목을 캐시 하는 코드는 해당 인스턴스를 사용 해야 합니다.  
  
</para></block>  
  
 상속 하는 경우는 <see cref="T:System.Runtime.Caching.ObjectCache" /> 클래스의 메서드를 재정의 해야 합니다.</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectCache ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>초기화 하기 위해 파생된 클래스의 생성자에서 호출 된 <see cref="T:System.Runtime.Caching.ObjectCache" /> 클래스입니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>파생된 클래스에서 재정의할 경우, 일치 하는 키를 사용 하 여 기존 캐시 엔트리를 반환 하는 요구 하지 않고 캐시에 캐시 엔트리를 삽입 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드 오버 로드를 덮어쓰거나 동일한 키가 있는 기존 캐시 엔트리를 제거 하지 않고 캐시 엔트리를 캐시에 삽입 하려고 합니다. 캐시 엔트리의 형식화 된 수 <xref:System.Runtime.Caching.CacheItem> 개체 또는 일반 개체입니다.  
  
 합니다 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버 로드 및 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드 오버 로드는 한 가지 중요 한 차이점이 있습니다. 이러한 메서드는 일치 하는 항목이 캐시에 있으면 캐시 엔트리를 삽입 하는 경우는 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버 로드는 기존 캐시 엔트리를 반환 하지만 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드 오버 로드 하지 않습니다. 이러한 다른 메서드 오버 로드를 가진 기존 캐시 엔트리를 필요한 지 여부를 기반으로 코드를 최적화 하기 위해 호출자 수 있습니다. 분산된 캐시에 있는 기존 값을 사용 하 여 반환 합니다 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드를 사용 하 여 부울 값을 반환 하는 데 비해 않을 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (item As CacheItem, policy As CacheItemPolicy) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Add(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; bool&#xA;override this.Add : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; bool" Usage="objectCache.Add (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item">추가할 개체입니다.</param>
        <param name="policy">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다. 이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</param>
        <summary>파생된 클래스에서 재정의 되 면 캐시 엔트리를 캐시 삽입 시도 <see cref="T:System.Runtime.Caching.CacheItem" /> 인스턴스를 선택한 항목을 제거 해야 하는 방법에 대 한 세부 정보를 추가 합니다.</summary>
        <returns><see langword="true" /> 삽입이 성공 하는 경우 또는 <see langword="false" /> 경우는으로 동일한 키가 있는 캐시에서 엔트리가 이미 <paramref name="item" />합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드 오버 로드는 가상 (추상이 아님)에 <xref:System.Runtime.Caching.ObjectCache> 클래스는 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 내부적으로 호출 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>합니다. 이 캐시 구현 자가 제공 하는 메서드 오버 로드의 수를 줄입니다. 캐시 구현에 대 한 모든 특수 한 동작이 필요 하지는 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드를 구현할 수 있습니다만 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버 로드 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj * DateTimeOffset * string -&gt; bool&#xA;override this.Add : string * obj * DateTimeOffset * string -&gt; bool" Usage="objectCache.Add (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">캐시 엔트리의 고유 식별자입니다.</param>
        <param name="value">삽입할 개체입니다.</param>
        <param name="absoluteExpiration">캐시 엔트리가 만료될 고정된 날짜 및 시간입니다. 이 매개 변수는 필수는 <see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /> 메서드가 호출 됩니다.</param>
        <param name="regionName">선택 사항입니다. 캐시는 캐시 엔트리 수 추가할 영역이 구현 된 경우에 명명 된 영역입니다. 지역에서 아직 구현 되지 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], 기본값은 <see langword="null" />합니다.</param>
        <summary>파생된 클래스에서 재정의 되 면 모든 기존 캐시 엔트리를 덮어쓰지 않고 캐시에 캐시 엔트리를 삽입 합니다.</summary>
        <returns><see langword="true" /> 삽입이 성공 하는 경우 또는 <see langword="false" /> 경우는으로 동일한 키가 있는 캐시에서 엔트리가 이미 <paramref name="key" />합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드 오버 로드는 가상 (추상이 아님)에 <xref:System.Runtime.Caching.ObjectCache> 클래스는 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 내부적으로 호출 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>합니다. 이 캐시 구현 자가 제공 하는 메서드 오버 로드의 수를 줄입니다. 캐시 구현에 대 한 모든 특수 한 동작이 필요 하지는 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드를 구현할 수 있습니다만 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버 로드 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; bool&#xA;override this.Add : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; bool" Usage="objectCache.Add (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">캐시 엔트리의 고유 식별자입니다.</param>
        <param name="value">삽입할 개체입니다.</param>
        <param name="policy">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다. 이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</param>
        <param name="regionName">선택 사항입니다. 캐시는 캐시 엔트리 수 추가할 영역이 구현 된 경우에 명명 된 영역입니다. 선택적 매개 변수의 기본값은 <see langword="null" />합니다.</param>
        <summary>파생된 클래스에서 재정의 되 면 삽입 캐시 엔트리를 캐시의 엔트리를 제거 하는 방법에 대 한 정보를 지정 합니다.</summary>
        <returns><see langword="true" /> 삽입 시도가 성공 하면 또는 <see langword="false" /> 경우는와 같은 키를 사용 하 여 캐시에서 엔트리가 이미 <paramref name="key" />합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드 오버 로드는 가상 (추상이 아님)에 <xref:System.Runtime.Caching.ObjectCache> 클래스는 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 내부적으로 호출 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>합니다. 이 캐시 구현 자가 제공 하는 메서드 오버 로드의 수를 줄입니다. 캐시 구현에 대 한 모든 특수 한 동작이 필요 하지는 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드를 구현할 수 있습니다만 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버 로드 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOrGetExisting">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>파생된 클래스에서 재정의 되 면 캐시에 캐시 엔트리를 삽입 하려고 하 고 일치 하는 키를 사용 하 여 기존 캐시 엔트리를 반환 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버 로드를 캐시에 항목을 삽입 합니다. 일치 하는 키를 사용 하 여 캐시 엔트리를 이미 있는 경우 기존 항목을 반환 합니다. 캐시 엔트리 수를 <xref:System.Runtime.Caching.CacheItem> 개체 또는 일반 개체입니다.  
  
 차이가 하나는 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 오버 로드 및 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 오버 로드 합니다. 이러한 오버 로드 된 메서드는 기존 일치 하는 키를 삽입 했습니다 캐시 항목을 기존 항목이 있으면 캐시 엔트리를 삽입 하려면 시도 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 오버 로드는 기존 캐시 엔트리를 반환 합니다. <xref:System.Runtime.Caching.ObjectCache.Add%2A> 오버 로드 하지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem AddOrGetExisting (System.Runtime.Caching.CacheItem value, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem AddOrGetExisting(class System.Runtime.Caching.CacheItem value, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (value As CacheItem, policy As CacheItemPolicy) As CacheItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Runtime::Caching::CacheItem ^ AddOrGetExisting(System::Runtime::Caching::CacheItem ^ value, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; System.Runtime.Caching.CacheItem" Usage="objectCache.AddOrGetExisting (value, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="value">삽입할 개체입니다.</param>
        <param name="policy">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다. 이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</param>
        <summary>파생된 클래스에서 재정의 되 면 지정 된 삽입 <see cref="T:System.Runtime.Caching.CacheItem" /> 항목은 제거 하는 방법에 대 한 정보를 지정 하는 캐시에 개체입니다.</summary>
        <returns>동일한 키를 사용 하 여 캐시 엔트리가 있으면 지정 된 캐시 엔트리; 그렇지 않으면 <see langword="null" />합니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : string * obj * DateTimeOffset * string -&gt; obj" Usage="objectCache.AddOrGetExisting (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">캐시 엔트리의 고유 식별자입니다.</param>
        <param name="value">삽입할 개체입니다.</param>
        <param name="absoluteExpiration">캐시 엔트리가 만료될 고정된 날짜 및 시간입니다.</param>
        <param name="regionName">선택 사항입니다. 캐시는 캐시 엔트리 수 추가할 영역이 구현 된 경우에 명명 된 영역입니다. 선택적 매개 변수의 기본값은 <see langword="null" />합니다.</param>
        <summary>파생된 클래스에서 재정의 되 면 캐시에 추가할 키, 캐시 항목, 절대 만료 값 및 선택적 영역에 대 한 개체를 사용 하 여 캐시 엔트리를 캐시에 삽입 합니다.</summary>
        <returns>동일한 키를 사용 하 여 캐시 엔트리가 있으면 지정 된 캐시 엔트리의 값입니다. 그렇지 않으면 <see langword="null" />합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이렇게 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> 메서드 오버 로드 하지 개체 값을 반환 합니다는 <xref:System.Runtime.Caching.CacheItem> 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; obj" Usage="objectCache.AddOrGetExisting (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">캐시 엔트리의 고유 식별자입니다.</param>
        <param name="value">삽입할 개체입니다.</param>
        <param name="policy">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다. 이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</param>
        <param name="regionName">선택 사항입니다. 캐시는 캐시 엔트리 수 추가할 영역이 구현 된 경우에 명명 된 영역입니다. 선택적 매개 변수의 기본값은 <see langword="null" />합니다.</param>
        <summary>파생된 클래스에서 재정의할 경우, 키와 항목은 제거 하는 방법에 대 한 정보와 캐시 항목에 대 한 값을 지정 하는 캐시에 캐시 엔트리를 삽입 합니다.</summary>
        <returns>동일한 키를 사용 하 여 캐시 엔트리가 있으면 지정 된 캐시 엔트리의 값입니다. 그렇지 않으면 <see langword="null" />합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29> 메서드 하지 개체 값을 반환 합니다는 <xref:System.Runtime.Caching.CacheItem> 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public abstract bool Contains (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Contains (key As String, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Contains : string * string -&gt; bool" Usage="objectCache.Contains (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">캐시 엔트리의 고유 식별자입니다.</param>
        <param name="regionName">선택 사항입니다. 캐시를 찾을 수 있는, 영역이 구현 된 경우 캐시의 명명 된 영역입니다. 선택적 매개 변수의 기본값은 <see langword="null" />합니다.</param>
        <summary>파생된 클래스에서 재정의 되 면 캐시 엔트리가 캐시에 이미 있는지 여부를 확인 합니다.</summary>
        <returns><see langword="true" /> 캐시와 동일한 키 값을 사용 하 여 캐시 엔트리를 포함 하는 경우 <paramref name="key" />이 고, 그렇지 않으면 <see langword="false" />합니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCacheEntryChangeMonitor">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCacheEntryChangeMonitor (keys As IEnumerable(Of String), Optional regionName As String = null) As CacheEntryChangeMonitor" />
      <MemberSignature Language="F#" Value="abstract member CreateCacheEntryChangeMonitor : seq&lt;string&gt; * string -&gt; System.Runtime.Caching.CacheEntryChangeMonitor" Usage="objectCache.CreateCacheEntryChangeMonitor (keys, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheEntryChangeMonitor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">모니터링할 캐시 엔트리의 고유 식별자입니다.</param>
        <param name="regionName">선택 사항입니다. 캐시 키를 캐시의 명명 된 영역을 <paramref name="keys" /> 영역이 구현 된 경우 매개 변수가 존재 합니다. 선택적 매개 변수의 기본값은 <see langword="null" />합니다.</param>
        <summary>파생된 클래스에서 재정의 된 경우는 <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> 지정 된 캐시 엔트리의 변경에 대 한 응답으로 이벤트를 트리거할 수 있는 개체입니다.</summary>
        <returns>캐시에 캐시 엔트리를 모니터링 하는 변경 모니터입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파생 된 경우 <xref:System.Runtime.Caching.ObjectCache> 기본 클래스를 재정의 <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A> 메서드를 캐시 구현을 만들어야를 <xref:System.Runtime.Caching.CacheEntryChangeMonitor> 개체입니다. 이 특수화 된 변경 모니터에 지정 된 캐시 항목에는 변경 될 때 호출자에 게 알리는 `keys` 매개 변수입니다. 예를 들어, 경우에 모니터링된 항목을 `keys` 매개 변수가 업데이트 또는 캐시에서 제거에이 메서드에서 생성 하는 변경 모니터의 이벤트를 트리거합니다.  
  
 캐시 구현이 명명 된 캐시 영역을 지 원하는 경우 문자열 값으로 지정할 수 있습니다는 `regionName` 매개 변수입니다. 그렇지 않으면 매개 변수 기본값으로 `null`합니다.  
  
> [!NOTE]
>  일부 캐시 구현이 캐시 엔트리 변경 모니터를 지원합니다. 캐시 구현을 지원 하는지 여부를 확인 하려면 <xref:System.Runtime.Caching.CacheEntryChangeMonitor> 특정 캐시 구현에 대 한 설명서를 참조 하는 개체입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCacheCapabilities">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultCacheCapabilities As DefaultCacheCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Runtime::Caching::DefaultCacheCapabilities DefaultCacheCapabilities { System::Runtime::Caching::DefaultCacheCapabilities get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCacheCapabilities : System.Runtime.Caching.DefaultCacheCapabilities" Usage="System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.DefaultCacheCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파생된 클래스에서 재정의 하는 경우에 캐시 구현에서 제공 하는 기능에 대 한 설명을 가져옵니다.</summary>
        <value>캐시 구현의 기본 기능을 나타내는 플래그의 비트 조합입니다.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract object Get (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Get(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (key As String, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string -&gt; obj" Usage="objectCache.Get (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">가져올 캐시 엔트리의 고유 식별자입니다.</param>
        <param name="regionName">선택 사항입니다. 캐시는 캐시 엔트리가 추가 된 영역이 구현 된 경우에 명명 된 영역입니다. 선택적 매개 변수의 기본값은 <see langword="null" />합니다.</param>
        <summary>파생된 클래스에서 재정의 되 면 지정 된 캐시 엔트리를 캐시에서 개체로 가져옵니다.</summary>
        <returns>로 식별 되는 캐시 엔트리 <paramref name="key" />합니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheItem">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem GetCacheItem (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem GetCacheItem(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCacheItem (key As String, Optional regionName As String = null) As CacheItem" />
      <MemberSignature Language="F#" Value="abstract member GetCacheItem : string * string -&gt; System.Runtime.Caching.CacheItem" Usage="objectCache.GetCacheItem (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">가져올 캐시 엔트리의 고유 식별자입니다.</param>
        <param name="regionName">선택 사항입니다. 캐시는 캐시 추가 된 영역이 구현 된 경우에 명명 된 영역입니다. 지역에서 아직 구현 되지 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], 기본값은 <see langword="null" />합니다.</param>
        <summary>파생된 클래스에서 재정의 하는 경우 캐시에서 지정 된 캐시 엔트리를 가져옵니다는 <see cref="T:System.Runtime.Caching.CacheItem" /> 인스턴스.</summary>
        <returns>로 식별 되는 캐시 엔트리 <paramref name="key" />합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일부 캐시 구현 길어질 수 있으므로이 메서드 오버 로드가 존재는 <xref:System.Runtime.Caching.CacheItem> 클래스입니다. 이런 경우는 <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> 메서드 오버 로드는 반드시 캐시 된 데이터에 대 한 모든 정보를 반환 하지 않습니다. 그러나는 <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> 메서드 오버 로드에 사용자 지정 캐시 이외의 캐시 값을 반환할 수 있습니다.  
  
 <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> 메서드와 비슷합니다는 <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> 메서드는 <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> 메서드 반환으로 캐시 엔트리를 <xref:System.Runtime.Caching.CacheItem> 인스턴스.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public abstract long GetCount (string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetCount(string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCount (Optional regionName As String = null) As Long" />
      <MemberSignature Language="F#" Value="abstract member GetCount : string -&gt; int64" Usage="objectCache.GetCount regionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="regionName">선택 사항입니다. 캐시는 캐시 엔트리 수를 계산 해야 영역이 구현 된 경우에 명명 된 영역입니다. 선택적 매개 변수의 기본값은 <see langword="null" />합니다.</param>
        <summary>파생된 클래스에서 재정의 되 면 캐시의 캐시 항목의 총 수를 가져옵니다.</summary>
        <returns>캐시의 캐시 항목의 수입니다. 하는 경우 <paramref name="regionName" /> 아닙니다 <see langword="null" />, 지정된 된 캐시 영역에 있는 엔트리의 수를 나타냅니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="objectCache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>파생된 클래스에서 재정의 되 면 캐시 항목의 컬렉션을 반복 하는 데 사용할 수 있는 열거자를 만듭니다.</summary>
        <returns>캐시의 캐시 항목에 대한 액세스를 제공하는 열거자 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 캐시 구현자는 재정의 하 고 캐시 항목의 컬렉션을 반복 하는 사용자 지정 수단을 제공 하려면이 메서드를 확장할 수 있습니다.  
  
> [!NOTE]
>  전체 캐시 엔트리를 반환 하는 보다 비용이 많이 드는 작업을 일반적으로 열거자를 반환 합니다.  
  
 이 메서드는 명시적 인터페이스 구현 하는 합니다 <xref:System.Runtime.Caching.ObjectCache> 클래스에는 <xref:System.Collections.IEnumerable.GetEnumerator%2A> 및 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValues">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>캐시 엔트리 집합을 가져옵니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValues (keys As IEnumerable(Of String), Optional regionName As String = null) As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="abstract member GetValues : seq&lt;string&gt; * string -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="objectCache.GetValues (keys, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">가져올 캐시 엔트리의 고유 식별자의 컬렉션입니다.</param>
        <param name="regionName">선택 사항입니다. 캐시는는 캐시 엔트리가 추가 된 영역이 구현 된 경우에 명명 된 영역입니다. 선택적 매개 변수의 기본값은 <see langword="null" />합니다.</param>
        <summary>파생된 클래스에서 재정의 되 면 지정된 된 키에 해당 하는 캐시 엔트리 집합을 가져옵니다.</summary>
        <returns>캐시 엔트리를 나타내는 키/값 쌍의 사전입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> 메서드 오버 로드는 단일 네트워크 호출 하는 동안 여러 캐시 항목이 캐시에서 가져올 수 있는 분산 된 캐시에 대 한 성능 최적화.  
  
 호출자에 게 하나 이상의 키 메서드에 전달할 수 있지만 보장이 없습니다는 모든 키 캐시의 항목을 나타냅니다. 따라서 반환된 된 사전 메서드에 전달 된 키 개수 보다 더 적은 항목을 포함할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (string regionName, params string[] keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(string regionName, string[] keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValues (regionName As String, ParamArray keys As String()) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetValues(System::String ^ regionName, ... cli::array &lt;System::String ^&gt; ^ keys);" />
      <MemberSignature Language="F#" Value="abstract member GetValues : string * string[] -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;&#xA;override this.GetValues : string * string[] -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="objectCache.GetValues (regionName, keys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
        <Parameter Name="keys" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="regionName">선택 사항입니다. 캐시는는 캐시 엔트리가 추가 된 영역이 구현 된 경우에 명명 된 영역입니다. 지역에서 아직 구현 되지 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], 기본값은 <see langword="null" />합니다.</param>
        <param name="keys">가져올 캐시 엔트리의 고유 식별자의 컬렉션입니다.</param>
        <summary>지정 된 키와 일치 하는 캐시 엔트리 집합을 가져옵니다.</summary>
        <returns>캐시 엔트리를 나타내는 키/값 쌍의 사전입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType> 메서드 오버 로드는 <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> 메서드 오버 로드 하지만 C#과 같은 관리 되는 언어에서 지원 되는 선택적 매개 변수 구문을 사용 하 여 명명 된 영역을 전달할 수 있습니다.  
  
 때문에이 메서드는 가상 메서드를 <xref:System.Runtime.Caching.ObjectCache> 클래스에 전달 하는 기본 구현을 제공 합니다 `params` 배열는 <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> 메서드 오버 로드 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public static IServiceProvider Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IServiceProvider Host" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Host" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Host As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property IServiceProvider ^ Host { IServiceProvider ^ get(); void set(IServiceProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Host : IServiceProvider with get, set" Usage="System.Runtime.Caching.ObjectCache.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용할 수 있는 관리 되는 호스팅 환경에 대 한 참조를 설정 하거나 가져옵니다 <see cref="T:System.Runtime.Caching.ObjectCache" /> 구현과 호스트별 서비스를 제공할 수 있습니다 <see cref="T:System.Runtime.Caching.ObjectCache" /> 구현 합니다.</summary>
        <value>관리 되는 캐시 인식 호스팅 환경에 대 한 참조입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 합니다 <xref:System.Runtime.Caching.ObjectCache.Host%2A> 속성에서 사용 하기 위한 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 호스트 환경 및.NET Framework에 의존 하는 동작을 구현 하는 캐시 구현 환경을 호스트 합니다.  
  
 다음 표에서 사용할 수 있는 관리 되는 호스팅 환경에서 사용할 수 있는 호스트 환경 서비스 집합이 <xref:System.Runtime.Caching.ObjectCache> 구현을 통해를 <xref:System.Runtime.Caching.ObjectCache.Host%2A> 속성:  
  
|서비스|설명|  
|-------------|-----------------|  
|<xref:System.Runtime.Caching.Hosting.IApplicationIdentifier>|성능 카운터를 식별 하는 등의 기능에 대 한 캐시 구현에서 필요할 수 있는 응용 프로그램 도메인 식별자를 제공 하는 호스트 환경 수 있습니다.|  
|<xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>|호스트 환경에서 제공 되는 것을 사용 하는 대신 사용자 지정 파일 변경 알림 시스템을 제공할 수는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]합니다.|  
|<xref:System.Runtime.Caching.Hosting.IMemoryCacheManager>|호스트 환경에 캐시 구현을 보고서 캐시 메모리 소비를 있습니다. 따라서 호스트 환경을 중앙에서 여러 캐시 구현에서 메모리 사용량을 관리할 수 있습니다.|  
  
> [!NOTE]
>  이 속성 값의 호출자에 게 무제한 코드 액세스 보안 권한이 필요합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">속성에 할당 되는 값은 <see langword="null" />합니다.</exception>
        <exception cref="T:System.InvalidOperationException">속성 값을 여러 번 설정 하려고 했습니다.</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">이 속성의 모든 접근자에 대 한 완전 신뢰 합니다. 이 속성을 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</permission>
      </Docs>
    </Member>
    <Member MemberName="InfiniteAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset InfiniteAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset InfiniteAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteAbsoluteExpiration As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset InfiniteAbsoluteExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable InfiniteAbsoluteExpiration : DateTimeOffset" Usage="System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>캐시 엔트리에 절대 만료 시간이 없음을 나타내는 값을 가져옵니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 캐시에 삽입 되는 캐시 엔트리를 <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> 만료 값이 만료 되지 않도록 해야 하는 대로 설정 된 필드 값 점을 기준으로 절대 시간에서입니다. 그러나 메모리 부족으로 인해 발생 하는 변경 모니터 이벤트 제거와 같은 특정 캐시 구현에 의해 결정 되는 다른 이유로이 설정 사용 하 여 캐시 엔트리를 캐시에서 제거할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Runtime.Caching.ObjectCache.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">캐시에 캐시 엔트리의 고유 식별자입니다.</param>
        <summary>에 대 한 기본 인덱서를 가져오거나 설정 합니다.는 <see cref="T:System.Runtime.Caching.ObjectCache" /> 클래스입니다.</summary>
        <value>캐시 인스턴스의 인덱서로 작동 하는 키입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성의 set 접근자의 동작은 같은 <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> 메서드. 캐시 구현이 지정 된 값의 절대 만료를 설정할 수는 내부적으로 <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> 메서드. 그러나이 문제는 결국 캐시 구현 합니다.  
  
 Get 접근자의 동작 호출 비슷합니다는 <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29> 메서드 및 사용 하 여 `null` 지역 이름에 대 한 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Runtime.Caching.ObjectCache.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>특정 이름을 가져옵니다 <see cref="T:System.Runtime.Caching.ObjectCache" /> 인스턴스.</summary>
        <value>특정 캐시 인스턴스의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일부 캐시 구현에서 단일 응용 프로그램을 실행 중인 캐시의 여러 인스턴스를 지원할 수 있습니다. 이 속성을 사용 하면 캐시 구현자에 특정 캐시 인스턴스를 식별 하는 이름을 반환 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoSlidingExpiration As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoSlidingExpiration : TimeSpan" Usage="System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>캐시 엔트리에 상대 (sliding) 만료 시간이 있음을 나타냅니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기간 또는 정의 된 기간에 따라 만료를 상대 만료는 라고도 합니다. 일반적으로 상대 만료 기반으로 하는 항목을 제거 하는 캐시 구현에는 지정 된 기간에 액세스 하지 않은 항목이 제거 됩니다.  
  
 캐시에 삽입 되는 캐시 엔트리를 <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> 만료 값 슬라이딩 시간 창에 비 작업으로 인해 제거 되지 해야 하는 대로 설정 된 값을 필드입니다. 그러나 절대 만료가 있을 경우 또는 일부 다른 제거 이벤트가 발생 하면는 변경 모니터 또는 메모리 압력 이러한 캐시 항목을 제거할 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract object Remove (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Remove(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Remove (key As String, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member Remove : string * string -&gt; obj" Usage="objectCache.Remove (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">캐시 엔트리의 고유 식별자입니다.</param>
        <param name="regionName">선택 사항입니다. 캐시는 캐시 엔트리가 추가 된 영역이 구현 된 경우에 명명 된 영역입니다. 선택적 매개 변수의 기본값은 <see langword="null" />합니다.</param>
        <summary>파생된 클래스에서 재정의 되 면 캐시에서 캐시 엔트리를 제거 합니다.</summary>
        <returns>키를 사용 하면 지정 된 제거 되는 캐시 항목의 값을 나타내는 개체 또는 <see langword="null" /> 지정된 된 항목이 없는 경우.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 해당 하는 캐시에 캐시 엔트리가 있으면 사용자 지정 캐시 구현에서이 메서드를 재정의 하는 경우 `key`, 제거 된 항목의 값을 반환 해야 합니다. 메서드는 반환 해야 하는 경우 캐시에서 제거 된 아무, `null`합니다.  
  
> [!NOTE]
>  일부 분산된 캐시 구현이 캐시에서 제거 된 값을 반환 하는 기능을 지원 하지 않습니다. 캐시 구현이 제거 된 캐시 항목의 값 반환을 지원 하지 않으므로 수 있습니다. 개체를 반환 값의 비용은 그다지 비싸지으로 마샬링 되므로 수도 있습니다. 이러한 경우 캐시 구현을 반환할 수 있습니다 `null`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Set">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>파생된 클래스에서 재정의 되 면 캐시에 캐시 엔트리를 삽입 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적인 동작을 <xref:System.Runtime.Caching.ObjectCache.Set%2A> 오버 로드 메서드 삽입 또는 업데이트 작업이 수행 됩니다. 캐시 항목은 새 항목으로 삽입 되거나 지정된 된 항목이 없는 경우 이미 존재 하는 경우 캐시 엔트리의 새 값으로 업데이트 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (item As CacheItem, policy As CacheItemPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Set(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member Set : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; unit" Usage="objectCache.Set (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item">추가할 캐시 항목입니다.</param>
        <param name="policy">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다. 이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</param>
        <summary>파생된 클래스에서 재정의 되 면 캐시에 캐시 엔트리를 삽입 한 <see cref="T:System.Runtime.Caching.CacheItem" /> 인스턴스를 항목은 제거 하는 방법에 대 한 정보를 지정 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우에 대 한 키 `item` 존재 하지 않는 `item` 새 캐시 항목으로 삽입 됩니다. 일치 하는 키를 사용 하 여 항목이 `item` 의 값 존재 `item` 업데이트 하거나 기존 캐시 항목의 값을 덮어쓰는 데 사용 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null)" />
      <MemberSignature Language="F#" Value="abstract member Set : string * obj * DateTimeOffset * string -&gt; unit" Usage="objectCache.Set (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">캐시 엔트리의 고유 식별자입니다.</param>
        <param name="value">삽입할 개체입니다.</param>
        <param name="absoluteExpiration">캐시 엔트리가 만료될 고정된 날짜 및 시간입니다.</param>
        <param name="regionName">선택 사항입니다. 캐시는 캐시 엔트리 수 추가할 영역이 구현 된 경우에 명명 된 영역입니다. 선택적 매개 변수의 기본값은 <see langword="null" />합니다.</param>
        <summary>파생된 클래스에서 재정의 하는 경우 시간 기반 만료 정보를 지정 하는 캐시에 캐시 엔트리를 삽입 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일치 하는 항목이 `key` 캐시에 없는 경우 `value` 고 `key` 새 캐시 항목을 삽입 하는 데 사용 됩니다. 일치 하는 키를 사용 하 여 항목이 `item` 있으면 캐시 엔트리가 업데이트 되거나 사용 하 여 덮어쓸 `value`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null)" />
      <MemberSignature Language="F#" Value="abstract member Set : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; unit" Usage="objectCache.Set (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">캐시 엔트리의 고유 식별자입니다.</param>
        <param name="value">삽입할 개체입니다.</param>
        <param name="policy">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다. 이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</param>
        <param name="regionName">선택 사항입니다. 캐시는 캐시 엔트리 수 추가할 영역이 구현 된 경우에 명명 된 영역입니다. 선택적 매개 변수의 기본값은 <see langword="null" />합니다.</param>
        <summary>파생된 클래스에서 재정의 되 면 캐시에 캐시 엔트리를 삽입 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드 오버 로드를 사용 하면 절대 만료 시간을 기준으로 사용할 수 있는 것 보다 자세한 제거 또는 만료 정보를 제공 합니다.  
  
 일치 하는 항목이 `key` 캐시에 없는 경우 `value` 고 `key` 새 캐시 항목을 삽입 하는 데 사용 됩니다. 일치 하는 키를 사용 하 여 항목이 `item` 있으면 캐시 엔트리가 업데이트 되거나 사용 하 여 덮어쓸 `value`합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,object&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object)) Implements IEnumerable(Of KeyValuePair(Of String, Object)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>제네릭 컬렉션 반복을 지원합니다.</summary>
        <returns>캐시의 항목에 대한 액세스를 제공하는 열거자 개체입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 멤버는 명시적 인터페이스 멤버 구현이며, 파생 된 경우에 사용할 수 있습니다 <xref:System.Runtime.Caching.ObjectCache> 캐스팅 된는 <xref:System.Collections.IEnumerable> 인터페이스입니다.  
  
 개발자는 캐시 항목의 제네릭 컬렉션을 반복이 메서드를 사용할 수 있습니다.  
  
 이것이 기본값 <xref:System.Collections.IEnumerable.GetEnumerator%2A> 내부적으로 호출 하는 구현 된 <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>