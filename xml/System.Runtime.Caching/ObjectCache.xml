<Type Name="ObjectCache" FullName="System.Runtime.Caching.ObjectCache">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cfc19cad0461ef3bb8f5c5134f66d1ecd2591f42" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39892868" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ObjectCache : System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectCache extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.ObjectCache" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ObjectCache&#xA;Implements IEnumerable(Of KeyValuePair(Of String, Object))" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectCache abstract : System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;" />
  <TypeSignature Language="F#" Value="type ObjectCache = class&#xA;    interface seq&lt;KeyValuePair&lt;string, obj&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="029e5-101">개체 캐시에 액세스하기 위한 기본 메서드 및 속성을 제공하는 개체 캐시를 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="029e5-101">Represents an object cache and provides the base methods and properties for accessing the object cache.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-102"><xref:System.Runtime.Caching.ObjectCache> 형식은 메모리 내 개체 캐시에 대 한 기본 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-102">The <xref:System.Runtime.Caching.ObjectCache> type is the primary type for the in-memory object cache.</span></span> <span data-ttu-id="029e5-103">파생 하는 사용자 지정 캐시 구현을 개발 하는 <xref:System.Runtime.Caching.ObjectCache> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-103">To develop a custom cache implementation, you derive from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="029e5-104">합니다 <xref:System.Runtime.Caching.ObjectCache> 클래스의 새로운는 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-104">The <xref:System.Runtime.Caching.ObjectCache> class is new as of the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span>  
  
 <span data-ttu-id="029e5-105">기본 제공 <xref:System.Runtime.Caching.MemoryCache> 클래스에서 파생 되는 <xref:System.Runtime.Caching.ObjectCache> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-105">The built-in <xref:System.Runtime.Caching.MemoryCache> class derives from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span> <span data-ttu-id="029e5-106"><xref:System.Runtime.Caching.MemoryCache> 클래스는 유일 하 게 구체적인 개체 캐시 구현에는 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 에서 파생 되는 <xref:System.Runtime.Caching.ObjectCache> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-106">The <xref:System.Runtime.Caching.MemoryCache> class is the only concrete object cache implementation in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] that derives from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="029e5-107">이 형식은 스레드로부터 안전합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="029e5-107">This type is thread safe.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <span data-ttu-id="029e5-108">
        <para>때문에 합니다 <see cref="T:System.Runtime.Caching.ObjectCache" /> 형식을 나타내는 일반적인 캐시 함수만, 하는 방법에 대 한 요구 사항은 없습니다는 <see cref="T:System.Runtime.Caching.ObjectCache" /> 인스턴스를 시작 하 고 가져옵니다. 또한 요구 사항은 없습니다의 구체적인 구현은는 <see cref="T:System.Runtime.Caching.ObjectCache" /> 클래스는 단일 항목 이어야 합니다.  <block subset="none" type="note"><para><see cref="T:System.Runtime.Caching.MemoryCache" /> 단일 되지 않지만 하나에만 적거나 잠재적으로 만들어야 <see cref="T:System.Runtime.Caching.MemoryCache" /> 인스턴스 및 항목을 캐시 하는 코드는 해당 인스턴스를 사용 해야 합니다.  </para></block>  상속 하는 경우는 <see cref="T:System.Runtime.Caching.ObjectCache" /> 클래스의 메서드를 재정의 해야 합니다.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="029e5-108">
          <para>Because the <see cref="T:System.Runtime.Caching.ObjectCache" /> type represents only common cache functions, there is no requirement for how an <see cref="T:System.Runtime.Caching.ObjectCache" /> instance must be instantiated and obtained. In addition, there is no requirement that concrete implementations of the <see cref="T:System.Runtime.Caching.ObjectCache" /> class must be singletons.  <block subset="none" type="note"><para><see cref="T:System.Runtime.Caching.MemoryCache" /> is not a singleton, but you should create only a few or potentially only one <see cref="T:System.Runtime.Caching.MemoryCache" /> instance and code that caches items should use those instances.  </para></block>  When you inherit from the <see cref="T:System.Runtime.Caching.ObjectCache" /> class, you must override its methods.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectCache ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="029e5-109">
            <see cref="T:System.Runtime.Caching.ObjectCache" /> 클래스를 초기화하기 위해 파생 클래스의 생성자에서 호출됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-109">Called from constructors in derived classes in order to initialize the <see cref="T:System.Runtime.Caching.ObjectCache" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="029e5-110">파생 클래스에서 재정의된 경우 키가 일치하는 기존 캐시 엔트리를 반환하도록 요구하지 않고 캐시 엔트리를 캐시에 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-110">When overridden in a derived class, inserts a cache entry into the cache, without requiring that an existing cache entry with a matching key be returned.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-111"><xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드 오버 로드를 덮어쓰거나 동일한 키가 있는 기존 캐시 엔트리를 제거 하지 않고 캐시 엔트리를 캐시에 삽입 하려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-111">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads try to insert a cache entry into the cache, without overwriting or removing an existing cache entry that has the same key.</span></span> <span data-ttu-id="029e5-112">캐시 엔트리의 형식화 된 수 <xref:System.Runtime.Caching.CacheItem> 개체 또는 일반 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-112">The cache entry can be a typed <xref:System.Runtime.Caching.CacheItem> object or a generic object.</span></span>  
  
 <span data-ttu-id="029e5-113">합니다 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버 로드 및 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드 오버 로드는 한 가지 중요 한 차이점이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-113">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads and the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads have one significant difference.</span></span> <span data-ttu-id="029e5-114">이러한 메서드는 일치 하는 항목이 캐시에 있으면 캐시 엔트리를 삽입 하는 경우는 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버 로드는 기존 캐시 엔트리를 반환 하지만 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드 오버 로드 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-114">When these methods insert a cache entry, if a matching entry is found in the cache, the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads return the existing cache entry, but the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads do not.</span></span> <span data-ttu-id="029e5-115">이러한 다른 메서드 오버 로드를 가진 기존 캐시 엔트리를 필요한 지 여부를 기반으로 코드를 최적화 하기 위해 호출자 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-115">Having these different method overloads enables callers to optimize their code based on whether they need the existing cache entry.</span></span> <span data-ttu-id="029e5-116">분산된 캐시에 있는 기존 값을 사용 하 여 반환 합니다 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드를 사용 하 여 부울 값을 반환 하는 데 비해 않을 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="029e5-116">In distributed caches, returning an existing value by using the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method might be more expensive than returning a Boolean value by using <xref:System.Runtime.Caching.ObjectCache.Add%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (item As CacheItem, policy As CacheItemPolicy) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Add(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; bool&#xA;override this.Add : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; bool" Usage="objectCache.Add (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="029e5-117">추가할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-117">The object to add.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="029e5-118">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-118">An object that contains eviction details for the cache entry.</span>
          </span>
          <span data-ttu-id="029e5-119">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-119">This object provides more options for eviction than a simple absolute expiration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="029e5-120">파생 클래스에서 재정의된 경우 캐시 엔트리를 캐시에 <see cref="T:System.Runtime.Caching.CacheItem" /> 인스턴스로 삽입하려고 하고 해당 엔트리를 제거하는 방법에 대한 정보를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-120">When overridden in a derived class, tries to insert a cache entry into the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance, and adds details about how the entry should be evicted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="029e5-121">삽입이 성공하면 <see langword="true" />이고, 캐시에 <paramref name="item" />과 키가 같은 엔트리가 이미 있으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-121">
              <see langword="true" /> if insertion succeeded, or <see langword="false" /> if there is an already an entry in the cache that has the same key as <paramref name="item" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-122">합니다 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드 오버 로드는 가상 (추상이 아님)에 <xref:System.Runtime.Caching.ObjectCache> 클래스는 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 내부적으로 호출 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-122">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="029e5-123">이 캐시 구현 자가 제공 하는 메서드 오버 로드의 수를 줄입니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-123">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="029e5-124">캐시 구현에 대 한 모든 특수 한 동작이 필요 하지는 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드를 구현할 수 있습니다만 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-124">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj * DateTimeOffset * string -&gt; bool&#xA;override this.Add : string * obj * DateTimeOffset * string -&gt; bool" Usage="objectCache.Add (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="029e5-125">캐시 엔트리의 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-125">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="029e5-126">삽입할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-126">The object to insert.</span>
          </span>
        </param>
        <param name="absoluteExpiration">
          <span data-ttu-id="029e5-127">캐시 엔트리가 만료될 고정된 날짜 및 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-127">The fixed date and time at which the cache entry will expire.</span>
          </span>
          <span data-ttu-id="029e5-128">
            <see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /> 메서드가 호출되는 경우 이 매개 변수가 필요합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-128">This parameter is required when the <see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /> method is called.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="029e5-129">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-129">Optional.</span>
          </span>
          <span data-ttu-id="029e5-130">영역이 구현된 경우 캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-130">A named region in the cache to which the cache entry can be added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="029e5-131">영역은 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]에서 구현되지 않기 때문에 기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-131">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default value is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="029e5-132">파생 클래스에서 재정의된 경우 기존 캐시 엔트리를 덮어쓰지 않고 캐시 엔트리를 캐시에 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-132">When overridden in a derived class, inserts a cache entry into the cache without overwriting any existing cache entry.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="029e5-133">삽입이 성공하면 <see langword="true" />이고, 캐시에 <paramref name="key" />과 키가 같은 엔트리가 이미 있으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-133">
              <see langword="true" /> if insertion succeeded, or <see langword="false" /> if there is an already an entry in the cache that has the same key as <paramref name="key" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-134">합니다 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드 오버 로드는 가상 (추상이 아님)에 <xref:System.Runtime.Caching.ObjectCache> 클래스는 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 내부적으로 호출 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-134">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="029e5-135">이 캐시 구현 자가 제공 하는 메서드 오버 로드의 수를 줄입니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-135">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="029e5-136">캐시 구현에 대 한 모든 특수 한 동작이 필요 하지는 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드를 구현할 수 있습니다만 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-136">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; bool&#xA;override this.Add : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; bool" Usage="objectCache.Add (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="029e5-137">캐시 엔트리의 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-137">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="029e5-138">삽입할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-138">The object to insert.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="029e5-139">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-139">An object that contains eviction details for the cache entry.</span>
          </span>
          <span data-ttu-id="029e5-140">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-140">This object provides more options for eviction than a simple absolute expiration.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="029e5-141">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-141">Optional.</span>
          </span>
          <span data-ttu-id="029e5-142">영역이 구현된 경우 캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-142">A named region in the cache to which the cache entry can be added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="029e5-143">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-143">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="029e5-144">파생 클래스에서 재정의된 경우 캐시 엔트리를 캐시에 삽입하고 엔트리의 제거 방법에 대한 정보를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-144">When overridden in a derived class, inserts a cache entry into the cache, specifying information about how the entry will be evicted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="029e5-145">삽입 시도가 성공하면 <see langword="true" />이고, 캐시에 <paramref name="key" />와 키가 같은 엔트리가 이미 있으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-145">
              <see langword="true" /> if the insertion try succeeds, or <see langword="false" /> if there is an already an entry in the cache with the same key as <paramref name="key" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-146">합니다 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드 오버 로드는 가상 (추상이 아님)에 <xref:System.Runtime.Caching.ObjectCache> 클래스는 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 내부적으로 호출 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-146">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="029e5-147">이 캐시 구현 자가 제공 하는 메서드 오버 로드의 수를 줄입니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-147">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="029e5-148">캐시 구현에 대 한 모든 특수 한 동작이 필요 하지는 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 메서드를 구현할 수 있습니다만 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-148">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOrGetExisting">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="029e5-149">파생 클래스에서 재정의된 경우 캐시 엔트리를 캐시에 삽입하려고 하고 키가 일치하는 기존 캐시 엔트리를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-149">When overridden in a derived class, tries to insert a cache entry into the cache, and returns an existing cache entry with a matching key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-150"><xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 메서드 오버 로드를 캐시에 항목을 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-150">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads insert an entry into the cache.</span></span> <span data-ttu-id="029e5-151">일치 하는 키를 사용 하 여 캐시 엔트리를 이미 있는 경우 기존 항목을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-151">If a cache entry with a matching key already exists, they return the existing entry.</span></span> <span data-ttu-id="029e5-152">캐시 엔트리 수를 <xref:System.Runtime.Caching.CacheItem> 개체 또는 일반 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-152">The cache entry can be a <xref:System.Runtime.Caching.CacheItem> object or a generic object.</span></span>  
  
 <span data-ttu-id="029e5-153">차이가 하나는 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 오버 로드 및 <xref:System.Runtime.Caching.ObjectCache.Add%2A> 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-153">There is one difference between the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> overloads and the <xref:System.Runtime.Caching.ObjectCache.Add%2A> overloads.</span></span> <span data-ttu-id="029e5-154">이러한 오버 로드 된 메서드는 기존 일치 하는 키를 삽입 했습니다 캐시 항목을 기존 항목이 있으면 캐시 엔트리를 삽입 하려면 시도 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> 오버 로드는 기존 캐시 엔트리를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-154">When these overloaded methods try to insert a cache entry, if an existing entry is found that has a key that matches an existing inserted cache entry, the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> overloads return the existing cache entry.</span></span> <span data-ttu-id="029e5-155"><xref:System.Runtime.Caching.ObjectCache.Add%2A> 오버 로드 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-155">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> overloads do not.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem AddOrGetExisting (System.Runtime.Caching.CacheItem value, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem AddOrGetExisting(class System.Runtime.Caching.CacheItem value, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (value As CacheItem, policy As CacheItemPolicy) As CacheItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Runtime::Caching::CacheItem ^ AddOrGetExisting(System::Runtime::Caching::CacheItem ^ value, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; System.Runtime.Caching.CacheItem" Usage="objectCache.AddOrGetExisting (value, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="029e5-156">삽입할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-156">The object to insert.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="029e5-157">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-157">An object that contains eviction details for the cache entry.</span>
          </span>
          <span data-ttu-id="029e5-158">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-158">This object provides more options for eviction than a simple absolute expiration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="029e5-159">파생 클래스에서 재정의된 경우 엔트리를 제거하는 방법에 대한 정보를 지정하여 지정된 <see cref="T:System.Runtime.Caching.CacheItem" /> 개체를 캐시에 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-159">When overridden in a derived class, inserts the specified <see cref="T:System.Runtime.Caching.CacheItem" /> object into the cache, specifying information about how the entry will be evicted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="029e5-160">키가 같은 캐시 엔트리가 있으면 지정된 캐시 엔트리이고, 그렇지 않으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-160">If a cache entry with the same key exists, the specified cache entry; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : string * obj * DateTimeOffset * string -&gt; obj" Usage="objectCache.AddOrGetExisting (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="029e5-161">캐시 엔트리의 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-161">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="029e5-162">삽입할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-162">The object to insert.</span>
          </span>
        </param>
        <param name="absoluteExpiration">
          <span data-ttu-id="029e5-163">캐시 엔트리가 만료될 고정된 날짜 및 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-163">The fixed date and time at which the cache entry will expire.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="029e5-164">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-164">Optional.</span>
          </span>
          <span data-ttu-id="029e5-165">영역이 구현된 경우 캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-165">A named region in the cache to which the cache entry can be added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="029e5-166">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-166">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="029e5-167">파생 클래스에서 재정의된 경우 캐시 엔트리의 키와 개체, 절대 만료 값 및 캐시를 추가할 선택적 영역을 사용하여 캐시 엔트리를 캐시에 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-167">When overridden in a derived class, inserts a cache entry into the cache, by using a key, an object for the cache entry, an absolute expiration value, and an optional region to add the cache into.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="029e5-168">키가 같은 캐시 엔트리가 있으면 지정된 캐시 엔트리의 값이고, 그렇지 않으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-168">If a cache entry with the same key exists, the specified cache entry's value; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-169">이렇게 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> 메서드 오버 로드 하지 개체 값을 반환 합니다는 <xref:System.Runtime.Caching.CacheItem> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-169">This <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method overload returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; obj" Usage="objectCache.AddOrGetExisting (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="029e5-170">캐시 엔트리의 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-170">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="029e5-171">삽입할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-171">The object to insert.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="029e5-172">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-172">An object that contains eviction details for the cache entry.</span>
          </span>
          <span data-ttu-id="029e5-173">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-173">This object provides more options for eviction than a simple absolute expiration.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="029e5-174">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-174">Optional.</span>
          </span>
          <span data-ttu-id="029e5-175">영역이 구현된 경우 캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-175">A named region in the cache to which the cache entry can be added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="029e5-176">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-176">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="029e5-177">파생 클래스에서 재정의된 경우 캐시 엔트리의 키와 값 및 해당 엔트리를 제거하는 방법에 대한 정보를 지정하여 캐시 엔트리를 캐시에 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-177">When overridden in a derived class, inserts a cache entry into the cache, specifying a key and a value for the cache entry, and information about how the entry will be evicted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="029e5-178">키가 같은 캐시 엔트리가 있으면 지정된 캐시 엔트리의 값이고, 그렇지 않으면 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-178">If a cache entry with the same key exists, the specified cache entry's value; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-179">합니다 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29> 메서드 하지 개체 값을 반환 합니다는 <xref:System.Runtime.Caching.CacheItem> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-179">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29> method returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public abstract bool Contains (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Contains (key As String, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Contains : string * string -&gt; bool" Usage="objectCache.Contains (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="029e5-180">캐시 엔트리의 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-180">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="029e5-181">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-181">Optional.</span>
          </span>
          <span data-ttu-id="029e5-182">영역이 구현된 경우 캐시를 찾을 수 있는 캐시의 명명된 영역입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-182">A named region in the cache where the cache can be found, if regions are implemented.</span>
          </span>
          <span data-ttu-id="029e5-183">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-183">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="029e5-184">파생 클래스에서 재정의된 경우 캐시 엔트리가 캐시에 이미 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-184">When overridden in a derived class, checks whether the cache entry already exists in the cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="029e5-185">캐시에 키 값이 <paramref name="key" />와 같은 캐시 엔트리가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-185">
              <see langword="true" /> if the cache contains a cache entry with the same key value as <paramref name="key" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCacheEntryChangeMonitor">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCacheEntryChangeMonitor (keys As IEnumerable(Of String), Optional regionName As String = null) As CacheEntryChangeMonitor" />
      <MemberSignature Language="F#" Value="abstract member CreateCacheEntryChangeMonitor : seq&lt;string&gt; * string -&gt; System.Runtime.Caching.CacheEntryChangeMonitor" Usage="objectCache.CreateCacheEntryChangeMonitor (keys, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheEntryChangeMonitor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="029e5-186">모니터링할 캐시 엔트리의 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-186">The unique identifiers for cache entries to monitor.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="029e5-187">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-187">Optional.</span>
          </span>
          <span data-ttu-id="029e5-188">영역이 구현된 경우 <c>keys</c> 매개 변수의 캐시 키가 있는 캐시의 명명된 영역입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-188">A named region in the cache where the cache keys in the <c>keys</c> parameter exist, if regions are implemented.</span>
          </span>
          <span data-ttu-id="029e5-189">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-189">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="029e5-190">파생 클래스에서 재정의된 경우 지정된 캐시 엔트리의 변경에 대한 응답으로 이벤트를 트리거할 수 있는 <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-190">When overridden in a derived class, creates a <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> object that can trigger events in response to changes to specified cache entries.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="029e5-191">캐시의 캐시 엔트리를 모니터링하는 변경 모니터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-191">A change monitor that monitors cache entries in the cache.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-192">파생 된 경우 <xref:System.Runtime.Caching.ObjectCache> 기본 클래스를 재정의 <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A> 메서드를 캐시 구현을 만들어야를 <xref:System.Runtime.Caching.CacheEntryChangeMonitor> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-192">When a derived <xref:System.Runtime.Caching.ObjectCache> class overrides the base <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A> method, the cache implementation must create a <xref:System.Runtime.Caching.CacheEntryChangeMonitor> object.</span></span> <span data-ttu-id="029e5-193">이 특수화 된 변경 모니터에 지정 된 캐시 항목에는 변경 될 때 호출자에 게 알리는 `keys` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-193">This specialized change monitor notifies callers when there are changes to the cache entries that are specified in the `keys` parameter.</span></span> <span data-ttu-id="029e5-194">예를 들어, 경우에 모니터링된 항목을 `keys` 매개 변수가 업데이트 또는 캐시에서 제거에이 메서드에서 생성 하는 변경 모니터의 이벤트를 트리거합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-194">For example, if a monitored item in the `keys` parameter is updated or removed from the cache, the change monitor created by this method triggers an event.</span></span>  
  
 <span data-ttu-id="029e5-195">캐시 구현이 명명 된 캐시 영역을 지 원하는 경우 문자열 값으로 지정할 수 있습니다는 `regionName` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-195">If a cache implementation supports named cache regions, a string value can be specified as the `regionName` parameter.</span></span> <span data-ttu-id="029e5-196">그렇지 않으면 매개 변수 기본값으로 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-196">Otherwise, the parameter defaults to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="029e5-197">일부 캐시 구현이 캐시 엔트리 변경 모니터를 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-197">Not all cache implementations support cache-entry change monitors.</span></span> <span data-ttu-id="029e5-198">캐시 구현을 지원 하는지 여부를 확인 하려면 <xref:System.Runtime.Caching.CacheEntryChangeMonitor> 특정 캐시 구현에 대 한 설명서를 참조 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-198">To determine whether your cache implementation supports <xref:System.Runtime.Caching.CacheEntryChangeMonitor> objects, see the documentation for the specific cache implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCacheCapabilities">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultCacheCapabilities As DefaultCacheCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Runtime::Caching::DefaultCacheCapabilities DefaultCacheCapabilities { System::Runtime::Caching::DefaultCacheCapabilities get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCacheCapabilities : System.Runtime.Caching.DefaultCacheCapabilities" Usage="System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.DefaultCacheCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="029e5-199">파생 클래스에서 재정의된 경우 캐시 구현에서 제공하는 기능 설명을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-199">When overridden in a derived class, gets a description of the features that a cache implementation provides.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="029e5-200">캐시 구현의 기본 기능을 나타내는 플래그의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-200">A bitwise combination of flags that indicate the default capabilities of a cache implementation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract object Get (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Get(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (key As String, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string -&gt; obj" Usage="objectCache.Get (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="029e5-201">가져올 캐시 엔트리의 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-201">A unique identifier for the cache entry to get.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="029e5-202">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-202">Optional.</span>
          </span>
          <span data-ttu-id="029e5-203">영역이 구현된 경우 캐시 엔트리가 추가된 캐시의 명명된 영역입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-203">A named region in the cache to which the cache entry was added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="029e5-204">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-204">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="029e5-205">파생 클래스에서 재정의된 경우 지정된 캐시 엔트리를 캐시에서 개체로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-205">When overridden in a derived class, gets the specified cache entry from the cache as an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="029e5-206">
            <paramref name="key" />로 식별되는 캐시 엔트리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-206">The cache entry that is identified by <paramref name="key" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheItem">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem GetCacheItem (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem GetCacheItem(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCacheItem (key As String, Optional regionName As String = null) As CacheItem" />
      <MemberSignature Language="F#" Value="abstract member GetCacheItem : string * string -&gt; System.Runtime.Caching.CacheItem" Usage="objectCache.GetCacheItem (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="029e5-207">가져올 캐시 엔트리의 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-207">A unique identifier for the cache entry to get.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="029e5-208">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-208">Optional.</span>
          </span>
          <span data-ttu-id="029e5-209">영역이 구현된 경우 캐시가 추가된 캐시의 명명된 영역입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-209">A named region in the cache to which the cache was added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="029e5-210">영역은 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]에서 구현되지 않기 때문에 기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-210">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="029e5-211">파생 클래스에서 재정의된 경우 지정된 캐시 엔트리를 캐시에서 <see cref="T:System.Runtime.Caching.CacheItem" /> 인스턴스로 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-211">When overridden in a derived class, gets the specified cache entry from the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="029e5-212">
            <paramref name="key" />로 식별되는 캐시 엔트리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-212">The cache entry that is identified by <paramref name="key" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-213">일부 캐시 구현 길어질 수 있으므로이 메서드 오버 로드가 존재는 <xref:System.Runtime.Caching.CacheItem> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-213">This method overload exists because some cache implementations might extend the <xref:System.Runtime.Caching.CacheItem> class.</span></span> <span data-ttu-id="029e5-214">이런 경우는 <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> 메서드 오버 로드는 반드시 캐시 된 데이터에 대 한 모든 정보를 반환 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-214">In that case, the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method overload will not necessarily return all the information about cached data.</span></span> <span data-ttu-id="029e5-215">그러나는 <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> 메서드 오버 로드에 사용자 지정 캐시 이외의 캐시 값을 반환할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-215">However, the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method overload enables custom caches to return more than just the cache value.</span></span>  
  
 <span data-ttu-id="029e5-216"><xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> 메서드와 비슷합니다는 <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> 메서드는 <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> 메서드 반환으로 캐시 엔트리를 <xref:System.Runtime.Caching.CacheItem> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="029e5-216">The <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method is like the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method, except that the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method returns return the cache entry as a <xref:System.Runtime.Caching.CacheItem> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public abstract long GetCount (string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetCount(string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCount (Optional regionName As String = null) As Long" />
      <MemberSignature Language="F#" Value="abstract member GetCount : string -&gt; int64" Usage="objectCache.GetCount regionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="regionName">
          <span data-ttu-id="029e5-217">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-217">Optional.</span>
          </span>
          <span data-ttu-id="029e5-218">영역이 구현된 경우 캐시 엔트리 수를 계산해야 하는 캐시의 명명된 영역입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-218">A named region in the cache for which the cache entry count should be computed, if regions are implemented.</span>
          </span>
          <span data-ttu-id="029e5-219">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-219">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="029e5-220">파생 클래스에서 재정의된 경우 캐시의 총 캐시 엔트리 수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-220">When overridden in a derived class, gets the total number of cache entries in the cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="029e5-221">캐시에 있는 총 캐시 엔트리 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-221">The number of cache entries in the cache.</span>
          </span>
          <span data-ttu-id="029e5-222">
            <paramref name="regionName" />이 <see langword="null" />이 아니면 지정된 캐시 영역에 있는 엔트리의 수를 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-222">If <paramref name="regionName" /> is not <see langword="null" />, the count indicates the number of entries that are in the specified cache region.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="objectCache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="029e5-223">파생 클래스에서 재정의된 경우 캐시 엔트리의 컬렉션을 반복하는 데 사용할 수 있는 열거자를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-223">When overridden in a derived class, creates an enumerator that can be used to iterate through a collection of cache entries.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="029e5-224">캐시의 캐시 항목에 대한 액세스를 제공하는 열거자 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-224">The enumerator object that provides access to the cache entries in the cache.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-225">캐시 구현자는 재정의 하 고 캐시 항목의 컬렉션을 반복 하는 사용자 지정 수단을 제공 하려면이 메서드를 확장할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-225">Cache implementers can override and extend this method to provide a custom means of iterating through a collection of cache entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="029e5-226">전체 캐시 엔트리를 반환 하는 보다 비용이 많이 드는 작업을 일반적으로 열거자를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-226">Returning an enumerator is typically a more expensive operation than returning the entire cache entry.</span></span>  
  
 <span data-ttu-id="029e5-227">이 메서드는 명시적 인터페이스 구현 하는 합니다 <xref:System.Runtime.Caching.ObjectCache> 클래스에는 <xref:System.Collections.IEnumerable.GetEnumerator%2A> 및 <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="029e5-227">This method is called by the explicit interface implementations that the <xref:System.Runtime.Caching.ObjectCache> class has for the <xref:System.Collections.IEnumerable.GetEnumerator%2A> and <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValues">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="029e5-228">캐시 엔트리 집합을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-228">Gets a set of cache entries.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValues (keys As IEnumerable(Of String), Optional regionName As String = null) As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="abstract member GetValues : seq&lt;string&gt; * string -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="objectCache.GetValues (keys, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="029e5-229">가져올 캐시 엔트리의 고유 식별자 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-229">A collection of unique identifiers for the cache entries to get.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="029e5-230">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-230">Optional.</span>
          </span>
          <span data-ttu-id="029e5-231">영역이 구현된 경우 캐시 엔트리가 추가된 캐시의 명명된 영역입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-231">A named region in the cache to which the cache entry or entries were added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="029e5-232">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-232">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="029e5-233">파생 클래스에서 재정의된 경우 지정된 키와 일치하는 캐시 엔트리 집합을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-233">When overridden in a derived class, gets a set of cache entries that correspond to the specified keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="029e5-234">캐시 엔트리를 나타내는 키/값 쌍의 사전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-234">A dictionary of key/value pairs that represent cache entries.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-235"><xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> 메서드 오버 로드는 단일 네트워크 호출 하는 동안 여러 캐시 항목이 캐시에서 가져올 수 있는 분산 된 캐시에 대 한 성능 최적화.</span><span class="sxs-lookup"><span data-stu-id="029e5-235">The <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload is a performance optimization for distributed caches that support fetching multiple cache entries from the cache during a single network call.</span></span>  
  
 <span data-ttu-id="029e5-236">호출자에 게 하나 이상의 키 메서드에 전달할 수 있지만 보장이 없습니다는 모든 키 캐시의 항목을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-236">Although a caller can pass one or more keys to the method, there is no guarantee that all keys represent entries in the cache.</span></span> <span data-ttu-id="029e5-237">따라서 반환된 된 사전 메서드에 전달 된 키 개수 보다 더 적은 항목을 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-237">Therefore, the returned dictionary might contain fewer items than the number of keys that were passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (string regionName, params string[] keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(string regionName, string[] keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValues (regionName As String, ParamArray keys As String()) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetValues(System::String ^ regionName, ... cli::array &lt;System::String ^&gt; ^ keys);" />
      <MemberSignature Language="F#" Value="abstract member GetValues : string * string[] -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;&#xA;override this.GetValues : string * string[] -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="objectCache.GetValues (regionName, keys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
        <Parameter Name="keys" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="regionName">
          <span data-ttu-id="029e5-238">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-238">Optional.</span>
          </span>
          <span data-ttu-id="029e5-239">영역이 구현된 경우 캐시 엔트리가 추가된 캐시의 명명된 영역입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-239">A named region in the cache to which the cache entry or entries were added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="029e5-240">영역은 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]에서 구현되지 않기 때문에 기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-240">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is <see langword="null" />.</span>
          </span>
        </param>
        <param name="keys">
          <span data-ttu-id="029e5-241">가져올 캐시 엔트리의 고유 식별자 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-241">A collection of unique identifiers for the cache entries to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="029e5-242">지정된 키에 해당하는 캐시 엔트리 집합을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-242">Gets a set of cache entries that correspond to the specified keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="029e5-243">캐시 엔트리를 나타내는 키/값 쌍의 사전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-243">A dictionary of key/value pairs that represent cache entries.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-244">합니다 <xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType> 메서드 오버 로드는 <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> 메서드 오버 로드 하지만 C#과 같은 관리 되는 언어에서 지원 되는 선택적 매개 변수 구문을 사용 하 여 명명 된 영역을 전달할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-244">The <xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType> method overload is like the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload, but lets you pass the named region by using optional parameter syntax that is supported by managed languages such as C#.</span></span>  
  
 <span data-ttu-id="029e5-245">때문에이 메서드는 가상 메서드를 <xref:System.Runtime.Caching.ObjectCache> 클래스에 전달 하는 기본 구현을 제공 합니다 `params` 배열는 <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> 메서드 오버 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-245">This method is a virtual method because the <xref:System.Runtime.Caching.ObjectCache> class provides a default implementation that passes the `params` array to the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public static IServiceProvider Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IServiceProvider Host" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Host" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Host As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property IServiceProvider ^ Host { IServiceProvider ^ get(); void set(IServiceProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Host : IServiceProvider with get, set" Usage="System.Runtime.Caching.ObjectCache.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="029e5-246">
            <see cref="T:System.Runtime.Caching.ObjectCache" /> 구현에 사용할 수 있고 <see cref="T:System.Runtime.Caching.ObjectCache" /> 구현에 호스트별 서비스를 제공할 수 있는 관리되는 호스팅 환경에 대한 참조를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-246">Gets or set a reference to a managed hosting environment that is available to <see cref="T:System.Runtime.Caching.ObjectCache" /> implementations and that can provide host-specific services to <see cref="T:System.Runtime.Caching.ObjectCache" /> implementations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="029e5-247">캐시를 인식하는 관리되는 호스팅 환경에 대한 참조입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-247">A reference to a cache-aware managed hosting environment.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-248">합니다 <xref:System.Runtime.Caching.ObjectCache.Host%2A> 속성에서 사용 하기 위한 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 호스트 환경 및.NET Framework에 의존 하는 동작을 구현 하는 캐시 구현 환경을 호스트 합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-248">The <xref:System.Runtime.Caching.ObjectCache.Host%2A> property is intended for use by [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] host environments and by cache implementations that implement behavior that depends on the .NET Framework host environment.</span></span>  
  
 <span data-ttu-id="029e5-249">다음 표에서 사용할 수 있는 관리 되는 호스팅 환경에서 사용할 수 있는 호스트 환경 서비스 집합이 <xref:System.Runtime.Caching.ObjectCache> 구현을 통해를 <xref:System.Runtime.Caching.ObjectCache.Host%2A> 속성:</span><span class="sxs-lookup"><span data-stu-id="029e5-249">The following table lists the set of host environment services that might be available from a managed hosting environment and that are available to <xref:System.Runtime.Caching.ObjectCache> implementations through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property:</span></span>  
  
|<span data-ttu-id="029e5-250">서비스</span><span class="sxs-lookup"><span data-stu-id="029e5-250">Service</span></span>|<span data-ttu-id="029e5-251">설명</span><span class="sxs-lookup"><span data-stu-id="029e5-251">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.Runtime.Caching.Hosting.IApplicationIdentifier>|<span data-ttu-id="029e5-252">성능 카운터를 식별 하는 등의 기능에 대 한 캐시 구현에서 필요할 수 있는 응용 프로그램 도메인 식별자를 제공 하는 호스트 환경 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-252">Lets host environments provide application domain identifiers that might be needed by a cache implementation for features such as identifying performance counters.</span></span>|  
|<xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>|<span data-ttu-id="029e5-253">호스트 환경에서 제공 되는 것을 사용 하는 대신 사용자 지정 파일 변경 알림 시스템을 제공할 수는 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-253">Lets host environments provide a custom file-change notification system, instead of using the one provided in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>|  
|<xref:System.Runtime.Caching.Hosting.IMemoryCacheManager>|<span data-ttu-id="029e5-254">호스트 환경에 캐시 구현을 보고서 캐시 메모리 소비를 있습니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-254">Lets cache implementations report cache memory consumption to the host environment.</span></span> <span data-ttu-id="029e5-255">따라서 호스트 환경을 중앙에서 여러 캐시 구현에서 메모리 사용량을 관리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-255">This enables host environments to centrally manage memory consumption across multiple cache implementations.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="029e5-256">이 속성 값의 호출자에 게 무제한 코드 액세스 보안 권한이 필요합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-256">Callers of this property value require unrestricted code access security permissions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="029e5-257">속성에 할당되는 값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-257">The value being assigned to the property is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="029e5-258">속성 값을 두 번 이상 설정하기 위한 시도가 있었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-258">An attempt was made to set the property value more than one time.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">
          <span data-ttu-id="029e5-259">이 속성의 모든 접근자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-259">for full trust for all accessors of this property.</span>
          </span>
          <span data-ttu-id="029e5-260">이 속성을 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-260">This property cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="InfiniteAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset InfiniteAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset InfiniteAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteAbsoluteExpiration As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset InfiniteAbsoluteExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable InfiniteAbsoluteExpiration : DateTimeOffset" Usage="System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="029e5-261">캐시 엔트리에 절대 만료 시간이 없음을 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-261">Gets a value that indicates that a cache entry has no absolute expiration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-262">캐시에 삽입 되는 캐시 엔트리를 <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> 만료 값이 만료 되지 않도록 해야 하는 대로 설정 된 필드 값 점을 기준으로 절대 시간에서입니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-262">A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> field value set as the expiration value should never expire based on an absolute point in time.</span></span> <span data-ttu-id="029e5-263">그러나 메모리 부족으로 인해 발생 하는 변경 모니터 이벤트 제거와 같은 특정 캐시 구현에 의해 결정 되는 다른 이유로이 설정 사용 하 여 캐시 엔트리를 캐시에서 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-263">However, a cache entry with this setting can be evicted from the cache for other reasons that are determined by a particular cache implementation, such as a change-monitor event eviction caused by memory pressure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Runtime.Caching.ObjectCache.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="029e5-264">캐시에 있는 캐시 엔트리의 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-264">A unique identifier for a cache entry in the cache.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="029e5-265">
            <see cref="T:System.Runtime.Caching.ObjectCache" /> 클래스의 기본 인덱서를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-265">Gets or sets the default indexer for the <see cref="T:System.Runtime.Caching.ObjectCache" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="029e5-266">캐시 인스턴스의 인덱서로 작동하는 키입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-266">A key that serves as an indexer into the cache instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-267">이 속성의 set 접근자의 동작은 같은 <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="029e5-267">The behavior of the set accessor of this property is like the <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method.</span></span> <span data-ttu-id="029e5-268">캐시 구현이 지정 된 값의 절대 만료를 설정할 수는 내부적으로 <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> 메서드.</span><span class="sxs-lookup"><span data-stu-id="029e5-268">Internally, a cache implementation could set the absolute expiration of the specified value to the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> method.</span></span> <span data-ttu-id="029e5-269">그러나이 문제는 결국 캐시 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-269">However this behavior is ultimately up to the cache implementation.</span></span>  
  
 <span data-ttu-id="029e5-270">Get 접근자의 동작 호출 비슷합니다는 <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29> 메서드 및 사용 하 여 `null` 지역 이름에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-270">The behavior of get accessor is like calling the <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29> method and using `null` for the region name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Runtime.Caching.ObjectCache.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="029e5-271">특정한 <see cref="T:System.Runtime.Caching.ObjectCache" /> 인스턴스의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-271">Gets the name of a specific <see cref="T:System.Runtime.Caching.ObjectCache" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="029e5-272">특정한 캐시 인스턴스의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-272">The name of a specific cache instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-273">일부 캐시 구현에서 단일 응용 프로그램을 실행 중인 캐시의 여러 인스턴스를 지원할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-273">Some cache implementations might support multiple instances of the cache that is running in a single application.</span></span> <span data-ttu-id="029e5-274">이 속성을 사용 하면 캐시 구현자에 특정 캐시 인스턴스를 식별 하는 이름을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-274">This property lets cache implementers return a name that identifies a specific cache instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoSlidingExpiration As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoSlidingExpiration : TimeSpan" Usage="System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="029e5-275">캐시 엔트리에 상대(sliding) 만료 시간이 없음을 나타냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-275">Indicates that a cache entry has no sliding expiration time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-276">기간 또는 정의 된 기간에 따라 만료를 상대 만료는 라고도 합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-276">Expiration that is based on duration or a defined window of time is also referred to as sliding expiration.</span></span> <span data-ttu-id="029e5-277">일반적으로 상대 만료 기반으로 하는 항목을 제거 하는 캐시 구현에는 지정 된 기간에 액세스 하지 않은 항목이 제거 됩니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-277">Normally, a cache implementation that evicts items that are based on sliding expiration will remove an item that has not been accessed in the specified window of time.</span></span>  
  
 <span data-ttu-id="029e5-278">캐시에 삽입 되는 캐시 엔트리를 <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> 만료 값 슬라이딩 시간 창에 비 작업으로 인해 제거 되지 해야 하는 대로 설정 된 값을 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-278">A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> field value set as the expiration value should never be evicted because of non-activity in a sliding time window.</span></span> <span data-ttu-id="029e5-279">그러나 절대 만료가 있을 경우 또는 일부 다른 제거 이벤트가 발생 하면는 변경 모니터 또는 메모리 압력 이러한 캐시 항목을 제거할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-279">However, a cache item can be evicted if it has an absolute expiration, or if some other eviction event occurs, such a change monitor or memory pressure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract object Remove (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Remove(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Remove (key As String, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member Remove : string * string -&gt; obj" Usage="objectCache.Remove (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="029e5-280">캐시 엔트리의 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-280">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="029e5-281">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-281">Optional.</span>
          </span>
          <span data-ttu-id="029e5-282">영역이 구현된 경우 캐시 엔트리가 추가된 캐시의 명명된 영역입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-282">A named region in the cache to which the cache entry was added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="029e5-283">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-283">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="029e5-284">파생 클래스에서 재정의된 경우 캐시에서 캐시 엔트리를 제거합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-284">When overridden in a derived class, removes the cache entry from the cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="029e5-285">키로 지정된 제거되는 캐시 엔트리의 값을 나타내는 개체이며, 지정된 엔트리가 없는 경우 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-285">An object that represents the value of the removed cache entry that was specified by the key, or <see langword="null" /> if the specified entry was not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-286">에 해당 하는 캐시에 캐시 엔트리가 있으면 사용자 지정 캐시 구현에서이 메서드를 재정의 하는 경우 `key`, 제거 된 항목의 값을 반환 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-286">If you override this method in a custom cache implementation, if there is a cache entry in the cache that corresponds to `key`, the value of the removed item should be returned.</span></span> <span data-ttu-id="029e5-287">메서드는 반환 해야 하는 경우 캐시에서 제거 된 아무, `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-287">If nothing was removed from the cache, the method should return `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="029e5-288">일부 분산된 캐시 구현이 캐시에서 제거 된 값을 반환 하는 기능을 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-288">Some distributed cache implementations might not support the ability to return the value that was removed from the cache.</span></span> <span data-ttu-id="029e5-289">캐시 구현이 제거 된 캐시 항목의 값 반환을 지원 하지 않으므로 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-289">This might be because the cache implementation does not support returning the value of a removed cache item.</span></span> <span data-ttu-id="029e5-290">개체를 반환 값의 비용은 그다지 비싸지으로 마샬링 되므로 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-290">It might also be because marshaling the object as a return value is too expensive.</span></span> <span data-ttu-id="029e5-291">이러한 경우 캐시 구현을 반환할 수 있습니다 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-291">In such cases, cache implementations can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Set">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="029e5-292">파생 클래스에서 재정의된 경우 캐시 엔트리를 캐시에 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-292">When overridden in a derived class, inserts a cache entry into the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-293">일반적인 동작을 <xref:System.Runtime.Caching.ObjectCache.Set%2A> 오버 로드 메서드 삽입 또는 업데이트 작업이 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-293">The typical behavior of the <xref:System.Runtime.Caching.ObjectCache.Set%2A> overload methods is an insert-or-update operation.</span></span> <span data-ttu-id="029e5-294">캐시 항목은 새 항목으로 삽입 되거나 지정된 된 항목이 없는 경우 이미 존재 하는 경우 캐시 엔트리의 새 값으로 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-294">A cache entry is either inserted as a new entry if the specified entry does not exist, or the cache entry is updated with a new value if it already exists.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (item As CacheItem, policy As CacheItemPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Set(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member Set : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; unit" Usage="objectCache.Set (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="029e5-295">추가할 캐시 항목입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-295">The cache item to add.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="029e5-296">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-296">An object that contains eviction details for the cache entry.</span>
          </span>
          <span data-ttu-id="029e5-297">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-297">This object provides more options for eviction than a simple absolute expiration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="029e5-298">파생 클래스에서 재정의된 경우 엔트리를 제거하는 방법에 대한 정보를 지정하여 캐시 엔트리를 캐시에 <see cref="T:System.Runtime.Caching.CacheItem" /> 인스턴스로 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-298">When overridden in a derived class, inserts the cache entry into the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance, specifying information about how the entry will be evicted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-299">경우에 대 한 키 `item` 존재 하지 않는 `item` 새 캐시 항목으로 삽입 됩니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-299">If the key for `item` does not exist, `item` is inserted as a new cache entry.</span></span> <span data-ttu-id="029e5-300">일치 하는 키를 사용 하 여 항목이 `item` 의 값 존재 `item` 업데이트 하거나 기존 캐시 항목의 값을 덮어쓰는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-300">If an item with a key that matches `item` exists, the value from `item` is used to update or overwrite the value of the existing cache entry.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null)" />
      <MemberSignature Language="F#" Value="abstract member Set : string * obj * DateTimeOffset * string -&gt; unit" Usage="objectCache.Set (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="029e5-301">캐시 엔트리의 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-301">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="029e5-302">삽입할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-302">The object to insert.</span>
          </span>
        </param>
        <param name="absoluteExpiration">
          <span data-ttu-id="029e5-303">캐시 엔트리가 만료될 고정된 날짜 및 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-303">The fixed date and time at which the cache entry will expire.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="029e5-304">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-304">Optional.</span>
          </span>
          <span data-ttu-id="029e5-305">영역이 구현된 경우 캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-305">A named region in the cache to which the cache entry can be added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="029e5-306">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-306">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="029e5-307">파생 클래스에서 재정의된 경우 시간 기반 만료 정보를 지정하여 캐시 엔트리를 캐시에 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-307">When overridden in a derived class, inserts a cache entry into the cache, specifying time-based expiration details.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-308">일치 하는 항목이 `key` 캐시에 없는 경우 `value` 고 `key` 새 캐시 항목을 삽입 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-308">If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry.</span></span> <span data-ttu-id="029e5-309">일치 하는 키를 사용 하 여 항목이 `item` 있으면 캐시 엔트리가 업데이트 되거나 사용 하 여 덮어쓸 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-309">If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null)" />
      <MemberSignature Language="F#" Value="abstract member Set : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; unit" Usage="objectCache.Set (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="029e5-310">캐시 엔트리의 고유 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-310">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="029e5-311">삽입할 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-311">The object to insert.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="029e5-312">캐시 엔트리에 대한 제거 정보가 포함된 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-312">An object that contains eviction details for the cache entry.</span>
          </span>
          <span data-ttu-id="029e5-313">이 개체는 간단한 절대 만료보다 많은 제거 옵션을 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-313">This object provides more options for eviction than a simple absolute expiration.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="029e5-314">선택 사항입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-314">Optional.</span>
          </span>
          <span data-ttu-id="029e5-315">영역이 구현된 경우 캐시 엔트리를 추가할 수 있는 캐시의 명명된 영역입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-315">A named region in the cache to which the cache entry can be added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="029e5-316">선택적 매개 변수에 대한 기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-316">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="029e5-317">파생 클래스에서 재정의된 경우 캐시 엔트리를 캐시에 삽입합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-317">When overridden in a derived class, inserts a cache entry into the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-318">이 메서드 오버 로드를 사용 하면 절대 만료 시간을 기준으로 사용할 수 있는 것 보다 자세한 제거 또는 만료 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-318">This method overload lets you provide more eviction or expiration details than those that are available in time-based absolute expiration.</span></span>  
  
 <span data-ttu-id="029e5-319">일치 하는 항목이 `key` 캐시에 없는 경우 `value` 고 `key` 새 캐시 항목을 삽입 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-319">If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry.</span></span> <span data-ttu-id="029e5-320">일치 하는 키를 사용 하 여 항목이 `item` 있으면 캐시 엔트리가 업데이트 되거나 사용 하 여 덮어쓸 `value`합니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-320">If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,object&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object)) Implements IEnumerable(Of KeyValuePair(Of String, Object)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="029e5-321">제네릭 컬렉션 반복을 지원합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-321">Supports iteration over a generic collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="029e5-322">캐시의 항목에 대한 액세스를 제공하는 열거자 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="029e5-322">The enumerator object that provides access to the items in the cache.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="029e5-323">이 멤버는 명시적 인터페이스 멤버 구현이며,</span><span class="sxs-lookup"><span data-stu-id="029e5-323">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="029e5-324">파생 된 경우에 사용할 수 있습니다 <xref:System.Runtime.Caching.ObjectCache> 캐스팅 된는 <xref:System.Collections.IEnumerable> 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-324">It can be used only when a derived <xref:System.Runtime.Caching.ObjectCache> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="029e5-325">개발자는 캐시 항목의 제네릭 컬렉션을 반복이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="029e5-325">Developers can use this method to iterate through a generic collection of cache entries.</span></span>  
  
 <span data-ttu-id="029e5-326">이것이 기본값 <xref:System.Collections.IEnumerable.GetEnumerator%2A> 내부적으로 호출 하는 구현 된 <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="029e5-326">This is the default <xref:System.Collections.IEnumerable.GetEnumerator%2A> implementation that internally calls the <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>