<Type Name="PartConventionBuilder" FullName="System.Composition.Convention.PartConventionBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2db64a21b17114b95f902965178ad7d89ff87da1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PartConventionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PartConventionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Composition.Convention.PartConventionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class PartConventionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class PartConventionBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Convention</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6b4dc-101">MEF(Managed Extensibility Framework) 파트로 형식을 구성합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6b4dc-101">Configures a type as a Managed Extensibility Framework (MEF) part.</span>
      </span>
    </summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName="AddPartMetadata">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder AddPartMetadata (string name, Func&lt;Type,object&gt; getValueFromPartType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder AddPartMetadata(string name, class System.Func`2&lt;class System.Type, object&gt; getValueFromPartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Func{System.Type,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPartMetadata (name As String, getValueFromPartType As Func(Of Type, Object)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ AddPartMetadata(System::String ^ name, Func&lt;Type ^, System::Object ^&gt; ^ getValueFromPartType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getValueFromPartType" Type="System.Func&lt;System.Type,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="6b4dc-102">추가할 메타데이터의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-102">The name of the metadata to add.</span>
          </span>
        </param>
        <param name="getValueFromPartType">
          <span data-ttu-id="6b4dc-103">파트 형식의 메타데이터 값을 반환하는 함수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-103">A function that returns the metadata value on the part type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b4dc-104">파트에 지정된 이름과 값이 있는 메타데이터를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-104">Adds metadata that has the specified name and value to the part.</span>
          </span>
          <span data-ttu-id="6b4dc-105">값은 파트 형식을 메타데이터 값에 매핑하는 함수를 통해 반환됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-105">The value is returned by a function that maps the part type to the metadata value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-106">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-106">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPartMetadata">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder AddPartMetadata (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder AddPartMetadata(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.AddPartMetadata(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPartMetadata (name As String, value As Object) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ AddPartMetadata(System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="6b4dc-107">메타데이터 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-107">The metadata name.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="6b4dc-108">메타데이터 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-108">The metadata value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b4dc-109">파트에 지정된 이름과 값이 있는 메타데이터를 추가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-109">Adds metadata that has the specified name and value to the part.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-110">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-110">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder Export ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder Export() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.Export" />
      <MemberSignature Language="VB.NET" Value="Public Function Export () As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ Export();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6b4dc-111">구체적 형식을 계약 형식으로 지정하여 파트를 내보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-111">Exports the part with its concrete type as the contract type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-112">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-112">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder Export (Action&lt;System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder Export(class System.Action`1&lt;class System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.Export(System.Action{System.Composition.Convention.ExportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function Export (exportConfiguration As Action(Of ExportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ Export(Action&lt;System::Composition::Convention::ExportConventionBuilder ^&gt; ^ exportConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.Composition.Convention.ExportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="exportConfiguration">
          <span data-ttu-id="6b4dc-113">파트를 구성하는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-113">An action that configures the part.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b4dc-114">지정된 구성이 있는 파트를 내보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-114">Exports the part that has the specified configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-115">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-115">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Export&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder Export&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder Export&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.Export``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Export(Of T) () As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::PartConventionBuilder ^ Export();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6b4dc-116">계약 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-116">The contract type.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="6b4dc-117">지정된 계약 형식이 있는 파트를 내보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-117">Exports the part that has the specified contract type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-118">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-118">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Export&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder Export&lt;T&gt; (Action&lt;System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder Export&lt;T&gt;(class System.Action`1&lt;class System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.Export``1(System.Action{System.Composition.Convention.ExportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function Export(Of T) (exportConfiguration As Action(Of ExportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::PartConventionBuilder ^ Export(Action&lt;System::Composition::Convention::ExportConventionBuilder ^&gt; ^ exportConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.Composition.Convention.ExportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6b4dc-119">계약 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-119">The contract type.</span>
          </span>
        </typeparam>
        <param name="exportConfiguration">
          <span data-ttu-id="6b4dc-120">파트를 구성하는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-120">An action that configures the part.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b4dc-121">지정된 구성을 사용하여 지정된 계약 형식이 있는 파트를 내보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-121">Exports the part that has the specified contract type by using the specified configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-122">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-122">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportInterfaces">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ExportInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ExportInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ExportInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportInterfaces () As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ExportInterfaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6b4dc-123">내보낼 파트 형식의 모든 인터페이스를 선택합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-123">Selects all interfaces on the part type to be exported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-124">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-124">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportInterfaces">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ExportInterfaces (Predicate&lt;Type&gt; interfaceFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ExportInterfaces(class System.Predicate`1&lt;class System.Type&gt; interfaceFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportInterfaces (interfaceFilter As Predicate(Of Type)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ExportInterfaces(Predicate&lt;Type ^&gt; ^ interfaceFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceFilter" Type="System.Predicate&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="interfaceFilter">
          <span data-ttu-id="6b4dc-125">선택할 인터페이스를 지정하는 조건자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-125">A predicate that specifies the interfaces to be selected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b4dc-126">지정된 필터에 따라 내보낼 파트 형식의 인터페이스를 선택합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-126">Selects interfaces on the part type to be exported according to the specified filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-127">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-127">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportInterfaces">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ExportInterfaces (Predicate&lt;Type&gt; interfaceFilter, Action&lt;Type,System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ExportInterfaces(class System.Predicate`1&lt;class System.Type&gt; interfaceFilter, class System.Action`2&lt;class System.Type, class System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.Composition.Convention.ExportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportInterfaces (interfaceFilter As Predicate(Of Type), exportConfiguration As Action(Of Type, ExportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ExportInterfaces(Predicate&lt;Type ^&gt; ^ interfaceFilter, Action&lt;Type ^, System::Composition::Convention::ExportConventionBuilder ^&gt; ^ exportConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceFilter" Type="System.Predicate&lt;System.Type&gt;" />
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.Type,System.Composition.Convention.ExportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="interfaceFilter">
          <span data-ttu-id="6b4dc-128">선택할 인터페이스를 지정하는 조건자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-128">A predicate that specifies the interfaces to be selected.</span>
          </span>
        </param>
        <param name="exportConfiguration">
          <span data-ttu-id="6b4dc-129">내보내기를 구성하는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-129">An action that configures the exports.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b4dc-130">지정된 내보내기 구성을 사용하여 지정된 필터에 따라 내보낼 파트 형식에 대해 인터페이스를 선택합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-130">Selects interfaces on the part type to be exported according to the specified filter, using the specified export configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-131">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-131">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportProperties">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ExportProperties (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ExportProperties(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperties (propertyFilter As Predicate(Of PropertyInfo)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ExportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter">
          <span data-ttu-id="6b4dc-132">내보낼 속성을 지정하는 조건자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-132">A predicate that specifies the properites to export.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b4dc-133">지정된 조건자에 따라 내보낼 파트의 속성을 선택합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-133">Selects the properties on the part to export according to the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-134">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-134">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportProperties">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ExportProperties (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter, Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ExportProperties(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter, class System.Action`2&lt;class System.Reflection.PropertyInfo, class System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperties (propertyFilter As Predicate(Of PropertyInfo), exportConfiguration As Action(Of PropertyInfo, ExportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ExportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter, Action&lt;System::Reflection::PropertyInfo ^, System::Composition::Convention::ExportConventionBuilder ^&gt; ^ exportConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter">
          <span data-ttu-id="6b4dc-135">내보낼 속성을 지정하는 조건자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-135">A predicate that specifies the properites to export.</span>
          </span>
        </param>
        <param name="exportConfiguration">
          <span data-ttu-id="6b4dc-136">내보내기를 구성하는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-136">An action that configures the exports.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b4dc-137">지정된 내보내기 구성을 사용하여 지정된 조건자에 따라 내보낼 파트의 속성을 선택합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-137">Selects the properties on the part to export according to the specified predicate, using the specified export configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-138">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-138">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportProperties&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ExportProperties&lt;T&gt; (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ExportProperties&lt;T&gt;(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperties(Of T) (propertyFilter As Predicate(Of PropertyInfo)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::PartConventionBuilder ^ ExportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6b4dc-139">계약 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-139">The contract type.</span>
          </span>
        </typeparam>
        <param name="propertyFilter">
          <span data-ttu-id="6b4dc-140">내보낼 속성을 지정하는 조건자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-140">A predicate that specifies the properites to export.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b4dc-141">지정된 계약 형식을 사용하여 지정된 조건자에 따라 내보낼 파트의 속성을 선택합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-141">Selects the properties on the part to export according to the specified predicate, using the specified contract type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-142">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-142">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportProperties&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ExportProperties&lt;T&gt; (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter, Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ExportProperties&lt;T&gt;(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter, class System.Action`2&lt;class System.Reflection.PropertyInfo, class System.Composition.Convention.ExportConventionBuilder&gt; exportConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportProperties(Of T) (propertyFilter As Predicate(Of PropertyInfo), exportConfiguration As Action(Of PropertyInfo, ExportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::PartConventionBuilder ^ ExportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter, Action&lt;System::Reflection::PropertyInfo ^, System::Composition::Convention::ExportConventionBuilder ^&gt; ^ exportConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
        <Parameter Name="exportConfiguration" Type="System.Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ExportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6b4dc-143">계약 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-143">The contract type.</span>
          </span>
        </typeparam>
        <param name="propertyFilter">
          <span data-ttu-id="6b4dc-144">내보낼 속성을 지정하는 조건자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-144">A predicate that specifies the properites to export.</span>
          </span>
        </param>
        <param name="exportConfiguration">
          <span data-ttu-id="6b4dc-145">내보내기를 구성하는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-145">An action that configures the exports.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b4dc-146">지정된 계약 형식 및 내보내기 구성을 사용하여 지정된 조건자에 따라 내보낼 파트에 대한 속성을 선택합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-146">Selects the properties on the part to export according to the specified predicate, using the specified contract type and export configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-147">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-147">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportProperties">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ImportProperties (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ImportProperties(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperties (propertyFilter As Predicate(Of PropertyInfo)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ImportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter">
          <span data-ttu-id="6b4dc-148">가져올 속성을 지정하는 조건자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-148">A predicate that specifies the properites to import.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b4dc-149">지정된 조건자에 따라 가져올 파트의 속성을 선택합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-149">Selects the properties on the part to import according to the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-150">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-150">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportProperties">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ImportProperties (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter, Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder&gt; importConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ImportProperties(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter, class System.Action`2&lt;class System.Reflection.PropertyInfo, class System.Composition.Convention.ImportConventionBuilder&gt; importConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperties (propertyFilter As Predicate(Of PropertyInfo), importConfiguration As Action(Of PropertyInfo, ImportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ ImportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter, Action&lt;System::Reflection::PropertyInfo ^, System::Composition::Convention::ImportConventionBuilder ^&gt; ^ importConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
        <Parameter Name="importConfiguration" Type="System.Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyFilter">
          <span data-ttu-id="6b4dc-151">가져올 속성을 지정하는 조건자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-151">A predicate that specifies the properites to import.</span>
          </span>
        </param>
        <param name="importConfiguration">
          <span data-ttu-id="6b4dc-152">가져오기를 구성하는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-152">An action that configures the imports.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b4dc-153">지정된 가져오기 구성을 사용하여 지정된 조건자에 따라 가져올 파트의 속성을 선택합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-153">Selects the properties on the part to import according to the specified predicate, using the specified import configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-154">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-154">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportProperties&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ImportProperties&lt;T&gt; (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ImportProperties&lt;T&gt;(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperties(Of T) (propertyFilter As Predicate(Of PropertyInfo)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::PartConventionBuilder ^ ImportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6b4dc-155">계약 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-155">The contract type.</span>
          </span>
        </typeparam>
        <param name="propertyFilter">
          <span data-ttu-id="6b4dc-156">가져올 속성을 지정하는 조건자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-156">A predicate that specifies the properties to import.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b4dc-157">지정된 계약 형식을 사용하여 지정된 조건자에 따라 가져올 파트의 속성을 선택합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-157">Selects the properties on the part to import according to the specified predicate, using the specified contract type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-158">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-158">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportProperties&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder ImportProperties&lt;T&gt; (Predicate&lt;System.Reflection.PropertyInfo&gt; propertyFilter, Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder&gt; importConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder ImportProperties&lt;T&gt;(class System.Predicate`1&lt;class System.Reflection.PropertyInfo&gt; propertyFilter, class System.Action`2&lt;class System.Reflection.PropertyInfo, class System.Composition.Convention.ImportConventionBuilder&gt; importConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportProperties(Of T) (propertyFilter As Predicate(Of PropertyInfo), importConfiguration As Action(Of PropertyInfo, ImportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Composition::Convention::PartConventionBuilder ^ ImportProperties(Predicate&lt;System::Reflection::PropertyInfo ^&gt; ^ propertyFilter, Action&lt;System::Reflection::PropertyInfo ^, System::Composition::Convention::ImportConventionBuilder ^&gt; ^ importConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyFilter" Type="System.Predicate&lt;System.Reflection.PropertyInfo&gt;" />
        <Parameter Name="importConfiguration" Type="System.Action&lt;System.Reflection.PropertyInfo,System.Composition.Convention.ImportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="6b4dc-159">계약 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-159">The contract type.</span>
          </span>
        </typeparam>
        <param name="propertyFilter">
          <span data-ttu-id="6b4dc-160">가져올 속성을 지정하는 조건자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-160">A predicate that specifies the properties to import.</span>
          </span>
        </param>
        <param name="importConfiguration">
          <span data-ttu-id="6b4dc-161">가져오기를 구성하는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-161">An action that configures the imports.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b4dc-162">지정된 계약 형식 및 가져오기 구성을 사용하여 지정된 조건자에 따라 가져올 파트에 대한 속성을 선택합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-162">Selects the properties on the part to import according to the specified predicate, using the specified contract type and import configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-163">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-163">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyImportsSatisfied">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder NotifyImportsSatisfied (Predicate&lt;System.Reflection.MethodInfo&gt; methodFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder NotifyImportsSatisfied(class System.Predicate`1&lt;class System.Reflection.MethodInfo&gt; methodFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.NotifyImportsSatisfied(System.Predicate{System.Reflection.MethodInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function NotifyImportsSatisfied (methodFilter As Predicate(Of MethodInfo)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ NotifyImportsSatisfied(Predicate&lt;System::Reflection::MethodInfo ^&gt; ^ methodFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodFilter" Type="System.Predicate&lt;System.Reflection.MethodInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="methodFilter">
          <span data-ttu-id="6b4dc-164">메서드를 선택하는 조건자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-164">A predicate that selects the methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b4dc-165">컴퍼지션이 완료될 때 알림으로 사용할 메서드를 선택합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-165">Select methods to be used as a notification when composition is complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-166">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-166">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectConstructor">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder SelectConstructor (Func&lt;System.Collections.Generic.IEnumerable&lt;System.Reflection.ConstructorInfo&gt;,System.Reflection.ConstructorInfo&gt; constructorSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder SelectConstructor(class System.Func`2&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.ConstructorInfo&gt;, class System.Reflection.ConstructorInfo&gt; constructorSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectConstructor (constructorSelector As Func(Of IEnumerable(Of ConstructorInfo), ConstructorInfo)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ SelectConstructor(Func&lt;System::Collections::Generic::IEnumerable&lt;System::Reflection::ConstructorInfo ^&gt; ^, System::Reflection::ConstructorInfo ^&gt; ^ constructorSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructorSelector" Type="System.Func&lt;System.Collections.Generic.IEnumerable&lt;System.Reflection.ConstructorInfo&gt;,System.Reflection.ConstructorInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="constructorSelector">
          <span data-ttu-id="6b4dc-167">단일 생성자를 반환하는 함수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-167">A function that returns a single constructor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b4dc-168">지정된 함수를 사용하여 파트를 초기화하는 데 사용할 생성자를 선택합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-168">Selects the constructor used to initialize the part by using the specified function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-169">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-169">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectConstructor">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder SelectConstructor (Func&lt;System.Collections.Generic.IEnumerable&lt;System.Reflection.ConstructorInfo&gt;,System.Reflection.ConstructorInfo&gt; constructorSelector, Action&lt;System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder&gt; importConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder SelectConstructor(class System.Func`2&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.ConstructorInfo&gt;, class System.Reflection.ConstructorInfo&gt; constructorSelector, class System.Action`2&lt;class System.Reflection.ParameterInfo, class System.Composition.Convention.ImportConventionBuilder&gt; importConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.SelectConstructor(System.Func{System.Collections.Generic.IEnumerable{System.Reflection.ConstructorInfo},System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectConstructor (constructorSelector As Func(Of IEnumerable(Of ConstructorInfo), ConstructorInfo), importConfiguration As Action(Of ParameterInfo, ImportConventionBuilder)) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ SelectConstructor(Func&lt;System::Collections::Generic::IEnumerable&lt;System::Reflection::ConstructorInfo ^&gt; ^, System::Reflection::ConstructorInfo ^&gt; ^ constructorSelector, Action&lt;System::Reflection::ParameterInfo ^, System::Composition::Convention::ImportConventionBuilder ^&gt; ^ importConfiguration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructorSelector" Type="System.Func&lt;System.Collections.Generic.IEnumerable&lt;System.Reflection.ConstructorInfo&gt;,System.Reflection.ConstructorInfo&gt;" />
        <Parameter Name="importConfiguration" Type="System.Action&lt;System.Reflection.ParameterInfo,System.Composition.Convention.ImportConventionBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="constructorSelector">
          <span data-ttu-id="6b4dc-170">단일 생성자를 반환하는 함수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-170">A function that returns a single constructor.</span>
          </span>
        </param>
        <param name="importConfiguration">
          <span data-ttu-id="6b4dc-171">생성자의 가져오기를 구성하는 메서드입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-171">A method that configures the constructor's imports.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b4dc-172">지정된 함수 및 가져오기 구성을 사용하여 파트를 초기화하는 데 사용할 생성자를 선택합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-172">Selects the constructor used to initialize the part by using the specified function and import configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-173">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-173">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Shared">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder Shared ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder Shared() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.Shared" />
      <MemberSignature Language="VB.NET" Value="Public Function Shared () As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ Shared();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6b4dc-174">파트를 전체 컴퍼지션을 통해 공유되도록 표시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-174">Marks the part as being shared throughout the entire composition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-175">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-175">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Shared">
      <MemberSignature Language="C#" Value="public System.Composition.Convention.PartConventionBuilder Shared (string sharingBoundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Convention.PartConventionBuilder Shared(string sharingBoundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Convention.PartConventionBuilder.Shared(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Shared (sharingBoundary As String) As PartConventionBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Convention::PartConventionBuilder ^ Shared(System::String ^ sharingBoundary);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Convention</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Convention.PartConventionBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sharingBoundary" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sharingBoundary">
          <span data-ttu-id="6b4dc-176">경계입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-176">The boundary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b4dc-177">파트를 지정된 경계 내에서 공유되도록 표시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-177">Marks the part as being shared within the specified boundary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6b4dc-178">파트를 추가로 구성하는 데 사용할 수 있는 파트 작성기입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b4dc-178">A part builder that can be used to further configure the part.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>