<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EncryptedPackageEnvelope.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d13de0354f15e43fe6e836cca6df2e57f369e866.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d13de0354f15e43fe6e836cca6df2e57f369e866</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Represents an OLE compound file that contains an encrypted package.</source>
          <target state="translated">암호화된 패키지가 들어 있는 OLE 복합 파일을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> has no public constructors.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> public에 생성자가 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>An <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> is created by use of the static <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> 정적을 사용 하 여 만든 <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
          <source>Closes the encrypted package and the OLE compound file that holds it.</source>
          <target state="translated">암호화된 패키지 및 이를 보유한 OLE 복합 파일을 닫습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
          <source>The following example shows how to use this method to close an <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 닫으려면이 메서드를 사용 하는 <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>를 만들어 반환합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The stream on which to create the file.</source>
          <target state="translated">파일을 만들 스트림입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">복합 파일에 포함된 게시 라이선스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">암호화된 콘텐츠에 대해 현재 사용자가 수행할 수 있는 작업을 결정하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> on the specified stream.</source>
          <target state="translated">지정된 스트림에서 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>를 만들어 반환합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">새로 만든 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The current user has read/write access to the new file.</source>
          <target state="translated">현재 사용자가 새 파일에 읽기/쓰기 액세스입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> does not provide read/write access.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph>에서 읽기/쓰기 액세스를 제공하지 않는 경우</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The name of the OLE compound file.</source>
          <target state="translated">OLE 복합 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">복합 파일에 포함된 게시 라이선스입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">암호화된 콘텐츠에 대해 현재 사용자가 수행할 수 있는 작업을 결정하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> and gives it the specified file name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>를 만들어 반환하고 지정된 파일 이름을 부여합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">새로 만든 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>If a file with the specified name already exists, it is overwritten.</source>
          <target state="translated">지정한 이름 가진 파일이 이미 있으면 덮어씁니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The current user has read/write access to the file.</source>
          <target state="translated">현재 사용자가 파일에 읽기/쓰기 액세스입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeFileName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeFileName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that uses an existing unencrypted package as the source of its content.</source>
          <target state="translated">암호화되지 않은 기존 패키지를 해당 콘텐츠의 소스로 사용하는 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>를 만들어 반환합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> method to instantiate an <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> 메서드를 인스턴스화하는 <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The stream on which to create the file.</source>
          <target state="translated">파일을 만들 스트림입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The stream representing the existing unencrypted package.</source>
          <target state="translated">암호화되지 않은 기존 패키지를 나타내는 스트림입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">복합 파일에 포함된 게시 라이선스입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">암호화된 콘텐츠에 대해 현재 사용자가 수행할 수 있는 작업을 결정하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> (on the specified stream) that uses the specified unencrypted package as its content.</source>
          <target state="translated">지정된 암호화되지 않은 패키지를 해당 콘텐츠로 사용하는 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>를 지정된 스트림에 만들어 반환합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">새로 만든 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The current user has read/write access to the new file.</source>
          <target state="translated">현재 사용자가 새 파일에 읽기/쓰기 액세스입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> method to instantiate an <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> 메서드를 인스턴스화하는 <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> or <ph id="ph2">&lt;paramref name="packageStream" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="packageStream" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> does not provide read/write access.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph>에서 읽기/쓰기 액세스를 제공하지 않는 경우</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The name of the OLE compound file.</source>
          <target state="translated">OLE 복합 파일의 이름입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The stream representing the existing unencrypted package.</source>
          <target state="translated">암호화되지 않은 기존 패키지를 나타내는 스트림입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">복합 파일에 포함된 게시 라이선스입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">암호화된 콘텐츠에 대해 현재 사용자가 수행할 수 있는 작업을 결정하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that uses the specified unencrypted package as its content, and gives it the specified file name.</source>
          <target state="translated">지정된 암호화되지 않은 패키지를 해당 콘텐츠로 사용하는 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>를 만들고 지정된 파일 이름을 부여하여 반환합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">새로 만든 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>If a file with the specified name already exists, it is overwritten.</source>
          <target state="translated">지정한 이름 가진 파일이 이미 있으면 덮어씁니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The current user has read/write access to the file.</source>
          <target state="translated">현재 사용자가 파일에 읽기/쓰기 액세스입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> method to instantiate an <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> 메서드를 인스턴스화하는 <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeFileName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="packageStream" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeFileName" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="packageStream" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>에서 사용하는 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>에서 사용하는 모든 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> when finished with a <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> 끝나면는 <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>를 사용할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> was occupying.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph>에 대 한 모든 참조를 해제 해야는 <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> 가비지 수집기는 메모리를 회수할 수 있도록 하는 <ph id="ph3">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> 차지한 합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Dispose 메서드를 구현<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph>에 대한 마지막 참조를 해제하기 전에 반드시 <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>를 호출하십시오.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> object's <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">이렇게 하지 않으면 가비지 수집기가 <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> 개체의 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>에서 사용하는 관리되지 않는 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">이 메서드는 public <ph id="ph1">`Dispose()`</ph> 메서드 및 <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 보호 된 호출 <ph id="ph2">`Dispose(Boolean)`</ph> 메서드는 <ph id="ph3">`disposing`</ph> 매개 변수 설정 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 호출 <ph id="ph2">`Dispose`</ph> 와 <ph id="ph3">`disposing`</ph> 로 설정 <ph id="ph4">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> references.</source>
          <target state="translated">경우는 <ph id="ph1">`disposing`</ph> 매개 변수가 true 이면이 메서드는 관리 개체가 보유 하는 모든 리소스를 해제 합니다.이 <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> 참조 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">이 메서드는 참조되는 각 개체의 <ph id="ph1">`Dispose()`</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>는 다른 개체에서 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">재정의 하는 경우 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> 이전 호출에서 삭제 된 개체를 참조 하지 않도록 주의 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">구현 하는 방법에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>Dispose 메서드를 구현<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">에 대 한 자세한 내용은 <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, 참조 <bpt id="p1">[</bpt>관리 되지 않는 리소스 정리<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> 및 <bpt id="p2">[</bpt>Finalize 메서드를 재정의<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
          <source>Gets a value that specifies whether the file was opened with access to read, write, or both.</source>
          <target state="translated">파일을 열 때 읽기 권한을 부여했는지, 쓰기 권한을 부여했는지, 아니면 두 권한을 모두 부여했는지 지정하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> value that was used to open the file.</source>
          <target state="translated">파일을 여는 데 사용된 <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush">
          <source>Flush the stream for both the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> and its package content.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> 및 해당 패키지 콘텐츠 모두에 대해 스트림을 플러시합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
          <source>Gets the encrypted package inside the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> 내의 암호화된 패키지를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph> in the envelope.</source>
          <target state="translated">엔벌로프에 있는 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Gets a value specifying whether the file is an OLE compound file with an encrypted package stream</source>
          <target state="translated">해당 파일이 암호화된 패키지 스트림을 사용하는 OLE 복합 파일인지 여부를 지정하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
          <source>The stream that is tested.</source>
          <target state="translated">테스트할 스트림입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
          <source>Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.</source>
          <target state="translated">지정된 스트림이 암호화된 패키지 스트림을 사용하는 OLE 복합 파일인지 여부를 지정하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified stream is an OLE compound file with an encrypted package stream; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 스트림이 암호화된 패키지 스트림을 사용하는 OLE 복합 파일이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source>The file that is tested.</source>
          <target state="translated">테스트할 파일입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source>Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.</source>
          <target state="translated">지정된 파일이 암호화된 패키지 스트림을 사용하는 OLE 복합 파일인지 여부를 지정하는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified file is an OLE compound file with an encrypted package stream; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 파일이 암호화된 패키지 스트림을 사용하는 OLE 복합 파일이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source>The following example shows how to use this method to test for encryption.</source>
          <target state="translated">다음 예제에서는 암호화를 테스트 하려면이 메서드를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Opens the encrypted package in an OLE compound file.</source>
          <target state="translated">OLE 복합 파일의 암호화된 패키지를 엽니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
          <source>The stream containing the encrypted package.</source>
          <target state="translated">암호화된 패키지를 포함하는 스트림입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
          <source>Open the encrypted package in the specified stream.</source>
          <target state="translated">지정된 스트림의 암호화된 패키지를 엽니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that is opened.</source>
          <target state="translated">열려 있는 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
          <source>The stream must have an encrypted package.</source>
          <target state="translated">스트림 암호화 된 패키지가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>The file containing the encrypted package.</source>
          <target state="translated">암호화된 패키지가 들어 있는 파일입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>Open the encrypted package in the specified file as read only and unshared.</source>
          <target state="translated">지정된 파일의 암호화된 패키지를 공유하지 않고 읽기 전용 모드로 엽니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that is opened.</source>
          <target state="translated">열려 있는 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>The file must have an encrypted package.</source>
          <target state="translated">파일을 암호화 된 패키지가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>The opened file is read only and unshared.</source>
          <target state="translated">열려 있는 파일은 읽기 전용 이며 공유 해제 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The file containing the encrypted package.</source>
          <target state="translated">암호화된 패키지가 들어 있는 파일입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The type of access.</source>
          <target state="translated">액세스 유형입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>Open the encrypted package in the specified file as unshared and with the specified access.</source>
          <target state="translated">지정된 액세스 권한을 적용하여 지정된 파일의 암호화된 패키지를 공유하지 않고 엽니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that is opened.</source>
          <target state="translated">열려 있는 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The file must have an encrypted package.</source>
          <target state="translated">파일을 암호화 된 패키지가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The opened file is unshared.</source>
          <target state="translated">열려 있는 파일을 공유 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The file containing the encrypted package.</source>
          <target state="translated">암호화된 패키지가 들어 있는 파일입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The type of access.</source>
          <target state="translated">액세스 유형입니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The type of sharing.</source>
          <target state="translated">공유 유형입니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>Open the encrypted package in the specified file and gives it the specified access and sharing.</source>
          <target state="translated">지정된 파일의 암호화된 패키지를 열고 지정된 액세스 권한 및 공유 설정을 적용합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that is opened.</source>
          <target state="translated">열려 있는 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The file must have an encrypted package.</source>
          <target state="translated">파일을 암호화 된 패키지가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>Gets the core package properties (such as Title and Subject) of the rights managed document.</source>
          <target state="translated">권한으로 관리되는 문서의 핵심 패키지 속성(Title 및 Subject 등)을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.PackageProperties" /&gt;</ph> for the package.</source>
          <target state="translated">패키지의 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.PackageProperties" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>These core properties are stored in the standard OLE property streams (\005SummaryInformation and \005DocumentSummaryInformation).</source>
          <target state="translated">이러한 핵심 속성 표준 OLE 속성 스트림 (\005SummaryInformation 및 \005DocumentSummaryInformation)에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>The core properties are also stored in the package itself.</source>
          <target state="translated">핵심 속성은 패키지 자체에 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>It is the responsibility of the application to keep the two sets of properties synchronized.</source>
          <target state="translated">두 속성 집합의 동기화를 유지 하는 응용 프로그램의 작업은</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
          <source>Gets the rights management information stored in the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>; specifically, the <ph id="ph2">&lt;see cref="T:System.Security.RightsManagement.PublishLicense" /&gt;</ph> and the <ph id="ph3">&lt;see cref="T:System.Security.RightsManagement.UseLicense" /&gt;</ph>s stored in the OLE compound file that embodies the rights-management protected package</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>에 저장되어 있는 권한 관리 정보를 가져옵니다. 권한 관리를 통해 보호되는 패키지를 구현하는 OLE 복합 파일에 저장되어 있는 <ph id="ph2">&lt;see cref="T:System.Security.RightsManagement.PublishLicense" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="T:System.Security.RightsManagement.UseLicense" /&gt;</ph>가 특히 여기에 해당합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.RightsManagementInformation" /&gt;</ph> for the package.</source>
          <target state="translated">패키지의 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.RightsManagementInformation" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
          <source>The following example shows how to obtain <ph id="ph1">&lt;xref:System.IO.Packaging.RightsManagementInformation&gt;</ph> for an encrypted package by use the <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A&gt;</ph> property.</source>
          <target state="translated">다음 예제에서는 가져오는 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.IO.Packaging.RightsManagementInformation&gt;</ph> 사용 하 여 암호화 된 패키지에 대 한는 <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
          <source>Gets an object that provides access to the compound file streams outside the encrypted package.</source>
          <target state="translated">암호화된 패키지 외부에 있는 복합 파일 스트림에 대한 액세스 권한을 제공하는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Packaging.StorageInfo" /&gt;</ph> representing streams in the OLE compound file that are outside the encrypted package.</source>
          <target state="translated">암호화된 패키지 외부에 있는 OLE 복합 파일의 스트림을 나타내는 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.StorageInfo" /&gt;</ph>입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>