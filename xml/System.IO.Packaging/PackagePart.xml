<Type Name="PackagePart" FullName="System.IO.Packaging.PackagePart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5869d9b142d5c385181a89ccc26ced1661fe91eb" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36562017" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PackagePart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PackagePart extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackagePart" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PackagePart" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackagePart abstract" />
  <TypeSignature Language="F#" Value="type PackagePart = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a base class for parts stored in a <see cref="T:System.IO.Packaging.Package" />.  This class is abstract.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.IO.Packaging.PackagePart> 세 가지 기본 요소로 구성 됩니다.  
  
|액세스|설명|  
|------------|-----------------|  
|<xref:System.IO.Packaging.PackagePart.Uri%2A>|[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 부분의 합니다.|  
|<xref:System.IO.Packaging.PackagePart.ContentType%2A>|[!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] 콘텐츠 스트림의 유형입니다.|  
|<xref:System.IO.Packaging.PackagePart.GetStream%2A>|파트의 콘텐츠 데이터 스트림입니다.|  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.IO.Packaging.PackagePart" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [WPF의 Pack URI](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)  
  
 [열기 패키징 Conventions 사양](http://go.microsoft.com/fwlink/?LinkID=71255)  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PackagePart (System.IO.Packaging.Package package, Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package, class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PackagePart(System::IO::Packaging::Package ^ package, Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.PackagePart : System.IO.Packaging.Package * Uri -&gt; System.IO.Packaging.PackagePart" Usage="new System.IO.Packaging.PackagePart (package, partUri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="package">The parent <see cref="T:System.IO.Packaging.Package" /> of the part.</param>
        <param name="partUri">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the part, relative to the parent <see cref="T:System.IO.Packaging.Package" /> root.</param>
        <summary>Initializes a new instance of the <see cref="T:System.IO.Packaging.PackagePart" /> class with a specified parent <see cref="P:System.IO.Packaging.PackagePart.Package" /> and part [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` 유효 해야 <xref:System.IO.Packaging.PackagePart> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 에 따라 구성의 [RFC 3986](http://tools.ietf.org/html/rfc3986) *식별자 URI (Uniform Resource) 일반 구문을* 사양 및 [열려 패키징 규칙](http://go.microsoft.com/fwlink/?LinkID=71255) 사양입니다.  
  
 이 생성자를 사용 하 여 때는 <xref:System.IO.Packaging.PackagePart.ContentType%2A> 부분의 즉시 인식 되지 않으며 설정할 나중 때 <xref:System.IO.Packaging.Package.CreatePart%2A> 라고 합니다.  
  
 기본적으로는 <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> 파트의 속성은 초기화 <xref:System.IO.Packaging.CompressionOption.NotCompressed>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="package" /> or <paramref name="partUri" /> is <see langword="null" />.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PackagePart (System.IO.Packaging.Package package, Uri partUri, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package, class System.Uri partUri, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PackagePart(System::IO::Packaging::Package ^ package, Uri ^ partUri, System::String ^ contentType);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.PackagePart : System.IO.Packaging.Package * Uri * string -&gt; System.IO.Packaging.PackagePart" Usage="new System.IO.Packaging.PackagePart (package, partUri, contentType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="package">The parent <see cref="T:System.IO.Packaging.Package" /> of the part.</param>
        <param name="partUri">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the part, relative to the parent <see cref="T:System.IO.Packaging.Package" /> root.</param>
        <param name="contentType">The [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] content type of the part data stream.</param>
        <summary>Initializes a new instance of the <see cref="T:System.IO.Packaging.PackagePart" /> class with a specified parent <see cref="P:System.IO.Packaging.PackagePart.Package" />, part [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)], and [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] content type.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` 유효 해야 <xref:System.IO.Packaging.PackagePart> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 에 따라 구성의 [RFC 3986](http://tools.ietf.org/html/rfc3986) *식별자 URI (Uniform Resource) 일반 구문을* 사양 및 [열려 패키징 규칙](http://go.microsoft.com/fwlink/?LinkID=71255) 사양입니다.  
  
 기본적으로는 <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> 파트의 속성은 초기화 <xref:System.IO.Packaging.CompressionOption.NotCompressed>합니다.  
  
 `contentType` 이어야 합니다는 [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] 형식에 따라 구성의 [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616.html) *Hypertext Transfer Protocol-HTTP*, 섹션 3.7 합니다.  다음 표에서 콘텐츠 예를 들어 [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] 에 사용 되는 형식 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] 문서.  
  
|설명|콘텐츠 형식|  
|-----------------|------------------|  
|글꼴|application/vnd.ms-opentype|  
|ICC 프로필|application/vnd.ms-color.iccprofile|  
|JPEG 이미지|/ jpeg 이미지|  
|애매 한 글꼴|application/vnd.ms-package.obfuscated-opentype|  
|PNG 이미지|이미지/png|  
|PrintTicket|application/vnd.ms-printing.printticket+xml|  
|TIFF 이미지|tiff image /|  
|Windows 미디어 사진 이미지|image/vnd.ms-photo|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="package" /> or <paramref name="partUri" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PackagePart (System.IO.Packaging.Package package, Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package, class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PackagePart(System::IO::Packaging::Package ^ package, Uri ^ partUri, System::String ^ contentType, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.PackagePart : System.IO.Packaging.Package * Uri * string * System.IO.Packaging.CompressionOption -&gt; System.IO.Packaging.PackagePart" Usage="new System.IO.Packaging.PackagePart (package, partUri, contentType, compressionOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="package">The parent <see cref="T:System.IO.Packaging.Package" /> of the part.</param>
        <param name="partUri">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the part, relative to the parent <see cref="T:System.IO.Packaging.Package" /> root.</param>
        <param name="contentType">The [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] content type of the part's data stream.</param>
        <param name="compressionOption">The compression option of the part data stream.</param>
        <summary>Initializes a new instance of the <see cref="T:System.IO.Packaging.PackagePart" /> class with a specified parent <see cref="P:System.IO.Packaging.PackagePart.Package" />, part [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)], [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] content type, and <see cref="T:System.IO.Packaging.CompressionOption" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` 유효 해야 <xref:System.IO.Packaging.PackagePart> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 에 따라 구성의 [RFC 3986](http://tools.ietf.org/html/rfc3986) *식별자 URI (Uniform Resource) 일반 구문을* 사양 및 [열려 패키징 규칙](http://go.microsoft.com/fwlink/?LinkID=71255) 사양입니다.  
  
 `contentType` 이어야 합니다는 [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] 형식에 따라 구성의 [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616.html) *Hypertext Transfer Protocol-HTTP*, 섹션 3.7 합니다.  다음 표에서 콘텐츠 예를 들어 [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] 에 사용 되는 형식 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] 문서.  
  
|설명|콘텐츠 형식|  
|-----------------|------------------|  
|글꼴|application/vnd.ms-opentype|  
|ICC 프로필|application/vnd.ms-color.iccprofile|  
|JPEG 이미지|/ jpeg 이미지|  
|애매 한 글꼴|application/vnd.ms-package.obfuscated-opentype|  
|PNG 이미지|이미지/png|  
|PrintTicket|application/vnd.ms-printing.printticket+xml|  
|TIFF 이미지|tiff image /|  
|Windows 미디어 사진 이미지|image/vnd.ms-photo|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="package" /> or <paramref name="partUri" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="compressionOption" /> value is not valid.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="CompressionOption">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.CompressionOption CompressionOption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.CompressionOption CompressionOption" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackagePart.CompressionOption" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompressionOption As CompressionOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::CompressionOption CompressionOption { System::IO::Packaging::CompressionOption get(); };" />
      <MemberSignature Language="F#" Value="member this.CompressionOption : System.IO.Packaging.CompressionOption" Usage="System.IO.Packaging.PackagePart.CompressionOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.CompressionOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the compression option of the part content stream.</summary>
        <value>부분 콘텐츠 스트림의 압축 옵션입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> 액세스할 수 있는 읽기 전용 속성은 경우에만 부모 <xref:System.IO.Packaging.Package> 열려 있습니다.  
  
 <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> 속성은 자동 설정 된 <xref:System.IO.Packaging.PackagePart.%23ctor%2A> 생성자입니다.  생성자에 의해 설정 된 후의 <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> 변경할 수 없습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackagePart.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string" Usage="System.IO.Packaging.PackagePart.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] type of the content stream.</summary>
        <value>[! 파트에 대 한 콘텐츠 데이터 스트림의 INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] 형식입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.ContentType%2A> 액세스할 수 있는 읽기 전용 속성은 경우에만 부모 <xref:System.IO.Packaging.Package> 열려 있습니다.  
  
 <xref:System.IO.Packaging.PackagePart.ContentType%2A> 속성은 자동 설정 된 <xref:System.IO.Packaging.PackagePart.%23ctor%2A> 생성자입니다.  생성자에 의해 설정 된 후의 <xref:System.IO.Packaging.PackagePart.ContentType%2A> 변경할 수 없습니다.  
  
 <xref:System.IO.Packaging.PackagePart.ContentType%2A> 속성은 한 [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] 형식에 따라 구성의 [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616.html) *Hypertext Transfer Protocol-HTTP*, 섹션 3.7 합니다.  다음 표에서 콘텐츠 예를 들어 [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] 에 사용 되는 형식 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] 문서.  
  
|설명|콘텐츠 형식|  
|-----------------|------------------|  
|글꼴|application/vnd.ms-opentype|  
|ICC 프로필|application/vnd.ms-color.iccprofile|  
|JPEG 이미지|/ jpeg 이미지|  
|애매 한 글꼴|application/vnd.ms-package.obfuscated-opentype|  
|PNG 이미지|이미지/png|  
|PrintTicket|application/vnd.ms-printing.printticket+xml|  
|TIFF 이미지|tiff image /|  
|Windows 미디어 사진 이미지|image/vnd.ms-photo|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).  -or-  The string returned by the derived class <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> method is empty.</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRelationship">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Creates a part-level relationship between this <see cref="T:System.IO.Packaging.PackagePart" /> to a specified target <see cref="T:System.IO.Packaging.PackagePart" /> or external resource.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파트 수준 관계가이 일부 대상 파트 또는 리소스 간의 연결을 정의 합니다.  파트 수준 관계는 다음 두 형식 중 하나일 수 있습니다.  
  
-   간의 <xref:System.IO.Packaging.PackagePart> 대상 <xref:System.IO.Packaging.PackagePart> 내는 <xref:System.IO.Packaging.Package>합니다.  
  
-   간의 <xref:System.IO.Packaging.PackagePart> 패키지 외부의 대상 리소스입니다.  
  
 파트 관계 소스 파트 관계의 "소유자"로 간주 됩니다.  소스 파트를 삭제 하면 부분이 소유 하는 모든 관계도 삭제 됩니다.  대상 파트나 리소스 어떤 방식으로든에서 만들거나 관계 삭제 프로세스 물리적으로 변경 하지 않습니다.  
  
 <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 메서드 소스 파트 또는 대상 파트 또는 리소스에 어떤 방식으로 물리적으로 변경 하지 않습니다.  
  
 관계의 대상 다른 관계를 지정할 수 없습니다.  
  
 패키지 관계에 대 한 자세한 내용은 1.3의 섹션을 참조 하십시오.는 *열려 패키징 규칙 (OPC)* 사양에서 다운로드할 수 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.  
  
 XPS에 대 한 자세한 내용은 문서에 대 한는 *Open XPS XML Paper Specification ()* 에서 다운로드할 수 [ http://go.microsoft.com/fwlink/?LinkID=67000 ](http://go.microsoft.com/fwlink/?LinkID=67000)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType);" />
      <MemberSignature Language="F#" Value="member this.CreateRelationship : Uri * System.IO.Packaging.TargetMode * string -&gt; System.IO.Packaging.PackageRelationship" Usage="packagePart.CreateRelationship (targetUri, targetMode, relationshipType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the target part.</param>
        <param name="targetMode">One of the enumeration values. For example, <see cref="F:System.IO.Packaging.TargetMode.Internal" /> if the target part is inside the <see cref="T:System.IO.Packaging.Package" />; or <see cref="F:System.IO.Packaging.TargetMode.External" /> if the target is a resource outside the <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="relationshipType">The role of the relationship.</param>
        <summary>Creates a part-level relationship between this <see cref="T:System.IO.Packaging.PackagePart" /> to a specified target <see cref="T:System.IO.Packaging.PackagePart" /> or external resource.</summary>
        <returns>The part-level relationship between this <see cref="T:System.IO.Packaging.PackagePart" /> to the target <see cref="T:System.IO.Packaging.PackagePart" /> or external resource.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파트 수준 관계가이 일부 대상 파트 또는 리소스 간의 연결을 정의 합니다.  파트 수준 관계는 다음 두 형식 중 하나일 수 있습니다.  
  
-   간의 <xref:System.IO.Packaging.PackagePart> 대상 <xref:System.IO.Packaging.PackagePart> 내는 <xref:System.IO.Packaging.Package>합니다.  
  
-   간의 <xref:System.IO.Packaging.PackagePart> 패키지 외부의 대상 리소스입니다.  
  
 파트 관계 소스 파트 관계의 "소유자"로 간주 됩니다.  소스 파트를 삭제 하면 부분이 소유 하는 모든 관계도 삭제 됩니다.  대상 파트나 리소스 어떤 방식으로든에서 만들거나 관계 삭제 프로세스 물리적으로 변경 하지 않습니다.  
  
 <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 메서드 소스 파트 또는 대상 파트 또는 리소스에 어떤 방식으로 물리적으로 변경 하지 않습니다.  
  
 관계의 대상 다른 관계를 지정할 수 없습니다.  
  
 경우 `targetMode` 로 지정 된 <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` 에 따라 구성 되는 상대 URI 이어야 합니다는 [RFC 3986](http://tools.ietf.org/html/rfc3986) *식별자 URI (Uniform Resource) 일반 구문을* 사양입니다.  내부 상대 URI 수는 절대 경로일 수로 시작 하는 슬래시 ("/") 문자와 같은 "/ page1.xaml" 또는 "/ images/picture4.jpg", 또는 상대 경로와 같은 "... / imagespicture1.jpg "패키지 루트에 대해 ("/ ")로 기본 URI를 확인 합니다.  
  
 경우 `targetMode` 로 지정 된 <xref:System.IO.Packaging.TargetMode.External>, `targetUri` 에 따라 만든 상대 URI 또는 절대 두 수의 [RFC 3986](http://tools.ietf.org/html/rfc3986) *식별자 URI (Uniform Resource) 일반 구문을*사양입니다.  "http://www.microsoft.com/page2.xml"는 대상 외부 리소스 "page2.xml"를 참조 하는 절대 URI의 예시입니다.  "images/picture1.jpg"는는 외부 대상 리소스 "1.jpg"는 해결 되지만 패키지 자체의 URI에 대해를 참조 하는 상대 URI의 예시입니다.  
  
 `relationshipType` 있어야는 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 에 따라 형식이 [RFC 3986](http://tools.ietf.org/html/rfc3986) *식별자 URI (Uniform Resource) 일반 구문을* 사양입니다.  다른 패키지 형식은 다른 파트 수준 관계 유형을 정의할 수 있습니다.  다음 표에 나와 파트 수준 `relationshipType` 준수 하는 문서에 대해 정의 된 Uri는 *Open XPS XML Paper Specification ()* 합니다.  
  
|XPS 문서 파트 수준 관계|관계 유형 URI|  
|-------------------------------------------|---------------------------|  
|디지털 서명 정의|[http://schemas.microsoft.com/xps/2005/06/signature-definitions](http://schemas.microsoft.com/xps/2005/06/signature-definitions)|  
|DiscardControl|http://schemas.microsoft.com/xps/2005/06/discard-control|  
|DocumentStructure|http://schemas.microsoft.com/xps/2005/06/documentstructure|  
|PrintTicket|http://schemas.microsoft.com/xps/2005/06/printticket|  
|필요한 리소스|http://schemas.microsoft.com/xps/2005/06/required-resource|  
|제한 된 글꼴|http://schemas.microsoft.com/xps/2005/06/restricted-font|  
|StartPart|http://schemas.microsoft.com/xps/2005/06/fixedrepresentation|  
|StoryFragments|http://schemas.microsoft.com/xps/2005/06/storyfragments|  
  
 패키지 관계에 대 한 자세한 내용은 1.3의 섹션을 참조 하십시오.는 *열려 패키징 규칙 (OPC)* 사양에서 다운로드할 수 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.  
  
 XPS에 대 한 자세한 내용은 문서에 대 한는 *Open XPS XML Paper Specification ()* 에서 다운로드할 수 [ http://go.microsoft.com/fwlink/?LinkID=67000 ](http://go.microsoft.com/fwlink/?LinkID=67000)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="targetMode" /> parameter is not a valid <see cref="T:System.IO.Packaging.TargetMode" /> enumeration value.</exception>
        <exception cref="T:System.ArgumentException">The part identified by the <paramref name="targetUri" /> is a relationship (the target of a relationship cannot be another relationship).  -or-  <paramref name="targetMode" /> is specified as <see cref="F:System.IO.Packaging.TargetMode.Internal" /> but <paramref name="targetUri" /> is an absolute external [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</exception>
        <exception cref="T:System.IO.IOException">The package is read-only (a new relationship cannot be added).</exception>
        <altmember cref="Overload:System.IO.Packaging.Package.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType, System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.CreateRelationship : Uri * System.IO.Packaging.TargetMode * string * string -&gt; System.IO.Packaging.PackageRelationship" Usage="packagePart.CreateRelationship (targetUri, targetMode, relationshipType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the target part.</param>
        <param name="targetMode">One of the enumeration values. For example, <see cref="F:System.IO.Packaging.TargetMode.Internal" /> if the target part is inside the <see cref="T:System.IO.Packaging.Package" />; or <see cref="F:System.IO.Packaging.TargetMode.External" /> if the target is a resource outside the <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="relationshipType">The role of the relationship.</param>
        <param name="id">A unique ID for the relationship.</param>
        <summary>Creates a part-level relationship between this <see cref="T:System.IO.Packaging.PackagePart" /> to a specified target <see cref="T:System.IO.Packaging.PackagePart" /> or external resource.</summary>
        <returns>The part-level relationship between this <see cref="T:System.IO.Packaging.PackagePart" /> to the target <see cref="T:System.IO.Packaging.PackagePart" /> or external resource.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 파트 수준 관계가이 일부 대상 파트 또는 리소스 간의 연결을 정의 합니다.  파트 수준 관계는 다음 두 형식 중 하나일 수 있습니다.  
  
-   간의 <xref:System.IO.Packaging.PackagePart> 대상 <xref:System.IO.Packaging.PackagePart> 내는 <xref:System.IO.Packaging.Package>합니다.  
  
-   간의 <xref:System.IO.Packaging.PackagePart> 패키지 외부의 대상 리소스입니다.  
  
 파트 관계 소스 파트 관계의 "소유자"로 간주 됩니다.  소스 파트를 삭제 하면 부분이 소유 하는 모든 관계도 삭제 됩니다.  대상 파트나 리소스 어떤 방식으로든에서 만들거나 관계 삭제 프로세스 물리적으로 변경 하지 않습니다.  
  
 `id` 유효한 XML 식별자 여야 합니다.  `id` 형식은 xsd: id 이며에 설명 된 명명 규칙을 따라야는 *XML 스키마 2 부: Datatypes* 사양 (참조 [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).  
  
 <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> 메서드 소스 파트 또는 대상 파트 또는 리소스에 어떤 방식으로 물리적으로 변경 하지 않습니다.  
  
 관계의 대상 다른 관계를 지정할 수 없습니다.  
  
 경우 `targetMode` 로 지정 된 <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` 에 따라 구성 되는 상대 URI 이어야 합니다는 [RFC 3986](http://tools.ietf.org/html/rfc3986) *식별자 URI (Uniform Resource) 일반 구문을* 사양입니다.  내부 상대 URI 수는 절대 경로일 수로 시작 하는 슬래시 ("/") 문자와 같은 "/ page1.xaml" 또는 "/ images/picture4.jpg", 또는 상대 경로와 같은 "... / imagespicture1.jpg "패키지 루트에 대해 ("/ ")로 기본 URI를 확인 합니다.  
  
 경우 `targetMode` 로 지정 된 <xref:System.IO.Packaging.TargetMode.External>, `targetUri` 에 따라 만든 상대 URI 또는 절대 두 수의 [RFC 3986](http://tools.ietf.org/html/rfc3986) *식별자 URI (Uniform Resource) 일반 구문을*사양입니다.  "http://www.microsoft.com/page2.xml"는 대상 외부 리소스 "page2.xml"를 참조 하는 절대 URI의 예시입니다.  "images/picture1.jpg"는는 외부 대상 리소스 "1.jpg"는 해결 되지만 패키지 자체의 URI에 대해를 참조 하는 상대 URI의 예시입니다.  
  
 `relationshipType` 있어야는 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 에 따라 형식이 [RFC 3986](http://tools.ietf.org/html/rfc3986) *식별자 URI (Uniform Resource) 일반 구문을* 사양입니다.  다른 패키지 형식은 다른 파트 수준 관계 유형을 정의할 수 있습니다.  다음 표에 나와 파트 수준 `relationshipType` 준수 하는 문서에 대해 정의 된 Uri는 *Open XPS XML Paper Specification ()* 합니다.  
  
|XPS 문서 파트 수준 관계|관계 유형 URI|  
|-------------------------------------------|---------------------------|  
|디지털 서명 정의|http://schemas.microsoft.com/xps/2005/06/signature-definitions|  
|DiscardControl|http://schemas.microsoft.com/xps/2005/06/discard-control|  
|DocumentStructure|http://schemas.microsoft.com/xps/2005/06/documentstructure|  
|PrintTicket|http://schemas.microsoft.com/xps/2005/06/printticket|  
|필요한 리소스|http://schemas.microsoft.com/xps/2005/06/required-resource|  
|제한 된 글꼴|http://schemas.microsoft.com/xps/2005/06/restricted-font|  
|StartPart|http://schemas.microsoft.com/xps/2005/06/fixedrepresentation|  
|StoryFragments|http://schemas.microsoft.com/xps/2005/06/storyfragments|  
  
 패키지 관계에 대 한 자세한 내용은 1.3의 섹션을 참조 하십시오.는 *열려 패키징 규칙 (OPC)* 사양에서 다운로드할 수 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.  
  
 XPS에 대 한 자세한 내용은 문서에 대 한는 *Open XPS XML Paper Specification ()* 에서 다운로드할 수 [ http://go.microsoft.com/fwlink/?LinkID=67000 ](http://go.microsoft.com/fwlink/?LinkID=67000)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="targetMode" /> parameter is not a valid <see cref="T:System.IO.Packaging.TargetMode" /> enumeration value.</exception>
        <exception cref="T:System.ArgumentException">The part identified by the <paramref name="targetUri" /> is a relationship (the target of a relationship cannot be another relationship).  -or-  <paramref name="targetMode" /> is specified as <see cref="F:System.IO.Packaging.TargetMode.Internal" /> but <paramref name="targetUri" /> is an absolute external [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</exception>
        <exception cref="T:System.IO.IOException">The package is read-only (a new relationship cannot be added).</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="id" /> is not a valid XML identifier.  -or-  A part with the specified <paramref name="id" /> already exists.</exception>
        <altmember cref="Overload:System.IO.Packaging.Package.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteRelationship">
      <MemberSignature Language="C#" Value="public void DeleteRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteRelationship (id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteRelationship(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.DeleteRelationship : string -&gt; unit" Usage="packagePart.DeleteRelationship id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to delete.</param>
        <summary>Deletes a specified part-level <see cref="T:System.IO.Packaging.PackageRelationship" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `id` 유효한 XML 식별자 여야 합니다.  `id` 형식은 xsd: id 이며에 설명 된 명명 규칙을 따라야는 *XML 스키마 2 부: Datatypes* 사양 (참조 [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).  
  
 하는 경우 지정 된 `id` 와 일치 하지 않습니다는 <xref:System.IO.Packaging.PackageRelationship.Id%2A> 이 부분이 소유 하는 관계의 모든에 대해 어떠한 관계도 삭제 되 고 예외가 throw 되지 않습니다.  
  
 지정된 된 관계를 삭제할는 <xref:System.IO.Packaging.PackagePart.DeleteRelationship%2A> 이 파트 또는 대상 메서드가 실제로 변경 하지 않습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> is <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">The package is read-only (relationships cannot be deleted).</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="id" /> is not a valid XML identifier.</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetContentTypeCore">
      <MemberSignature Language="C#" Value="protected virtual string GetContentTypeCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetContentTypeCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetContentTypeCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetContentTypeCore () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetContentTypeCore();" />
      <MemberSignature Language="F#" Value="abstract member GetContentTypeCore : unit -&gt; string&#xA;override this.GetContentTypeCore : unit -&gt; string" Usage="packagePart.GetContentTypeCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>When overridden in a derived class, returns the [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] type of the part content.</summary>
        <returns>The [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] type of the part content.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.GetContentTypeCore%2A> 메서드는 가상 메서드이며는 <xref:System.IO.Packaging.PackagePart> 추상 기본 클래스입니다. 파생된 형식, 작성 시간에 콘텐츠 형식에 대 한 값 없습니다 제공 하는 경우에이 메서드를 구현 하거나 콘텐츠 형식 값은 nontrivial 또는 비용이 많이 드는 작업 합니다. 반환 값은 올바른 이어야 합니다 [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] 콘텐츠 형식입니다.  
  
 파생된 클래스를 호출할 수 <xref:System.IO.Packaging.PackagePart.GetContentTypeCore%2A> 초기화 하는 <xref:System.IO.Packaging.PackagePart.ContentType%2A> 기본값에 파생된 클래스의 속성입니다.  후의 <xref:System.IO.Packaging.PackagePart.ContentType%2A> 속성이 설정 되어이 변경할 수 없습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The derived class does not provide an override implementation required for the <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> method.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship GetRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship GetRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationship (id As String) As PackageRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ GetRelationship(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.GetRelationship : string -&gt; System.IO.Packaging.PackageRelationship" Usage="packagePart.GetRelationship id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to return.</param>
        <summary>Returns the relationship that has a specified <see cref="P:System.IO.Packaging.PackageRelationship.Id" />.</summary>
        <returns>The relationship that matches the specified <paramref name="id" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `id` 유효한 XML 식별자 여야 합니다.  `id` 형식은 xsd: id 이며에 설명 된 명명 규칙을 따라야는 *XML 스키마 2 부: Datatypes* 사양 (참조 [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).  
  
 사용할 수는 <xref:System.IO.Packaging.PackagePart.RelationshipExists%2A> 메서드를 지정 된 관계를 확인 하려면 <xref:System.IO.Packaging.PackageRelationship.Id%2A> 이 부분이 소유 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="id" /> is not a valid XML identifier.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="relationshipType" /> is an empty string.</exception>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).  -or-  A relationship with the specified <paramref name="id" /> does not exist in the package.</exception>
        <exception cref="T:System.IO.IOException">The package is write-only (relationship information cannot be read).</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationships">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationships ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationships() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetRelationships" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationships () As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationships();" />
      <MemberSignature Language="F#" Value="member this.GetRelationships : unit -&gt; System.IO.Packaging.PackageRelationshipCollection" Usage="packagePart.GetRelationships " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a collection of all the relationships that are owned by this part.</summary>
        <returns>A collection of all the relationships that are owned by the part.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 된 컬렉션은 `null`있지만 부품 관계를 정의 하지 않는 경우 컬렉션 요소가 포함 될 수 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <exception cref="T:System.IO.IOException">The package is write-only (relationship information cannot be read).</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipsByType">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType (string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType(string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipsByType (relationshipType As String) As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationshipsByType(System::String ^ relationshipType);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipsByType : string -&gt; System.IO.Packaging.PackageRelationshipCollection" Usage="packagePart.GetRelationshipsByType relationshipType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationshipType">The <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> of the relationships to locate and return in the collection.</param>
        <summary>Returns a collection of the relationships that match a specified <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</summary>
        <returns>A collection of the relationships that match the specified <paramref name="relationshipType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 반환 된 컬렉션은 `null`소비량이 적어지지만 관계가 없으면 지정 된 일치 하는 경우 컬렉션 요소가 포함 될 수 있습니다 `relationshipType` 파트에 대해 정의 된 합니다.  
  
 선행 또는 후행 공백은 `relationshipType` 문자열 자동으로 제거 됩니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relationshipType" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="relationshipType" /> is an empty string.</exception>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <exception cref="T:System.IO.IOException">The package is write-only (relationship information cannot be read).</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStream">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Returns the part content data stream.</summary>
        <block subset="none" type="usage">
          <para>
            <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> 내부적으로 호출 하는 파생 된 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 파생된 클래스에서 구현 된 실제 형식에 따라 방법을 실제로 열고 파트 데이터 스트림의 반환 합니다.  기본적으로는 <see cref="T:System.IO.Packaging.ZipPackagePart" /> 하위 클래스는 추상 구현의 <see cref="T:System.IO.Packaging.PackagePart" /> 클래스에 제공 되 고 사용 됩니다.  기본 동작에서 <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> 내부적으로 호출 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 의 <see cref="T:System.IO.Packaging.ZipPackagePart" /> 열고 파트 데이터 스트림의 ZIP 파일에서 반환 하는 클래스입니다.</para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream();" />
      <MemberSignature Language="F#" Value="member this.GetStream : unit -&gt; System.IO.Stream" Usage="packagePart.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the part content data stream.</summary>
        <returns>The content data stream for the part.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 콘텐츠 스트림을 엽니다 <xref:System.IO.FileMode> 의 <xref:System.IO.FileMode.OpenOrCreate> 및 <xref:System.IO.FileAccess> 부모와 동일 하 게 사용 권한을 <xref:System.IO.Packaging.Package>합니다.  
  
 오버 로드 <xref:System.IO.Packaging.PackagePart.GetStream%2A> 메서드를 사용 하면 특정을 설정할 수 있습니다 <xref:System.IO.FileMode>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <exception cref="T:System.IO.IOException">The stream object returned by the <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> method of the derived subclass is <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>
            <see cref="M:System.IO.Packaging.PackagePart.GetStream" /> 내부적으로 호출 하는 파생 된 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 파생된 클래스에서 구현 된 실제 형식에 따라 방법을 실제로 열고 파트 데이터 스트림의 반환 합니다.  기본적으로는 <see cref="T:System.IO.Packaging.ZipPackagePart" /> 하위 클래스는 추상 구현의 <see cref="T:System.IO.Packaging.PackagePart" /> 클래스에 제공 되 고 사용 됩니다.  기본 동작에서 <see cref="M:System.IO.Packaging.PackagePart.GetStream" /> 내부적으로 호출 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 의 <see cref="T:System.IO.Packaging.ZipPackagePart" /> 열고 파트 데이터 스트림의 ZIP 파일에서 반환 하는 클래스입니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream (System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream(valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (mode As FileMode) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream(System::IO::FileMode mode);" />
      <MemberSignature Language="F#" Value="member this.GetStream : System.IO.FileMode -&gt; System.IO.Stream" Usage="packagePart.GetStream mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="mode">The I/O mode in which to open the content stream.</param>
        <summary>Returns the content stream opened in a specified I/O <see cref="T:System.IO.FileMode" />.</summary>
        <returns>The content stream of the part.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.FileAccess> 반환 된 콘텐츠 스트림의 권한은 부모 권한과 동일 <xref:System.IO.Packaging.Package>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="mode" /> parameter is not a valid <see cref="T:System.IO.FileMode" /> enumeration value.</exception>
        <exception cref="T:System.IO.IOException">The <paramref name="mode" /> parameter is not compatible with the package and part stream.  -or-  The stream object returned by the <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> method of the derived subclass is <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>
            <see cref="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)" /> 내부적으로 호출 하는 파생 된 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 파생된 클래스에서 구현 된 실제 형식에 따라 방법을 실제로 열고 파트 데이터 스트림의 반환 합니다.  기본적으로는 <see cref="T:System.IO.Packaging.ZipPackagePart" /> 하위 클래스는 추상 구현의 <see cref="T:System.IO.Packaging.PackagePart" /> 클래스에 제공 되 고 사용 됩니다.  기본 동작에서 <see cref="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)" /> 내부적으로 호출 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 의 <see cref="T:System.IO.Packaging.ZipPackagePart" /> 열고 파트 데이터 스트림의 ZIP 파일에서 반환 하는 클래스입니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream (System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream(valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (mode As FileMode, access As FileAccess) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream(System::IO::FileMode mode, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="member this.GetStream : System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Stream" Usage="packagePart.GetStream (mode, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="mode">The I/O mode in which to open the content stream.</param>
        <param name="access">The access permissions to use in opening the content stream.</param>
        <summary>Returns the part content stream opened with a specified <see cref="T:System.IO.FileMode" /> and <see cref="T:System.IO.FileAccess" />.</summary>
        <returns>The content stream for the part.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="mode" /> parameter is not a valid <see cref="T:System.IO.FileMode" /> enumeration value.  -or-  The <paramref name="access" /> parameter is not a valid <see cref="T:System.IO.FileAccess" /> enumeration value.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="mode" /> or <paramref name="access" /> is not compatible with the package and part stream.  -or-  The <paramref name="access" /> parameter is specified as <see cref="F:System.IO.FileAccess.Read" /> but the <paramref name="mode" /> parameter requires write access.  (<see cref="T:System.IO.FileMode" /> values of <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, <see cref="F:System.IO.FileMode.Truncate" />, and <see cref="F:System.IO.FileMode.Append" /> require <see cref="F:System.IO.FileAccess.Write" /> or <see cref="F:System.IO.FileAccess.ReadWrite" /> access.)  -or-  The stream object returned by the <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> method of the derived subclass is <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>
            <see cref="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)" /> 내부적으로 호출 하는 파생 된 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 파생된 클래스에서 구현 된 실제 형식에 따라 방법을 실제로 열고 파트 데이터 스트림의 반환 합니다.  기본적으로는 <see cref="T:System.IO.Packaging.ZipPackagePart" /> 하위 클래스는 추상 구현의 <see cref="T:System.IO.Packaging.PackagePart" /> 클래스에 제공 되 고 사용 됩니다.  기본 동작에서 <see cref="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)" /> 내부적으로 호출 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 의 <see cref="T:System.IO.Packaging.ZipPackagePart" /> 열고 파트 데이터 스트림의 ZIP 파일에서 반환 하는 클래스입니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetStreamCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Stream GetStreamCore (System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Stream GetStreamCore(valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetStreamCore (mode As FileMode, access As FileAccess) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IO::Stream ^ GetStreamCore(System::IO::FileMode mode, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="abstract member GetStreamCore : System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Stream" Usage="packagePart.GetStreamCore (mode, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="mode">The I/O mode in which to open the content stream.</param>
        <param name="access">The access permissions to use in opening the content stream.</param>
        <summary>When overridden in a derived class, returns the part content stream opened with a specified <see cref="T:System.IO.FileMode" /> and <see cref="T:System.IO.FileAccess" />.</summary>
        <returns>The content data stream of the part.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응용 프로그램을 호출 하지 않아야 <xref:System.IO.Packaging.PackagePart.GetStreamCore%2A> 를 직접은 <xref:System.IO.Packaging.PackagePart.GetStream%2A>합니다.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>파생 된 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 구현을 수행 하는 작업이 나 순서에 대해 어떠한가 정도 하지 확인 해야는 <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> 메서드를 호출 합니다.</para>
        </block>
        <block subset="none" type="usage">
          <para>파생 된 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 메서드는 <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> 열고 파트 데이터 스트림의 반환 하는 메서드를 파생된 클래스에서 구현 하는 실제 형식에 기반 합니다.  기본적으로는 <see cref="T:System.IO.Packaging.ZipPackagePart" /> 하위 클래스는 추상 구현의 <see cref="T:System.IO.Packaging.PackagePart" /> 클래스에 제공 되 고 사용 됩니다.  기본 동작에서 <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> 내부적으로 호출 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 의 <see cref="T:System.IO.Packaging.ZipPackagePart" /> 열고 파트 데이터 스트림의 ZIP 파일에서 반환 하는 클래스입니다.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Package">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package Package { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.Package Package" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackagePart.Package" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Package As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::Package ^ Package { System::IO::Packaging::Package ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Package : System.IO.Packaging.Package" Usage="System.IO.Packaging.PackagePart.Package" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parent <see cref="T:System.IO.Packaging.Package" /> of the part.</summary>
        <value>파트의 부모 패키지입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.Package%2A> 액세스할 수 있는 읽기 전용 속성은 경우에만 부모 <xref:System.IO.Packaging.Package> 열려 있습니다.  
  
 <xref:System.IO.Packaging.PackagePart.Package%2A> 속성은 자동 설정 된 <xref:System.IO.Packaging.PackagePart.%23ctor%2A> 생성자입니다.  부모 생성자에 의해 설정 된 후 <xref:System.IO.Packaging.PackagePart.Package%2A> 부분을 변경할 수 없습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
      </Docs>
    </Member>
    <Member MemberName="RelationshipExists">
      <MemberSignature Language="C#" Value="public bool RelationshipExists (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RelationshipExists(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RelationshipExists (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RelationshipExists(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.RelationshipExists : string -&gt; bool" Usage="packagePart.RelationshipExists id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to check for.</param>
        <summary>Returns a value that indicates whether this part owns a relationship with a specified <see cref="P:System.IO.Packaging.PackageRelationship.Id" />.</summary>
        <returns>
          <see langword="true" /> if this part owns a relationship with the specified <paramref name="id" />; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `id` 유효한 XML 식별자 여야 합니다.  `id` 형식은 xsd: id 이며에 설명 된 명명 규칙을 따라야는 *XML 스키마 2 부: Datatypes* 사양 (참조 [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="id" /> is not a valid XML identifier.</exception>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <exception cref="T:System.IO.IOException">The package is write-only (relationship information cannot be read).</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackagePart.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Uri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="System.IO.Packaging.PackagePart.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the part.</summary>
        <value>[! INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 패키지 루트에 상대적인 부분의 합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.Uri%2A> 액세스할 수 있는 읽기 전용 속성은 경우에만 부모 <xref:System.IO.Packaging.Package> 열려 있습니다.  
  
 <xref:System.IO.Packaging.PackagePart.Uri%2A> 속성은 자동 설정 된 <xref:System.IO.Packaging.PackagePart.%23ctor%2A> 생성자입니다.  생성자에 의해 설정 된 후의 <xref:System.IO.Packaging.PackagePart.Uri%2A> 파트의 변경할 수 없습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
  </Members>
</Type>