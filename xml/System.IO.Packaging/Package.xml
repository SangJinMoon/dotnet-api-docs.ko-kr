<Type Name="Package" FullName="System.IO.Packaging.Package">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e633ba759596ecfd98d51e13ceacad970601b282" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37759520" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Package : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Package extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.Package" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Package&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Package abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type Package = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="0a6e2-101">Represents a container that can store multiple data objects.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a6e2-101">Represents a container that can store multiple data objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-102"><xref:System.IO.Packaging.Package> 단일 엔터티로 이식성과 효율적인 액세스에 대 한 실제 정의 된 형식의 개체를 구성 하는 추상 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-102"><xref:System.IO.Packaging.Package> is an abstract class that can be used to organize objects into a single entity of a defined physical format for portability and efficient access.</span></span>  
  
 <span data-ttu-id="0a6e2-103">ZIP 파일은 기본 실제 형식에 대 한는 <xref:System.IO.Packaging.Package>합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-103">A ZIP file is the primary physical format for the <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="0a6e2-104">다른 <xref:System.IO.Packaging.Package> 구현 XML 문서, 데이터베이스 등의 다른 실제 형식을 사용 하 여 또는 웹 서비스 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-104">Other <xref:System.IO.Packaging.Package> implementations might use other physical formats such as an XML document, a database, or Web service.</span></span>  
  
 <span data-ttu-id="0a6e2-105">같은 파일 시스템에 포함 된 항목을 <xref:System.IO.Packaging.Package> 파일과 폴더의 계층 구조에서 참조 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-105">Like a file system, items contained in a <xref:System.IO.Packaging.Package> are referenced in a hierarchical organization of folders and files.</span></span>  
  
 <span data-ttu-id="0a6e2-106">하지만 <xref:System.IO.Packaging.Package> 자체는 추상 클래스는 <xref:System.IO.Packaging.ZipPackage> 파생된 클래스에서 기본적으로 사용 됩니다는 <xref:System.IO.Packaging.Package.Open%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-106">Although <xref:System.IO.Packaging.Package> itself is an abstract class, the <xref:System.IO.Packaging.ZipPackage> derived class is used as default by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="0a6e2-107">A <xref:System.IO.Packaging.PackagePart> ("파트")에 저장 된 개체를 나타내는 추상 클래스는를 <xref:System.IO.Packaging.Package>입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-107">A <xref:System.IO.Packaging.PackagePart> ("part") is the abstract class that represents an object that is stored in a <xref:System.IO.Packaging.Package>.</span></span>  
  
 <span data-ttu-id="0a6e2-108">A <xref:System.IO.Packaging.PackageRelationship> ("관계")을 원본 간의 연결을 정의 <xref:System.IO.Packaging.Package> 또는 <xref:System.IO.Packaging.PackagePart> 와 대상 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-108">A <xref:System.IO.Packaging.PackageRelationship> ("relationship") defines an association between a source <xref:System.IO.Packaging.Package> or <xref:System.IO.Packaging.PackagePart> and a target object.</span></span>  <span data-ttu-id="0a6e2-109"><xref:System.IO.Packaging.PackageRelationship> 두 가지 형식 중 하나일 수 있습니다 각 두 형식 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-109">A <xref:System.IO.Packaging.PackageRelationship> can be one of two types, each of which can be one of two forms:</span></span>  
  
-   <span data-ttu-id="0a6e2-110">패키지 수준 관계를 (만든 합니다 <xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType> 메서드) 연결을 <xref:System.IO.Packaging.Package> 를:</span><span class="sxs-lookup"><span data-stu-id="0a6e2-110">A package-level relationship (created by the <xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType> method) relates a <xref:System.IO.Packaging.Package> to either:</span></span>  
  
    -   <span data-ttu-id="0a6e2-111">패키지의 대상 부분입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-111">A target part in the package.</span></span>  
  
    -   <span data-ttu-id="0a6e2-112">패키지 외부의 대상 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-112">A target resource outside the package.</span></span>  
  
-   <span data-ttu-id="0a6e2-113">파트 수준 관계 (만든 합니다 <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType> 메서드) 원본 관련 <xref:System.IO.Packaging.PackagePart> 에:</span><span class="sxs-lookup"><span data-stu-id="0a6e2-113">A part-level relationship (created by the <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType> method) relates a source <xref:System.IO.Packaging.PackagePart> to either:</span></span>  
  
    -   <span data-ttu-id="0a6e2-114">패키지의 다른 대상 부분입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-114">Another target part in the package.</span></span>  
  
    -   <span data-ttu-id="0a6e2-115">패키지 외부의 대상 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-115">A target resource outside the package.</span></span>  
  
 <span data-ttu-id="0a6e2-116">관계의 원본 <xref:System.IO.Packaging.Package> 또는 원본 <xref:System.IO.Packaging.PackagePart> 관계의 "소유자"로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-116">The relationship's source <xref:System.IO.Packaging.Package> or source <xref:System.IO.Packaging.PackagePart> is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="0a6e2-117">원본 개체를 삭제 하는 경우 원본 개체를 소유한 모든 관계도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-117">When the source object is deleted, all the relationships owned by the source object are also deleted.</span></span>  <span data-ttu-id="0a6e2-118">만들기 또는 관계를 삭제 하면 프로세스는 어떤 방식으로 원본 또는 대상 개체를 물리적으로 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-118">The process of creating or deleting a relationship does not physically change either the source or target objects in any way.</span></span>  
  
 <span data-ttu-id="0a6e2-119">A <xref:System.IO.Packaging.PackageDigitalSignature> ("디지털 시그니처")가 파트 및 관계에 포함 된 디지털 서명을 나타내는 결합을 <xref:System.IO.Packaging.Package>입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-119">A <xref:System.IO.Packaging.PackageDigitalSignature> ("digital signature") is a composition of parts and relationships representing a digital signature included with a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="0a6e2-120">디지털 서명은 송신자를 식별 하 고 서명 된 파트 및 관계에 포함 되도록의 유효성을 검사 합니다 <xref:System.IO.Packaging.Package> 수정 되지 않은 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-120">The digital signature identifies the originator and validates that the signed parts and relationships contained in the <xref:System.IO.Packaging.Package> have not been modified.</span></span>  
  
 <span data-ttu-id="0a6e2-121">패키지에도 관리 DRM (디지털 권한)의 콘텐츠 요소는 지원를 <xref:System.IO.Packaging.Package> 권한 있는 사용자에 게 부여 하는 특정 액세스 권한을 사용 하 여 암호화 되도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-121">Packages also support Digital Rights Management (DRM) which allows content elements in a <xref:System.IO.Packaging.Package> to be encrypted with specific access rights granted to authorized users.</span></span>  
  
 <span data-ttu-id="0a6e2-122">기반으로 합니다 <xref:System.IO.Packaging.Package> 아키텍처는 <xref:System.Windows.Xps.Packaging.XpsDocument> 열기를 기반으로 문서를 저장 하기 위한 패키지 형식인 [사양 XPS (XML Paper)](http://go.microsoft.com/fwlink/?LinkID=65761).</span><span class="sxs-lookup"><span data-stu-id="0a6e2-122">Based on the <xref:System.IO.Packaging.Package> architecture, an <xref:System.Windows.Xps.Packaging.XpsDocument> is a package type designed for storing documents based on the open [XML Paper Specification (XPS)](http://go.microsoft.com/fwlink/?LinkID=65761).</span></span>  
  
 <span data-ttu-id="0a6e2-123">.NET Framework에서는 패키지 콘텐츠, 리소스 및 페이지 및 기본적으로 표준 ZIP 파일을 사용 하 여 문서에 대 한 관계를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-123">The .NET Framework uses packages to store content, resources, and relationships for pages and documents using a standard ZIP file by default.</span></span> <span data-ttu-id="0a6e2-124">모든 ZIP 파일을 사용 하 여 응용 프로그램 사용할 수는 <xref:System.IO.Packaging> 저장 하 고 필요에 따라 액세스를 효율적으로 하나의 컨테이너에 데이터 파일의 여러 또는 모든 형식을 보호 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-124">As with any ZIP file, your application can use the <xref:System.IO.Packaging> classes to store and optionally protect any type or number of data files in a single efficient-to-access container.</span></span>  
  
 <span data-ttu-id="0a6e2-125">자세한 내용은 참조 OPC Open Packaging Conventions () 사양에서 다운로드할 수 있습니다 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-125">For more information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a6e2-126">다음 예제에서는 만드는 기본 단계는 <xref:System.IO.Packaging.Package>합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-126">The following example shows the basic steps for creating a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="0a6e2-127">이 예제에서는 문서의 일부로 표시 되는 그래픽 이미지와 함께 문서를 포함 하는 패키지가 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-127">In this example, a package is created to contain a document together with a graphic image that is displayed as part of the document.</span></span>  <span data-ttu-id="0a6e2-128">(이 HTML 파일에 지정 된 경우 비슷합니다는 \<i m G > 외부 이미지 파일을 참조 하는 태그입니다.)  두 <xref:System.IO.Packaging.PackageRelationship> 요소 패키지에도 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-128">(This is similar to the case in which an HTML file has an \<IMG> tag that references an external image file.)  Two <xref:System.IO.Packaging.PackageRelationship> elements are also included in the package.</span></span>  <span data-ttu-id="0a6e2-129">첫 번째 "패키지 수준" 관계를 패키지의 루트 요소로 문서 파트를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-129">The first, a "package-level" relationship, defines the document part as the package's root element.</span></span>  <span data-ttu-id="0a6e2-130">두 번째, "파트 수준" 관계 문서 파트 (파트 수준 관계의 "원본") 및 이미지 파트 (파트 수준 관계의 "대상")의 사용 간의 연결을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-130">A second, "part-level" relationship defines the association between the document part (the "source" of the part-level relationship) and its use of the image part (the "target" of the part-level relationship).</span></span>  <span data-ttu-id="0a6e2-131">전체 샘플을 참조 하세요 [패키지 작성 샘플](http://go.microsoft.com/fwlink/?LinkID=160055)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-131">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.PackagePart" />
    <altmember cref="T:System.Windows.Xps.Packaging.XpsDocument" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a6e2-132">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-132">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Package (System.IO.FileAccess openFileAccess);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.FileAccess openFileAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (openFileAccess As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Package(System::IO::FileAccess openFileAccess);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.Package : System.IO.FileAccess -&gt; System.IO.Packaging.Package" Usage="new System.IO.Packaging.Package openFileAccess" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="openFileAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="openFileAccess">
          <span data-ttu-id="0a6e2-133">The file IO permissions for the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-133">The file IO permissions for the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-134">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class that uses a given <see cref="T:System.IO.FileAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-134">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class that uses a given <see cref="T:System.IO.FileAccess" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-135"><xref:System.IO.Packaging.Package.%23ctor%2A> 생성자는 protected 생성자는 <xref:System.IO.Packaging.Package> 추상 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-135"><xref:System.IO.Packaging.Package.%23ctor%2A> is a protected constructor of the <xref:System.IO.Packaging.Package> abstract base class.</span></span> <span data-ttu-id="0a6e2-136">파생된 클래스에서 호출 된 경우는 <xref:System.IO.Packaging.Package.%23ctor%2A> 생성자는 파생된 클래스의 새 인스턴스를 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-136">When called in a derived class, the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor initializes a new instance of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a6e2-137">The value for <paramref name="openFileAccess" /> is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-137">The value for <paramref name="openFileAccess" /> is not valid.</span>
          </span>
        </exception>
        <altmember cref="P:System.IO.Packaging.Package.FileOpenAccess" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Package (System.IO.FileAccess openFileAccess, bool streaming);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.FileAccess openFileAccess, bool streaming) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (openFileAccess As FileAccess, streaming As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Package(System::IO::FileAccess openFileAccess, bool streaming);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.Package : System.IO.FileAccess * bool -&gt; System.IO.Packaging.Package" Usage="new System.IO.Packaging.Package (openFileAccess, streaming)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="openFileAccess" Type="System.IO.FileAccess" />
        <Parameter Name="streaming" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="openFileAccess">
          <span data-ttu-id="0a6e2-138">The file IO permissions for the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-138">The file IO permissions for the package.</span>
          </span>
        </param>
        <param name="streaming">
          <span data-ttu-id="0a6e2-139">
            <see langword="true" /> to open the package for streaming; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-139">
              <see langword="true" /> to open the package for streaming; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-140">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class that uses a given <see cref="T:System.IO.FileAccess" /> and streaming option.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-140">Initializes a new instance of the <see cref="T:System.IO.Packaging.Package" /> class that uses a given <see cref="T:System.IO.FileAccess" /> and streaming option.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-141"><xref:System.IO.Packaging.Package.%23ctor%2A> 생성자는 protected 생성자는 <xref:System.IO.Packaging.Package> 추상 기본 추상 기본 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-141"><xref:System.IO.Packaging.Package.%23ctor%2A> is a protected constructor of the <xref:System.IO.Packaging.Package> abstract base abstract base class.</span></span> <span data-ttu-id="0a6e2-142">파생된 클래스에서 호출 된 경우는 <xref:System.IO.Packaging.Package.%23ctor%2A> 생성자는 파생된 클래스의 새 인스턴스를 초기화 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-142">When called in a derived class, the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor initializes a new instance of the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a6e2-143">The value for <paramref name="openFileAccess" /> is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-143">The value for <paramref name="openFileAccess" /> is not valid.</span>
          </span>
        </exception>
        <altmember cref="P:System.IO.Packaging.Package.FileOpenAccess" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="package.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a6e2-144">Saves and closes the package plus all underlying part streams.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-144">Saves and closes the package plus all underlying part streams.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-145">에 대 한는 <xref:System.IO.Packaging.Package> 클래스 <xref:System.IO.Packaging.Package.Close%2A> 하 고 <xref:System.IO.Packaging.Package.Dispose%2A> 동일한 작업을 수행-호출할 필요가 없습니다 <xref:System.IO.Packaging.Package.Dispose%2A> 호출 하는 경우 <xref:System.IO.Packaging.Package.Close%2A>, 또는 그 반대로 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-145">For the <xref:System.IO.Packaging.Package> class <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> perform the same operation—there is no reason to call <xref:System.IO.Packaging.Package.Dispose%2A> if you call <xref:System.IO.Packaging.Package.Close%2A>, or vice-versa.</span></span>  
  
 <span data-ttu-id="0a6e2-146"><xref:System.IO.Packaging.Package.Close%2A> 및 <xref:System.IO.Packaging.Package.Dispose%2A> 내부적으로 호출 <xref:System.IO.Packaging.Package.Flush%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-146"><xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> internally call <xref:System.IO.Packaging.Package.Flush%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a6e2-147">`using` 문 (다릅니다 합니다 `using` 네임 스페이스 지시문) 하는 권장 방법은 <xref:System.IO.Packaging.Package.Close%2A> 및 <xref:System.IO.Packaging.Package.Dispose%2A> 패키지 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-147">The `using` statement (different from the `using` namespace directive) is the recommended way to <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> a package.</span></span>  <span data-ttu-id="0a6e2-148">[패키지 예제 추가 정보를 작성](http://go.microsoft.com/fwlink/?LinkID=160055) 및 [는 패키지 예제 추가 정보를 읽는](http://go.microsoft.com/fwlink/?LinkID=160034) 닫고를 사용 하 여 패키지를 삭제 하는 방법을 보여는 `using` 문.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-148">[Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055) and [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034) show how to close and dispose a package by using the `using` statement.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Packaging.PackagePart" />
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePart">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a6e2-149">Creates a new package part.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-149">Creates a new package part.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-150"><xref:System.IO.Packaging.Package.CreatePart%2A> 빈 초기화 <xref:System.IO.Stream> 새 파트에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-150"><xref:System.IO.Packaging.Package.CreatePart%2A> initializes an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="0a6e2-151"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> 메서드 파트와 연결 된 스트림 인스턴스에 대 한 참조를 가져오는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-151">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="0a6e2-152">패키지 파트에 대 한 자세한 내용은 참조에서 다운로드할 수 있는 OPC Open Packaging Conventions () 사양의 섹션 1.1 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-152">For more information about package parts, see section 1.1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a6e2-153">다음 예제에서는 새로 만드는 방법을 보여 줍니다 <xref:System.IO.Packaging.PackagePart> 다음 부분에 데이터를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-153">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="0a6e2-154">전체 샘플을 참조 하세요 [패키지 작성 샘플](http://go.microsoft.com/fwlink/?LinkID=160055)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-154">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0a6e2-155">
            <para>
              <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> 파생된 클래스를 내부적으로 호출 <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> 실제로 파트를 만드는 메서드를 파생된 클래스에서 구현 된 실제 형식에 기반 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-155">
              <para>
                <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart CreatePart(class System.Uri partUri, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePart (partUri As Uri, contentType As String) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ CreatePart(Uri ^ partUri, System::String ^ contentType);" />
      <MemberSignature Language="F#" Value="member this.CreatePart : Uri * string -&gt; System.IO.Packaging.PackagePart" Usage="package.CreatePart (partUri, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="0a6e2-156">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the new part.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-156">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the new part.</span>
          </span>
        </param>
        <param name="contentType">
          <span data-ttu-id="0a6e2-157">The content type of the data stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-157">The content type of the data stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-158">Creates a new uncompressed part with a given URI and content type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-158">Creates a new uncompressed part with a given URI and content type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a6e2-159">The new created part.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-159">The new created part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-160"><xref:System.IO.Packaging.Package.CreatePart%2A> 빈 초기화 <xref:System.IO.Stream> 새 파트에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-160"><xref:System.IO.Packaging.Package.CreatePart%2A> initializes an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="0a6e2-161"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> 메서드 파트와 연결 된 스트림 인스턴스에 대 한 참조를 가져오는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-161">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="0a6e2-162">파트 <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> 는 <xref:System.IO.Packaging.CompressionOption.NotCompressed?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-162">The part <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> is <xref:System.IO.Packaging.CompressionOption.NotCompressed?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0a6e2-163">패키지 파트에 대 한 자세한 내용은 1.1 OPC Open Packaging Conventions () 사양의 섹션 다운로드할 수 있는 참조 하세요 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-163">For additional information about package parts, see section 1.1 in the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a6e2-164">다음 예제에서는 새로 만드는 방법을 보여 줍니다 <xref:System.IO.Packaging.PackagePart> 다음 부분에 데이터를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-164">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="0a6e2-165">전체 샘플을 참조 하세요 [패키지 작성 샘플](http://go.microsoft.com/fwlink/?LinkID=160055)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-165">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a6e2-166">
            <paramref name="partUri" /> or <paramref name="contentType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-166">
              <paramref name="partUri" /> or <paramref name="contentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a6e2-167">
            <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-167">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0a6e2-168">A part with the specified <paramref name="partUri" /> is already present in the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-168">A part with the specified <paramref name="partUri" /> is already present in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0a6e2-169">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-169">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a6e2-170">The package is read-only (a new part cannot be added).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-170">The package is read-only (a new part cannot be added).</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="0a6e2-171">
            <para>
              <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" /> 파생된 클래스의 내부적으로 호출 <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> 실제로 파트를 만드는 메서드를 파생된 클래스에서 구현 된 실제 형식에 기반 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-171">
              <para>
                <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.ZipPackagePart" />
      </Docs>
    </Member>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart CreatePart(class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ CreatePart(Uri ^ partUri, System::String ^ contentType, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberSignature Language="F#" Value="member this.CreatePart : Uri * string * System.IO.Packaging.CompressionOption -&gt; System.IO.Packaging.PackagePart" Usage="package.CreatePart (partUri, contentType, compressionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="0a6e2-172">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the new part.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-172">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the new part.</span>
          </span>
        </param>
        <param name="contentType">
          <span data-ttu-id="0a6e2-173">The content type of the data stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-173">The content type of the data stream.</span>
          </span>
        </param>
        <param name="compressionOption">
          <span data-ttu-id="0a6e2-174">The compression option for the data stream, <see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> or <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> compression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-174">The compression option for the data stream, <see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> or <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> compression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-175">Creates a new part with a given URI, content type, and compression option.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-175">Creates a new part with a given URI, content type, and compression option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a6e2-176">The new created part.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-176">The new created part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-177">기본 <xref:System.IO.Packaging.ZipPackage> 파생 클래스는 <xref:System.IO.Packaging.Package.CreatePart%2A> 메서드는 지원 두 `compressionOption` 값을 <xref:System.IO.Packaging.CompressionOption.NotCompressed> 또는 <xref:System.IO.Packaging.CompressionOption.Normal> 압축 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-177">For the default <xref:System.IO.Packaging.ZipPackage> derived class, the <xref:System.IO.Packaging.Package.CreatePart%2A> method only supports two `compressionOption` values, <xref:System.IO.Packaging.CompressionOption.NotCompressed> or <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  <span data-ttu-id="0a6e2-178">다른 <xref:System.IO.Packaging.CompressionOption> 의 값 <xref:System.IO.Packaging.CompressionOption.Maximum>를 <xref:System.IO.Packaging.CompressionOption.Fast>, 또는 <xref:System.IO.Packaging.CompressionOption.SuperFast> 사용 하 여 <xref:System.IO.Packaging.CompressionOption.Normal> 압축 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-178">Other <xref:System.IO.Packaging.CompressionOption> values of <xref:System.IO.Packaging.CompressionOption.Maximum>, <xref:System.IO.Packaging.CompressionOption.Fast>, or <xref:System.IO.Packaging.CompressionOption.SuperFast> use <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  
  
 <span data-ttu-id="0a6e2-179"><xref:System.IO.Packaging.Package.CreatePart%2A> 빈 만듭니다 <xref:System.IO.Stream> 새 파트에 대 한 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-179"><xref:System.IO.Packaging.Package.CreatePart%2A> creates an empty <xref:System.IO.Stream> for the new part.</span></span>  <span data-ttu-id="0a6e2-180"><xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> 메서드 파트와 연결 된 스트림 인스턴스에 대 한 참조를 가져오는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-180">The <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType> method can be used to obtain a reference to the stream instance associated with the part.</span></span>  
  
 <span data-ttu-id="0a6e2-181">자세한 내용은 참조 OPC Open Packaging Conventions () 사양에서 다운로드할 수 있습니다 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-181">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a6e2-182">다음 예제에서는 새로 만드는 방법을 보여 줍니다 <xref:System.IO.Packaging.PackagePart> 다음 부분에 데이터를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-182">The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.</span></span>  <span data-ttu-id="0a6e2-183">전체 샘플을 참조 하세요 [패키지 작성 샘플](http://go.microsoft.com/fwlink/?LinkID=160055)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-183">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePart](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepart)]
 [!code-vb[PackageWrite#PackageWriteCreatePart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepart)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a6e2-184">
            <paramref name="partUri" /> or <paramref name="contentType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-184">
              <paramref name="partUri" /> or <paramref name="contentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a6e2-185">
            <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-185">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0a6e2-186">A part with the specified <paramref name="partUri" /> is already present in the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-186">A part with the specified <paramref name="partUri" /> is already present in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a6e2-187">The <paramref name="compressionOption" /> value is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-187">The <paramref name="compressionOption" /> value is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0a6e2-188">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-188">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a6e2-189">The package is read-only (a new part cannot be added).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-189">The package is read-only (a new part cannot be added).</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="0a6e2-190">
            <para>
              <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> 파생된 클래스의 내부적으로 호출 <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> 실제로 파트를 만드는 메서드를 파생된 클래스에서 구현 된 실제 형식에 기반 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-190">
              <para>
                <see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> method to actually create the part based on the physical format implemented in the derived class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.ZipPackagePart" />
      </Docs>
    </Member>
    <Member MemberName="CreatePartCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart CreatePartCore (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart CreatePartCore(class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IO::Packaging::PackagePart ^ CreatePartCore(Uri ^ partUri, System::String ^ contentType, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberSignature Language="F#" Value="abstract member CreatePartCore : Uri * string * System.IO.Packaging.CompressionOption -&gt; System.IO.Packaging.PackagePart" Usage="package.CreatePartCore (partUri, contentType, compressionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="0a6e2-191">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] for the part being created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-191">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] for the part being created.</span>
          </span>
        </param>
        <param name="contentType">
          <span data-ttu-id="0a6e2-192">The content type of the data stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-192">The content type of the data stream.</span>
          </span>
        </param>
        <param name="compressionOption">
          <span data-ttu-id="0a6e2-193">The compression option for the data stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-193">The compression option for the data stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-194">When overridden in a derived class, creates a new part in the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-194">When overridden in a derived class, creates a new part in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a6e2-195">The created part.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-195">The created part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-196">파생 <xref:System.IO.Packaging.Package.CreatePartCore%2A> 메서드를 호출 합니다 <xref:System.IO.Packaging.Package.CreatePart%2A> 파생된 클래스에서 구현 된 실제 형식에 따라 파트를 만드는 방법.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-196">The derived <xref:System.IO.Packaging.Package.CreatePartCore%2A> method is called by the <xref:System.IO.Packaging.Package.CreatePart%2A> method to create a part based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="0a6e2-197">기본적으로 <xref:System.IO.Packaging.ZipPackage> 추상 클래스 구현을 파생 <xref:System.IO.Packaging.Package> 클래스에 제공 되 고 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-197">By default, a <xref:System.IO.Packaging.ZipPackage> derived class implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="0a6e2-198">기본 작업에 <xref:System.IO.Packaging.Package.CreatePart%2A> 내부적으로 호출 <xref:System.IO.Packaging.Package.CreatePartCore%2A> 의 <xref:System.IO.Packaging.ZipPackage> ZIP 파일에 새 파트를 만드는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-198">In the default operation, <xref:System.IO.Packaging.Package.CreatePart%2A> internally calls <xref:System.IO.Packaging.Package.CreatePartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to create a new part in a ZIP file.</span></span>  
  
 <span data-ttu-id="0a6e2-199">기본 <xref:System.IO.Packaging.ZipPackage> 파생 클래스는 <xref:System.IO.Packaging.Package.CreatePartCore%2A> 메서드는 지원 두 `compressionOption` 값을 <xref:System.IO.Packaging.CompressionOption.NotCompressed> 또는 <xref:System.IO.Packaging.CompressionOption.Normal> 압축 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-199">For the default <xref:System.IO.Packaging.ZipPackage> derived class, the <xref:System.IO.Packaging.Package.CreatePartCore%2A> method only supports two `compressionOption` values, <xref:System.IO.Packaging.CompressionOption.NotCompressed> or <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  <span data-ttu-id="0a6e2-200">다른 <xref:System.IO.Packaging.CompressionOption> 의 값 <xref:System.IO.Packaging.CompressionOption.Maximum>를 <xref:System.IO.Packaging.CompressionOption.Fast>, 또는 <xref:System.IO.Packaging.CompressionOption.SuperFast> 사용 하 여 <xref:System.IO.Packaging.CompressionOption.Normal> 압축 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-200">Other <xref:System.IO.Packaging.CompressionOption> values of <xref:System.IO.Packaging.CompressionOption.Maximum>, <xref:System.IO.Packaging.CompressionOption.Fast>, or <xref:System.IO.Packaging.CompressionOption.SuperFast> use <xref:System.IO.Packaging.CompressionOption.Normal> compression.</span></span>  
  
 <span data-ttu-id="0a6e2-201">모델 패키지 및 패키지 파트에 대 한 자세한 내용은 참조 OPC Open Packaging Conventions () 사양에서 다운로드할 수 있습니다 1 장 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-201">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0a6e2-202">
            <para>파생 <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> 구현을 수행 하는 작업이 나 순서에 대해 어떠한가 정도 하지 해야 합니다.는 <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> 메서드를 호출 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-202">
              <para>The derived <see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /> implementation should make no assumptions about the order or operations performed by the <see cref="Overload:System.IO.Packaging.Package.CreatePart" /> method that calls it.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRelationship">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a6e2-203">Creates a package-level relationship to a given part.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-203">Creates a package-level relationship to a given part.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-204">패키지 수준 관계를 패키지와 연결 된 대상 파트 또는 리소스 간의 연결을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-204">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="0a6e2-205">패키지 수준 관계는 두 가지 형식 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-205">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="0a6e2-206">간의 <xref:System.IO.Packaging.Package> 대상 <xref:System.IO.Packaging.PackagePart> 패키지에 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-206">Between a <xref:System.IO.Packaging.Package> to a target <xref:System.IO.Packaging.PackagePart> inside the package.</span></span>  
  
-   <span data-ttu-id="0a6e2-207">간에 <xref:System.IO.Packaging.Package> 패키지 외부의 대상 리소스에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-207">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="0a6e2-208">패키지 관계를 패키지 관계의 "소유자"로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-208">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="0a6e2-209">패키지 삭제 되 면 패키지를 소유한 모든 관계도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-209">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  <span data-ttu-id="0a6e2-210">대상 파트 또는 어떤 방식으로 리소스 만들기 또는 관계를 삭제 프로세스를 물리적으로 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-210">The process of creating or deleting the relationship does not physically alter the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="0a6e2-211">자세한 내용은 참조 OPC Open Packaging Conventions () 사양에서 다운로드할 수 있습니다 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-211">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a6e2-212">다음 예제에서는 만드는 방법을 보여 줍니다는 <xref:System.IO.Packaging.PackageRelationship> 간에 <xref:System.IO.Packaging.Package> 및 루트 문서 파트입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-212">The following example illustrates creating a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="0a6e2-213">전체 샘플을 참조 하세요 [패키지 작성 샘플](http://go.microsoft.com/fwlink/?LinkID=160055)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-213">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[PackageWrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType);" />
      <MemberSignature Language="F#" Value="member this.CreateRelationship : Uri * System.IO.Packaging.TargetMode * string -&gt; System.IO.Packaging.PackageRelationship" Usage="package.CreateRelationship (targetUri, targetMode, relationshipType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">
          <span data-ttu-id="0a6e2-214">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the target part.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-214">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the target part.</span>
          </span>
        </param>
        <param name="targetMode">
          <span data-ttu-id="0a6e2-215">Indicates if the target part is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> or <see cref="F:System.IO.Packaging.TargetMode.External" /> to the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-215">Indicates if the target part is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> or <see cref="F:System.IO.Packaging.TargetMode.External" /> to the package.</span>
          </span>
        </param>
        <param name="relationshipType">
          <span data-ttu-id="0a6e2-216">A URI that uniquely defines the role of the relationship.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-216">A URI that uniquely defines the role of the relationship.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-217">Creates a package-level relationship to a part with a given URI, target mode, and relationship type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-217">Creates a package-level relationship to a part with a given URI, target mode, and relationship type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a6e2-218">The package-level relationship to the specified part.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-218">The package-level relationship to the specified part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-219">패키지 수준 관계를 패키지와 연결 된 대상 파트 또는 리소스 간의 연결을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-219">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="0a6e2-220">패키지 수준 관계는 두 가지 형식 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-220">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="0a6e2-221">간에 <xref:System.IO.Packaging.Package> 패키지는 대상 파트.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-221">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="0a6e2-222">간에 <xref:System.IO.Packaging.Package> 패키지 외부의 대상 리소스에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-222">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="0a6e2-223">패키지 관계를 패키지 관계의 "소유자"로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-223">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="0a6e2-224">패키지 삭제 되 면 패키지를 소유한 모든 관계도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-224">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="0a6e2-225"><xref:System.IO.Packaging.Package.CreateRelationship%2A> 실제로 변경 하지 않습니다 대상 파트 또는 어떤 방식으로든에서 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-225"><xref:System.IO.Packaging.Package.CreateRelationship%2A> does not physically change the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="0a6e2-226">관계의 대상 다른 관계를 지정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-226">The target of a relationship cannot be another relationship.</span></span>  
  
 <span data-ttu-id="0a6e2-227">경우 `targetMode` 으로 지정 됩니다 <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` 에 따라 구성 되는 상대 URI 여야 합니다 [RFC 3986](http://tools.ietf.org/html/rfc3986) 제네릭 구문 식별자 URI (Uniform Resource) 사양입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-227">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` must be a relative URI that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="0a6e2-228">내부 상대 URI로 시작 하는 슬래시 ("/") 문자 같은 중 하나는 절대 경로 수 "/ page1.xaml" 또는 "/ images/picture4.jpg", 또는 상대 경로와 같은 "... / imagespicture1.jpg "패키지 루트에 대해 ("/ ")에서 기본 URI로 확인 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-228">The internal relative URI can be either an absolute path that starts with a forward slash ("/") character such as "/page1.xaml" or "/images/picture4.jpg", or a relative path such as "../imagespicture1.jpg" that resolves against the package root ("/") as the base URI.</span></span>  
  
 <span data-ttu-id="0a6e2-229">하는 경우 `targetMode` 로 지정 됩니다 <xref:System.IO.Packaging.TargetMode.External>, `targetUri` 하거나 절대 또는 상대 URI에 따라 구성 합니다 [RFC 3986](http://tools.ietf.org/html/rfc3986) 제네릭 구문 식별자 URI (Uniform Resource) 사양입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-229">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.External>, `targetUri` can be either an absolute or relative URI formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="0a6e2-230">"http://www.microsoft.com/page2.xml"은 "page2.xml" 외부 대상 리소스를 참조 하는 절대 URI의 예입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-230">"http://www.microsoft.com/page2.xml" is an example of an absolute URI that references an external target resource "page2.xml".</span></span>  <span data-ttu-id="0a6e2-231">"images/picture1.jpg"은 예를 외부 대상 리소스 "1.jpg"는 해결 되지만 패키지 자체의 URI에 대해 참조 되는 상대 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-231">"images/picture1.jpg" is an example of a relative URI that also references an external target resource "1.jpg" but which resolves against the URI of the package itself.</span></span>  
  
 <span data-ttu-id="0a6e2-232">`relationshipType` 이어야 합니다는 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 에 따라 형성 된 합니다 [RFC 3986](http://tools.ietf.org/html/rfc3986) 제네릭 구문 식별자 URI (Uniform Resource) 사양입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-232">`relationshipType` must be a [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="0a6e2-233">다음 표에서 패키지 수준 `relationshipType` OPC Open Packaging Conventions () 사양에 정의 된 Uri입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-233">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="0a6e2-234">패키지 수준 관계</span><span class="sxs-lookup"><span data-stu-id="0a6e2-234">Package-level Relationship</span></span>|<span data-ttu-id="0a6e2-235">관계 유형 URI</span><span class="sxs-lookup"><span data-stu-id="0a6e2-235">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="0a6e2-236">핵심 속성</span><span class="sxs-lookup"><span data-stu-id="0a6e2-236">Core Properties</span></span>|<span data-ttu-id="0a6e2-237">http://schemas.openxmlformats.org/package/2006/relationships/meta 데이터/코어-속성</span><span class="sxs-lookup"><span data-stu-id="0a6e2-237">http://schemas.openxmlformats.org/package/2006/relationships/meta data/core-properties</span></span>|  
|<span data-ttu-id="0a6e2-238">디지털 서명</span><span class="sxs-lookup"><span data-stu-id="0a6e2-238">Digital Signature</span></span>|<span data-ttu-id="0a6e2-239">http://schemas.openxmlformats.org/package/2006/relationships/digit al-서명/서명</span><span class="sxs-lookup"><span data-stu-id="0a6e2-239">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/signature</span></span>|  
|<span data-ttu-id="0a6e2-240">디지털 서명 인증서</span><span class="sxs-lookup"><span data-stu-id="0a6e2-240">Digital Signature Certificate</span></span>|<span data-ttu-id="0a6e2-241">http://schemas.openxmlformats.org/package/2006/relationships/digit al-서명/인증서</span><span class="sxs-lookup"><span data-stu-id="0a6e2-241">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/certificate</span></span>|  
|<span data-ttu-id="0a6e2-242">디지털 서명 원본</span><span class="sxs-lookup"><span data-stu-id="0a6e2-242">Digital Signature Origin</span></span>|<span data-ttu-id="0a6e2-243">http://schemas.openxmlformats.org/package/2006/relationships/digit al-서명/원본</span><span class="sxs-lookup"><span data-stu-id="0a6e2-243">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/origin</span></span>|  
|<span data-ttu-id="0a6e2-244">미리 보기</span><span class="sxs-lookup"><span data-stu-id="0a6e2-244">Thumbnail</span></span>|<span data-ttu-id="0a6e2-245">http://schemas.openxmlformats.org/package/2006/relationships/meta 데이터/미리 보기</span><span class="sxs-lookup"><span data-stu-id="0a6e2-245">http://schemas.openxmlformats.org/package/2006/relationships/meta data/thumbnail</span></span>|  
  
 <span data-ttu-id="0a6e2-246">패키징 및 패키지 관계에 대 한 자세한 내용은 참조에서 다운로드할 수 있는 OPC Open Packaging Conventions () 사양의 섹션 1.3 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-246">For more information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a6e2-247">다음 예제를 사용 하는 방법 <xref:System.IO.Packaging.Package.CreateRelationship%2A> 만들려면를 <xref:System.IO.Packaging.PackageRelationship> 간에 <xref:System.IO.Packaging.Package> 및 루트 문서 파트입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-247">The following example illustrates how to use <xref:System.IO.Packaging.Package.CreateRelationship%2A> to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="0a6e2-248">전체 샘플을 참조 하세요 [패키지 작성 샘플](http://go.microsoft.com/fwlink/?LinkID=160055)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-248">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a6e2-249">
            <paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-249">
              <paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a6e2-250">The <paramref name="targetUri" /> part is a <see cref="T:System.IO.Packaging.PackageRelationship" />, or <paramref name="targetMode" /> is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> and <paramref name="targetUri" /> is an absolute URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-250">The <paramref name="targetUri" /> part is a <see cref="T:System.IO.Packaging.PackageRelationship" />, or <paramref name="targetMode" /> is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> and <paramref name="targetUri" /> is an absolute URI.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a6e2-251">The value for <paramref name="targetMode" /> is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-251">The value for <paramref name="targetMode" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0a6e2-252">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-252">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a6e2-253">The package is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-253">The package is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType, System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.CreateRelationship : Uri * System.IO.Packaging.TargetMode * string * string -&gt; System.IO.Packaging.PackageRelationship" Usage="package.CreateRelationship (targetUri, targetMode, relationshipType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">
          <span data-ttu-id="0a6e2-254">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the target part.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-254">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the target part.</span>
          </span>
        </param>
        <param name="targetMode">
          <span data-ttu-id="0a6e2-255">Indicates if the target part is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> or <see cref="F:System.IO.Packaging.TargetMode.External" /> to the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-255">Indicates if the target part is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> or <see cref="F:System.IO.Packaging.TargetMode.External" /> to the package.</span>
          </span>
        </param>
        <param name="relationshipType">
          <span data-ttu-id="0a6e2-256">A URI that uniquely defines the role of the relationship.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-256">A URI that uniquely defines the role of the relationship.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="0a6e2-257">A unique XML identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-257">A unique XML identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-258">Creates a package-level relationship to a part with a given URI, target mode, relationship type, and [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-258">Creates a package-level relationship to a part with a given URI, target mode, relationship type, and [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)].</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a6e2-259">The package-level relationship to the specified part.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-259">The package-level relationship to the specified part.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-260">패키지 수준 관계를 패키지와 연결 된 대상 파트 또는 리소스 간의 연결을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-260">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="0a6e2-261">패키지 수준 관계는 두 가지 형식 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-261">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="0a6e2-262">간에 <xref:System.IO.Packaging.Package> 패키지는 대상 파트.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-262">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="0a6e2-263">간에 <xref:System.IO.Packaging.Package> 패키지 외부의 대상 리소스에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-263">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="0a6e2-264">패키지 관계를 패키지 관계의 "소유자"로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-264">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="0a6e2-265">패키지 삭제 되 면 패키지를 소유한 모든 관계도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-265">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="0a6e2-266"><xref:System.IO.Packaging.Package.CreateRelationship%2A> 실제로 변경 하지 않습니다 대상 파트 또는 어떤 방식으로든에서 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-266"><xref:System.IO.Packaging.Package.CreateRelationship%2A> does not physically change the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="0a6e2-267">관계의 대상 다른 관계를 지정할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-267">The target of a relationship cannot be another relationship.</span></span>  
  
 <span data-ttu-id="0a6e2-268">`id` 올바른 XML 식별자 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-268">`id` must be a valid XML identifier.</span></span>  <span data-ttu-id="0a6e2-269">`id` 형식은 xsd: id 이며 XML Schema Part 2에 설명 된 명명 규칙을 준수 해야 합니다: 데이터 형식 지정 (참조 [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).</span><span class="sxs-lookup"><span data-stu-id="0a6e2-269">The `id` type is xsd:ID and must follow the naming conventions prescribed in the XML Schema Part 2: Datatypes specification (see [https://www.w3.org/TR/xmlschema-2/#ID](https://www.w3.org/TR/xmlschema-2/#ID)).</span></span>  
  
 <span data-ttu-id="0a6e2-270">하는 경우 `id` 으로 지정 된 `null` 고유 ID가 자동으로 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-270">If `id` is specified as `null` a unique ID will be automatically generated.</span></span>  <span data-ttu-id="0a6e2-271">`id` 빈으로 지정 된 문자열이 올바르지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-271">An `id` specified by an empty string is not valid.</span></span>  
  
 <span data-ttu-id="0a6e2-272">경우 `targetMode` 으로 지정 됩니다 <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` 에 따라 구성 되는 상대 URI 여야 합니다 [RFC 3986](http://tools.ietf.org/html/rfc3986) 제네릭 구문 식별자 URI (Uniform Resource) 사양입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-272">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` must be a relative URI that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="0a6e2-273">내부 상대 URI로 시작 하는 슬래시 ("/") 문자 같은 중 하나는 절대 경로 수 "/ page1.xaml" 또는 "/ images/picture4.jpg", 또는 상대 경로와 같은 "... / imagespicture1.jpg "패키지 루트에 대해 ("/ ")에서 기본 URI로 확인 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-273">The internal relative URI can be either an absolute path that starts with a forward slash ("/") character such as "/page1.xaml" or "/images/picture4.jpg", or a relative path such as "../imagespicture1.jpg" that resolves against the package root ("/") as the base URI.</span></span>  
  
 <span data-ttu-id="0a6e2-274">하는 경우 `targetMode` 로 지정 됩니다 <xref:System.IO.Packaging.TargetMode.External>, `targetUri` 하거나 절대 또는 상대 URI에 따라 구성 합니다 [RFC 3986](http://tools.ietf.org/html/rfc3986) 제네릭 구문 식별자 URI (Uniform Resource) 사양입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-274">If `targetMode` is specified as <xref:System.IO.Packaging.TargetMode.External>, `targetUri` can be either an absolute or relative URI formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="0a6e2-275">"http://www.microsoft.com/page2.xml"은 "page2.xml" 외부 대상 리소스를 참조 하는 절대 URI의 예입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-275">"http://www.microsoft.com/page2.xml" is an example of an absolute URI that references an external target resource "page2.xml".</span></span>  <span data-ttu-id="0a6e2-276">"images/picture1.jpg"은 예를 외부 대상 리소스 "1.jpg"는 해결 되지만 패키지 자체의 URI에 대해 참조 되는 상대 URI입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-276">"images/picture1.jpg" is an example of a relative URI that also references an external target resource "1.jpg" but which resolves against the URI of the package itself.</span></span>  
  
 <span data-ttu-id="0a6e2-277">`relationshipType` 에 따라 구성 되는 URI 여야 합니다 [RFC 3986](http://tools.ietf.org/html/rfc3986) 제네릭 구문 식별자 URI (Uniform Resource) 사양입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-277">`relationshipType` must be a URI that is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="0a6e2-278">다음 표에서 패키지 수준 `relationshipType` OPC Open Packaging Conventions () 사양에 정의 된 Uri입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-278">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="0a6e2-279">패키지 수준 관계</span><span class="sxs-lookup"><span data-stu-id="0a6e2-279">Package-level Relationship</span></span>|<span data-ttu-id="0a6e2-280">관계 유형 URI</span><span class="sxs-lookup"><span data-stu-id="0a6e2-280">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="0a6e2-281">핵심 속성</span><span class="sxs-lookup"><span data-stu-id="0a6e2-281">Core Properties</span></span>|<span data-ttu-id="0a6e2-282">http://schemas.openxmlformats.org/package/2006/relationships/meta 데이터/코어-속성</span><span class="sxs-lookup"><span data-stu-id="0a6e2-282">http://schemas.openxmlformats.org/package/2006/relationships/meta data/core-properties</span></span>|  
|<span data-ttu-id="0a6e2-283">디지털 서명</span><span class="sxs-lookup"><span data-stu-id="0a6e2-283">Digital Signature</span></span>|<span data-ttu-id="0a6e2-284">http://schemas.openxmlformats.org/package/2006/relationships/digit al-서명/서명</span><span class="sxs-lookup"><span data-stu-id="0a6e2-284">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/signature</span></span>|  
|<span data-ttu-id="0a6e2-285">디지털 서명 인증서</span><span class="sxs-lookup"><span data-stu-id="0a6e2-285">Digital Signature Certificate</span></span>|<span data-ttu-id="0a6e2-286">http://schemas.openxmlformats.org/package/2006/relationships/digit al-서명/인증서</span><span class="sxs-lookup"><span data-stu-id="0a6e2-286">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/certificate</span></span>|  
|<span data-ttu-id="0a6e2-287">디지털 서명 원본</span><span class="sxs-lookup"><span data-stu-id="0a6e2-287">Digital Signature Origin</span></span>|<span data-ttu-id="0a6e2-288">http://schemas.openxmlformats.org/package/2006/relationships/digit al-서명/원본</span><span class="sxs-lookup"><span data-stu-id="0a6e2-288">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/origin</span></span>|  
|<span data-ttu-id="0a6e2-289">미리 보기</span><span class="sxs-lookup"><span data-stu-id="0a6e2-289">Thumbnail</span></span>|<span data-ttu-id="0a6e2-290">http://schemas.openxmlformats.org/package/2006/relationships/meta 데이터/미리 보기</span><span class="sxs-lookup"><span data-stu-id="0a6e2-290">http://schemas.openxmlformats.org/package/2006/relationships/meta data/thumbnail</span></span>|  
  
 <span data-ttu-id="0a6e2-291">패키지 및 패키지 관계에 대 한 자세한 내용은에서 다운로드할 수 있는 OPC Open Packaging Conventions () 사양의 섹션 1.3을 참조 하세요 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-291">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a6e2-292">다음 예제를 사용 하는 방법 <xref:System.IO.Packaging.Package.CreateRelationship%2A> 만들려면를 <xref:System.IO.Packaging.PackageRelationship> 간에 <xref:System.IO.Packaging.Package> 및 루트 문서 파트입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-292">The following example illustrates how to use <xref:System.IO.Packaging.Package.CreateRelationship%2A> to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.</span></span>  <span data-ttu-id="0a6e2-293">전체 샘플을 참조 하세요 [패키지 작성 샘플](http://go.microsoft.com/fwlink/?LinkID=160055)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-293">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackagerelationship)]
 [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackagerelationship)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a6e2-294">
            <paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-294">
              <paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a6e2-295">The <paramref name="targetUri" /> part is a <see cref="T:System.IO.Packaging.PackageRelationship" />, or <paramref name="targetMode" /> is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> and <paramref name="targetUri" /> is an absolute URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-295">The <paramref name="targetUri" /> part is a <see cref="T:System.IO.Packaging.PackageRelationship" />, or <paramref name="targetMode" /> is <see cref="F:System.IO.Packaging.TargetMode.Internal" /> and <paramref name="targetUri" /> is an absolute URI.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a6e2-296">The value for <paramref name="targetMode" /> is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-296">The value for <paramref name="targetMode" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0a6e2-297">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-297">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a6e2-298">The package is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-298">The package is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="0a6e2-299">
            <paramref name="id" /> is not a valid XML identifier; or a part with the specified <paramref name="id" /> already occurs in the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-299">
              <paramref name="id" /> is not a valid XML identifier; or a part with the specified <paramref name="id" /> already occurs in the package.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DeletePart">
      <MemberSignature Language="C#" Value="public void DeletePart (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeletePart(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeletePart(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeletePart (partUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeletePart(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="member this.DeletePart : Uri -&gt; unit" Usage="package.DeletePart partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="0a6e2-300">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the part to delete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-300">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the part to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-301">Deletes a part with a given URI from the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-301">Deletes a part with a given URI from the package.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-302">`partUri` 슬래시 ("/") 문자로 시작 되는 절대 경로로 구성 된 상대 URI 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-302">`partUri` must be a relative URI that consists of an absolute path which starts with a forward slash ("/") character.</span></span>  <span data-ttu-id="0a6e2-303">패키지 루트에 상대적인 이며에 따라 형식이 절대 경로 [RFC 3986](http://tools.ietf.org/html/rfc3986) 제네릭 구문 식별자 URI (Uniform Resource) 사양입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-303">The absolute path is relative to the package root and is formed according to the [RFC 3986](http://tools.ietf.org/html/rfc3986) Uniform Resource Identifier (URI) Generic Syntax specification.</span></span>  <span data-ttu-id="0a6e2-304">"/ page1.xaml" 및 "/ images/picture4.jpg"은 유효한 파트 Uri의 예입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-304">"/page1.xaml" and "/images/picture4.jpg" are examples of valid part URIs.</span></span>  
  
 <span data-ttu-id="0a6e2-305">예외가 발생 하는 경우 지정 된 일부 `partUri` 패키지가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-305">No exception is raised if a part with the specified `partUri` is not in the package.</span></span>  <span data-ttu-id="0a6e2-306">(사용할 수는 <xref:System.IO.Packaging.Package.PartExists%2A> 하는지 여부 지정된 된 부분을 결정 하는 방법 `partUri` 패키지에 있습니다.)</span><span class="sxs-lookup"><span data-stu-id="0a6e2-306">(You can use the <xref:System.IO.Packaging.Package.PartExists%2A> method to determine whether a part with a specified `partUri` is in the package.)</span></span>  
  
 <span data-ttu-id="0a6e2-307">자세한 내용은 참조 OPC Open Packaging Conventions () 사양에서 다운로드할 수 있습니다 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-307">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a6e2-308">
            <paramref name="partUri" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-308">
              <paramref name="partUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a6e2-309">
            <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-309">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0a6e2-310">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-310">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a6e2-311">The package is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-311">The package is read-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="0a6e2-312">
            <para>
              <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> 파생된 클래스의 내부적으로 호출 <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> 파생된 클래스에서 구현 된 실제 형식에 따라 실제로 파트를 삭제 하는 방법입니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-312">
              <para>
                <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> method to actually delete the part based on the physical format implemented in the derived class.</para>
            </span>
          </span>
        </block>
        <altmember cref="Overload:System.IO.Packaging.Package.CreatePart" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="DeletePartCore">
      <MemberSignature Language="C#" Value="protected abstract void DeletePartCore (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeletePartCore(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub DeletePartCore (partUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void DeletePartCore(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="abstract member DeletePartCore : Uri -&gt; unit" Usage="package.DeletePartCore partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="0a6e2-313">The <see cref="P:System.IO.Packaging.PackagePart.Uri" /> of the <see cref="T:System.IO.Packaging.PackagePart" /> to delete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-313">The <see cref="P:System.IO.Packaging.PackagePart.Uri" /> of the <see cref="T:System.IO.Packaging.PackagePart" /> to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-314">When overridden in a derived class, deletes a part with a given URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-314">When overridden in a derived class, deletes a part with a given URI.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-315">기본적으로 <xref:System.IO.Packaging.ZipPackage> 추상 클래스 구현을 파생 <xref:System.IO.Packaging.Package> 클래스에 제공 되 고 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-315">By default, a <xref:System.IO.Packaging.ZipPackage> derived class implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="0a6e2-316">기본 작업에 <xref:System.IO.Packaging.Package.DeletePart%2A> 내부적으로 호출 <xref:System.IO.Packaging.Package.DeletePartCore%2A> 의 <xref:System.IO.Packaging.ZipPackage> 실제 수행 하는 클래스 파생된 클래스에서 구현 된 실제 형식에 따라 작업을 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-316">In the default operation, <xref:System.IO.Packaging.Package.DeletePart%2A> internally calls <xref:System.IO.Packaging.Package.DeletePartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to perform the actual delete operation based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="0a6e2-317">모델 패키지 및 패키지 파트에 대 한 자세한 내용은 참조 OPC Open Packaging Conventions () 사양에서 다운로드할 수 있습니다 1 장 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-317">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0a6e2-318">
            <para>파생된 클래스 <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> 구현을 호출 합니다 <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> 메서드는 지정 된 파트를 파생된 클래스에서 구현 된 실제 형식에 기반 합니다.  파생 <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> 구현을 수행 하는 작업이 나 순서에 대해 어떠한가 정도 하지 해야 합니다.는 <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> 메서드를 호출 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-318">
              <para>The derived class <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> implementation is called by the <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> method to the specified part based on the physical format implemented in the derived class.  The derived <see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /> method that calls it.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteRelationship">
      <MemberSignature Language="C#" Value="public void DeleteRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteRelationship (id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteRelationship(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.DeleteRelationship : string -&gt; unit" Usage="package.DeleteRelationship id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="0a6e2-319">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the <see cref="T:System.IO.Packaging.PackageRelationship" /> to delete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-319">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the <see cref="T:System.IO.Packaging.PackageRelationship" /> to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-320">Deletes a package-level relationship.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-320">Deletes a package-level relationship.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-321">패키지 수준 관계를 패키지와 연결 된 대상 파트 또는 리소스 간의 연결을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-321">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="0a6e2-322">패키지 수준 관계는 두 가지 형식 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-322">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="0a6e2-323">간에 <xref:System.IO.Packaging.Package> 패키지는 대상 파트.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-323">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="0a6e2-324">간에 <xref:System.IO.Packaging.Package> 패키지 외부의 대상 리소스에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-324">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="0a6e2-325">패키지 관계를 패키지 관계의 "소유자"로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-325">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="0a6e2-326">패키지 삭제 되 면 패키지를 소유한 모든 관계도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-326">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  
  
 <span data-ttu-id="0a6e2-327">예외가 발생 하는 경우 지정 된 관계 `id` 패키지가 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-327">No exception is raised if a relationship with the specified `id` is not in the package.</span></span>  
  
 <span data-ttu-id="0a6e2-328"><xref:System.IO.Packaging.Package.DeleteRelationship%2A> 실제로 어떤 방식으로든에서 대상 파트를 변경 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-328"><xref:System.IO.Packaging.Package.DeleteRelationship%2A> does not physically change the target part in any way.</span></span>  
  
 <span data-ttu-id="0a6e2-329">패키지 관계에 대 한 자세한 내용은 참조에서 다운로드할 수 있는 OPC Open Packaging Conventions () 사양의 섹션 1.3 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-329">For more information about package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a6e2-330">
            <paramref name="id" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-330">
              <paramref name="id" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0a6e2-331">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-331">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a6e2-332">The package is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-332">The package is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="0a6e2-333">
            <paramref name="id" /> is not a valid XML identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-333">
              <paramref name="id" /> is not a valid XML identifier.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="package.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="0a6e2-334">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-334">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-335">Flushes and saves the content of all parts and relationships, closes the package, and releases all resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-335">Flushes and saves the content of all parts and relationships, closes the package, and releases all resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-336">모든 변경 내용이 올바르게 저장는 되도록 <xref:System.IO.Packaging.Package.Dispose%2A> 도 종료, 플러시, 및 모든 파트 및 패키지에 포함 된 관계를 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-336">To make sure that all changes are correctly saved, <xref:System.IO.Packaging.Package.Dispose%2A> also finalizes, flushes, and closes all parts and relationships that are contained in the package.</span></span>  
  
 <span data-ttu-id="0a6e2-337">에 대 한는 <xref:System.IO.Packaging.Package> 클래스 <xref:System.IO.Packaging.Package.Dispose%2A> 하 고 <xref:System.IO.Packaging.Package.Close%2A> 같은 작업을 수행할-호출할 필요가 없습니다 <xref:System.IO.Packaging.Package.Dispose%2A> 호출 하는 경우 <xref:System.IO.Packaging.Package.Close%2A>, 또는 그 반대로 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-337">For the <xref:System.IO.Packaging.Package> class, <xref:System.IO.Packaging.Package.Dispose%2A> and <xref:System.IO.Packaging.Package.Close%2A> perform the same operation - there is no reason to call <xref:System.IO.Packaging.Package.Dispose%2A> if you call <xref:System.IO.Packaging.Package.Close%2A>, or vice-versa.</span></span>  
  
 <span data-ttu-id="0a6e2-338"><xref:System.IO.Packaging.Package.Close%2A> 및 <xref:System.IO.Packaging.Package.Dispose%2A> 내부적으로 호출 <xref:System.IO.Packaging.Package.Flush%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-338"><xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> internally call <xref:System.IO.Packaging.Package.Flush%2A>.</span></span>  
  
 <span data-ttu-id="0a6e2-339">할당 및 메모리 내 리소스를 관리 하는 파생된 클래스에서 리소스를 해제 하려면이 메서드를 재정의 하는 경우 <xref:System.IO.Packaging.Package.Dispose%2A> 라고 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-339">Derived classes that allocate and manage non-memory resources should override this method to release resources when <xref:System.IO.Packaging.Package.Dispose%2A> is called.</span></span> <span data-ttu-id="0a6e2-340">파생 클래스 재정의 호출 해야 <xref:System.IO.Packaging.Package.Flush%2A> 기본 클래스 및 <xref:System.IO.Packaging.Package.Dispose%2A> 메서드는 항상 해당 기본 클래스 정리를 수행 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-340">Derived-class overrides should also call <xref:System.IO.Packaging.Package.Flush%2A> and the base-class <xref:System.IO.Packaging.Package.Dispose%2A> method to make sure that base-class cleanup is always performed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a6e2-341">`using` 문 (다릅니다 합니다 `using` 네임 스페이스 지시문) 하는 권장 방법은 <xref:System.IO.Packaging.Package.Close%2A> 및 <xref:System.IO.Packaging.Package.Dispose%2A> 패키지 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-341">The `using` statement (different from the `using` namespace directive) is the recommended way to <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> a package.</span></span> <span data-ttu-id="0a6e2-342">[패키지 예제 추가 정보를 작성](http://go.microsoft.com/fwlink/?LinkID=160055) 닫고를 사용 하 여 패키지를 삭제 하는 방법을 보여 줍니다는 `using` 문입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-342">[Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055) shows how to close and dispose a package by using the `using` statement.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.Package.Flush" />
        <altmember cref="T:System.IO.Packaging.PackagePart" />
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <Member MemberName="FileOpenAccess">
      <MemberSignature Language="C#" Value="public System.IO.FileAccess FileOpenAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAccess FileOpenAccess" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.Package.FileOpenAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileOpenAccess As FileAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAccess FileOpenAccess { System::IO::FileAccess get(); };" />
      <MemberSignature Language="F#" Value="member this.FileOpenAccess : System.IO.FileAccess" Usage="System.IO.Packaging.Package.FileOpenAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a6e2-343">Gets the file access setting for the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-343">Gets the file access setting for the package.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a6e2-344">중 하나는 <see cref="T:System.IO.FileAccess" /> 값: <see cref="F:System.IO.FileAccess.Read" />를 <see cref="F:System.IO.FileAccess.Write" />, 또는 <see cref="F:System.IO.FileAccess.ReadWrite" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-344">One of the <see cref="T:System.IO.FileAccess" /> values: <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" />, or <see cref="F:System.IO.FileAccess.ReadWrite" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-345"><xref:System.IO.Packaging.Package.FileOpenAccess%2A> 속성에는 기본값이 없습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-345">The <xref:System.IO.Packaging.Package.FileOpenAccess%2A> property has no default value.</span></span>  <span data-ttu-id="0a6e2-346">에 지정 된 파일 액세스 설정을 <xref:System.IO.Packaging.Package.%23ctor%2A> 새 패키지를 만들 때 또는 생성자 호출을 <xref:System.IO.Packaging.Package.Open%2A> 기존 패키지를 열 때 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-346">The file access setting is specified in the <xref:System.IO.Packaging.Package.%23ctor%2A> constructor call when you create a new package, or in the <xref:System.IO.Packaging.Package.Open%2A> call when you open an existing package.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0a6e2-347">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-347">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="package.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a6e2-348">Saves the contents of all parts and relationships that are contained in the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-348">Saves the contents of all parts and relationships that are contained in the package.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-349"><xref:System.IO.Packaging.Package.Flush%2A> 파생된 클래스의 내부적으로 호출 <xref:System.IO.Packaging.Package.FlushCore%2A> 실제 형식에 따른 플러시 작업을 수행 하려면 구현 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-349"><xref:System.IO.Packaging.Package.Flush%2A> internally calls the derived class's <xref:System.IO.Packaging.Package.FlushCore%2A> implemetation to perform the actual format-specific flush operation.</span></span>  <span data-ttu-id="0a6e2-350">파생된 클래스의 <xref:System.IO.Packaging.Package.FlushCore%2A> 메서드는 실제로 특정 파생된 클래스에서 실제 구현에 파트 및 관계 콘텐츠를 저장 하는 일을 담당 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-350">The derived class's <xref:System.IO.Packaging.Package.FlushCore%2A> method is responsible for actually saving the part and relationship content to the specific physical derived class implementation.</span></span>  
  
 <span data-ttu-id="0a6e2-351">기본적으로 <xref:System.IO.Packaging.ZipPackage> 구현의 추상 파생 <xref:System.IO.Packaging.Package> 기본 클래스에 제공 되 고 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-351">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span> <span data-ttu-id="0a6e2-352">기본 작업에 <xref:System.IO.Packaging.Package.Flush%2A> 내부적으로 호출 <xref:System.IO.Packaging.Package.FlushCore%2A> ZIP 파일 패키지에 파트 및 관계를 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-352">In the default operation, <xref:System.IO.Packaging.Package.Flush%2A> internally calls <xref:System.IO.Packaging.Package.FlushCore%2A> to save the parts and relationships in a ZIP file package.</span></span>  
  
 <span data-ttu-id="0a6e2-353"><xref:System.IO.Packaging.Package.Flush%2A> 자동으로 호출 되는 <xref:System.IO.Packaging.Package.Close%2A> 고 <xref:System.IO.Packaging.Package.Dispose%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-353"><xref:System.IO.Packaging.Package.Flush%2A> is called automatically by the <xref:System.IO.Packaging.Package.Close%2A> and <xref:System.IO.Packaging.Package.Dispose%2A> methods.</span></span>  <span data-ttu-id="0a6e2-354">때 <xref:System.IO.Packaging.Package.Close%2A> 나 <xref:System.IO.Packaging.Package.Dispose%2A> 라고 호출할 필요가 없습니다 <xref:System.IO.Packaging.Package.Flush%2A> 개별적으로 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-354">When <xref:System.IO.Packaging.Package.Close%2A> or <xref:System.IO.Packaging.Package.Dispose%2A> is called you do not have to call <xref:System.IO.Packaging.Package.Flush%2A> separately.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0a6e2-355">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-355">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a6e2-356">The package is read-only and cannot be modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-356">The package is read-only and cannot be modified.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="0a6e2-357">
            <para>
              <see cref="M:System.IO.Packaging.Package.Flush" /> 파생된 클래스의 내부적으로 호출 <see cref="M:System.IO.Packaging.Package.FlushCore" /> 파생된 클래스에서 구현 된 실제 형식에 따라 메서드를 실제로 파트를 플러시합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-357">
              <para>
                <see cref="M:System.IO.Packaging.Package.Flush" /> internally calls the derived class's <see cref="M:System.IO.Packaging.Package.FlushCore" /> method to actually flush the part based on the physical format implemented in the derived class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FlushCore">
      <MemberSignature Language="C#" Value="protected abstract void FlushCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FlushCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.FlushCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub FlushCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void FlushCore();" />
      <MemberSignature Language="F#" Value="abstract member FlushCore : unit -&gt; unit" Usage="package.FlushCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a6e2-358">When overridden in a derived class, saves the content of all parts and relationships to the derived class store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-358">When overridden in a derived class, saves the content of all parts and relationships to the derived class store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-359"><xref:System.IO.Packaging.Package.FlushCore%2A> 호출한는 <xref:System.IO.Packaging.Package.Flush%2A> 파생된 클래스에서 구현 된 실제 형식에 따라 실제 플러시 작업을 수행 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-359"><xref:System.IO.Packaging.Package.FlushCore%2A> is called by the <xref:System.IO.Packaging.Package.Flush%2A> method to perform the actual flush operation based on the physical format implemented in the derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0a6e2-360">
            <para>파생 <see cref="M:System.IO.Packaging.Package.FlushCore" /> 구현에는 주문 또는 수행한 작업에 대 한 어떠한가 정도 사용 해야 합니다.는 <see cref="M:System.IO.Packaging.Package.Flush" /> 메서드를 호출 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-360">
              <para>The derived <see cref="M:System.IO.Packaging.Package.FlushCore" /> implementation should not make any assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.Flush" /> method that calls it.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetPart">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePart GetPart (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePart GetPart(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPart(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPart (partUri As Uri) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePart ^ GetPart(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="member this.GetPart : Uri -&gt; System.IO.Packaging.PackagePart" Usage="package.GetPart partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="0a6e2-361">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the part to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-361">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the part to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-362">Returns the part with a given URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-362">Returns the part with a given URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a6e2-363">The part with the specified <paramref name="partUri" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-363">The part with the specified <paramref name="partUri" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-364"><xref:System.InvalidOperationException> 없으면 지정 된 일부 예외가 `partUri` 존재 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-364">An <xref:System.InvalidOperationException> is thrown if a part with the specified `partUri` does not exist.</span></span>  
  
 <span data-ttu-id="0a6e2-365">합니다 <xref:System.IO.Packaging.Package.PartExists%2A> 메서드를 결정할 수 있는지 여부를 `partUri` 기존 파트를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-365">The <xref:System.IO.Packaging.Package.PartExists%2A> method can be used to determine whether `partUri` references an existing part.</span></span>  
  
 <span data-ttu-id="0a6e2-366">기본적으로 <xref:System.IO.Packaging.ZipPackage> 구현의 추상 파생 <xref:System.IO.Packaging.Package> 기본 클래스에 제공 되 고 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-366">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span>  <span data-ttu-id="0a6e2-367">기본 작업에 <xref:System.IO.Packaging.Package.GetPart%2A> 내부적으로 호출 <xref:System.IO.Packaging.Package.GetPartCore%2A> 의 <xref:System.IO.Packaging.ZipPackage> ZIP 파일에서 요청 된 일부를 반환 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-367">In the default operation, <xref:System.IO.Packaging.Package.GetPart%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to return a requested part from a ZIP file.</span></span>  
  
 <span data-ttu-id="0a6e2-368">자세한 내용은 참조 OPC Open Packaging Conventions () 사양에서 다운로드할 수 있습니다 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-368">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a6e2-369">다음 예제에서는 찾기, 검색 및 패키지에 포함 된 부분을 읽는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-369">The following example shows how to locate, retrieve, and read parts that are contained in a package.</span></span>  <span data-ttu-id="0a6e2-370">전체 샘플을 참조 하세요 [는 패키지 예제 추가 정보를 읽는](http://go.microsoft.com/fwlink/?LinkID=160034)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-370">For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a6e2-371">
            <paramref name="partUri" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-371">
              <paramref name="partUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a6e2-372">
            <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-372">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0a6e2-373">A part with the specified <paramref name="partUri" /> is not in the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-373">A part with the specified <paramref name="partUri" /> is not in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0a6e2-374">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-374">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a6e2-375">The package is write-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-375">The package is write-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="0a6e2-376">
            <para>
              <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> 파생된 클래스를 내부적으로 호출 <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> 파생된 클래스에서 구현 된 실제 형식에 따라 메서드를 실제로 파트를 플러시합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-376">
              <para>
                <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> method to actually flush the part based on the physical format implemented in the derived class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetParts" />
        <altmember cref="M:System.IO.Packaging.Package.PartExists(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPartCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart GetPartCore (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart GetPartCore(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetPartCore (partUri As Uri) As PackagePart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IO::Packaging::PackagePart ^ GetPartCore(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="abstract member GetPartCore : Uri -&gt; System.IO.Packaging.PackagePart" Usage="package.GetPartCore partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="0a6e2-377">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the part to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-377">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the part to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-378">When overridden in a derived class, returns the part addressed by a given URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-378">When overridden in a derived class, returns the part addressed by a given URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a6e2-379">The requested part; or <see langword="null" />, if a part with the specified <paramref name="partUri" /> is not in the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-379">The requested part; or <see langword="null" />, if a part with the specified <paramref name="partUri" /> is not in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-380">기본적으로 <xref:System.IO.Packaging.ZipPackage> 구현의 추상 파생 <xref:System.IO.Packaging.Package> 클래스에 제공 되 고 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-380">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="0a6e2-381">기본 작업에 <xref:System.IO.Packaging.Package.GetPart%2A> 내부적으로 호출 <xref:System.IO.Packaging.Package.GetPartCore%2A> 의 <xref:System.IO.Packaging.ZipPackage> ZIP 파일에서 파트를 검색 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-381">In the default operation, <xref:System.IO.Packaging.Package.GetPart%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to retrieve a part from a ZIP file.</span></span>  
  
 <span data-ttu-id="0a6e2-382">모델 패키지 및 패키지 파트에 대 한 자세한 내용은 참조 OPC Open Packaging Conventions () 사양에서 다운로드할 수 있습니다 1 장 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-382">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0a6e2-383">
            <para>파생된 클래스 <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> 구현을 호출 합니다 <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> 파생된 클래스에서 구현 된 실제 형식에 따라 메서드를 액세스 하 고 지정 된 부분을 반환 합니다.  파생 <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> 구현을 수행 하는 작업이 나 순서에 대해 어떠한가 정도 하지 해야 합니다.는 <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> 메서드를 호출 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-383">
              <para>The derived class  <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> implementation is called by the <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> method to access and return the specified part based on the physical format implemented in the derived class.  The derived <see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /> method that calls it.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetPartsCore" />
      </Docs>
    </Member>
    <Member MemberName="GetParts">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackagePartCollection GetParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackagePartCollection GetParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetParts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParts () As PackagePartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackagePartCollection ^ GetParts();" />
      <MemberSignature Language="F#" Value="member this.GetParts : unit -&gt; System.IO.Packaging.PackagePartCollection" Usage="package.GetParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a6e2-384">Returns a collection of all the parts in the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-384">Returns a collection of all the parts in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a6e2-385">A collection of all the <see cref="T:System.IO.Packaging.PackagePart" /> elements that are contained in the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-385">A collection of all the <see cref="T:System.IO.Packaging.PackagePart" /> elements that are contained in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-386"><xref:System.IO.Packaging.Package.GetParts%2A> 포함 하는 패키지에 포함 된 모든 파트의 컬렉션을 반환 <xref:System.IO.Packaging.PackageRelationship> 부분입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-386"><xref:System.IO.Packaging.Package.GetParts%2A> returns a collection of all parts that are contained in the package including <xref:System.IO.Packaging.PackageRelationship> parts.</span></span>  
  
 <span data-ttu-id="0a6e2-387"><xref:System.IO.Packaging.Package.GetParts%2A> 반환 하지 것입니다 `null`있지만 반환된 된 컬렉션 패키지 파트가 없는 경우 요소가 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-387"><xref:System.IO.Packaging.Package.GetParts%2A> will never return `null`; however, the returned collection will contain zero elements if the package contains no parts.</span></span>  
  
 <span data-ttu-id="0a6e2-388">기본적으로 <xref:System.IO.Packaging.ZipPackage> 구현의 추상 파생 <xref:System.IO.Packaging.Package> 기본 클래스에 제공 되 고 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-388">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> base class is provided and used.</span></span>  <span data-ttu-id="0a6e2-389">기본 작업에 <xref:System.IO.Packaging.Package.GetParts%2A> 호출을 <xref:System.IO.Packaging.Package.GetPartsCore%2A> 메서드는 <xref:System.IO.Packaging.ZipPackage> ZIP 파일에서 부분을 반환 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-389">In the default operation, <xref:System.IO.Packaging.Package.GetParts%2A> calls the <xref:System.IO.Packaging.Package.GetPartsCore%2A> method of the <xref:System.IO.Packaging.ZipPackage> class to return the parts from a ZIP file.</span></span>  
  
 <span data-ttu-id="0a6e2-390">패키지와 패키지 파트에 대 한 자세한 내용은 참조에서 다운로드할 수 있는 OPC Open Packaging Conventions () 사양의 섹션 1.1 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-390">For more information about packages and package parts, see section 1.1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a6e2-391">다음 예제에서는 사용 하는 방법을 보여 줍니다 합니다 <xref:System.IO.Packaging.Package.GetParts%2A> 에 포함 된 파트의 컬렉션을 가져옵니다 메서드를 <xref:System.IO.Packaging.Package>입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-391">The following example shows how to use the <xref:System.IO.Packaging.Package.GetParts%2A> method to obtain a collection of the parts that are contained in a <xref:System.IO.Packaging.Package>.</span></span>  <span data-ttu-id="0a6e2-392">완성 된 프로그램 소스 코드를 참조 하세요 [디지털 서명 샘플을 사용 하 여 패키지를 만드는](http://go.microsoft.com/fwlink/?LinkID=159966)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-392">For the complete program source code, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0a6e2-393">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-393">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a6e2-394">The package is write-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-394">The package is write-only.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="0a6e2-395">
            <para>
              <see cref="M:System.IO.Packaging.Package.GetParts" /> 파생된 클래스를 내부적으로 호출 <see cref="M:System.IO.Packaging.Package.GetPartsCore" /> 파생된 클래스에서 구현 된 실제 형식에 따라 메서드를 실제로 파트를 플러시합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-395">
              <para>
                <see cref="M:System.IO.Packaging.Package.GetParts" /> internally calls the derived class <see cref="M:System.IO.Packaging.Package.GetPartsCore" /> method to actually flush the part based on the physical format implemented in the derived class.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPartsCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Packaging.PackagePart[] GetPartsCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Packaging.PackagePart[] GetPartsCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetPartsCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetPartsCore () As PackagePart()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract cli::array &lt;System::IO::Packaging::PackagePart ^&gt; ^ GetPartsCore();" />
      <MemberSignature Language="F#" Value="abstract member GetPartsCore : unit -&gt; System.IO.Packaging.PackagePart[]" Usage="package.GetPartsCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackagePart[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a6e2-396">When overridden in a derived class, returns an array of all the parts in the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-396">When overridden in a derived class, returns an array of all the parts in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a6e2-397">An array of all the parts that are contained in the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-397">An array of all the parts that are contained in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-398">파생된 클래스 <xref:System.IO.Packaging.Package.GetPartsCore%2A> 구현을 호출 합니다 <xref:System.IO.Packaging.Package.GetParts%2A> 파생된 클래스에서 구현 된 실제 형식에 따라 메서드를 액세스 하 고 파트의 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-398">The derived class <xref:System.IO.Packaging.Package.GetPartsCore%2A> implementation is called by the <xref:System.IO.Packaging.Package.GetParts%2A> method to access and return the array of parts based on the physical format implemented in the derived class.</span></span>  
  
 <span data-ttu-id="0a6e2-399">기본적으로 <xref:System.IO.Packaging.ZipPackage> 구현의 추상 파생 <xref:System.IO.Packaging.Package> 클래스에 제공 되 고 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-399">By default, a <xref:System.IO.Packaging.ZipPackage> derived implementation of the abstract <xref:System.IO.Packaging.Package> class is provided and used.</span></span>  <span data-ttu-id="0a6e2-400">기본 작업에 <xref:System.IO.Packaging.Package.GetParts%2A> 내부적으로 호출 <xref:System.IO.Packaging.Package.GetPartCore%2A> 의 <xref:System.IO.Packaging.ZipPackage> ZIP 파일에서 파트를 검색 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-400">In the default operation, <xref:System.IO.Packaging.Package.GetParts%2A> internally calls <xref:System.IO.Packaging.Package.GetPartCore%2A> of the <xref:System.IO.Packaging.ZipPackage> class to retrieve the parts from a ZIP file.</span></span>  
  
 <span data-ttu-id="0a6e2-401">모델 패키지 및 패키지 파트에 대 한 자세한 내용은 참조 OPC Open Packaging Conventions () 사양에서 다운로드할 수 있습니다 1 장 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-401">For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0a6e2-402">
            <para>파생 <see cref="M:System.IO.Packaging.Package.GetPartsCore" /> 구현을 수행 하는 작업이 나 순서에 대해 어떠한가 정도 하지 해야 합니다.는 <see cref="M:System.IO.Packaging.Package.GetParts" /> 메서드를 호출 합니다.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-402">
              <para>The derived <see cref="M:System.IO.Packaging.Package.GetPartsCore" /> implementation should make no assumptions about the order or operations performed by the <see cref="M:System.IO.Packaging.Package.GetParts" /> method that calls it.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship GetRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship GetRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationship (id As String) As PackageRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ GetRelationship(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.GetRelationship : string -&gt; System.IO.Packaging.PackageRelationship" Usage="package.GetRelationship id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="0a6e2-403">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-403">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-404">Returns the package-level relationship with a given identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-404">Returns the package-level relationship with a given identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a6e2-405">The package-level relationship with the specified <paramref name="id" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-405">The package-level relationship with the specified <paramref name="id" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-406">`id` 올바른 XML 식별자 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-406">`id` must be a valid XML identifier.</span></span>  <span data-ttu-id="0a6e2-407">`id` 형식은 xsd: id 이며 XML Schema Part 2에 설명 된 명명 규칙을 준수 해야 합니다: 데이터 형식 지정 (참조 [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).</span><span class="sxs-lookup"><span data-stu-id="0a6e2-407">The `id` type is xsd:ID and must follow the naming conventions prescribed in the XML Schema Part 2: Datatypes specification (see [https://www.w3.org/TR/xmlschema-2/#ID](https://www.w3.org/TR/xmlschema-2/#ID)).</span></span>  
  
 <span data-ttu-id="0a6e2-408">패키지 및 패키지 관계에 대 한 자세한 내용은에서 다운로드할 수 있는 OPC Open Packaging Conventions () 사양의 섹션 1.3을 참조 하세요 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-408">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a6e2-409">
            <paramref name="id" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-409">
              <paramref name="id" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="0a6e2-410">
            <paramref name="id" /> is not a valid XML identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-410">
              <paramref name="id" /> is not a valid XML identifier.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0a6e2-411">A relationship with the specified <paramref name="id" /> is not in the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-411">A relationship with the specified <paramref name="id" /> is not in the package.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0a6e2-412">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-412">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a6e2-413">The package is write-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-413">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationships">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationships ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationships() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationships" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationships () As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationships();" />
      <MemberSignature Language="F#" Value="member this.GetRelationships : unit -&gt; System.IO.Packaging.PackageRelationshipCollection" Usage="package.GetRelationships " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a6e2-414">Returns a collection of all the package-level relationships.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-414">Returns a collection of all the package-level relationships.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a6e2-415">A collection of all the package-level relationships that are contained in the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-415">A collection of all the package-level relationships that are contained in the package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-416"><xref:System.IO.Packaging.Package.GetRelationships%2A> 반환 하지 것입니다 `null`그러나 반환된 된 컬렉션 패키지에 패키지 수준 관계가 없는 경우 요소가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-416"><xref:System.IO.Packaging.Package.GetRelationships%2A> will never return `null`; however the returned collection may contain zero elements if the package contains no package-level relationships.</span></span>  
  
 <span data-ttu-id="0a6e2-417">패키지 수준 관계를 패키지와 연결 된 대상 파트 또는 리소스 간의 연결을 정의 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-417">A package-level relationship defines an association between the package and an associated target part or resource.</span></span>  <span data-ttu-id="0a6e2-418">패키지 수준 관계는 두 가지 형식 중 하나일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-418">A package-level relationship can be one of two forms.</span></span>  
  
-   <span data-ttu-id="0a6e2-419">간에 <xref:System.IO.Packaging.Package> 패키지는 대상 파트.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-419">Between a <xref:System.IO.Packaging.Package> to a target part in the package.</span></span>  
  
-   <span data-ttu-id="0a6e2-420">간에 <xref:System.IO.Packaging.Package> 패키지 외부의 대상 리소스에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-420">Between a <xref:System.IO.Packaging.Package> to a target resource outside the package.</span></span>  
  
 <span data-ttu-id="0a6e2-421">패키지 관계를 패키지 관계의 "소유자"로 간주 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-421">In a package-relationship the package is considered the "owner" of the relationship.</span></span>  <span data-ttu-id="0a6e2-422">패키지 삭제 되 면 패키지를 소유한 모든 관계도 삭제 됩니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-422">When the package is deleted, all the relationships owned by the package are also deleted.</span></span>  <span data-ttu-id="0a6e2-423">대상 파트 또는 어떤 방식으로 리소스 만들기 또는 관계를 삭제 프로세스를 물리적으로 변경 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-423">The process of creating or deleting the relationship does not physically alter the target part or resource in any way.</span></span>  
  
 <span data-ttu-id="0a6e2-424">패키지 및 패키지 관계에 대 한 자세한 내용은에서 다운로드할 수 있는 OPC Open Packaging Conventions () 사양의 섹션 1.3을 참조 하세요 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-424">For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0a6e2-425">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-425">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a6e2-426">The package is write-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-426">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipsByType">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType (string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType(string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipsByType (relationshipType As String) As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationshipsByType(System::String ^ relationshipType);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipsByType : string -&gt; System.IO.Packaging.PackageRelationshipCollection" Usage="package.GetRelationshipsByType relationshipType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationshipType">
          <span data-ttu-id="0a6e2-427">The <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> to match and return in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-427">The <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> to match and return in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-428">Returns a collection of all the package-level relationships that match a given <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-428">Returns a collection of all the package-level relationships that match a given <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a6e2-429">A collection of package-level relationships that match the specified <paramref name="relationshipType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-429">A collection of package-level relationships that match the specified <paramref name="relationshipType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-430"><xref:System.IO.Packaging.Package.GetRelationships%2A> 반환 하지 것입니다 `null`그러나 반환 된 컬렉션에 지정 된 일치 하는 패키지 수준 관계가 없는 경우 요소가 포함 될 수 있습니다 `relationshipType`합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-430"><xref:System.IO.Packaging.Package.GetRelationships%2A> will never return `null`; however the returned collection may contain zero elements if there are no package-level relationships that match the specified `relationshipType`.</span></span>  
  
 <span data-ttu-id="0a6e2-431">다음 표에서 패키지 수준 `relationshipType` OPC Open Packaging Conventions () 사양에 정의 된 Uri입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-431">The following table shows the package-level `relationshipType` URIs defined by the Open Packaging Conventions (OPC) specification.</span></span>  
  
|<span data-ttu-id="0a6e2-432">패키지 수준 관계</span><span class="sxs-lookup"><span data-stu-id="0a6e2-432">Package-level Relationship</span></span>|<span data-ttu-id="0a6e2-433">관계 유형 URI</span><span class="sxs-lookup"><span data-stu-id="0a6e2-433">Relationship Type URI</span></span>|  
|---------------------------------|---------------------------|  
|<span data-ttu-id="0a6e2-434">핵심 속성</span><span class="sxs-lookup"><span data-stu-id="0a6e2-434">Core Properties</span></span>|<span data-ttu-id="0a6e2-435">http://schemas.openxmlformats.org/package/2006/relationships/meta 데이터/코어-속성</span><span class="sxs-lookup"><span data-stu-id="0a6e2-435">http://schemas.openxmlformats.org/package/2006/relationships/meta data/core-properties</span></span>|  
|<span data-ttu-id="0a6e2-436">디지털 서명</span><span class="sxs-lookup"><span data-stu-id="0a6e2-436">Digital Signature</span></span>|<span data-ttu-id="0a6e2-437">http://schemas.openxmlformats.org/package/2006/relationships/digit al-서명/서명</span><span class="sxs-lookup"><span data-stu-id="0a6e2-437">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/signature</span></span>|  
|<span data-ttu-id="0a6e2-438">디지털 서명 인증서</span><span class="sxs-lookup"><span data-stu-id="0a6e2-438">Digital Signature Certificate</span></span>|<span data-ttu-id="0a6e2-439">http://schemas.openxmlformats.org/package/2006/relationships/digit al-서명/인증서</span><span class="sxs-lookup"><span data-stu-id="0a6e2-439">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/certificate</span></span>|  
|<span data-ttu-id="0a6e2-440">디지털 서명 원본</span><span class="sxs-lookup"><span data-stu-id="0a6e2-440">Digital Signature Origin</span></span>|<span data-ttu-id="0a6e2-441">http://schemas.openxmlformats.org/package/2006/relationships/digit al-서명/원본</span><span class="sxs-lookup"><span data-stu-id="0a6e2-441">http://schemas.openxmlformats.org/package/2006/relationships/digit al-signature/origin</span></span>|  
|<span data-ttu-id="0a6e2-442">미리 보기</span><span class="sxs-lookup"><span data-stu-id="0a6e2-442">Thumbnail</span></span>|<span data-ttu-id="0a6e2-443">http://schemas.openxmlformats.org/package/2006/relationships/meta 데이터/미리 보기</span><span class="sxs-lookup"><span data-stu-id="0a6e2-443">http://schemas.openxmlformats.org/package/2006/relationships/meta data/thumbnail</span></span>|  
  
 <span data-ttu-id="0a6e2-444">자세한 내용은 참조 OPC Open Packaging Conventions () 사양에서 다운로드할 수 있습니다 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-444">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a6e2-445">다음 예제에서는 패키지에 대해 정의 된 관계를 검색 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-445">The following example shows how to retrieve the relationships that have been defined for the package.</span></span>  <span data-ttu-id="0a6e2-446">전체 샘플을 참조 하세요 [는 패키지 예제 추가 정보를 읽는](http://go.microsoft.com/fwlink/?LinkID=160034)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-446">For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a6e2-447">
            <paramref name="relationshipType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-447">
              <paramref name="relationshipType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a6e2-448">
            <paramref name="relationshipType" /> is an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-448">
              <paramref name="relationshipType" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0a6e2-449">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-449">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a6e2-450">The package is write-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-450">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.Package.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
        <altmember cref="M:System.IO.Packaging.Package.DeleteRelationship(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0a6e2-451">Opens a package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-451">Opens a package.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-452"><xref:System.IO.Packaging.ZipPackage> 사용 되는 기본 패키지 형식는 <xref:System.IO.Packaging.Package.Open%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-452"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="0a6e2-453">자세한 내용은 참조 OPC Open Packaging Conventions () 사양에서 다운로드할 수 있습니다 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-453">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a6e2-454">다음 예제에서는 새로 만드는 방법을 보여 줍니다 <xref:System.IO.Packaging.Package> 를 통합 하는 <xref:System.IO.Packaging.PackageRelationship> 고 <xref:System.IO.Packaging.PackagePart> 저장 된 데이터와 함께 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-454">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="0a6e2-455">전체 샘플을 참조 하세요 [패키지 작성 샘플](http://go.microsoft.com/fwlink/?LinkID=160055)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-455">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="0a6e2-456">The IO stream on which to open the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-456">The IO stream on which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-457">Opens a package on a given IO stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-457">Opens a package on a given IO stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a6e2-458">The opened package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-458">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-459"><xref:System.IO.Packaging.ZipPackage> 사용 되는 기본 패키지 형식는 <xref:System.IO.Packaging.Package.Open%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-459"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="0a6e2-460">자세한 내용은 참조 OPC Open Packaging Conventions () 사양에서 다운로드할 수 있습니다 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-460">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a6e2-461">
            <paramref name="stream" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-461">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a6e2-462">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or, the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-462">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or, the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member Open : string -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="0a6e2-463">The path and file name of the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-463">The path and file name of the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-464">Opens a package at a given path and file name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-464">Opens a package at a given path and file name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a6e2-465">The opened package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-465">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-466"><xref:System.IO.Packaging.ZipPackage> 사용 되는 기본 패키지 형식는 <xref:System.IO.Packaging.Package.Open%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-466"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="0a6e2-467">이 <xref:System.IO.Packaging.Package.Open%2A> 메서드는 기본 특성을 사용 하 여 패키지를 엽니다 <xref:System.IO.FileMode.OpenOrCreate>, <xref:System.IO.FileAccess.ReadWrite>, 및 <xref:System.IO.FileShare.None> (되도록 서로 다른 특성을 사용 하 여 다른 Open 메서드 오버 로드 중 하나).</span><span class="sxs-lookup"><span data-stu-id="0a6e2-467">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with default attributes <xref:System.IO.FileMode.OpenOrCreate>, <xref:System.IO.FileAccess.ReadWrite>, and <xref:System.IO.FileShare.None> (to specify different attributes use one of the other Open method overloads).</span></span>  
  
 <span data-ttu-id="0a6e2-468">자세한 내용은 참조 OPC Open Packaging Conventions () 사양에서 다운로드할 수 있습니다 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-468">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a6e2-469">다음 예제에서는 새로 만드는 방법을 보여 줍니다 <xref:System.IO.Packaging.Package> 를 통합 하는 <xref:System.IO.Packaging.PackageRelationship> 고 <xref:System.IO.Packaging.PackagePart> 저장 된 데이터와 함께 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-469">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="0a6e2-470">전체 샘플을 참조 하세요 [패키지 작성 샘플](http://go.microsoft.com/fwlink/?LinkID=160055)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-470">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a6e2-471">
            <paramref name="path" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-471">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream, valuetype System.IO.FileMode packageMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream, System::IO::FileMode packageMode);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream * System.IO.FileMode -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (stream, packageMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="0a6e2-472">The IO stream on which to open the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-472">The IO stream on which to open the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="0a6e2-473">The file mode in which to open the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-473">The file mode in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-474">Opens a package with a given IO stream and file mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-474">Opens a package with a given IO stream and file mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a6e2-475">The opened package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-475">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-476"><xref:System.IO.Packaging.ZipPackage> 사용 되는 기본 패키지 형식는 <xref:System.IO.Packaging.Package.Open%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-476"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="0a6e2-477">자세한 내용은 참조 OPC Open Packaging Conventions () 사양에서 다운로드할 수 있습니다 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-477">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a6e2-478">
            <paramref name="stream" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-478">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a6e2-479">
            <paramref name="packageMode" /> value is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-479">
              <paramref name="packageMode" /> value is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a6e2-480">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or, the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-480">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or, the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileMode -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (path, packageMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="0a6e2-481">The path and file name of the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-481">The path and file name of the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="0a6e2-482">The file mode in which to open the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-482">The file mode in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-483">Opens a package at a given path using a given file mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-483">Opens a package at a given path using a given file mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a6e2-484">The opened package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-484">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-485"><xref:System.IO.Packaging.ZipPackage> 사용 되는 기본 패키지 형식는 <xref:System.IO.Packaging.Package.Open%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-485"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="0a6e2-486">이렇게 <xref:System.IO.Packaging.Package.Open%2A> 메서드는 기본 특성을 사용 하 여 패키지를 엽니다 <xref:System.IO.FileAccess.ReadWrite> 및 <xref:System.IO.FileShare.None> (서로 다른 특성을 사용 하 여 다른 Open 메서드 오버 로드 중 하나를 지정) 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-486">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with default attributes <xref:System.IO.FileAccess.ReadWrite> and <xref:System.IO.FileShare.None> (to specify different attributes use one of the other Open method overloads).</span></span>  
  
 <span data-ttu-id="0a6e2-487">자세한 내용은 참조 OPC Open Packaging Conventions () 사양에서 다운로드할 수 있습니다 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-487">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a6e2-488">다음 예제에서는 새로 만드는 방법을 보여 줍니다 <xref:System.IO.Packaging.Package> 를 통합 하는 <xref:System.IO.Packaging.PackageRelationship> 고 <xref:System.IO.Packaging.PackagePart> 저장 된 데이터와 함께 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-488">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="0a6e2-489">전체 샘플을 참조 하세요 [패키지 작성 샘플](http://go.microsoft.com/fwlink/?LinkID=160055)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-489">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a6e2-490">
            <paramref name="path" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-490">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a6e2-491">Value for <paramref name="packageMode" /> is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-491">Value for <paramref name="packageMode" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(class System.IO.Stream stream, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::IO::Stream ^ stream, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream * System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (stream, packageMode, packageAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="0a6e2-492">The IO stream on which to open the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-492">The IO stream on which to open the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="0a6e2-493">The file mode in which to open the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-493">The file mode in which to open the package.</span>
          </span>
        </param>
        <param name="packageAccess">
          <span data-ttu-id="0a6e2-494">The file access in which to open the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-494">The file access in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-495">Opens a package with a given IO stream, file mode, and file access setting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-495">Opens a package with a given IO stream, file mode, and file access setting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a6e2-496">The opened package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-496">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-497"><xref:System.IO.Packaging.ZipPackage> 사용 되는 기본 패키지 형식는 <xref:System.IO.Packaging.Package.Open%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-497"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="0a6e2-498">자세한 내용은 참조 OPC Open Packaging Conventions () 사양에서 다운로드할 수 있습니다 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-498">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a6e2-499">
            <paramref name="stream" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-499">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a6e2-500">The value for <paramref name="packageMode" /> or <paramref name="packageAccess" /> is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-500">The value for <paramref name="packageMode" /> or <paramref name="packageAccess" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a6e2-501">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-501">The package to open requires read or read/write permission and the specified <paramref name="stream" /> is write-only; or the package to open requires write or read/write permission and the specified <paramref name="stream" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode, packageAccess As FileAccess) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (path, packageMode, packageAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="0a6e2-502">The path and file name of the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-502">The path and file name of the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="0a6e2-503">The file mode in which to open the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-503">The file mode in which to open the package.</span>
          </span>
        </param>
        <param name="packageAccess">
          <span data-ttu-id="0a6e2-504">The file access in which to open the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-504">The file access in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-505">Opens a package at a given path using a given file mode and file access setting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-505">Opens a package at a given path using a given file mode and file access setting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a6e2-506">The opened package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-506">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-507"><xref:System.IO.Packaging.ZipPackage> 사용 되는 기본 패키지 형식는 <xref:System.IO.Packaging.Package.Open%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-507"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="0a6e2-508">이 <xref:System.IO.Packaging.Package.Open%2A> 메서드는 기본값을 사용 하 여 패키지를 엽니다 <xref:System.IO.FileShare.None> 특성 (다른 특성 사용법을 지정 하는 <xref:System.IO.Packaging.Package.Open%2A> 메서드 오버 로드).</span><span class="sxs-lookup"><span data-stu-id="0a6e2-508">This <xref:System.IO.Packaging.Package.Open%2A> method opens the package with a default <xref:System.IO.FileShare.None> attribute (to specify a different attribute use the <xref:System.IO.Packaging.Package.Open%2A> method overload).</span></span>  
  
 <span data-ttu-id="0a6e2-509">자세한 내용은 참조 OPC Open Packaging Conventions () 사양에서 다운로드할 수 있습니다 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-509">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a6e2-510">다음 예제에서는 열고 읽는 방법을 <xref:System.IO.Packaging.Package> 포함 된 <xref:System.IO.Packaging.PackageRelationship> 및 <xref:System.IO.Packaging.PackagePart> 저장 된 데이터와 함께 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-510">The following example shows how to open and read a <xref:System.IO.Packaging.Package> that contains <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="0a6e2-511">전체 샘플을 참조 하세요 [는 패키지 예제 추가 정보를 읽는](http://go.microsoft.com/fwlink/?LinkID=160034)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-511">For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).</span></span>  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a6e2-512">
            <paramref name="path" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-512">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a6e2-513">Value for <paramref name="packageMode" /> or <paramref name="packageAccess" /> is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-513">Value for <paramref name="packageMode" /> or <paramref name="packageAccess" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess, System.IO.FileShare packageShare);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package Open(string path, valuetype System.IO.FileMode packageMode, valuetype System.IO.FileAccess packageAccess, valuetype System.IO.FileShare packageShare) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (path As String, packageMode As FileMode, packageAccess As FileAccess, packageShare As FileShare) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ Open(System::String ^ path, System::IO::FileMode packageMode, System::IO::FileAccess packageAccess, System::IO::FileShare packageShare);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.Package.Open (path, packageMode, packageAccess, packageShare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageMode" Type="System.IO.FileMode" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
        <Parameter Name="packageShare" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="0a6e2-514">The path and file name of the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-514">The path and file name of the package.</span>
          </span>
        </param>
        <param name="packageMode">
          <span data-ttu-id="0a6e2-515">The file mode in which to open the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-515">The file mode in which to open the package.</span>
          </span>
        </param>
        <param name="packageAccess">
          <span data-ttu-id="0a6e2-516">The file access in which to open the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-516">The file access in which to open the package.</span>
          </span>
        </param>
        <param name="packageShare">
          <span data-ttu-id="0a6e2-517">The file sharing mode in which to open the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-517">The file sharing mode in which to open the package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-518">Opens a package at a given path using a given file mode, file access, and file share setting.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-518">Opens a package at a given path using a given file mode, file access, and file share setting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a6e2-519">The opened package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-519">The opened package.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-520"><xref:System.IO.Packaging.ZipPackage> 사용 되는 기본 패키지 형식는 <xref:System.IO.Packaging.Package.Open%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-520"><xref:System.IO.Packaging.ZipPackage> is the default package type that is used by the <xref:System.IO.Packaging.Package.Open%2A> method.</span></span>  
  
 <span data-ttu-id="0a6e2-521">자세한 내용은 참조 OPC Open Packaging Conventions () 사양에서 다운로드할 수 있습니다 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-521">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a6e2-522">다음 예제에서는 새로 만드는 방법을 보여 줍니다 <xref:System.IO.Packaging.Package> 를 통합 하는 <xref:System.IO.Packaging.PackageRelationship> 고 <xref:System.IO.Packaging.PackagePart> 저장 된 데이터와 함께 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-522">The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.</span></span>  <span data-ttu-id="0a6e2-523">전체 샘플을 참조 하세요 [패키지 작성 샘플](http://go.microsoft.com/fwlink/?LinkID=160055)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-523">For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).</span></span>  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreatepackage)]
 [!code-vb[PackageWrite#PackageWriteCreatePackage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreatepackage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a6e2-524">
            <paramref name="path" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-524">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0a6e2-525">The value for <paramref name="packageMode" />, <paramref name="packageAccess" />, or <paramref name="packageShare" /> is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-525">The value for <paramref name="packageMode" />, <paramref name="packageAccess" />, or <paramref name="packageShare" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PackageProperties">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageProperties PackageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.PackageProperties PackageProperties" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.Package.PackageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PackageProperties As PackageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::PackageProperties ^ PackageProperties { System::IO::Packaging::PackageProperties ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PackageProperties : System.IO.Packaging.PackageProperties" Usage="System.IO.Packaging.Package.PackageProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0a6e2-526">Gets the core properties of the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-526">Gets the core properties of the package.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0a6e2-527">패키지의 핵심 속성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-527">The core properties of the package.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-528">핵심 패키지 속성에 대 한 자세한 내용은 참조에서 다운로드할 수 있는 OPC Open Packaging Conventions () 사양 단원 3.1 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-528">For additional information about core package properties, see section 3.1 in the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0a6e2-529">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-529">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PartExists">
      <MemberSignature Language="C#" Value="public virtual bool PartExists (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PartExists(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.PartExists(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PartExists (partUri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PartExists(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="abstract member PartExists : Uri -&gt; bool&#xA;override this.PartExists : Uri -&gt; bool" Usage="package.PartExists partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <span data-ttu-id="0a6e2-530">The <see cref="T:System.Uri" /> of the part to check for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-530">The <see cref="T:System.Uri" /> of the part to check for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-531">Indicates whether a part with a given URI is in the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-531">Indicates whether a part with a given URI is in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a6e2-532">
            <see langword="true" /> if a part with the specified <paramref name="partUri" /> is in the package; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-532">
              <see langword="true" /> if a part with the specified <paramref name="partUri" /> is in the package; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-533">`partUri` 슬래시 문자로 시작 해야 "/" 및 패키지의 루트에서 절대 경로 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-533">The `partUri` should begin with a forward-slash character "/" and be absolute from the root of the package.</span></span>  
  
 <span data-ttu-id="0a6e2-534">자세한 내용은 참조 OPC Open Packaging Conventions () 사양에서 다운로드할 수 있습니다 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-534">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a6e2-535">
            <paramref name="partUri" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-535">
              <paramref name="partUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0a6e2-536">
            <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-536">
              <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0a6e2-537">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-537">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a6e2-538">The package is write-only (information cannot be read).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-538">The package is write-only (information cannot be read).</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <altmember cref="T:System.IO.Packaging.PackagePart" />
      </Docs>
    </Member>
    <Member MemberName="RelationshipExists">
      <MemberSignature Language="C#" Value="public bool RelationshipExists (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RelationshipExists(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.RelationshipExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RelationshipExists (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RelationshipExists(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.RelationshipExists : string -&gt; bool" Usage="package.RelationshipExists id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="0a6e2-539">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to check for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-539">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to check for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a6e2-540">Indicates whether a package-level relationship with a given ID is contained in the package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-540">Indicates whether a package-level relationship with a given ID is contained in the package.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a6e2-541">
            <see langword="true" /> if a package-level relationship with the specified <paramref name="id" /> is in the package; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-541">
              <see langword="true" /> if a package-level relationship with the specified <paramref name="id" /> is in the package; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a6e2-542">자세한 내용은 참조 OPC Open Packaging Conventions () 사양에서 다운로드할 수 있습니다 [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255)합니다.</span><span class="sxs-lookup"><span data-stu-id="0a6e2-542">For additional information, see the Open Packaging Conventions (OPC) specification available for download at [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0a6e2-543">
            <paramref name="id" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-543">
              <paramref name="id" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="0a6e2-544">
            <paramref name="id" /> is not a valid XML identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-544">
              <paramref name="id" /> is not a valid XML identifier.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="0a6e2-545">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-545">The package is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="0a6e2-546">The package is write-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-546">The package is write-only.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.Packaging.PackageRelationship" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.Package.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0a6e2-547">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended for application use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-547">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended for application use.</span>
          </span>
          <span data-ttu-id="0a6e2-548">Use the type-safe <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> method instead.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a6e2-548">Use the type-safe <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> method instead.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>