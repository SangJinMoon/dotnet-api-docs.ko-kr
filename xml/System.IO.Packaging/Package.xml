<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Package.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54acc6f21ec13023541c348107a406f31ce5dea82.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4acc6f21ec13023541c348107a406f31ce5dea82</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.Package">
          <source>Represents a container that can store multiple data objects.</source>
          <target state="translated">여러 데이터 개체를 저장할 수 있는 컨테이너를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> is an abstract class that can be used to organize objects into a single entity of a defined physical format for portability and efficient access.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 개체의 이식성 및 효율적인 액세스에 대 한 정의 된 실제 형식 단일 엔터티를 구성 하는 데 사용할 수 있는 추상 클래스가입니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A ZIP file is the primary physical format for the <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>.</source>
          <target state="translated">ZIP 파일은 기본 실제 형식에 대 한는 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>Other <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> implementations might use other physical formats such as an XML document, a database, or Web service.</source>
          <target state="translated">다른 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 구현 수 있는 XML 문서를 데이터베이스와 같은 다른 물리적 형식을 사용 하 여 또는 웹 서비스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>Like a file system, items contained in a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> are referenced in a hierarchical organization of folders and files.</source>
          <target state="translated">같은 파일 시스템에 포함 된 항목은 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 파일과 폴더의 계층적 구성에서 참조 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>Although <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> itself is an abstract class, the <ph id="ph2">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> derived class is used as default by the <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method.</source>
          <target state="translated">하지만 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 자체 클래스는 추상 클래스는 <ph id="ph2">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 파생된 클래스에서 기본적으로 사용 됩니다는 <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> ("part") is the abstract class that represents an object that is stored in a <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> ("파트")에 저장 된 개체를 나타내는 추상 클래스는는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A <ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> ("relationship") defines an association between a source <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> and a target object.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> ("관계")을 원본 간의 연결을 정의 <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> 와 대상 개체입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A <ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> can be one of two types, each of which can be one of two forms:</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> 두 형식 중 하나일 수 있으며 각 두 형식 중 하나일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A package-level relationship (created by the <ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType&gt;</ph> method) relates a <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> to either:</source>
          <target state="translated">패키지 수준 관계 (에서 만든는 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=nameWithType&gt;</ph> 메서드)와 관련 한 <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> 로:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A target part in the package.</source>
          <target state="translated">패키지의 대상 부분입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A target resource outside the package.</source>
          <target state="translated">패키지 외부의 대상 리소스입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A part-level relationship (created by the <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType&gt;</ph> method) relates a source <ph id="ph2">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> to either:</source>
          <target state="translated">파트 수준 관계 (에서 만든는 <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=nameWithType&gt;</ph> 메서드)는 소스와 관련 된 <ph id="ph2">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> 로:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>Another target part in the package.</source>
          <target state="translated">패키지의 다른 대상 부분입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A target resource outside the package.</source>
          <target state="translated">패키지 외부의 대상 리소스입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>The relationship's source <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> or source <ph id="ph2">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> is considered the "owner" of the relationship.</source>
          <target state="translated">관계의 소스 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 또는 소스 <ph id="ph2">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> 관계의 "소유자"로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>When the source object is deleted, all the relationships owned by the source object are also deleted.</source>
          <target state="translated">소스 개체가 삭제 된 원본 개체가 소유 하는 모든 관계가 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>The process of creating or deleting a relationship does not physically change either the source or target objects in any way.</source>
          <target state="translated">만들기 또는 관계를 삭제 하는 과정은 어떤 방식으로든에서 원본 또는 대상 개체를 물리적으로 변경 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A <ph id="ph1">&lt;xref:System.IO.Packaging.PackageDigitalSignature&gt;</ph> ("digital signature") is a composition of parts and relationships representing a digital signature included with a <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.IO.Packaging.PackageDigitalSignature&gt;</ph> ("디지털 서명")에 포함 된 디지털 서명이 나타내는 관계와 파트의 컴퍼지션은는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>The digital signature identifies the originator and validates that the signed parts and relationships contained in the <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> have not been modified.</source>
          <target state="translated">디지털 서명은 출처를 식별 하 고 서명 된 파트 및 관계에 포함 하는 유효성을 검사는 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 수정 되지 않은 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>Packages also support Digital Rights Management (DRM) which allows content elements in a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to be encrypted with specific access rights granted to authorized users.</source>
          <target state="translated">패키지에는 또한 관리 DRM (디지털 권한)의 콘텐츠 요소는 지원는 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 권한 있는 사용자에 게 부여 하는 특정 액세스 권한을 가진 암호화 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>Based on the <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> architecture, an <ph id="ph2">&lt;xref:System.Windows.Xps.Packaging.XpsDocument&gt;</ph> is a package type designed for storing documents based on the open <bpt id="p1">[</bpt>XML Paper Specification (XPS)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=65761)</ept>.</source>
          <target state="translated">에 따라는 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 아키텍처는 <ph id="ph2">&lt;xref:System.Windows.Xps.Packaging.XpsDocument&gt;</ph> 열기에 따라 문서를 저장 하기 위한 패키지 형식이 <bpt id="p1">[</bpt>XPS XML Paper Specification ()<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=65761)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_avalonwinfx](~/includes/tlasharptla-avalonwinfx-md.md)]</ph> uses packages to store content, resources, and relationships for pages and documents using a standard ZIP file by default.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_avalonwinfx](~/includes/tlasharptla-avalonwinfx-md.md)]</ph> 패키지를 사용 하 여 콘텐츠, 리소스 및 페이지와 기본적으로 표준 ZIP 파일을 사용 하 여 문서에 대 한 관계를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>As with any ZIP file, your application can use the <ph id="ph1">&lt;xref:System.IO.Packaging&gt;</ph> classes to store and optionally protect any type or number of data files in a single efficient-to-access container.</source>
          <target state="translated">다른 ZIP 파일과 응용 프로그램 사용 하 여 수는 <ph id="ph1">&lt;xref:System.IO.Packaging&gt;</ph> 클래스를 저장 하 고 필요에 따라에 임의의 유형 또는 단일 효율적으로 액세스 컨테이너의 데이터 파일 수를 보호 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>For more information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">자세한 내용은에서 다운로드할 수 있는 열린 패키징 규칙 (OPC) 사양을 참조 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>The following example shows the basic steps for creating a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>.</source>
          <target state="translated">다음 예제를 만드는 기본 단계는 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>In this example, a package is created to contain a document together with a graphic image that is displayed as part of the document.</source>
          <target state="translated">이 예제에서는 문서의 일부로 표시 되는 그래픽 이미지와 함께 문서를 포함 하는 패키지가 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>(This is similar to the case in which an HTML file has an <ph id="ph1">\&lt;</ph>IMG&gt; tag that references an external image file.)  Two <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> elements are also included in the package.</source>
          <target state="translated">(이 HTML 파일에 있는 경우와 비슷하며는 <ph id="ph1">\&lt;</ph>IMG &gt; 외부 이미지 파일을 참조 하는 태그입니다.)  두 개의 <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> 요소 패키지에 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>The first, a "package-level" relationship, defines the document part as the package's root element.</source>
          <target state="translated">첫 번째, "패키지 수준" 관계는 패키지의 루트 요소와 문서 부분을 정의합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A second, "part-level" relationship defines the association between the document part (the "source" of the part-level relationship) and its use of the image part (the "target" of the part-level relationship).</source>
          <target state="translated">두 번째, "파트 수준" 관계 이미지 파트 (파트 수준 관계의 "대상")를 사용 하는 문서 파트 (파트 수준 관계의 "원본")와 연결을 정의합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">전체 샘플을 참조 하십시오. <bpt id="p1">[</bpt>패키지 작성 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.Package">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
          <source>The file IO permissions for the package.</source>
          <target state="translated">패키지의 파일 IO 권한입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph> class that uses a given <ph id="ph2">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph>를 사용하는 <ph id="ph2">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.%23ctor%2A&gt;</ph> is a protected constructor of the <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> abstract base class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.%23ctor%2A&gt;</ph> 보호 된 생성자는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> 추상 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
          <source>When called in a derived class, the <ph id="ph1">&lt;xref:System.IO.Packaging.Package.%23ctor%2A&gt;</ph> constructor initializes a new instance of the derived class.</source>
          <target state="translated">파생된 클래스에서 호출 된 경우는 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.%23ctor%2A&gt;</ph> 생성자는 파생된 클래스의 새 인스턴스를 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
          <source>The value for <ph id="ph1">&lt;paramref name="openFileAccess" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="openFileAccess" /&gt;</ph>의 값이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)">
          <source>The file IO permissions for the package.</source>
          <target state="translated">패키지의 파일 IO 권한입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to open the package for streaming; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">스트리밍을 위해 패키지를 여는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph> class that uses a given <ph id="ph2">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> and streaming option.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph> 및 스트리밍 옵션을 사용하는 <ph id="ph2">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.%23ctor%2A&gt;</ph> is a protected constructor of the <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> abstract base abstract base class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.%23ctor%2A&gt;</ph> 보호 된 생성자는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> 추상 기본 추상 기본 클래스입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)">
          <source>When called in a derived class, the <ph id="ph1">&lt;xref:System.IO.Packaging.Package.%23ctor%2A&gt;</ph> constructor initializes a new instance of the derived class.</source>
          <target state="translated">파생된 클래스에서 호출 된 경우는 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.%23ctor%2A&gt;</ph> 생성자는 파생된 클래스의 새 인스턴스를 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)">
          <source>The value for <ph id="ph1">&lt;paramref name="openFileAccess" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="openFileAccess" /&gt;</ph>의 값이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Close">
          <source>Saves and closes the package plus all underlying part streams.</source>
          <target state="translated">패키지 및 모든 내부 파트 스트림을 저장하고 닫습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Close">
          <source>For the <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> class <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> perform the same operation—there is no reason to call <ph id="ph4">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> if you call <ph id="ph5">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph>, or vice-versa.</source>
          <target state="translated">에 대 한는 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 클래스 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> 동일한 작업을 수행-호출 하는 이유가 없습니다 <ph id="ph4">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> 호출 하는 경우 <ph id="ph5">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph>, 또는 그 반대입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Close">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> internally call <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> 내부적으로 호출 <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Close">
          <source>The <ph id="ph1">`using`</ph> statement (different from the <ph id="ph2">`using`</ph> namespace directive) is the recommended way to <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> a package.</source>
          <target state="translated"><ph id="ph1">`using`</ph> 문 (다른는 <ph id="ph2">`using`</ph> 네임 스페이스 지시문) 하는 권장 방법은 <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> 패키지 합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Close">
          <source><bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept> and <bpt id="p2">[</bpt>Reading a Package Sample<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=160034)</ept> show how to close and dispose a package by using the <ph id="ph1">`using`</ph> statement.</source>
          <target state="translated"><bpt id="p1">[</bpt>패키지 작성 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept> 및 <bpt id="p2">[</bpt>는 패키지 예제 추가 정보를 읽는<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=160034)</ept> 닫고를 사용 하 여 패키지를 삭제 하는 방법을 보여는 <ph id="ph1">`using`</ph> 문.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.Package">
          <source>Creates a new package part.</source>
          <target state="translated">새 패키지 파트를 만듭니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph> initializes an empty <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> for the new part.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph> 빈 초기화 <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> 새 부분에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>The <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType&gt;</ph> method can be used to obtain a reference to the stream instance associated with the part.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType&gt;</ph> 메서드 부분과 연결 된 스트림 인스턴스에 대 한 참조를 가져오는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>For more information about package parts, see section 1.1 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">패키지 파트에 대 한 자세한 내용은에서 다운로드할 수 있는 열린 패키징 규칙 (OPC) 사양의 섹션 1.1을 참조 하십시오. <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> and then store data into the part.</source>
          <target state="translated">다음 예제에는 새 만드는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> 다음 부분에 데이터를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">전체 샘플을 참조 하십시오. <bpt id="p1">[</bpt>패키지 작성 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source><ph id="ph1">&lt;see cref="Overload:System.IO.Packaging.Package.CreatePart" /&gt;</ph> internally calls the derived class <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /&gt;</ph> method to actually create the part based on the physical format implemented in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.IO.Packaging.Package.CreatePart" /&gt;</ph> 파생된 클래스를 내부적으로 호출 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /&gt;</ph> 파생된 클래스에서 구현 된 실제 형식에 따라 실제로 부분을 만들려면 방법을 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> of the new part.</source>
          <target state="translated">새 파트의 <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>The content type of the data stream.</source>
          <target state="translated">데이터 스트림의 콘텐츠 형식입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>Creates a new uncompressed part with a given URI and content type.</source>
          <target state="translated">지정된 URI 및 콘텐츠 형식으로 압축되지 않은 새 파트를 만듭니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>The new created part.</source>
          <target state="translated">새로 만들어진 파트입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph> initializes an empty <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> for the new part.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph> 빈 초기화 <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> 새 부분에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType&gt;</ph> method can be used to obtain a reference to the stream instance associated with the part.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType&gt;</ph> 메서드 부분과 연결 된 스트림 인스턴스에 대 한 참조를 가져오는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>The part <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.CompressionOption%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.IO.Packaging.CompressionOption.NotCompressed?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">파트 <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.CompressionOption%2A&gt;</ph> 은 <ph id="ph2">&lt;xref:System.IO.Packaging.CompressionOption.NotCompressed?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>For additional information about package parts, see section 1.1 in the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">패키지 파트에 대 한 자세한 내용은 다운로드할 수 있는 열린 패키징 규칙 (OPC) 사양에 1.1 섹션을 참조 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> and then store data into the part.</source>
          <target state="translated">다음 예제에는 새 만드는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> 다음 부분에 데이터를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">전체 샘플을 참조 하십시오. <bpt id="p1">[</bpt>패키지 작성 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> or <ph id="ph2">&lt;paramref name="contentType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="contentType" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph>는 유효한 <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>가 아닙니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>A part with the specified <ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is already present in the package.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="partUri" /&gt;</ph>의 파트가 이미 패키지에 있는 경우</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">패키지가 열려 있지 않은 경우(<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>가 호출된 경우)</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source>The package is read-only (a new part cannot be added).</source>
          <target state="translated">패키지가 읽기 전용인 경우. 이 경우 새 파트를 추가할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
          <source><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" /&gt;</ph> internally calls the derived class's <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /&gt;</ph> method to actually create the part based on the physical format implemented in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)" /&gt;</ph> 파생된 클래스의 내부적으로 호출 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /&gt;</ph> 파생된 클래스에서 구현 된 실제 형식에 따라 실제로 부분을 만들려면 방법을 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> of the new part.</source>
          <target state="translated">새 파트의 <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The content type of the data stream.</source>
          <target state="translated">데이터 스트림의 콘텐츠 형식입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The compression option for the data stream, <ph id="ph1">&lt;see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.IO.Packaging.CompressionOption.Normal" /&gt;</ph> compression.</source>
          <target state="translated">데이터 스트림의 압축 옵션으로 <ph id="ph1">&lt;see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="F:System.IO.Packaging.CompressionOption.Normal" /&gt;</ph> 압축입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>Creates a new part with a given URI, content type, and compression option.</source>
          <target state="translated">지정된 URI, 콘텐츠 형식 및 압축 옵션으로 새 파트를 만듭니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The new created part.</source>
          <target state="translated">새로 만들어진 파트입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>For the default <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> derived class, the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph> method only supports two <ph id="ph3">`compressionOption`</ph> values, <ph id="ph4">&lt;xref:System.IO.Packaging.CompressionOption.NotCompressed&gt;</ph> or <ph id="ph5">&lt;xref:System.IO.Packaging.CompressionOption.Normal&gt;</ph> compression.</source>
          <target state="translated">기본값에 대 한 <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 파생 클래스는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph> 메서드는 지원 두 <ph id="ph3">`compressionOption`</ph> 값 <ph id="ph4">&lt;xref:System.IO.Packaging.CompressionOption.NotCompressed&gt;</ph> 또는 <ph id="ph5">&lt;xref:System.IO.Packaging.CompressionOption.Normal&gt;</ph> 압축 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>Other <ph id="ph1">&lt;xref:System.IO.Packaging.CompressionOption&gt;</ph> values of <ph id="ph2">&lt;xref:System.IO.Packaging.CompressionOption.Maximum&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.Packaging.CompressionOption.Fast&gt;</ph>, or <ph id="ph4">&lt;xref:System.IO.Packaging.CompressionOption.SuperFast&gt;</ph> use <ph id="ph5">&lt;xref:System.IO.Packaging.CompressionOption.Normal&gt;</ph> compression.</source>
          <target state="translated">다른 <ph id="ph1">&lt;xref:System.IO.Packaging.CompressionOption&gt;</ph> 값 <ph id="ph2">&lt;xref:System.IO.Packaging.CompressionOption.Maximum&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.Packaging.CompressionOption.Fast&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.IO.Packaging.CompressionOption.SuperFast&gt;</ph> 사용 <ph id="ph5">&lt;xref:System.IO.Packaging.CompressionOption.Normal&gt;</ph> 압축 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph> creates an empty <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> for the new part.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph> 빈 만듭니다 <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> 새 부분에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType&gt;</ph> method can be used to obtain a reference to the stream instance associated with the part.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=nameWithType&gt;</ph> 메서드 부분과 연결 된 스트림 인스턴스에 대 한 참조를 가져오는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">자세한 내용은에서 다운로드할 수 열려 패키징 규칙 (OPC) 사양을 참조 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> and then store data into the part.</source>
          <target state="translated">다음 예제에는 새 만드는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> 다음 부분에 데이터를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">전체 샘플을 참조 하십시오. <bpt id="p1">[</bpt>패키지 작성 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> or <ph id="ph2">&lt;paramref name="contentType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="contentType" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph>는 유효한 <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>가 아닙니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>A part with the specified <ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is already present in the package.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="partUri" /&gt;</ph>의 파트가 이미 패키지에 있는 경우</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The <ph id="ph1">&lt;paramref name="compressionOption" /&gt;</ph> value is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="compressionOption" /&gt;</ph> 값이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">패키지가 열려 있지 않은 경우(<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>가 호출된 경우)</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The package is read-only (a new part cannot be added).</source>
          <target state="translated">패키지가 읽기 전용인 경우. 이 경우 새 파트를 추가할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /&gt;</ph> internally calls the derived class's <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /&gt;</ph> method to actually create the part based on the physical format implemented in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /&gt;</ph> 파생된 클래스의 내부적으로 호출 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /&gt;</ph> 파생된 클래스에서 구현 된 실제 형식에 따라 실제로 부분을 만들려면 방법을 합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> for the part being created.</source>
          <target state="translated">만들 파트의 <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The content type of the data stream.</source>
          <target state="translated">데이터 스트림의 콘텐츠 형식입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The compression option for the data stream.</source>
          <target state="translated">데이터 스트림의 압축 옵션입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>When overridden in a derived class, creates a new part in the package.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 패키지에서 새 파트를 만듭니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The created part.</source>
          <target state="translated">만들어진 파트입니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The derived <ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreatePartCore%2A&gt;</ph> method is called by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph> method to create a part based on the physical format implemented in the derived class.</source>
          <target state="translated">파생 된 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreatePartCore%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph> 파생된 클래스에서 구현 된 실제 형식에 따라 파트를 만드는 방법을 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>By default, a <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> derived class implementation of the abstract <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> class is provided and used.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 추상 클래스 구현을 파생 <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> 클래스에 제공 되 고 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>In the default operation, <ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph> internally calls <ph id="ph2">&lt;xref:System.IO.Packaging.Package.CreatePartCore%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> class to create a new part in a ZIP file.</source>
          <target state="translated">기본 동작에서 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreatePart%2A&gt;</ph> 내부적으로 호출 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.CreatePartCore%2A&gt;</ph> 의 <ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> ZIP 파일에 새 파트를 만드는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>For the default <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> derived class, the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.CreatePartCore%2A&gt;</ph> method only supports two <ph id="ph3">`compressionOption`</ph> values, <ph id="ph4">&lt;xref:System.IO.Packaging.CompressionOption.NotCompressed&gt;</ph> or <ph id="ph5">&lt;xref:System.IO.Packaging.CompressionOption.Normal&gt;</ph> compression.</source>
          <target state="translated">기본값에 대 한 <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 파생 클래스는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.CreatePartCore%2A&gt;</ph> 메서드는 지원 두 <ph id="ph3">`compressionOption`</ph> 값 <ph id="ph4">&lt;xref:System.IO.Packaging.CompressionOption.NotCompressed&gt;</ph> 또는 <ph id="ph5">&lt;xref:System.IO.Packaging.CompressionOption.Normal&gt;</ph> 압축 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>Other <ph id="ph1">&lt;xref:System.IO.Packaging.CompressionOption&gt;</ph> values of <ph id="ph2">&lt;xref:System.IO.Packaging.CompressionOption.Maximum&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.Packaging.CompressionOption.Fast&gt;</ph>, or <ph id="ph4">&lt;xref:System.IO.Packaging.CompressionOption.SuperFast&gt;</ph> use <ph id="ph5">&lt;xref:System.IO.Packaging.CompressionOption.Normal&gt;</ph> compression.</source>
          <target state="translated">다른 <ph id="ph1">&lt;xref:System.IO.Packaging.CompressionOption&gt;</ph> 값 <ph id="ph2">&lt;xref:System.IO.Packaging.CompressionOption.Maximum&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.Packaging.CompressionOption.Fast&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.IO.Packaging.CompressionOption.SuperFast&gt;</ph> 사용 <ph id="ph5">&lt;xref:System.IO.Packaging.CompressionOption.Normal&gt;</ph> 압축 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">모델 패키지 및 패키지 파트에 대 한 자세한 내용은 참조에서 다운로드할 수 있는 열린 패키징 규칙 (OPC) 사양의 Chapter 1 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
          <source>The derived <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /&gt;</ph> implementation should make no assumptions about the order or operations performed by the <ph id="ph2">&lt;see cref="Overload:System.IO.Packaging.Package.CreatePart" /&gt;</ph> method that calls it.</source>
          <target state="translated">파생 된 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)" /&gt;</ph> 구현을 수행 하는 작업이 나 순서에 대해 어떠한가 정도 하지 확인 해야는 <ph id="ph2">&lt;see cref="Overload:System.IO.Packaging.Package.CreatePart" /&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.Package">
          <source>Creates a package-level relationship to a given part.</source>
          <target state="translated">지정된 파트에 대한 패키지 수준 관계를 만듭니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A package-level relationship defines an association between the package and an associated target part or resource.</source>
          <target state="translated">패키지 수준 관계 패키지와 연결 된 대상 파트 또는 리소스 간의 연결을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>A package-level relationship can be one of two forms.</source>
          <target state="translated">패키지 수준 관계는 다음 두 형식 중 하나일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to a target <ph id="ph2">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> inside the package.</source>
          <target state="translated">사이 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 대상 <ph id="ph2">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> 패키지 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to a target resource outside the package.</source>
          <target state="translated">사이 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 패키지 외부의 대상 리소스입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>In a package-relationship the package is considered the "owner" of the relationship.</source>
          <target state="translated">패키지 관계 패키지 관계의 "소유자"로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>When the package is deleted, all the relationships owned by the package are also deleted.</source>
          <target state="translated">패키지를 삭제 하는 경우 패키지를 소유한 모든 관계도 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>The process of creating or deleting the relationship does not physically alter the target part or resource in any way.</source>
          <target state="translated">대상 파트나 리소스 어떤 방식으로든에서 만들거나 관계 삭제 프로세스 물리적으로 변경 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">자세한 내용은에서 다운로드할 수 열려 패키징 규칙 (OPC) 사양을 참조 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>The following example illustrates creating a <ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> between a <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> and a root document part.</source>
          <target state="translated">다음 예제에서는 만드는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> 간에 <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> 와 문서 루트 파트.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">전체 샘플을 참조 하십시오. <bpt id="p1">[</bpt>패키지 작성 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> of the target part.</source>
          <target state="translated">대상 파트의 <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Indicates if the target part is <ph id="ph1">&lt;see cref="F:System.IO.Packaging.TargetMode.Internal" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.IO.Packaging.TargetMode.External" /&gt;</ph> to the package.</source>
          <target state="translated">대상 파트가 패키지에 <ph id="ph1">&lt;see cref="F:System.IO.Packaging.TargetMode.Internal" /&gt;</ph>인지 또는 <ph id="ph2">&lt;see cref="F:System.IO.Packaging.TargetMode.External" /&gt;</ph>인지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>A URI that uniquely defines the role of the relationship.</source>
          <target state="translated">관계의 역할을 고유하게 정의하는 URI입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Creates a package-level relationship to a part with a given URI, target mode, and relationship type.</source>
          <target state="translated">지정된 URI, 대상 모드 및 관계 형식을 가진 파트에 대한 패키지 수준 관계를 만듭니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>The package-level relationship to the specified part.</source>
          <target state="translated">지정된 파트에 대한 패키지 수준 관계입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>A package-level relationship defines an association between the package and an associated target part or resource.</source>
          <target state="translated">패키지 수준 관계 패키지와 연결 된 대상 파트 또는 리소스 간의 연결을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>A package-level relationship can be one of two forms.</source>
          <target state="translated">패키지 수준 관계는 다음 두 형식 중 하나일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to a target part in the package.</source>
          <target state="translated">사이 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 대상 부분 패키지에 있습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to a target resource outside the package.</source>
          <target state="translated">사이 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 패키지 외부의 대상 리소스입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>In a package-relationship the package is considered the "owner" of the relationship.</source>
          <target state="translated">패키지 관계 패키지 관계의 "소유자"로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>When the package is deleted, all the relationships owned by the package are also deleted.</source>
          <target state="translated">패키지를 삭제 하는 경우 패키지를 소유한 모든 관계도 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A&gt;</ph> does not physically change the target part or resource in any way.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A&gt;</ph> 물리적으로 바뀌지 않습니다 대상 파트 또는 어떤 방식으로든에서 리소스.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>The target of a relationship cannot be another relationship.</source>
          <target state="translated">관계의 대상 다른 관계를 지정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>If <ph id="ph1">`targetMode`</ph> is specified as <ph id="ph2">&lt;xref:System.IO.Packaging.TargetMode.Internal&gt;</ph>, <ph id="ph3">`targetUri`</ph> must be a relative URI that is formed according to the <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> Uniform Resource Identifier (URI) Generic Syntax specification.</source>
          <target state="translated">경우 <ph id="ph1">`targetMode`</ph> 로 지정 된 <ph id="ph2">&lt;xref:System.IO.Packaging.TargetMode.Internal&gt;</ph>, <ph id="ph3">`targetUri`</ph> 에 따라 구성 되는 상대 URI 이어야 합니다는 <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> 일반 구문 식별자 URI (Uniform Resource) 사양입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>The internal relative URI can be either an absolute path that starts with a forward slash ("/") character such as "/page1.xaml" or "/images/picture4.jpg", or a relative path such as "../imagespicture1.jpg" that resolves against the package root ("/") as the base URI.</source>
          <target state="translated">내부 상대 URI 수는 절대 경로일 수로 시작 하는 슬래시 ("/") 문자와 같은 "/ page1.xaml" 또는 "/ images/picture4.jpg", 또는 상대 경로와 같은 "... / imagespicture1.jpg "패키지 루트에 대해 ("/ ")로 기본 URI를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>If <ph id="ph1">`targetMode`</ph> is specified as <ph id="ph2">&lt;xref:System.IO.Packaging.TargetMode.External&gt;</ph>, <ph id="ph3">`targetUri`</ph> can be either an absolute or relative URI formed according to the <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> Uniform Resource Identifier (URI) Generic Syntax specification.</source>
          <target state="translated">경우 <ph id="ph1">`targetMode`</ph> 로 지정 된 <ph id="ph2">&lt;xref:System.IO.Packaging.TargetMode.External&gt;</ph>, <ph id="ph3">`targetUri`</ph> 에 따라 만든 상대 URI 또는 절대 중 하나가 될 수 있습니다는 <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> 일반 구문 식별자 URI (Uniform Resource) 사양입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>"<ph id="ph1">http://www.microsoft.com/page2.xml</ph>" is an example of an absolute URI that references an external target resource "page2.xml".</source>
          <target state="translated">"<ph id="ph1">http://www.microsoft.com/page2.xml</ph>"는 대상 외부 리소스 "page2.xml"를 참조 하는 절대 URI의 예시입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>"images/picture1.jpg" is an example of a relative URI that also references an external target resource "1.jpg" but which resolves against the URI of the package itself.</source>
          <target state="translated">"images/picture1.jpg"는는 외부 대상 리소스 "1.jpg"는 해결 되지만 패키지 자체의 URI에 대해를 참조 하는 상대 URI의 예시입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source><ph id="ph1">`relationshipType`</ph> must be a <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> that is formed according to the <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> Uniform Resource Identifier (URI) Generic Syntax specification.</source>
          <target state="translated"><ph id="ph1">`relationshipType`</ph> 있어야는 <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> 에 따라 형식이 <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> 일반 구문 식별자 URI (Uniform Resource) 사양입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>The following table shows the package-level <ph id="ph1">`relationshipType`</ph> URIs defined by the Open Packaging Conventions (OPC) specification.</source>
          <target state="translated">다음 표에서 패키지 수준 <ph id="ph1">`relationshipType`</ph> 열기 패키징 규칙 (OPC) 사양에 정의 된 Uri입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Package-level Relationship</source>
          <target state="translated">패키지 수준 관계</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Relationship Type URI</source>
          <target state="translated">관계 유형 URI</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Core Properties</source>
          <target state="translated">핵심 속성</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> data/core-properties</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> 데이터/핵심 속성</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Digital Signature</source>
          <target state="translated">디지털 서명</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-signature/signature</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-서명/서명</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Digital Signature Certificate</source>
          <target state="translated">디지털 서명 인증서</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-signature/certificate</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-서명/인증서</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Digital Signature Origin</source>
          <target state="translated">디지털 서명 원본</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-signature/origin</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-서명/원본</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>Thumbnail</source>
          <target state="translated">미리 보기</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> data/thumbnail</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> 데이터/미리 보기</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>For more information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">패키지 및 패키지 관계에 대 한 자세한 내용은에서 다운로드할 수 있는 열린 패키징 규칙 (OPC) 사양의 섹션 1.3을 참조 하십시오. <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>The following example illustrates how to use <ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A&gt;</ph> to create a <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> between a <ph id="ph3">&lt;xref:System.IO.Packaging.Package&gt;</ph> and a root document part.</source>
          <target state="translated">다음 예제를 사용 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A&gt;</ph> 만들려는 <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> 간에 <ph id="ph3">&lt;xref:System.IO.Packaging.Package&gt;</ph> 와 문서 루트 파트.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">전체 샘플을 참조 하십시오. <bpt id="p1">[</bpt>패키지 작성 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source><ph id="ph1">&lt;paramref name="targetUri" /&gt;</ph> or <ph id="ph2">&lt;paramref name="relationshipType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetUri" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="relationshipType" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="targetUri" /&gt;</ph> part is a <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackageRelationship" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="targetMode" /&gt;</ph> is <ph id="ph4">&lt;see cref="F:System.IO.Packaging.TargetMode.Internal" /&gt;</ph> and <ph id="ph5">&lt;paramref name="targetUri" /&gt;</ph> is an absolute URI.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetUri" /&gt;</ph> 파트가 <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackageRelationship" /&gt;</ph>이거나 <ph id="ph3">&lt;paramref name="targetMode" /&gt;</ph>가 <ph id="ph4">&lt;see cref="F:System.IO.Packaging.TargetMode.Internal" /&gt;</ph>이고 <ph id="ph5">&lt;paramref name="targetUri" /&gt;</ph>가 절대 URI인 경우</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>The value for <ph id="ph1">&lt;paramref name="targetMode" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetMode" /&gt;</ph>의 값이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">패키지가 열려 있지 않은 경우(<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>가 호출된 경우)</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
          <source>The package is read-only.</source>
          <target state="translated">패키지가 읽기 전용인 경우</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> of the target part.</source>
          <target state="translated">대상 파트의 <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Indicates if the target part is <ph id="ph1">&lt;see cref="F:System.IO.Packaging.TargetMode.Internal" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.IO.Packaging.TargetMode.External" /&gt;</ph> to the package.</source>
          <target state="translated">대상 파트가 패키지에 <ph id="ph1">&lt;see cref="F:System.IO.Packaging.TargetMode.Internal" /&gt;</ph>인지 또는 <ph id="ph2">&lt;see cref="F:System.IO.Packaging.TargetMode.External" /&gt;</ph>인지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>A URI that uniquely defines the role of the relationship.</source>
          <target state="translated">관계의 역할을 고유하게 정의하는 URI입니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>A unique XML identifier.</source>
          <target state="translated">고유 XML 식별자입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Creates a package-level relationship to a part with a given URI, target mode, relationship type, and <ph id="ph1">[!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)]</ph>.</source>
          <target state="translated">지정된 URI, 대상 모드, 관계 형식 및 <ph id="ph1">[!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)]</ph>를 가진 파트에 대한 패키지 수준 관계를 만듭니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The package-level relationship to the specified part.</source>
          <target state="translated">지정된 파트에 대한 패키지 수준 관계입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>A package-level relationship defines an association between the package and an associated target part or resource.</source>
          <target state="translated">패키지 수준 관계 패키지와 연결 된 대상 파트 또는 리소스 간의 연결을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>A package-level relationship can be one of two forms.</source>
          <target state="translated">패키지 수준 관계는 다음 두 형식 중 하나일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to a target part in the package.</source>
          <target state="translated">사이 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 대상 부분 패키지에 있습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to a target resource outside the package.</source>
          <target state="translated">사이 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 패키지 외부의 대상 리소스입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>In a package-relationship the package is considered the "owner" of the relationship.</source>
          <target state="translated">패키지 관계 패키지 관계의 "소유자"로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>When the package is deleted, all the relationships owned by the package are also deleted.</source>
          <target state="translated">패키지를 삭제 하는 경우 패키지를 소유한 모든 관계도 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A&gt;</ph> does not physically change the target part or resource in any way.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A&gt;</ph> 물리적으로 바뀌지 않습니다 대상 파트 또는 어떤 방식으로든에서 리소스.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The target of a relationship cannot be another relationship.</source>
          <target state="translated">관계의 대상 다른 관계를 지정할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source><ph id="ph1">`id`</ph> must be a valid XML identifier.</source>
          <target state="translated"><ph id="ph1">`id`</ph> 유효한 XML 식별자 여야 합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The <ph id="ph1">`id`</ph> type is xsd:ID and must follow the naming conventions prescribed in the XML Schema Part 2: Datatypes specification (see <bpt id="p1">[</bpt><ph id="ph2">http://www.w3.org/TR/xmlschema-2/#ID</ph><ept id="p1">](http://www.w3.org/TR/xmlschema-2/)</ept>).</source>
          <target state="translated"><ph id="ph1">`id`</ph> 형식은 xsd: id 이며 XML 스키마 2 부에에서 설명 된 명명 규칙을 따라야: 데이터 형식 지정 (참조 <bpt id="p1">[</bpt> <ph id="ph2">http://www.w3.org/TR/xmlschema-2/#ID</ph> <ept id="p1">](http://www.w3.org/TR/xmlschema-2/)</ept>).</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>If <ph id="ph1">`id`</ph> is specified as <ph id="ph2">`null`</ph> a unique ID will be automatically generated.</source>
          <target state="translated">경우 <ph id="ph1">`id`</ph> 로 지정 된 <ph id="ph2">`null`</ph> 고유 ID를 자동으로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>An <ph id="ph1">`id`</ph> specified by an empty string is not valid.</source>
          <target state="translated"><ph id="ph1">`id`</ph> 빈으로 지정 된 문자열이 잘못 되었습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>If <ph id="ph1">`targetMode`</ph> is specified as <ph id="ph2">&lt;xref:System.IO.Packaging.TargetMode.Internal&gt;</ph>, <ph id="ph3">`targetUri`</ph> must be a relative URI that is formed according to the <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> Uniform Resource Identifier (URI) Generic Syntax specification.</source>
          <target state="translated">경우 <ph id="ph1">`targetMode`</ph> 로 지정 된 <ph id="ph2">&lt;xref:System.IO.Packaging.TargetMode.Internal&gt;</ph>, <ph id="ph3">`targetUri`</ph> 에 따라 구성 되는 상대 URI 이어야 합니다는 <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> 일반 구문 식별자 URI (Uniform Resource) 사양입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The internal relative URI can be either an absolute path that starts with a forward slash ("/") character such as "/page1.xaml" or "/images/picture4.jpg", or a relative path such as "../imagespicture1.jpg" that resolves against the package root ("/") as the base URI.</source>
          <target state="translated">내부 상대 URI 수는 절대 경로일 수로 시작 하는 슬래시 ("/") 문자와 같은 "/ page1.xaml" 또는 "/ images/picture4.jpg", 또는 상대 경로와 같은 "... / imagespicture1.jpg "패키지 루트에 대해 ("/ ")로 기본 URI를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>If <ph id="ph1">`targetMode`</ph> is specified as <ph id="ph2">&lt;xref:System.IO.Packaging.TargetMode.External&gt;</ph>, <ph id="ph3">`targetUri`</ph> can be either an absolute or relative URI formed according to the <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> Uniform Resource Identifier (URI) Generic Syntax specification.</source>
          <target state="translated">경우 <ph id="ph1">`targetMode`</ph> 로 지정 된 <ph id="ph2">&lt;xref:System.IO.Packaging.TargetMode.External&gt;</ph>, <ph id="ph3">`targetUri`</ph> 에 따라 만든 상대 URI 또는 절대 중 하나가 될 수 있습니다는 <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> 일반 구문 식별자 URI (Uniform Resource) 사양입니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>"<ph id="ph1">http://www.microsoft.com/page2.xml</ph>" is an example of an absolute URI that references an external target resource "page2.xml".</source>
          <target state="translated">"<ph id="ph1">http://www.microsoft.com/page2.xml</ph>"는 대상 외부 리소스 "page2.xml"를 참조 하는 절대 URI의 예시입니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>"images/picture1.jpg" is an example of a relative URI that also references an external target resource "1.jpg" but which resolves against the URI of the package itself.</source>
          <target state="translated">"images/picture1.jpg"는는 외부 대상 리소스 "1.jpg"는 해결 되지만 패키지 자체의 URI에 대해를 참조 하는 상대 URI의 예시입니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source><ph id="ph1">`relationshipType`</ph> must be a URI that is formed according to the <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> Uniform Resource Identifier (URI) Generic Syntax specification.</source>
          <target state="translated"><ph id="ph1">`relationshipType`</ph> 에 따라 구성 되는 URI 이어야 합니다는 <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> 일반 구문 식별자 URI (Uniform Resource) 사양입니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The following table shows the package-level <ph id="ph1">`relationshipType`</ph> URIs defined by the Open Packaging Conventions (OPC) specification.</source>
          <target state="translated">다음 표에서 패키지 수준 <ph id="ph1">`relationshipType`</ph> 열기 패키징 규칙 (OPC) 사양에 정의 된 Uri입니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Package-level Relationship</source>
          <target state="translated">패키지 수준 관계</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Relationship Type URI</source>
          <target state="translated">관계 유형 URI</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Core Properties</source>
          <target state="translated">핵심 속성</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> data/core-properties</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> 데이터/핵심 속성</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Digital Signature</source>
          <target state="translated">디지털 서명</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-signature/signature</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-서명/서명</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Digital Signature Certificate</source>
          <target state="translated">디지털 서명 인증서</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-signature/certificate</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-서명/인증서</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Digital Signature Origin</source>
          <target state="translated">디지털 서명 원본</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-signature/origin</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-서명/원본</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>Thumbnail</source>
          <target state="translated">미리 보기</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> data/thumbnail</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> 데이터/미리 보기</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">패키지 및 패키지 관계에 대 한 자세한 내용은에서 다운로드할 수 있는 열린 패키징 규칙 (OPC) 사양의 섹션 1.3을 참조 하십시오. <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The following example illustrates how to use <ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A&gt;</ph> to create a <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> between a <ph id="ph3">&lt;xref:System.IO.Packaging.Package&gt;</ph> and a root document part.</source>
          <target state="translated">다음 예제를 사용 하는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.CreateRelationship%2A&gt;</ph> 만들려는 <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> 간에 <ph id="ph3">&lt;xref:System.IO.Packaging.Package&gt;</ph> 와 문서 루트 파트.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">전체 샘플을 참조 하십시오. <bpt id="p1">[</bpt>패키지 작성 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="targetUri" /&gt;</ph> or <ph id="ph2">&lt;paramref name="relationshipType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetUri" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="relationshipType" /&gt;</ph>가 <ph id="ph3">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="targetUri" /&gt;</ph> part is a <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackageRelationship" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="targetMode" /&gt;</ph> is <ph id="ph4">&lt;see cref="F:System.IO.Packaging.TargetMode.Internal" /&gt;</ph> and <ph id="ph5">&lt;paramref name="targetUri" /&gt;</ph> is an absolute URI.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetUri" /&gt;</ph> 파트가 <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackageRelationship" /&gt;</ph>이거나 <ph id="ph3">&lt;paramref name="targetMode" /&gt;</ph>가 <ph id="ph4">&lt;see cref="F:System.IO.Packaging.TargetMode.Internal" /&gt;</ph>이고 <ph id="ph5">&lt;paramref name="targetUri" /&gt;</ph>가 절대 URI인 경우</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The value for <ph id="ph1">&lt;paramref name="targetMode" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetMode" /&gt;</ph>의 값이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">패키지가 열려 있지 않은 경우(<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>가 호출된 경우)</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source>The package is read-only.</source>
          <target state="translated">패키지가 읽기 전용인 경우</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="id" /&gt;</ph> is not a valid XML identifier; or a part with the specified <ph id="ph2">&lt;paramref name="id" /&gt;</ph> already occurs in the package.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph>가 올바른 XML 식별자가 아니거나 지정된 <ph id="ph2">&lt;paramref name="id" /&gt;</ph>의 파트가 이미 패키지에 있는 경우</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> of the part to delete.</source>
          <target state="translated">삭제할 파트의 <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>입니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source>Deletes a part with a given URI from the package.</source>
          <target state="translated">패키지에서 지정된 URI의 파트를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source><ph id="ph1">`partUri`</ph> must be a relative URI that consists of an absolute path which starts with a forward slash ("/") character.</source>
          <target state="translated"><ph id="ph1">`partUri`</ph> 슬래시 ("/") 문자로 시작 되는 절대 경로로 구성 하는 상대 URI 여야 합니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source>The absolute path is relative to the package root and is formed according to the <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> Uniform Resource Identifier (URI) Generic Syntax specification.</source>
          <target state="translated">절대 경로 패키지 루트에 상대적인 및에 따라 형성 되는 <bpt id="p1">[</bpt>RFC 3986<ept id="p1">](http://tools.ietf.org/html/rfc3986)</ept> 일반 구문 식별자 URI (Uniform Resource) 사양입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source>"/page1.xaml" and "/images/picture4.jpg" are examples of valid part URIs.</source>
          <target state="translated">"/ page1.xaml" 및 "/ images/picture4.jpg"은 유효한 파트 Uri의 예입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source>No exception is raised if a part with the specified <ph id="ph1">`partUri`</ph> is not in the package.</source>
          <target state="translated">예외가 발생 하는 경우 지정 된 일부 <ph id="ph1">`partUri`</ph> 는 패키지에 없습니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source>(You can use the <ph id="ph1">&lt;xref:System.IO.Packaging.Package.PartExists%2A&gt;</ph> method to determine whether a part with a specified <ph id="ph2">`partUri`</ph> is in the package.)</source>
          <target state="translated">(사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.PartExists%2A&gt;</ph> 여부를 지정 된 부분을 확인할 수 있는 방법은 <ph id="ph2">`partUri`</ph> 패키지에 있습니다.)</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">자세한 내용은에서 다운로드할 수 열려 패키징 규칙 (OPC) 사양을 참조 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph>는 유효한 <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>가 아닙니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">패키지가 열려 있지 않은 경우(<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>가 호출된 경우)</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source>The package is read-only.</source>
          <target state="translated">패키지가 읽기 전용인 경우</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
          <source><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /&gt;</ph> internally calls the derived class's <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /&gt;</ph> method to actually delete the part based on the physical format implemented in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /&gt;</ph> 파생된 클래스의 내부적으로 호출 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /&gt;</ph> 파생된 클래스에서 구현 된 실제 형식에 따라 실제로 파트를 삭제 하는 방법을 합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackagePart.Uri" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> to delete.</source>
          <target state="translated">삭제할 <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackagePart.Uri" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
          <source>When overridden in a derived class, deletes a part with a given URI.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 지정된 URI의 파트를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
          <source>By default, a <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> derived class implementation of the abstract <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> class is provided and used.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 추상 클래스 구현을 파생 <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> 클래스에 제공 되 고 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
          <source>In the default operation, <ph id="ph1">&lt;xref:System.IO.Packaging.Package.DeletePart%2A&gt;</ph> internally calls <ph id="ph2">&lt;xref:System.IO.Packaging.Package.DeletePartCore%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> class to perform the actual delete operation based on the physical format implemented in the derived class.</source>
          <target state="translated">기본 동작에서 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.DeletePart%2A&gt;</ph> 내부적으로 호출 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.DeletePartCore%2A&gt;</ph> 의 <ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 실제 수행 하도록 클래스 파생된 클래스에서 구현 된 실제 형식에 따라 작업을 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
          <source>For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">모델 패키지 및 패키지 파트에 대 한 자세한 내용은 참조에서 다운로드할 수 있는 열린 패키징 규칙 (OPC) 사양의 Chapter 1 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
          <source>The derived class <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /&gt;</ph> implementation is called by the <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /&gt;</ph> method to the specified part based on the physical format implemented in the derived class.</source>
          <target state="translated">파생된 클래스 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /&gt;</ph> 의해 호출 됩니다는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /&gt;</ph> 파생된 클래스에서 구현 된 실제 형식에 따라 메서드를 지정된 된 부분입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
          <source>The derived <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /&gt;</ph> implementation should make no assumptions about the order or operations performed by the <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /&gt;</ph> method that calls it.</source>
          <target state="translated">파생 된 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)" /&gt;</ph> 구현을 수행 하는 작업이 나 순서에 대해 어떠한가 정도 하지 확인 해야는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.DeletePart(System.Uri)" /&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackageRelationship.Id" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackageRelationship" /&gt;</ph> to delete.</source>
          <target state="translated">삭제할 <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackageRelationship.Id" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackageRelationship" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>Deletes a package-level relationship.</source>
          <target state="translated">패키지 수준 관계를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>A package-level relationship defines an association between the package and an associated target part or resource.</source>
          <target state="translated">패키지 수준 관계 패키지와 연결 된 대상 파트 또는 리소스 간의 연결을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>A package-level relationship can be one of two forms.</source>
          <target state="translated">패키지 수준 관계는 다음 두 형식 중 하나일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to a target part in the package.</source>
          <target state="translated">사이 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 대상 부분 패키지에 있습니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to a target resource outside the package.</source>
          <target state="translated">사이 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 패키지 외부의 대상 리소스입니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>In a package-relationship the package is considered the "owner" of the relationship.</source>
          <target state="translated">패키지 관계 패키지 관계의 "소유자"로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>When the package is deleted, all the relationships owned by the package are also deleted.</source>
          <target state="translated">패키지를 삭제 하는 경우 패키지를 소유한 모든 관계도 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>No exception is raised if a relationship with the specified <ph id="ph1">`id`</ph> is not in the package.</source>
          <target state="translated">예외가 발생 하는 경우 지정 된 관계 <ph id="ph1">`id`</ph> 는 패키지에 없습니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.DeleteRelationship%2A&gt;</ph> does not physically change the target part in any way.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.DeleteRelationship%2A&gt;</ph> 실제로 어떤 방식으로든에서 대상 파트를 변경 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>For more information about package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">패키지 관계에 대 한 자세한 내용은에서 다운로드할 수 있는 열린 패키징 규칙 (OPC) 사양의 섹션 1.3을 참조 하십시오. <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source><ph id="ph1">&lt;paramref name="id" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">패키지가 열려 있지 않은 경우(<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>가 호출된 경우)</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source>The package is read-only.</source>
          <target state="translated">패키지가 읽기 전용인 경우</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
          <source><ph id="ph1">&lt;paramref name="id" /&gt;</ph> is not a valid XML identifier.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph>가 올바른 XML 식별자가 아닌 경우</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
          <source>Flushes and saves the content of all parts and relationships, closes the package, and releases all resources.</source>
          <target state="translated">모든 파트 및 관계의 콘텐츠를 플러시 및 저장하고, 패키지를 닫고, 모든 리소스를 해제합니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
          <source>To make sure that all changes are correctly saved, <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> also finalizes, flushes, and closes all parts and relationships that are contained in the package.</source>
          <target state="translated">모든 변경 내용을 올바르게 저장 되 고 있는지 확인 하려면 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> 도 종료, 플러시, 및 모든 파트 및 패키지에 포함 된 관계를 닫습니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
          <source>For the <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> class, <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> perform the same operation - there is no reason to call <ph id="ph4">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> if you call <ph id="ph5">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph>, or vice-versa.</source>
          <target state="translated">에 대 한는 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 클래스 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> 동일한 작업을 수행-호출 하는 이유가 없습니다 <ph id="ph4">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> 호출 하는 경우 <ph id="ph5">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph>, 또는 그 반대입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> internally call <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> 내부적으로 호출 <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
          <source>Derived classes that allocate and manage non-memory resources should override this method to release resources when <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> is called.</source>
          <target state="translated">할당 및 비 메모리 리소스를 관리 하는 파생된 클래스는 리소스를 해제 하려면이 메서드를 재정의 하는 경우 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> 라고 합니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
          <source>Derived-class overrides should also call <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> and the base-class <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> method to make sure that base-class cleanup is always performed.</source>
          <target state="translated">파생 클래스 재정의 호출 또한 해야 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> 및 기본 클래스 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> 메서드는 항상 기본 클래스 정리를 수행 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
          <source>The <ph id="ph1">`using`</ph> statement (different from the <ph id="ph2">`using`</ph> namespace directive) is the recommended way to <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> a package.</source>
          <target state="translated"><ph id="ph1">`using`</ph> 문 (다른는 <ph id="ph2">`using`</ph> 네임 스페이스 지시문) 하는 권장 방법은 <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> 패키지 합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
          <source><bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept> shows how to close and dispose a package by using the <ph id="ph1">`using`</ph> statement.</source>
          <target state="translated"><bpt id="p1">[</bpt>패키지 작성 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept> 닫고를 사용 하 여 패키지를 삭제 하는 방법을 보여 줍니다는 <ph id="ph1">`using`</ph> 문.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.Package.FileOpenAccess">
          <source>Gets the file access setting for the package.</source>
          <target state="translated">패키지의 파일 액세스 설정을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.Package.FileOpenAccess">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> values: <ph id="ph2">&lt;see cref="F:System.IO.FileAccess.Read" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IO.FileAccess.Write" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.IO.FileAccess.ReadWrite" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph>의 <ph id="ph2">&lt;see cref="F:System.IO.FileAccess.Read" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IO.FileAccess.Write" /&gt;</ph>, 또는 <ph id="ph4">&lt;see cref="F:System.IO.FileAccess.ReadWrite" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.Package.FileOpenAccess">
          <source>The <ph id="ph1">&lt;xref:System.IO.Packaging.Package.FileOpenAccess%2A&gt;</ph> property has no default value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.FileOpenAccess%2A&gt;</ph> 속성에는 기본값이 없습니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.Package.FileOpenAccess">
          <source>The file access setting is specified in the <ph id="ph1">&lt;xref:System.IO.Packaging.Package.%23ctor%2A&gt;</ph> constructor call when you create a new package, or in the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> call when you open an existing package.</source>
          <target state="translated">파일 액세스 설정에 지정 된는 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.%23ctor%2A&gt;</ph> 생성자를 새 패키지를 만들 때 또는 호출의 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> 기존 패키지를 열 때 호출 합니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.Package.FileOpenAccess">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">패키지가 열려 있지 않은 경우(<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>가 호출된 경우)</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Flush">
          <source>Saves the contents of all parts and relationships that are contained in the package.</source>
          <target state="translated">패키지에 포함된 모든 파트 및 관계의 콘텐츠를 저장합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Flush">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> internally calls the derived class's <ph id="ph2">&lt;xref:System.IO.Packaging.Package.FlushCore%2A&gt;</ph> implemetation to perform the actual format-specific flush operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> 파생된 클래스의 내부적으로 호출 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.FlushCore%2A&gt;</ph> 실제 형식에 따른 플러시 작업을 수행 하려면 구현 합니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Flush">
          <source>The derived class's <ph id="ph1">&lt;xref:System.IO.Packaging.Package.FlushCore%2A&gt;</ph> method is responsible for actually saving the part and relationship content to the specific physical derived class implementation.</source>
          <target state="translated">파생된 클래스의 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.FlushCore%2A&gt;</ph> 메서드는 실제로 특정 파생된 클래스에서 물리적 구현에 파트 및 관계 콘텐츠를 저장 해야 합니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Flush">
          <source>By default, a <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> derived implementation of the abstract <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> base class is provided and used.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 추상의 구현을 파생 <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> 기본 클래스에 제공 되 고 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Flush">
          <source>In the default operation, <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> internally calls <ph id="ph2">&lt;xref:System.IO.Packaging.Package.FlushCore%2A&gt;</ph> to save the parts and relationships in a ZIP file package.</source>
          <target state="translated">기본 동작에서 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> 내부적으로 호출 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.FlushCore%2A&gt;</ph> ZIP 파일 패키지에 파트 및 관계를 저장 합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Flush">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> is called automatically by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> 자동으로 호출 되는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Flush">
          <source>When <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> is called you do not have to call <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> separately.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Close%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Dispose%2A&gt;</ph> 라고 호출할 필요가 없습니다 <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> 별도로 합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Flush">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">패키지가 열려 있지 않은 경우(<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>가 호출된 경우)</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Flush">
          <source>The package is read-only and cannot be modified.</source>
          <target state="translated">패키지가 읽기 전용이며 수정할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Flush">
          <source><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Flush" /&gt;</ph> internally calls the derived class's <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.FlushCore" /&gt;</ph> method to actually flush the part based on the physical format implemented in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Flush" /&gt;</ph> 파생된 클래스의 내부적으로 호출 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.FlushCore" /&gt;</ph> 파생된 클래스에서 구현 된 실제 형식에 따라 방법을 실제로 파트를 플러시합니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.FlushCore">
          <source>When overridden in a derived class, saves the content of all parts and relationships to the derived class store.</source>
          <target state="translated">파생 클래스에 재정의되는 경우 모든 파트 및 관계의 콘텐츠를 파생 클래스 저장소에 저장합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.FlushCore">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.FlushCore%2A&gt;</ph> is called by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> method to perform the actual flush operation based on the physical format implemented in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.FlushCore%2A&gt;</ph> 에 의해 호출 됩니다는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> 파생된 클래스에서 구현 된 실제 형식에 따라 실제 플러시 작업을 수행 하는 방법을 합니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.FlushCore">
          <source>The derived <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.FlushCore" /&gt;</ph> implementation should not make any assumptions about the order or operations performed by the <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Flush" /&gt;</ph> method that calls it.</source>
          <target state="translated">파생 된 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.FlushCore" /&gt;</ph> 구현에서 수행 하는 작업이 나 순서에 대해 어떠한가 정도 하지 않아야는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Flush" /&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> of the part to return.</source>
          <target state="translated">반환할 파트의 <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>Returns the part with a given URI.</source>
          <target state="translated">지정된 URI의 파트를 반환합니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>The part with the specified <ph id="ph1">&lt;paramref name="partUri" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="partUri" /&gt;</ph>의 파트입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown if a part with the specified <ph id="ph2">`partUri`</ph> does not exist.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> 없으면 지정 된 일부 예외가 <ph id="ph2">`partUri`</ph> 존재 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Packaging.Package.PartExists%2A&gt;</ph> method can be used to determine whether <ph id="ph2">`partUri`</ph> references an existing part.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.PartExists%2A&gt;</ph> 확인 하려면 메서드를 사용할 수 있는지 여부를 <ph id="ph2">`partUri`</ph> 기존 부분을 참조 합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>By default, a <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> derived implementation of the abstract <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> base class is provided and used.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 추상의 구현을 파생 <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> 기본 클래스에 제공 되 고 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>In the default operation, <ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetPart%2A&gt;</ph> internally calls <ph id="ph2">&lt;xref:System.IO.Packaging.Package.GetPartCore%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> class to return a requested part from a ZIP file.</source>
          <target state="translated">기본 동작에서 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetPart%2A&gt;</ph> 내부적으로 호출 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.GetPartCore%2A&gt;</ph> 의 <ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 클래스 ZIP 파일에서 요청 된 부분을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">자세한 내용은에서 다운로드할 수 열려 패키징 규칙 (OPC) 사양을 참조 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>The following example shows how to locate, retrieve, and read parts that are contained in a package.</source>
          <target state="translated">다음 예제에서는 찾을, 검색 및 패키지에 포함 된 파트를 읽는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Reading a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160034)</ept>.</source>
          <target state="translated">전체 샘플을 참조 하십시오. <bpt id="p1">[</bpt>는 패키지 예제 추가 정보를 읽는<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160034)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph>는 유효한 <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>가 아닙니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>A part with the specified <ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is not in the package.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="partUri" /&gt;</ph>의 파트가 패키지에 없는 경우</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">패키지가 열려 있지 않은 경우(<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>가 호출된 경우)</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source>The package is write-only.</source>
          <target state="translated">패키지가 쓰기 전용인 경우</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPart(System.Uri)">
          <source><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /&gt;</ph> internally calls the derived class <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /&gt;</ph> method to actually flush the part based on the physical format implemented in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /&gt;</ph> 파생된 클래스를 내부적으로 호출 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /&gt;</ph> 파생된 클래스에서 구현 된 실제 형식에 따라 방법을 실제로 파트를 플러시합니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> of the part to retrieve.</source>
          <target state="translated">검색할 파트의 <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>입니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
          <source>When overridden in a derived class, returns the part addressed by a given URI.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 지정된 URI로 확인되는 파트를 반환합니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
          <source>The requested part; or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, if a part with the specified <ph id="ph2">&lt;paramref name="partUri" /&gt;</ph> is not in the package.</source>
          <target state="translated">요청된 파트, 또는 지정된 <ph id="ph2">&lt;paramref name="partUri" /&gt;</ph>의 파트가 패키지에 있지 않은 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
          <source>By default, a <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> derived implementation of the abstract <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> class is provided and used.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 추상의 구현을 파생 <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> 클래스에 제공 되 고 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
          <source>In the default operation, <ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetPart%2A&gt;</ph> internally calls <ph id="ph2">&lt;xref:System.IO.Packaging.Package.GetPartCore%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> class to retrieve a part from a ZIP file.</source>
          <target state="translated">기본 동작에서 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetPart%2A&gt;</ph> 내부적으로 호출 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.GetPartCore%2A&gt;</ph> 의 <ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> ZIP 파일에서 일부를 검색 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
          <source>For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">모델 패키지 및 패키지 파트에 대 한 자세한 내용은 참조에서 다운로드할 수 있는 열린 패키징 규칙 (OPC) 사양의 Chapter 1 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
          <source>The derived class  <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /&gt;</ph> implementation is called by the <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /&gt;</ph> method to access and return the specified part based on the physical format implemented in the derived class.</source>
          <target state="translated">파생된 클래스 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /&gt;</ph> 의해 호출 됩니다는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /&gt;</ph> 파생된 클래스에서 구현 된 실제 형식에 따라 방법을 액세스 하 고 지정된 된 부분을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
          <source>The derived <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /&gt;</ph> implementation should make no assumptions about the order or operations performed by the <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /&gt;</ph> method that calls it.</source>
          <target state="translated">파생 된 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.GetPartCore(System.Uri)" /&gt;</ph> 구현을 수행 하는 작업이 나 순서에 대해 어떠한가 정도 하지 확인 해야는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.GetPart(System.Uri)" /&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetParts">
          <source>Returns a collection of all the parts in the package.</source>
          <target state="translated">패키지에 있는 모든 파트의 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetParts">
          <source>A collection of all the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> elements that are contained in the package.</source>
          <target state="translated">패키지에 포함된 모든 <ph id="ph1">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> 요소의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetParts">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph> returns a collection of all parts that are contained in the package including <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> parts.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph> 포함 하는 패키지에 포함 된 모든 파트의 컬렉션을 반환 <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> 부분입니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetParts">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph> will never return <ph id="ph2">`null`</ph>; however, the returned collection will contain zero elements if the package contains no parts.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph> 반환 하지 것입니다 <ph id="ph2">`null`</ph>있지만 반환된 된 컬렉션 패키지 파트가 없습니다 경우 요소가 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetParts">
          <source>By default, a <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> derived implementation of the abstract <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> base class is provided and used.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 추상의 구현을 파생 <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> 기본 클래스에 제공 되 고 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetParts">
          <source>In the default operation, <ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph> calls the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.GetPartsCore%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> class to return the parts from a ZIP file.</source>
          <target state="translated">기본 동작에서 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph> 호출은 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.GetPartsCore%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> ZIP 파일에서 부분을 반환 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetParts">
          <source>For more information about packages and package parts, see section 1.1 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">패키지 및 패키지 파트에 대 한 자세한 내용은에서 다운로드할 수 있는 열린 패키징 규칙 (OPC) 사양의 섹션 1.1을 참조 하십시오. <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetParts">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph> method to obtain a collection of the parts that are contained in a <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph> 에 포함 된 파트의 컬렉션을 가져옵니다 메서드는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetParts">
          <source>For the complete program source code, see <bpt id="p1">[</bpt>Creating a Package with a Digital Signature Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159966)</ept>.</source>
          <target state="translated">완성 된 프로그램 소스 코드에 대 한 참조 <bpt id="p1">[</bpt>디지털 서명 샘플을 사용 하 여 패키지 만들기<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159966)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetParts">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">패키지가 열려 있지 않은 경우(<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>가 호출된 경우)</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetParts">
          <source>The package is write-only.</source>
          <target state="translated">패키지가 쓰기 전용인 경우</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetParts">
          <source><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.GetParts" /&gt;</ph> internally calls the derived class <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.GetPartsCore" /&gt;</ph> method to actually flush the part based on the physical format implemented in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.GetParts" /&gt;</ph> 파생된 클래스를 내부적으로 호출 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.GetPartsCore" /&gt;</ph> 파생된 클래스에서 구현 된 실제 형식에 따라 방법을 실제로 파트를 플러시합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPartsCore">
          <source>When overridden in a derived class, returns an array of all the parts in the package.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 패키지에 있는 모든 파트의 배열을 반환합니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetPartsCore">
          <source>An array of all the parts that are contained in the package.</source>
          <target state="translated">패키지에 포함된 모든 파트의 배열입니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPartsCore">
          <source>The derived class <ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetPartsCore%2A&gt;</ph> implementation is called by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph> method to access and return the array of parts based on the physical format implemented in the derived class.</source>
          <target state="translated">파생된 클래스 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetPartsCore%2A&gt;</ph> 의해 호출 됩니다는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph> 파생된 클래스에서 구현 된 실제 형식에 따라 방법을 액세스 하 고 파트의 배열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPartsCore">
          <source>By default, a <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> derived implementation of the abstract <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> class is provided and used.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 추상의 구현을 파생 <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> 클래스에 제공 되 고 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPartsCore">
          <source>In the default operation, <ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph> internally calls <ph id="ph2">&lt;xref:System.IO.Packaging.Package.GetPartCore%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> class to retrieve the parts from a ZIP file.</source>
          <target state="translated">기본 동작에서 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetParts%2A&gt;</ph> 내부적으로 호출 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.GetPartCore%2A&gt;</ph> 의 <ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> ZIP 파일에서 부분을 검색 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPartsCore">
          <source>For more information about the package model and package parts, see Chapter 1 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">모델 패키지 및 패키지 파트에 대 한 자세한 내용은 참조에서 다운로드할 수 있는 열린 패키징 규칙 (OPC) 사양의 Chapter 1 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetPartsCore">
          <source>The derived <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.GetPartsCore" /&gt;</ph> implementation should make no assumptions about the order or operations performed by the <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.GetParts" /&gt;</ph> method that calls it.</source>
          <target state="translated">파생 된 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.GetPartsCore" /&gt;</ph> 구현을 수행 하는 작업이 나 순서에 대해 어떠한가 정도 하지 확인 해야는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.GetParts" /&gt;</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackageRelationship.Id" /&gt;</ph> of the relationship to return.</source>
          <target state="translated">반환할 관계의 <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackageRelationship.Id" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source>Returns the package-level relationship with a given identifier.</source>
          <target state="translated">지정된 식별자를 가진 패키지 수준 관계를 반환합니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source>The package-level relationship with the specified <ph id="ph1">&lt;paramref name="id" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="id" /&gt;</ph>의 패키지 수준 관계입니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source><ph id="ph1">`id`</ph> must be a valid XML identifier.</source>
          <target state="translated"><ph id="ph1">`id`</ph> 유효한 XML 식별자 여야 합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source>The <ph id="ph1">`id`</ph> type is xsd:ID and must follow the naming conventions prescribed in the XML Schema Part 2: Datatypes specification (see <bpt id="p1">[</bpt><ph id="ph2">http://www.w3.org/TR/xmlschema-2/#ID</ph><ept id="p1">](http://www.w3.org/TR/xmlschema-2/#ID)</ept>).</source>
          <target state="translated"><ph id="ph1">`id`</ph> 형식은 xsd: id 이며 XML 스키마 2 부에에서 설명 된 명명 규칙을 따라야: 데이터 형식 지정 (참조 <bpt id="p1">[</bpt> <ph id="ph2">http://www.w3.org/TR/xmlschema-2/#ID</ph> <ept id="p1">](http://www.w3.org/TR/xmlschema-2/#ID)</ept>).</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source>For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">패키지 및 패키지 관계에 대 한 자세한 내용은에서 다운로드할 수 있는 열린 패키징 규칙 (OPC) 사양의 섹션 1.3을 참조 하십시오. <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source><ph id="ph1">&lt;paramref name="id" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source><ph id="ph1">&lt;paramref name="id" /&gt;</ph> is not a valid XML identifier.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph>가 올바른 XML 식별자가 아닌 경우</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source>A relationship with the specified <ph id="ph1">&lt;paramref name="id" /&gt;</ph> is not in the package.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="id" /&gt;</ph>의 관계가 패키지에 없는 경우</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">패키지가 열려 있지 않은 경우(<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>가 호출된 경우)</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationship(System.String)">
          <source>The package is write-only.</source>
          <target state="translated">패키지가 쓰기 전용인 경우</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>Returns a collection of all the package-level relationships.</source>
          <target state="translated">모든 패키지 수준 관계의 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>A collection of all the package-level relationships that are contained in the package.</source>
          <target state="translated">패키지에 포함된 모든 패키지 수준 관계의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetRelationships%2A&gt;</ph> will never return <ph id="ph2">`null`</ph>; however the returned collection may contain zero elements if the package contains no package-level relationships.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetRelationships%2A&gt;</ph> 반환 하지 것입니다 <ph id="ph2">`null`</ph>; 있지만 반환된 된 컬렉션 패키지에 있는 경우 패키지 수준 관계가 없는 요소가 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>A package-level relationship defines an association between the package and an associated target part or resource.</source>
          <target state="translated">패키지 수준 관계 패키지와 연결 된 대상 파트 또는 리소스 간의 연결을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>A package-level relationship can be one of two forms.</source>
          <target state="translated">패키지 수준 관계는 다음 두 형식 중 하나일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to a target part in the package.</source>
          <target state="translated">사이 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 대상 부분 패키지에 있습니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>Between a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> to a target resource outside the package.</source>
          <target state="translated">사이 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 패키지 외부의 대상 리소스입니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>In a package-relationship the package is considered the "owner" of the relationship.</source>
          <target state="translated">패키지 관계 패키지 관계의 "소유자"로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>When the package is deleted, all the relationships owned by the package are also deleted.</source>
          <target state="translated">패키지를 삭제 하는 경우 패키지를 소유한 모든 관계도 삭제 됩니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>The process of creating or deleting the relationship does not physically alter the target part or resource in any way.</source>
          <target state="translated">대상 파트나 리소스 어떤 방식으로든에서 만들거나 관계 삭제 프로세스 물리적으로 변경 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>For additional information about packaging and package relationships, see section 1.3 of the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">패키지 및 패키지 관계에 대 한 자세한 내용은에서 다운로드할 수 있는 열린 패키징 규칙 (OPC) 사양의 섹션 1.3을 참조 하십시오. <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">패키지가 열려 있지 않은 경우(<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>가 호출된 경우)</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationships">
          <source>The package is write-only.</source>
          <target state="translated">패키지가 쓰기 전용인 경우</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /&gt;</ph> to match and return in the collection.</source>
          <target state="translated">컬렉션에서 일치하고 반환할 <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>Returns a collection of all the package-level relationships that match a given <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /&gt;</ph>에 일치하는 모든 패키지 수준 관계의 컬렉션을 반환합니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>A collection of package-level relationships that match the specified <ph id="ph1">&lt;paramref name="relationshipType" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="relationshipType" /&gt;</ph>에 일치하는 패키지 수준 관계의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetRelationships%2A&gt;</ph> will never return <ph id="ph2">`null`</ph>; however the returned collection may contain zero elements if there are no package-level relationships that match the specified <ph id="ph3">`relationshipType`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.Package.GetRelationships%2A&gt;</ph> 하지만 반환 하지 것입니다 <ph id="ph2">`null`</ph>지정 된 일치 하는 패키지 수준 관계가 없는 경우 반환된 된 컬렉션 요소가 포함 될 수 있습니다; <ph id="ph3">`relationshipType`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>The following table shows the package-level <ph id="ph1">`relationshipType`</ph> URIs defined by the Open Packaging Conventions (OPC) specification.</source>
          <target state="translated">다음 표에서 패키지 수준 <ph id="ph1">`relationshipType`</ph> 열기 패키징 규칙 (OPC) 사양에 정의 된 Uri입니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>Package-level Relationship</source>
          <target state="translated">패키지 수준 관계</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>Relationship Type URI</source>
          <target state="translated">관계 유형 URI</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>Core Properties</source>
          <target state="translated">핵심 속성</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> data/core-properties</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> 데이터/핵심 속성</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>Digital Signature</source>
          <target state="translated">디지털 서명</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-signature/signature</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-서명/서명</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>Digital Signature Certificate</source>
          <target state="translated">디지털 서명 인증서</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-signature/certificate</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-서명/인증서</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>Digital Signature Origin</source>
          <target state="translated">디지털 서명 원본</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-signature/origin</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/digit</ph> al-서명/원본</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>Thumbnail</source>
          <target state="translated">미리 보기</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> data/thumbnail</source>
          <target state="translated"><ph id="ph1">http://schemas.openxmlformats.org/package/2006/relationships/meta</ph> 데이터/미리 보기</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">자세한 내용은에서 다운로드할 수 열려 패키징 규칙 (OPC) 사양을 참조 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>The following example shows how to retrieve the relationships that have been defined for the package.</source>
          <target state="translated">다음 예에서는 패키지에 대해 정의 된 관계를 검색 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Reading a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160034)</ept>.</source>
          <target state="translated">전체 샘플을 참조 하십시오. <bpt id="p1">[</bpt>는 패키지 예제 추가 정보를 읽는<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160034)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source><ph id="ph1">&lt;paramref name="relationshipType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="relationshipType" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source><ph id="ph1">&lt;paramref name="relationshipType" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="relationshipType" /&gt;</ph>이 빈 문자열인 경우</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">패키지가 열려 있지 않은 경우(<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>가 호출된 경우)</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
          <source>The package is write-only.</source>
          <target state="translated">패키지가 쓰기 전용인 경우</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.Package">
          <source>Opens a package.</source>
          <target state="translated">패키지를 엽니다.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> is the default package type that is used by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 기본 형식인 패키지에서 사용 되는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">자세한 내용은에서 다운로드할 수 열려 패키징 규칙 (OPC) 사양을 참조 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> that incorporates <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> elements together with stored data.</source>
          <target state="translated">다음 예제에는 새 만드는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 를 통합 하 <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> 및 <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> 요소에 저장 된 데이터와 함께 합니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.Package">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">전체 샘플을 참조 하십시오. <bpt id="p1">[</bpt>패키지 작성 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
          <source>The IO stream on which to open the package.</source>
          <target state="translated">패키지를 열 IO 스트림입니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
          <source>Opens a package on a given IO stream.</source>
          <target state="translated">지정된 IO 스트림에서 패키지를 엽니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
          <source>The opened package.</source>
          <target state="translated">열린 패키지입니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> is the default package type that is used by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 기본 형식인 패키지에서 사용 되는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">자세한 내용은에서 다운로드할 수 열려 패키징 규칙 (OPC) 사양을 참조 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
          <source>The package to open requires read or read/write permission and the specified <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is write-only; or, the package to open requires write or read/write permission and the specified <ph id="ph2">&lt;paramref name="stream" /&gt;</ph> is read-only.</source>
          <target state="translated">열려는 패키지에 읽기 또는 읽기/쓰기 권한이 필요하고 지정된 <ph id="ph1">&lt;paramref name="stream" /&gt;</ph>이 읽기 전용인 경우 또는 열려는 패키지에 쓰기 또는 읽기/쓰기 권한이 필요하고 지정된 <ph id="ph2">&lt;paramref name="stream" /&gt;</ph>이 읽기 전용인 경우</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String)">
          <source>The path and file name of the package.</source>
          <target state="translated">패키지의 경로 및 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String)">
          <source>Opens a package at a given path and file name.</source>
          <target state="translated">지정된 경로 및 파일 이름에서 패키지를 엽니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String)">
          <source>The opened package.</source>
          <target state="translated">열린 패키지입니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> is the default package type that is used by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 기본 형식인 패키지에서 사용 되는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String)">
          <source>This <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method opens the package with default attributes <ph id="ph2">&lt;xref:System.IO.FileMode.OpenOrCreate&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileAccess.ReadWrite&gt;</ph>, and <ph id="ph4">&lt;xref:System.IO.FileShare.None&gt;</ph> (to specify different attributes use one of the other Open method overloads).</source>
          <target state="translated">이 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> 메서드는 기본 특성을 통해 패키지를 엽니다 <ph id="ph2">&lt;xref:System.IO.FileMode.OpenOrCreate&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileAccess.ReadWrite&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.IO.FileShare.None&gt;</ph> (서로 다른 특성을 사용 하 여 다른 Open 메서드 오버 로드 중 하나를 지정) 하 합니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">자세한 내용은에서 다운로드할 수 열려 패키징 규칙 (OPC) 사양을 참조 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> that incorporates <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> elements together with stored data.</source>
          <target state="translated">다음 예제에는 새 만드는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 를 통합 하 <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> 및 <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> 요소에 저장 된 데이터와 함께 합니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">전체 샘플을 참조 하십시오. <bpt id="p1">[</bpt>패키지 작성 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
          <source>The IO stream on which to open the package.</source>
          <target state="translated">패키지를 열 IO 스트림입니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
          <source>The file mode in which to open the package.</source>
          <target state="translated">패키지를 열 때 사용할 파일 모드입니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
          <source>Opens a package with a given IO stream and file mode.</source>
          <target state="translated">지정된 IO 스트림 및 파일 모드를 사용하여 패키지를 엽니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
          <source>The opened package.</source>
          <target state="translated">열린 패키지입니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> is the default package type that is used by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 기본 형식인 패키지에서 사용 되는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">자세한 내용은에서 다운로드할 수 열려 패키징 규칙 (OPC) 사양을 참조 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
          <source><ph id="ph1">&lt;paramref name="packageMode" /&gt;</ph> value is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="packageMode" /&gt;</ph> 값이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
          <source>The package to open requires read or read/write permission and the specified <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is write-only; or, the package to open requires write or read/write permission and the specified <ph id="ph2">&lt;paramref name="stream" /&gt;</ph> is read-only.</source>
          <target state="translated">열려는 패키지에 읽기 또는 읽기/쓰기 권한이 필요하고 지정된 <ph id="ph1">&lt;paramref name="stream" /&gt;</ph>이 읽기 전용인 경우 또는 열려는 패키지에 쓰기 또는 읽기/쓰기 권한이 필요하고 지정된 <ph id="ph2">&lt;paramref name="stream" /&gt;</ph>이 읽기 전용인 경우</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source>The path and file name of the package.</source>
          <target state="translated">패키지의 경로 및 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source>The file mode in which to open the package.</source>
          <target state="translated">패키지를 열 때 사용할 파일 모드입니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source>Opens a package at a given path using a given file mode.</source>
          <target state="translated">지정된 경로의 패키지를 지정된 파일 모드를 사용하여 엽니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source>The opened package.</source>
          <target state="translated">열린 패키지입니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> is the default package type that is used by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 기본 형식인 패키지에서 사용 되는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source>This <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method opens the package with default attributes <ph id="ph2">&lt;xref:System.IO.FileAccess.ReadWrite&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.FileShare.None&gt;</ph> (to specify different attributes use one of the other Open method overloads).</source>
          <target state="translated">이 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> 메서드는 기본 특성을 통해 패키지를 엽니다 <ph id="ph2">&lt;xref:System.IO.FileAccess.ReadWrite&gt;</ph> 및 <ph id="ph3">&lt;xref:System.IO.FileShare.None&gt;</ph> (서로 다른 특성을 사용 하 여 다른 Open 메서드 오버 로드 중 하나를 지정) 하 합니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">자세한 내용은에서 다운로드할 수 열려 패키징 규칙 (OPC) 사양을 참조 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> that incorporates <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> elements together with stored data.</source>
          <target state="translated">다음 예제에는 새 만드는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 를 통합 하 <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> 및 <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> 요소에 저장 된 데이터와 함께 합니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">전체 샘플을 참조 하십시오. <bpt id="p1">[</bpt>패키지 작성 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
          <source>Value for <ph id="ph1">&lt;paramref name="packageMode" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="packageMode" /&gt;</ph>의 값이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
          <source>The IO stream on which to open the package.</source>
          <target state="translated">패키지를 열 IO 스트림입니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
          <source>The file mode in which to open the package.</source>
          <target state="translated">패키지를 열 때 사용할 파일 모드입니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
          <source>The file access in which to open the package.</source>
          <target state="translated">패키지를 열 때 사용할 파일 액세스 권한입니다.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
          <source>Opens a package with a given IO stream, file mode, and file access setting.</source>
          <target state="translated">지정된 IO 스트림, 파일 모드 및 파일 액세스 설정을 사용하여 패키지를 엽니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
          <source>The opened package.</source>
          <target state="translated">열린 패키지입니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> is the default package type that is used by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 기본 형식인 패키지에서 사용 되는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">자세한 내용은에서 다운로드할 수 열려 패키징 규칙 (OPC) 사양을 참조 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
          <source>The value for <ph id="ph1">&lt;paramref name="packageMode" /&gt;</ph> or <ph id="ph2">&lt;paramref name="packageAccess" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="packageMode" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="packageAccess" /&gt;</ph>의 값이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
          <source>The package to open requires read or read/write permission and the specified <ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is write-only; or the package to open requires write or read/write permission and the specified <ph id="ph2">&lt;paramref name="stream" /&gt;</ph> is read-only.</source>
          <target state="translated">열려는 패키지에 읽기 또는 읽기/쓰기 권한이 필요하고 지정된 <ph id="ph1">&lt;paramref name="stream" /&gt;</ph>이 읽기 전용인 경우 또는 열려는 패키지에 쓰기 또는 읽기/쓰기 권한이 필요하고 지정된 <ph id="ph2">&lt;paramref name="stream" /&gt;</ph>이 읽기 전용인 경우</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The path and file name of the package.</source>
          <target state="translated">패키지의 경로 및 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The file mode in which to open the package.</source>
          <target state="translated">패키지를 열 때 사용할 파일 모드입니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The file access in which to open the package.</source>
          <target state="translated">패키지를 열 때 사용할 파일 액세스 권한입니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>Opens a package at a given path using a given file mode and file access setting.</source>
          <target state="translated">지정된 경로의 패키지를 지정된 파일 모드 및 파일 액세스 설정을 사용하여 엽니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The opened package.</source>
          <target state="translated">열린 패키지입니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> is the default package type that is used by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 기본 형식인 패키지에서 사용 되는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>This <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method opens the package with a default <ph id="ph2">&lt;xref:System.IO.FileShare.None&gt;</ph> attribute (to specify a different attribute use the <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method overload).</source>
          <target state="translated">이 <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> 메서드는 기본 패키지를 엽니다 <ph id="ph2">&lt;xref:System.IO.FileShare.None&gt;</ph> 특성 (서로 다른 특성 사용법을 지정 하는 <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> 메서드 오버 로드).</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">자세한 내용은에서 다운로드할 수 열려 패키징 규칙 (OPC) 사양을 참조 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The following example shows how to open and read a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> that contains <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> elements together with stored data.</source>
          <target state="translated">다음 예제에서는 열고 읽기 위해는 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 포함 된 <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> 및 <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> 요소에 저장 된 데이터와 함께 합니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Reading a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160034)</ept>.</source>
          <target state="translated">전체 샘플을 참조 하십시오. <bpt id="p1">[</bpt>는 패키지 예제 추가 정보를 읽는<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160034)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>Value for <ph id="ph1">&lt;paramref name="packageMode" /&gt;</ph> or <ph id="ph2">&lt;paramref name="packageAccess" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="packageMode" /&gt;</ph> 또는 <ph id="ph2">&lt;paramref name="packageAccess" /&gt;</ph>의 값이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The path and file name of the package.</source>
          <target state="translated">패키지의 경로 및 파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The file mode in which to open the package.</source>
          <target state="translated">패키지를 열 때 사용할 파일 모드입니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The file access in which to open the package.</source>
          <target state="translated">패키지를 열 때 사용할 파일 액세스 권한입니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The file sharing mode in which to open the package.</source>
          <target state="translated">패키지를 열 때 사용할 파일 공유 모드입니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>Opens a package at a given path using a given file mode, file access, and file share setting.</source>
          <target state="translated">지정된 경로의 패키지를 지정된 파일 모드, 파일 액세스 및 파일 공유 설정을 사용하여 엽니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The opened package.</source>
          <target state="translated">열린 패키지입니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> is the default package type that is used by the <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph> 기본 형식인 패키지에서 사용 되는 <ph id="ph2">&lt;xref:System.IO.Packaging.Package.Open%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">자세한 내용은에서 다운로드할 수 열려 패키징 규칙 (OPC) 사양을 참조 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The following example shows how to create a new <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> that incorporates <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> elements together with stored data.</source>
          <target state="translated">다음 예제에는 새 만드는 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> 를 통합 하 <ph id="ph2">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> 및 <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> 요소에 저장 된 데이터와 함께 합니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Writing a Package Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>.</source>
          <target state="translated">전체 샘플을 참조 하십시오. <bpt id="p1">[</bpt>패키지 작성 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=160055)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The value for <ph id="ph1">&lt;paramref name="packageMode" /&gt;</ph>, <ph id="ph2">&lt;paramref name="packageAccess" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="packageShare" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="packageMode" /&gt;</ph>, <ph id="ph2">&lt;paramref name="packageAccess" /&gt;</ph> 또는 <ph id="ph3">&lt;paramref name="packageShare" /&gt;</ph>의 값이 올바르지 않은 경우</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.Package.PackageProperties">
          <source>Gets the core properties of the package.</source>
          <target state="translated">패키지의 핵심 속성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.Package.PackageProperties">
          <source>The core properties of the package.</source>
          <target state="translated">패키지의 핵심 속성입니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.Package.PackageProperties">
          <source>For additional information about core package properties, see section 3.1 in the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">코어 패키지 속성에 대 한 자세한 내용은 참조에서 다운로드할 수 있는 열린 패키징 규칙 (OPC) 사양에 섹션 3.1 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.Package.PackageProperties">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">패키지가 열려 있지 않은 경우(<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>가 호출된 경우)</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.PartExists(System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> of the part to check for.</source>
          <target state="translated">확인할 파트의 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.PartExists(System.Uri)">
          <source>Indicates whether a part with a given URI is in the package.</source>
          <target state="translated">지정된 URI의 파트가 패키지에 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.PartExists(System.Uri)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a part with the specified <ph id="ph2">&lt;paramref name="partUri" /&gt;</ph> is in the package; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;paramref name="partUri" /&gt;</ph>의 파트가 패키지에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.PartExists(System.Uri)">
          <source>The <ph id="ph1">`partUri`</ph> should begin with a forward-slash character "/" and be absolute from the root of the package.</source>
          <target state="translated"><ph id="ph1">`partUri`</ph> 슬래시 문자로 시작 해야 "/" 및 패키지의 루트에서 절대 경로 여야 합니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.PartExists(System.Uri)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">자세한 내용은에서 다운로드할 수 열려 패키징 규칙 (OPC) 사양을 참조 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.PartExists(System.Uri)">
          <source><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.PartExists(System.Uri)">
          <source><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="partUri" /&gt;</ph>는 유효한 <ph id="ph2">&lt;see cref="T:System.IO.Packaging.PackagePart" /&gt;</ph> <ph id="ph3">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>가 아닙니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.PartExists(System.Uri)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">패키지가 열려 있지 않은 경우(<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>가 호출된 경우)</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.PartExists(System.Uri)">
          <source>The package is write-only (information cannot be read).</source>
          <target state="translated">패키지가 쓰기 전용인 경우. 이 경우 정보를 읽을 수 없습니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackageRelationship.Id" /&gt;</ph> of the relationship to check for.</source>
          <target state="translated">확인할 관계의 <ph id="ph1">&lt;see cref="P:System.IO.Packaging.PackageRelationship.Id" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
          <source>Indicates whether a package-level relationship with a given ID is contained in the package.</source>
          <target state="translated">지정된 ID의 패키지 수준 관계가 패키지에 포함되어 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a package-level relationship with the specified <ph id="ph2">&lt;paramref name="id" /&gt;</ph> is in the package; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 <ph id="ph2">&lt;paramref name="id" /&gt;</ph>의 패키지 수준 관계가 패키지에 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
          <source>For additional information, see the Open Packaging Conventions (OPC) specification available for download at <bpt id="p1">[</bpt><ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph><ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>.</source>
          <target state="translated">자세한 내용은에서 다운로드할 수 열려 패키징 규칙 (OPC) 사양을 참조 <bpt id="p1">[</bpt> <ph id="ph1">http://go.microsoft.com/fwlink/?LinkID=71255</ph> <ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=71255)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
          <source><ph id="ph1">&lt;paramref name="id" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
          <source><ph id="ph1">&lt;paramref name="id" /&gt;</ph> is not a valid XML identifier.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph>가 올바른 XML 식별자가 아닌 경우</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
          <source>The package is not open (<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph> has been called).</source>
          <target state="translated">패키지가 열려 있지 않은 경우(<ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.IO.Packaging.Package.Close" /&gt;</ph>가 호출된 경우)</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
          <source>The package is write-only.</source>
          <target state="translated">패키지가 쓰기 전용인 경우</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.System#IDisposable#Dispose">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> infrastructure and is not intended for application use.</source>
          <target state="translated">이 멤버는 <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> 인프라를 지원하는 것으로 응용 프로그램에서는 사용하지 않는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.Package.System#IDisposable#Dispose">
          <source>Use the type-safe <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> method instead.</source>
          <target state="translated">형식이 안전한 <ph id="ph1">&lt;see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /&gt;</ph> 메서드를 대신 사용하세요.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>