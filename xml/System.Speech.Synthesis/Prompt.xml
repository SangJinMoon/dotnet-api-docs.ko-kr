<Type Name="Prompt" FullName="System.Speech.Synthesis.Prompt">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c370691eaef566aaac28a56b83972fd660b7766" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37610582" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Prompt" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Prompt extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.Prompt" />
  <TypeSignature Language="VB.NET" Value="Public Class Prompt" />
  <TypeSignature Language="C++ CLI" Value="public ref class Prompt" />
  <TypeSignature Language="F#" Value="type Prompt = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_text}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6000d-101">
        <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />로 텍스트이든 오디오 파일이든 제공될 수 있는 것에 대한 정보를 표시합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6000d-101">Represents information about what can be rendered, either text or an audio file, by the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6000d-102"><xref:System.Speech.Synthesis.Prompt> 개체는 일반 텍스트, 태그 언어 또는 오디오 파일을 사용 하 여 서식이 지정 된 텍스트를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="6000d-102">A <xref:System.Speech.Synthesis.Prompt> object can contain plain text, text formatted with markup language, or audio files.</span></span>  
  
 <span data-ttu-id="6000d-103">빈 <xref:System.Speech.Synthesis.Prompt> 개체의 각 새 인스턴스를 만든 <xref:System.Speech.Synthesis.PromptBuilder>합니다.</span><span class="sxs-lookup"><span data-stu-id="6000d-103">An empty <xref:System.Speech.Synthesis.Prompt> object is created with each new instance of <xref:System.Speech.Synthesis.PromptBuilder>.</span></span>  <span data-ttu-id="6000d-104">합니다 <xref:System.Speech.Synthesis.PromptBuilder> 빈 텍스트, SSML 태그, 책갈피 및 미리 녹음 한 오디오 파일 (예:.wav 파일)을 비롯 하 여 콘텐츠를 추가 하기 위한 메서드를 제공 하는 클래스 <xref:System.Speech.Synthesis.Prompt> 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6000d-104">The <xref:System.Speech.Synthesis.PromptBuilder> class provides methods for adding content, including text, SSML markup, bookmarks, and prerecorded audio files (such as .wav files), to the empty <xref:System.Speech.Synthesis.Prompt> object that it contains.</span></span> <span data-ttu-id="6000d-105">응용 프로그램은 사용 하는 일반적으로 <xref:System.Speech.Synthesis.PromptBuilder>, 아닌 <xref:System.Speech.Synthesis.Prompt> 표시 되는 메시지를 만들고 콘텐츠로 채울 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="6000d-105">Typically, applications will use <xref:System.Speech.Synthesis.PromptBuilder>, rather than a <xref:System.Speech.Synthesis.Prompt> object, to create prompts and populate them with content.</span></span>  
  
 <span data-ttu-id="6000d-106">내용에서 음성을 생성 하는 <xref:System.Speech.Synthesis.Prompt> 개체는 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6000d-106">To generate speech from the contents of a <xref:System.Speech.Synthesis.Prompt> object, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6000d-107">
            <see cref="T:System.Speech.Synthesis.Prompt" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6000d-107">Creates a new instance of the <see cref="T:System.Speech.Synthesis.Prompt" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Prompt (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.Prompt.#ctor(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Prompt(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberSignature Language="F#" Value="new System.Speech.Synthesis.Prompt : System.Speech.Synthesis.PromptBuilder -&gt; System.Speech.Synthesis.Prompt" Usage="new System.Speech.Synthesis.Prompt promptBuilder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder">
          <span data-ttu-id="6000d-108">읽을 내용입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6000d-108">The content to be spoken.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6000d-109">
            <see cref="T:System.Speech.Synthesis.Prompt" /> 개체에서 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 클래스의 새 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6000d-109">Creates a new instance of the <see cref="T:System.Speech.Synthesis.Prompt" /> class from a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Prompt (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.Prompt.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Prompt(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="new System.Speech.Synthesis.Prompt : string -&gt; System.Speech.Synthesis.Prompt" Usage="new System.Speech.Synthesis.Prompt textToSpeak" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="6000d-110">말할 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6000d-110">The text to be spoken.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6000d-111">
            <see cref="T:System.Speech.Synthesis.Prompt" /> 클래스의 새 인스턴스를 만들고 말할 텍스트를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6000d-111">Creates a new instance of the <see cref="T:System.Speech.Synthesis.Prompt" /> class and specifies the text to be spoken.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6000d-112">다음 예제에서는 <xref:System.Speech.Synthesis.Prompt> 개체를 문자열에서 개체를 인수로 전달 합니다 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="6000d-112">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a prompt from a string.  
        Prompt color = new Prompt("What is your favorite color?");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(color);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Prompt (string textToSpeak, System.Speech.Synthesis.SynthesisTextFormat media);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToSpeak, valuetype System.Speech.Synthesis.SynthesisTextFormat media) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.Prompt.#ctor(System.String,System.Speech.Synthesis.SynthesisTextFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (textToSpeak As String, media As SynthesisTextFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Prompt(System::String ^ textToSpeak, System::Speech::Synthesis::SynthesisTextFormat media);" />
      <MemberSignature Language="F#" Value="new System.Speech.Synthesis.Prompt : string * System.Speech.Synthesis.SynthesisTextFormat -&gt; System.Speech.Synthesis.Prompt" Usage="new System.Speech.Synthesis.Prompt (textToSpeak, media)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="media" Type="System.Speech.Synthesis.SynthesisTextFormat" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="6000d-113">말할 텍스트입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6000d-113">The text to be spoken.</span>
          </span>
        </param>
        <param name="media">
          <span data-ttu-id="6000d-114">텍스트의 형식을 지정하는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6000d-114">A value that specifies the format of the text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6000d-115">
            <see cref="T:System.Speech.Synthesis.Prompt" /> 클래스의 새 인스턴스를 만들고 읽을 텍스트 및 해당 형식이 일반 텍스트인지 또는 태그 언어인지를 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6000d-115">Creates a new instance of the <see cref="T:System.Speech.Synthesis.Prompt" /> class and specifies the text to be spoken and whether its format is plain text or markup language.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6000d-116">내용의 `textToSpeak` 매개 변수를 포함 해야 합니다는 `speak` 요소에 맞아야 합니다 [Speech Synthesis Markup Language (SSML) 버전 1.0](http://go.microsoft.com/fwlink/?LinkId=201763)합니다.</span><span class="sxs-lookup"><span data-stu-id="6000d-116">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="6000d-117">자세한 내용은 [Speech Synthesis Markup 언어 참조](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94)합니다.</span><span class="sxs-lookup"><span data-stu-id="6000d-117">For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6000d-118">다음 예제에서는 빌드 만듭니다, SSML 태그를 포함 하는 문자열을 <xref:System.Speech.Synthesis.Prompt> 문자열에서 개체 및 프롬프트를 말합니다.</span><span class="sxs-lookup"><span data-stu-id="6000d-118">The following example builds a string that contains SSML markup, creates a <xref:System.Speech.Synthesis.Prompt> object from the string, and speaks the prompt.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Build an SSML prompt in a string.  
        string fileName = "<speak version=\"1.0\" ";  
        fileName += "xmlns=\"http://www.w3.org/2001/10/synthesis\" ";  
        fileName += "xml:lang=\"en-US\">";  
        fileName += "Say a name for the new file <mark name=\"fileName\" />.";  
        fileName += "</speak>";  
  
        // Create a Prompt object from the string.  
        Prompt ssmlFile = new Prompt(fileName, SynthesisTextFormat.Ssml);  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(ssmlFile);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.Prompt.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.Speech.Synthesis.Prompt.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6000d-119">
            <see cref="T:System.Speech.Synthesis.Prompt" />가 재생을 마쳤는지 여부를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6000d-119">Gets whether the <see cref="T:System.Speech.Synthesis.Prompt" /> has finished playing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6000d-120">프롬프트가 비동기적으로 완료되면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6000d-120">Returns <see langword="true" /> if the prompt has completed; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>