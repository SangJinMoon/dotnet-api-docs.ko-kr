<Type Name="SpeechSynthesizer" FullName="System.Speech.Synthesis.SpeechSynthesizer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4329c11770d18ef355913e673d7aab098f71b2dc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30531257" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SpeechSynthesizer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SpeechSynthesizer extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.SpeechSynthesizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpeechSynthesizer&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechSynthesizer sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>설치된 음성 합성 엔진의 기능에 액세스할 수 있습니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 만들 새 <xref:System.Speech.Synthesis.SpeechSynthesizer> 개체를 사용 하 여 기본 시스템 음성 합니다. 구성 하는 <xref:System.Speech.Synthesis.SpeechSynthesizer> 중 하나를 사용 하는 설치 된 음성 합성 (텍스트 음성 변환) 음성을 사용 하 여는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> 또는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> 메서드. 설치 된 음성에 대 한 정보를 가져오려면는 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 메서드 및 <xref:System.Speech.Synthesis.VoiceInfo> 클래스입니다.  
  
 또한이 클래스는 음성 합성의 다음 양상에 대 한 제어를 제공 합니다.  
  
-   에 대 한 출력을 구성 하는 <xref:System.Speech.Synthesis.SpeechSynthesizer> 개체를 가져오려면는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, 및 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> 메서드.  
  
-   음성을 생성 하려면 사용 된 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, 또는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> 메서드. <xref:System.Speech.Synthesis.SpeechSynthesizer> 텍스트에서 음성을 생성할 수는 <xref:System.Speech.Synthesis.Prompt> 또는 <xref:System.Speech.Synthesis.PromptBuilder> 개체 또는 [음성 합성 Markup Language (SSML) 버전 1.0](http://go.microsoft.com/fwlink/?LinkId=201763)합니다.  
  
-   일시 중지 되 고 음성 합성을 다시 시작을 사용 하 여는 <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> 및 <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> 메서드.  
  
-   를 추가 하거나 제거할 사전을 <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> 및 <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> 메서드. <xref:System.Speech.Synthesis.SpeechSynthesizer> 단어의 해당 발음 안내 하나 이상의 사전을 사용할 수 있습니다.  
  
-   배달의 음성 출력을 수정 하려면 사용 하 여는 <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> 및 <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> 속성입니다.  
  
 <xref:System.Speech.Synthesis.SpeechSynthesizer> 표시 되는 메시지의 특정 기능에 도달할 때 이벤트를 발생 시키는: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, 및 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>). 시작 부분에 대해 보고 하는 이벤트 발생 (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) 및 종료 (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>)의 작업 들이 사용 및 음성의 변경이 (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).  
  
> [!NOTE]
>  <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A>에 대한 마지막 참조를 해제하기 전에 반드시 <xref:System.Speech.Synthesis.SpeechSynthesizer>를 호출하십시오. 이렇게 하지 않으면 가비지 수집기가 <xref:System.Speech.Synthesis.SpeechSynthesizer> 개체의 <xref:System.Object.Finalize%2A> 메서드를 호출할 때까지 사용 중인 리소스가 해제되지 않습니다.  
  
   
  
## Examples  
 다음 예제는 초기화 하는 콘솔 응용 프로그램의 일부는 <xref:System.Speech.Synthesis.SpeechSynthesizer> 개체 및 문자열을 말합니다.  
  
```csharp  
  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string.  
      synth.Speak("This example demonstrates a basic use of Speech Synthesizer");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
    <altmember cref="T:System.Speech.Synthesis.Prompt" />
    <altmember cref="T:System.Speech.Synthesis.PromptBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechSynthesizer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 초기화할 새 <xref:System.Speech.Synthesis.SpeechSynthesizer> 인스턴스를 사용 하 여 기본 시스템 음성 합니다. 구성 하는 <xref:System.Speech.Synthesis.SpeechSynthesizer> 중 하나를 사용 하는 설치 된 음성 합성 (텍스트 음성 변환) 음성을 사용 하 여는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> 또는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> 메서드. 설치 된 음성에 대 한 정보를 가져오려면는 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 메서드 및 <xref:System.Speech.Synthesis.VoiceInfo> 클래스입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public void AddLexicon (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLexicon(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLexicon(Uri ^ uri, System::String ^ mediaType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">lexicon 정보의 위치입니다.</param>
        <param name="mediaType">어휘집의 미디어 유형입니다. 미디어 형식 값은 대/소문자를 구분하지 않습니다.</param>
        <summary>
          <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 개체에 어휘집을 추가합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 발음 lexicon은 단어 또는 구의는 지원 되는 phonetic 알파벳 문자와으로 구성 된 해당 발음 함께 컬렉션입니다. 응용 프로그램에서 특정된 어휘에 대 한 사용자 지정 발음을 지정 하는 용어를 사용할 수 있습니다.  
  
 외부 사전 파일에 지정 된 발음 음성 신시사이저 내부 어휘 집 또는 사전의 발음 보다 우선 합니다. 그러나 발음에에서 지정 된 인라인 프롬프트 중 하나를 사용 하 여 만든는 <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, 또는 <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> 메서드 모든 어휘 집에 지정 된 발음 보다 우선 합니다. 인라인 발음 단어의 개별 항목에만 적용 됩니다. 참조 [집 및 Phonetic 알파벳](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) 자세한 정보에 대 한 합니다.  
  
 여러 집을를 추가할 수는 <xref:System.Speech.Synthesis.SpeechSynthesizer> 개체입니다. 두 값에 현재 지원 되는 `mediaType` 매개 변수:  
  
-   값 `application/pls+xml` 어휘 집에 맞는지 나타냅니다는 [발음 어휘 집 사양 (PLS) 버전 1.0](http://go.microsoft.com/fwlink/?LinkId=201766)합니다. 사용 하도록 기본 형식입니다.  
  
-   값 `application/vdn.ms-sapi-lex` 어휘 집 형식의 Microsoft 전용 형식인 압축 되지 않은 어휘 집 임을 나타냅니다. 레거시 형식 이며 이른바 PLS 형식을 사용 하는 것이 좋습니다.  
  
   
  
## Examples  
 다음 예제에서는 추가 및 제거 "blue" 라는 단어에 대 한 사용자 지정 발음을 포함 하는 어휘 집의 효과 보여 줍니다. 어휘 집 "bleep"와 같은 소리를 "blue"의 발음을 정의합니다. 어휘 집 로드 되 면 반면 음성 신시사이저 어휘 집에 정의 된 발음을 사용 합니다.  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Add a lexicon that changes the pronunciation of "blue".  
        synth.AddLexicon(new Uri("C:\\test\\Blue.pls"), "application/pls+xml");  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Remove the lexicon.  
        synth.RemoveLexicon(new Uri("C:\\test\\Blue.pls"));  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 다음은 Blue.pls 사전 파일의 내용입니다.  
  
```xml  
<?xml version="1.0" encoding="UTF-8"?>  
  
<lexicon version="1.0"   
      xmlns="http://www.w3.org/2005/01/pronunciation-lexicon"  
      alphabet="x-microsoft-ups" xml:lang="en-US">  
  
  <lexeme>  
    <grapheme> blue </grapheme>  
    <phoneme> B L I P </phoneme>  
  </lexeme>  
  
</lexicon>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="BookmarkReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BookmarkReached As EventHandler(Of BookmarkReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::BookmarkReachedEventArgs ^&gt; ^ BookmarkReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />가 프롬프트에서 책갈피를 발견할 때 발생했습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.SpeechSynthesizer> 중 하나를 처리 하는 동안이 이벤트를 발생 시킵니다.는 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, 또는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> 메서드. 이벤트와 연결 된 데이터에 대 한 정보를 참조 하십시오. <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>합니다.  
  
 사용 하 여 책갈피를 추가할 수는 <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> 메서드.  
  
   
  
## Examples  
 다음 예제는 두 책갈피를 포함 하는 WAV 파일 재생을 위해로 출력을 보내는 프롬프트를 만듭니다. 에 대 한 처리기는 <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> 콘솔에 이벤트가 발생 하는 경우 이벤트 이름 책갈피 및 오디오 스트림에서의 위치를 작성 합니다.  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt and append bookmarks.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.AppendBookmark("Daytime forecast");  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.AppendBookmark("Nightime forecast");  
  
        // Add a handler for the BookmarkReached event.  
        synth.BookmarkReached +=  
          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the name and position of the bookmark to the console.  
    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  
    {  
      Console.WriteLine("Bookmark ({0}) reached at: {1} ",  
        e.Bookmark, e.AudioPosition);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 개체를 삭제하고 세션 중에 사용되는 리소스를 해제합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SpeechSynthesizer ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> 메서드가 호출되지 않을 경우 리소스를 정리하는 보호 기능으로 사용됩니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentlySpokenPrompt">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentlySpokenPrompt () As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ GetCurrentlySpokenPrompt();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />에서 말하는 프롬프트를 가져옵니다.</summary>
        <returns>현재 음성으로 변환되는 신속 개체를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```csharp  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstalledVoices">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>현재 시스템에 설치 된 합성 (텍스트 음성 변환) 음성 음성의 컬렉션을 반환 합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 응용 프로그램 호출 하는 경우 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, 음성 (텍스트 음성 변환에 대 한 엔진)의 각 발견 되는 레지스트리 충족에 특정 최소 기준 메서드를 확인 합니다. 유효성 검사를 실패 하는 모든 음성에 대 한 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 설정 해당 <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 속성을 `False`합니다. 응용 프로그램에서 음성을 선택할 수 없습니다 인 <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 속성은 `False`합니다. 일반적으로 응용 프로그램 음성의 설정 하지 것입니다 <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices () As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>설치된 음성의 모든 설치된 합성 음성(텍스트 음성 변환)을 반환합니다.</summary>
        <returns>시스템에 현재 설치된 음성의 읽기 전용 컬렉션을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 음성은 시스템에 설치 된 음성 합성 (텍스트 음성 변환 또는 TTS)에 대 한 엔진.  
  
   
  
## Examples  
 다음 예제는 초기화 하는 콘솔 응용 프로그램의 일부는 <xref:System.Speech.Synthesis.SpeechSynthesizer> 개체 및 설치 된 음성 (음성 합성에 대 한 엔진)의 목록을 콘솔에 출력 정보 각 음성에 사용할 수 있는 방법을 보여 줍니다.  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices.   
        Console.WriteLine("Installed voices -");  
        foreach (InstalledVoice voice in synth.GetInstalledVoices())  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          string AudioFormats = "";  
          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  
          {  
            AudioFormats += String.Format("{0}\n",  
            fmt.EncodingFormat.ToString());  
          }  
  
          Console.WriteLine(" Name:          " + info.Name);  
          Console.WriteLine(" Culture:       " + info.Culture);  
          Console.WriteLine(" Age:           " + info.Age);  
          Console.WriteLine(" Gender:        " + info.Gender);  
          Console.WriteLine(" Description:   " + info.Description);  
          Console.WriteLine(" ID:            " + info.Id);  
          Console.WriteLine(" Enabled:       " + voice.Enabled);  
          if (info.SupportedAudioFormats.Count != 0)  
          {  
            Console.WriteLine( " Audio formats: " + AudioFormats);  
          }  
          else  
          {  
            Console.WriteLine(" No supported audio formats found");  
          }  
  
          string AdditionalInfo = "";  
          foreach (string key in info.AdditionalInfo.Keys)  
          {  
            AdditionalInfo += String.Format("  {0}: {1}\n", key, info.AdditionalInfo[key]);  
          }  
  
          Console.WriteLine(" Additional Info - " + AdditionalInfo);  
          Console.WriteLine();  
        }  
      }  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
        <altmember cref="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      </Docs>
    </Member>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices (culture As CultureInfo) As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">음성을 지원해야 하는 로캘입니다.</param>
        <summary>설치된 음성의 모든 특정 로케일 지원 (텍스트 음성 변환) 합성 음성을 반환합니다.</summary>
        <returns>지정된 로캘을 지원하는 시스템에 현재 설치된 음성의 읽기 전용 컬렉션을 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설치 된 음성 지원을 지정 된 로캘 none 인 경우이 메서드는 빈 컬렉션을 반환 합니다.  
  
 Microsoft Windows와 System.Speech API는 모든 유효한 언어 국가 코드를 받습니다. Culture 속성에 지정 된 언어를 사용 하 여 텍스트 음성 변환을 수행 하려면 해당 언어 국가 코드를 지 원하는 음성 합성 엔진이 설치 되어야 합니다. Microsoft Windows 7과 함께 제공 된 음성 합성 엔진이 다음 언어 국가 코드와 함께 작동 합니다.  
  
-   EN-US입니다. 영어 (미국)  
  
-   zh-CN. 중국어 (중국)  
  
-   zh-TW. 중국어 (대만)  
  
 "En"와 같은 두 문자 언어 코드도 허용 됩니다.  
  
   
  
## Examples  
 다음 예제는 초기화 하는 콘솔 응용 프로그램의 일부는 <xref:System.Speech.Synthesis.SpeechSynthesizer> 개체를 지 원하는 EN-US 로캘의 설치 된 음성의 목록을 콘솔에 출력 합니다.  
  
```csharp  
using System;  
using System.Globalization;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synthesizer = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices that  
        // support the en-US locacale.   
        Console.WriteLine("Installed voices for the en-US locale:");  
        foreach (InstalledVoice voice in  
          synthesizer.GetInstalledVoices(new CultureInfo("en-US")))  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          OutputVoiceInfo(info);  
        }  
  
        // Output information about the current voice.  
        Console.WriteLine();  
        Console.WriteLine("Current voice:");  
        OutputVoiceInfo(synthesizer.Voice);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Display information about a synthesizer voice.  
    private static void OutputVoiceInfo(VoiceInfo info)  
    {  
      Console.WriteLine("  Name: {0}, culture: {1}, gender: {2}, age: {3}.",  
        info.Name, info.Culture, info.Gender, info.Age);  
      Console.WriteLine("    Description: {0}", info.Description);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 개체를 일시 정지합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="PhonemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PhonemeReached As EventHandler(Of PhonemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::PhonemeReachedEventArgs ^&gt; ^ PhonemeReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>음소가 달성될 때 발생했습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 음소는 작성 된 언어의 기본적인 구성 요소, 일반적으로 하나 이상의 고유 소리를 나타내는 문자는 영문자 (또는 두 글자의 조합)입니다. 예를 들어, "c" 문자 "콘크리트"의 "s" 또는 "catch"에 "k" 처럼 보일 수도 있는 음소입니다. 서 면된 단어는 음소 동작이 있습니다. 음소를 단어의 변경 사전을 변경 됩니다.  
  
 A <xref:System.Speech.Synthesis.SpeechSynthesizer> 인스턴스를 생성 한 <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> 는 음소를 구성 하는 단어의 각 부분에 대 한 이벤트입니다. 예를 들어, 단어 "테마" 생성 세 <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> 이벤트; "th" 소리, "e" 소리 및 하나 (me) "m" 사운드에 대 한 합니다.  
  
 예: 및 이벤트와 연결 된 데이터에 대 한 정보를 참조 하십시오. <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public int Rate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rate" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberSignature Language="VB.NET" Value="Public Property Rate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rate { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 개체의 읽어주기 속도를 가져오거나 설정합니다.</summary>
        <value>말하는 속도의 반환의 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 개체에서 10 사이입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 말하기 속도-2로 설정 된 문자열을 말합니다.  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Set a value for the speaking rate.  
      synth.Rate = -2;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a text string synchronously.  
      synth.Speak("This example speaks a string with the speaking rate set to -2.");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }     
  }    
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.PromptStyle" />
        <altmember cref="T:System.Speech.Synthesis.PromptRate" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public void RemoveLexicon (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveLexicon(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveLexicon(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">어휘집 문서의 위치입니다.</param>
        <summary>
          <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 개체에서 어휘집을 제거합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 예제는 <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>을 참조하세요.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>일시 중지된 후 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 개체를 다시 시작합니다.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoice">
      <MemberSignature Language="C#" Value="public void SelectVoice (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoice(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoice (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoice(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">선택할 음성의 이름입니다.</param>
        <summary>특정 음성 이름으로 선택합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 메서드 및 <xref:System.Speech.Synthesis.VoiceInfo> 클래스의 이름을 가져오는를 선택할 수 있는 텍스트 음성 변환 (TTS) 음성을 설치 합니다. 음성 선택, 전달의 전체 내용을 <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> 속성에 대 한 인수로 <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> 메서드. <xref:System.Speech.Synthesis.SpeechSynthesizer> 개체를 포함 하는 첫 번째 설치 된 음성 선택 `name` 음성의 <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> 속성입니다. <xref:System.Speech.Synthesis.SpeechSynthesizer> 음성 일치 하는지 확인 하는 대/소문자 구분, 부분 문자열 비교를 수행는 `name`합니다.  
  
 응용 프로그램 호출 하는 경우 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, 메서드 각각 레지스트리에서 찾은 음성의 최소 특정 조건에 맞는지 확인 합니다. 유효성 검사를 실패 하는 모든 음성에 대 한 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 설정 해당 <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 속성을 `False`합니다. 응용 프로그램에서 음성을 선택할 수 없습니다 인 <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 속성은 `False`합니다. 일반적으로 응용 프로그램 음성의 설정 하지 것입니다 <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 속성입니다.  
  
 성별, 연령, 또는 로캘 음성을 선택 하려면 중 하나를 사용는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectVoiceByHints">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>음성을 사용하여 특정 특성을 선택합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 메서드 및 <xref:System.Speech.Synthesis.VoiceInfo> 클래스의 이름을 가져오는를 선택할 수 있는 텍스트 음성 변환 (TTS) 음성을 설치 합니다. <xref:System.Speech.Synthesis.SpeechSynthesizer> 개체를 지정된 된 특성을 일치 하는 첫 번째 설치 된 음성 선택 합니다.  
  
 응용 프로그램 호출 하는 경우 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, 메서드 각각 레지스트리에서 찾은 음성의 최소 특정 조건에 맞는지 확인 합니다. 유효성 검사를 실패 하는 모든 음성에 대 한 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 설정 해당 <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 속성을 `False`합니다. 응용 프로그램에서 음성을 선택할 수 없습니다 인 <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 속성은 `False`합니다. 일반적으로 응용 프로그램 음성의 설정 하지 것입니다 <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 속성입니다.  
  
 음성을 이름으로 선택 하려면 사용 하 여는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> 메서드  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
      </Parameters>
      <Docs>
        <param name="gender">선택할 음성의 성별입니다.</param>
        <summary>음성을 사용하여 특정 성별을 선택합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 메서드 및 <xref:System.Speech.Synthesis.VoiceInfo> 클래스의 이름을 가져오는를 선택할 수 있는 텍스트 음성 변환 (TTS) 음성을 설치 합니다. <xref:System.Speech.Synthesis.SpeechSynthesizer> 개체를 첫 번째 설치 된 음성 선택 인 <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> 속성이 일치는 `gender` 매개 변수입니다.  
  
 응용 프로그램 호출 하는 경우 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, 메서드 각각 레지스트리에서 찾은 음성의 최소 특정 조건에 맞는지 확인 합니다. 유효성 검사를 실패 하는 모든 음성에 대 한 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 설정 해당 <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 속성을 `False`합니다. 응용 프로그램에서 음성을 선택할 수 없습니다 인 <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 속성은 `False`합니다. 일반적으로 응용 프로그램 음성의 설정 하지 것입니다 <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 속성입니다.  
  
 다른 특성에 따라 음성을 선택 하려면 다른 참조 <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> 메서드.  
  
 음성을 이름으로 선택 하려면 사용 하 여는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
      </Parameters>
      <Docs>
        <param name="gender">선택할 음성의 성별입니다.</param>
        <param name="age">선택할 목소리 연령입니다.</param>
        <summary>음성을 사용 하 여 특정 성별 및 시대를 선택합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 메서드 및 <xref:System.Speech.Synthesis.VoiceInfo> 클래스의 이름을 가져오는를 선택할 수 있는 텍스트 음성 변환 (TTS) 음성을 설치 합니다. <xref:System.Speech.Synthesis.SpeechSynthesizer> 개체를 첫 번째 설치 된 음성 선택 인 <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> 및 <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> 속성 일치는 `gender` 및 `age` 매개 변수입니다.  
  
 응용 프로그램 호출 하는 경우 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, 메서드 각각 레지스트리에서 찾은 음성의 최소 특정 조건에 맞는지 확인 합니다. 유효성 검사를 실패 하는 모든 음성에 대 한 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 설정 해당 <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 속성을 `False`합니다. 응용 프로그램에서 음성을 선택할 수 없습니다 인 <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 속성은 `False`합니다. 일반적으로 응용 프로그램 음성의 설정 하지 것입니다 <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 속성입니다.  
  
 다른 특성에 따라 음성을 선택 하려면 다른 참조 <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> 메서드.  
  
 음성을 이름으로 선택 하려면 사용 하 여는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gender">선택할 음성의 성별입니다.</param>
        <param name="age">선택할 목소리 연령입니다.</param>
        <param name="voiceAlternate">선택할 음성의 위치입니다.</param>
        <summary>음성이 정렬되는 위치를 기준으로 특정 성별과 나이의 음성을 선택합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용 하 여는 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 메서드 및 <xref:System.Speech.Synthesis.VoiceInfo> 클래스의 이름을 가져오는를 선택할 수 있는 텍스트 음성 변환 (TTS) 음성을 설치 합니다. <xref:System.Speech.Synthesis.SpeechSynthesizer> 설치 찾습니다 voices 갖는 개체 <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> 및 <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> 속성 일치는 `gender` 및 `age` 매개 변수입니다. <xref:System.Speech.Synthesis.SpeechSynthesizer> 일치 항목을 찾아 반환 음성 때 참조 횟수가 계산 된 `voiceAlternate` 매개 변수입니다.  
  
 응용 프로그램 호출 하는 경우 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, 메서드 각각 레지스트리에서 찾은 음성의 최소 특정 조건에 맞는지 확인 합니다. 유효성 검사를 실패 하는 모든 음성에 대 한 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 설정 해당 <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 속성을 `False`합니다. 응용 프로그램에서 음성을 선택할 수 없습니다 인 <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 속성은 `False`합니다. 일반적으로 응용 프로그램 음성의 설정 하지 것입니다 <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 속성입니다.  
  
 다른 특성에 따라 음성을 선택 하려면 다른 참조 <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> 오버 로드 합니다.  
  
 음성을 이름으로 선택 하려면 사용 하 여는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="gender">선택할 음성의 성별입니다.</param>
        <param name="age">선택할 목소리 연령입니다.</param>
        <param name="voiceAlternate">선택할 음성의 위치입니다.</param>
        <param name="culture">선택할 음성의 로캘입니다.</param>
        <summary>음성이 정렬되는 위치를 기준으로 특정 성별과 나이, 로캘의 음성을 선택합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.SpeechSynthesizer> 찾습니다 voices 갖는 개체 <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, 및 <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> 속성 일치는 `gender`, `age`, 및 `culture` 매개 변수입니다. <xref:System.Speech.Synthesis.SpeechSynthesizer> 일치 항목을 찾아 반환 음성 때 참조 횟수가 계산 된 `voiceAlternate` 매개 변수입니다.  
  
 Microsoft Windows와 System.Speech API는 모든 유효한 언어 국가 코드를 받습니다. 에 지정 된 언어를 사용 하 여 텍스트 음성 변환 수행 하는 `culture` 매개 변수, 음성 합성 엔진이 지 원하는 언어 국가 코드를 설치 해야 합니다. Microsoft Windows 7과 함께 제공 된 음성 합성 엔진이 다음 언어 국가 코드와 함께 작동 합니다.  
  
-   EN-US입니다. 영어 (미국)  
  
-   zh-CN. 중국어 (중국)  
  
-   zh-TW. 중국어 (대만)  
  
 "En"와 같은 두 문자 언어 코드도 허용 됩니다.  
  
 응용 프로그램 호출 하는 경우 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, 메서드 각각 레지스트리에서 찾은 음성의 최소 특정 조건에 맞는지 확인 합니다. 유효성 검사를 실패 하는 모든 음성에 대 한 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 설정 해당 <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 속성을 `False`합니다. 응용 프로그램에서 음성을 선택할 수 없습니다 인 <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 속성은 `False`합니다. 일반적으로 응용 프로그램 음성의 설정 하지 것입니다 <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> 속성입니다.  
  
 다른 특성에 따라 음성을 선택 하려면 다른 참조 <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> 오버 로드 합니다.  
  
 음성을 이름으로 선택 하려면 사용 하 여는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToAudioStream">
      <MemberSignature Language="C#" Value="public void SetOutputToAudioStream (System.IO.Stream audioDestination, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToAudioStream(class System.IO.Stream audioDestination, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToAudioStream (audioDestination As Stream, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToAudioStream(System::IO::Stream ^ audioDestination, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="audioDestination">합성 출력을 추가할 스트림입니다.</param>
        <param name="formatInfo">합성 출력에 사용할 서식입니다.</param>
        <summary>오디오 스트림에 출력을 추가하도록 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 개체를 구성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 호출 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> 를 해제 하는 <xref:System.Speech.Synthesis.SpeechSynthesizer>의 스트림에 대 한 참조입니다.  
  
 다른 출력 구성 옵션에 대 한 참조는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, 및 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToDefaultAudioDevice">
      <MemberSignature Language="C#" Value="public void SetOutputToDefaultAudioDevice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToDefaultAudioDevice() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToDefaultAudioDevice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToDefaultAudioDevice();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>기본 오디오 장치에 출력을 보내도록 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 개체를 구성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용할 수 있습니다는 **소리** 창에서 창 **제어판** 컴퓨터에 대 한 기본 오디오 장치를 구성 합니다.  
  
 다른 출력 구성 옵션에 대 한 참조는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, 및 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는으로 언급 해야 할 기본 오디오 출력 구문 신시사이저를 사용 합니다.  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the synthesizer to send output to the default audio device.  
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToNull">
      <MemberSignature Language="C#" Value="public void SetOutputToNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToNull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToNull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>합성 작업에서 장치, 파일 또는 스트림으로 출력을 보내지 않도록 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 개체를 구성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드를 사용 하 여 해제 하는 <xref:System.Speech.Synthesis.SpeechSynthesizer> 의 파일이 나 스트림에에 대 한 참조입니다. 예제는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>을 참조하세요.  
  
 다른 출력 구성 옵션에 대 한 참조는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, 및 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputToWaveFile">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Waveform 오디오 형식 파일에 출력을 추가하도록 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 개체를 구성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 해제 하는 <xref:System.Speech.Synthesis.SpeechSynthesizer>의 참조 파일을 다시 구성 된 <xref:System.Speech.Synthesis.SpeechSynthesizer>의 출력, 예를 들어 호출 하 여 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>합니다.  
  
 다른 출력 구성 옵션에 대 한 참조는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, 및 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">파일의 경로입니다.</param>
        <summary>Waveform 형식 오디오를 포함하는 파일에 출력을 추가하도록 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 개체를 구성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 출력을 구성 하 고를 오디오 형식 지정을 사용 하 여는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는의 인스턴스를 사용 하 여 <xref:System.Media.SoundPlayer> .wav 파일을 출력 된 프롬프트를 재생할 수 있습니다. 때문에 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> 호출 비동기적인지는 <xref:System.Media.SoundPlayer> 인스턴스가 생성 됩니다 (및 <xref:System.Media.SoundPlayer.Play%2A> 메서드 호출)에 대 한 처리기에서는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> 이벤트입니다.  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToWaveFile(@"C:\Test\Sample.wav");  
  
      // Register for the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Build a prompt.  
      PromptBuilder builder = new PromptBuilder();  
      builder.AppendText("This sample asynchronously speaks a prompt to a WAVE file.");  
  
      // Speak the string asynchronously.  
      synth.SpeakAsync(builder);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Handle the SpeakCompleted event.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
  
      // Create a SoundPlayer instance to play the output audio file.  
      System.Media.SoundPlayer m_SoundPlayer =  
        new System.Media.SoundPlayer(@"C:\Test\Sample.wav");  
  
      //  Play the output file.  
      m_SoundPlayer.Play();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="path">파일의 경로입니다.</param>
        <param name="formatInfo">오디오 형식 정보입니다.</param>
        <summary>지정된 형식의 Waveform 오디오 형식 파일에 출력을 추가하도록 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 개체를 구성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는 음성 합성의 출력의 형식을 지정 하 고 WAV 파일에 보냅니다.  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\temp\test.wav",   
          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  
  
        // Create a SoundPlayer instance to play output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =   
          new System.Media.SoundPlayer(@"C:\temp\test.wav");  
  
        // Build a prompt.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is sample output to a WAVE file.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveStream">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveStream (System.IO.Stream audioDestination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveStream(class System.IO.Stream audioDestination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveStream (audioDestination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveStream(System::IO::Stream ^ audioDestination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioDestination">합성 출력을 추가할 스트림입니다.</param>
        <summary>Waveform 형식 오디오를 포함하는 스트림에 출력을 추가하도록 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 개체를 구성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 해제 하는 <xref:System.Speech.Synthesis.SpeechSynthesizer>의 참조는 스트림에 reconfigure 신시사이저의 출력, 예를 들어 호출 하 여 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>합니다.  
  
 다른 출력 구성 옵션에 대 한 참조는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, 및 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 구를 WAV 스트림에 출력합니다.  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      using (MemoryStream stream = new MemoryStream())  
      {  
  
        // Create a SoundPlayer instance to play the output audio file.  
        MemoryStream streamAudio = new MemoryStream();  
        System.Media.SoundPlayer m_SoundPlayer = new System.Media.SoundPlayer();  
  
        // Configure the synthesizer to output to an audio stream.  
        synth.SetOutputToWaveStream(streamAudio);  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
        streamAudio.Position = 0;  
        m_SoundPlayer.Stream = streamAudio;  
        m_SoundPlayer.Play();  
  
        // Set the synthesizer output to null to release the stream.   
        synth.SetOutputToNull();  
  
        // Insert code to persist or process the stream contents here.  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Speak">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>문자열, <see cref="T:System.Speech.Synthesis.Prompt" /> 개체 또는 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 개체로부터 음성 출력을 동기적으로 생성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> 방법 음성을 동기적으로 생성 합니다. 내용이 될 때까지 메서드를 반환 하지 않는 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> 인스턴스가 완전히 줄여서 말합니다. 이것이 음성을 생성 하는 가장 간단한 방법은입니다. 그러나 응용 프로그램을 말할 때 작업을 수행 하는 경우 예를 들어 텍스트 강조 표시, 페인트 애니메이션, 모니터 컨트롤 또는 다른 작업을 사용 하 여는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> 메서드 또는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> 음성을 비동기적으로 생성 하는 메서드.  
  
 이 메서드를 호출 하는 동안는 <xref:System.Speech.Synthesis.SpeechSynthesizer> 다음 이벤트를 발생 시킬 수 있습니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>. 신시사이저의 말하는 상태가 변경 될 때 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>. 신시사이저 음성 생성이 시작 될 때 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>. 문자 또는 음성 언어로 신중한 소리를 구성 하는 문자 조합이 신시사이저에 도달할 때마다를 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>. 단어를 말할 신시사이저 완료 될 때마다 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>. 음성된 출력에서 입 또는 음성을 생성 하는 데 사용 안 면 업무를 줄이고의 위치 변경 해야 할 때마다를 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>. 신시사이저 프롬프트에서 책갈피를 발견할 때 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>. 음성 신시사이저에 대 한 변경 될 때 발생 합니다.  
  
 <xref:System.Speech.Synthesis.SpeechSynthesizer> 발생 하지 않습니다는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> 중 하나를 처리 하는 동안 이벤트는 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">말할 콘텐츠입니다.</param>
        <summary>
          <see cref="T:System.Speech.Synthesis.Prompt" /> 객체의 내용을 동기적으로 말합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 콘텐츠를 비동기적으로 <xref:System.Speech.Synthesis.Prompt> 개체를 가져오려면 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Speech.Synthesis.Prompt> 개체를 문자열에서 개체에 대 한 인수로 전달 하 고는 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> 메서드.  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a prompt from a string.  
        Prompt color = new Prompt("What is your favorite color?");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(color);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder">말할 콘텐츠입니다.</param>
        <summary>
          <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 객체의 내용을 동기적으로 말합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 콘텐츠를 비동기적으로 <xref:System.Speech.Synthesis.PromptBuilder> 개체를 가져오려면 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Speech.Synthesis.PromptBuilder> 개체를 문자열에서 개체에 대 한 인수로 전달 하 고는 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> 메서드.  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a text string.  
        PromptBuilder song = new PromptBuilder();  
        song.AppendText("Say the name of the song you want to hear");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(song);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">읽을 텍스트입니다.</param>
        <summary>문자열의 내용을 동기적으로 말합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 으로 동기적으로 언급 해야 할 SSML 태그를 포함 하는 문자열을 사용 하 여는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> 메서드. 문자열의 내용을 비동기적으로 사용 하려면 사용 된 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> 메서드.  
  
   
  
## Examples  
 다음 예에서 같이 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> 메서드는 동기적으로 출력 음성을 생성 하는 가장 간단한 방법을 제공 합니다.  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a string synchronously.  
        synth.Speak("What is your favorite color?");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SpeakAsync">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>문자열, <see cref="T:System.Speech.Synthesis.Prompt" /> 개체 또는 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 개체로부터 음성 출력을 비동기적으로 생성합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> 방법 음성을 비동기적으로 생성 합니다. 메서드는의 콘텐츠를 기다리지 않고 즉시 반환는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> 말하기 끝나기를 개체입니다. 사용 하 여 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> 응용 프로그램을 말할 때 작업을 수행, 예를 들어 텍스트 강조 표시 하는 경우 페인트 애니메이션, 모니터 컨트롤 또는 다른 작업입니다.  
  
 이 메서드를 호출 하는 동안는 <xref:System.Speech.Synthesis.SpeechSynthesizer> 다음 이벤트를 발생 시킬 수 있습니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>. 신시사이저의 말하는 상태가 변경 될 때 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>. 신시사이저 음성 생성이 시작 될 때 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>. 문자 또는 음성 언어로 신중한 소리를 구성 하는 문자 조합이 신시사이저에 도달할 때마다를 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>. 단어를 말할 신시사이저 완료 될 때마다 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>. 음성된 출력에서 입 또는 음성을 생성 하는 데 사용 안 면 업무를 줄이고의 위치 변경 해야 할 때마다를 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>. 신시사이저 프롬프트에서 책갈피를 발견할 때 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>. 음성 신시사이저에 대 한 변경 될 때 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>. 신시사이저가 완료 될 때 발생 하는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> 작업 합니다.  
  
 응용 프로그램 말하는 동안 작업을 수행 하지 않아도, 하는 경우 사용할 수 있습니다는 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> 메서드 또는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> 음성을 동기적으로 생성 하는 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public void SpeakAsync (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsync(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsync(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">말할 콘텐츠입니다.</param>
        <summary>
          <see cref="T:System.Speech.Synthesis.Prompt" /> 개체의 내용을 비동기적으로 말합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 프롬프트의 비동기 말하기 취소할 수는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> 또는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> 메서드.  
  
 콘텐츠를 동기적으로 한 <xref:System.Speech.Synthesis.Prompt> 개체를 가져오려면 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Speech.Synthesis.Prompt> 개체를 문자열에서 개체에 대 한 인수로 전달 하 고는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> 메서드.  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a prompt from a string.  
      Prompt color = new Prompt("What is your favorite color?");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(color);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder">말할 콘텐츠입니다.</param>
        <summary>
          <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 개체의 내용을 비동기적으로 말합니다.</summary>
        <returns>이야기 하는 내용을 포함 하는 개체를 반환 합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 콘텐츠를 동기적으로 한 <xref:System.Speech.Synthesis.PromptBuilder> 개체를 가져오려면 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>합니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Speech.Synthesis.PromptBuilder> 개체를 문자열에서 개체에 대 한 인수로 전달 하 고는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> 메서드.  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a PromptBuilder object and append a text string.  
      PromptBuilder song = new PromptBuilder();  
      song.AppendText("Say the name of the song you want to hear");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(song);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">읽을 텍스트입니다.</param>
        <summary>문자열의 내용을 비동기적으로 말합니다.</summary>
        <returns>이야기 하는 내용을 포함 하는 개체를 반환 합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SSML 태그를 포함 하는 문자열에 비동기적으로 발표를 사용 하 여는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> 메서드. 문자열의 내용을 동기적으로 사용 하려면 사용 된 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> 메서드. 프롬프트의 비동기 말하기 취소할 수는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> 또는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> 메서드.  
  
   
  
## Examples  
 다음 예에서 같이 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> 메서드 음성 비동기적으로 출력을 생성 하는 가장 간단한 방법을 제공 합니다.  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancel">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancel (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancel(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancel(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt">말하기 작업을 취소할 내용입니다.</param>
        <summary>쿼리된 프롬프트에 대한 비동기 합성 작업을 취소합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 비동기 취소 하려면이 메서드를 사용할 수도 있습니다는 다음에 대 한 작업을 말합니다.  
  
-   콘텐츠는 <xref:System.String> 에 지정 된 한 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> 메서드.  
  
-   콘텐츠는 <xref:System.Speech.Synthesis.PromptBuilder> 에 지정 된 한 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> 메서드.  
  
-   콘텐츠는 <xref:System.String> 로 지정 된 SSML을 포함 하는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> 메서드.  
  
 호출 하는 경우 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, 또는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System.Speech 만듭니다는 <xref:System.Speech.Synthesis.Prompt> 개체 메서드의 매개 변수가의 내용으로 정보를 표시 하 고 반환 된 <xref:System.Speech.Synthesis.Prompt> 개체입니다. 반환 된 복사본을 보관 하는 경우 <xref:System.Speech.Synthesis.Prompt>로 전달할 수 있습니다 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> 에 지정 된 읽기 콘텐츠를 취소 하는 <xref:System.String> 또는 <xref:System.Speech.Synthesis.PromptBuilder> 개체입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancelAll">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancelAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancelAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakAsyncCancelAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancelAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>모든 쿼리된 비동기 음성 합성 작업을 취소합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는의 사용을 보여 줍니다. <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> 새 프롬프트를 읽을 수 있도록 프롬프트에서 다음의 비동기 말하기을 취소 합니다. <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> 때이 이벤트가 발생 한 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> 작업을 취소 합니다.  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Threading;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the StateChanged event.  
      synth.StateChanged += new EventHandler<StateChangedEventArgs>(synth_StateChanged);  
  
      // Subscribe to the SpeakProgress event.  
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Subscribe to the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Begin speaking a text string asynchronously.  
      synth.SpeakAsync("Speech is an effective and natural way for people to interact with applications, " +  
        "complementing or even replacing the use of mice, keyboards, controllers, and gestures.");  
  
      // Speak for four seconds.  
      Thread.Sleep(4000);  
  
      // Cancel the SpeakAsync operation and wait one second.  
      synth.SpeakAsyncCancelAll();  
      Thread.Sleep(1000);  
  
      // Speak a new text string.  
      synth.Speak("An urgent email message has arrived. Do you want to hear it?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write to the console when the SpeakAsync operation has been cancelled.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
      Console.WriteLine("\nThe SpeakAsync operation was cancelled!!");  
    }  
  
    // When it changes, write the state of the SpeechSynthesizer to the console.  
    static void synth_StateChanged(object sender, StateChangedEventArgs e)  
    {  
      Console.WriteLine("\nSynthesizer State: {0}    Previous State: {1}\n", e.State, e.PreviousState);  
    }  
  
    // Write the text being spoken by the SpeechSynthesizer to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }      
  }    
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakCompleted As EventHandler(Of SpeakCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakCompletedEventArgs ^&gt; ^ SpeakCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />가 프롬프트에 대해 말하기를 완료할 때 발생했습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.SpeechSynthesizer> 발생는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> 중 아무 메서드나 완료 될 때 이벤트는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> 또는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> 메서드.  
  
 <xref:System.Speech.Synthesis.SpeakCompletedEventArgs> 클래스 속성이 없는 있으며에서 데이터를 반환 하지 않는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> 이벤트입니다. 사용에 대 한 이벤트 처리기를 작성 하는 응용 프로그램 작성자에 게 제공 됩니다는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> 이벤트입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SpeakProgress">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakProgress As EventHandler(Of SpeakProgressEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakProgressEventArgs ^&gt; ^ SpeakProgress;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />가 프롬프트의 개개의 단어를 말한 후에 발생했습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.SpeechSynthesizer> 프롬프트를 사용 하 여 대상 하는 새로운 각 단어에 대해이 이벤트를 발생 시킵니다.는 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, 또는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> 메서드. 예 및 이벤트와 연결 된 데이터에 대 한 자세한 내용은 참조 <xref:System.Speech.Synthesis.SpeakProgressEventArgs>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsml">
      <MemberSignature Language="C#" Value="public void SpeakSsml (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakSsml(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakSsml (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakSsml(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">말할 SSML 문자열입니다.</param>
        <summary>SSML 태그를 포함하는 <see cref="T:System.String" />을 동기적으로 말합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 콘텐츠는 `textToSpeak` 매개 변수를 포함 해야 합니다는 `speak` 요소 따라야 합니다는 [음성 합성 Markup Language (SSML) 버전 1.0](http://go.microsoft.com/fwlink/?LinkId=201763)합니다. 자세한 내용은 참조 [음성 합성 태그 언어 참조](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94)합니다.  
  
 SSML 태그를 포함 하는 문자열에 비동기적으로 발표를 사용 하 여는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> 메서드. 사용할 수 있습니다 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> 동기 말하기 SSML 태그를 포함 하지 않는 문자열의 시작 하도록 합니다.  
  
 이 메서드를 호출 하는 동안는 <xref:System.Speech.Synthesis.SpeechSynthesizer> 다음 이벤트를 발생 시킬 수 있습니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>. 신시사이저의 말하는 상태가 변경 될 때 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>. 신시사이저 음성 생성이 시작 될 때 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>. 문자 또는 음성 언어로 신중한 소리를 구성 하는 문자 조합이 신시사이저에 도달할 때마다를 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>. 단어를 말할 신시사이저 완료 될 때마다 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>. 음성된 출력에서 입 또는 음성을 생성 하는 데 사용 안 면 업무를 줄이고의 위치 변경 해야 할 때마다를 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>. 신시사이저 프롬프트에서 책갈피를 발견할 때 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>. 음성 신시사이저에 대 한 변경 될 때 발생 합니다.  
  
 <xref:System.Speech.Synthesis.SpeechSynthesizer> 발생 하지 않습니다는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> 처리 하는 동안 이벤트는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> 메서드.  
  
   
  
## Examples  
 다음 예제에서는 날짜를 렌더링 1/29/2009 년 순서, 월, 일의 날짜로 합니다.  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsml(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsmlAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakSsmlAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakSsmlAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakSsmlAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakSsmlAsync(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">언급할 SMML 태그입니다.</param>
        <summary>SSML 태그를 포함하는 <see cref="T:System.String" />을 비동기적으로 말합니다.</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 콘텐츠는 `textToSpeak` 매개 변수를 포함 해야 합니다는 `speak` 요소 따라야 합니다는 [음성 합성 Markup Language (SSML) 버전 1.0](http://go.microsoft.com/fwlink/?LinkId=201763)합니다. 자세한 내용은 참조 [음성 합성 태그 언어 참조](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94)합니다.  
  
 으로 동기적으로 언급 해야 할 SSML 태그를 포함 하는 문자열을 사용 하 여는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> 메서드. 사용할 수 있습니다 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> SSML 태그를 포함 하지 않는 문자열의 비동기 대화를 시작 하도록 합니다.  
  
 이 메서드를 호출 하는 동안는 <xref:System.Speech.Synthesis.SpeechSynthesizer> 다음 이벤트를 발생 시킬 수 있습니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>. 신시사이저의 말하는 상태가 변경 될 때 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>. 신시사이저 음성 생성이 시작 될 때 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>. 문자 또는 음성 언어로 신중한 소리를 구성 하는 문자 조합이 신시사이저에 도달할 때마다를 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>. 단어를 말할 신시사이저 완료 될 때마다 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>. 음성된 출력에서 입 또는 음성을 생성 하는 데 사용 안 면 업무를 줄이고의 위치 변경 해야 할 때마다를 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>. 신시사이저 프롬프트에서 책갈피를 발견할 때 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>. 음성 신시사이저에 대 한 변경 될 때 발생 합니다.  
  
-   <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>. 신시사이저 처리 완료 될 때 발생 한 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> 작업 합니다.  
  
 응용 프로그램 dos가 필요 없는 말하는 동안 작업을 수행 하는 경우 사용할 수 있습니다는 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> 또는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> 음성을 동기적으로 생성 하는 메서드.  
  
   
  
## Examples  
  
```  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsmlAsync(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakStarted As EventHandler(Of SpeakStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakStartedEventArgs ^&gt; ^ SpeakStarted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />가 프롬프트를 말하기 시작할 때 발생했습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.SpeechSynthesizer> 처리를 사용 하 여 프롬프트를 시작 하면이 이벤트가 <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, 또는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> 메서드.  
  
 <xref:System.Speech.Synthesis.SpeakStartedEventArgs> 클래스 속성이 없는 있으며에서 데이터를 반환 하지 않는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> 이벤트입니다. 사용에 대 한 이벤트 처리기를 작성 하는 응용 프로그램 작성자에 게 제공 됩니다는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> 이벤트입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.SynthesizerState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.SynthesizerState State" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As SynthesizerState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::SynthesizerState State { System::Speech::Synthesis::SynthesizerState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.SynthesizerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 개체의 현재 말하기 상태를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 개체의 현재 말하기 상태를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 새 상태를 가져오려면는 <xref:System.Speech.Synthesis.SpeechSynthesizer> 변경 될 후 사용 하 여는 <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> 의 속성은 <xref:System.Speech.Synthesis.StateChangedEventArgs> 클래스.  
  
   
  
## Examples  
 다음 예제에서는의 상태는 <xref:System.Speech.Synthesis.SpeechSynthesizer> 이전, 도중 및 프롬프트를 읽은 후 합니다.  
  
```csharp  
using System;  
using System.Threading;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer() ;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the SpeakProgress event.         
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Write the state of the SpeechSynthesizer to the console.  
      Console.WriteLine("Current Synthesizer state: " + synth.State + "\n");  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      // Write the state of the SpeechSynthesizer to the console while it is speaking.  
      Thread.Sleep(1000);  
      Console.WriteLine("\n - Current Synthesizer state: " + synth.State + " - \n");  
  
      // Write the state of the SpeechSynthesizer to the console after it is done speaking.  
      Thread.Sleep(2000);  
      Console.WriteLine("\nCurrent Synthesizer state: " + synth.State);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler(Of StateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::StateChangedEventArgs ^&gt; ^ StateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />의 상태가 변경될 때 발생했습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.SpeechSynthesizer> 이 이벤트를 발생 시킵니다 때 해당 말하기 <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> 변경 합니다. 예 및 이벤트와 연결 된 데이터에 대 한 자세한 내용은 참조 <xref:System.Speech.Synthesis.StateChangedEventArgs>합니다.  
  
 일시 중지 되 고 음성 합성을 다시 시작을 사용 하 여는 <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> 및 <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="VisemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisemeReached As EventHandler(Of VisemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VisemeReachedEventArgs ^&gt; ^ VisemeReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>viseme가 달성될 때 발생했습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 viseme는는 음소 발음 입 및 글꼴의 기본 위치입니다. Visemes 음소의 시각적 표시 됩니다.  
  
 System.Speech 영어 (미국), 하나 이상의 음소에 해당 하는 각각 visemes 21을 지원 합니다.  <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> 이벤트에 도달 하면 새 음소에 도달 하면 이전 음소 보다 다른 해당 viseme에 있을 때 발생 합니다. 일부 visemes 둘 이상의 음소 수준이 초과 <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> 에 도달 하면 다음 음소 이전 음소도 동일한 viseme에 해당 하는 경우 이벤트가 생성 되지 않습니다. 음성을 "이 영역이"에 대 한 예를 들어 한 <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> "this"의 "s" 및 "영역"에 "z"에 대 한 이벤트가 발생 합니다. 그러나는 <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> 동일한 viseme로 "this"의 "s"에 해당 하므로 "영역"에 "z"에 대 한 이벤트가 발생 하지 않습니다.  
  
 다음은 21 SAPI 음소 및 영어 (미국) viseme에 해당 하는 음소 그룹의 목록입니다.  
  
|Viseme|Phoneme(s)|  
|------------|------------------|  
|0|대기|  
|1|ae ax, 아|  
|2|aa|  
|3|ao|  
|4|입력란, eh, 음|  
|5|er|  
|6|y "," iy "," 면 "," ix|  
|7|w, uw|  
|8|ow|  
|10|aw|  
|10|oy|  
|11|ay|  
|12|h|  
|13|r|  
|14|l|  
|15|s, z|  
|16|sh, 채널, jh, 글꼴|  
|17|dh 일|  
|18|f, v|  
|19|d, t, n|  
|20|k, g, ng|  
|21|p, b, m|  
  
 와 연결 된 데이터에 대 한 내용은 `VisemeReached` 이벤트 참조 <xref:System.Speech.Synthesis.VisemeReachedEventArgs>합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Voice">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.VoiceInfo Voice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.VoiceInfo Voice" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Voice As VoiceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::VoiceInfo ^ Voice { System::Speech::Synthesis::VoiceInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 개체의 현재 음성에 대한 정보를 가져옵니다.</summary>
        <value>
          <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 개체의 현재 음성에 대한 정보를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 초기화할 새 <xref:System.Speech.Synthesis.SpeechSynthesizer>, 기본 시스템 음성을 사용 합니다. 구성 하는 <xref:System.Speech.Synthesis.SpeechSynthesizer> 를 하는 설치 된 음성 합성 음성 중 하나를 사용 하도록 개체는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> 또는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> 메서드. 설치 된 음성에 대 한 정보를 가져오려면는 <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> 메서드 및 <xref:System.Speech.Synthesis.VoiceInfo> 클래스입니다.  
  
   
  
## Examples  
 다음 예제에서는의 인스턴스를 초기화 합니다. <xref:System.Speech.Synthesis.SpeechSynthesizer> 현재 음성에 대 한 정보를 가져옵니다.  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Get information about supported audio formats.  
        string AudioFormats = "";  
        foreach (SpeechAudioFormatInfo fmt in synth.Voice.SupportedAudioFormats)  
        {  
          AudioFormats += String.Format("{0}\n",  
          fmt.EncodingFormat.ToString());  
        }  
  
        // Write information about the voice to the console.  
        Console.WriteLine(" Name:          " + synth.Voice.Name);  
        Console.WriteLine(" Culture:       " + synth.Voice.Culture);  
        Console.WriteLine(" Age:           " + synth.Voice.Age);  
        Console.WriteLine(" Gender:        " + synth.Voice.Gender);  
        Console.WriteLine(" Description:   " + synth.Voice.Description);  
        Console.WriteLine(" ID:            " + synth.Voice.Id);  
        if (synth.Voice.SupportedAudioFormats.Count != 0)  
        {  
          Console.WriteLine(" Audio formats: " + AudioFormats);  
        }  
        else  
        {  
          Console.WriteLine(" No supported audio formats found");  
        }  
  
        // Get additional information about the voice.  
        string AdditionalInfo = "";  
        foreach (string key in synth.Voice.AdditionalInfo.Keys)  
        {  
          AdditionalInfo += String.Format("  {0}: {1}\n",  
            key, synth.Voice.AdditionalInfo[key]);  
        }  
  
        Console.WriteLine(" Additional Info - " + AdditionalInfo);  
        Console.WriteLine();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </Member>
    <Member MemberName="VoiceChange">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VoiceChange As EventHandler(Of VoiceChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VoiceChangeEventArgs ^&gt; ^ VoiceChange;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />의 보이스가 변경될 때 발생했습니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 예: 및 이벤트와 연결 된 데이터에 대 한 정보를 참조 하십시오. <xref:System.Speech.Synthesis.VoiceChangeEventArgs>합니다.  
  
 음성 변경할 수 있습니다 하는 <xref:System.Speech.Synthesis.SpeechSynthesizer> 함께 사용 하 여는 <xref:System.Speech.Synthesis.PromptBuilder>의 <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> 메서드 또는 <xref:System.Speech.Synthesis.SpeechSynthesizer>의 <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> 또는 <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> 메서드.  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public int Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Volume" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Volume { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 개체의 출력 볼륨을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />의 볼륨을 0에서 100까지로 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 예제에서는의 볼륨은 <xref:System.Speech.Synthesis.SpeechSynthesizer>신시사이저 음성 및 WAV 파일의 오디오 출력 합니다.  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Set the volume of the SpeechSynthesizer's ouput.  
        synth.Volume = 60;  
  
        // Build a prompt containing recorded audio and synthesized speech.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendAudio("C:\\Test\\WelcomeToContosoRadio.wav");  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>