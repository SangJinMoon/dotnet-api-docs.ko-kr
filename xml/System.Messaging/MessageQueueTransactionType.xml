<Type Name="MessageQueueTransactionType" FullName="System.Messaging.MessageQueueTransactionType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d74a7d6aebfcf29af3327476b47ea6226e3a816b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37646681" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum MessageQueueTransactionType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed MessageQueueTransactionType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueTransactionType" />
  <TypeSignature Language="VB.NET" Value="Public Enum MessageQueueTransactionType" />
  <TypeSignature Language="C++ CLI" Value="public enum class MessageQueueTransactionType" />
  <TypeSignature Language="F#" Value="type MessageQueueTransactionType = " />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="65677-101">메시지 큐 트랜잭션 형식을 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="65677-101">Specifies the type of a Message Queuing transaction.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65677-102">읽거나 오버 로드를 사용 하 여 메시지를 기록할 합니다 <xref:System.Messaging.MessageQueue> 클래스의 <xref:System.Messaging.MessageQueue.Send%2A> 또는 <xref:System.Messaging.MessageQueue.Receive%2A> 메서드 (포함 <xref:System.Messaging.MessageQueue.ReceiveById%2A> 및 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A>)를 사용 하는 `transactionType` 매개 변수를 상호 작용 하는 방법을 지정할 수 있습니다는 큐입니다.</span><span class="sxs-lookup"><span data-stu-id="65677-102">When you read or write a message using an overload of the <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.Send%2A> or <xref:System.Messaging.MessageQueue.Receive%2A> methods (including <xref:System.Messaging.MessageQueue.ReceiveById%2A> and <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A>) that takes a `transactionType` parameter, you can specify how you are interacting with the queue.</span></span> <span data-ttu-id="65677-103">`Automatic` 사용 하면 보내고 (예: 때 상호 작용 하는 데이터베이스 응용 프로그램을 사용 하 여) 외부 트랜잭션에서 수신 하는 동안 `Single` 단일 내부 메시지 큐 트랜잭션에 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="65677-103">`Automatic` enables you to send and receive from external transactions (such as when you are interacting with database applications), while `Single` is used for single internal Message Queuing transactions.</span></span>  
  
 <span data-ttu-id="65677-104">`None` 비트랜잭션 큐에 트랜잭션 메시지를 보내거나 트랜잭션 외부에서 트랜잭션 큐에서 메시지를 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="65677-104">`None` enables you to receive a message from a transactional queue outside of a transaction or send a transactional message to a non-transactional queue.</span></span> <span data-ttu-id="65677-105">예를 들어 단일 트랜잭션 내에서 전송 하는 여러 메시지를 라우팅할 때 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="65677-105">This is useful, for example, when routing several messages sent within a single transaction.</span></span>  
  
 <span data-ttu-id="65677-106">송신 또는 내부 트랜잭션이 아니라 메시지 큐 내부 트랜잭션을 사용 하 여 메시지를 수신 하려는 경우의 인스턴스를 만듭니다는 <xref:System.Messaging.MessageQueueTransaction> 클래스의 오버 로드에 전달 하는 <xref:System.Messaging.MessageQueue.Send%2A> 또는 <xref:System.Messaging.MessageQueue.Receive%2A> 를사용하는방법`transaction` 를 사용 하는 것이 아닌 매개 변수는 `transactionType` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="65677-106">If you want to send or receive a message using an internal Message Queuing transaction but not a single internal transaction, create an instance of the <xref:System.Messaging.MessageQueueTransaction> class and pass it into an overload of the <xref:System.Messaging.MessageQueue.Send%2A> or <xref:System.Messaging.MessageQueue.Receive%2A> methods that takes a `transaction` parameter rather than one that takes a `transactionType` parameter.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
    <altmember cref="M:System.Messaging.MessageQueue.Receive" />
    <altmember cref="T:System.Messaging.MessageQueueTransaction" />
  </Docs>
  <Members>
    <Member MemberName="Automatic">
      <MemberSignature Language="C#" Value="Automatic" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueTransactionType Automatic = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueTransactionType.Automatic" />
      <MemberSignature Language="VB.NET" Value="Automatic" />
      <MemberSignature Language="C++ CLI" Value="Automatic" />
      <MemberSignature Language="F#" Value="Automatic = 1" Usage="System.Messaging.MessageQueueTransactionType.Automatic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueTransactionType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="65677-107">MTS(Microsoft Transaction Server)나 COM+ 1.0 Services에 사용되는 트랜잭션 형식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65677-107">A transaction type used for Microsoft Transaction Server (MTS) or COM+ 1.0 Services.</span>
          </span>
          <span data-ttu-id="65677-108">MTS 트랜잭션 컨텍스트가 이미 있으면 메시지를 보내거나 받을 때 사용됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65677-108">If there is already an MTS transaction context, it will be used when sending or receiving the message.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueTransactionType None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueTransactionType.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Messaging.MessageQueueTransactionType.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueTransactionType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="65677-109">트랜잭션 작업이 수행되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65677-109">Operation will not be transactional.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Single">
      <MemberSignature Language="C#" Value="Single" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueTransactionType Single = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueTransactionType.Single" />
      <MemberSignature Language="VB.NET" Value="Single" />
      <MemberSignature Language="C++ CLI" Value="Single" />
      <MemberSignature Language="F#" Value="Single = 3" Usage="System.Messaging.MessageQueueTransactionType.Single" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueTransactionType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="65677-110">단일 내부 트랜잭션에 사용되는 트랜잭션 형식이 아닙니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65677-110">A transaction type used for single internal transactions.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>