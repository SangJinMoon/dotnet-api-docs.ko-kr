<Type Name="MessageQueueTransactionType" FullName="System.Messaging.MessageQueueTransactionType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="28b5d794aff856ad7232d9c89ff412bcbda60819" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36476623" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum MessageQueueTransactionType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed MessageQueueTransactionType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueTransactionType" />
  <TypeSignature Language="VB.NET" Value="Public Enum MessageQueueTransactionType" />
  <TypeSignature Language="C++ CLI" Value="public enum class MessageQueueTransactionType" />
  <TypeSignature Language="F#" Value="type MessageQueueTransactionType = " />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>메시지 큐 트랜잭션 형식을 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 읽기 또는 쓰기의 오버 로드를 사용 하는 메시지는 <xref:System.Messaging.MessageQueue> 클래스의 <xref:System.Messaging.MessageQueue.Send%2A> 또는 <xref:System.Messaging.MessageQueue.Receive%2A> 메서드 (포함 하 여 <xref:System.Messaging.MessageQueue.ReceiveById%2A> 및 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A>)를 사용 하는 `transactionType` 매개 변수를와 상호 작용 하는 방법을 지정할 수는 큐입니다. `Automatic` 사용 하면 동안 보내기 및 받기 (예: 때 데이터베이스 응용 프로그램 상호 작용) 외부 트랜잭션에서 수 `Single` 단일 내부 메시지 큐 트랜잭션에 사용 됩니다.  
  
 `None` 트랜잭션 외부에서 트랜잭션 큐에서 메시지를 받거나 트랜잭션 메시지가 비트랜잭션 큐로 보낼 수 있습니다. 예를 들어 단일 트랜잭션 내에서 전송 하는 여러 메시지를 라우트하는 경우 유용, 합니다.  
  
 메시지 큐 내부 트랜잭션이 내부 트랜잭션이 아니라를 사용 하 여 메시지를 받거나 보낼 하려는 경우의 인스턴스를 만듭니다는 <xref:System.Messaging.MessageQueueTransaction> 클래스의 오버 로드에 전달 하는 <xref:System.Messaging.MessageQueue.Send%2A> 또는 <xref:System.Messaging.MessageQueue.Receive%2A> 는 를사용하는메서드`transaction` 변수가 있는 아닌 매개 변수는 `transactionType` 매개 변수입니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
    <altmember cref="M:System.Messaging.MessageQueue.Receive" />
    <altmember cref="T:System.Messaging.MessageQueueTransaction" />
  </Docs>
  <Members>
    <Member MemberName="Automatic">
      <MemberSignature Language="C#" Value="Automatic" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueTransactionType Automatic = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueTransactionType.Automatic" />
      <MemberSignature Language="VB.NET" Value="Automatic" />
      <MemberSignature Language="C++ CLI" Value="Automatic" />
      <MemberSignature Language="F#" Value="Automatic = 1" Usage="System.Messaging.MessageQueueTransactionType.Automatic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueTransactionType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>MTS(Microsoft Transaction Server)나 COM+ 1.0 Services에 사용되는 트랜잭션 형식입니다. MTS 트랜잭션 컨텍스트가 이미 있으면 메시지를 보내거나 받을 때 사용됩니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueTransactionType None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueTransactionType.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Messaging.MessageQueueTransactionType.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueTransactionType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>트랜잭션 작업이 수행되지 않습니다.</summary>
      </Docs>
    </Member>
    <Member MemberName="Single">
      <MemberSignature Language="C#" Value="Single" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueTransactionType Single = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueTransactionType.Single" />
      <MemberSignature Language="VB.NET" Value="Single" />
      <MemberSignature Language="C++ CLI" Value="Single" />
      <MemberSignature Language="F#" Value="Single = 3" Usage="System.Messaging.MessageQueueTransactionType.Single" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueTransactionType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>단일 내부 트랜잭션에 사용되는 트랜잭션 형식이 아닙니다.</summary>
      </Docs>
    </Member>
  </Members>
</Type>