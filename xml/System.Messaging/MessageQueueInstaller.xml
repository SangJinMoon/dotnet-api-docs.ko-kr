<Type Name="MessageQueueInstaller" FullName="System.Messaging.MessageQueueInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2169da977692b3e7ae0fe99175aa7991d83a31df" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460837" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageQueueInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueueInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueueInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueueInstaller : System::Configuration::Install::ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>응용 프로그램을 실행하는 데 필요한 큐를 설치하고 구성할 수 있도록 합니다. 이 클래스는 <see cref="T:System.Messaging.MessageQueue" />를 설치할 때 InstallUtil.exe와 같은 설치 유틸리티에서 호출됩니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueInstaller> 설치 유틸리티 큐와 연결 된 레지스트리 값을 기록 하는 데 사용 합니다. 설치 유틸리티에 대 한 자세한 내용은 참조 [Installutil.exe (설치 관리자 도구)](~/docs/framework/tools/installutil-exe-installer-tool.md)합니다.  
  
 큐를 설치 하려면에서 상속 되는 프로젝트 설치 관리자 클래스를 만듭니다는 <xref:System.Configuration.Install.Installer>를 설정 하 고는 <xref:System.ComponentModel.RunInstallerAttribute> 를 클래스에 대 한 `true`합니다. 프로젝트 내에서 작성 한 <xref:System.Messaging.MessageQueueInstaller> 인스턴스 설치에 각 큐에 대 한 및 프로젝트 설치 관리자 클래스에 인스턴스를 추가 합니다.  
  
 만들 때 한 <xref:System.Messaging.MessageQueueInstaller> 인스턴스에 전달할 수 있습니다 필요에 따라 기존 <xref:System.Messaging.MessageQueue> (예를 들어 테스트 서버)에서는 <xref:System.Messaging.MessageQueueInstaller.%23ctor%2A> 생성자입니다. 이 방법은 전달 된 큐의 설정이 복사 하 여 새 큐에 대 한 구성 설정을 자동으로 제공 합니다. 속성을 수동으로 설정할 수 또는 <xref:System.Messaging.MessageQueueInstaller> 인스턴스 상태 및 기본 생성자를 호출 합니다.  
  
 설치 유틸리티를 호출할 때 찾습니다는 <xref:System.ComponentModel.RunInstallerAttribute>합니다. 이 경우 `true`, 유틸리티 설치에 있는 모든 큐는 <xref:System.Configuration.Install.Installer.Installers%2A> 프로젝트 설치 관리자와 연결 된 컬렉션입니다. 경우 <xref:System.ComponentModel.RunInstallerAttribute> 은 `false`, 유틸리티 프로젝트 설치 관리자를 무시 합니다.  
  
 다른 속성을 수정는 <xref:System.Messaging.MessageQueueInstaller> 앞 이나 뒤에 인스턴스를 추가 하는 인스턴스는 <xref:System.Configuration.Install.Installer.Installers%2A> 프로젝트 설치 관리자의 컬렉션입니다. 예를 들어 큐의 <xref:System.Messaging.MessageQueue.Path%2A> 설치 유틸리티를 실행 하기 전에 설정 해야 합니다.  
  
 일반적으로 호출 하지 않으면의 메서드는 <xref:System.Messaging.MessageQueueInstaller> 에서; 코드 내에서 일반적으로에서 호출 installutil.exe 설치 유틸리티입니다. 유틸리티를 자동으로 호출 된 <xref:System.Messaging.MessageQueueInstaller.Install%2A> 설치 프로세스 및 호출 하는 동안 메서드 <xref:System.Messaging.MessageQueueInstaller.Commit%2A> 설치 예외를 throw 하지 않은 경우. 백업를 필요에 따라 호출 하 여 <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> 예외를 생성 하는 개체입니다.  
  
 응용 프로그램의 설치 루틴 프로젝트 설치 관리자를 사용 하 여 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> 자동으로 설치 되어 있는 구성 요소에 대 한 정보를 유지 관리 합니다. 이 상태 정보는 각 업데이트 지속적으로 <xref:System.Messaging.MessageQueueInstaller> 유틸리티 인스턴스를 설치 합니다. 일반적으로 명시적으로 상태 정보를 수정 하는 코드에 대 한 필요는 없습니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Messaging.MessageQueueInstaller" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Messaging.MessageQueueInstaller" /> 클래스의 새 인스턴스를 초기화합니다. 인스턴스의 속성은 설정되지 않습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller (System.Messaging.MessageQueue componentToCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Messaging.MessageQueue componentToCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (componentToCopy As MessageQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller(System::Messaging::MessageQueue ^ componentToCopy);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="componentToCopy" Type="System.Messaging.MessageQueue" />
      </Parameters>
      <Docs>
        <param name="componentToCopy">
          <see cref="T:System.Messaging.MessageQueue" /> 구성 요소이며, 이 구성 요소의 설정이 설치될 새 큐의 속성 설정을 결정합니다.</param>
        <summary>
          <see cref="T:System.Messaging.MessageQueueInstaller" /> 클래스의 새 인스턴스를 초기화하고, 설치에 대한 설정을 기존 <see cref="T:System.Messaging.MessageQueue" /> 인스턴스의 설정으로 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public bool Authenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticate" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Authenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>설치될 큐에서 인증된 메시지만 허용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          큐가 인증된 메시지만 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인증 된 메시지만 허용 하는 큐로 인증 되지 않은 메시지를 보낼 때 메시지가 거부 됩니다. 보내는 응용 프로그램을 설정 하 여 메시지를 보낸에 대 한 알림을 요청할 수는 <xref:System.Messaging.Message.AcknowledgeType%2A> 메시지에 대 한 합니다. 그렇지 않으면 표시가 없습니다 메시지가 거부 된 배달 못 한 편지 큐로 송신할 하지 않으면 메시지가 손실 될 수 있도록 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BasePriority">
      <MemberSignature Language="C#" Value="public short BasePriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 BasePriority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.BasePriority" />
      <MemberSignature Language="VB.NET" Value="Public Property BasePriority As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short BasePriority { short get(); void set(short value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>네트워크를 통해 공개 큐의 메시지를 라우팅하는 데 사용되는 기본 우선 순위를 가져오거나 설정합니다.</summary>
        <value>공개 큐에 보내진 모든 메시지에 대한 단일 기본 우선 순위입니다. 기본값은 0입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> 네트워크를 통해 큐의 메시지 라우팅에 사용 됩니다. 사용 된 <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> 다른 큐로 보낸 메시지에 대 한 보다 낮은 우선 순위 또는 더 높은 큐로 전송 된 메시지를 제공 합니다. 큐의 기본 우선 순위 설정 된 경우 받은 모든 메시지 우선 순위가 낮은 기본 큐로 전송 된 메시지의 보다 높은 우선 순위가 지정 됩니다. 큐의 기본 우선 순위는 큐에서 메시지를 읽는 방법 또는 큐에서 메시지 순서나 효과가 없습니다.  
  
 <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> 공개 큐에만 도메인 컨트롤러를 통해 액세스할 수 있는 적용 됩니다 (즉, 공개 형식 이름 사용). 공개 큐를 직접 액세스 및 개인 큐의 기본 우선 순위는 항상 0입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public Guid Category { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Category" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Category" />
      <MemberSignature Language="VB.NET" Value="Public Property Category As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Category { Guid get(); void set(Guid value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.GuidConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>구현에 관련된 큐 형식을 가져오거나 설정합니다.</summary>
        <value>응용 프로그램에서 큐의 사용 방법에 따라 큐를 분류할 수 있게 해주는 큐 범주 또는 메시지 큐 형식 식별자를 나타내는 <see cref="T:System.Guid" />입니다. 기본값은 <see langword="Guid.empty" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 큐 범주에는 응용을 프로그램을 사용 하는 방법에 따라 연결 된 큐를 분류할 수 있습니다. <xref:System.Messaging.MessageQueue.Category%2A> null 참조일 수 있습니다. 새 범주를 정의할 수 있습니다.  
  
 <xref:System.Messaging.MessageQueue.Category%2A> 속성은 메시지 큐 유형 식별자 속성으로, 특정 큐에 연결 되며은 읽기/쓰기에 대 한 액세스를 제공 합니다. 사용할 수는 <xref:System.Guid.NewGuid%2A> 모든 고유 하 게 보장 되는 범주 값을 생성 하는 메서드 <xref:System.Guid> 값입니다. 그러나 다른 범주에서가 아니라 다른 모든 구별 되도록 범주 값에만 필요는 <xref:System.Guid> 값입니다. 예를 들어, 설정할 수는 <xref:System.Messaging.MessageQueue.Category%2A> 큐}의 한 그룹 및 <xref:System.Messaging.MessageQueue.Category%2A> 를 다른 그룹에 대 한 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit(System::Collections::IDictionary ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">컴퓨터의 설치 후 상태가 들어 있는 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <summary>
          <see cref="T:System.Messaging.MessageQueue" /> 메서드가 레지스트리에 쓴 <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" /> 설치 정보를 커밋하여 설치 과정을 완료합니다. 이 메서드는 자동으로 적합한 메서드를 호출하는 설치 도구에서 사용됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 호출 하지 않으면의 메서드는 <xref:System.Messaging.MessageQueueInstaller> 에서; 코드 내에서 일반적으로에서 호출 installutil.exe 설치 유틸리티입니다. 유틸리티를 자동으로 호출 된 <xref:System.Messaging.MessageQueueInstaller.Install%2A> 설치 과정에서 메서드. 설치는 설치 하는 동안 설치 프로젝트 부분이 있으면 오류가 있으면 이전에 설치 된 모든 구성 요소가 롤백됩니다 설치 이전 상태로 트랜잭션. 각 구성 요소를 호출 하 여 이렇게 <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> 메서드.  
  
 설치 프로젝트와 연결 된 모든 구성 요소의 설치 완료 후 발생 한 설치 유틸리티 설치 커밋합니다. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> 설치를 완료 된 <xref:System.Messaging.MessageQueue> 큐를 적절 한 초기 상태로 설정 하 여 합니다. 큐에서 지정 하는 경우는 <xref:System.Messaging.MessageQueueInstaller.Path%2A> 속성이 이미 존재 하며 메시지가 포함 된 <xref:System.Messaging.MessageQueueInstaller.Commit%2A> 해당 메시지를 제거 합니다. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>를 대신 <xref:System.Messaging.MessageQueueInstaller.Install%2A>, 메시지를 롤백할 수 없으므로 해당 메시지를 제거 합니다.  
  
 응용 프로그램의 설치 루틴 프로젝트 설치 관리자를 사용 하 여 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> 자동으로 설치 되어 있는 구성 요소에 대 한 정보를 유지 관리 합니다. 에 전달 되는이 상태 정보 <xref:System.Messaging.MessageQueueInstaller.Commit%2A> 로 `savedState` 유틸리티 커밋하면 각 매개 변수는 계속 업데이트 <xref:System.Messaging.MessageQueueInstaller> 인스턴스. 일반적으로 코드의 명시적으로이 상태 정보를 수정할 필요는 없습니다. 큐를 확보 한 경우 <xref:System.Messaging.MessageQueueInstaller.Commit%2A> 로그 항목을 게시는 `savedState` 설치와 연결 된 합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <see cref="T:System.ComponentModel.IComponent" />의 템플릿으로 사용할 <see cref="T:System.Messaging.MessageQueueInstaller" />입니다.</param>
        <summary>설치하는 동안 메시지 큐에 필요한 <see cref="T:System.Messaging.MessageQueue" /> 구성 요소의 속성 값을 복사합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 호출 하지 않으면의 메서드는 <xref:System.Messaging.MessageQueueInstaller> 에서; 코드 내에서 일반적으로에서 호출 installutil.exe 설치 유틸리티입니다. <xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> 설치 유틸리티에 대 한 속성 값을 설정 하는 데 사용 되는 <xref:System.Messaging.MessageQueueInstaller> 기존 값에 <xref:System.Messaging.MessageQueue>합니다.  
  
 경우는 <xref:System.Messaging.MessageQueue.Path%2A> 의 <xref:System.Messaging.MessageQueue> 즉에 전달 하는 것은 빈 문자열 ("")를 설정 해야 합니다는 <xref:System.Messaging.MessageQueue.Path%2A> 속성을 비어 있지 않은 값 설치 관리자를 실행 하기 전에.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">이 <see cref="T:System.Messaging.MessageQueueInstaller" />와 관련된 구성 요소가 <see cref="T:System.Messaging.MessageQueue" />가 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptionRequired">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionRequired EncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionRequired EncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.EncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionRequired As EncryptionRequired" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionRequired EncryptionRequired { System::Messaging::EncryptionRequired get(); void set(System::Messaging::EncryptionRequired value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionRequired</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>큐에서 개인 메시지 또는 암호화된 메시지만 허용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>큐에 보낼 메시지에 필요한 암호화 수준을 나타내는 <see cref="T:System.Messaging.EncryptionRequired" /> 값 중 하나입니다. 기본값은 <see langword="Optional" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 암호화 지정 된 경우,만 <xref:System.Messaging.Message.Body%2A> 메시지를 암호화 합니다. 다른 속성을 같은 <xref:System.Messaging.Message.Label%2A>, 암호화 되지 않습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">커밋, 롤백 또는 제거 작업 수행에 필요한 정보를 저장하는 데 사용되는 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <summary>설치를 수행하고 레지스트리에 메시지 큐 정보를 씁니다. 이 메서드는 자동으로 적합한 메서드를 호출하는 설치 도구에서 사용됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueInstaller.Install%2A> 메시지 큐 정보를 레지스트리에 씁니다 메서드와 연결 된 <xref:System.Messaging.MessageQueue> 에서 지정 된 경로에 있는 큐를 사용 하 여 인스턴스는 <xref:System.Messaging.MessageQueueInstaller.Path%2A> 속성입니다. 큐가 아직 없는 경우 <xref:System.Messaging.MessageQueueInstaller.Install%2A> 트랜잭션 큐를 만듭니다. <xref:System.Messaging.MessageQueueInstaller.Install%2A> 에 지정 된 기존 또는 새 큐 속성을 설정 합니다.는 <xref:System.Messaging.MessageQueueInstaller>합니다. 큐가 있는 경우 해당 속성의 다시 설정 됩니다는 <xref:System.Messaging.MessageQueueInstaller>합니다. 기존 큐를 트랜잭션 없으면 삭제 되어 트랜잭션 큐가 다시 만들어집니다.  
  
> [!CAUTION]
>  큐를 다시 만드는 데 필요한 경우 큐에 메시지가 손실 됩니다.  
  
 일반적으로 호출 하지 않으면의 메서드는 <xref:System.Messaging.MessageQueueInstaller> 에서; 코드 내에서 일반적으로에서 호출 installutil.exe 설치 유틸리티입니다. 유틸리티를 자동으로 호출 된 <xref:System.Messaging.MessageQueueInstaller.Install%2A> 설치 되 고 메시지 큐와 연결 된 레지스트리 정보를 작성 하는 설치 과정 메서드. 설치는 설치 하는 동안 설치 프로젝트 부분이 있으면 오류가 있으면 이전에 설치 된 모든 구성 요소가 롤백됩니다 설치 이전 상태로 트랜잭션. 각 구성 요소를 호출 하 여 이렇게 <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> 메서드.  
  
 설치 프로젝트와 연결 된 모든 구성 요소의 설치 완료 후 발생 한 설치 유틸리티 설치 커밋합니다. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> 설치를 완료 된 <xref:System.Messaging.MessageQueue> 큐를 적절 한 초기 상태로 설정 하 여 합니다. 큐에서 지정 하는 경우는 <xref:System.Messaging.MessageQueueInstaller.Path%2A> 속성이 이미 존재 하며 메시지가 포함 된 <xref:System.Messaging.MessageQueueInstaller.Commit%2A> 해당 메시지를 제거 합니다. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>를 대신 <xref:System.Messaging.MessageQueueInstaller.Install%2A>, 메시지를 롤백할 수 없으므로 해당 메시지를 제거 합니다.  
  
 응용 프로그램의 설치 루틴 프로젝트 설치 관리자를 사용 하 여 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> 자동으로 설치 되어 있는 구성 요소에 대 한 정보를 유지 관리 합니다. 에 전달 되는이 상태 정보 <xref:System.Messaging.MessageQueueInstaller.Install%2A> 로 `stateSaver` 각 유틸리티 설치 매개 변수를 지속적으로 업데이트 됩니다 <xref:System.Messaging.MessageQueueInstaller> 인스턴스. 일반적으로 코드의 명시적으로이 상태 정보를 수정할 필요는 없습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller">비교할 설치 관리자입니다.</param>
        <summary>지정된 설치 관리자에서 해당 설치 관리자와 동일한 종류의 설치를 처리할 수 있는지 여부를 확인합니다.</summary>
        <returns>
          이 설치 관리자 및 <paramref name="otherInstaller" /> 매개 변수로 지정된 설치 관리자에서 같은 종류의 설치를 처리할 수 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 일반적으로 <xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A> 반환 `true` 이 설치 관리자와 설치 관리자에서 지정한 경우에는 `otherInstaller` 매개 변수는 동일한 형식입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>큐에 대한 설명을 가져오거나 설정합니다.</summary>
        <value>메시지 큐를 설명하는 레이블입니다. 기본값은 빈 문자열("")입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueue.Label%2A> 속성이 큐에서 고유할 필요는 없습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Messaging.MessageQueueInstaller.Label" />이 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumJournalSize">
      <MemberSignature Language="C#" Value="public long MaximumJournalSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumJournalSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumJournalSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumJournalSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumJournalSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>큐에 연결된 업무 일지의 최대 크기를 가져오거나 설정합니다.</summary>
        <value>큐에서 제거된 메시지를 기록하는 업무 일지 큐의 최대 크기(KB)입니다. 메시지 큐에서는 기본적으로 업무 일지 크기에 제한을 두지 않습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 큐를 만들 때 새 큐와 동일한 위치에 큐 저널을 만듭니다 자동으로 메시지 큐. 큐 저널 큐에서 제거 된 메시지를 추적에 사용 됩니다.  
  
 두 가지 유형의 메시지를 추적 되지 않은 상태로 유지: 해당 받는 시간 타이머 만료 되었기 때문에 큐에서 제거 된 프로그램과 큐에서 제거 합니다.  
  
 응용 프로그램은 업무 일지 큐에 메시지를 보낼 수 없습니다. 그러나 큐는 메시지는 더 이상 필요 없는 제거를 주기적으로 선택을 취소 해야 합니다. 메시지 큐가 상주 하는 컴퓨터에 대 한 할당량에 대해 업무 일지 큐 계산에 저장 합니다. (컴퓨터 할당량 관리자가 설정 됩니다.)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumQueueSize">
      <MemberSignature Language="C#" Value="public long MaximumQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumQueueSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumQueueSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumQueueSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>큐의 최대 크기를 가져오거나 설정합니다.</summary>
        <value>큐의 최대 크기입니다(단위: KB). 메시지 큐에서는 기본적으로 업무 일지 크기에 제한을 두지 않습니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 나중에 다시 설정할 수 있지만 최대 큐 크기는 일반적으로 큐를 만들 때 설정 됩니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MulticastAddress">
      <MemberSignature Language="C#" Value="public string MulticastAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MulticastAddress" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MulticastAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MulticastAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>MSMQ 3.0에서 도입되었습니다. 큐에 연결된 멀티캐스트 주소를 가져오거나 설정합니다.</summary>
        <value>아래 형식으로 된 올바른 멀티캐스트 주소가 들어 있는 <see cref="T:System.String" />이거나, 큐가 멀티캐스트 주소에 연결되지 않았음을 나타내는 <see langword="null" />입니다.  
  
```  
&lt;address&gt;:&lt;port&gt;  
```</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0이 설치되어 있지 않은 경우</exception>
        <altmember cref="P:System.Messaging.MessageQueue.MulticastAddress" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 개체가 참조하는 큐의 위치를 가져오거나 설정합니다.</summary>
        <value>네트워크에서 큐의 위치를 나타내는 경로입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 구문에서 <xref:System.Messaging.MessageQueue.Path%2A> 속성 유형에 따라 큐의 해당 참조 합니다. 다음 표에서 다양 한 종류의 큐에 사용 해야는 구문을 보여 줍니다.  
  
|큐 유형|구문|  
|----------------|------------|  
|공개 큐|`machineName`\\`queueName`|  
|개인 큐|`machineName`\\`Private$`\\`queueName`|  
|저널 큐|`machineName`\\`queueName`\\`Journal$`|  
|컴퓨터 저널 큐|`machineName`\\`Journal$`|  
|컴퓨터 배달 못 한 편지 큐|`machineName`\\`Deadletter$`|  
|컴퓨터 트랜잭션 배달 못 한 편지 큐|`machineName`\\`XactDeadletter$`|  
  
 사용 하 여 "." 로컬 컴퓨터에 대 한 합니다.  
  
 사용할 수도 있습니다는 <xref:System.Messaging.MessageQueue.FormatName%2A> 또는 <xref:System.Messaging.MessageQueue.Label%2A> 큐 경로 설명 하는 메시지 큐 응용 프로그램 개체입니다. 다음 표에서 각 형식의 참조에 대 한 적절 한 구문을 보여 줍니다.  
  
|참조|구문|  
|---------------|------------|  
|형식 이름|FormatName: [ *형식 이름을* ]|  
|레이블|Label:[ *label* ]|  
  
 큐를 정의 하는 형식 이름을 사용 해야 오프 라인으로 작업 하는 경우 <xref:System.Messaging.MessageQueue.Path%2A>합니다. 주 도메인 컨트롤러를 해결 하려면 사용할 수 없기 때문에 응용 프로그램 예외를 throw 합니다 하지 않으면는 <xref:System.Messaging.MessageQueue.Path%2A> 에 <xref:System.Messaging.MessageQueue.FormatName%2A>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">잘못된 구문 등의 이유로 인해 <see cref="P:System.Messaging.MessageQueueInstaller.Path" />에 잘못된 값이 설정된 경우  
  
 또는  
  
 <see cref="P:System.Messaging.MessageQueueInstaller.Path" />이 <see langword="null" />인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="Permissions">
      <MemberSignature Language="C#" Value="public System.Messaging.AccessControlList Permissions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.AccessControlList Permissions" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Permissions" />
      <MemberSignature Language="VB.NET" Value="Public Property Permissions As AccessControlList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AccessControlList ^ Permissions { System::Messaging::AccessControlList ^ get(); void set(System::Messaging::AccessControlList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AccessControlList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>큐에 연결된 권한을 가져오거나 설정합니다.</summary>
        <value>큐에 대해 부여할 권한 및 트러스티를 지정하는 액세스 제어 항목이 하나 이상 포함된 <see cref="T:System.Messaging.AccessControlList" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 공용 또는 개인 큐의 작성자에 게 모든 권한을 큐 속성, 사용 권한, 가져오고, 큐에 쓸 수 있는 권한이 모든 사용자는 도메인 그룹입니다. 메시지 큐는 현재 사용자와 현재 시도 된 작업에 적용 되는 찾을 때까지 차례로 각 사용 권한 목록 항목에 액세스 합니다. 운영 체제 사용 권한이 있는 사용자를 명시적으로 거부 하는 권한 보다 우선 하는 대로 다음을 허용 하면 됩니다.  
  
 생성할 때는 <xref:System.Messaging.MessageQueueInstaller.Permissions%2A> 속성을 추가 <xref:System.Messaging.AccessControlEntry> 인스턴스 여 <xref:System.Messaging.AccessControlList> 컬렉션입니다. 각 액세스 제어 항목을 생성할 때 일반 또는 표준 액세스 권한을 지정할 수 있습니다. 큐에 대 한 권한은 다음의 조합이 포함 될 수 있습니다.  
  
-   삭제  
  
-   보안 읽기  
  
-   보안 쓰기  
  
-   동기화  
  
-   소유자 수정  
  
-   읽기  
  
-   Write  
  
-   실행  
  
-   필수  
  
-   모두  
  
-   없음  
  
 이러한 권한은 비트 OR를 사용 하 여 결합할 수 있는 비트 플래그 집합으로 구성 합니다.  
  
-   모든 권한  
  
-   메시지를 삭제 합니다.  
  
-   메시지를 수신 합니다.  
  
-   메시지 엿보기  
  
-   저널 메시지 받기  
  
-   큐 속성  
  
-   큐 속성 설정  
  
-   사용 권한 가져오기  
  
-   사용 권한 설정  
  
-   큐 소유권 가져오기  
  
-   메시지 작성  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">컴퓨터의 설치 전 상태가 들어 있는 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <summary>설치 프로시저에서 레지스트리에 쓴 큐 정보를 롤백하여 컴퓨터를 설치 이전 상태로 복구합니다. 이 메서드는 자동으로 적합한 메서드를 호출하는 설치 도구에서 사용됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> 취소할 때의 효과 <xref:System.Messaging.MessageQueueInstaller.Install%2A> 메서드. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> 설치 프로젝트의 모든 구성 요소 설치에 실패 하는 경우 호출 됩니다. <xref:System.Messaging.MessageQueueInstaller.Install%2A> 메서드를 만들거나 큐에 대 한 속성을 설정 합니다. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> 큐를 삭제 하거나, 설치 이전 값을 기존 큐의 속성을 기본값으로 다시 설정 합니다.  
  
 일반적으로 호출 하지 않으면의 메서드는 <xref:System.Messaging.MessageQueueInstaller> 에서; 코드 내에서 일반적으로에서 호출 InstallUtil.exe 설치 유틸리티입니다. 유틸리티를 자동으로 호출 된 <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> 메서드 변경 내용을 취소 하려면 설치 오류가 발생 한 후 설치 프로세스 이미 수행 합니다.  
  
 응용 프로그램의 설치 루틴 프로젝트 설치 관리자를 사용 하 여 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> 자동으로 설치 되어 있는 구성 요소에 대 한 정보를 유지 관리 합니다. 에 전달 되는이 상태 정보 <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> 로 `savedState` 유틸리티 롤업 매개 변수를 지속적으로 업데이트 됩니다 각 <xref:System.Messaging.MessageQueueInstaller> 인스턴스. 일반적으로 코드의 명시적으로이 상태 정보를 수정할 필요는 없습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Transactional">
      <MemberSignature Language="C#" Value="public bool Transactional { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Transactional" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Transactional" />
      <MemberSignature Language="VB.NET" Value="Public Property Transactional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Transactional { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>해당 큐가 트랜잭션의 일부로서 전달된 메시지만 허용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          해당 큐가 트랜잭션의 일부로서 전달된 메시지만 허용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 또는 트랜잭션을 사용 하지 않고 로컬 트랜잭션 큐에서 메시지를 검색할 수 있습니다. 트랜잭션 컨텍스트를 지정 하지 않으면 메시지 큐를 단일 내부 트랜잭션을 만듭니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">컴퓨터의 설치 후 상태가 들어 있는 <see cref="T:System.Collections.IDictionary" />입니다.</param>
        <summary>레지스트리에서 큐 정보를 제거하여 설치를 제거합니다. 이 메서드는 자동으로 적합한 메서드를 호출하는 설치 제거 도구에서 사용됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A> 은 `Remove`, <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> 큐와 연결 된도 삭제는 <xref:System.Messaging.MessageQueue>합니다.  
  
 일반적으로 호출 하지 않으면의 메서드는 <xref:System.Messaging.MessageQueueInstaller> 에서; 코드 내에서 일반적으로에서 호출 InstallUtil.exe 설치 유틸리티 (제거 모드에서). 유틸리티를 자동으로 호출 된 <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> 설치 사전 설치 하는 상태 들에 의해 영향을 받는 시스템의 부분을 복원 하려면 메서드. 여기에 제거 하 고 MessageQueue와 연결 된 레지스트리 정보를 삭제 합니다.  
  
 응용 프로그램의 설치 제거 루틴 프로젝트 설치 관리자의 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> 이미 제거 하는 구성 요소에 대 한 정보를 자동으로 유지 관리 합니다. 에 전달 되는이 상태 정보 <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> 로 `savedState` 유틸리티 제거 각 매개 변수를 지속적으로 업데이트 됩니다 <xref:System.Messaging.MessageQueueInstaller> 인스턴스. 일반적으로 코드의 명시적으로이 상태 정보를 수정할 필요는 없습니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>설치 제거 시 설치 관리자가 큐에 대해 수행할 작업(예: 큐 제거, 설치 이전 상태로 복구, 또는 현재 설치된 상태로 유지)을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Configuration.Install.UninstallAction" />가 제거될 때 큐를 어떤 상태로 둘 것인지를 나타내는 <see cref="T:System.Messaging.MessageQueue" /> 값 중 하나입니다. 기본값은 <see langword="Remove" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 큐를 설치 하면 기존 큐를 필요에 따라 사용할 수 있습니다. 이렇게 하면 큐 설치 이전 상태로 돌아갑니다 하거나 현재, 설치 후 상태로 유지 해야 하는지 여부를 결정 해야 합니다. 큐를 설치 이전 상태로 되돌리려는 경우에 설치 중에 큐에서 삭제 된 메시지는 복원 되지 않습니다. 연관 된 속성만 큐를 다시 설정할 수는 <xref:System.Messaging.MessageQueueInstaller> 사전 설치 값입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.UninstallAction" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>큐에서 검색된 메시지가 연결된 업무 일지 큐로 복사되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>
          큐에서 검색된 메시지가 업무 일지 큐에도 복사되도록 하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 저널 큐의 큐에서 가져온 후에 수 있습니다. 하지만 두 가지 유형의 메시지를 추적 되지 않은 유지: 해당 받는 시간이 타이머가 만료 되 면 큐에서 제거 된 하 고 큐에서 제거 하는 것입니다.  
  
 업무 일지 큐 지울 주기적으로 더 이상 필요 없는 메시지를 제거 합니다. 저널 큐 차지 저널이 있는 컴퓨터에 대 한 할당량에에서 저장 된 메시지입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>