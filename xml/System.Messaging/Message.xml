<Type Name="Message" FullName="System.Messaging.Message">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aca17eb5c1214cd7837f89c181242c98095e8144" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36477556" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Message : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Message extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.Message" />
  <TypeSignature Language="VB.NET" Value="Public Class Message&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class Message : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type Message = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Messaging.Design.MessageDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="acf18-101">Provides access to the properties needed to define a Message Queuing message.</span>
      <span class="sxs-lookup">
        <span data-stu-id="acf18-101">Provides access to the properties needed to define a Message Queuing message.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-102">사용 하 여는 <xref:System.Messaging.Message> 클래스는 큐에서 메시지를 받거나 피킹 하거나 큐에 메시지를 보낼 때 메시지 속성 세밀 하 게 제어 하도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-102">Use the <xref:System.Messaging.Message> class to peek or receive messages from a queue, or to have fine control over message properties when sending a message to a queue.</span></span>  
  
 <span data-ttu-id="acf18-103"><xref:System.Messaging.MessageQueue> 사용 하 여는 <xref:System.Messaging.Message> 관찰 합니다. 또는 큐에서 메시지를 수신 하기 때문에 클래스 모두는 <xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=nameWithType> 및 <xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=nameWithType> 메서드의 새 인스턴스를 만들고는 <xref:System.Messaging.Message> 클래스와 인스턴스 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-103"><xref:System.Messaging.MessageQueue> uses the <xref:System.Messaging.Message> class when it peeks or receives messages from queues, because both the <xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=nameWithType> and <xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=nameWithType> methods create a new instance of the <xref:System.Messaging.Message> class and set the instance's properties.</span></span> <span data-ttu-id="acf18-104"><xref:System.Messaging.Message> 클래스의 읽기 전용 속성은 읽기/쓰기 속성은 전송 및 메시지 검색에 적용 하는 동안에 큐에서 메시지를 검색에 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-104">The <xref:System.Messaging.Message> class's read-only properties apply to retrieving messages from a queue, while the read/write properties apply to sending and retrieving messages.</span></span> <span data-ttu-id="acf18-105">때 <xref:System.Messaging.MessageQueue> 관찰 합니다. 또는 큐에서 메시지를 받고 해당 <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> 속성 검색 되는 메시지의 속성을 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-105">When <xref:System.Messaging.MessageQueue> peeks or receives a message from a queue, its <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> property determines which of the message's properties are retrieved.</span></span>  
  
 <span data-ttu-id="acf18-106"><xref:System.Messaging.MessageQueue> 클래스의 <xref:System.Messaging.MessageQueue.Send%2A> 메서드를 해당 큐로 송신할 메시지에 대 한 모든 개체 형식을 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-106">The <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.Send%2A> method allows you to specify any object type for a message being sent to that queue.</span></span> <span data-ttu-id="acf18-107">사용할 수는 <xref:System.Messaging.MessageQueue> 인스턴스의 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 속성을 통해 큐에 전송 되는 제네릭 메시지에 대 한 설정을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-107">You can use the <xref:System.Messaging.MessageQueue> instance's <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property to specify settings for generic messages sent to the queue.</span></span> <span data-ttu-id="acf18-108">설정의 형식 포맷터, 레이블, 암호화 및 인증을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-108">The types of settings include formatter, label, encryption, and authentication.</span></span> <span data-ttu-id="acf18-109">에 대 한 적절 한 값을 지정할 수도 있습니다 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 승인 및 보고 메시지에 응답 하도록 메시징 응용 프로그램을 조정 하는 경우에 멤버입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-109">You can also specify values for the appropriate <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> members when you coordinate your messaging application to respond to acknowledgment and report messages.</span></span> <span data-ttu-id="acf18-110">사용 하는 <xref:System.Messaging.Message> 인스턴스 메시지를 보낼 큐에 액세스 하 고 이러한 속성 중 상당수 수정 유연성을 제공 — 단일 메시지 또는 메시지-메시지 별로 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-110">Using a <xref:System.Messaging.Message> instance to send a message to the queue gives you the flexibility to access and modify many of these properties—either for a single message or on a message-by-message basis.</span></span> <span data-ttu-id="acf18-111"><xref:System.Messaging.Message> 속성 보다 우선 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-111"><xref:System.Messaging.Message> properties take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>.</span></span>  
  
 <span data-ttu-id="acf18-112">메시지 데이터에 저장 됩니다는 <xref:System.Messaging.Message.Body%2A> 속성 및 어느 정도 <xref:System.Messaging.Message.AppSpecific%2A> 및 <xref:System.Messaging.Message.Extension%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-112">Message data is stored in the <xref:System.Messaging.Message.Body%2A> property and to a lesser extent, the <xref:System.Messaging.Message.AppSpecific%2A> and <xref:System.Messaging.Message.Extension%2A> properties.</span></span> <span data-ttu-id="acf18-113">메시지 데이터를 암호화, serialize 하거나 deserialize의 내용만 <xref:System.Messaging.Message.Body%2A> 속성에 영향을 받습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-113">When message data is encrypted, serialized, or deserialized, only the contents of the <xref:System.Messaging.Message.Body%2A> property are affected.</span></span>  
  
 <span data-ttu-id="acf18-114">내용을 <xref:System.Messaging.Message.Body%2A> 속성이 메시지를 보낼 때 사용 하 여 serialize 되는 <xref:System.Messaging.Message.Formatter%2A> 지정한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-114">The contents of the <xref:System.Messaging.Message.Body%2A> property are serialized when the message is sent, using the <xref:System.Messaging.Message.Formatter%2A> property you specify.</span></span> <span data-ttu-id="acf18-115">serialize 된 내용을 발견 되는 <xref:System.Messaging.Message.BodyStream%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-115">The serialized contents are found in the <xref:System.Messaging.Message.BodyStream%2A> property.</span></span> <span data-ttu-id="acf18-116">설정할 수도 있습니다는 <xref:System.Messaging.Message.BodyStream%2A> 속성을 직접 예를 들어, 메시지의 데이터 내용으로 파일을 보낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-116">You can also set the <xref:System.Messaging.Message.BodyStream%2A> property directly, for example, to send a file as the data content of a message.</span></span> <span data-ttu-id="acf18-117">변경할 수는 <xref:System.Messaging.Message.Body%2A> 또는 <xref:System.Messaging.Message.Formatter%2A> 메시지 및 데이터를 보내기 전에 언제 든 지 serialize 할 속성을 적절 하 게 호출 하는 경우 <xref:System.Messaging.MessageQueue.Send%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-117">You can change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> properties at any time before sending the message, and the data will be serialized appropriately when you call <xref:System.Messaging.MessageQueue.Send%2A>.</span></span>  
  
 <span data-ttu-id="acf18-118">정의 하는 속성은 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> 형식이 아닌 메시지에만 속성이 적용 <xref:System.Messaging.Message>합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-118">The properties defined by the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> property apply only to messages that are not of type <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="acf18-119">지정 하는 경우는 <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> 속성에 대 한는 <xref:System.Messaging.MessageQueue>, 동일한 이름의 속성으로는 <xref:System.Messaging.Message> 인스턴스가 전송 큐 야기 하는 기본 속성이 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-119">If you specify the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property for a <xref:System.Messaging.MessageQueue>, the identically named properties in a <xref:System.Messaging.Message> instance sent to that queue cause these default properties to be ignored.</span></span>  
  
 <span data-ttu-id="acf18-120">인스턴스에 대 한 초기 속성 값 목록은 <xref:System.Messaging.Message>, 참조는 <xref:System.Messaging.Message.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-120">For a list of initial property values for an instance of <xref:System.Messaging.Message>, see the <xref:System.Messaging.Message.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-121">다음 코드 예제에서는 서식을 사용 하 여 메시지 본문을 보여 줍니다. <xref:System.Messaging.BinaryMessageFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-121">The following code example demonstrates formatting a message body using <xref:System.Messaging.BinaryMessageFormatter>.</span></span>  
  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 <span data-ttu-id="acf18-122">다음 코드 예제에서는 서식을 사용 하 여 메시지 본문을 보여 줍니다. <xref:System.Messaging.XmlMessageFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-122">The following code example demonstrates formatting a message body using <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.DefaultPropertiesToSend" />
    <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
    <altmember cref="M:System.Messaging.MessageQueue.Receive" />
    <altmember cref="M:System.Messaging.MessageQueue.Peek" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-123">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-123">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Message ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Message.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Message();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="acf18-124">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class with an empty body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-124">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class with an empty body.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-125">이 오버 로드를 사용 하 여의 새 인스턴스를 만드는 <xref:System.Messaging.Message> 본문이 비어 있는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-125">Use this overload to create a new instance of the <xref:System.Messaging.Message> class that has an empty body.</span></span>  
  
 <span data-ttu-id="acf18-126">지정 된 <xref:System.Messaging.Message.Body%2A> 속성 또는 <xref:System.Messaging.Message.BodyStream%2A> 보내기 전에 속성은 <xref:System.Messaging.Message> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-126">Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object.</span></span> <span data-ttu-id="acf18-127"><xref:System.Messaging.Message.Body%2A> 속성 텍스트 문자열, 구조 개체, 클래스 인스턴스 또는 포함된 된 개체와 같은 serialize 할 수 있는 모든 개체 일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-127">The <xref:System.Messaging.Message.Body%2A> property can be any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.</span></span>  
  
 <span data-ttu-id="acf18-128">메시지의 내용을 직접 작성 하지 않는 경우는 <xref:System.Messaging.Message.BodyStream%2A> 속성 설정에서 <xref:System.Messaging.Message.Formatter%2A> 메시지를 보내기 전에 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-128">Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message.</span></span> <span data-ttu-id="acf18-129">사용 하 여 본문은 직렬화는 <xref:System.Messaging.Message.Formatter%2A> 시간에 대 한 속성의 값의 <xref:System.Messaging.MessageQueue.Send%2A> 메서드가 호출 되는 <xref:System.Messaging.MessageQueue> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="acf18-129">The body is serialized using the <xref:System.Messaging.Message.Formatter%2A> property's value at the time the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance.</span></span>  
  
 <span data-ttu-id="acf18-130"><xref:System.Messaging.XmlMessageFormatter> 는 느슨하게 결합 되어 있으므로이 형식을 사용 하는 경우에 발신자와 수신자 입력 동일한 개체를 설정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-130">The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</span></span> <span data-ttu-id="acf18-131"><xref:System.Messaging.ActiveXMessageFormatter> 및 <xref:System.Messaging.BinaryMessageFormatter> 이진 표현으로 데이터를 직렬화 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-131">The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation.</span></span> <span data-ttu-id="acf18-132"><xref:System.Messaging.ActiveXMessageFormatter> COM 구성 요소를 받거나 보낼 때 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-132">The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.</span></span>  
  
 <span data-ttu-id="acf18-133">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Messaging.Message>합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-133">The following table shows initial property values for an instance of <xref:System.Messaging.Message>.</span></span>  
  
|<span data-ttu-id="acf18-134">속성</span><span class="sxs-lookup"><span data-stu-id="acf18-134">Property</span></span>|<span data-ttu-id="acf18-135">초기 값</span><span class="sxs-lookup"><span data-stu-id="acf18-135">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.Message.AcknowledgeType%2A>|`AcknowledgeType.None`|  
|<xref:System.Messaging.Message.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.Message.AppSpecific%2A>|<span data-ttu-id="acf18-136">0</span><span class="sxs-lookup"><span data-stu-id="acf18-136">0</span></span>|  
|<xref:System.Messaging.Message.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.Message.AuthenticationProviderName%2A>|<span data-ttu-id="acf18-137">Microsoft Base Cryptographic Provider 버전 1.0</span><span class="sxs-lookup"><span data-stu-id="acf18-137">Microsoft Base Cryptographic Provider version 1.0</span></span>|  
|<xref:System.Messaging.Message.AuthenticationProviderType%2A>|`CryptoProviderType.RSA_FULL`|  
|<xref:System.Messaging.Message.Body%2A>|`null`|  
|<xref:System.Messaging.Message.BodyStream%2A>|`Stream.null`|  
|<xref:System.Messaging.Message.BodyType%2A>|<span data-ttu-id="acf18-138">0</span><span class="sxs-lookup"><span data-stu-id="acf18-138">0</span></span>|  
|<xref:System.Messaging.Message.ConnectorType%2A>|`Guid.Empty`|  
|<xref:System.Messaging.Message.CorrelationId%2A>|<span data-ttu-id="acf18-139">빈 문자열 ("")</span><span class="sxs-lookup"><span data-stu-id="acf18-139">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.DestinationSymmetricKey%2A>|<span data-ttu-id="acf18-140">바이트 길이가 0 인 배열</span><span class="sxs-lookup"><span data-stu-id="acf18-140">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.DigitalSignature%2A>|<span data-ttu-id="acf18-141">바이트 길이가 0 인 배열</span><span class="sxs-lookup"><span data-stu-id="acf18-141">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.Message.Extension%2A>|<span data-ttu-id="acf18-142">바이트 길이가 0 인 배열</span><span class="sxs-lookup"><span data-stu-id="acf18-142">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.Formatter%2A>|`XmlMessageFormatter`|  
|<xref:System.Messaging.Message.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.Message.Label%2A>|<span data-ttu-id="acf18-143">빈 문자열 ("")</span><span class="sxs-lookup"><span data-stu-id="acf18-143">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.Message.Recoverable%2A>|`false`|  
|<xref:System.Messaging.Message.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.Message.SenderCertificate%2A>|<span data-ttu-id="acf18-144">바이트 길이가 0 인 배열</span><span class="sxs-lookup"><span data-stu-id="acf18-144">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.Message.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.Message.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.Message.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseTracing%2A>|`false`|  
  
   
  
## Examples  
 <span data-ttu-id="acf18-145">다음 코드 예제에서는 서로 다른 우선의 두 메시지를 보내고 큐로 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-145">The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.</span></span>  
  
 [!code-cpp[Message.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CPP/message_defaultandpriority.cpp#1)]
 [!code-csharp[Message.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CS/message_defaultandpriority.cs#1)]
 [!code-vb[Message.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/VB/message_defaultandpriority.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.XmlMessageFormatter" />
        <altmember cref="P:System.Messaging.Message.Body" />
        <altmember cref="T:System.Messaging.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.MessageQueue" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Message (object body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Message.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (body As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Message(System::Object ^ body);" />
      <MemberSignature Language="F#" Value="new System.Messaging.Message : obj -&gt; System.Messaging.Message" Usage="new System.Messaging.Message body" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="body" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="acf18-146">The object to be serialized into the body of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-146">The object to be serialized into the body of the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acf18-147">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class, using the <see cref="T:System.Messaging.XmlMessageFormatter" /> to serialize the specified object into the body of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-147">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class, using the <see cref="T:System.Messaging.XmlMessageFormatter" /> to serialize the specified object into the body of the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-148">이 오버 로드를 사용 하 여의 새 인스턴스를 만드는 <xref:System.Messaging.Message> 클래스를 포함 하는 <xref:System.Messaging.Message.Body%2A> 에 지정 된는 `body` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-148">Use this overload to create a new instance of the <xref:System.Messaging.Message> class that contains the <xref:System.Messaging.Message.Body%2A> specified by the `body` parameter.</span></span> <span data-ttu-id="acf18-149">`body` 매개 변수는 텍스트 문자열, 구조 개체, 클래스 인스턴스 또는 포함된 된 개체와 같은 serialize 할 수 있는 모든 개체 일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-149">The `body` parameter can be any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.</span></span> <span data-ttu-id="acf18-150">사용 하 여 본문은 직렬화는 <xref:System.Messaging.XmlMessageFormatter> 변경 하지 않는 한는 <xref:System.Messaging.Message.Formatter%2A> 하기 전에 속성은 <xref:System.Messaging.Message> 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-150">The body is serialized using the <xref:System.Messaging.XmlMessageFormatter> unless you change the <xref:System.Messaging.Message.Formatter%2A> property before the <xref:System.Messaging.Message> is sent.</span></span> <span data-ttu-id="acf18-151">변경 하는 경우는 <xref:System.Messaging.Message.Body%2A> 또는 <xref:System.Messaging.Message.Formatter%2A> 언제 든 지 호출 하기 전에 속성 <xref:System.Messaging.MessageQueue.Send%2A>, 메시지가 새 속성 값에 따라 직렬화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-151">If you change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> property at any time before calling <xref:System.Messaging.MessageQueue.Send%2A>, the message will be serialized according to the new property value.</span></span>  
  
 <span data-ttu-id="acf18-152"><xref:System.Messaging.XmlMessageFormatter> 는 느슨하게 결합 되어 있으므로이 형식을 사용 하는 경우에 발신자와 수신자 입력 동일한 개체를 설정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-152">The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</span></span> <span data-ttu-id="acf18-153"><xref:System.Messaging.ActiveXMessageFormatter> 및 <xref:System.Messaging.BinaryMessageFormatter> 이진 표현으로 데이터를 직렬화 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-153">The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation.</span></span> <span data-ttu-id="acf18-154"><xref:System.Messaging.ActiveXMessageFormatter> COM 구성 요소를 받거나 보낼 때 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-154">The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.</span></span>  
  
 <span data-ttu-id="acf18-155">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Messaging.Message>합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-155">The following table shows initial property values for an instance of <xref:System.Messaging.Message>.</span></span>  
  
|<span data-ttu-id="acf18-156">속성</span><span class="sxs-lookup"><span data-stu-id="acf18-156">Property</span></span>|<span data-ttu-id="acf18-157">초기 값</span><span class="sxs-lookup"><span data-stu-id="acf18-157">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.Message.AcknowledgeType%2A>|`AcknowledgeType.None`|  
|<xref:System.Messaging.Message.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.Message.AppSpecific%2A>|<span data-ttu-id="acf18-158">0</span><span class="sxs-lookup"><span data-stu-id="acf18-158">0</span></span>|  
|<xref:System.Messaging.Message.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.Message.AuthenticationProviderName%2A>|<span data-ttu-id="acf18-159">Microsoft Base Cryptographic Provider 버전 1.0</span><span class="sxs-lookup"><span data-stu-id="acf18-159">Microsoft Base Cryptographic Provider version 1.0</span></span>|  
|<xref:System.Messaging.Message.AuthenticationProviderType%2A>|`CryptoProviderType.RSA_FULL`|  
|<xref:System.Messaging.Message.Body%2A>|<span data-ttu-id="acf18-160">`body` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-160">The `body` parameter.</span></span>|  
|<xref:System.Messaging.Message.BodyStream%2A>|`Stream.null`|  
|<xref:System.Messaging.Message.BodyType%2A>|<span data-ttu-id="acf18-161">0</span><span class="sxs-lookup"><span data-stu-id="acf18-161">0</span></span>|  
|<xref:System.Messaging.Message.ConnectorType%2A>|`Guid.Empty`|  
|<xref:System.Messaging.Message.CorrelationId%2A>|<span data-ttu-id="acf18-162">빈 문자열 ("")</span><span class="sxs-lookup"><span data-stu-id="acf18-162">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.DestinationSymmetricKey%2A>|<span data-ttu-id="acf18-163">바이트 길이가 0 인 배열</span><span class="sxs-lookup"><span data-stu-id="acf18-163">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.DigitalSignature%2A>|<span data-ttu-id="acf18-164">바이트 길이가 0 인 배열</span><span class="sxs-lookup"><span data-stu-id="acf18-164">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.Message.Extension%2A>|<span data-ttu-id="acf18-165">바이트 길이가 0 인 배열</span><span class="sxs-lookup"><span data-stu-id="acf18-165">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.Formatter%2A>|`XmlMessageFormatter`|  
|<xref:System.Messaging.Message.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.Message.Label%2A>|<span data-ttu-id="acf18-166">빈 문자열 ("")</span><span class="sxs-lookup"><span data-stu-id="acf18-166">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.Message.Recoverable%2A>|`false`|  
|<xref:System.Messaging.Message.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.Message.SenderCertificate%2A>|<span data-ttu-id="acf18-167">바이트 길이가 0 인 배열</span><span class="sxs-lookup"><span data-stu-id="acf18-167">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.Message.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.Message.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.Message.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseTracing%2A>|`false`|  
  
   
  
## Examples  
 <span data-ttu-id="acf18-168">다음 코드 예제에서는 새 큐를 만듭니다, 그리고에 주문이 포함 하 고 검색 하는 메시지를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-168">The following code example creates a new queue, sends a message that contains an order to it, and then retrieves it.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.XmlMessageFormatter" />
        <altmember cref="T:System.Messaging.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.MessageQueue" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Message (object body, System.Messaging.IMessageFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object body, class System.Messaging.IMessageFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Message.#ctor(System.Object,System.Messaging.IMessageFormatter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (body As Object, formatter As IMessageFormatter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Message(System::Object ^ body, System::Messaging::IMessageFormatter ^ formatter);" />
      <MemberSignature Language="F#" Value="new System.Messaging.Message : obj * System.Messaging.IMessageFormatter -&gt; System.Messaging.Message" Usage="new System.Messaging.Message (body, formatter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="body" Type="System.Object" />
        <Parameter Name="formatter" Type="System.Messaging.IMessageFormatter" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="acf18-169">The object to be serialized into the body of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-169">The object to be serialized into the body of the message.</span>
          </span>
        </param>
        <param name="formatter">
          <span data-ttu-id="acf18-170">A <see cref="T:System.Messaging.IMessageFormatter" /> that specifies the formatter with which to serialize the message body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-170">A <see cref="T:System.Messaging.IMessageFormatter" /> that specifies the formatter with which to serialize the message body.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acf18-171">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class using the specified formatter to serialize the specified object into the body of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-171">Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class using the specified formatter to serialize the specified object into the body of the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-172">이 오버 로드를 사용 하 여의 새 인스턴스를 만드는 <xref:System.Messaging.Message> 클래스를 포함 하는 <xref:System.Messaging.Message.Body%2A> 에 지정 된는 `body` 하 고 매개 변수를 사용 하 여 유효한 포맷터 본문을 serialize 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-172">Use this overload to create a new instance of the <xref:System.Messaging.Message> class that contains the <xref:System.Messaging.Message.Body%2A> specified by the `body` parameter and that uses any valid formatter to serialize the body.</span></span> <span data-ttu-id="acf18-173">`body` 매개 변수는 텍스트 문자열, 구조 개체, 클래스 인스턴스 또는 포함된 된 개체와 같은 serialize 할 수 있는 모든 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-173">The `body` parameter is any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.</span></span> <span data-ttu-id="acf18-174">변경 하는 경우는 <xref:System.Messaging.Message.Body%2A> 또는 <xref:System.Messaging.Message.Formatter%2A> 언제 든 지 호출 하기 전에 속성 <xref:System.Messaging.MessageQueue.Send%2A>, 메시지가 새 속성 값에 따라 직렬화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-174">If you change the <xref:System.Messaging.Message.Body%2A> or <xref:System.Messaging.Message.Formatter%2A> property at any time before calling <xref:System.Messaging.MessageQueue.Send%2A>, the message will be serialized according to the new property value.</span></span>  
  
 <span data-ttu-id="acf18-175"><xref:System.Messaging.XmlMessageFormatter> 는 느슨하게 결합 되어 있으므로이 형식을 사용 하는 경우에 발신자와 수신자 입력 동일한 개체를 설정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-175">The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</span></span> <span data-ttu-id="acf18-176"><xref:System.Messaging.ActiveXMessageFormatter> 및 <xref:System.Messaging.BinaryMessageFormatter> 이진 표현으로 데이터를 직렬화 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-176">The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation.</span></span> <span data-ttu-id="acf18-177"><xref:System.Messaging.ActiveXMessageFormatter> COM 구성 요소를 받거나 보낼 때 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-177">The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.</span></span>  
  
 <span data-ttu-id="acf18-178">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <xref:System.Messaging.Message>합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-178">The following table shows initial property values for an instance of <xref:System.Messaging.Message>.</span></span>  
  
|<span data-ttu-id="acf18-179">속성</span><span class="sxs-lookup"><span data-stu-id="acf18-179">Property</span></span>|<span data-ttu-id="acf18-180">초기 값</span><span class="sxs-lookup"><span data-stu-id="acf18-180">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.Message.AcknowledgeType%2A>|`AcknowledgeType.None`|  
|<xref:System.Messaging.Message.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.Message.AppSpecific%2A>|<span data-ttu-id="acf18-181">0</span><span class="sxs-lookup"><span data-stu-id="acf18-181">0</span></span>|  
|<xref:System.Messaging.Message.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.Message.AuthenticationProviderName%2A>|<span data-ttu-id="acf18-182">Microsoft Base Cryptographic Provider 버전 1.0</span><span class="sxs-lookup"><span data-stu-id="acf18-182">Microsoft Base Cryptographic Provider version 1.0</span></span>|  
|<xref:System.Messaging.Message.AuthenticationProviderType%2A>|`CryptoProviderType.RSA_FULL`|  
|<xref:System.Messaging.Message.Body%2A>|<span data-ttu-id="acf18-183">`body` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-183">The `body` parameter.</span></span>|  
|<xref:System.Messaging.Message.BodyStream%2A>|`Stream.null`|  
|<xref:System.Messaging.Message.BodyType%2A>|<span data-ttu-id="acf18-184">0</span><span class="sxs-lookup"><span data-stu-id="acf18-184">0</span></span>|  
|<xref:System.Messaging.Message.ConnectorType%2A>|`Guid.Empty`|  
|<xref:System.Messaging.Message.CorrelationId%2A>|<span data-ttu-id="acf18-185">빈 문자열 ("")</span><span class="sxs-lookup"><span data-stu-id="acf18-185">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.DestinationSymmetricKey%2A>|<span data-ttu-id="acf18-186">바이트 길이가 0 인 배열</span><span class="sxs-lookup"><span data-stu-id="acf18-186">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.DigitalSignature%2A>|<span data-ttu-id="acf18-187">바이트 길이가 0 인 배열</span><span class="sxs-lookup"><span data-stu-id="acf18-187">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.Message.Extension%2A>|<span data-ttu-id="acf18-188">바이트 길이가 0 인 배열</span><span class="sxs-lookup"><span data-stu-id="acf18-188">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.Formatter%2A>|<span data-ttu-id="acf18-189">`formatter` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-189">The `formatter` parameter.</span></span>|  
|<xref:System.Messaging.Message.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.Message.Label%2A>|<span data-ttu-id="acf18-190">빈 문자열 ("")</span><span class="sxs-lookup"><span data-stu-id="acf18-190">An empty string ("")</span></span>|  
|<xref:System.Messaging.Message.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.Message.Recoverable%2A>|`false`|  
|<xref:System.Messaging.Message.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.Message.SenderCertificate%2A>|<span data-ttu-id="acf18-191">바이트 길이가 0 인 배열</span><span class="sxs-lookup"><span data-stu-id="acf18-191">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.Message.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.Message.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.Message.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.Message.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.Message.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.Message.UseTracing%2A>|`false`|  
  
   
  
## Examples  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.XmlMessageFormatter" />
        <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
        <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
        <altmember cref="T:System.Messaging.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.MessageQueue" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
      </Docs>
    </Member>
    <Member MemberName="AcknowledgeType">
      <MemberSignature Language="C#" Value="public System.Messaging.AcknowledgeTypes AcknowledgeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.AcknowledgeTypes AcknowledgeType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AcknowledgeType" />
      <MemberSignature Language="VB.NET" Value="Public Property AcknowledgeType As AcknowledgeTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AcknowledgeTypes AcknowledgeType { System::Messaging::AcknowledgeTypes get(); void set(System::Messaging::AcknowledgeTypes value); };" />
      <MemberSignature Language="F#" Value="member this.AcknowledgeType : System.Messaging.AcknowledgeTypes with get, set" Usage="System.Messaging.Message.AcknowledgeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAcknowledgeType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AcknowledgeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-192">Gets or sets the type of acknowledgment message to be returned to the sending application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-192">Gets or sets the type of acknowledgment message to be returned to the sending application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-193">중 하나는 <see cref="T:System.Messaging.AcknowledgeTypes" /> 시스템이 관리 큐는 승인이 보내는 응용 프로그램으로 반환 되는 조건에 게시 하는 승인 메시지의 형식을 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-193">One of the <see cref="T:System.Messaging.AcknowledgeTypes" /> values, which represent both the types of acknowledgment messages the system posts in the administration queue and the conditions under which acknowledgments are returned to the sending application.</span>
          </span>
          <span data-ttu-id="acf18-194">기본값은 <see langword="None" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-194">The default is <see langword="None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-195"><xref:System.Messaging.Message.AcknowledgeType%2A> 속성 보내는 응용 프로그램에 필요한 승인 메시지의 형식을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-195">The <xref:System.Messaging.Message.AcknowledgeType%2A> property specifies the type of acknowledgment messages requested by the sending application.</span></span> <span data-ttu-id="acf18-196">설정의 <xref:System.Messaging.Message.AcknowledgeType%2A> 특정 항목에 대 한 알림을 요청 하는 메시지를 보내기 전에 속성-예를 들어 대상 큐에 메시지, 메시지가 검색 되 고 또는 도달 하거나에서 검색 하 고에서 메시지를 방지 하는 제한 시간 대상 큐입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-196">Set the <xref:System.Messaging.Message.AcknowledgeType%2A> property before sending the message to request notification of certain occurrences—for example, a message reaching its destination queue, a message being retrieved, or a time-out preventing a message from reaching or being retrieved from the destination queue.</span></span>  
  
 <span data-ttu-id="acf18-197">메시지 큐에서 알림 승인 메시지를 전송 하 여 반환 된 <xref:System.Messaging.Message.AdministrationQueue%2A> 원본 메시지에서 지정 된 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-197">Message Queuing returns notification by sending acknowledgment messages to the <xref:System.Messaging.Message.AdministrationQueue%2A> property specified by the original message.</span></span> <span data-ttu-id="acf18-198">승인 메시지의 <xref:System.Messaging.Message.Acknowledgment%2A> 속성 나타내는 승인의 유형을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-198">An acknowledgment message's <xref:System.Messaging.Message.Acknowledgment%2A> property indicates the type of acknowledgment that it represents.</span></span> <span data-ttu-id="acf18-199">예를 들어 메시지 하기 전에 대상에 도달 하지 않으므로 승인 메시지를 보낼 수는 <xref:System.Messaging.Message.TimeToReachQueue%2A> 간격이 만료 된 <xref:System.Messaging.Message.Acknowledgment%2A> 승인 메시지의 속성 값이 포함 됩니다 `ReachQueueTimeout`합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-199">For example, if an acknowledgment message was sent because a message did not reach the destination before the <xref:System.Messaging.Message.TimeToReachQueue%2A> interval expired, the <xref:System.Messaging.Message.Acknowledgment%2A> property of the acknowledgment message would contain the value `ReachQueueTimeout`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-200">다음 코드 예제는 큐에서 주문을 포함 하는 메시지를 송수신 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-200">The following code example sends and receives a message containing an order to and from a queue.</span></span> <span data-ttu-id="acf18-201">원본 메시지가 도달 하거나이 긍정 승인을 특별히 요청 큐에서 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-201">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-202">The message is filtered to ignore the <see cref="P:System.Messaging.Message.AcknowledgeType" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-202">The message is filtered to ignore the <see cref="P:System.Messaging.Message.AcknowledgeType" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.Acknowledgment" />
      </Docs>
    </Member>
    <Member MemberName="Acknowledgment">
      <MemberSignature Language="C#" Value="public System.Messaging.Acknowledgment Acknowledgment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.Acknowledgment Acknowledgment" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Acknowledgment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Acknowledgment As Acknowledgment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Acknowledgment Acknowledgment { System::Messaging::Acknowledgment get(); };" />
      <MemberSignature Language="F#" Value="member this.Acknowledgment : System.Messaging.Acknowledgment" Usage="System.Messaging.Message.Acknowledgment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAcknowledgement")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.Acknowledgment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-203">Gets the classification of acknowledgment that this message represents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-203">Gets the classification of acknowledgment that this message represents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-204">
            <see cref="T:System.Messaging.Acknowledgment" /> 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-204">One of the <see cref="T:System.Messaging.Acknowledgment" /> enumeration values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-205">관리 큐에서 메시지를 받으면 읽기는 <xref:System.Messaging.Message.Acknowledgment%2A> 원본 메시지의 상태를 확인 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-205">When you receive a message from an administration queue, read the <xref:System.Messaging.Message.Acknowledgment%2A> property to verify the status of the original message.</span></span>  
  
 <span data-ttu-id="acf18-206">대상 큐로 메시지를 보낼 때 메시지 큐 하도록 요청할 수 있습니다는 승인 메시지를 게시 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-206">When a message is sent to its destination queue, Message Queuing can be requested to post an acknowledgment message.</span></span> <span data-ttu-id="acf18-207">예를 들어 이러한 메시지 배달 하지 못한 경우 오류의 원인을 나타낼 수 있습니다 메시지 도착 하 고 지정 된 제한 시간 내에 검색 되었는지 여부를 나타낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-207">Such a message can indicate, for example, whether the message arrived and was retrieved within specified time-outs, or it can indicate what went wrong in the case of delivery failure.</span></span> <span data-ttu-id="acf18-208">승인 메시지를 원본 메시지에 지정 된 관리 큐를 대상 큐 반환 <xref:System.Messaging.Message.AdministrationQueue%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-208">The destination queue returns acknowledgment messages and posts them to the administration queue specified in the original message's <xref:System.Messaging.Message.AdministrationQueue%2A> property.</span></span> <span data-ttu-id="acf18-209"><xref:System.Messaging.Message.Id%2A> 승인 메시지의 속성은 원본 메시지가 아닌 승인 메시지를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-209">The <xref:System.Messaging.Message.Id%2A> property of an acknowledgment message identifies the acknowledgment message, not the original message.</span></span> <span data-ttu-id="acf18-210">승인에서 원본 메시지의 식별자를 찾을 수 있습니다 <xref:System.Messaging.Message> 인스턴스의 <xref:System.Messaging.Message.CorrelationId%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-210">You can find the identifier of the original message in the acknowledgment <xref:System.Messaging.Message> instance's <xref:System.Messaging.Message.CorrelationId%2A> property.</span></span>  
  
 <span data-ttu-id="acf18-211">이 경우 <xref:System.Messaging.Message> 인스턴스가 승인 메시지를 나타내는 <xref:System.Messaging.Message.Acknowledgment%2A> 속성 승인의 유형을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-211">If this <xref:System.Messaging.Message> instance represents an acknowledgment message, the <xref:System.Messaging.Message.Acknowledgment%2A> property specifies the type of acknowledgment.</span></span> <span data-ttu-id="acf18-212">그렇지 않은 경우는 <xref:System.Messaging.Message.Acknowledgment%2A> 속성 값이 들어 `Normal`합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-212">Otherwise, the <xref:System.Messaging.Message.Acknowledgment%2A> property contains the value `Normal`.</span></span>  
  
 <span data-ttu-id="acf18-213">사용 하 여는 <xref:System.Messaging.Message.AcknowledgeType%2A> 승인이 반환 되는 상황을 지정 하 고 원본 메시지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-213">Use the <xref:System.Messaging.Message.AcknowledgeType%2A> property of the original message to specify the circumstances under which acknowledgments will be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-214">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-214">The message has not been sent.</span>
          </span>
          <span data-ttu-id="acf18-215">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-215">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="acf18-216">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.MessagePropertyFilter.Acknowledgment" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-216">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.MessagePropertyFilter.Acknowledgment" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.CorrelationId" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekById(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveById(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="AdministrationQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue AdministrationQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue AdministrationQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AdministrationQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property AdministrationQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ AdministrationQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AdministrationQueue : System.Messaging.MessageQueue with get, set" Usage="System.Messaging.Message.AdministrationQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAdministrationQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-217">Gets or sets the queue that receives the acknowledgement messages that Message Queuing generates.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-217">Gets or sets the queue that receives the acknowledgement messages that Message Queuing generates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-218">
            <see cref="T:System.Messaging.MessageQueue" /> 시스템 생성 승인 메시지에 사용 되는 관리 큐를 지정 하는 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-218">The <see cref="T:System.Messaging.MessageQueue" /> that specifies the administration queue used for system-generated acknowledgment messages.</span>
          </span>
          <span data-ttu-id="acf18-219">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-219">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-220">에 지정 된 큐는 <xref:System.Messaging.Message.AdministrationQueue%2A> 속성 모든 비트랜잭션 큐를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-220">The queue specified in the <xref:System.Messaging.Message.AdministrationQueue%2A> property can be any non-transactional queue.</span></span> <span data-ttu-id="acf18-221">관리 큐에 보낸 승인 메시지는 원본 메시지가 대상 큐에 도달했는지 여부 및 메시지가 큐에서 제거되었는지 여부를 나타낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-221">The acknowledgment messages sent to the administration queue can indicate whether the original message reached its destination queue and whether it was removed from the queue.</span></span>  
  
 <span data-ttu-id="acf18-222">경우는 <xref:System.Messaging.Message.AcknowledgeType%2A> 속성 이외의 모든 값을 가지 `None`, 보내는 응용 프로그램에서 관리 큐로 사용할 큐를 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-222">When the <xref:System.Messaging.Message.AcknowledgeType%2A> property has any value other than `None`, the sending application must specify the queue to use as the administration queue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-223">다음 코드 예제는 큐에서 주문을 포함 하는 메시지를 송수신 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-223">The following code example sends and receives a message containing an order to and from a queue.</span></span> <span data-ttu-id="acf18-224">원본 메시지가 도달 하거나이 긍정 승인을 특별히 요청 큐에서 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-224">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-225">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AdministrationQueue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-225">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AdministrationQueue" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.Acknowledgment" />
      </Docs>
    </Member>
    <Member MemberName="AppSpecific">
      <MemberSignature Language="C#" Value="public int AppSpecific { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AppSpecific" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AppSpecific" />
      <MemberSignature Language="VB.NET" Value="Public Property AppSpecific As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AppSpecific { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AppSpecific : int with get, set" Usage="System.Messaging.Message.AppSpecific" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAppSpecific")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-226">Gets or sets additional, application-specific information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-226">Gets or sets additional, application-specific information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-227">응용 프로그램에만 적용 되는 정보입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-227">Information that is specific to the application.</span>
          </span>
          <span data-ttu-id="acf18-228">기본값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-228">The default is zero.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-229"><xref:System.Messaging.Message.AppSpecific%2A> 속성 다양 한 유형의 메시지를 구성 하는 데 사용할 수 있는 응용 프로그램 관련 정보를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-229">The <xref:System.Messaging.Message.AppSpecific%2A> property contains application-specific information that you can use to organize different types of messages.</span></span> <span data-ttu-id="acf18-230">예를 들어 응용 프로그램 관련 인덱스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-230">For example, you can use application-specific indexes.</span></span> <span data-ttu-id="acf18-231">응용 프로그램에서 해석할 작업은 <xref:System.Messaging.Message.AppSpecific%2A> 속성 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-231">It is the responsibility of the application to interpret <xref:System.Messaging.Message.AppSpecific%2A> property information.</span></span>  
  
 <span data-ttu-id="acf18-232">메시지의 본문에 메시지 데이터를 포함 해야 가능 하면 보다는 <xref:System.Messaging.Message.AppSpecific%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-232">Whenever possible, you should include message data in the body of the message rather than the <xref:System.Messaging.Message.AppSpecific%2A> property.</span></span>  
  
 <span data-ttu-id="acf18-233">사용 하 여 외부 큐를 사용할 때의 <xref:System.Messaging.Message.Extension%2A> 속성을 통해 메시지 큐에 존재 하지 않는 메시지 속성을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-233">When working with foreign queues, use the <xref:System.Messaging.Message.Extension%2A> property to specify message properties that do not exist in Message Queuing.</span></span> <span data-ttu-id="acf18-234">과 마찬가지로 <xref:System.Messaging.Message.AppSpecific%2A> 속성의 내용을 이해 하는 응용 프로그램의 책임 이며는 <xref:System.Messaging.Message.Extension%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-234">As with the <xref:System.Messaging.Message.AppSpecific%2A> property, it is the responsibility of the application to understand the content of the <xref:System.Messaging.Message.Extension%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-235">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AppSpecific" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-235">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AppSpecific" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.Extension" />
        <altmember cref="P:System.Messaging.Message.Body" />
      </Docs>
    </Member>
    <Member MemberName="ArrivedTime">
      <MemberSignature Language="C#" Value="public DateTime ArrivedTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ArrivedTime" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.ArrivedTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArrivedTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ArrivedTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ArrivedTime : DateTime" Usage="System.Messaging.Message.ArrivedTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgArrivedTime")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-236">Gets the time that the message arrived in the destination queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-236">Gets the time that the message arrived in the destination queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-237">A <see cref="T:System.DateTime" /> 대상 큐에 메시지의 도착 시간을 나타내는입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-237">A <see cref="T:System.DateTime" /> that represents the message's arrival time in the destination queue.</span>
          </span>
          <span data-ttu-id="acf18-238">시간은 GMT에서 대상 큐가 있는 컴퓨터의 현지 시간으로 조정 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-238">The time is adjusted from GMT to the local time of the computer on which the destination queue resides.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-239">메시지의 <xref:System.Messaging.Message.TimeToBeReceived%2A> 속성 대상 큐 로부터 메시지를 수신할 수 있어야 하는 속도 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-239">The message's <xref:System.Messaging.Message.TimeToBeReceived%2A> property indicates how quickly the message must be received from the destination queue.</span></span> <span data-ttu-id="acf18-240"><xref:System.Messaging.Message.TimeToBeReceived%2A> 속성 타이머 메시지를 보낼 때 메시지가 큐에 도착할 때가 아니라 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-240">The <xref:System.Messaging.Message.TimeToBeReceived%2A> property timer starts when the message is sent, not when the message arrives in the queue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-241">다음 코드 예제에서는 메시지의 값을 표시 <xref:System.Messaging.Message.ArrivedTime%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-241">The following code example displays the value of a message's <xref:System.Messaging.Message.ArrivedTime%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-242">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-242">The message has not been sent.</span>
          </span>
          <span data-ttu-id="acf18-243">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-243">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="acf18-244">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ArrivedTime" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-244">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ArrivedTime" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.TimeToBeReceived" />
      </Docs>
    </Member>
    <Member MemberName="AttachSenderId">
      <MemberSignature Language="C#" Value="public bool AttachSenderId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AttachSenderId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AttachSenderId" />
      <MemberSignature Language="VB.NET" Value="Public Property AttachSenderId As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AttachSenderId { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AttachSenderId : bool with get, set" Usage="System.Messaging.Message.AttachSenderId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAttachSenderId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-245">Gets or sets a value that indicates whether the sender ID should be attached to the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-245">Gets or sets a value that indicates whether the sender ID should be attached to the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-246">
            <see langword="true" /> 경우는 <see cref="P:System.Messaging.Message.SenderId" /> 메시지에 첨부 된 건너뛸 필요가 없으면, <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-246">
              <see langword="true" /> if the <see cref="P:System.Messaging.Message.SenderId" /> should be attached to the message; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="acf18-247">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-247">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-248"><xref:System.Messaging.Message.SenderId%2A> 속성은 보내는 사용자의 식별자를 나타내는 바이트 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-248">The <xref:System.Messaging.Message.SenderId%2A> property is an array of bytes that represents the identifier of the sending user.</span></span> <span data-ttu-id="acf18-249">보낸 사람 ID는 메시지 큐에서 설정 되 고 보낸 사람에는 큐에 액세스 권한이 있는지 여부를 확인 하려면 수신 큐 관리자에서 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-249">The sender ID is set by Message Queuing and is used by the receiving Queue Manager to verify whether the sender has access rights to a queue.</span></span>  
  
 <span data-ttu-id="acf18-250">받는 큐에 보낸 사람 ID가는 메시지 큐 해야 하지 않으며 메시지의 보낸 사람 유효성 검사도 보낸 사람의 액세스를 확인 하는 보내는 응용 프로그램이 없는 경우 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-250">The absence of the sender ID is an indication by the sending application that Message Queuing should not validate the message's sender nor verify the sender's access rights to the receiving queue.</span></span> <span data-ttu-id="acf18-251"><xref:System.Messaging.Message.SenderId%2A> 은 메시지가 대상 큐에 도달 했을 때 인증 된 경우에 신뢰할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-251">The <xref:System.Messaging.Message.SenderId%2A> is trustworthy only if the message was authenticated when it reached the destination queue.</span></span> <span data-ttu-id="acf18-252">큐와 인증 된 메시지만 허용 하는 경우 대상 큐에 도달 하면 메시지는 거부 된 <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> 또는 <xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A> 속성은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-252">The message is rejected when it reaches the destination queue if the queue accepts only authenticated messages and either the <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> or the <xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A> property is `false`.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="acf18-253">메시지가 거부 될 경우 배달 못 한 편지 큐로 보내지거나 (경우 <xref:System.Messaging.Message.UseDeadLetterQueue%2A> 은 `true`), 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-253">If a message is rejected, it is either sent to the dead-letter queue (if <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `true`), or it is ignored.</span></span> <span data-ttu-id="acf18-254">메시지는 큐에 도달 하지 못할 때 승인을 요청할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-254">You can request acknowledgments when a message fails to reach a queue.</span></span> <span data-ttu-id="acf18-255">경우에, 그렇지 않으면 <xref:System.Messaging.Message.UseDeadLetterQueue%2A> 은 `false` 메시지는 경고 없이 손실 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-255">Otherwise, when <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false` the message might be lost without warning.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-256">다음 코드 예제에서는 메시지의 값을 설정 가져오고 <xref:System.Messaging.Message.AttachSenderId%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-256">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.AttachSenderId%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-257">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AttachSenderId" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-257">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AttachSenderId" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.SenderId" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.Authenticated" />
        <altmember cref="P:System.Messaging.Message.HashAlgorithm" />
        <altmember cref="P:System.Messaging.Message.SenderCertificate" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
      </Docs>
    </Member>
    <Member MemberName="Authenticated">
      <MemberSignature Language="C#" Value="public bool Authenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticated" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Authenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Authenticated : bool" Usage="System.Messaging.Message.Authenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAuthenticated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-258">Gets a value that indicates whether the message was authenticated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-258">Gets a value that indicates whether the message was authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-259">
            <see langword="true" /> 큐에 도달 했을 때 인증 메시지에 대 한 요청 된 경우 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-259">
              <see langword="true" /> if authentication was requested for the message when it entered the queue; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-260"><xref:System.Messaging.Message.Authenticated%2A> 속성은 메시지와 상호 작용 되 고 인증이 요청 되었는지 확인 하는 동안 응용 프로그램에 의해서만 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-260">The <xref:System.Messaging.Message.Authenticated%2A> property is used only by the application while it is interacting with the message and trying to determine if authentication was requested.</span></span> <span data-ttu-id="acf18-261">메시지가 큐에 있으면 메시지가 인증 되었는지 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-261">If the message is in the queue, the message was authenticated.</span></span> <span data-ttu-id="acf18-262">반대로 하는 경우는 <xref:System.Messaging.Message.Authenticated%2A> 속성은 `true`, 수신 큐 관리자는 해당 메시지를 받으면 메시지를 인증 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-262">Conversely, if the <xref:System.Messaging.Message.Authenticated%2A> property is `true`, the receiving Queue Manager authenticated the message when it received that message.</span></span>  
  
 <span data-ttu-id="acf18-263">메시지가 해당 속성을 확인 하 여 인증 실패를 확인할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-263">You cannot determine if a message failed authentication by looking at its properties.</span></span> <span data-ttu-id="acf18-264">메시지 큐에 메시지가 배달 되기 전에 인증에 실패 하는 메시지 큐에서 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-264">Message Queuing discards messages that fail authentication before they are delivered to the queue.</span></span> <span data-ttu-id="acf18-265">그러나 배달이 실패 하면 메시지가 메시지 큐에 도착는 것을 방지 한 경우 승인 메시지를 보내도록 요청할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-265">However, you can request that an acknowledgment message be sent if a delivery failure prevents the message from arriving in the queue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-266">다음 코드 예제에서는 메시지의 값을 표시 <xref:System.Messaging.Message.Authenticated%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-266">The following code example displays the value of a message's <xref:System.Messaging.Message.Authenticated%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-267">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-267">The message has not been sent.</span>
          </span>
          <span data-ttu-id="acf18-268">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-268">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="acf18-269">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Authenticated" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-269">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Authenticated" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticationProviderName">
      <MemberSignature Language="C#" Value="public string AuthenticationProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AuthenticationProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationProviderName : string with get, set" Usage="System.Messaging.Message.AuthenticationProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAuthenticationProviderName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-270">Gets or sets the name of the cryptographic provider used to generate the digital signature of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-270">Gets or sets the name of the cryptographic provider used to generate the digital signature of the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-271">메시지의 디지털 서명을 생성 하는 데 사용 되는 암호화 공급자의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-271">The name of the cryptographic provider used to generate the digital signature of the message.</span>
          </span>
          <span data-ttu-id="acf18-272">기본값은 Microsoft Base Cryptographic Provider 1.0 버전.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-272">The default is Microsoft Base Cryptographic Provider version 1.0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-273">일반적으로 사용 된 <xref:System.Messaging.Message.AuthenticationProviderName%2A> 외부 큐에서 작업 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="acf18-273">You typically use the <xref:System.Messaging.Message.AuthenticationProviderName%2A> when working with foreign queues.</span></span> <span data-ttu-id="acf18-274">메시지 큐는 인증 공급자 이름 및 외부 큐로 전송 된 메시지와 메시지에 전달 된 메시지의 디지털 서명 유효성을 검사 하려면 (인증 공급자) 암호화 공급자의 인증 공급자 형식이 필요 외부 큐에서 큐입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-274">Message Queuing requires the authentication provider name and authentication provider type of the cryptographic provider (authentication provider) to validate the digital signatures of both messages sent to a foreign queue and messages passed to Message Queuing from a foreign queue.</span></span>  
  
 <span data-ttu-id="acf18-275">메시지를 보낼 때 항상 설정 된 <xref:System.Messaging.Message.AuthenticationProviderName%2A> 및 <xref:System.Messaging.Message.ConnectorType%2A> 속성을 함께 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-275">When sending a message, always set the <xref:System.Messaging.Message.AuthenticationProviderName%2A> and <xref:System.Messaging.Message.ConnectorType%2A> properties together.</span></span> <span data-ttu-id="acf18-276">메시지를 보낼 때 메시지 큐 무시 인증 공급자 이름 커넥터 종류가 설정 되지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="acf18-276">When the message is sent, Message Queuing ignores the authentication provider name if the connector type is not also set.</span></span>  
  
 <span data-ttu-id="acf18-277"><xref:System.Messaging.Message.AuthenticationProviderName%2A> 속성 수 없습니다 `null`, 있지만 빈 문자열일 수 있습니다 ("").</span><span class="sxs-lookup"><span data-stu-id="acf18-277">The <xref:System.Messaging.Message.AuthenticationProviderName%2A> property cannot be `null`, but it can be an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-278">The <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property could not be set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-278">The <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property could not be set.</span>
          </span>
          <span data-ttu-id="acf18-279">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-279">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="acf18-280">The <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> was set to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-280">The <see cref="P:System.Messaging.Message.AuthenticationProviderName" /> was set to <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.Authenticated" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderType" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
      </Docs>
    </Member>
    <Member MemberName="AuthenticationProviderType">
      <MemberSignature Language="C#" Value="public System.Messaging.CryptographicProviderType AuthenticationProviderType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.CryptographicProviderType AuthenticationProviderType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.AuthenticationProviderType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationProviderType As CryptographicProviderType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::CryptographicProviderType AuthenticationProviderType { System::Messaging::CryptographicProviderType get(); void set(System::Messaging::CryptographicProviderType value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationProviderType : System.Messaging.CryptographicProviderType with get, set" Usage="System.Messaging.Message.AuthenticationProviderType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgAuthenticationProviderType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.CryptographicProviderType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-281">Gets or sets the type of cryptographic provider used to generate the digital signature of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-281">Gets or sets the type of cryptographic provider used to generate the digital signature of the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-282">
            <see cref="T:System.Messaging.CryptographicProviderType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-282">One of the <see cref="T:System.Messaging.CryptographicProviderType" /> values.</span>
          </span>
          <span data-ttu-id="acf18-283">기본값은 <see langword="RSA_FULL" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-283">The default is <see langword="RSA_FULL" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-284">일반적으로 사용 된 <xref:System.Messaging.Message.AuthenticationProviderType%2A> 클래스는 메시지와 연결 된 암호화 서비스 공급자를 지정 하는 경우이 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-284">You typically use the <xref:System.Messaging.Message.AuthenticationProviderType%2A> property when working with foreign queues to specify which cryptographic service provider is associated with a message.</span></span> <span data-ttu-id="acf18-285">메시지 큐는 인증 공급자 이름 및 외부 큐로 전송 된 메시지와 메시지에 전달 된 메시지의 디지털 서명 유효성을 검사 하려면 (인증 공급자) 암호화 공급자의 인증 공급자 형식이 필요 외부 큐에서 큐입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-285">Message Queuing requires the authentication provider name and authentication provider type of the cryptographic provider (authentication provider) to validate the digital signatures of both messages sent to a foreign queue and messages passed to Message Queuing from a foreign queue.</span></span>  
  
 <span data-ttu-id="acf18-286">만 `RsaFull` messaging과 함께 사용 하기에 적합 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-286">Only `RsaFull` is intended to be used with messaging.</span></span>  
  
 <span data-ttu-id="acf18-287">메시지를 보낼 때 항상 설정 된 <xref:System.Messaging.Message.AuthenticationProviderType%2A> 및 <xref:System.Messaging.Message.ConnectorType%2A> 속성을 함께 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-287">When sending a message, always set the <xref:System.Messaging.Message.AuthenticationProviderType%2A> and <xref:System.Messaging.Message.ConnectorType%2A> properties together.</span></span> <span data-ttu-id="acf18-288">메시지를 보낼 때 메시지 큐 무시 인증 공급자 유형 커넥터 종류가 설정 되지 않은 경우.</span><span class="sxs-lookup"><span data-stu-id="acf18-288">When the message is sent, Message Queuing ignores the authentication provider type if the connector type is not also set.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-289">The <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property could not be set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-289">The <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property could not be set.</span>
          </span>
          <span data-ttu-id="acf18-290">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-290">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.AuthenticationProviderType" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.Authenticated" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderName" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="T:System.Messaging.CryptographicProviderType" />
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public object Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Body" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Body" />
      <MemberSignature Language="VB.NET" Value="Public Property Body As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Body { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Body : obj with get, set" Usage="System.Messaging.Message.Body" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-291">Gets or sets the content of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-291">Gets or sets the content of the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-292">메시지 콘텐츠를 지정 하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-292">An object that specifies the message contents.</span>
          </span>
          <span data-ttu-id="acf18-293">개체를 문자열, 날짜, 통화, 숫자, 바이트의 배열 또는 관리 되는 개체 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-293">The object can be a string, a date, a currency, a number, an array of bytes, or any managed object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-294">메시지의 <xref:System.Messaging.Message.Body%2A> 속성은 일반적으로 메시지에 연결 된 데이터를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-294">The message's <xref:System.Messaging.Message.Body%2A> property usually contains the data associated with the message.</span></span> <span data-ttu-id="acf18-295">응용 프로그램 관련 데이터를 보낼 수도 있지만 <xref:System.Messaging.Message.AppSpecific%2A> 및 <xref:System.Messaging.Message.Extension%2A> 속성, 메시지 데이터를 포함 해야는 <xref:System.Messaging.Message.Body%2A> 가능 하면 메시지의 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-295">Although you can also send application-specific data in the <xref:System.Messaging.Message.AppSpecific%2A> and <xref:System.Messaging.Message.Extension%2A> properties, you should include message data in the <xref:System.Messaging.Message.Body%2A> of the message whenever possible.</span></span> <span data-ttu-id="acf18-296">만 <xref:System.Messaging.Message.Body%2A> 속성 내용을 serialize 되거나 암호화 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-296">Only the <xref:System.Messaging.Message.Body%2A> property contents are serialized or encrypted.</span></span>  
  
 <span data-ttu-id="acf18-297"><xref:System.Messaging.Message.Body%2A> 속성 필요에 따라 크기가 4MB를 초과 하지 않는 개체를 포함할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-297">The <xref:System.Messaging.Message.Body%2A> property can contain any object whose size does not exceed 4 MB.</span></span> <span data-ttu-id="acf18-298">사용 하는 경우 <xref:System.Messaging.MessageQueue.Send%2A?displayProperty=nameWithType> 다른 형식의 모든 개체를 보내려면 <xref:System.Messaging.Message> 에 <xref:System.Messaging.MessageQueue>, 해당 개체에 배치 됩니다는 <xref:System.Messaging.Message.Body%2A> 의 속성은 <xref:System.Messaging.Message> 에서 반환한 인스턴스 <xref:System.Messaging.MessageQueue.Peek%2A> 또는 <xref:System.Messaging.MessageQueue.Receive%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-298">If you use <xref:System.Messaging.MessageQueue.Send%2A?displayProperty=nameWithType> to send any object that is not of type <xref:System.Messaging.Message> to the <xref:System.Messaging.MessageQueue>, that object will be located in the <xref:System.Messaging.Message.Body%2A> property of the <xref:System.Messaging.Message> instance returned by <xref:System.Messaging.MessageQueue.Peek%2A> or <xref:System.Messaging.MessageQueue.Receive%2A>.</span></span>  
  
 <span data-ttu-id="acf18-299">문자열 인수에 `MessageQueue.Send("hello.")` 은 예제는 이러한 일반 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-299">The string argument in `MessageQueue.Send("hello.")` is an example of such a generic object.</span></span>  
  
 <span data-ttu-id="acf18-300"><xref:System.Messaging.Message.BodyType%2A> 속성에는 메시지 본문에 저장 된 정보의 유형을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-300">The <xref:System.Messaging.Message.BodyType%2A> property indicates the type of information that is stored in the message body.</span></span> <span data-ttu-id="acf18-301">메시지 큐의 형식을 식별 하기 위해이 정보를 사용 하 여는 <xref:System.Messaging.Message.Body%2A> 속성 내용입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-301">Message Queuing uses this information to identify the type of the <xref:System.Messaging.Message.Body%2A> property contents.</span></span>  
  
 <span data-ttu-id="acf18-302">지정 된 <xref:System.Messaging.Message.Body%2A> 속성 또는 <xref:System.Messaging.Message.BodyStream%2A> 보내기 전에 속성은 <xref:System.Messaging.Message> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-302">Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object.</span></span> <span data-ttu-id="acf18-303"><xref:System.Messaging.Message.Body%2A> 속성은 모든 텍스트 문자열 같은 직렬화 가능 개체, 구조체, 클래스 인스턴스 또는 포함 된 개체 일 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-303">The <xref:System.Messaging.Message.Body%2A> property can be any serializable object, such as a text string, structure object, class instance, or embedded object.</span></span>  
  
 <span data-ttu-id="acf18-304">메시지의 내용을 직접 작성 하지 않는 경우는 <xref:System.Messaging.Message.BodyStream%2A> 속성 설정에서 <xref:System.Messaging.Message.Formatter%2A> 메시지를 보내기 전에 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-304">Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message.</span></span> <span data-ttu-id="acf18-305">경우는 <xref:System.Messaging.MessageQueue.Send%2A> 메서드가 호출 되는 <xref:System.Messaging.MessageQueue> 인스턴스가, 본문에 포함 된 포맷터를 사용 하 여 serialize 되는 <xref:System.Messaging.Message.Formatter%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-305">When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property.</span></span> <span data-ttu-id="acf18-306">에 대 한 값을 지정 하지 않고 메시지를 보내기는 <xref:System.Messaging.Message.Formatter%2A> 속성, 포맷터의 기본값은 <xref:System.Messaging.XmlMessageFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-306">If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="acf18-307">메시지의 본문을 설정 하는 <xref:System.Decimal.MaxValue> 하면는 <xref:System.OverflowException> 때는 `Send` 의 메서드는 <xref:System.Messaging.MessageQueue> 클래스 라고 및 <xref:System.Messaging.ActiveXMessageFormatter> 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-307">Attempting to set the body of a message to <xref:System.Decimal.MaxValue> will cause a <xref:System.OverflowException> when the `Send` method of the <xref:System.Messaging.MessageQueue> class is called and the <xref:System.Messaging.ActiveXMessageFormatter> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-308">다음 코드 예제에서는 서로 다른 우선의 두 메시지를 보내고 큐로 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-308">The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.</span></span>  
  
 [!code-cpp[Message.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CPP/message_defaultandpriority.cpp#1)]
 [!code-csharp[Message.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CS/message_defaultandpriority.cs#1)]
 [!code-vb[Message.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/VB/message_defaultandpriority.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-309">The <see cref="P:System.Messaging.Message.Formatter" /> property is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-309">The <see cref="P:System.Messaging.Message.Formatter" /> property is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="acf18-310">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-310">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.Message.BodyStream" />
        <altmember cref="P:System.Messaging.Message.BodyType" />
        <altmember cref="P:System.Messaging.Message.Formatter" />
        <altmember cref="P:System.Messaging.Message.AppSpecific" />
        <altmember cref="P:System.Messaging.Message.Extension" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="BodyStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BodyStream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BodyStream" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.BodyStream" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BodyStream { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BodyStream : System.IO.Stream with get, set" Usage="System.Messaging.Message.BodyStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.BinaryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgBodyStream")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-311">Gets or sets the information in the body of the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-311">Gets or sets the information in the body of the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-312">A <see cref="T:System.IO.Stream" /> 에 포함 된 직렬화 된 정보를 포함 하는 <see cref="P:System.Messaging.Message.Body" /> 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-312">A <see cref="T:System.IO.Stream" /> that contains the serialized information included in the <see cref="P:System.Messaging.Message.Body" /> of the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-313">메시지의 본문 모든 종류의 정보로 구성 될 수-문자열, 날짜, 통화, 숫자, 바이트의 배열 또는 관리 되는 개체 예를 들어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-313">The body of a message can consist of any type of information—for example, a string, a date, a currency, a number, an array of bytes, or any managed object.</span></span> <span data-ttu-id="acf18-314">이 정보로 serialize 되는 <xref:System.IO.Stream> 를 큐에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-314">This information is serialized into a <xref:System.IO.Stream> to be passed to the queue.</span></span>  
  
 <span data-ttu-id="acf18-315">지정 된 <xref:System.Messaging.Message.Body%2A> 속성 또는 <xref:System.Messaging.Message.BodyStream%2A> 보내기 전에 속성은 <xref:System.Messaging.Message> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-315">Specify either the <xref:System.Messaging.Message.Body%2A> property or the <xref:System.Messaging.Message.BodyStream%2A> property before sending the <xref:System.Messaging.Message> object.</span></span> <span data-ttu-id="acf18-316">설정 하는 경우는 <xref:System.Messaging.Message.Body%2A> 속성 내용을로 serialize 되는 <xref:System.Messaging.Message.BodyStream%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-316">If you set the <xref:System.Messaging.Message.Body%2A> property, the contents are serialized into the <xref:System.Messaging.Message.BodyStream%2A> property.</span></span> <span data-ttu-id="acf18-317">그러나 작성 하도록 선택할 수는 <xref:System.Messaging.Message.BodyStream%2A> 속성을 직접 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-317">However, you can choose to write the <xref:System.Messaging.Message.BodyStream%2A> property directly.</span></span> <span data-ttu-id="acf18-318">예를 들어 파일에 대 한 연결을 열고 스트림 그 내용을 메시지의 본문으로 하려는 경우 유용, 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-318">This is useful, for example, when you want to open a connection to a file and stream its contents as the body of your message.</span></span>  
  
 <span data-ttu-id="acf18-319">메시지의 내용을 직접 작성 하지 않는 경우는 <xref:System.Messaging.Message.BodyStream%2A> 속성 설정에서 <xref:System.Messaging.Message.Formatter%2A> 메시지를 보내기 전에 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-319">Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message.</span></span> <span data-ttu-id="acf18-320">경우는 <xref:System.Messaging.MessageQueue.Send%2A> 메서드가 호출 되는 <xref:System.Messaging.MessageQueue> 인스턴스가, 본문에 포함 된 포맷터를 사용 하 여 serialize 되는 <xref:System.Messaging.Message.Formatter%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-320">When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property.</span></span> <span data-ttu-id="acf18-321">에 대 한 값을 지정 하지 않고 메시지를 보내기는 <xref:System.Messaging.Message.Formatter%2A> 속성, 포맷터의 기본값은 <xref:System.Messaging.XmlMessageFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-321">If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="acf18-322">설정 하는 경우는 <xref:System.Messaging.Message.UseEncryption%2A> 속성을 `true` 이 메시지의 본문, 메시지를 암호화할 전송 될 때, 설정한 때가 아니라는 <xref:System.Messaging.Message.Body%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-322">If you set the <xref:System.Messaging.Message.UseEncryption%2A> property to `true` for the body of this message, the message will be encrypted when it is sent, not when you set the <xref:System.Messaging.Message.Body%2A> property.</span></span> <span data-ttu-id="acf18-323">따라서는 <xref:System.Messaging.Message.BodyStream%2A> 속성 암호화 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-323">Therefore, the <xref:System.Messaging.Message.BodyStream%2A> property is never encrypted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-324">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-324">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.Message.Body" />
        <altmember cref="P:System.Messaging.Message.BodyType" />
        <altmember cref="P:System.Messaging.Message.Formatter" />
        <altmember cref="P:System.Messaging.Message.AppSpecific" />
        <altmember cref="P:System.Messaging.Message.Extension" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="BodyType">
      <MemberSignature Language="C#" Value="public int BodyType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BodyType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.BodyType" />
      <MemberSignature Language="VB.NET" Value="Public Property BodyType As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BodyType { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BodyType : int with get, set" Usage="System.Messaging.Message.BodyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgBodyType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-325">Gets or sets the type of data that the message body contains.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-325">Gets or sets the type of data that the message body contains.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-326">메시지 본문의 실제 형식, 문자열, 날짜, 통화, 또는 숫자와 같은 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-326">The message body's true type, such as a string, a date, a currency, or a number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-327">메시지 큐 개체 또는 serialize 된 스트림으로 본문 콘텐츠를 인식합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-327">Message Queuing recognizes the body contents as an object or as a serialized stream.</span></span> <span data-ttu-id="acf18-328"><xref:System.Messaging.Message.BodyType%2A> 속성 내에서 개체의 형식을 나타냅니다는 <xref:System.Messaging.Message.Body%2A> 메시지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-328">The <xref:System.Messaging.Message.BodyType%2A> property indicates the type of the object within the <xref:System.Messaging.Message.Body%2A> property of the message.</span></span>  
  
 <span data-ttu-id="acf18-329"><xref:System.Messaging.XmlMessageFormatter> 메시지 본문에서 네이티브 형식과 개체 간에 바인딩을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-329">The <xref:System.Messaging.XmlMessageFormatter> performs binding between native types and the object in a message body.</span></span> <span data-ttu-id="acf18-330">사용 하는 경우는 <xref:System.Messaging.XmlMessageFormatter>, 설정은 <xref:System.Messaging.Message.BodyType%2A> 속성이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-330">If you use the <xref:System.Messaging.XmlMessageFormatter>, the formatter sets the <xref:System.Messaging.Message.BodyType%2A> property for you.</span></span>  
  
 <span data-ttu-id="acf18-331">다른 포맷터는 또한 다음 C# 코드에서와 같이 바인딩 기능을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-331">Other formatters can provide binding functionality also, as shown in the following C# code.</span></span>  
  
```  
message.Formatter = new ActiveXMessageFormatter();  
object myObject message.Body;  
if (myObject is string) {  
}  
if (myObject is int) {  
}  
if (myObject is float) {  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="acf18-332">다음 코드 예제에서는 메시지의 값을 표시 <xref:System.Messaging.Message.BodyType%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-332">The following code example displays the value of a message's <xref:System.Messaging.Message.BodyType%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-333">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-333">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Body" /> property.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.Message.Body" />
        <altmember cref="P:System.Messaging.Message.BodyStream" />
        <altmember cref="P:System.Messaging.Message.Formatter" />
        <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConnectorType">
      <MemberSignature Language="C#" Value="public Guid ConnectorType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ConnectorType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.ConnectorType" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectorType As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ConnectorType { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectorType : Guid with get, set" Usage="System.Messaging.Message.ConnectorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgConnectorType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-334">Gets or sets a value that indicates that some message properties typically set by Message Queuing were set by the sending application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-334">Gets or sets a value that indicates that some message properties typically set by Message Queuing were set by the sending application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-335">A <see cref="T:System.Guid" /> 응용 프로그램에 의해 정의 되며 커넥터 응용 프로그램 또는 메시지 암호화와 함께 사용 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-335">A <see cref="T:System.Guid" /> defined by the application and used in conjunction with connector applications or message encryption.</span>
          </span>
          <span data-ttu-id="acf18-336">이 <see cref="T:System.Guid" /> 보내는 응용 프로그램에서 설정 하는 일반적으로 메시지 큐에서 설정 되었지만 메시지 속성을 해석 하는 수신 응용 프로그램을 허용 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-336">This <see cref="T:System.Guid" /> allows a receiving application to interpret message properties that were set by the sending application but that are usually set by Message Queuing.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-337">메시지 큐는 <xref:System.Messaging.Message.ConnectorType%2A> 설정할 때마다 응용 프로그램은 일반적으로 메시지 큐에서 설정 하는 메시지 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-337">Message Queuing requires the <xref:System.Messaging.Message.ConnectorType%2A> property be set whenever an application sets a message property that is usually set by Message Queuing.</span></span> <span data-ttu-id="acf18-338">응용 프로그램에서 일반적으로 사용 하는 <xref:System.Messaging.Message.ConnectorType%2A> 다음 두 가지 경우에서:</span><span class="sxs-lookup"><span data-stu-id="acf18-338">An application typically uses a <xref:System.Messaging.Message.ConnectorType%2A> in the following two cases:</span></span>  
  
-   <span data-ttu-id="acf18-339">때마다 커넥터 응용 프로그램에 메시지를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-339">Whenever a connector application passes a message.</span></span> <span data-ttu-id="acf18-340"><xref:System.Messaging.Message.ConnectorType%2A> 송신 및 수신 응용 프로그램 메시지의 보안 및 승인 속성을 해석 하는 방법을 설명 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-340">The <xref:System.Messaging.Message.ConnectorType%2A> tells the sending and receiving applications how to interpret the security and acknowledgment properties of the message.</span></span>  
  
-   <span data-ttu-id="acf18-341">때마다는 보내는 응용 프로그램 보다는 메시지 큐에서 메시지를 암호화합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-341">Whenever the sending application, rather than Message Queuing, encrypts a message.</span></span> <span data-ttu-id="acf18-342"><xref:System.Messaging.Message.ConnectorType%2A> 메시지 큐가 사용 하도록 지시는 <xref:System.Messaging.Message.DestinationSymmetricKey%2A> 속성 값을 메시지의 암호를 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-342">The <xref:System.Messaging.Message.ConnectorType%2A> tells Message Queuing to use the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property value to decrypt the message.</span></span>  
  
 <span data-ttu-id="acf18-343">설정 해야 합니다는 <xref:System.Messaging.Message.ConnectorType%2A> 다음과 같은 속성을 설정 하는 경우 속성 (그렇지 않으면 큐 무시 이러한 속성은 메시지를 보낼 때):</span><span class="sxs-lookup"><span data-stu-id="acf18-343">You must set the <xref:System.Messaging.Message.ConnectorType%2A> property if you set any of the following properties (otherwise, the queue ignores these properties when the message is sent):</span></span>  
  
-   <xref:System.Messaging.Message.AuthenticationProviderName%2A>  
  
-   <xref:System.Messaging.Message.AuthenticationProviderType%2A>  
  
-   <xref:System.Messaging.Message.DestinationSymmetricKey%2A>  
  
-   <xref:System.Messaging.Message.DigitalSignature%2A>  
  
-   <xref:System.Messaging.Message.MessageType%2A>  
  
-   <xref:System.Messaging.Message.SenderId%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-344">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ConnectorType" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-344">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ConnectorType" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderName" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderType" />
        <altmember cref="P:System.Messaging.Message.DestinationSymmetricKey" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
        <altmember cref="P:System.Messaging.Message.MessageType" />
        <altmember cref="P:System.Messaging.Message.SenderId" />
      </Docs>
    </Member>
    <Member MemberName="CorrelationId">
      <MemberSignature Language="C#" Value="public string CorrelationId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CorrelationId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.CorrelationId" />
      <MemberSignature Language="VB.NET" Value="Public Property CorrelationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CorrelationId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CorrelationId : string with get, set" Usage="System.Messaging.Message.CorrelationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgCorrelationId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-345">Gets or sets the message identifier used by acknowledgment, report, and response messages to reference the original message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-345">Gets or sets the message identifier used by acknowledgment, report, and response messages to reference the original message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-346">로 지정 된 메시지 식별자는 <see cref="P:System.Messaging.Message.Id" /> 원본 메시지의 속성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-346">The message identifier specified by the <see cref="P:System.Messaging.Message.Id" /> property of the original message.</span>
          </span>
          <span data-ttu-id="acf18-347">응답 메시지를 생성할 때 상관 관계 식별자는 메시지는 승인 또는 보고 메시지를 생성할 때 큐에서 및 응용 프로그램에 의해 사용 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-347">The correlation identifier is used by Message Queuing when it generates an acknowledgment or report message, and by an application when it generates a response message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-348">메시지 큐에서 승인 또는 보고 메시지를 생성할 때에 상관 관계 식별자 속성을 사용 하 여 원본 메시지의 메시지 식별자를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-348">When Message Queuing generates an acknowledgment or report message, it uses the correlation identifier property to specify the message identifier of the original message.</span></span> <span data-ttu-id="acf18-349">이러한 방식으로 상관 관계 식별자는 보고 메시지나 승인 메시지를 원본 메시지에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-349">In this manner, the correlation identifier ties the report or acknowledgment message to the original message.</span></span>  
  
 <span data-ttu-id="acf18-350">보내는 응용 프로그램 일치 시킬 수 있습니다 승인 또는 보고 원본 메시지와 함께 사용 하 여는 <xref:System.Messaging.Message.CorrelationId%2A> 원본 메시지를 식별 하기 위해 속성 <xref:System.Messaging.Message.Id%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-350">The sending application can then match the acknowledgment or report with the original message by using the <xref:System.Messaging.Message.CorrelationId%2A> property to identify the original message's <xref:System.Messaging.Message.Id%2A> property.</span></span>  
  
 <span data-ttu-id="acf18-351">커넥터 응용 프로그램도 설정 해야 합니다는 <xref:System.Messaging.Message.CorrelationId%2A> 원본 메시지의 메시지 식별자를 승인 및 보고 메시지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-351">Connector applications also must set the <xref:System.Messaging.Message.CorrelationId%2A> property of the acknowledgment and report messages to the message identifier of the original message.</span></span>  
  
 <span data-ttu-id="acf18-352">응용 프로그램 응답 메시지를 보내면 송신 응용 프로그램을 설정할 수는 <xref:System.Messaging.Message.CorrelationId%2A> 원본 메시지의 메시지 식별자로 응답 메시지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-352">When your application sends a response message to the sending application, you can set the <xref:System.Messaging.Message.CorrelationId%2A> property of the response message to the message identifier of the original message.</span></span> <span data-ttu-id="acf18-353">보내는 응용 프로그램에서 보낸 메시지에 응답 메시지를 일치 시킬 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-353">The sending application can then match your response message to the message that was sent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-354">다음 코드 예제는 큐에서 주문에 포함 된 메시지 송수신 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-354">The following code example sends and receives a message that contains an order to and from a queue.</span></span> <span data-ttu-id="acf18-355">원본 메시지가 도달 하거나이 긍정 승인을 특별히 요청 큐에서 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-355">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-356">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.CorrelationId" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-356">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.CorrelationId" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="acf18-357">The <see cref="P:System.Messaging.Message.CorrelationId" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-357">The <see cref="P:System.Messaging.Message.CorrelationId" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.Id" />
        <altmember cref="P:System.Messaging.MessagePropertyFilter.Acknowledgment" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DestinationQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue DestinationQueue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue DestinationQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.DestinationQueue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DestinationQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ DestinationQueue { System::Messaging::MessageQueue ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DestinationQueue : System.Messaging.MessageQueue" Usage="System.Messaging.Message.DestinationQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgDestinationQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-358">Gets the intended destination queue for a message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-358">Gets the intended destination queue for a message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-359">A <see cref="T:System.Messaging.MessageQueue" /> 메시지에 대 한 의도 한 대상 큐를 지정 하는 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-359">A <see cref="T:System.Messaging.MessageQueue" /> that specifies the intended destination queue for the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-360"><xref:System.Messaging.Message.DestinationQueue%2A> 속성은 가장 일반적으로 업무 일지 나 배달 못 한 편지 큐에 도착 한 메시지의 원래 대상을 확인 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-360">The <xref:System.Messaging.Message.DestinationQueue%2A> property is most commonly used to determine the original destination of a message that arrived in a journal or dead-letter queue.</span></span> <span data-ttu-id="acf18-361">일반적으로 않아도이 속성을 검사 하려면 일반적으로 대상 큐에서 메시지를 검색 하기 때문에 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-361">Usually, you do not need to examine this property, because you typically retrieve the message from its destination queue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-362">다음 코드 예제에서는 메시지의 값을 표시 <xref:System.Messaging.Message.DestinationQueue%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-362">The following code example displays the value of a message's <xref:System.Messaging.Message.DestinationQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-363">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-363">The message has not been sent.</span>
          </span>
          <span data-ttu-id="acf18-364">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-364">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="acf18-365">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DestinationQueue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-365">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DestinationQueue" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.Message.UseJournalQueue" />
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
      </Docs>
    </Member>
    <Member MemberName="DestinationSymmetricKey">
      <MemberSignature Language="C#" Value="public byte[] DestinationSymmetricKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] DestinationSymmetricKey" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.DestinationSymmetricKey" />
      <MemberSignature Language="VB.NET" Value="Public Property DestinationSymmetricKey As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ DestinationSymmetricKey { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DestinationSymmetricKey : byte[] with get, set" Usage="System.Messaging.Message.DestinationSymmetricKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgDestinationSymmetricKey")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-366">Gets or sets the symmetric key used to encrypt application-encrypted messages or messages sent to foreign queues.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-366">Gets or sets the symmetric key used to encrypt application-encrypted messages or messages sent to foreign queues.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-367">메시지를 암호화 하는 데 사용 하는 대상 대칭 키를 지정 하는 바이트 값의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-367">An array of byte values that specifies the destination symmetric key used to encrypt the message.</span>
          </span>
          <span data-ttu-id="acf18-368">기본값은 빈 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-368">The default is a zero-length array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-369">두 가지 시나리오를 사용할 필요는 <xref:System.Messaging.Message.DestinationSymmetricKey%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-369">Two scenarios require you to use the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property.</span></span> <span data-ttu-id="acf18-370">첫 번째 응용 프로그램을 대신 메시지 큐에서 메시지를 암호화 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-370">The first is when your application, rather than Message Queuing, encrypts a message.</span></span> <span data-ttu-id="acf18-371">두 번째 메시지 큐가 아닌 큐 시스템에 암호화 된 메시지를 보낼 때가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-371">The second is when you send an encrypted message to a queuing system other than Message Queuing.</span></span>  
  
 <span data-ttu-id="acf18-372">이 속성을 설정 하기 전에 수신 큐 관리자의 공개 키와 대칭 키를 암호화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-372">Before you set this property, you must encrypt the symmetric key with the public key of the receiving queue manager.</span></span> <span data-ttu-id="acf18-373">응용 프로그램 암호화 된 메시지를 보내면 수신 큐 관리자를 사용 하 여 대칭 키 대상 큐로 보내기 전에 메시지를 암호 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-373">When you send an application-encrypted message, the receiving queue manager uses the symmetric key to decrypt the message before sending it to its destination queue.</span></span>  
  
 <span data-ttu-id="acf18-374">외부 큐로 메시지를 보내는 경우 메시지는 먼저 수신 응용 프로그램에 연결 된 대칭 키로 암호화 된 메시지를 전달 하는 적절 한 커넥터 응용 프로그램에서 수신 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-374">If you send a message to a foreign queue, the message is first received by the appropriate connector application, which forwards the encrypted message with the attached symmetric key to the receiving application.</span></span> <span data-ttu-id="acf18-375">대칭 키를 사용 하 여 메시지를 해독 하는 수신 응용 프로그램에서 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-375">It is then the responsibility of the receiving application to decrypt the message using the symmetric key.</span></span>  
  
 <span data-ttu-id="acf18-376">설정 하는 경우는 <xref:System.Messaging.Message.DestinationSymmetricKey%2A> 속성을 설정 해야는 <xref:System.Messaging.Message.ConnectorType%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-376">When you set the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property, you must also set the <xref:System.Messaging.Message.ConnectorType%2A> property.</span></span> <span data-ttu-id="acf18-377">메시지를 보낼 때 무시 메시지 큐는 <xref:System.Messaging.Message.DestinationSymmetricKey%2A> 속성 경우는 <xref:System.Messaging.Message.ConnectorType%2A> 에서도 속성이 설정 되지 않은 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-377">When the message is sent, Message Queuing ignores the <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property if the <xref:System.Messaging.Message.ConnectorType%2A> property is not also set.</span></span>  
  
 <span data-ttu-id="acf18-378"><xref:System.Messaging.Message.DestinationSymmetricKey%2A> 속성에는 최대 배열 크기는 256 자입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-378">The <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property has a maximum array size of 256.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-379">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-379">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="acf18-380">The <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-380">The <see cref="P:System.Messaging.Message.DestinationSymmetricKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
      </Docs>
    </Member>
    <Member MemberName="DigitalSignature">
      <MemberSignature Language="C#" Value="public byte[] DigitalSignature { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] DigitalSignature" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.DigitalSignature" />
      <MemberSignature Language="VB.NET" Value="Public Property DigitalSignature As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ DigitalSignature { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DigitalSignature : byte[] with get, set" Usage="System.Messaging.Message.DigitalSignature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgDigitalSignature")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-381">Gets or sets the digital signature that Message Queuing uses to authenticate the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-381">Gets or sets the digital signature that Message Queuing uses to authenticate the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-382">메시지를 인증 하는 데 사용 하는 메시지 큐 1.0 디지털 서명을 지정 하는 바이트 값의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-382">An array of byte values that specifies the Message Queuing 1.0 digital signature used to authenticate the message.</span>
          </span>
          <span data-ttu-id="acf18-383">기본값은 빈 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-383">The default is a zero-length array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-384">메시지 큐는 메시지 버전 1.0 큐에서 전송 된 메시지를 인증할 때 디지털 서명을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-384">Message Queuing uses the digital signature when authenticating messages that were sent by Message Queuing version 1.0.</span></span> <span data-ttu-id="acf18-385">대부분의 경우에서 메시지 큐 생성 하 고 설정 된 <xref:System.Messaging.Message.DigitalSignature%2A> 보내는 응용 프로그램이 인증을 요청 하는 경우이 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-385">In most cases, Message Queuing generates and sets the <xref:System.Messaging.Message.DigitalSignature%2A> property when the sending application requests authentication.</span></span> <span data-ttu-id="acf18-386">수신 응용 프로그램이이 속성을 사용 하 여 메시지에 첨부 된 디지털 서명을 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-386">The receiving application uses this property to retrieve the digital signature attached to the message.</span></span>  
  
 <span data-ttu-id="acf18-387">만 사용할 수 있습니다는 <xref:System.Messaging.Message.DigitalSignature%2A> 메시지 큐 2.0 버전을 실행 하는 경우에 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-387">You can only use the <xref:System.Messaging.Message.DigitalSignature%2A> property when running Message Queuing version 2.0.</span></span> <span data-ttu-id="acf18-388">인증을 요청할 때 보내는 응용 프로그램 버전 1.0 서명을 메시지 큐를 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-388">The sending application must specify Message Queuing version 1.0 signatures when requesting authentication.</span></span> <span data-ttu-id="acf18-389">보내는 응용 프로그램 메시지 큐 버전 2.0 서명의 보내는 경우이 속성의 4 바이트를 0이 포함 된 각 버퍼를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-389">If the sending application sends a Message Queuing version 2.0 signature, this property contains a buffer of four bytes, each containing zero.</span></span>  
  
 <span data-ttu-id="acf18-390"><xref:System.Messaging.Message.DigitalSignature%2A> 속성을 함께 <xref:System.Messaging.Message.SenderCertificate%2A> 속성에는 또한 커넥터 응용 프로그램에서 메시지를 보낼 때.</span><span class="sxs-lookup"><span data-stu-id="acf18-390">The <xref:System.Messaging.Message.DigitalSignature%2A> property, together with the <xref:System.Messaging.Message.SenderCertificate%2A> property, is also used by connector applications when a message is sent.</span></span> <span data-ttu-id="acf18-391">이 시나리오에서는 커넥터 응용 프로그램-메시지 큐가 아닌-메시지를 보내는 사용자의 인증서를 기반는 디지털 서명을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-391">In this scenario, the connector application—rather than Message Queuing—generates the digital signature, which it bases on the certificate of the user sending the message.</span></span>  
  
 <span data-ttu-id="acf18-392"><xref:System.Messaging.Message.DigitalSignature%2A> 속성에는 최대 배열 크기는 256 자입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-392">The <xref:System.Messaging.Message.DigitalSignature%2A> property has a maximum array size of 256.</span></span>  
  
 <span data-ttu-id="acf18-393">설정 하는 경우는 <xref:System.Messaging.Message.DigitalSignature%2A> 속성을 설정 해야는 <xref:System.Messaging.Message.ConnectorType%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-393">When you set the <xref:System.Messaging.Message.DigitalSignature%2A> property, you must also set the <xref:System.Messaging.Message.ConnectorType%2A> property.</span></span> <span data-ttu-id="acf18-394">메시지를 보낼 때 무시 메시지 큐는 <xref:System.Messaging.Message.DigitalSignature%2A> 속성 경우는 <xref:System.Messaging.Message.ConnectorType%2A> 에서도 속성이 설정 되지 않은 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-394">When a message is sent, Message Queuing ignores the <xref:System.Messaging.Message.DigitalSignature%2A> property if the <xref:System.Messaging.Message.ConnectorType%2A> property is not also set.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-395">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DigitalSignature" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-395">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.DigitalSignature" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="acf18-396">The <see cref="P:System.Messaging.Message.DigitalSignature" /> property is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-396">The <see cref="P:System.Messaging.Message.DigitalSignature" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.SenderCertificate" />
        <altmember cref="P:System.Messaging.Message.HashAlgorithm" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
      </Docs>
    </Member>
    <Member MemberName="EncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionAlgorithm EncryptionAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionAlgorithm EncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.EncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionAlgorithm As EncryptionAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionAlgorithm EncryptionAlgorithm { System::Messaging::EncryptionAlgorithm get(); void set(System::Messaging::EncryptionAlgorithm value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionAlgorithm : System.Messaging.EncryptionAlgorithm with get, set" Usage="System.Messaging.Message.EncryptionAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgEncryptionAlgorithm")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-397">Gets or sets the encryption algorithm used to encrypt the body of a private message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-397">Gets or sets the encryption algorithm used to encrypt the body of a private message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-398">
            <see cref="T:System.Messaging.EncryptionAlgorithm" /> 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-398">One of the <see cref="T:System.Messaging.EncryptionAlgorithm" /> enumeration values.</span>
          </span>
          <span data-ttu-id="acf18-399">기본값은 <see langword="RC2" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-399">The default is <see langword="RC2" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-400">메시지의 경우 개인 (암호화 됨)를 보내고 받을 때 암호가 해독 하기 전에 암호화 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-400">If a message is private (encrypted), it is encrypted before it is sent and decrypted upon receipt.</span></span> <span data-ttu-id="acf18-401"><xref:System.Messaging.Message.EncryptionAlgorithm%2A> 속성 개인 메시지의 메시지 본문을 암호화 하는 데 사용 하는 알고리즘을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-401">The <xref:System.Messaging.Message.EncryptionAlgorithm%2A> property specifies the algorithm used to encrypt the message body of a private message.</span></span>  
  
 <span data-ttu-id="acf18-402">큐에서는 들어오는 메시지를 암호화할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-402">A queue can require that incoming messages be encrypted.</span></span> <span data-ttu-id="acf18-403">응용 프로그램 개인 메시지만 허용 하는 큐에 암호화 되지 않은 (private이 아닌) 메시지를 보냅니다. private이 아닌 메시지만 허용 하는 개인 메시지 큐에 보내는 경우, 큐에서 메시지를 거부 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-403">If an application sends a non-encrypted (non-private) message to a queue that accepts only private messages, or if it sends a private message to a queue that accepts only non-private messages, the queue rejects the message.</span></span> <span data-ttu-id="acf18-404">보내는 응용 프로그램 부정 승인 메시지 이런 경우에서 반환 되도록 요청할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-404">The sending application can request that a negative acknowledgment message be returned in such a case.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-405">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.EncryptionAlgorithm" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-405">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.EncryptionAlgorithm" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
        <altmember cref="P:System.Messaging.MessageQueue.EncryptionRequired" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="T:System.Messaging.EncryptionRequired" />
      </Docs>
    </Member>
    <Member MemberName="Extension">
      <MemberSignature Language="C#" Value="public byte[] Extension { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Extension" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Extension" />
      <MemberSignature Language="VB.NET" Value="Public Property Extension As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Extension { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Extension : byte[] with get, set" Usage="System.Messaging.Message.Extension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgExtension")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-406">Gets or sets additional, application-defined information associated with the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-406">Gets or sets additional, application-defined information associated with the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-407">메시지와 관련 된 응용 프로그램 정의 정보를 제공 하는 바이트 값의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-407">An array of byte values that provides application-defined information associated with the message.</span>
          </span>
          <span data-ttu-id="acf18-408">기본값은 빈 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-408">The default is a zero-length array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-409"><xref:System.Messaging.Message.Extension%2A> 속성은 메시지와 연결 된 큰 이진 개체와 같은 응용 프로그램 정의 정보를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-409">The <xref:System.Messaging.Message.Extension%2A> property provides for application-defined information, like a large binary object, that is associated with the message.</span></span> <span data-ttu-id="acf18-410">내용을 해석 하는 수신 응용 프로그램 작업은는 <xref:System.Messaging.Message.Extension%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-410">It is the responsibility of the receiving application to interpret the contents of the <xref:System.Messaging.Message.Extension%2A> property.</span></span>  
  
 <span data-ttu-id="acf18-411">가능한 경우, 메시지 데이터를 포함 해야는 <xref:System.Messaging.Message.Body%2A> 메시지의 속성 보다는 <xref:System.Messaging.Message.Extension%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-411">Where possible, you should include message data in the <xref:System.Messaging.Message.Body%2A> property of the message rather than the <xref:System.Messaging.Message.Extension%2A> property.</span></span>  
  
 <span data-ttu-id="acf18-412">사용 하 여 외부 큐를 사용할 때의 <xref:System.Messaging.Message.Extension%2A> 속성을 통해 메시지 큐에 존재 하지 않는 메시지 속성을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-412">When working with foreign queues, use the <xref:System.Messaging.Message.Extension%2A> property to specify message properties that do not exist in Message Queuing.</span></span>  
  
 <span data-ttu-id="acf18-413">외부 큐 Microsoft 메시지 큐가 아닌 큐 시스템에 존재합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-413">A foreign queue exists in a queuing system other than Microsoft Message Queuing.</span></span> <span data-ttu-id="acf18-414">메시지 큐는 커넥터 응용 프로그램을 통해 이러한 큐와 통신합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-414">Message Queuing communicates with such queues through a connector application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-415">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Extension" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-415">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Extension" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="acf18-416">The <see cref="P:System.Messaging.Message.Extension" /> property is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-416">The <see cref="P:System.Messaging.Message.Extension" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.AppSpecific" />
        <altmember cref="P:System.Messaging.Message.Body" />
      </Docs>
    </Member>
    <Member MemberName="Formatter">
      <MemberSignature Language="C#" Value="public System.Messaging.IMessageFormatter Formatter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.IMessageFormatter Formatter" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Formatter" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatter As IMessageFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::IMessageFormatter ^ Formatter { System::Messaging::IMessageFormatter ^ get(); void set(System::Messaging::IMessageFormatter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Formatter : System.Messaging.IMessageFormatter with get, set" Usage="System.Messaging.Message.Formatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.IMessageFormatter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-417">Gets or sets the formatter used to serialize an object into or deserialize an object from the message body.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-417">Gets or sets the formatter used to serialize an object into or deserialize an object from the message body.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-418">
            <see cref="T:System.Messaging.IMessageFormatter" /> 에 기록 하거나 메시지 본문에서 읽을 수 스트림을 만드는입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-418">The <see cref="T:System.Messaging.IMessageFormatter" /> that produces a stream to be written to or read from the message body.</span>
          </span>
          <span data-ttu-id="acf18-419">기본값은 <see cref="T:System.Messaging.XmlMessageFormatter" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-419">The default is <see cref="T:System.Messaging.XmlMessageFormatter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-420">사용 하 여 <xref:System.Messaging.Message.Formatter%2A> 읽고 메시지를 쓸 때 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-420">Use the <xref:System.Messaging.Message.Formatter%2A> property when reading and writing a message.</span></span> <span data-ttu-id="acf18-421">포맷터가 serialize 큐로 메시지를 보낼 때의 <xref:System.Messaging.Message.Body%2A> 메시지 큐로 보낼 수 있는 스트림으로 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-421">When a message is sent to the queue, the formatter serializes the <xref:System.Messaging.Message.Body%2A> property into a stream that can be sent to the message queue.</span></span> <span data-ttu-id="acf18-422">포맷터는 메시지 데이터를 큐에서 읽을 때의 <xref:System.Messaging.Message.Body%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-422">When reading from a queue, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property.</span></span>  
  
 <span data-ttu-id="acf18-423">메시지의 내용을 직접 작성 하지 않는 경우는 <xref:System.Messaging.Message.BodyStream%2A> 속성 설정에서 <xref:System.Messaging.Message.Formatter%2A> 메시지를 보내기 전에 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-423">Unless you write the contents of the message directly to the <xref:System.Messaging.Message.BodyStream%2A> property, set the <xref:System.Messaging.Message.Formatter%2A> property before you send the message.</span></span> <span data-ttu-id="acf18-424">경우는 <xref:System.Messaging.MessageQueue.Send%2A> 메서드가 호출 되는 <xref:System.Messaging.MessageQueue> 인스턴스가, 본문에 포함 된 포맷터를 사용 하 여 serialize 되는 <xref:System.Messaging.Message.Formatter%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-424">When the <xref:System.Messaging.MessageQueue.Send%2A> method is called on the <xref:System.Messaging.MessageQueue> instance, the body is serialized using the formatter contained in the <xref:System.Messaging.Message.Formatter%2A> property.</span></span> <span data-ttu-id="acf18-425">에 대 한 값을 지정 하지 않고 메시지를 보내기는 <xref:System.Messaging.Message.Formatter%2A> 속성, 포맷터의 기본값은 <xref:System.Messaging.XmlMessageFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-425">If you send the message without specifying a value for the <xref:System.Messaging.Message.Formatter%2A> property, the formatter defaults to <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="acf18-426"><xref:System.Messaging.XmlMessageFormatter> 는 느슨하게 결합 되어 있으므로이 형식을 사용 하는 경우에 발신자와 수신자 입력 동일한 개체를 설정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-426">The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</span></span> <span data-ttu-id="acf18-427"><xref:System.Messaging.ActiveXMessageFormatter> 및 <xref:System.Messaging.BinaryMessageFormatter> 이진 표현으로 데이터를 직렬화 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-427">The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation.</span></span> <span data-ttu-id="acf18-428"><xref:System.Messaging.ActiveXMessageFormatter> COM 구성 요소를 받거나 보낼 때 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-428">The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-429">다음 코드 예제에서는 서식을 사용 하 여 메시지 본문을 보여 줍니다. <xref:System.Messaging.BinaryMessageFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-429">The following code example demonstrates formatting a message body using <xref:System.Messaging.BinaryMessageFormatter>.</span></span>  
  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 <span data-ttu-id="acf18-430">다음 코드 예제에서는 서식을 사용 하 여 메시지 본문을 보여 줍니다. <xref:System.Messaging.XmlMessageFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-430">The following code example demonstrates formatting a message body using <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="acf18-431">The <see cref="P:System.Messaging.Message.Formatter" /> property is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-431">The <see cref="P:System.Messaging.Message.Formatter" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="T:System.Messaging.XmlMessageFormatter" />
        <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
        <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
        <altmember cref="P:System.Messaging.MessageQueue.Formatter" />
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Messaging.HashAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.HashAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As HashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::HashAlgorithm HashAlgorithm { System::Messaging::HashAlgorithm get(); void set(System::Messaging::HashAlgorithm value); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Messaging.HashAlgorithm with get, set" Usage="System.Messaging.Message.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgHashAlgorithm")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-432">Gets or sets the hashing algorithm that Message Queuing uses when authenticating a message or creating a digital signature for a message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-432">Gets or sets the hashing algorithm that Message Queuing uses when authenticating a message or creating a digital signature for a message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-433">
            <see cref="T:System.Messaging.HashAlgorithm" /> 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-433">One of the <see cref="T:System.Messaging.HashAlgorithm" /> enumeration values.</span>
          </span>
          <span data-ttu-id="acf18-434">기본값은 Windows xp <see langword="SHA" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-434">For Windows XP, the default is <see langword="SHA" />.</span>
          </span>
          <span data-ttu-id="acf18-435">그렇지 않으면 기본값은 <see langword="MD5" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-435">Otherwise, the default is <see langword="MD5" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-436">원본 컴퓨터 메시지 큐는 메시지에 대 한 디지털 서명을 만들 때 해시 알고리즘을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-436">On the source computer, Message Queuing uses the hashing algorithm when creating a digital signature for a message.</span></span> <span data-ttu-id="acf18-437">대상 큐 관리자는 다음 수신 될 때 메시지를 인증 하 동일한 해시 알고리즘을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-437">The target Queue Manager then uses the same hashing algorithm to authenticate the message when it is received.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-438">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.HashAlgorithm" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-438">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.HashAlgorithm" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.AttachSenderId" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
        <altmember cref="T:System.Messaging.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Messaging.Message.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-439">Gets the message's identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-439">Gets the message's identifier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-440">메시지의 고유 식별자를 메시지 큐에서 생성 된입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-440">The message's unique identifier, which is generated by Message Queuing.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-441">메시지 큐는 메시지를 보낼 때 메시지 식별자를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-441">Message Queuing generates a message identifier when the message is sent.</span></span> <span data-ttu-id="acf18-442">식별자는 20 바이트로 구성 하며 두 개의 항목을 포함: 컴퓨터 <xref:System.Guid> 보내는 컴퓨터와 컴퓨터에 메시지에 대 한 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-442">The identifier is composed of 20 bytes and includes two items: the machine <xref:System.Guid> of the sending computer and a unique identifier for the message on the computer.</span></span> <span data-ttu-id="acf18-443">이 두 항목을 결합하여 네트워크에서 고유한 메시지 식별자를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-443">The combination of the two items produces a message identifier that is unique on the network.</span></span>  
  
 <span data-ttu-id="acf18-444">큐에서는 모든 메시지에 대 한 메시지 식별자를 생성 하는 메시지-승인 및 보고 메시지를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-444">Message Queuing generates message identifiers for all messages—including acknowledgment and report messages.</span></span> <span data-ttu-id="acf18-445">승인 메시지 원본, 보낸 메시지의 도착 여부에 대 한 응답의 메시지 큐에서 일반적으로 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-445">An acknowledgment message is generally sent by Message Queuing in reaction to the arrival or failure of an original, sent message.</span></span> <span data-ttu-id="acf18-446">찾을 수 있습니다는 <xref:System.Messaging.Message.Id%2A> 에서 원본 메시지의 속성 값은 <xref:System.Messaging.Message.CorrelationId%2A> 승인 메시지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-446">You can find the <xref:System.Messaging.Message.Id%2A> property value of the original message in the <xref:System.Messaging.Message.CorrelationId%2A> property of an acknowledgment message.</span></span>  
  
 <span data-ttu-id="acf18-447">사용할 수도 있습니다는 <xref:System.Messaging.Message.Id%2A> 응답 큐로 응답 메시지를 보낼 때 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-447">You can also use the <xref:System.Messaging.Message.Id%2A> property when sending a response message to a response queue.</span></span> <span data-ttu-id="acf18-448">응답 메시지의 원본 메시지의 식별자를 포함 하려면 설정는 <xref:System.Messaging.Message.CorrelationId%2A> 응답 메시지의 속성은 <xref:System.Messaging.Message.Id%2A> 원본 메시지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-448">To include the identifier of the original message in a response message, set the <xref:System.Messaging.Message.CorrelationId%2A> property of the response message to the <xref:System.Messaging.Message.Id%2A> property of the original message.</span></span> <span data-ttu-id="acf18-449">응답 메시지를 읽는 응용 프로그램 원본 메시지를 식별 하는 응답 메시지의 상관 관계 식별자를 유도할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-449">The application reading the response message can then use the correlation identifier of the response message to identify the original message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-450">다음 코드 예제는 큐에서 주문을 포함 하는 메시지를 송수신 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-450">The following code example sends and receives a message containing an order to and from a queue.</span></span> <span data-ttu-id="acf18-451">원본 메시지가 도달 하거나이 긍정 승인을 특별히 요청 큐에서 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-451">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-452">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-452">The message has not been sent.</span>
          </span>
          <span data-ttu-id="acf18-453">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-453">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="acf18-454">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Id" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-454">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Id" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.CorrelationId" />
      </Docs>
    </Member>
    <Member MemberName="InfiniteTimeout">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan InfiniteTimeout;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan InfiniteTimeout" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.Message.InfiniteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteTimeout As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan InfiniteTimeout;" />
      <MemberSignature Language="F#" Value=" staticval mutable InfiniteTimeout : TimeSpan" Usage="System.Messaging.Message.InfiniteTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-455">Specifies that no time-out exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-455">Specifies that no time-out exists.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-456"><xref:System.Messaging.Message.TimeToBeReceived%2A> 및 <xref:System.Messaging.Message.TimeToReachQueue%2A> 제한 시간을 지정 하는 값이 필요 합니다. 전자의 경우에 대 한 시간 제한은 큐에서 받을 메시지에 허용 된 최대 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-456"><xref:System.Messaging.Message.TimeToBeReceived%2A> and <xref:System.Messaging.Message.TimeToReachQueue%2A> require a value that specifies a time-out. For the former, the time-out is the maximum time allowed for a message to be received from the queue.</span></span> <span data-ttu-id="acf18-457">후자의 경우 시간 제한은 큐에 도달 하는 메시지에 대 한 허용 되는 시간입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-457">For the latter, the time-out is the time allowed for a message to reach the queue.</span></span> <span data-ttu-id="acf18-458">두 경우 모두 다양 한 시간 (초)로 제한 시간을 지정 하거나 사용할 수 있습니다 <xref:System.Messaging.Message.InfiniteTimeout> 제한 시간이 없도록 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-458">In both cases, you can specify the time-out as a number of seconds or use <xref:System.Messaging.Message.InfiniteTimeout> to indicate that no time-out exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-459">다음 코드 예제에서는 <xref:System.Messaging.Message.InfiniteTimeout> 필드입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-459">The following code example demonstrates the use of the <xref:System.Messaging.Message.InfiniteTimeout> field.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.Message.TimeToBeReceived" />
        <altmember cref="P:System.Messaging.Message.TimeToReachQueue" />
      </Docs>
    </Member>
    <Member MemberName="IsFirstInTransaction">
      <MemberSignature Language="C#" Value="public bool IsFirstInTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFirstInTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.IsFirstInTransaction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFirstInTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFirstInTransaction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFirstInTransaction : bool" Usage="System.Messaging.Message.IsFirstInTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgIsFirstInTransaction")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-460">Gets a value that indicates whether the message was the first message sent in a transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-460">Gets a value that indicates whether the message was the first message sent in a transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-461">
            <see langword="true" /> 트랜잭션에서; 보낸 첫 번째 메시지 인지 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-461">
              <see langword="true" /> if the message was the first message sent in a transaction; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-462">응용 프로그램 사용 하 여 수신 된 <xref:System.Messaging.Message.IsFirstInTransaction%2A> 메시지가 단일 트랜잭션에서 단일 대기열으로 보낸 첫 번째 메시지 인지를 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="acf18-462">Receiving applications use the <xref:System.Messaging.Message.IsFirstInTransaction%2A> property to verify that a message was the first message sent in a single transaction to a single queue.</span></span>  
  
 <span data-ttu-id="acf18-463">이 속성이 메시지 큐 버전 2.0에만 사용할 수 이상입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-463">This property is available only with Message Queuing version 2.0 and later.</span></span>  
  
 <span data-ttu-id="acf18-464">트랜잭션 경계를 확인 하려면 사용할 수 있습니다는 <xref:System.Messaging.Message.IsFirstInTransaction%2A> 두 개의 다른 속성과 함께 속성: <xref:System.Messaging.Message.IsLastInTransaction%2A> 및 <xref:System.Messaging.Message.TransactionId%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-464">To verify transaction boundaries, you can use the <xref:System.Messaging.Message.IsFirstInTransaction%2A> property along with two other properties: <xref:System.Messaging.Message.IsLastInTransaction%2A> and <xref:System.Messaging.Message.TransactionId%2A>.</span></span> <span data-ttu-id="acf18-465">전자는 트랜잭션에서 보내진 마지막 메시지 인지 여부를 확인 하 고 트랜잭션 식별자를 검색 하 고 후자를 사용 하십시오.</span><span class="sxs-lookup"><span data-stu-id="acf18-465">Use the former to check whether a message was the last message sent in the transaction, and use the latter to retrieve the identifier of the transaction.</span></span>  
  
 <span data-ttu-id="acf18-466">경우에, 트랜잭션에서 하나의 메시지가 보내집니다는 <xref:System.Messaging.Message.IsFirstInTransaction%2A> 및 <xref:System.Messaging.Message.IsLastInTransaction%2A> 속성은 모두로 설정 됩니다 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-466">If only one message is sent in a transaction, the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties are both set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-467">다음 코드 예제에서는 메시지의 값을 표시 <xref:System.Messaging.Message.IsFirstInTransaction%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-467">The following code example displays the value of a message's <xref:System.Messaging.Message.IsFirstInTransaction%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-468">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-468">The message has not been sent.</span>
          </span>
          <span data-ttu-id="acf18-469">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-469">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="acf18-470">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.IsFirstInTransaction" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-470">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.IsFirstInTransaction" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.IsLastInTransaction" />
        <altmember cref="P:System.Messaging.Message.TransactionId" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
      </Docs>
    </Member>
    <Member MemberName="IsLastInTransaction">
      <MemberSignature Language="C#" Value="public bool IsLastInTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLastInTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.IsLastInTransaction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLastInTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLastInTransaction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLastInTransaction : bool" Usage="System.Messaging.Message.IsLastInTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgIsLastInTransaction")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-471">Gets a value that indicates whether the message was the last message sent in a transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-471">Gets a value that indicates whether the message was the last message sent in a transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-472">
            <see langword="true" /> 메시지가 단일 트랜잭션에서 보내진 마지막 메시지 이면 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-472">
              <see langword="true" /> if the message was the last message sent in a single transaction; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-473">응용 프로그램 사용 하 여 수신 된 <xref:System.Messaging.Message.IsLastInTransaction%2A> 메시지가 단일 트랜잭션에서 단일 대기열으로 보낸 마지막 메시지 인지를 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="acf18-473">Receiving applications use the <xref:System.Messaging.Message.IsLastInTransaction%2A> property to verify that a message was the last message sent in a single transaction to a single queue.</span></span>  
  
 <span data-ttu-id="acf18-474">이 속성이 메시지 큐 버전 2.0에만 사용할 수 이상입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-474">This property is available only with Message Queuing version 2.0 and later.</span></span>  
  
 <span data-ttu-id="acf18-475">트랜잭션 경계를 확인 하려면 사용할 수 있습니다는 <xref:System.Messaging.Message.IsLastInTransaction%2A> 두 개의 다른 속성과 함께 속성: <xref:System.Messaging.Message.IsFirstInTransaction%2A> 및 <xref:System.Messaging.Message.TransactionId%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-475">To verify transaction boundaries, you can use the <xref:System.Messaging.Message.IsLastInTransaction%2A> property along with two other properties: <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.TransactionId%2A>.</span></span> <span data-ttu-id="acf18-476">전자는 트랜잭션에서 보낸 첫 번째 메시지 인지 여부를 확인 하 고 트랜잭션 식별자를 검색 하 고 후자를 사용 하십시오.</span><span class="sxs-lookup"><span data-stu-id="acf18-476">Use the former to check whether a message was the first message sent in the transaction, and use the latter to retrieve the identifier of the transaction.</span></span>  
  
 <span data-ttu-id="acf18-477">경우에, 트랜잭션에서 하나의 메시지가 보내집니다는 <xref:System.Messaging.Message.IsFirstInTransaction%2A> 및 <xref:System.Messaging.Message.IsLastInTransaction%2A> 속성은 모두로 설정 됩니다 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-477">If only one message is sent in a transaction, the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties are both set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-478">다음 코드 예제에서는 메시지의 값을 표시 <xref:System.Messaging.Message.IsLastInTransaction%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-478">The following code example displays the value of a message's <xref:System.Messaging.Message.IsLastInTransaction%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-479">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-479">The message has not been sent.</span>
          </span>
          <span data-ttu-id="acf18-480">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-480">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="acf18-481">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.IsLastInTransaction" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-481">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.IsLastInTransaction" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.IsFirstInTransaction" />
        <altmember cref="P:System.Messaging.Message.TransactionId" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.Messaging.Message.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgLabel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-482">Gets or sets an application-defined Unicode string that describes the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-482">Gets or sets an application-defined Unicode string that describes the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-483">메시지의 레이블입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-483">The label of the message.</span>
          </span>
          <span data-ttu-id="acf18-484">기본값은 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-484">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-485">메시지 레이블은 여러 용도로 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-485">You can use a message label for several purposes.</span></span> <span data-ttu-id="acf18-486">예를 들어 메시지 레이블을 사용하여 해당 내용을 표시하거나 레이블 값을 기반으로 메시지를 선택적으로 처리할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-486">For example, you can use it for display purposes or to selectively process messages based on the label value.</span></span> <span data-ttu-id="acf18-487">레이블을은 메시지에서 고유할 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-487">The label does not need to be unique across messages.</span></span>  
  
 <span data-ttu-id="acf18-488">메시지 큐와 메시지 레이블은 읽을 수 있는 용어로 만들어진 메시지나 큐를 식별할 수 있도록 응용 프로그램 정의 값을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-488">Message queue and message labels represent an application-defined value that can help identify the queue or message in human-readable terms.</span></span> <span data-ttu-id="acf18-489">것은 아무 의미도 메시지 큐 응용 프로그램에 포함 하는 레이블 내용을 해석 하는 응용 프로그램의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-489">It is the responsibility of the application to interpret the label contents, which have no intrinsic meaning to the Message Queuing application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-490">다음 코드 예제에서는 메시지의 값을 설정 가져오고 <xref:System.Messaging.Message.Label%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-490">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.Label%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-491">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Label" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-491">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Label" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
      </Docs>
    </Member>
    <Member MemberName="LookupId">
      <MemberSignature Language="C#" Value="public long LookupId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 LookupId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.LookupId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LookupId As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long LookupId { long get(); };" />
      <MemberSignature Language="F#" Value="member this.LookupId : int64" Usage="System.Messaging.Message.LookupId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-492">Introduced in MSMQ 3.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-492">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="acf18-493">Gets the message's lookup identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-493">Gets the message's lookup identifier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-494">메시지 큐에서 생성 되 고 해당 메시지가 있는 큐에 고유한 됩니다는 메시지의 조회 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-494">The message's lookup identifier, which is generated by Message Queuing and is unique to the queue where the message resides.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-495"><xref:System.Messaging.Message.LookupId%2A> 속성은 메시지의 조회 식별자에 대 한 읽기 전용 액세스를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-495">The <xref:System.Messaging.Message.LookupId%2A> property provides read-only access to a message's lookup identifier.</span></span> <span data-ttu-id="acf18-496">MSMQ 3.0에 도입 된 조회 식별자는 메시지 큐에서 생성 되 고 메시지를 큐에 배치 하면 각 메시지에 할당 되는 64 비트 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-496">The lookup identifier, introduced in MSMQ 3.0, is a 64-bit identifier that is generated by Message Queuing and assigned to each message when the message is placed in the queue.</span></span> <span data-ttu-id="acf18-497">조회 식별자는 메시지를 보낼 때 생성 되는 메시지 식별자와 같지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-497">The lookup identifier is not the same as the message identifier that is generated when the message is sent.</span></span>  
  
 <span data-ttu-id="acf18-498">메시지 큐는 커넥터 및 보내는 큐 시스템에서 생성 된 저널에 배달 못 뿐만 아니라 대상 응용 프로그램에서 생성, 관리 및 보고서 큐를 비롯 한 모든 큐에 배치 된 모든 메시지에 대 한 조회 식별자를 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-498">Message Queuing generates a lookup identifier for all messages that are placed in any queue, including application-generated destination, administration, and report queues, as well as system-generated journal, dead-letter, connector, and outgoing queues.</span></span> <span data-ttu-id="acf18-499">즉, 전송 및 메시지 큐 송신 응용 프로그램에서 메시지를 모두 포함 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-499">In other words, this includes both messages sent by sending applications and by Message Queuing.</span></span> <span data-ttu-id="acf18-500">조회 식별자는 큐에 고유 하며 큐 외부에서는 의미가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-500">The lookup identifier is unique to the queue and has no meaning outside the queue.</span></span>  
  
 <span data-ttu-id="acf18-501">여러 대상 큐로 전송 됩니다 또는 메시지의 복사본은 컴퓨터 저널 또는 업무 일지 큐에 저장 하는 경우에 메시지의 각 복사본 각 큐에 배치 된 경우 고유한 조회 식별자에는 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-501">If a message is sent to several destination queues, or if a copy of a message is stored in a computer journal or queue journal, each copy of the message will have its own lookup identifier when it is placed in its respective queue.</span></span>  
  
 <span data-ttu-id="acf18-502"><xref:System.Messaging.Message.LookupId%2A> 속성은 큐에서 검색 된 메시지에서 읽을 수만 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-502">The <xref:System.Messaging.Message.LookupId%2A> property can only be read on messages retrieved from a queue.</span></span>  
  
 <span data-ttu-id="acf18-503">조회 식별자 큐에서 특정 메시지를 읽는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-503">A lookup identifier is used to read a specific message in the queue.</span></span> <span data-ttu-id="acf18-504">메시지의 조회 식별자 확인 되 면 수신 응용 프로그램이 호출할 수는 <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> 또는 <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> 함수를 해당 메시지에 직접 이동 하 고 보거나 큐의 앞에서 시작 해야 하는 커서와 달리 큐에서 검색 하 고 큐에 끝 방향으로 이동</span><span class="sxs-lookup"><span data-stu-id="acf18-504">Once the lookup identifier of a message is known, the receiving application can call the <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> or <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> function to go directly to that message and peek at or retrieve it from the queue, unlike cursors that must start at the front of the queue and navigate towards the end of the queue,</span></span>  
  
 <span data-ttu-id="acf18-505">큐에 있는 메시지의 조회 식별자를 가져오는 하는 것은 응용 프로그램의 책임입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-505">Obtaining the lookup identifiers of the messages in the queue is the responsibility of the application.</span></span> <span data-ttu-id="acf18-506">한 가지 방법을 조회 식별자를 가져올 수는 큐에 배치 될 때 각 메시지의 식별자를 캐시 하는 구성 요소를 호출 하는 대상 큐에 대 한 트리거를 만드는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-506">One possible way to obtain the lookup identifiers is to create a trigger for the destination queue that invokes a component that caches the identifiers of each message as they are placed in the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="acf18-507">MSMQ 3.0 is not installed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-507">MSMQ 3.0 is not installed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-508">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-508">The message has not been sent.</span>
          </span>
          <span data-ttu-id="acf18-509">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-509">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="acf18-510">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.LookupId" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-510">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.LookupId" /> property.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.PeekByLookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="MessageType">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageType MessageType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.MessageType MessageType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.MessageType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MessageType As MessageType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageType MessageType { System::Messaging::MessageType get(); };" />
      <MemberSignature Language="F#" Value="member this.MessageType : System.Messaging.MessageType" Usage="System.Messaging.Message.MessageType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgMessageType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-511">Gets the message type: <see langword="Normal" />, <see langword="Acknowledgment" />, or <see langword="Report" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-511">Gets the message type: <see langword="Normal" />, <see langword="Acknowledgment" />, or <see langword="Report" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-512">
            <see cref="P:System.Messaging.Message.MessageType" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-512">One of the <see cref="P:System.Messaging.Message.MessageType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-513">일반적으로 메시지 큐는 메시지를 보낼 때이 속성을 설정 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-513">Message Queuing typically sets this property when it sends the message.</span></span> <span data-ttu-id="acf18-514">메시지 큐 메시지는 다음 형식 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-514">A Message Queuing message can be one of the following types:</span></span>  
  
-   <span data-ttu-id="acf18-515">`Normal`를 응용 프로그램에서 큐로 보낸 일반 메시지 또는 보내는 응용 프로그램에 응답 메시지를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-515">`Normal`, which is either a typical message sent from an application to a queue, or a response message returned to the sending application.</span></span>  
  
-   <span data-ttu-id="acf18-516">`Acknowledgement`메시지 큐는 보내는 응용 프로그램에서 요청할 때마다 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-516">`Acknowledgement`, which Message Queuing generates whenever the sending application requests one.</span></span> <span data-ttu-id="acf18-517">예를 들어 메시지 큐는 원본 메시지가 도착하거나 원본 메시지를 읽었다는 것을 나타내는 긍정 또는 부정 메시지를 생성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-517">For example, Message Queuing can generate positive or negative messages to indicate that the original message arrived or was read.</span></span> <span data-ttu-id="acf18-518">메시지 큐는 보내는 응용 프로그램이 지정한 관리 큐에 적절한 승인 메시지를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-518">Message Queuing returns the appropriate acknowledgment message to the administration queue specified by the sending application.</span></span>  
  
-   <span data-ttu-id="acf18-519">`Report`메시지 큐 보고 큐가 소스 큐 관리자에서 정의 될 때마다 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-519">`Report`, which Message Queuing generates whenever a report queue is defined at the source Queue Manager.</span></span> <span data-ttu-id="acf18-520">추적 기능이 활성화되어 있으면 원본 메시지가 메시지 큐 서버에 들어가거나 나올 때마다 메시지 큐는 보고서 큐에 보고 메시지를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-520">When tracing is enabled, Message Queuing sends a report message to the Message Queuing report queue each time the original message enters or leaves a Message Queuing server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-521">다음 코드 예제에서는 메시지의 값을 표시 <xref:System.Messaging.Message.MessageType%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-521">The following code example displays the value of a message's <xref:System.Messaging.Message.MessageType%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-522">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-522">The message has not been sent.</span>
          </span>
          <span data-ttu-id="acf18-523">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-523">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="acf18-524">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.MessageType" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-524">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.MessageType" /> property.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageType" />
        <altmember cref="P:System.Messaging.MessagePropertyFilter.Acknowledgment" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Messaging.MessagePriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.MessagePriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As MessagePriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessagePriority Priority { System::Messaging::MessagePriority get(); void set(System::Messaging::MessagePriority value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Messaging.MessagePriority with get, set" Usage="System.Messaging.Message.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgPriority")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessagePriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-525">Gets or sets the message priority, which determines where in the queue the message is placed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-525">Gets or sets the message priority, which determines where in the queue the message is placed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-526">중 하나는 <see cref="T:System.Messaging.MessagePriority" /> 메시지의 우선 순위 수준을 나타내는 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-526">One of the <see cref="T:System.Messaging.MessagePriority" /> values, which represent the priority levels of non-transactional messages.</span>
          </span>
          <span data-ttu-id="acf18-527">기본값은 <see langword="Normal" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-527">The default is <see langword="Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-528"><xref:System.Messaging.Message.Priority%2A> 방법을 메시지 큐 메시지를 처리 하 큐 중일 때와 대상에 도달 하는 속성에 영향을 줍니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-528">The <xref:System.Messaging.Message.Priority%2A> property affects how Message Queuing handles the message both while it is en route and once it reaches its destination.</span></span> <span data-ttu-id="acf18-529">높은 우선 순위의 메시지는 보내는 동안 우선 순위가 부여되고 대상 큐의 앞 부분에 삽입됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-529">Higher-priority messages are given preference during routing and inserted toward the front of the destination queue.</span></span> <span data-ttu-id="acf18-530">우선 순위가 같은 메시지는 도착 시간에 따라 큐에 배치됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-530">Messages with the same priority are placed in the queue according to their arrival time.</span></span>  
  
 <span data-ttu-id="acf18-531">트랜잭션이 아닌 메시지에 대 한 우선 순위를 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-531">You can set a meaningful priority only for non-transactional messages.</span></span> <span data-ttu-id="acf18-532">메시지 큐를 트랜잭션 메시지에 대 한 우선 순위를 자동으로 설정 `Lowest`, 이르게 우선 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-532">Message Queuing automatically sets the priority for transactional messages to `Lowest`, which causes transactional message priority to be ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-533">다음 코드 예제에서는 서로 다른 우선의 두 메시지를 보내고 큐로 검색 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-533">The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.</span></span>  
  
 [!code-cpp[Message.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CPP/message_defaultandpriority.cpp#1)]
 [!code-csharp[Message.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/CS/message_defaultandpriority.cs#1)]
 [!code-vb[Message.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.DefaultPropertiesToSend/VB/message_defaultandpriority.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-534">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Priority" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-534">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Priority" /> property.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessagePriority" />
        <altmember cref="P:System.Messaging.Message.MessageType" />
        <altmember cref="P:System.Messaging.MessageQueue.BasePriority" />
      </Docs>
    </Member>
    <Member MemberName="Recoverable">
      <MemberSignature Language="C#" Value="public bool Recoverable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Recoverable" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.Recoverable" />
      <MemberSignature Language="VB.NET" Value="Public Property Recoverable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Recoverable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Recoverable : bool with get, set" Usage="System.Messaging.Message.Recoverable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgRecoverable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-535">Gets or sets a value that indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-535">Gets or sets a value that indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-536">
            <see langword="true" /> 메시지 배달 (동안 디스크에 메시지를 저장)를 통해 보장 되는; 경우 <see langword="false" /> 경우 배달이 보장 되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-536">
              <see langword="true" /> if delivery of the message is guaranteed (through saving the message to disk while en route); <see langword="false" /> if delivery is not assured.</span>
          </span>
          <span data-ttu-id="acf18-537">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-537">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-538"><xref:System.Messaging.Message.Recoverable%2A> 속성 메시지를 배달 보장 되는지 여부를 나타냅니다.-대상 큐에 메시지는 동안 컴퓨터가 충돌 하는 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-538">The <xref:System.Messaging.Message.Recoverable%2A> property indicates whether the delivery of a message is guaranteed—even if a computer crashes while the message is en route to the destination queue.</span></span>  
  
 <span data-ttu-id="acf18-539">메시지 배달 보장 되는 경우 메시지는 로컬에 저장 경로 따르는 모든 단계 다음 컴퓨터를 성공적으로 전달 될 때까지.</span><span class="sxs-lookup"><span data-stu-id="acf18-539">If delivery of a message is guaranteed, the message is stored locally at every step along the route, until the message is successfully forwarded to the next computer.</span></span> <span data-ttu-id="acf18-540">설정의 <xref:System.Messaging.Message.Recoverable%2A> 속성을 `true` 처리량에 영향을 줄 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-540">Setting the <xref:System.Messaging.Message.Recoverable%2A> property to `true` could affect throughput.</span></span>  
  
 <span data-ttu-id="acf18-541">트랜잭션 된 메시지의 경우 메시지 큐 메시지의 값에 관계 없이 복구할 수 있는 <xref:System.Messaging.Message.Recoverable%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-541">If the message is transactional, Message Queuing automatically treats the message as recoverable, regardless of the value of the <xref:System.Messaging.Message.Recoverable%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-542">다음 코드 예제에서는 메시지의 값을 설정 가져오고 <xref:System.Messaging.Message.Recoverable%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-542">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.Recoverable%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-543">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Recoverable" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-543">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.Recoverable" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseTracing" />
      </Docs>
    </Member>
    <Member MemberName="ResponseQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue ResponseQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue ResponseQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.ResponseQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ ResponseQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseQueue : System.Messaging.MessageQueue with get, set" Usage="System.Messaging.Message.ResponseQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgResponseQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-544">Gets or sets the queue that receives application-generated response messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-544">Gets or sets the queue that receives application-generated response messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-545">
            <see cref="T:System.Messaging.MessageQueue" /> 어떤 응용 프로그램 생성 응답 메시지가 반환 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-545">The <see cref="T:System.Messaging.MessageQueue" /> to which application-generated response messages are returned.</span>
          </span>
          <span data-ttu-id="acf18-546">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-546">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-547"><xref:System.Messaging.Message.ResponseQueue%2A> 속성 수신 응용 프로그램이 보내는 응용 프로그램에 반환 되는 응용 프로그램에서 생성 한 응답 메시지를 받는 큐를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-547">The <xref:System.Messaging.Message.ResponseQueue%2A> property identifies the queue that receives application-generated response messages, which the receiving application returns to the sending application.</span></span> <span data-ttu-id="acf18-548">보내는 응용 프로그램은 메시지를 보낼 때 응답 큐를 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-548">The sending application specifies response queues when the application sends its messages.</span></span> <span data-ttu-id="acf18-549">사용 가능한 모든 큐는 응답 큐로 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-549">Any available queue can be specified as a response queue.</span></span>  
  
 <span data-ttu-id="acf18-550">응답 큐에 반환된 메시지는 응용 프로그램 관련 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-550">Messages returned to the response queue are application-specific.</span></span> <span data-ttu-id="acf18-551">해당 응용 프로그램에서는 메시지의 내용뿐만 아니라 메시지를 받을 때 취할 동작을 정의해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-551">The application must define the contents of the messages as well as the action to take upon receipt of a message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-552">다음 코드 예제에서는 메시지의 값을 설정 가져오고 <xref:System.Messaging.Message.ResponseQueue%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-552">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.ResponseQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-553">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ResponseQueue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-553">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.ResponseQueue" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.DestinationQueue" />
        <altmember cref="P:System.Messaging.Message.TransactionStatusQueue" />
      </Docs>
    </Member>
    <Member MemberName="SecurityContext">
      <MemberSignature Language="C#" Value="public System.Messaging.SecurityContext SecurityContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.SecurityContext SecurityContext" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SecurityContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityContext As SecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::SecurityContext ^ SecurityContext { System::Messaging::SecurityContext ^ get(); void set(System::Messaging::SecurityContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityContext : System.Messaging.SecurityContext with get, set" Usage="System.Messaging.Message.SecurityContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.SecurityContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-554">Gets or sets the security context for a message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-554">Gets or sets the security context for a message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-555">A <see cref="T:System.Messaging.SecurityContext" /> 속성이 이미 설정 되어 있으면 메시지의 경우 보안 컨텍스트를 포함 하는 개체가; 그렇지 않은 경우 NULL입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-555">A <see cref="T:System.Messaging.SecurityContext" /> object that contains the security context for a message, if the property has previously been set; otherwise NULL.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SenderCertificate">
      <MemberSignature Language="C#" Value="public byte[] SenderCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SenderCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SenderCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property SenderCertificate As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SenderCertificate { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SenderCertificate : byte[] with get, set" Usage="System.Messaging.Message.SenderCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgSenderCertificate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-556">Gets or sets the security certificate used to authenticate messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-556">Gets or sets the security certificate used to authenticate messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-557">보안 인증서를 메시지 보낸 사람을 확인을 사용 하 여 메시지 큐를 나타내는 바이트 값의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-557">An array of byte values that represents a security certificate, which Message Queuing uses to verify the sender of the message.</span>
          </span>
          <span data-ttu-id="acf18-558">기본값은 빈 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-558">The default is a zero-length array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-559">수신 응용 프로그램이 사용 하는 <xref:System.Messaging.Message.SenderCertificate%2A> 메시지에 외부 보안 인증서를 포함 하는 경우이 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-559">The receiving application uses the <xref:System.Messaging.Message.SenderCertificate%2A> property when the message includes an external security certificate.</span></span>  
  
 <span data-ttu-id="acf18-560">메시지 큐 내부 또는 외부 보안 인증서 중 하나를 사용 하는 메시지를 인증할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-560">Message Queuing can authenticate a message using either an internal or external security certificate.</span></span> <span data-ttu-id="acf18-561">메시지 큐는 메시지 무결성을 확인 하는 데 사용 되는 내부 인증서를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-561">Message Queuing provides internal certificates, which are used to verify message integrity.</span></span> <span data-ttu-id="acf18-562">인증 기관을 통해 액세스할 수 있는 외부 인증서를 제공는 <xref:System.Messaging.Message.SenderCertificate%2A> 메시지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-562">A certification authority provides an external certificate, which you can access through the <xref:System.Messaging.Message.SenderCertificate%2A> property of the message.</span></span> <span data-ttu-id="acf18-563">메시지를 인증할 메시지 큐를 허용 하는 것 외에도 외부 인증서에는 수신 응용 프로그램을 보낸 사람에 게 더 확인 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-563">In addition to allowing Message Queuing to authenticate the message, an external certificate allows the receiving application to further verify the sender.</span></span> <span data-ttu-id="acf18-564">내부 인증서에는 수신 응용 프로그램을 사용할 수 있는 값 없음.</span><span class="sxs-lookup"><span data-stu-id="acf18-564">An internal certificate has no usable value to a receiving application.</span></span>  
  
 <span data-ttu-id="acf18-565">메시지 큐 시스템의 디렉터리 서비스를 사용 하는 외부 인증서를 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-565">An external certificate must be registered with the directory service of the Message Queuing system.</span></span> <span data-ttu-id="acf18-566">외부 인증서는 인증 기관, 인증서 사용자, 인증서의 유효 기간, 인증서 사용자 및 인증 기관의 서명 공개 키에 대 한 정보를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-566">An external certificate contains information about the certification authority, the certificate user, the validity period of the certificate, the public key of the certificate user, and the certification authority's signature.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-567">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderCertificate" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-567">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderCertificate" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
        <altmember cref="P:System.Messaging.Message.Authenticated" />
      </Docs>
    </Member>
    <Member MemberName="SenderId">
      <MemberSignature Language="C#" Value="public byte[] SenderId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] SenderId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SenderId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SenderId As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ SenderId { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SenderId : byte[]" Usage="System.Messaging.Message.SenderId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgSenderId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-568">Gets the identifier of the sending user.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-568">Gets the identifier of the sending user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-569">보낸 사람을 식별 하는 바이트 값의 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-569">An array of byte values that identifies the sender.</span>
          </span>
          <span data-ttu-id="acf18-570">수신 큐 관리자 식별자를 사용 하 여 메시지와 큐에 대 한 액세스 권한을 보낸 사람의의 보낸 사람에 게 확인 메시지를 인증 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-570">The receiving Queue Manager uses the identifier when it authenticates the message to verify the sender of the message and the sender's access rights to the queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-571">경우는 <xref:System.Messaging.Message.AttachSenderId%2A> 속성은 `false`에 지정 된 보낸 사람 식별자는 <xref:System.Messaging.Message.SenderId%2A> 전송 될 때 메시지에 속성 연결 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-571">If the <xref:System.Messaging.Message.AttachSenderId%2A> property is `false`, the sender identifier specified in the <xref:System.Messaging.Message.SenderId%2A> property is not attached to the message when it is sent.</span></span> <span data-ttu-id="acf18-572">표시 메시지 큐 대상 큐로 메시지를 보낼 때 보낸 사람에 게 확인 하지 않음이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-572">This indicates to Message Queuing that the sender should not be validated when it sends the message to the destination queue.</span></span> <span data-ttu-id="acf18-573">경우는 <xref:System.Messaging.Message.AttachSenderId%2A> 속성은 `true`, <xref:System.Messaging.Message.SenderId%2A> 속성 값은 메시지가 인증 된 경우에 신뢰할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-573">If the <xref:System.Messaging.Message.AttachSenderId%2A> property is `true`, the <xref:System.Messaging.Message.SenderId%2A> property value is trustworthy only if the message was authenticated.</span></span> <span data-ttu-id="acf18-574">사용 하 여는 <xref:System.Messaging.Message.Authenticated%2A> 속성과 함께 <xref:System.Messaging.Message.SenderId%2A> 보낸 사람의 액세스 권한을 확인 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-574">Use the <xref:System.Messaging.Message.Authenticated%2A> property in conjunction with the <xref:System.Messaging.Message.SenderId%2A> property to verify the sender's access rights.</span></span>  
  
 <span data-ttu-id="acf18-575">커넥터 응용 프로그램은 메시지 큐와 큐 다른 시스템 간의 통신을 제공 하려면 커넥터 서버를 사용 하는 응용 프로그램.</span><span class="sxs-lookup"><span data-stu-id="acf18-575">A connector application is an application that uses a connector server to provide communication between Message Queuing and other queuing systems.</span></span> <span data-ttu-id="acf18-576">메시지 큐는 보낸 사람 id를 제공 하려면 커넥터 응용 프로그램을 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-576">Message Queuing requires connector applications to provide sender identification.</span></span> <span data-ttu-id="acf18-577">설정 해야 합니다는 <xref:System.Messaging.Message.ConnectorType%2A> 커넥터 응용 프로그램을 통해 메시지를 보낼 때 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-577">You must set the <xref:System.Messaging.Message.ConnectorType%2A> property when sending a message through a connector application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-578">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-578">The message has not been sent.</span>
          </span>
          <span data-ttu-id="acf18-579">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-579">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="acf18-580">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderId" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-580">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderId" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.Authenticated" />
        <altmember cref="P:System.Messaging.Message.AttachSenderId" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderName" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderType" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
      </Docs>
    </Member>
    <Member MemberName="SenderVersion">
      <MemberSignature Language="C#" Value="public long SenderVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 SenderVersion" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SenderVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SenderVersion As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long SenderVersion { long get(); };" />
      <MemberSignature Language="F#" Value="member this.SenderVersion : int64" Usage="System.Messaging.Message.SenderVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgSenderVersion")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-581">Gets the version of Message Queuing used to send the message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-581">Gets the version of Message Queuing used to send the message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-582">메시지 큐 메시지를 보내는 데의 버전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-582">The version of Message Queuing used to send the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-583"><xref:System.Messaging.Message.SenderVersion%2A> 속성은 특정 기능에 대 한 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-583">The <xref:System.Messaging.Message.SenderVersion%2A> property is important for certain features.</span></span> <span data-ttu-id="acf18-584">예를 들어 메시지 큐 2.0에 의해서만 이상 버전에서는 트랜잭션 처리는 지원 및 디지털 서명을 MSMQ 1.0에서 보낸 메시지를 인증 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-584">For example, transaction processing is supported only by Message Queuing 2.0 and later, and digital signatures are used to authenticate messages sent by MSMQ 1.0.</span></span>  
  
 <span data-ttu-id="acf18-585">보내는 큐 관리자 집합에서 <xref:System.Messaging.Message.SenderVersion%2A> 속성은 메시지를 보낼 때.</span><span class="sxs-lookup"><span data-stu-id="acf18-585">The sending Queue Manager sets the <xref:System.Messaging.Message.SenderVersion%2A> property when the message is sent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-586">다음 코드 예제에서는 메시지의 값을 표시 <xref:System.Messaging.Message.SenderVersion%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-586">The following code example displays the value of a message's <xref:System.Messaging.Message.SenderVersion%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-587">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-587">The message has not been sent.</span>
          </span>
          <span data-ttu-id="acf18-588">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-588">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="acf18-589">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderVersion" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-589">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SenderVersion" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.TransactionId" />
        <altmember cref="P:System.Messaging.Message.IsFirstInTransaction" />
        <altmember cref="P:System.Messaging.Message.IsLastInTransaction" />
        <altmember cref="P:System.Messaging.Message.TransactionStatusQueue" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
      </Docs>
    </Member>
    <Member MemberName="SentTime">
      <MemberSignature Language="C#" Value="public DateTime SentTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime SentTime" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SentTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SentTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime SentTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.SentTime : DateTime" Usage="System.Messaging.Message.SentTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgSentTime")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-590">Gets the date and time on the sending computer that the message was sent by the source queue manager.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-590">Gets the date and time on the sending computer that the message was sent by the source queue manager.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-591">A <see cref="T:System.DateTime" /> 메시지를 보낸 시간을 나타내는입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-591">A <see cref="T:System.DateTime" /> that represents the time the message was sent.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-592"><xref:System.Messaging.Message.SentTime%2A> 속성은이 컴퓨터의 현지 시간으로 조정의 인스턴스는 <xref:System.Messaging.Message> 클래스 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-592">The <xref:System.Messaging.Message.SentTime%2A> property is adjusted to the local time of the computer on which this instance of the <xref:System.Messaging.Message> class was created.</span></span> <span data-ttu-id="acf18-593">이 표준 시간대는 원본 및 대상 큐의에서 다를 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-593">This time zone could be different from those of the source and destination queues.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-594">다음 코드 예제에서는 메시지의 값을 표시 <xref:System.Messaging.Message.SentTime%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-594">The following code example displays the value of a message's <xref:System.Messaging.Message.SentTime%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-595">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-595">The message has not been sent.</span>
          </span>
          <span data-ttu-id="acf18-596">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-596">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="acf18-597">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SentTime" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-597">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SentTime" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SourceMachine">
      <MemberSignature Language="C#" Value="public string SourceMachine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceMachine" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.SourceMachine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceMachine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceMachine { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourceMachine : string" Usage="System.Messaging.Message.SourceMachine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgSourceMachine")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-598">Gets the computer from which the message originated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-598">Gets the computer from which the message originated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-599">메시지를 보낸 컴퓨터의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-599">The name of the computer from which the message was sent.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-600">형식은 <xref:System.Messaging.Message.SourceMachine%2A> 속성 앞에 두 개의 슬래시를 포함 하지 않습니다 (\\\\).</span><span class="sxs-lookup"><span data-stu-id="acf18-600">The format of the <xref:System.Messaging.Message.SourceMachine%2A> property does not include preceding two forward slashes (\\\\).</span></span> <span data-ttu-id="acf18-601">예를 들어 `myServer` 유효한 <xref:System.Messaging.Message.SourceMachine%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-601">For example, `myServer` is a valid <xref:System.Messaging.Message.SourceMachine%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-602">다음 코드 예제에서는 메시지의 값을 표시 <xref:System.Messaging.Message.SourceMachine%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-602">The following code example displays the value of a message's <xref:System.Messaging.Message.SourceMachine%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-603">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-603">The message has not been sent.</span>
          </span>
          <span data-ttu-id="acf18-604">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-604">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="acf18-605">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SourceMachine" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-605">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.SourceMachine" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="acf18-606">The computer information or directory service could not be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-606">The computer information or directory service could not be accessed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
      </Docs>
    </Member>
    <Member MemberName="TimeToBeReceived">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToBeReceived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToBeReceived" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.TimeToBeReceived" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToBeReceived As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToBeReceived { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToBeReceived : TimeSpan with get, set" Usage="System.Messaging.Message.TimeToBeReceived" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTimeToBeReceived")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-607">Gets or sets the maximum amount of time for the message to be received from the destination queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-607">Gets or sets the maximum amount of time for the message to be received from the destination queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-608">대상 큐 로부터 받이 보낸된 메시지에 대 한 총 시간입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-608">The total time for a sent message to be received from the destination queue.</span>
          </span>
          <span data-ttu-id="acf18-609">기본값은 <see cref="F:System.Messaging.Message.InfiniteTimeout" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-609">The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-610"><xref:System.Messaging.Message.TimeToBeReceived%2A> 속성은 보낸된 메시지를 대상 큐에서 받을 수에 대 한 총 시간을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-610">The <xref:System.Messaging.Message.TimeToBeReceived%2A> property specifies the total time for a sent message to be received from the destination queue.</span></span> <span data-ttu-id="acf18-611">제한 시간 대상 큐 및 메시지를 받기 전에 큐에서 대기 하는 데 걸린 시간을 검색 하는 데 걸린 시간을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-611">The time limit includes the time spent getting to the destination queue and the time spent waiting in the queue before the message is received.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="acf18-612">종속 클라이언트 컴퓨터를 사용할 때 클라이언트 컴퓨터에 있는 시계가 메시지 큐를 실행 하는 서버에 시계와 동기화 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-612">When using dependent client computers, be sure the clock on the client computer is synchronized with the clock on the server that is running Message Queuing.</span></span> <span data-ttu-id="acf18-613">메시지를 보낼 때 예기치 않은 동작이 발생할 수 있습니다는 그렇지 않은 경우 해당 <xref:System.Messaging.Message.TimeToBeReceived%2A> 속성은 <xref:System.Messaging.Message.InfiniteTimeout>합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-613">Otherwise, unpredictable behavior might result when sending a message whose <xref:System.Messaging.Message.TimeToBeReceived%2A> property is not <xref:System.Messaging.Message.InfiniteTimeout>.</span></span>  
  
 <span data-ttu-id="acf18-614">으로 지정한 간격이 하는 경우는 <xref:System.Messaging.Message.TimeToBeReceived%2A> 속성에는 메시지 큐에서 제거 되기 전에 만료 되 면 메시지 큐 메시지에 두 가지 방법 중 하나를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-614">If the interval specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property expires before the message is removed from the queue, Message Queuing discards the message in one of two ways.</span></span> <span data-ttu-id="acf18-615">메시지의 <xref:System.Messaging.Message.UseDeadLetterQueue%2A> 속성이 `true`이면 배달 못 한 편지 큐로 메시지가 보내집니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-615">If the message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, the message is sent to the dead-letter queue.</span></span> <span data-ttu-id="acf18-616">경우 <xref:System.Messaging.Message.UseDeadLetterQueue%2A> 은 `false`, 메시지는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-616">If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false`, the message is ignored.</span></span>  
  
 <span data-ttu-id="acf18-617">메시지의 설정할 수 있습니다 <xref:System.Messaging.Message.AcknowledgeType%2A> 타이머가 만료 되기 전에 메시지가 검색 되지 않으면 메시지를 보내도록 메시지 큐는 부정 승인에 속성을 보내는 응용 프로그램을 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-617">You can set the message's <xref:System.Messaging.Message.AcknowledgeType%2A> property to request that Message Queuing send a negative acknowledgment message back to the sending application if the message is not retrieved before the timer expires.</span></span>  
  
 <span data-ttu-id="acf18-618">지정 된 값의 <xref:System.Messaging.Message.TimeToBeReceived%2A> 속성을 사용 하면 지정 된 값 보다 작으면는 <xref:System.Messaging.Message.TimeToReachQueue%2A> 속성을 <xref:System.Messaging.Message.TimeToBeReceived%2A> 우선적으로 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-618">If the value specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property is less than the value specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property, <xref:System.Messaging.Message.TimeToBeReceived%2A> takes precedence.</span></span>  
  
 <span data-ttu-id="acf18-619">단일 트랜잭션 내에서 여러 메시지를 보내면 메시지 큐에서 사용 하 여 <xref:System.Messaging.Message.TimeToBeReceived%2A> 첫 번째 메시지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-619">When several messages are sent in a single transaction, Message Queuing uses the <xref:System.Messaging.Message.TimeToBeReceived%2A> property of the first message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-620">다음 코드 예제에서는 메시지의 값을 설정 가져오고 <xref:System.Messaging.Message.TimeToBeReceived%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-620">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.TimeToBeReceived%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-621">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TimeToBeReceived" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-621">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TimeToBeReceived" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="acf18-622">The value specified for <see cref="P:System.Messaging.Message.TimeToBeReceived" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-622">The value specified for <see cref="P:System.Messaging.Message.TimeToBeReceived" /> is invalid.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.TimeToReachQueue" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="TimeToReachQueue">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToReachQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToReachQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.TimeToReachQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToReachQueue As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToReachQueue { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToReachQueue : TimeSpan with get, set" Usage="System.Messaging.Message.TimeToReachQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTimeToReachQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-623">Gets or sets the maximum amount of time for the message to reach the queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-623">Gets or sets the maximum amount of time for the message to reach the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-624">대상 큐에 도달 하는 메시지에 대 한 제한 시간 메시지 시간부터 시작 보내집니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-624">The time limit for the message to reach the destination queue, beginning from the time the message is sent.</span>
          </span>
          <span data-ttu-id="acf18-625">기본값은 <see cref="F:System.Messaging.Message.InfiniteTimeout" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-625">The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-626">으로 지정한 간격이 하는 경우는 <xref:System.Messaging.Message.TimeToReachQueue%2A> 메시지가 대상에 도달 하기 전에 속성 만료, 메시지 큐 메시지에 두 가지 방법 중 하나를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-626">If the interval specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property expires before the message reaches its destination, Message Queuing discards the message in one of two ways.</span></span> <span data-ttu-id="acf18-627">메시지의 <xref:System.Messaging.Message.UseDeadLetterQueue%2A> 속성이 `true`이면 배달 못 한 편지 큐로 메시지가 보내집니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-627">If the message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, the message is sent to the dead-letter queue.</span></span> <span data-ttu-id="acf18-628">경우 <xref:System.Messaging.Message.UseDeadLetterQueue%2A> 은 `false`, 메시지는 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-628">If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `false`, the message is ignored</span></span>  
  
 <span data-ttu-id="acf18-629">메시지의 설정할 수 있습니다 <xref:System.Messaging.Message.AcknowledgeType%2A> 타이머가 만료 되기 전에 메시지가 도착 하지 않으면 송신 응용 프로그램에 메시지를 보내도록 메시지 큐는 부정 승인에 속성을 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-629">You can set he message's <xref:System.Messaging.Message.AcknowledgeType%2A> property to request that Message Queuing send a negative acknowledgment message back to the sending application if the message does not arrive before the timer expires.</span></span>  
  
 <span data-ttu-id="acf18-630">경우는 <xref:System.Messaging.Message.TimeToReachQueue%2A> 속성이 0 초로 설정 되어 있으면 한 번만 대상으로 메시지를 보내려고 시도 메시지 큐-큐 대기 하는 메시지에 대 한 경우.</span><span class="sxs-lookup"><span data-stu-id="acf18-630">If the <xref:System.Messaging.Message.TimeToReachQueue%2A> property is set to 0 seconds, Message Queuing tries once to send the message to its destination—if the queue is waiting for the message.</span></span> <span data-ttu-id="acf18-631">큐가 로컬 이면 메시지가 항상 큐에 도달 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-631">If the queue is local, the message always reaches it.</span></span>  
  
 <span data-ttu-id="acf18-632">지정 된 값은 <xref:System.Messaging.Message.TimeToReachQueue%2A> 속성이 지정 된 값 보다 크면는 <xref:System.Messaging.Message.TimeToBeReceived%2A> 속성을 <xref:System.Messaging.Message.TimeToBeReceived%2A> 우선적으로 적용 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-632">If the value specified by the <xref:System.Messaging.Message.TimeToReachQueue%2A> property is greater than the value specified by the <xref:System.Messaging.Message.TimeToBeReceived%2A> property, <xref:System.Messaging.Message.TimeToBeReceived%2A> takes precedence.</span></span>  
  
 <span data-ttu-id="acf18-633">단일 트랜잭션 내에서 여러 메시지를 보내면 메시지 큐에서 사용 하 여 <xref:System.Messaging.Message.TimeToReachQueue%2A> 첫 번째 메시지의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-633">When several messages are sent in a single transaction, Message Queuing uses the <xref:System.Messaging.Message.TimeToReachQueue%2A> property of the first message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-634">다음 코드 예제에서는 메시지의 값을 설정 가져오고 <xref:System.Messaging.Message.TimeToReachQueue%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-634">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.TimeToReachQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-635">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TimeToReachQueue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-635">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TimeToReachQueue" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="acf18-636">The value specified for <see cref="P:System.Messaging.Message.TimeToReachQueue" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-636">The value specified for <see cref="P:System.Messaging.Message.TimeToReachQueue" /> is invalid.</span>
          </span>
          <span data-ttu-id="acf18-637">It might represent a negative number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-637">It might represent a negative number.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.TimeToBeReceived" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="TransactionId">
      <MemberSignature Language="C#" Value="public string TransactionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransactionId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.TransactionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransactionId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransactionId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransactionId : string" Usage="System.Messaging.Message.TransactionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTransactionId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-638">Gets the identifier for the transaction of which the message was a part.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-638">Gets the identifier for the transaction of which the message was a part.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-639">메시지에 연결 된 트랜잭션에 대 한 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-639">The identifier for the transaction associated with the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-640">응용 프로그램 사용을 받기는 <xref:System.Messaging.Message.TransactionId%2A> 속성을 특정 트랜잭션의 일부로 보낸 메시지를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-640">Receiving applications use the <xref:System.Messaging.Message.TransactionId%2A> property to verify that a message was sent as part of a specific transaction.</span></span> <span data-ttu-id="acf18-641">트랜잭션 식별자 뒤에 4 바이트 트랜잭션 시퀀스 번호를 보내는 컴퓨터 (첫 번째 16 비트)의 식별자를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-641">The transaction identifier contains the identifier of the sending computer (first 16 bits) followed by a 4-byte transaction sequence number.</span></span>  
  
 <span data-ttu-id="acf18-642">이 속성이 메시지 큐 버전 2.0에만 사용할 수 이상입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-642">This property is available only for Message Queuing version 2.0 and later.</span></span>  
  
 <span data-ttu-id="acf18-643">트랜잭션 식별자 없기 때문에 트랜잭션 시퀀스 번호 영구적으로 2에서 다시 시작은 고유 해야 하는데, 보장 되지 <sup>20</sup>합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-643">Transaction identifiers are not guaranteed to be unique, because transaction sequence numbers are not persistent, and they start over again at 2 <sup>20</sup>.</span></span> <span data-ttu-id="acf18-644">메시지 큐 보장만 후속 트랜잭션에서 다른 트랜잭션 시퀀스 번호를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-644">Message Queuing guarantees only that subsequent transactions will have different transaction sequence numbers.</span></span>  
  
 <span data-ttu-id="acf18-645">사용할 수 있습니다는 <xref:System.Messaging.Message.TransactionId%2A> 와 함께 속성은 <xref:System.Messaging.Message.IsFirstInTransaction%2A> 및 <xref:System.Messaging.Message.IsLastInTransaction%2A> 속성을 트랜잭션 경계를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-645">You can use the <xref:System.Messaging.Message.TransactionId%2A> property along with the <xref:System.Messaging.Message.IsFirstInTransaction%2A> and <xref:System.Messaging.Message.IsLastInTransaction%2A> properties to verify transaction boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-646">다음 코드 예제에서는 메시지의 값을 표시 <xref:System.Messaging.Message.TransactionId%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-646">The following code example displays the value of a message's <xref:System.Messaging.Message.TransactionId%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-647">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-647">The message has not been sent.</span>
          </span>
          <span data-ttu-id="acf18-648">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-648">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="acf18-649">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TransactionId" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-649">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TransactionId" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.IsFirstInTransaction" />
        <altmember cref="P:System.Messaging.Message.IsLastInTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
      </Docs>
    </Member>
    <Member MemberName="TransactionStatusQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue TransactionStatusQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue TransactionStatusQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.TransactionStatusQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionStatusQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ TransactionStatusQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionStatusQueue : System.Messaging.MessageQueue with get, set" Usage="System.Messaging.Message.TransactionStatusQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTransactionStatusQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-650">Gets the transaction status queue on the source computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-650">Gets the transaction status queue on the source computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-651">보내는 응용 프로그램에 다시 확인 메시지를 보내는 데 사용 되는 원본 컴퓨터에서 트랜잭션 상태 큐입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-651">The transaction status queue on the source computer, which is used for sending acknowledgement messages back to the sending application.</span>
          </span>
          <span data-ttu-id="acf18-652">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-652">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-653"><xref:System.Messaging.Message.TransactionStatusQueue%2A> 속성 커넥터 응용 프로그램에서 읽기 수신 확인을 수신 하는 원본 컴퓨터의 한 트랜잭션 큐를 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-653">The <xref:System.Messaging.Message.TransactionStatusQueue%2A> property identifies the transactional queue on the source computer that receives read-receipt acknowledgments from connector applications.</span></span> <span data-ttu-id="acf18-654">메시지 큐 속성을 설정 하 고 커넥터 응용 프로그램 외부 큐로 보낸 트랜잭션 메시지를 검색할 때 속성을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-654">Message Queuing sets the property, and connector applications use the property when retrieving transactional messages sent to foreign queues.</span></span>  
  
 <span data-ttu-id="acf18-655">외부 큐 Microsoft 메시지 큐가 아닌 큐 시스템에 존재합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-655">A foreign queue exists in a queuing system other than Microsoft Message Queuing.</span></span> <span data-ttu-id="acf18-656">메시지 큐는 커넥터 응용 프로그램을 통해 이러한 큐와 통신합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-656">Message Queuing communicates with such queues through a connector application.</span></span>  
  
 <span data-ttu-id="acf18-657">커넥터 응용 프로그램의 트랜잭션 상태 큐를 사용 하는 승인 메시지를 보내는 응용 프로그램 다시 전송할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-657">The connector application can use the transaction status queue to send acknowledgment messages back to the sending application.</span></span> <span data-ttu-id="acf18-658">트랜잭션 상태 큐는 보내는 응용 프로그램에 다른 승인을 요청 하지 않을 경우에이 승인을 받아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-658">The transaction status queue should receive these acknowledgments even if the sending application does not request other acknowledgments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-659">다음 코드 예제에서는 메시지의 값을 표시 <xref:System.Messaging.Message.TransactionStatusQueue%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-659">The following code example displays the value of a message's <xref:System.Messaging.Message.TransactionStatusQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-660">The message has not been sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-660">The message has not been sent.</span>
          </span>
          <span data-ttu-id="acf18-661">This property can only be read on messages retrieved from a queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-661">This property can only be read on messages retrieved from a queue.</span>
          </span>
          <span data-ttu-id="acf18-662">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TransactionStatusQueue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-662">-or-  The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.TransactionStatusQueue" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.TransactionId" />
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.DestinationQueue" />
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
      </Docs>
    </Member>
    <Member MemberName="UseAuthentication">
      <MemberSignature Language="C#" Value="public bool UseAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.UseAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAuthentication { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAuthentication : bool with get, set" Usage="System.Messaging.Message.UseAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseAuthentication")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-663">Gets or sets a value that indicates whether the message was (or must be) authenticated before being sent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-663">Gets or sets a value that indicates whether the message was (or must be) authenticated before being sent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-664">
            <see langword="true" /> 보내는 응용 프로그램에서 메시지에 대 한 인증을 요청 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-664">
              <see langword="true" /> if the sending application requested authentication for the message; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-665"><xref:System.Messaging.Message.UseAuthentication%2A> 속성 메시지를 인증 해야 하는지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-665">The <xref:System.Messaging.Message.UseAuthentication%2A> property specifies whether the message needs to be authenticated.</span></span> <span data-ttu-id="acf18-666">보내는 응용 프로그램에서 인증을 요청 하는 경우 메시지 큐 디지털 서명을 만들고 사용 하 여 전송 될 때 메시지에 서명 하는 메시지를 받을 때 인증 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-666">If the sending application requests authentication, Message Queuing creates a digital signature and uses it to sign the message when it is sent and authenticate the message when it is received.</span></span>  
  
 <span data-ttu-id="acf18-667">경우 <xref:System.Messaging.Message.UseAuthentication%2A> 은 `false` 및 인증 된 메시지만 허용 하는 큐에 메시지, 메시지 큐에 도달 하면 거부 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-667">If <xref:System.Messaging.Message.UseAuthentication%2A> is `false` and a message is sent to a queue that accepts only authenticated messages, the message will be rejected when it reaches the queue.</span></span>  
  
 <span data-ttu-id="acf18-668">메시지가 해당 속성을 확인 하 여 인증 실패를 확인할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-668">You cannot determine if a message failed authentication by looking at its properties.</span></span> <span data-ttu-id="acf18-669">큐에 메시지가 배달 되기 전에 메시지 큐에서 그러한 메시지를 삭제 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-669">Message Queuing discards such messages before they are delivered to the queue.</span></span> <span data-ttu-id="acf18-670">그러나 배달이 실패 하면 메시지가 메시지 큐에 도착는 것을 방지 한 경우 승인 메시지를 보내도록 요청할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-670">However, you can request that an acknowledgment message be sent if a delivery failure prevents a message from arriving in the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-671">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseAuthentication" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-671">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseAuthentication" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.Authenticated" />
        <altmember cref="P:System.Messaging.Message.ConnectorType" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderName" />
        <altmember cref="P:System.Messaging.Message.AuthenticationProviderType" />
        <altmember cref="P:System.Messaging.Message.DigitalSignature" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
        <altmember cref="P:System.Messaging.Message.AttachSenderId" />
      </Docs>
    </Member>
    <Member MemberName="UseDeadLetterQueue">
      <MemberSignature Language="C#" Value="public bool UseDeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.UseDeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDeadLetterQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDeadLetterQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDeadLetterQueue : bool with get, set" Usage="System.Messaging.Message.UseDeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseDeadLetterQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-672">Gets or sets a value that indicates whether a copy of the message that could not be delivered should be sent to a dead-letter queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-672">Gets or sets a value that indicates whether a copy of the message that could not be delivered should be sent to a dead-letter queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-673">
            <see langword="true" /> 메시지 배달 실패는 배달 못 한 편지 큐로 송신할 메시지의 복사본에 있는 경우 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-673">
              <see langword="true" /> if message-delivery failure should result in a copy of the message being sent to a dead-letter queue; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="acf18-674">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-674">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-675"><xref:System.Messaging.Message.UseJournalQueue%2A> 및 <xref:System.Messaging.Message.UseDeadLetterQueue%2A> 속성을 메시지 큐 메시지를 추적 하는 방법을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-675">The <xref:System.Messaging.Message.UseJournalQueue%2A> and <xref:System.Messaging.Message.UseDeadLetterQueue%2A> properties specify how Message Queuing tracks a message.</span></span> <span data-ttu-id="acf18-676">경우 <xref:System.Messaging.Message.UseDeadLetterQueue%2A> 은 `true`, 배달이 실패 (트랜잭션이 아닌 메시지의 경우) 하면 메시지가 메시지를 배달 하지 못한 컴퓨터에 대 한 비트랜잭션 배달 못 한 편지 큐로 보낼 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-676">If <xref:System.Messaging.Message.UseDeadLetterQueue%2A> is `true`, delivery failure (of a non-transactional message), causes the message to be sent to the non-transactional dead-letter queue on the computer that could not deliver the message.</span></span> <span data-ttu-id="acf18-677">배달이 실패 메시지 타이머가 만료 되는 경우 예를 들어 것일 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-677">Delivery failure could be caused by a message timer expiring, for example.</span></span>  
  
 <span data-ttu-id="acf18-678">트랜잭션 메시지를 배달 하지 못한 경우 메시지 큐 음수 트랜잭션과 미결 항상에서 원본 컴퓨터 트랜잭션 배달 못 한 편지 큐로 메시지를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-678">In the case of delivery failure for a transactional message, Message Queuing sends the message to the transactional dead-letter queue on the source machine in all negative and in-doubt cases.</span></span>  
  
 <span data-ttu-id="acf18-679">배달 못 한 편지 큐에 메시지를 저장할 때 더 이상 필요 없는 메시지를 제거 하는 정기적으로 큐를 지워야 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-679">When you store messages in a dead-letter queue, you should clear the queue periodically to remove messages that are no longer needed.</span></span> <span data-ttu-id="acf18-680">메시지 큐가 있는 컴퓨터에 대 한 크기 할당량에 대해 배달 못 한 편지 큐 수에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-680">Messages stored in dead-letter queues count against the size quota for the computer where the queue resides.</span></span> <span data-ttu-id="acf18-681">컴퓨터 할당량 관리자가 설정 되 고 단일 큐에서 뿐 아니라 전체 컴퓨터에 메시지 저장을 위해 할당 된 크기를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-681">The computer quota is set by the administrator and refers to the size allocated for storing messages on the whole computer, not just in a single queue.</span></span>  
  
 <span data-ttu-id="acf18-682">저널 또는 배달 못 한 편지 큐를 만들지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-682">You do not create a journal or dead-letter queue.</span></span> <span data-ttu-id="acf18-683">다음은 메시지 큐가 생성 하는 두 시스템 큐입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-683">These are both system queues that Message Queuing generates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-684">다음 코드 예제에서는 메시지의 값을 설정 가져오고 <xref:System.Messaging.Message.UseDeadLetterQueue%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-684">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-685">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseDeadLetterQueue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-685">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseDeadLetterQueue" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseJournalQueue" />
        <altmember cref="P:System.Messaging.Message.UseTracing" />
      </Docs>
    </Member>
    <Member MemberName="UseEncryption">
      <MemberSignature Language="C#" Value="public bool UseEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseEncryption" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.UseEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property UseEncryption As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseEncryption { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseEncryption : bool with get, set" Usage="System.Messaging.Message.UseEncryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseEncryption")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-686">Gets or sets a value that indicates whether to make the message private.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-686">Gets or sets a value that indicates whether to make the message private.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-687">
            <see langword="true" /> 메시지 큐에서 메시지를 암호화를 요구 하도록 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-687">
              <see langword="true" /> to require Message Queuing to encrypt the message; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="acf18-688">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-688">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-689">개인 메시지의 경우 전송 되 고 수신 될 때 암호를 해독 하기 전에 해당 본문이 암호화 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-689">If a message is private, its body is encrypted before it is sent and decrypted when it is received.</span></span> <span data-ttu-id="acf18-690">개인 메시지를 보내려면 보내는 응용 프로그램에서 암호화를 사용 하도록 지정 해야 하 고, 필요에 따라 암호화 알고리즘입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-690">To send a private message, the sending application must specify that encryption be used and, optionally, the encryption algorithm.</span></span>  
  
 <span data-ttu-id="acf18-691">개인 메시지를 보내는 경우 응용 프로그램 메시지 암호화를 수행 하지 않아도 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-691">When sending private messages, your application does not need to perform the message encryption.</span></span> <span data-ttu-id="acf18-692">메시지 큐는 응용 프로그램 디렉터리 서비스에 대 한 액세스 권한이 있는 Microsoft Windows 2000 엔터프라이즈 환경 내에서 메시지를 보내는 경우 메시지 본문을 암호화할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-692">Message Queuing can encrypt the message body for you if your application is sending messages within a Microsoft Windows 2000 enterprise, which has access to the directory service.</span></span> <span data-ttu-id="acf18-693">개인 메시지를 받을 수신 큐 관리자는 항상 메시지 본문에 암호 해독 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-693">When receiving private messages, the receiving Queue Manager always decrypts the message body.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-694">다음 코드 예제에서는 메시지의 값을 설정 가져오고 <xref:System.Messaging.Message.UseEncryption%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-694">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.UseEncryption%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-695">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseEncryption" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-695">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseEncryption" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.EncryptionAlgorithm" />
        <altmember cref="P:System.Messaging.MessageQueue.EncryptionRequired" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseJournalQueue : bool with get, set" Usage="System.Messaging.Message.UseJournalQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseJournalQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-696">Gets or sets a value that indicates whether a copy of the message should be kept in a machine journal on the originating computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-696">Gets or sets a value that indicates whether a copy of the message should be kept in a machine journal on the originating computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-697">
            <see langword="true" /> 메시지 이후에 원래 컴퓨터의 컴퓨터 업무 일지에 메시지의 복사본을 보관 될 요청을 전송한 다음 서버에 원래 컴퓨터) (에서; 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-697">
              <see langword="true" /> to require that a copy of a message be kept in the originating computer's machine journal after the message has been successfully transmitted (from the originating computer to the next server); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="acf18-698">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-698">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-699"><xref:System.Messaging.Message.UseJournalQueue%2A> 및 <xref:System.Messaging.Message.UseDeadLetterQueue%2A> 속성을 메시지 큐 메시지를 추적 하는 방법을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-699">The <xref:System.Messaging.Message.UseJournalQueue%2A> and <xref:System.Messaging.Message.UseDeadLetterQueue%2A> properties specify how Message Queuing tracks a message.</span></span> <span data-ttu-id="acf18-700">경우 <xref:System.Messaging.Message.UseJournalQueue%2A> 은 `true`, 복사본은 메시지가 전송 되는 각 단계에서 원래 컴퓨터의 컴퓨터 저널에 보관 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-700">If <xref:System.Messaging.Message.UseJournalQueue%2A> is `true`, then a copy is kept in the computer journal on the originating machine at each step that a message is transmitted.</span></span>  
  
 <span data-ttu-id="acf18-701">보낸된 메시지가 대상 큐가 원격 컴퓨터에 있는 경우에 업무 일지 큐에 복사 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-701">The sent message is only copied to the journal queue if the destination queue is on a remote computer.</span></span> <span data-ttu-id="acf18-702">메시지가 큐에 직접 보내집니다 대상이 로컬 컴퓨터에 있으면 저널링을 요구 하도록 중간 단계가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-702">If the destination is on the local computer, the message is sent directly to the queue; there are no intermediate steps to require journaling.</span></span>  
  
 <span data-ttu-id="acf18-703">업무 일지 큐에 메시지를 저장할 때 더 이상 필요 없는 메시지를 제거 하는 정기적으로 큐의 선택을 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-703">When you store messages in a journal queue, clear the queue periodically to remove messages that are no longer needed.</span></span> <span data-ttu-id="acf18-704">메시지 큐가 있는 컴퓨터에 대 한 할당량에 대 한 업무 일지 큐 수에 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-704">Messages stored in journal queues count against the quota for the computer where the queue resides.</span></span> <span data-ttu-id="acf18-705">(컴퓨터 할당량 관리자가 설정 됩니다.)</span><span class="sxs-lookup"><span data-stu-id="acf18-705">(The computer quota is set by the administrator.)</span></span>  
  
 <span data-ttu-id="acf18-706">저널 또는 배달 못 한 편지 큐를 만들지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-706">You do not create a journal or dead-letter queue.</span></span> <span data-ttu-id="acf18-707">다음은 메시지 큐가 생성 하는 두 시스템 큐입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-707">These are both system queues that Message Queuing generates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-708">다음 코드 예제에서는 메시지의 값을 설정 가져오고 <xref:System.Messaging.Message.UseJournalQueue%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-708">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.UseJournalQueue%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-709">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseJournalQueue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-709">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseJournalQueue" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.Message.UseTracing" />
        <altmember cref="P:System.Messaging.MessageQueue.UseJournalQueue" />
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
      </Docs>
    </Member>
    <Member MemberName="UseTracing">
      <MemberSignature Language="C#" Value="public bool UseTracing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseTracing" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.Message.UseTracing" />
      <MemberSignature Language="VB.NET" Value="Public Property UseTracing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseTracing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseTracing : bool with get, set" Usage="System.Messaging.Message.UseTracing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgUseTracing")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acf18-710">Gets or sets a value that indicates whether to trace a message as it moves toward its destination queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-710">Gets or sets a value that indicates whether to trace a message as it moves toward its destination queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acf18-711">
            <see langword="true" /> 시스템의 보고서 큐로 보낼 보고서를 생성 하는 각 중간 단계를 대상 큐로 전달 되는 도중에 원본 메시지를 수행한 경우 그렇지 않으면 <see langword="false" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-711">
              <see langword="true" /> if each intermediate step made by the original message en route to the destination queue generates a report to be sent to the system's report queue; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="acf18-712">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-712">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acf18-713"><xref:System.Messaging.Message.UseTracing%2A> 속성 대상 큐로 이동할 때 메시지의 경로 추적 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-713">The <xref:System.Messaging.Message.UseTracing%2A> property specifies whether to track the route of a message as it moves toward its destination queue.</span></span> <span data-ttu-id="acf18-714">경우 `true`, 보고 메시지 (메시지 큐에서 생성)은 라우팅 메시지 큐 서버를 통해 메시지가 전달 될 때마다 보고서 큐로 전송 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-714">If `true`, a report message (generated by Message Queuing) is sent to a report queue each time the message passes through a Message Queuing routing server.</span></span> <span data-ttu-id="acf18-715">보고서 큐 소스 큐 관리자에서 지정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-715">The report queue is specified by the source Queue Manager.</span></span> <span data-ttu-id="acf18-716">보고서 큐에서 메시지 큐; 생성 된 메시지를 보고 하려면 제한 되지 않습니다. 보고서 큐로 프로그램 응용 프로그램에서 생성 된 메시지를 보낼 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-716">Report queues are not limited to report messages generated by Message Queuing; your application-generated messages can also be sent to report queues.</span></span>  
  
 <span data-ttu-id="acf18-717">추적을 사용 하 여 Active Directory 설정 하 고 메시지 큐 엔터프라이즈에 대 한 보고서 큐를 지정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-717">Using tracing involves setting up Active Directory and specifying a report queue for the Message Queuing enterprise.</span></span> <span data-ttu-id="acf18-718">관리자가 이러한 설정을 구성합니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-718">The administrator configures these settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acf18-719">다음 코드 예제에서는 메시지의 값을 설정 가져오고 <xref:System.Messaging.Message.UseTracing%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="acf18-719">The following code example gets and sets the value of a message's <xref:System.Messaging.Message.UseTracing%2A> property.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="acf18-720">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseTracing" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acf18-720">The message queue is filtered to ignore the <see cref="P:System.Messaging.Message.UseTracing" /> property.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.Message.UseJournalQueue" />
      </Docs>
    </Member>
  </Members>
</Type>