<Type Name="BinaryMessageFormatter" FullName="System.Messaging.BinaryMessageFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f9220f5130f7d9cf8c72cc71ccc34de42e5e8ede" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460017" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BinaryMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BinaryMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.BinaryMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class BinaryMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="00c11-101">개체나 연결된 개체의 전체 그래프를 메시지 큐 본문으로 또는 메시지 큐 본문에서 이진 형식으로 serialize하거나 deserialize합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="00c11-101">Serializes or deserializes an object, or an entire graph of connected objects, to or from the body of a Message Queuing message, using a binary format.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00c11-102"><xref:System.Messaging.BinaryMessageFormatter> 매우 효율적 이며 대부분의 개체를 직렬화 하는 데 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="00c11-102">The <xref:System.Messaging.BinaryMessageFormatter> is very efficient and can be used to serialize most objects.</span></span> <span data-ttu-id="00c11-103">결과 간단 하 고 빠르게 구문 분석을 하지만 느슨하게 결합 된 메시징을으로 허용 하지 않습니다는 <xref:System.Messaging.XmlMessageFormatter> 않습니다.</span><span class="sxs-lookup"><span data-stu-id="00c11-103">The result is very compact and fast to parse, but does not allow for loosely coupled messaging as the <xref:System.Messaging.XmlMessageFormatter> does.</span></span> <span data-ttu-id="00c11-104">느슨하게 연결 된 의미 하는 클라이언트와 서버에서 다를 수 전송 및 수신 되는 형식 버전입니다.</span><span class="sxs-lookup"><span data-stu-id="00c11-104">Loosely coupled means that the client and the server can independently version the type that is sent and received.</span></span>  
  
 <span data-ttu-id="00c11-105">응용 프로그램의 인스턴스를 사용 하 여 큐에 메시지를 보낼 때는 <xref:System.Messaging.MessageQueue> 포맷터 클래스 개체를 스트림으로 serialize 하 고 메시지 본문에 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="00c11-105">When the application sends a message to the queue using an instance of the <xref:System.Messaging.MessageQueue> class, the formatter serializes the object into a stream and inserts it into the message body.</span></span> <span data-ttu-id="00c11-106">사용 하 여 큐에서 읽을 때는 <xref:System.Messaging.MessageQueue>, 포맷터는 메시지 데이터에는 <xref:System.Messaging.Message.Body%2A> 속성은 <xref:System.Messaging.Message>합니다.</span><span class="sxs-lookup"><span data-stu-id="00c11-106">When reading from a queue using a <xref:System.Messaging.MessageQueue>, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>.</span></span>  
  
 <span data-ttu-id="00c11-107"><xref:System.Messaging.BinaryMessageFormatter> 처리량 보다는 <xref:System.Messaging.XmlMessageFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="00c11-107"><xref:System.Messaging.BinaryMessageFormatter> provides faster throughput than the <xref:System.Messaging.XmlMessageFormatter>.</span></span> <span data-ttu-id="00c11-108">사용 하 여는 <xref:System.Messaging.BinaryMessageFormatter> 때 순수 속도 보다 느슨하게 결합 된 메시징는 필요 합니다.</span><span class="sxs-lookup"><span data-stu-id="00c11-108">Use the <xref:System.Messaging.BinaryMessageFormatter> when pure speed rather than loosely coupled messaging is desired.</span></span>  
  
   
  
## Examples  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.XmlMessageFormatter" />
    <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
    <altmember cref="P:System.Messaging.Message.Formatter" />
    <altmember cref="P:System.Messaging.MessageQueue.Formatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="00c11-109">
            <see cref="T:System.Messaging.BinaryMessageFormatter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-109">Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00c11-110">형식 스타일이나 Top 개체 어셈블리 스타일을 지정하지 않고 <see cref="T:System.Messaging.BinaryMessageFormatter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-110">Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class without specifying a type style or top object assembly style.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00c11-111">에 대 한 값을 지정 해야 합니다는 <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> 속성 (그래프의 루트 개체 레이아웃 방법을 정의) 및 <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> 속성 (개체 유형 설명 레이아웃 하는 방법 정의)의 인스턴스를 사용 하기 전에 <xref:System.Messaging.BinaryMessageFormatter> 클래스 직렬화 하 고 메시지를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="00c11-111">You must specify values for the <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> property (which defines how the root object in a graph is laid out) and the <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> property (which defines how object type descriptions are laid out) before using an instance of the <xref:System.Messaging.BinaryMessageFormatter> class to serialize and send a message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryMessageFormatter (System.Runtime.Serialization.Formatters.FormatterAssemblyStyle topObjectFormat, System.Runtime.Serialization.Formatters.FormatterTypeStyle typeFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle topObjectFormat, valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle typeFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (topObjectFormat As FormatterAssemblyStyle, typeFormat As FormatterTypeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryMessageFormatter(System::Runtime::Serialization::Formatters::FormatterAssemblyStyle topObjectFormat, System::Runtime::Serialization::Formatters::FormatterTypeStyle typeFormat);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="topObjectFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        <Parameter Name="typeFormat" Type="System.Runtime.Serialization.Formatters.FormatterTypeStyle" />
      </Parameters>
      <Docs>
        <param name="topObjectFormat">
          <span data-ttu-id="00c11-112">serialize된 스트림에서 그래프의 Top(루트) 개체가 레이아웃되는 방법을 결정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-112">Determines how the top (root) object of a graph is laid out in the serialized stream.</span>
          </span>
        </param>
        <param name="typeFormat">
          <span data-ttu-id="00c11-113">serialize된 스트림에서 형식 설명이 레이아웃되는 방법을 설명합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-113">Determines how type descriptions are laid out in the serialized stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00c11-114">루트 개체와 형식 설명의 형식을 지정하지 않고 <see cref="T:System.Messaging.BinaryMessageFormatter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-114">Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class, specifying the formats of the root object and the type descriptions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="00c11-115">검사할 <see cref="T:System.Messaging.Message" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-115">The <see cref="T:System.Messaging.Message" /> to inspect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00c11-116">포맷터에서 메시지 내용을 deserialize할 수 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-116">Determines whether the formatter can deserialize the contents of the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00c11-117">이진 메시지 포맷터에서 메시지를 deserialize할 수 있으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-117">
              <see langword="true" /> if the binary message formatter can deserialize the message; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00c11-118"><xref:System.Messaging.BinaryMessageFormatter.CanRead%2A> 반환 `false` 메시지 본문 이진 개체인 경우.</span><span class="sxs-lookup"><span data-stu-id="00c11-118"><xref:System.Messaging.BinaryMessageFormatter.CanRead%2A> returns `false` if the message body is not a binary object.</span></span>  
  
 <span data-ttu-id="00c11-119">수신 하는 컴퓨터에서 <xref:System.Messaging.BinaryMessageFormatter.CanRead%2A> 반환 `true` 역직렬화 하는 클래스에 대 한 어셈블리를 로컬로 존재 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="00c11-119">On the receiving computer, <xref:System.Messaging.BinaryMessageFormatter.CanRead%2A> returns `true` if the assembly for the class to be deserialized exists locally.</span></span> <span data-ttu-id="00c11-120">어셈블리를 전역 어셈블리 캐시에서 발견 되어야 하거나 (예를 들어 경우 해당 개체가 나타내는 사용자 지정 클래스) 응용 프로그램에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="00c11-120">The assembly must be found in the global assembly cache, or be linked to the application (for example, if the object represents a custom class).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="00c11-121">
            <paramref name="message" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-121">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00c11-122">현재 <see cref="T:System.Messaging.BinaryMessageFormatter" />와 읽기/쓰기 속성(루트 개체 및 형식 설명 형식)이 같은 <see cref="T:System.Messaging.BinaryMessageFormatter" /> 클래스의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-122">Creates an instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class whose read/write properties (the root object and type description formats) are the same as the current <see cref="T:System.Messaging.BinaryMessageFormatter" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00c11-123">이 <see cref="T:System.Messaging.BinaryMessageFormatter" />와 속성이 같지만 해당 메타데이터에서 포맷터 클래스 인스턴스가 되도록 지정되지 않은 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-123">An object whose properties are identical to those of this <see cref="T:System.Messaging.BinaryMessageFormatter" />, but whose metadata does not specify it to be a formatter class instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00c11-124">이 메서드는 포맷터의 복사본을 만들고 모든 속성의 값을 초기화 <xref:System.Messaging.BinaryMessageFormatter>합니다.</span><span class="sxs-lookup"><span data-stu-id="00c11-124">This method creates a copy of the formatter and initializes all its properties to the values of this <xref:System.Messaging.BinaryMessageFormatter>.</span></span> <span data-ttu-id="00c11-125">확장성을 위해 사용 되는 하지만 않습니다 하지 보장 읽기 또는 쓰기 스레드로부터의 안전성.</span><span class="sxs-lookup"><span data-stu-id="00c11-125">It is used for scalability, but does not guarantee read or write thread safety.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="00c11-126">deserialize될 <see cref="T:System.Messaging.Message" />(이진 형식)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-126">The <see cref="T:System.Messaging.Message" />, in binary format, to deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00c11-127">지정된 메시지의 내용을 읽고 deserialize된 메시지가 포함된 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-127">Reads the contents from the given message and creates an object that contains the deserialized message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00c11-128">deserialize된 메시지를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-128">The deserialized message.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="00c11-129">신뢰할 수 없는 데이터로이 메서드를 호출 하는 것은 보안상 위험 합니다.</span><span class="sxs-lookup"><span data-stu-id="00c11-129">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="00c11-130">신뢰할 수 있는 데이터에만이 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="00c11-130">Call this method only with trusted data.</span></span> <span data-ttu-id="00c11-131">자세한 내용은 참조 [데이터 유효성 검사](https://www.owasp.org/index.php/Data_Validation)합니다.</span><span class="sxs-lookup"><span data-stu-id="00c11-131">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 <span data-ttu-id="00c11-132">메시지의 본문 이진 형식 이어야 하며 처음 직렬화 된 것과 메시지를 deserialize 하는 데 동일한 직렬 변환기를 사용 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="00c11-132">The body of the message must be in binary format, and the same serializer must be used to deserialize the message as that which initially serialized it.</span></span> <span data-ttu-id="00c11-133">본문에는 사용자 지정 클래스를 나타내는 경우 해당 클래스에 대 한 어셈블리는 로컬로 존재 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="00c11-133">If the body represents a custom class, the assembly for that class must exist locally.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="00c11-134">메시지의 <see cref="P:System.Messaging.Message.BodyType" /> 속성이 이진 개체를 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-134">The message's <see cref="P:System.Messaging.Message.BodyType" /> property does not indicate a binary object.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="00c11-135">
            <paramref name="message" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-135">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="TopObjectFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TopObjectFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TopObjectFormat" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TopObjectFormat As FormatterAssemblyStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterAssemblyStyle TopObjectFormat { System::Runtime::Serialization::Formatters::FormatterAssemblyStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterAssemblyStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTopObjectFormat")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterAssemblyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00c11-136">어셈블리를 찾고 로드하는 작업과 관련하여 그래프의 Top(루트) 개체가 deserialize되는 방식을 정의하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-136">Gets or sets a value that defines how the top (root) object of a graph is deserialized with regards to finding and loading its assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00c11-137">deserialization 동작을 정의하는 <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-137">One of the <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> values that defines the deserialization behavior.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00c11-138">기본값을 적용 해야 하는 현재 `AssemblyStyle`합니다.</span><span class="sxs-lookup"><span data-stu-id="00c11-138">Currently, you should accept the default value, `AssemblyStyle`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.BinaryMessageFormatter.TypeFormat" />
      </Docs>
    </Member>
    <Member MemberName="TypeFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.BinaryMessageFormatter.TypeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeFormat As FormatterTypeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterTypeStyle TypeFormat { System::Runtime::Serialization::Formatters::FormatterTypeStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterTypeStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTypeFormat")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterTypeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00c11-139">serialize된 스트림에서 형식 설명이 레이아웃되는 방법을 정의하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-139">Gets or sets a value that defines how type descriptions are laid out in the serialized stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00c11-140">형식 설명 형식을 정의하는 <see cref="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-140">A <see cref="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle" /> that defines the type description format.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00c11-141">기본값을 적용 해야 하는 현재 `TypesWhenNeeded`합니다.</span><span class="sxs-lookup"><span data-stu-id="00c11-141">Currently, you should accept the default value, `TypesWhenNeeded`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="00c11-142">
            <see cref="T:System.Messaging.Message" /> 속성에 serialize된 개체가 포함될 <see cref="P:System.Messaging.Message.Body" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-142">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span>
          </span>
        </param>
        <param name="obj">
          <span data-ttu-id="00c11-143">메시지 본문으로 serialize될 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-143">The object to be serialized into the message body.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00c11-144">메시지 본문으로 개체를 serialize합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-144">Serializes an object into the body of the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00c11-145">Top 개체 형식 및 형식 서식 지정할 필요가 없습니다 읽을 때 있어야 큐에 쓰려고 합니다.</span><span class="sxs-lookup"><span data-stu-id="00c11-145">The top object format and type format need not be specified to write to the queue as they must be when reading.</span></span> <span data-ttu-id="00c11-146"><xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> 및 <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> 속성은 메시지를 역직렬화 하는 경우에 포맷터에 의해 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="00c11-146">The <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> and <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> properties are used by the formatter only when deserializing a message.</span></span>  
  
 <span data-ttu-id="00c11-147"><xref:System.Messaging.BinaryMessageFormatter> 대부분의 개체를 serialize 할 수 있지만 결과 느슨하게 결합 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="00c11-147">The <xref:System.Messaging.BinaryMessageFormatter> can serialize most objects, but the result is not loosely coupled.</span></span> <span data-ttu-id="00c11-148">그러나 이므로 compact, 포맷터는 큰 개체에 알맞습니다.</span><span class="sxs-lookup"><span data-stu-id="00c11-148">However, it is compact, so the formatter is efficient for large objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="00c11-149">
            <paramref name="message" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="00c11-149">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>