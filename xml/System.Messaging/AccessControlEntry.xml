<Type Name="AccessControlEntry" FullName="System.Messaging.AccessControlEntry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c397070501c98ed73167f86342253a01773b2018" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30459697" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AccessControlEntry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessControlEntry extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.AccessControlEntry" />
  <TypeSignature Language="VB.NET" Value="Public Class AccessControlEntry" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessControlEntry" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>응용 프로그램별 일반 작업을 구현할 트러스티(사용자, 그룹 또는 컴퓨터)에 대한 액세스 권한을 지정합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 대부분의 응용 프로그램에는 있는 트러스티 권한을 할당할 수 있습니다, 예를 들어, 읽기, 쓰기 및 개체를 삭제 하는 비슷한 작업이 있습니다. 이러한 일반적인 작업에 대 한 권한을 할당 하면 응용 프로그램에서는 해당 응용 프로그램에 특정 한 방법으로 간주 합니다. 예를 들어 메시지 큐 읽기 작업 큐에서 메시지를 받거나을 해석 합니다. <xref:System.Messaging.AccessControlEntry> 클래스는 이러한 일반적인 권한에 대 한 액세스를 제공 합니다.  
  
 액세스 제어 항목으로 작업할 경우에 권한을 할당할 트러스티를 지정 합니다. 설정 해야 중 적어도 하나는 <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, 또는 <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> 트러스티에 할당할 권한을 나타내는 속성입니다. 설정할 수 있습니다는 <xref:System.Messaging.AccessControlEntry.EntryType%2A> 속성을 지정할 권한 부여 되거나 거부 여부를 지정 합니다. 기본 항목 유형은 권한을 허용 하는 것입니다.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.AccessControlList" />
    <altmember cref="T:System.Messaging.MessageQueueAccessControlEntry" />
    <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Messaging.AccessControlEntry" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessControlEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlEntry.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessControlEntry();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>트러스티와 적용할 권한 집합을 지정하지 않는 <see cref="T:System.Messaging.AccessControlEntry" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정의 <xref:System.Messaging.AccessControlEntry.Trustee%2A> 속성과 중 하나 이상을 <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, 또는 <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> 이 사용 하기 전에 속성 <xref:System.Messaging.AccessControlEntry> 트러스티에 대 한 액세스 권한을 설정 하려면 인스턴스.  
  
 선택적으로 설정할 수는 <xref:System.Messaging.AccessControlEntry.EntryType%2A> 속성에 대 한 기본값 이지만 `Allow` 작업을 수행 하지 않도록 선택 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessControlEntry (System.Messaging.Trustee trustee);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Messaging.Trustee trustee) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessControlEntry(System::Messaging::Trustee ^ trustee);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="trustee" Type="System.Messaging.Trustee" />
      </Parameters>
      <Docs>
        <param name="trustee">사용자, 그룹, 컴퓨터, 도메인 또는 별칭을 지정하는 <see cref="T:System.Messaging.Trustee" />입니다.</param>
        <summary>권한을 허용하거나 거부할 트러스티를 지정하는 <see cref="T:System.Messaging.AccessControlEntry" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 설정의 <xref:System.Messaging.AccessControlEntry.EntryType%2A> 속성과 중 하나 이상을 <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, 또는 <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> 이 사용 하기 전에 속성 <xref:System.Messaging.AccessControlEntry> 트러스티에 대 한 액세스 권한을 설정 하려면 인스턴스.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="trustee" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <altmember cref="T:System.Messaging.Trustee" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessControlEntry (System.Messaging.Trustee trustee, System.Messaging.GenericAccessRights genericAccessRights, System.Messaging.StandardAccessRights standardAccessRights, System.Messaging.AccessControlEntryType entryType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Messaging.Trustee trustee, valuetype System.Messaging.GenericAccessRights genericAccessRights, valuetype System.Messaging.StandardAccessRights standardAccessRights, valuetype System.Messaging.AccessControlEntryType entryType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessControlEntry(System::Messaging::Trustee ^ trustee, System::Messaging::GenericAccessRights genericAccessRights, System::Messaging::StandardAccessRights standardAccessRights, System::Messaging::AccessControlEntryType entryType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="trustee" Type="System.Messaging.Trustee" />
        <Parameter Name="genericAccessRights" Type="System.Messaging.GenericAccessRights" />
        <Parameter Name="standardAccessRights" Type="System.Messaging.StandardAccessRights" />
        <Parameter Name="entryType" Type="System.Messaging.AccessControlEntryType" />
      </Parameters>
      <Docs>
        <param name="trustee">사용자, 그룹, 컴퓨터, 도메인 또는 별칭을 지정하는 <see cref="T:System.Messaging.Trustee" />입니다.</param>
        <param name="genericAccessRights">
          <see cref="T:System.Messaging.GenericAccessRights" /> 값의 비트 조합입니다.</param>
        <param name="standardAccessRights">
          <see cref="T:System.Messaging.StandardAccessRights" /> 값의 비트 조합입니다.</param>
        <param name="entryType">지정된 권한을 허용, 거부, 설정 또는 취소하도록 지정하는 <see cref="T:System.Messaging.AccessControlEntryType" /> 값 중의 하나입니다.</param>
        <summary>트러스티, 할당할 권한 및 이러한 권한을 부여할지 여부를 지정하는 <see cref="T:System.Messaging.AccessControlEntry" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 생성자의 오버이 로드는 <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> 속성의 비트 조합을는 `genericAccessRights` 및 `standardAccessRights` 지정한 매개 변수입니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="trustee" /> 매개 변수가 <see langword="null" />인 경우</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="genericAccessRights" />, <paramref name="standardAccessRights" /> 또는 <paramref name="entryType" /> 매개 변수가 잘못된 열거형 값인 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="CustomAccessRights">
      <MemberSignature Language="C#" Value="protected int CustomAccessRights { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CustomAccessRights" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.AccessControlEntry.CustomAccessRights" />
      <MemberSignature Language="VB.NET" Value="Protected Property CustomAccessRights As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int CustomAccessRights { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>사용자 지정 액세스 권한을 가져오거나 설정합니다.</summary>
        <value>대개 비트 플래그로 정의되는 응용 프로그램별 액세스 권한입니다.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Messaging.AccessControlEntry.GenericAccessRights" />
        <altmember cref="P:System.Messaging.AccessControlEntry.StandardAccessRights" />
      </Docs>
    </Member>
    <Member MemberName="EntryType">
      <MemberSignature Language="C#" Value="public System.Messaging.AccessControlEntryType EntryType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.AccessControlEntryType EntryType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.AccessControlEntry.EntryType" />
      <MemberSignature Language="VB.NET" Value="Public Property EntryType As AccessControlEntryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AccessControlEntryType EntryType { System::Messaging::AccessControlEntryType get(); void set(System::Messaging::AccessControlEntryType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.AccessControlEntryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>트러스티에 액세스 권한이 적용되는 방법을 나타내는 값을 가져오거나 설정합니다.</summary>
        <value>지정된 권한을 허용, 거부, 설정 또는 취소하도록 지정하는 <see cref="T:System.Messaging.AccessControlEntryType" /> 값 중의 하나입니다. 기본값은 <see langword="Allow" />입니다.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">항목 값이 올바른 <see cref="T:System.Messaging.AccessControlEntryType" /> 열거형 값이 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="GenericAccessRights">
      <MemberSignature Language="C#" Value="public System.Messaging.GenericAccessRights GenericAccessRights { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.GenericAccessRights GenericAccessRights" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.AccessControlEntry.GenericAccessRights" />
      <MemberSignature Language="VB.NET" Value="Public Property GenericAccessRights As GenericAccessRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::GenericAccessRights GenericAccessRights { System::Messaging::GenericAccessRights get(); void set(System::Messaging::GenericAccessRights value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.GenericAccessRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>읽기, 쓰기 및 실행에 대한 표준 액세스 권한과 개체별 액세스 권한에 모두 매핑하는 일반 액세스 권한 집합을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Messaging.GenericAccessRights" /> 값의 비트 조합입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 보안 개체의 Windows 2000 및 Windows NT 액세스 마스크 형식은 4 개의 상위 비트를 사용 하 여 일반 액세스 권한을 지정할 수 있습니다. 각 유형의 보안 개체에는 표준 및 개체에 대 한 액세스 권한 집합을 이러한 비트를 매핑합니다. 응용 프로그램 개인 보안 개체를 정의 하는 일반 액세스 권한을 사용할 수도 있습니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">설정한 값이 올바른 <see cref="T:System.Messaging.GenericAccessRights" /> 비트 플래그 멤버 조합이 아닌 경우</exception>
        <altmember cref="P:System.Messaging.AccessControlEntry.StandardAccessRights" />
        <altmember cref="P:System.Messaging.AccessControlEntry.CustomAccessRights" />
      </Docs>
    </Member>
    <Member MemberName="StandardAccessRights">
      <MemberSignature Language="C#" Value="public System.Messaging.StandardAccessRights StandardAccessRights { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.StandardAccessRights StandardAccessRights" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.AccessControlEntry.StandardAccessRights" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardAccessRights As StandardAccessRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::StandardAccessRights StandardAccessRights { System::Messaging::StandardAccessRights get(); void set(System::Messaging::StandardAccessRights value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.StandardAccessRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>대부분의 보안 가능한 개체의 공통 작업에 해당되는 표준 액세스 권한 집합을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Messaging.StandardAccessRights" /> 값의 비트 조합입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows 2000 및 Windows NT 액세스 마스크 형식은 표준 액세스 권한에 대 한 비트 집합이 포함 되어 있습니다. 각 유형의 보안 개체에 해당 형식의 개체에 관련 된 작업에 해당 하는 액세스 권한 집합이 있습니다. 이 개체 전용 액세스 권한 이외에 대부분 유형의 보안 개체에 공통적인 작업에 해당 하는 표준 액세스 권한의 집합.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">설정한 값이 올바른 <see cref="T:System.Messaging.StandardAccessRights" /> 비트 플래그 멤버 조합이 아닌 경우</exception>
        <altmember cref="P:System.Messaging.AccessControlEntry.GenericAccessRights" />
        <altmember cref="P:System.Messaging.AccessControlEntry.CustomAccessRights" />
      </Docs>
    </Member>
    <Member MemberName="Trustee">
      <MemberSignature Language="C#" Value="public System.Messaging.Trustee Trustee { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Trustee Trustee" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.AccessControlEntry.Trustee" />
      <MemberSignature Language="VB.NET" Value="Public Property Trustee As Trustee" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Trustee ^ Trustee { System::Messaging::Trustee ^ get(); void set(System::Messaging::Trustee ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Trustee</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>액세스 권한을 할당할 사용자, 그룹, 도메인 및 별칭을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Messaging.Trustee" />가 적용되는 사용자 계정, 그룹 계정 또는 로그온 세션을 지정하는 <see cref="T:System.Messaging.AccessControlEntry" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 사용자와 Win32 서비스와 같은 프로그램을 로컬 컴퓨터에 로그온 할 때 사용자 계정을 사용 합니다. 그룹 계정은 컴퓨터에 로그온 할 때 사용할 수 없지만에 유용한 <xref:System.Messaging.AccessControlEntry> 인스턴스를 허용 하거나 거부 하는 하나 이상의 사용자 계정에 액세스 합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Messaging.AccessControlEntry.Trustee" /> 속성은 <see langword="null" />입니다.</exception>
        <altmember cref="T:System.Messaging.Trustee" />
      </Docs>
    </Member>
  </Members>
</Type>