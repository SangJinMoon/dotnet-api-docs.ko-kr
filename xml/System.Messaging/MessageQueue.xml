<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MessageQueue.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c15f362dd97709b65574ff7b9474682818d0cb2c4b1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f362dd97709b65574ff7b9474682818d0cb2c4b1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>Provides access to a queue on a Message Queuing server.</source>
          <target state="translated">메시지 큐 서버에 있는 큐에 대한 액세스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>The Message Queuing technology allows applications running at different times to communicate across heterogeneous networks and systems that might be temporarily offline.</source>
          <target state="translated">메시지 큐 기술을 실행 중인 응용 프로그램이 서로 다른 시간에 다른 유형의 네트워크와 일시적으로 오프 라인 시스템 간에 통신할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>Applications send, receive, or peek (read without removing) messages from queues.</source>
          <target state="translated">응용 프로그램 송신, 수신, 또는 큐에서 메시지 (제거 하지 않고 읽기) 피크 (peek).</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>Message Queuing is an optional component of <ph id="ph1">[!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]</ph> and Windows NT, and must be installed separately.</source>
          <target state="translated">메시지 큐의 선택적 구성 요소는 <ph id="ph1">[!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]</ph> 및 Windows NT 별도로 설치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class is a wrapper around Message Queuing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 클래스는 메시지 큐에 대 한 래퍼입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>There are multiple versions of Message Queuing, and using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class can result in slightly different behavior, depending on the operating system you are using.</source>
          <target state="translated">메시지 큐를 사용 하 여 여러 버전의 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 사용 중인 운영 체제에 따라, 클래스 약간 다른 동작이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>For information about specific features of each version of Message Queuing, see the topic "What's New in Message Queuing" in the Platform SDK in MSDN.</source>
          <target state="translated">메시지 큐의 각 버전의 특정 기능에 대 한 정보를 msdn에서 Platform SDK의 새로운 기능 "을 메시지 큐에서" 항목을 참조 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class provides a reference to a Message Queuing queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 클래스는 메시지 큐에 대 한 참조를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>You can specify a path in the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.%23ctor%2A&gt;</ph> constructor to connect to an existing resource, or you can create a new queue on the server.</source>
          <target state="translated">경로 지정할 수는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.%23ctor%2A&gt;</ph> 생성자는 기존 리소스에 연결 하는 서버에서 새 큐를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>Before you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, you must associate the new instance of the <ph id="ph4">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class with an existing queue.</source>
          <target state="translated">호출 하기 전에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>의 새 인스턴스를 연결 해야 합니다는 <ph id="ph4">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 기존 큐를 사용 하 여 클래스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>At that point, you can manipulate the queue properties such as <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph>.</source>
          <target state="translated">와 같은 큐 속성을 조작할 수는 해당 시점에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> supports two types of message retrieval: synchronous and asynchronous.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 두 가지 유형의 메시지 검색 지원: 동기 및 비동기입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>The synchronous methods, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, cause the process thread to wait a specified time interval for a new message to arrive in the queue.</source>
          <target state="translated">동기 메서드 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, 프로세스 스레드가 지정된 된 시간 간격을 큐에 도착할 때까지 새 메시지에 대해 기다려야 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>The asynchronous methods, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>, allow the main application tasks to continue in a separate thread until a message arrives in the queue.</source>
          <target state="translated">비동기 메서드를 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>, 별도의 스레드에서 계속 하면 메시지가 큐에 도착할 때까지 주 응용 프로그램 작업을 허용 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>These methods work by using callback objects and state objects to communicate information between threads.</source>
          <target state="translated">이러한 메서드는 스레드 간의 의사 소통이 콜백 개체 및 상태 개체를 사용 하 여 작동 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>When you create a new instance of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class, you are not creating a new Message Queuing queue.</source>
          <target state="translated">새 인스턴스를 만들 때는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 클래스를 만들지 않고 새 메시지 큐입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>Instead, you can use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Delete%28System.String%29&gt;</ph>, and <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Purge%2A&gt;</ph> methods to manage queues on the server.</source>
          <target state="translated">대신 사용할 수는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Delete%28System.String%29&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Purge%2A&gt;</ph> 서버에서 큐를 관리 하는 방법입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>Unlike <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Purge%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph> and <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Delete%28System.String%29&gt;</ph> are <ph id="ph4">`static`</ph> members, so you can call them without creating a new instance of the <ph id="ph5">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class.</source>
          <target state="translated">와 달리 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Purge%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Delete%28System.String%29&gt;</ph> 는 <ph id="ph4">`static`</ph> 멤버의 새 인스턴스를 만들지 않고 전화할 수 이므로 <ph id="ph5">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>You can set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> object's <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property with one of three names: the friendly name, the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph>, or the <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph>.</source>
          <target state="translated">설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 개체의 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 세 가지 이름 중 하나를 사용 하 여 속성: 이름는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph>, 또는 <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>The friendly name, which is defined by the queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> properties, is <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph><ph id="ph4">\\</ph><ph id="ph5">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> for a public queue, and <ph id="ph6">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph><ph id="ph7">\\</ph><ph id="ph8">`Private$`</ph><ph id="ph9">\\</ph><ph id="ph10">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> for a private queue.</source>
          <target state="translated">큐의 문자로 정의 되는 식별 이름을 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> <ph id="ph4">\\</ph> <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> 공개 큐에 대 한 및 <ph id="ph6">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> <ph id="ph7">\\</ph> <ph id="ph8">`Private$`</ph> <ph id="ph9">\\</ph> <ph id="ph10">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> 개인 큐에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> property allows offline access to message queues.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> 속성 메시지 큐에 대 한 오프 라인 액세스를 허용 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>Lastly, you can use the queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> property to set the queue's <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph>.</source>
          <target state="translated">마지막으로 큐의 사용할 수 있습니다 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> 속성을 설정 큐의 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, see the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">인스턴스에 대 한 초기 속성 값 목록은 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, 참조는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>The following code example creates new <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> objects using various path name syntax types.</source>
          <target state="translated">다음 코드 예제에서는 새 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 다양 한 경로 이름 구문 형식을 사용 하 여 개체입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>In each case, it sends a message to the queue whose path is defined in the constructor.</source>
          <target state="translated">각각의 경우에서 경로가 생성자에 정의 된 큐로 메시지를 보냅니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>The following code example sends a message to a queue, and receives a message from a queue, using an application-specific class called <ph id="ph1">`Order`</ph>.</source>
          <target state="translated">다음 코드 예제에서는 큐에 메시지를 보내고 라고 하는 응용 프로그램 관련 클래스를 사용 하 여 큐에서 메시지를 받은 <ph id="ph1">`Order`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>Only the <ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.GetAllMessages" /&gt;</ph> method is thread safe.</source>
          <target state="translated">만 <ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.GetAllMessages" /&gt;</ph> 메서드는 스레드로부터 안전 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.#ctor">
          <source>After the default constructor initializes the new instance, you must set the instance's <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph> property before you can use the instance.</source>
          <target state="translated">기본 생성자가 새 인스턴스를 초기화하면, 이 인스턴스를 사용하기 전에 인스턴스의 <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph> 속성을 설정해야 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor">
          <source>Use this overload to create a new instance of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class that is not immediately tied to a queue on the Message Queuing server.</source>
          <target state="translated">이 오버 로드를 사용 하 여의 새 인스턴스를 만드는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 메시지 큐 서버에 있는 큐에 바로 연결 되지 않은 클래스입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor">
          <source>Before using this instance, you must connect it to an existing Message Queuing queue by setting the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property.</source>
          <target state="translated">이 인스턴스를 사용 하기 전에 연결 해야 기존 메시지 큐 큐를 설정 하 여는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor">
          <source>Alternatively, you can set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> reference to the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph> method's return value, thereby creating a new Message Queuing queue.</source>
          <target state="translated">설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 에 대 한 참조는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph> 여는 새 메시지 큐를 만들 메서드의 반환 값입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.%23ctor%2A&gt;</ph> constructor instantiates a new instance of the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class; it does not create a new Message Queuing queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.%23ctor%2A&gt;</ph> 생성자의 새 인스턴스를 인스턴스화하는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 클래스입니다; 새 메시지 큐를 만들지 않습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.</source>
          <target state="translated">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor">
          <source>Initial value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor">
          <source>The values set by the default constructor of the <ph id="ph1">&lt;xref:System.Messaging.DefaultPropertiesToSend&gt;</ph> class.</source>
          <target state="translated">기본 생성자가 설정한 값은 <ph id="ph1">&lt;xref:System.Messaging.DefaultPropertiesToSend&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor">
          <source>The values set by the default constructor of the <ph id="ph1">&lt;xref:System.Messaging.MessagePropertyFilter&gt;</ph> class.</source>
          <target state="translated">기본 생성자가 설정한 값은 <ph id="ph1">&lt;xref:System.Messaging.MessagePropertyFilter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor">
          <source>All the filter values are set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">모든 필터 값으로 설정 된 <ph id="ph1">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor">
          <source>The following code example creates a new <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 새 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>The location of the queue referenced by this <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 큐의 위치입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> class that references the Message Queuing queue at the specified path.</source>
          <target state="translated">지정된 경로에 있는 메시지 큐를 참조하는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>Use this overload when you want to tie the new <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance to a particular Message Queuing queue, for which you know the path, format name, or label.</source>
          <target state="translated">새 연결 하려는 경우이 오버 로드를 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 경로, 형식 이름 또는 레이블을 알아야 특정 메시지 큐 인스턴스.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>If you want to grant exclusive access to the first application that references the queue, you must set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A&gt;</ph> property to <ph id="ph2">`true`</ph> or use the constructor that passes a read-access restriction parameter.</source>
          <target state="translated">큐를 참조 하는 첫 번째 응용 프로그램에 대 한 단독 액세스 권한을 부여 하려는 경우 설정 해야 합니다는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph> 하거나 읽기 액세스 제한 매개 변수를 전달 하는 생성자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.%23ctor%2A&gt;</ph> constructor instantiates a new instance of the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class; it does not create a new Message Queuing queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.%23ctor%2A&gt;</ph> 생성자의 새 인스턴스를 인스턴스화하는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 클래스입니다; 새 메시지 큐를 만들지 않습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>To create a new queue in Message Queuing, use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph>.</source>
          <target state="translated">메시지 큐에서 새 큐를 만들려면 사용 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>The syntax of the <ph id="ph1">`path`</ph> parameter depends on the type of queue it references, as shown in the following table.</source>
          <target state="translated">구문은 <ph id="ph1">`path`</ph> 매개 변수 유형에 따라 다릅니다 큐의 해당 참조는 다음 표에 나와 있는 것 처럼 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>Queue type</source>
          <target state="translated">큐 유형</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>Public queue</source>
          <target state="translated">공개 큐</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>Private queue</source>
          <target state="translated">개인 큐</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>Journal queue</source>
          <target state="translated">저널 큐</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>Machine journal queue</source>
          <target state="translated">컴퓨터 저널 큐</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>Machine dead-letter queue</source>
          <target state="translated">컴퓨터 배달 못 한 편지 큐</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>Machine transactional dead-letter queue</source>
          <target state="translated">컴퓨터 트랜잭션 배달 못 한 편지 큐</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>Alternatively, you can use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> to describe the queue path, as shown in the following table.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> 다음 표에 나와 있는 것 처럼 큐 경로 설명 하기 위해 합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>Reference</source>
          <target state="translated">참조</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>Example</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>Format name</source>
          <target state="translated">형식 이름</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source><ph id="ph1">`FormatName:`</ph> [ <bpt id="p1">*</bpt>format name<ept id="p1">*</ept> ]</source>
          <target state="translated"><ph id="ph1">`FormatName:`</ph> [ <bpt id="p1">*</bpt>형식 이름을<ept id="p1">*</ept> ]</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source><ph id="ph1">`FormatName:Public=`</ph> 5A5F7535-AE9A-41d4-935C-845C2AFF7112</source>
          <target state="translated"><ph id="ph1">`FormatName:Public=`</ph> 5A5F7535-AE9A-41d4-935C-845C2AFF7112</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source><ph id="ph1">`FormatName:DIRECT=SPX:`</ph> <ph id="ph2">`NetworkNumber`</ph>; <ph id="ph3">`HostNumber`</ph><ph id="ph4">\\</ph><ph id="ph5">`QueueName`</ph></source>
          <target state="translated"><ph id="ph1">`FormatName:DIRECT=SPX:`</ph> <ph id="ph2">`NetworkNumber`</ph>; <ph id="ph3">`HostNumber`</ph><ph id="ph4">\\</ph><ph id="ph5">`QueueName`</ph></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source><ph id="ph1">`FormatName:DIRECT=TCP:`</ph> <ph id="ph2">`IPAddress`</ph><ph id="ph3">\\</ph><ph id="ph4">`QueueName`</ph></source>
          <target state="translated"><ph id="ph1">`FormatName:DIRECT=TCP:`</ph> <ph id="ph2">`IPAddress`</ph><ph id="ph3">\\</ph><ph id="ph4">`QueueName`</ph></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source><ph id="ph1">`FormatName:DIRECT=OS:`</ph> <ph id="ph2">`MachineName`</ph><ph id="ph3">\\</ph><ph id="ph4">`QueueName`</ph></source>
          <target state="translated"><ph id="ph1">`FormatName:DIRECT=OS:`</ph> <ph id="ph2">`MachineName`</ph><ph id="ph3">\\</ph><ph id="ph4">`QueueName`</ph></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>Label</source>
          <target state="translated">레이블</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source><ph id="ph1">`Label:`</ph> [ <bpt id="p1">*</bpt>label<ept id="p1">*</ept> ]</source>
          <target state="translated"><ph id="ph1">`Label:`</ph> [ <bpt id="p1">*</bpt>레이블<ept id="p1">*</ept> ]</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source><ph id="ph1">`Label:`</ph> TheLabel</source>
          <target state="translated"><ph id="ph1">`Label:`</ph> TheLabel</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>To work offline, you must use the format name syntax, not the path name syntax for the constructor.</source>
          <target state="translated">오프 라인으로 작업 하는 경로 이름 구문을 사용 하지 않고 생성자에 대 한 형식 이름 구문을 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>Otherwise, an exception is thrown because the primary domain controller is not available to resolve the path to the format name.</source>
          <target state="translated">그렇지 않으면 주 도메인 컨트롤러를 형식 이름에 경로 확인할 수 없기 때문에 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.</source>
          <target state="translated">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>These values are based on the properties of the Message Queuing queue with the path specified by the <ph id="ph1">`path`</ph> parameter.</source>
          <target state="translated">이러한 값은 지정 된 경로와 메시지 큐의 속성에 기반는 <ph id="ph1">`path`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>Initial value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>The values set by the default constructor of the <ph id="ph1">&lt;xref:System.Messaging.DefaultPropertiesToSend&gt;</ph> class.</source>
          <target state="translated">기본 생성자가 설정한 값은 <ph id="ph1">&lt;xref:System.Messaging.DefaultPropertiesToSend&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source><ph id="ph1">`true`</ph>, if the Message Queuing queue's privacy level setting is "Body"; otherwise, <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`true`</ph>"Body"; 경우 메시지 큐의 개인 정보 수준 설정 그렇지 않으면 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>The value of the Message Queuing queue's computer name property.</source>
          <target state="translated">메시지 큐의 컴퓨터 이름 속성의 값입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>The values set by the default constructor of the <ph id="ph1">&lt;xref:System.Messaging.MessagePropertyFilter&gt;</ph> class.</source>
          <target state="translated">기본 생성자가 설정한 값은 <ph id="ph1">&lt;xref:System.Messaging.MessagePropertyFilter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source><ph id="ph1">&lt;xref:System.String.Empty&gt;</ph>, if not set by the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Empty&gt;</ph>을 생성자에 의해 설정 되지 않은 경우.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source><ph id="ph1">&lt;xref:System.String.Empty&gt;</ph>, if not set by the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Empty&gt;</ph>을 생성자에 의해 설정 되지 않은 경우.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source><ph id="ph1">`true`</ph>, if the Message Queuing object's journal setting is enabled; otherwise, <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`true`</ph>메시지 큐 개체의 저널 설정을 사용 합니다. 그렇지 않으면 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>The following code example creates new <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> objects using various path name syntax types.</source>
          <target state="translated">다음 코드 예제에서는 새 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 다양 한 경로 이름 구문 형식을 사용 하 여 개체입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>In each case, it sends a message to the queue whose path is defined in the constructor.</source>
          <target state="translated">각각의 경우에서 경로가 생성자에 정의 된 큐로 메시지를 보냅니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph> property is not valid, possibly because it has not been set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph> 속성이 유효하지 않습니다(예: 속성을 설정하지 않은 경우).</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>The location of the queue referenced by this <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>, which can be "." for the local computer.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 큐의 위치로, 로컬 컴퓨터로 지정하려면 "."을 사용합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to grant exclusive read access to the first application that accesses the queue; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">첫 번째로 큐에 액세스하는 응용 프로그램에 단독 읽기 권한을 부여하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> class that references the Message Queuing queue at the specified path and with the specified read-access restriction.</source>
          <target state="translated">지정된 경로에 위치하고 읽기 액세스 제한이 설정된 메시지 큐를 참조하는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>Use this overload when you want to tie the new <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> to a particular Message Queuing queue, for which you know the path, format name, or label.</source>
          <target state="translated">새 연결 하려는 경우이 오버 로드를 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 경로, 형식 이름 또는 레이블을 알아야 특정 메시지 큐에 있습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>If you want to grant exclusive access to the first application that references the queue, set the <ph id="ph1">`sharedModeDenyReceive`</ph> parameter to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">큐를 참조 하는 첫 번째 응용 프로그램에 대 한 단독 액세스 권한을 부여 하려면, 설정 된 <ph id="ph1">`sharedModeDenyReceive`</ph> 매개 변수를 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>Otherwise, set <ph id="ph1">`sharedModeDenyReceive`</ph> to <ph id="ph2">`false`</ph> or use the constructor that has only a <ph id="ph3">`path`</ph> parameter.</source>
          <target state="translated">그렇지 않으면 설정 <ph id="ph1">`sharedModeDenyReceive`</ph> 를 <ph id="ph2">`false`</ph> 만 생성자를 사용 하거나는 <ph id="ph3">`path`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>Setting <ph id="ph1">`sharedModeDenyReceive`</ph> to <ph id="ph2">`true`</ph> affects all objects that access the Message Queuing queue, including other applications.</source>
          <target state="translated">설정 <ph id="ph1">`sharedModeDenyReceive`</ph> 를 <ph id="ph2">`true`</ph> 다른 응용 프로그램을 포함 하 여 메시지 큐 큐에 액세스 하는 모든 개체에 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>The effects of the parameter are not restricted to this application.</source>
          <target state="translated">매개 변수의 효과이 응용 프로그램에 제한 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.%23ctor%2A&gt;</ph> constructor creates a new instance of the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class; it does not create a new Message Queuing queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.%23ctor%2A&gt;</ph> 생성자의 새 인스턴스를 만듭니다.는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 클래스입니다; 새 메시지 큐를 만들지 않습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>To create a new queue in Message Queuing, use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph>.</source>
          <target state="translated">메시지 큐에서 새 큐를 만들려면 사용 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>The syntax of the <ph id="ph1">`path`</ph> parameter depends on the type of queue.</source>
          <target state="translated">구문은 <ph id="ph1">`path`</ph> 매개 변수는 큐의 형식에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>Queue type</source>
          <target state="translated">큐 유형</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>Public queue</source>
          <target state="translated">공개 큐</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>Private queue</source>
          <target state="translated">개인 큐</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>Journal queue</source>
          <target state="translated">저널 큐</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>Machine journal queue</source>
          <target state="translated">컴퓨터 저널 큐</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>Machine dead-letter queue</source>
          <target state="translated">컴퓨터 배달 못 한 편지 큐</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>Machine transactional dead-letter queue</source>
          <target state="translated">컴퓨터 트랜잭션 배달 못 한 편지 큐</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>Alternatively, you can use the format name or label of a Message Queuing queue to describe the queue path.</source>
          <target state="translated">또는 형식 이름 또는 메시지 큐의 레이블을 큐 경로 설명 하기 위해 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>Reference</source>
          <target state="translated">참조</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>Example</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>Format name</source>
          <target state="translated">형식 이름</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">`FormatName:`</ph> [ <bpt id="p1">*</bpt>format name<ept id="p1">*</ept> ]</source>
          <target state="translated"><ph id="ph1">`FormatName:`</ph> [ <bpt id="p1">*</bpt>형식 이름을<ept id="p1">*</ept> ]</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">`FormatName:Public=`</ph> 5A5F7535-AE9A-41d4-935C-845C2AFF7112</source>
          <target state="translated"><ph id="ph1">`FormatName:Public=`</ph> 5A5F7535-AE9A-41d4-935C-845C2AFF7112</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">`FormatName:DIRECT=SPX:`</ph> <ph id="ph2">`NetworkNumber`</ph>; <ph id="ph3">`HostNumber`</ph><ph id="ph4">\\</ph><ph id="ph5">`QueueName`</ph></source>
          <target state="translated"><ph id="ph1">`FormatName:DIRECT=SPX:`</ph> <ph id="ph2">`NetworkNumber`</ph>; <ph id="ph3">`HostNumber`</ph><ph id="ph4">\\</ph><ph id="ph5">`QueueName`</ph></target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">`FormatName:DIRECT=TCP:`</ph> <ph id="ph2">`IPAddress`</ph><ph id="ph3">\\</ph><ph id="ph4">`QueueName`</ph></source>
          <target state="translated"><ph id="ph1">`FormatName:DIRECT=TCP:`</ph> <ph id="ph2">`IPAddress`</ph><ph id="ph3">\\</ph><ph id="ph4">`QueueName`</ph></target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">`FormatName:DIRECT=OS:`</ph> <ph id="ph2">`MachineName`</ph><ph id="ph3">\\</ph><ph id="ph4">`QueueName`</ph></source>
          <target state="translated"><ph id="ph1">`FormatName:DIRECT=OS:`</ph> <ph id="ph2">`MachineName`</ph><ph id="ph3">\\</ph><ph id="ph4">`QueueName`</ph></target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>Label</source>
          <target state="translated">레이블</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">`Label:`</ph> [ <bpt id="p1">*</bpt>label<ept id="p1">*</ept> ]</source>
          <target state="translated"><ph id="ph1">`Label:`</ph> [ <bpt id="p1">*</bpt>레이블<ept id="p1">*</ept> ]</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">`Label:`</ph> TheLabel</source>
          <target state="translated"><ph id="ph1">`Label:`</ph> TheLabel</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>To work offline, you must use the format name syntax, rather than the friendly name syntax.</source>
          <target state="translated">오프 라인으로 작업 하려면 이름 구문이 아닌 형식 이름 구문을 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>Otherwise, an exception is thrown because the primary domain controller (on which Active Directory resides) is not available to resolve the path to the format name.</source>
          <target state="translated">그렇지 않으면 주 도메인 컨트롤러 (Active Directory 상주 하는) 형식 이름에 경로 확인할 수 없기 때문에 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>If a <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> opens a queue with the <ph id="ph2">`sharedModeDenyReceive`</ph> parameter set to <ph id="ph3">`true`</ph>, any <ph id="ph4">&lt;xref:System.Messaging.MessageQueue&gt;</ph> that subsequently tries to read from the queue generates a <ph id="ph5">&lt;xref:System.Messaging.MessageQueueException&gt;</ph> because of a sharing violation.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 된 큐는 <ph id="ph2">`sharedModeDenyReceive`</ph> 매개 변수 설정 <ph id="ph3">`true`</ph>있으면 모든 <ph id="ph4">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 이후에 큐에서 읽으려 할 때마다 생성 하는 <ph id="ph5">&lt;xref:System.Messaging.MessageQueueException&gt;</ph> 공유 위반입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Messaging.MessageQueueException&gt;</ph> is also thrown if a <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> tries to access the queue in exclusive mode while another <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> already has non-exclusive access to the queue.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Messaging.MessageQueueException&gt;</ph> 경우 throw 됩니다는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 할당이 단독 모드로 큐에에서 액세스 하려고 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 이미 비독점적 큐에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.</source>
          <target state="translated">다음 표에서의 인스턴스에 대 한 초기 속성 값을 보여 줍니다. <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>These values are based on the properties of the Message Queuing queue, with the path specified by the <ph id="ph1">`path`</ph> parameter.</source>
          <target state="translated">이러한 값은 지정 된 경로와 메시지 큐 큐의 속성에 기반는 <ph id="ph1">`path`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>Initial value</source>
          <target state="translated">초기 값</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>0.</source>
          <target state="translated">0.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Guid.Empty&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Guid.Empty&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>The values set by the default constructor of the <ph id="ph1">&lt;xref:System.Messaging.DefaultPropertiesToSend&gt;</ph> class.</source>
          <target state="translated">기본 생성자가 설정한 값은 <ph id="ph1">&lt;xref:System.Messaging.DefaultPropertiesToSend&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">`true`</ph>, if the Message Queuing queue's privacy level setting is "Body"; otherwise, <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`true`</ph>"Body"; 경우 메시지 큐의 개인 정보 수준 설정 그렇지 않으면 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.String.Empty&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Empty&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>The value of the Message Queuing queue's computer name property.</source>
          <target state="translated">메시지 큐의 컴퓨터 이름 속성의 값입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteQueueSize&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteQueueSize&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteQueueSize&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteQueueSize&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>The values set by the default constructor of the <ph id="ph1">&lt;xref:System.Messaging.MessagePropertyFilter&gt;</ph> class.</source>
          <target state="translated">기본 생성자가 설정한 값은 <ph id="ph1">&lt;xref:System.Messaging.MessagePropertyFilter&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.String.Empty&gt;</ph>, if not set by the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Empty&gt;</ph>을 생성자에 의해 설정 되지 않은 경우.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.String.Empty&gt;</ph>, if not set by the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Empty&gt;</ph>을 생성자에 의해 설정 되지 않은 경우.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>The value of the <ph id="ph1">`sharedModeDenyReceive`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`sharedModeDenyReceive`</ph> 매개 변수의 값입니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">`true`</ph>, if the Message Queuing object's journal setting is enabled; otherwise, <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`true`</ph>메시지 큐 개체의 저널 설정을 사용 합니다. 그렇지 않으면 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>The following code example creates a new <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> with exclusive access, sets its path, and sends a message to the queue.</source>
          <target state="translated">다음 코드 예제에서는 새 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 단독 액세스 권한을 갖는 해당 경로 설정 하 고 큐에 메시지를 보냅니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph> property is not valid, possibly because it has not been set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph> 속성이 유효하지 않습니다(예: 속성을 설정하지 않은 경우).</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Messaging.QueueAccessMode)">
          <source>The location of the queue referenced by this <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>, which can be "." for the local computer.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 큐의 위치로, 로컬 컴퓨터로 지정하려면 "."을 사용합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Messaging.QueueAccessMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.QueueAccessMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.QueueAccessMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Messaging.QueueAccessMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean)">
          <source>The location of the queue referenced by this <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>, which can be "." for the local computer.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 큐의 위치로, 로컬 컴퓨터로 지정하려면 "."을 사용합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to grant exclusive read access to the first application that accesses the queue; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">첫 번째로 큐에 액세스하는 응용 프로그램에 단독 읽기 권한을 부여하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to create and use a connection cache; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">연결 캐시를 만들어 사용하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean)">
          <source>The following code example creates a new <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> with exclusive read access and with connection caching enabled.</source>
          <target state="translated">다음 코드 예제에서는 새 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 단독 읽기 액세스 권한을 갖는 및 연결 캐싱을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean,System.Messaging.QueueAccessMode)">
          <source>The location of the queue referenced by this <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>, which can be "." for the local computer.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 큐의 위치로, 로컬 컴퓨터로 지정하려면 "."을 사용합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean,System.Messaging.QueueAccessMode)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to grant exclusive read access to the first application that accesses the queue; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">첫 번째로 큐에 액세스하는 응용 프로그램에 단독 읽기 권한을 부여하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean,System.Messaging.QueueAccessMode)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to create and use a connection cache; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">연결 캐시를 만들어 사용하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean,System.Messaging.QueueAccessMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.QueueAccessMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.QueueAccessMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean,System.Messaging.QueueAccessMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.AccessMode">
          <source>Gets a value that indicates the access mode for the queue.</source>
          <target state="translated">큐의 액세스 모드를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.AccessMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.QueueAccessMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.QueueAccessMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.AccessMode">
          <source>The default access mode for a queue is <ph id="ph1">`QueueAccessMode.SendAndReceive`</ph>, unless you specify otherwise when calling the constructor.</source>
          <target state="translated">큐에 대 한 기본 액세스 모드 <ph id="ph1">`QueueAccessMode.SendAndReceive`</ph>생성자를 호출할 때 달리 지정 하지 않는 한 합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>Gets or sets a value that indicates whether the queue accepts only authenticated messages.</source>
          <target state="translated">큐가 인증된 메시지만 허용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the queue accepts only authenticated messages; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">큐가 인증된 메시지만 허용하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>Message authentication provides a way to ensure message integrity and to verify who sent the message.</source>
          <target state="translated">메시지 인증에는 메시지 무결성을 보장 하 고 메시지를 보낸 사람을 확인 하는 방법을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>To request authentication, the sending application sets the message's authentication level.</source>
          <target state="translated">인증을 요청 하려면 보내는 응용 프로그램 메시지의 인증 수준을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>When you set <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Authenticate%2A&gt;</ph> to <ph id="ph2">`true`</ph>, you are restricting access to the queue on the server, not only to this <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance.</source>
          <target state="translated">설정 하는 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Authenticate%2A&gt;</ph> 를 <ph id="ph2">`true`</ph>를 제한 하는 뿐만 아니라를이 서버에 있는 큐에 대 한 액세스 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>All clients working against the same Message Queuing queue will be affected.</source>
          <target state="translated">같은 메시지 큐에 대해 작동 하는 모든 클라이언트 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>A queue that accepts only authenticated messages will reject a non-authenticated message.</source>
          <target state="translated">인증 된 메시지만 허용 하는 큐는 인증 되지 않은 메시지를 거부 합니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>To request notification of message rejection, a sending application can set the <ph id="ph1">&lt;xref:System.Messaging.Message.AcknowledgeType%2A&gt;</ph> property of the message.</source>
          <target state="translated">요청 거부 메시지의 알림, 보내는 응용 프로그램 설정 수는 <ph id="ph1">&lt;xref:System.Messaging.Message.AcknowledgeType%2A&gt;</ph> 메시지의 속성입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>Because no other indication of message rejection exists, the sending application can lose the message unless you request that it be sent to the dead-letter queue.</source>
          <target state="translated">있기 때문에 거부 메시지의 다른 표시 되지 보내는 응용 프로그램 배달 못 한 편지 큐로 전송 될 것을 요청 하지 않으면 메시지가 손실 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>The following code example gets and sets the value of a message queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Authenticate%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐의 값을 설정 가져오고 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Authenticate%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.Authenticate">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>Gets or sets the base priority Message Queuing uses to route a public queue's messages over the network.</source>
          <target state="translated">네트워크에서 공개 큐의 메시지를 라우팅하는 데 사용하는 기본 우선 순위 메시지 큐를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>The single base priority for all messages sent to the (public) queue.</source>
          <target state="translated">(공개) 큐에 보내진 모든 메시지에 대한 단일 기본 우선 순위입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>The default is zero (0).</source>
          <target state="translated">기본값은 0입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>A message queue's base priority specifies how a message en route to that queue is treated as it travels through the network.</source>
          <target state="translated">메시지 큐의 기본 우선 순위 네트워크를 통해 이동할 때 큐는 처리 되는 메시지 라우팅 방법을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>You can set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BasePriority%2A&gt;</ph> property to confer a higher or lower priority to all messages sent to the specified queue than those sent to other queues.</source>
          <target state="translated">설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BasePriority%2A&gt;</ph> 속성을 높거나 더 낮은 우선 순위를 다른 큐에 전송 하는 것 보다 지정 된 큐로 보낸 모든 메시지를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>Setting this property modifies the Message Queuing queue.</source>
          <target state="translated">이 속성을 설정 하면 메시지 큐를 수정 합니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>Therefore, any other <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instances are affected by the change.</source>
          <target state="translated">따라서 다른 모든 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 인스턴스 변경의 영향을 받는 합니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>A message queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BasePriority%2A&gt;</ph> is not related to the <ph id="ph2">&lt;xref:System.Messaging.Message.Priority%2A&gt;</ph> property of a message, which specifies the order in which an incoming message is placed in the queue.</source>
          <target state="translated">메시지 큐의 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BasePriority%2A&gt;</ph> 관련이 없는 <ph id="ph2">&lt;xref:System.Messaging.Message.Priority%2A&gt;</ph> 들어오는 메시지가 큐에 배치 되는 순서를 지정 하는 메시지의 속성입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BasePriority%2A&gt;</ph> applies only to public queues whose paths are specified using the format name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BasePriority%2A&gt;</ph> 공개 큐에만 형식 이름을 사용 하 여 해당 경로 지정 하는 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>The base priority of a private queue is always zero (0).</source>
          <target state="translated">개인 큐의 기본 우선 순위는 항상 0입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>The following code example gets and sets the value of a message queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BasePriority%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐의 값을 설정 가져오고 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BasePriority%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>The base priority was set to an invalid value.</source>
          <target state="translated">기본 우선 순위가 잘못된 값으로 설정되었습니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.BasePriority">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>Initiates an asynchronous peek operation by telling Message Queuing to begin peeking a message and notify the event handler when finished.</source>
          <target state="translated">메시지 큐가 메시지 피킹(peeking)을 시작하도록 한 후, 작업을 마치면 이벤트 처리기에 알리도록 하여 비동기 피킹(peeking) 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>Initiates an asynchronous peek operation that has no time-out. The operation is not complete until a message becomes available in the queue.</source>
          <target state="translated">시간 제한이 없는 비동기 피킹(peeking) 작업을 시작합니다. 큐에서 메시지를 사용할 수 있을 때까지 작업이 완료되지 않습니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that identifies the posted asynchronous request.</source>
          <target state="translated">게시된 비동기 요청을 식별하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>In asynchronous processing, you use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event when a message becomes available in the queue.</source>
          <target state="translated">비동기 처리에 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 시키려면는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트 메시지를 큐에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> is also raised if a message already exists in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 메시지가 큐에 이미 있는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>To use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, create an event handler that processes the results of the asynchronous operation, and associate it with your event delegate.</source>
          <target state="translated">사용 하도록 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>을 비동기 작업의 결과 처리 하는 이벤트 처리기를 만들고 이벤트 대리자와 연결 합니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> initiates an asynchronous peek operation; the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> is notified, through the raising of the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event, when a message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 비동기 작업; 시작 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 알림을 발생 시켜는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트를 큐에 메시지가 도착할 때.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> can then access the message by calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> or by retrieving the result using the <ph id="ph3">&lt;xref:System.Messaging.PeekCompletedEventArgs&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 호출 하 여 메시지에 액세스할 수 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> 또는 사용 하 여 결과 검색 하 여는 <ph id="ph3">&lt;xref:System.Messaging.PeekCompletedEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 메서드가 즉시 반환 하지만, 이벤트 처리기가 호출 될 때까지는 비동기 작업이 완료 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 는 비동기적 이며이 호출 하면 실행의 현재 스레드를 차단 하지 않고 큐를 피킹할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>To synchronously peek the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
          <target state="translated">큐를 피킹할 동기적으로 처리를 사용 하 여는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>Once an asynchronous operation completes, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> again in the event handler to keep receiving notifications.</source>
          <target state="translated">비동기 작업이 완료 되 면 호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 알림을 수신할 이벤트 처리기에서 다시 합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>The <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> that <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> returns identifies the asynchronous operation that the method started.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 하 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 반환 메서드가 시작 된 비동기 작업을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>You can use this <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> throughout the lifetime of the operation, although you generally do not use it until <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> is called.</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 작업의 수명 주기 동안 있지만 일반적으로 사용 하지 않는 때까지 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>However, if you start several asynchronous operations, you can place their <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> values in an array and specify whether to wait for all operations or any operation to complete.</source>
          <target state="translated">그러나 몇 가지 비동기 작업을 시작 하는 경우 배치할 수 있습니다 자신의 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 값을 배열에 하 고 모든 작업 또는 모든 작업이 완료 되기를 기다려야 하는지 여부를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>In this case, you use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to identify the completed operation.</source>
          <target state="translated">사용 하는 경우에 <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> 완료 작업을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>If <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the completion event is raised, but an exception will be thrown when calling <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph>.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> 은 <ph id="ph2">`false`</ph>완료 이벤트가 발생 하지만 호출할 때 예외가 throw 됩니다, <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>The following code example creates an event handler named <ph id="ph1">`MyPeekCompleted`</ph>, attaches it to the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event handler delegate, and calls <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> to initiate an asynchronous peek operation on the queue that is located at the path ".\myQueue".</source>
          <target state="translated">다음 코드 예제에서는 라는 이벤트 처리기를 만들고 <ph id="ph1">`MyPeekCompleted`</ph>에 연결는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트 처리기 대리자 및 호출 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 경로에 있는 큐에서 비동기 작업을 시작 하려면 ". \myQueue"입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>When a <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event is raised, the example peeks the message and writes its body to the screen.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트가 발생 하면이 예에서는 메시지를 관찰 합니다. 한 화면으로 해당 본문을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>The example then calls <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> again to initiate a new asynchronous peek operation.</source>
          <target state="translated">이 예에서는 다음 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 새 비동기 작업을 시작 하려면 다시 합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the interval of time to wait for a message to become available.</source>
          <target state="translated">메시지를 사용할 수 있을 때까지 기다리는 시간 간격을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>Initiates an asynchronous peek operation that has a specified time-out. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</source>
          <target state="translated">시간 제한이 지정된 비동기 피킹(peeking) 작업을 시작합니다. 큐에서 메시지를 사용할 수 있거나 시간 초과가 발생할 때까지 작업이 완료되지 않습니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that identifies the posted asynchronous request.</source>
          <target state="translated">게시된 비동기 요청을 식별하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 입니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>In asynchronous processing, you use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event when a message becomes available in the queue or when the specified interval of time has expired.</source>
          <target state="translated">비동기 처리에 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 시키려면는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트 메시지를 큐에 또는 지정된 된 시간 간격이 만료 될 때 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> is also raised if a message already exists in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 메시지가 큐에 이미 있는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>To use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, create an event handler that processes the results of the asynchronous operation, and associate it with your event delegate.</source>
          <target state="translated">사용 하도록 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>을 비동기 작업의 결과 처리 하는 이벤트 처리기를 만들고 이벤트 대리자와 연결 합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> initiates an asynchronous peek operation; the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> is notified, through the raising of the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event, when a message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 비동기 작업; 시작 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 알림을 발생 시켜는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트를 큐에 메시지가 도착할 때.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> can then access the message by calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> or by retrieving the result using the <ph id="ph3">&lt;xref:System.Messaging.PeekCompletedEventArgs&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 호출 하 여 메시지에 액세스할 수 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> 또는 사용 하 여 결과 검색 하 여는 <ph id="ph3">&lt;xref:System.Messaging.PeekCompletedEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 메서드가 즉시 반환 하지만, 이벤트 처리기가 호출 될 때까지는 비동기 작업이 완료 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 는 비동기적 이며이 호출 하면 실행의 현재 스레드를 차단 하지 않고 큐를 피킹할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>To synchronously peek the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
          <target state="translated">큐를 피킹할 동기적으로 처리를 사용 하 여는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>Once an asynchronous operation completes, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> again in the event handler to keep receiving notifications.</source>
          <target state="translated">비동기 작업이 완료 되 면 호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 알림을 수신할 이벤트 처리기에서 다시 합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> that <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> returns identifies the asynchronous operation that the method started.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 하 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 반환 메서드가 시작 된 비동기 작업을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>You can use this <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> throughout the lifetime of the operation, although you generally do not use it until <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> is called.</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 작업의 수명 주기 동안 있지만 일반적으로 사용 하지 않는 때까지 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>However, if you start several asynchronous operations, you can place their <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> values in an array and specify whether to wait for all operations or any operation to complete.</source>
          <target state="translated">그러나 몇 가지 비동기 작업을 시작 하는 경우 배치할 수 있습니다 자신의 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 값을 배열에 하 고 모든 작업 또는 모든 작업이 완료 되기를 기다려야 하는지 여부를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>In this case, you use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to identify the completed operation.</source>
          <target state="translated">사용 하는 경우에 <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> 완료 작업을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>This overload specifies a time-out. If the interval specified by the <ph id="ph1">`timeout`</ph> parameter expires, this component raises the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event.</source>
          <target state="translated">이 오버 로드 제한 시간을 지정 합니다. 으로 지정한 간격이 하는 경우는 <ph id="ph1">`timeout`</ph> 매개 변수 만료 되 면이 구성 요소는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>Because no message exists, a subsequent call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> will throw an exception.</source>
          <target state="translated">메시지가 없으므로 한 후속 호출에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>If <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the completion event is raised, but an exception will be thrown when calling <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph>.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> 은 <ph id="ph2">`false`</ph>완료 이벤트가 발생 하지만 호출할 때 예외가 throw 됩니다, <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>The following code example creates an asynchronous peek operation, using the queue path ".\myQueue".</source>
          <target state="translated">다음 코드 예제에서는 큐 경로 사용 하 여 비동기 작업을 ". \myQueue"입니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>It creates an event handler, <ph id="ph1">`MyPeekCompleted`</ph>, and attaches it to the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event handler delegate.</source>
          <target state="translated">이벤트 처리기를 만듭니다 <ph id="ph1">`MyPeekCompleted`</ph>에 연결 된 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트 처리기 대리자입니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> is called with a time-out of one minute, to initiate the asynchronous peek operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 비동기 작업을 시작 하는 1 분 시간 제한으로 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>When a <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event is raised or the time-out expires, the message is retrieved if one exists, and its body is written to the screen.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트가 발생 또는 제한 시간이 만료 되 면 하나 있고, 해당 본문은 화면에 표시 하는 경우 메시지를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>Then <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> is called again to initiate a new asynchronous peek operation with the same time-out.</source>
          <target state="translated">그런 다음 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 동일한 시간 제한 사용 하 여 새 비동기 작업을 시작 하기 위해 다시 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the interval of time to wait for a message to become available.</source>
          <target state="translated">메시지를 사용할 수 있을 때까지 기다리는 시간 간격을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>A state object, specified by the application, that contains information associated with the asynchronous operation.</source>
          <target state="translated">비동기 작업과 관련된 정보가 들어 있는 상태 개체이며 응용 프로그램에서 지정합니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>Initiates an asynchronous peek operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</source>
          <target state="translated">시간 제한 및 상태 개체가 지정되어 있는 비동기 피킹(peeking) 작업을 시작합니다. 이는 작업의 수명이 지속되는 동안 관련된 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>The operation is not complete until either a message becomes available in the queue or the time-out occurs.</source>
          <target state="translated">큐에서 메시지를 사용할 수 있거나 시간 초과가 발생할 때까지 작업이 완료되지 않습니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that identifies the posted asynchronous request.</source>
          <target state="translated">게시된 비동기 요청을 식별하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 입니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>In asynchronous processing, you use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event when a message becomes available in the queue or when the specified interval of time has expired.</source>
          <target state="translated">비동기 처리에 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 시키려면는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트 메시지를 큐에 또는 지정된 된 시간 간격이 만료 될 때 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> is also raised if a message already exists in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 메시지가 큐에 이미 있는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>Use this overload to associate information with the operation that will be preserved throughout the operation's lifetime.</source>
          <target state="translated">작업의 수명 주기 동안 유지 해야 하는 작업과 정보를 연결 하기 위해이 오버 로드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>The event handler can access this information by looking at the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> that is associated with the operation.</source>
          <target state="translated">이벤트 처리기 확인 하 여이 정보에 액세스할 수는 <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> 작업과 연결 된입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>To use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, create an event handler that processes the results of the asynchronous operation, and associate it with your event delegate.</source>
          <target state="translated">사용 하도록 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>을 비동기 작업의 결과 처리 하는 이벤트 처리기를 만들고 이벤트 대리자와 연결 합니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> initiates an asynchronous peek operation; the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> is notified, through the raising of the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event, when a message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 비동기 작업; 시작 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 알림을 발생 시켜는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트를 큐에 메시지가 도착할 때.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> can then access the message by calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> or by retrieving the result using the <ph id="ph3">&lt;xref:System.Messaging.PeekCompletedEventArgs&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 호출 하 여 메시지에 액세스할 수 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> 또는 사용 하 여 결과 검색 하 여는 <ph id="ph3">&lt;xref:System.Messaging.PeekCompletedEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 메서드가 즉시 반환 하지만, 이벤트 처리기가 호출 될 때까지는 비동기 작업이 완료 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 는 비동기적 이며이 호출 하면 실행의 현재 스레드를 차단 하지 않고 큐를 피킹할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>To synchronously peek the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
          <target state="translated">큐를 피킹할 동기적으로 처리를 사용 하 여는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>Once an asynchronous operation completes, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> again in the event handler to keep receiving notifications.</source>
          <target state="translated">비동기 작업이 완료 되 면 호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 알림을 수신할 이벤트 처리기에서 다시 합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> returns a <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> that identifies the asynchronous operation that the method started.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 반환 된 <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> 는 메서드가 시작 된 비동기 작업을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>You can use this <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> throughout the lifetime of the operation, although you generally do not use it until <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> is called.</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 작업의 수명 주기 동안 있지만 일반적으로 사용 하지 않는 때까지 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>However, if you start several asynchronous operations, you can place their <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> values in an array and specify whether to wait for all operations or any operation to complete.</source>
          <target state="translated">그러나 몇 가지 비동기 작업을 시작 하는 경우 배치할 수 있습니다 자신의 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 값을 배열에 하 고 모든 작업 또는 모든 작업이 완료 되기를 기다려야 하는지 여부를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>In this case, you use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to identify the completed operation.</source>
          <target state="translated">사용 하는 경우에 <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> 완료 작업을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>This overload specifies a time-out and a state object.</source>
          <target state="translated">이 오버 로드는 제한 시간 및 상태 개체를 지정합니다.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>If the interval specified by the <ph id="ph1">`timeout`</ph> parameter expires, this component raises the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event.</source>
          <target state="translated">으로 지정한 간격이 하는 경우는 <ph id="ph1">`timeout`</ph> 매개 변수 만료 되 면이 구성 요소는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>Because no message exists, a subsequent call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> will throw an exception.</source>
          <target state="translated">메시지가 없으므로 한 후속 호출에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>The state object associates state information with the operation.</source>
          <target state="translated">상태 개체는 작업 상태 정보를 연결합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>For example, if you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</source>
          <target state="translated">예를 들어, 호출 하는 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 여러 번 여러 작업을 시작할 수, 사용자가 정의한 개별 상태 개체를 통해 각 작업을 식별할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>For an illustration of this scenario, see the Example section.</source>
          <target state="translated">이 시나리오의 예시의 경우 "예" 섹션을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>You can also use the state object to pass information across process threads.</source>
          <target state="translated">또한 프로세스 스레드 간에 정보를 전달 하는 상태 개체를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</source>
          <target state="translated">스레드 시작 되었지만 비동기 시나리오의 다른 스레드에서 콜백이, 하는 경우 상태 개체 마샬링되고 이벤트에서 정보와 함께 다시 전달 합니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the completion event is raised, but an exception will be thrown when calling <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph>.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> 은 <ph id="ph2">`false`</ph>완료 이벤트가 발생 하지만 호출할 때 예외가 throw 됩니다, <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>The following code example creates an asynchronous peek operation, using the queue path ".\myQueue".</source>
          <target state="translated">다음 코드 예제에서는 큐 경로 사용 하 여 비동기 작업을 ". \myQueue"입니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>It creates an event handler, <ph id="ph1">`MyPeekCompleted`</ph>, and attaches it to the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event handler delegate.</source>
          <target state="translated">이벤트 처리기를 만듭니다 <ph id="ph1">`MyPeekCompleted`</ph>에 연결 된 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트 처리기 대리자입니다.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> is called, with a time-out of one minute.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 라고, 1 분의 시간 제한을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>Each call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> has a unique associated integer that identifies that particular operation.</source>
          <target state="translated">호출할 때마다 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 는 특정 작업을 식별 하는 연결 된 고유한 정수에 있습니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>When a <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event is raised or the time-out expired, the message, if one exists, is retrieved and its body and the operation-specific integer identifier are written to the screen.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 제한 시간이 만료 또는 이벤트는 메시지에 있는 경우 검색 되 고 해당 본문 및 작업 별로 정수 식별자는 화면에 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>Then <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> is called again to initiate a new asynchronous peek operation with the same time-out and the associated integer of the just completed operation.</source>
          <target state="translated">그런 다음 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 동일한 제한 시간 및 완료 된 작업의 연결 된 정수 새 비동기 작업을 시작 하기 위해 다시 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the interval of time to wait for a message to become available.</source>
          <target state="translated">메시지를 사용할 수 있을 때까지 기다리는 시간 간격을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>A state object, specified by the application, that contains information associated with the asynchronous operation.</source>
          <target state="translated">비동기 작업과 관련된 정보가 들어 있는 상태 개체이며 응용 프로그램에서 지정합니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> that will receive the notification of the asynchronous operation completion.</source>
          <target state="translated">비동기 작업 완료에 대한 알림을 수신할 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Initiates an asynchronous peek operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</source>
          <target state="translated">시간 제한 및 상태 개체가 지정되어 있는 비동기 피킹(peeking) 작업을 시작합니다. 이는 작업의 수명이 지속되는 동안 관련된 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>This overload receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">이 오버로드는 콜백을 통해 해당 작업의 이벤트 처리기 ID에 대한 알림을 수신합니다.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The operation is not complete until either a message becomes available in the queue or the time-out occurs.</source>
          <target state="translated">큐에서 메시지를 사용할 수 있거나 시간 초과가 발생할 때까지 작업이 완료되지 않습니다.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that identifies the posted asynchronous request.</source>
          <target state="translated">게시된 비동기 요청을 식별하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 입니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired; the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event is not raised.</source>
          <target state="translated">이 오버 로드를 사용 하 여 콜백 매개 변수에 지정 된 콜백 됩니다 때 직접 호출 메시지를 큐에 또는 지정된 된 시간 간격이 만료 되 면 사용할 수 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트가 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The other overloads of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> rely on this component to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event.</source>
          <target state="translated">다른 오버 로드 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 시키려면이 구성 요소에 의존는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> is also raised if a message already exists in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 메시지가 큐에 이미 있는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 메서드가 즉시 반환 하지만, 이벤트 처리기가 호출 될 때까지는 비동기 작업이 완료 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 는 비동기적 이며이 호출 하면 실행의 현재 스레드를 차단 하지 않고 큐를 피킹할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>To synchronously peek the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
          <target state="translated">큐를 피킹할 동기적으로 처리를 사용 하 여는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Once an asynchronous operation completes, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> again in the event handler to keep receiving notifications.</source>
          <target state="translated">비동기 작업이 완료 되 면 호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 알림을 수신할 이벤트 처리기에서 다시 합니다.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> returns a <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> that identifies the asynchronous operation that the method started.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 반환 된 <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> 는 메서드가 시작 된 비동기 작업을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>You can use this <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> throughout the lifetime of the operation, although you generally do not use it until <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> is called.</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 작업의 수명 주기 동안 있지만 일반적으로 사용 하지 않는 때까지 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>However, if you start several asynchronous operations, you can place their <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> values in an array and specify whether to wait for all operations or any operation to complete.</source>
          <target state="translated">그러나 몇 가지 비동기 작업을 시작 하는 경우 배치할 수 있습니다 자신의 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 값을 배열에 하 고 모든 작업 또는 모든 작업이 완료 되기를 기다려야 하는지 여부를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>In this case, you use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to identify the completed operation.</source>
          <target state="translated">사용 하는 경우에 <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> 완료 작업을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The state object associates state information with the operation.</source>
          <target state="translated">상태 개체는 작업 상태 정보를 연결합니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>For example, if you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</source>
          <target state="translated">예를 들어, 호출 하는 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 여러 번 여러 작업을 시작할 수, 사용자가 정의한 개별 상태 개체를 통해 각 작업을 식별할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The following code example creates an asynchronous peek operation.</source>
          <target state="translated">다음 코드 예제에서는 비동기 작업을 만듭니다.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The code example sends a message to a local message queue, then calls <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%28System.TimeSpan%2CSystem.Object%2CSystem.AsyncCallback%29&gt;</ph>, passing in: a time-out value of ten seconds; a unique integer that identifies that particular message; and a new instance of <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> that identifies the event handler, <ph id="ph3">`MyPeekCompleted`</ph>.</source>
          <target state="translated">메시지를 로컬 메시지 큐는 코드 예제에서는 보낸 다음 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%28System.TimeSpan%2CSystem.Object%2CSystem.AsyncCallback%29&gt;</ph>를: 시간 제한 값이 10 초, 특정 메시지; 및의 새 인스턴스를 식별 하는 고유한 정수 <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> 이벤트 처리기를 식별 하는 <ph id="ph3">`MyPeekCompleted`</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>When a <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event is raised, the event handler peeks at the message and writes the message body and the integer message identifier to the screen.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트가 발생 하면 이벤트 처리기는 메시지를 관찰 하 고 화면에 메시지 본문 및 정수 메시지 식별자를 씁니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the interval of time to wait for a message to become available.</source>
          <target state="translated">메시지를 사용할 수 있을 때까지 기다리는 시간 간격을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Cursor" /&gt;</ph> that maintains a specific position in the message queue.</source>
          <target state="translated">메시지 큐에서 특정 위치를 유지하는 <ph id="ph1">&lt;see cref="T:System.Messaging.Cursor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.PeekAction" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.PeekAction" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>Indicates whether to peek at the current message in the queue, or the next message.</source>
          <target state="translated">이 값은 큐의 현재 메시지를 피킹할지 또는 다음 메시지를 피킹할지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>A state object, specified by the application, that contains information associated with the asynchronous operation.</source>
          <target state="translated">비동기 작업과 관련된 정보가 들어 있는 상태 개체이며 응용 프로그램에서 지정합니다.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> that receives the notification of the asynchronous operation completion.</source>
          <target state="translated">비동기 작업 완료에 대한 알림을 수신하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>Initiates an asynchronous peek operation that has a specified time-out and that uses a specified cursor, a specified peek action, and a specified state object.</source>
          <target state="translated">지정된 제한 시간이 있고 지정된 커서, 지정된 피킹(peeking) 작업 및 지정된 상태 개체를 사용하는 비동기 피킹(peeking) 작업을 초기화합니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>The state object provides associated information throughout the lifetime of the operation.</source>
          <target state="translated">상태 개체는 전체 작업 기간 동안 관련 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>This overload receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">이 오버로드는 콜백을 통해 해당 작업의 이벤트 처리기 ID에 대한 알림을 수신합니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>The operation is not complete until either a message becomes available in the queue or the time-out occurs.</source>
          <target state="translated">큐에서 메시지를 사용할 수 있거나 시간 초과가 발생할 때까지 작업이 완료되지 않습니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that identifies the posted asynchronous request.</source>
          <target state="translated">게시된 비동기 요청을 식별하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 입니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired.</source>
          <target state="translated">이 오버 로드를 사용 하면 메시지는 큐 나 지정된 된 시간 간격이 만료 될 때 사용할 수 있을 때 콜백 매개 변수에 지정 된 콜백 직접 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event is not raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트가 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>The other overloads of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> rely on this component to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event.</source>
          <target state="translated">다른 오버 로드 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 시키려면이 구성 요소에 의존는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> is also raised if a message already exists in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 메시지가 큐에 이미 있는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 메서드가 즉시 반환 하지만, 이벤트 처리기가 호출 될 때까지는 비동기 작업이 완료 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 는 비동기적 이며이 호출 하면 실행의 현재 스레드를 차단 하지 않고 큐를 피킹할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>To synchronously peek the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
          <target state="translated">큐를 피킹할 동기적으로 처리를 사용 하 여는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>Once an asynchronous operation completes, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> again in the event handler to keep receiving notifications.</source>
          <target state="translated">비동기 작업이 완료 되 면 호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 알림을 수신할 이벤트 처리기에서 다시 합니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> returns a <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> that identifies the asynchronous operation started by the method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 반환 된 <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> 메서드에 의해 시작 된 비동기 작업을 식별 하는 합니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>You can use this <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> throughout the lifetime of the operation, although you generally do not use it until <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> is called.</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 작업의 수명 주기 동안 있지만 일반적으로 사용 하지 않는 때까지 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>However, if you start several asynchronous operations, you can place their <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> values in an array and specify whether to wait for all operations or any operation to complete.</source>
          <target state="translated">그러나 몇 가지 비동기 작업을 시작 하는 경우 배치할 수 있습니다 자신의 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 값을 배열에 하 고 모든 작업 또는 모든 작업이 완료 되기를 기다려야 하는지 여부를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>In this case, use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to identify the completed operation.</source>
          <target state="translated">이 경우에 사용 된 <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> 완료 작업을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>The state object associates state information with the operation.</source>
          <target state="translated">상태 개체는 작업 상태 정보를 연결합니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>For example, if you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</source>
          <target state="translated">예를 들어, 호출 하는 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 여러 번 여러 작업을 시작할 수, 사용자가 정의한 개별 상태 개체를 통해 각 작업을 식별할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>A value other than <ph id="ph1">&lt;see langword="PeekAction.Current" /&gt;</ph> or <ph id="ph2">&lt;see langword="PeekAction.Next" /&gt;</ph> was specified for the <ph id="ph3">&lt;paramref name="action" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="action" /&gt;</ph> 매개 변수에 대해 <ph id="ph1">&lt;see langword="PeekAction.Current" /&gt;</ph> 또는 <ph id="ph2">&lt;see langword="PeekAction.Next" /&gt;</ph> 이외의 값을 지정했습니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>The <ph id="ph1">&lt;paramref name="cursor" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cursor" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>Initiates an asynchronous receive operation by telling Message Queuing to begin receiving a message and notify the event handler when finished.</source>
          <target state="translated">메시지 큐가 메시지 수신을 시작하도록 한 후, 작업을 마치면 이벤트 처리기에 알리도록 하여 비동기 수신 작업을 시작합니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>Initiates an asynchronous receive operation that has no time-out. The operation is not complete until a message becomes available in the queue.</source>
          <target state="translated">시간 제한이 없는 비동기 수신 작업을 시작합니다. 큐에서 메시지를 사용할 수 있을 때까지 작업이 완료되지 않습니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that identifies the posted asynchronous request.</source>
          <target state="translated">게시된 비동기 요청을 식별하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 입니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>In asynchronous processing, you use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event when a message has been removed from the queue.</source>
          <target state="translated">비동기 처리에 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 시키려면는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트는 메시지 큐에서 제거 되었습니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> is also raised if a message already exists in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 메시지가 큐에 이미 있는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>To use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</source>
          <target state="translated">사용 하도록 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>을 비동기 작업의 결과 처리 하는 이벤트 처리기를 만들고 이벤트 대리자와 연결 합니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> initiates an asynchronous receive operation; the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> is notified, through the raising of the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event, when a message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 비동기 작업입니다. <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 알림을 발생 시켜는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트를 큐에 메시지가 도착할 때.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> can then access the message by calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 호출 하 여 메시지에 액세스할 수 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 메서드가 즉시 반환 하지만, 이벤트 처리기가 호출 될 때까지는 비동기 작업이 완료 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 는 비동기적 이며이 호출 하면 실행의 현재 스레드를 차단 하지 않고 큐에서 메시지를 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>To synchronously receive a message, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 동기적으로 메시지를 받으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>Once an asynchronous operation completes, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> again in the event handler to keep receiving notifications.</source>
          <target state="translated">비동기 작업이 완료 되 면 호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 알림을 수신할 이벤트 처리기에서 다시 합니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>The <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> that <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> returns identifies the asynchronous operation that the method started.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 하 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 반환 메서드가 시작 된 비동기 작업을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>You can use this <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> throughout the lifetime of the operation, although you generally do not use it until <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> is called.</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 작업의 수명 주기 동안 있지만 일반적으로 사용 하지 않는 때까지 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>However, if you start several asynchronous operations, you can place their <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> values in an array and specify whether to wait for all operations or any operation to complete.</source>
          <target state="translated">그러나 몇 가지 비동기 작업을 시작 하는 경우 배치할 수 있습니다 자신의 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 값을 배열에 하 고 모든 작업 또는 모든 작업이 완료 되기를 기다려야 하는지 여부를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>In this case, you use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to identify the completed operation.</source>
          <target state="translated">사용 하는 경우에 <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> 완료 작업을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>If <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the completion event is raised, but an exception will be thrown when calling <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph>.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> 은 <ph id="ph2">`false`</ph>완료 이벤트가 발생 하지만 호출할 때 예외가 throw 됩니다, <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>Do not use the asynchronous call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> with transactions.</source>
          <target state="translated">비동기 호출을 사용 하지 마십시오 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 트랜잭션과 합니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>If you want to perform a transactional asynchronous operation, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, and put the transaction and the (synchronous) <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method within the event handler you create for the peek operation.</source>
          <target state="translated">트랜잭션 비동기 작업을 수행 하려는 경우 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, (동기) 하 여 트랜잭션을 저장 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 피크 (peek) 작업에 대해 만들 이벤트 처리기 내에서 메서드.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>Your event handler might contain functionality as shown in the following C# code.</source>
          <target state="translated">이벤트 처리기는 다음 C# 코드에 표시 된 대로 기능을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>The following code example chains asynchronous requests.</source>
          <target state="translated">다음 코드 예제에서는 비동기 요청을 연결 합니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>It assumes there is a queue on the local computer called "myQueue".</source>
          <target state="translated">"MyQueue" 라는 로컬 컴퓨터에는 큐가 가정 합니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>The <ph id="ph1">`Main`</ph> function begins the asynchronous operation that is handled by the <ph id="ph2">`MyReceiveCompleted`</ph> routine.</source>
          <target state="translated"><ph id="ph1">`Main`</ph> 에서 처리 하는 비동기 작업을 시작 하는 함수는 <ph id="ph2">`MyReceiveCompleted`</ph> 루틴입니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source><ph id="ph1">`MyReceiveCompleted`</ph> processes the current message and begins a new asynchronous receive operation.</source>
          <target state="translated"><ph id="ph1">`MyReceiveCompleted`</ph> 현재 메시지를 처리 하 고 새 시작 비동기 수신 작업입니다.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>The following code example queues asynchronous requests.</source>
          <target state="translated">다음 코드 예제에서는 비동기 요청을 대기합니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>The call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> uses the <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> in its return value.</source>
          <target state="translated">에 대 한 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 사용 하 여는 <ph id="ph2">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> 해당 반환 값에 있습니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>The <ph id="ph1">`Main`</ph> routine waits for all asynchronous operations to be completed before exiting.</source>
          <target state="translated"><ph id="ph1">`Main`</ph> 루틴 모든 비동기 작업을 종료 하기 전에 완료할 때까지 대기 합니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the interval of time to wait for a message to become available.</source>
          <target state="translated">메시지를 사용할 수 있을 때까지 기다리는 시간 간격을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>Initiates an asynchronous receive operation that has a specified time-out. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</source>
          <target state="translated">시간 제한이 지정된 비동기 수신 작업을 시작합니다. 큐에서 메시지를 사용할 수 있거나 시간 초과가 발생할 때까지 작업이 완료되지 않습니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that identifies the posted asynchronous request.</source>
          <target state="translated">게시된 비동기 요청을 식별하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 입니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>In asynchronous processing, you use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event when a message becomes available in the queue or when the specified interval of time has expired.</source>
          <target state="translated">비동기 처리에 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 시키려면는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트 메시지를 큐에 또는 지정된 된 시간 간격이 만료 될 때 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> is also raised if a message already exists in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 메시지가 큐에 이미 있는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>To use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</source>
          <target state="translated">사용 하도록 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>을 비동기 작업의 결과 처리 하는 이벤트 처리기를 만들고 이벤트 대리자와 연결 합니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> initiates an asynchronous receive operation; the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> is notified, through the raising of the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event, when a message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 비동기 작업입니다. <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 알림을 발생 시켜는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트를 큐에 메시지가 도착할 때.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> can then access the message by calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> or retrieving the result using the <ph id="ph3">&lt;xref:System.Messaging.ReceiveCompletedEventArgs&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 호출 하 여 메시지에 액세스할 수 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> 하거나 사용 하 여 결과 검색 하는 <ph id="ph3">&lt;xref:System.Messaging.ReceiveCompletedEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 메서드가 즉시 반환 하지만, 이벤트 처리기가 호출 될 때까지는 비동기 작업이 완료 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 는 비동기적 이며이 호출 하면 실행의 현재 스레드를 차단 하지 않고 큐에서 메시지를 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>To synchronously receive a message, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 동기적으로 메시지를 받으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>Once an asynchronous operation completes, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> again in the event handler to keep receiving notifications.</source>
          <target state="translated">비동기 작업이 완료 되 면 호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 알림을 수신할 이벤트 처리기에서 다시 합니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>If <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the completion event is raised, but an exception will be thrown when calling <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph>.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> 은 <ph id="ph2">`false`</ph>완료 이벤트가 발생 하지만 호출할 때 예외가 throw 됩니다, <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> that <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> returns identifies the asynchronous operation that the method started.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 하 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 반환 메서드가 시작 된 비동기 작업을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>You can use this <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> throughout the lifetime of the operation, although you generally do not use it until <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> is called.</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 작업의 수명 주기 동안 있지만 일반적으로 사용 하지 않는 때까지 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>However, if you start several asynchronous operations, you can place their <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> values in an array and specify whether to wait for all operations or any operation to complete.</source>
          <target state="translated">그러나 몇 가지 비동기 작업을 시작 하는 경우 배치할 수 있습니다 자신의 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 값을 배열에 하 고 모든 작업 또는 모든 작업이 완료 되기를 기다려야 하는지 여부를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>In this case, you use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to identify the completed operation.</source>
          <target state="translated">사용 하는 경우에 <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> 완료 작업을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>This overload specifies a time-out. If the interval specified by the <ph id="ph1">`timeout`</ph> parameter expires, this component raises the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event.</source>
          <target state="translated">이 오버 로드 제한 시간을 지정 합니다. 으로 지정한 간격이 하는 경우는 <ph id="ph1">`timeout`</ph> 매개 변수 만료 되 면이 구성 요소는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>Because no message exists, a subsequent call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> will throw an exception.</source>
          <target state="translated">메시지가 없으므로 한 후속 호출에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>Do not use the asynchronous call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> with transactions.</source>
          <target state="translated">비동기 호출을 사용 하지 마십시오 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 트랜잭션과 합니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>If you want to perform a transactional asynchronous operation, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, and put the transaction and the (synchronous) <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method within the event handler you create for the peek operation.</source>
          <target state="translated">트랜잭션 비동기 작업을 수행 하려는 경우 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, (동기) 하 여 트랜잭션을 저장 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 피크 (peek) 작업에 대해 만들 이벤트 처리기 내에서 메서드.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>Your event handler might contain functionality as shown in the following C# code.</source>
          <target state="translated">이벤트 처리기는 다음 C# 코드에 표시 된 대로 기능을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>The following code example creates an asynchronous receive operation.</source>
          <target state="translated">다음 코드 예제에서는 비동기 수신 작업입니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>The code example creates an event handler, <ph id="ph1">`MyReceiveCompleted`</ph>, and attaches it to the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event handler delegate.</source>
          <target state="translated">코드 예제에서는 이벤트 처리기를 <ph id="ph1">`MyReceiveCompleted`</ph>에 연결 된 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트 처리기 대리자입니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>The code example sends a message to a local message queue, then calls <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%29&gt;</ph>, passing in a time-out value of ten seconds.</source>
          <target state="translated">메시지를 로컬 메시지 큐는 코드 예제에서는 보낸 다음 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%29&gt;</ph>시간 제한 값이 10 초 이내에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>When a <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event is raised, the event handler receives the message and writes the message body to the screen.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트가 발생 하면 이벤트 처리기는 메시지를 수신 하 고 화면에 메시지 본문을 씁니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid, possibly because it represents a negative number.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우 (예: 값이 음수인 경우)</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the interval of time to wait for a message to become available.</source>
          <target state="translated">메시지를 사용할 수 있을 때까지 기다리는 시간 간격을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>A state object, specified by the application, that contains information associated with the asynchronous operation.</source>
          <target state="translated">비동기 작업과 관련된 정보가 들어 있는 상태 개체이며 응용 프로그램에서 지정합니다.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>Initiates an asynchronous receive operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</source>
          <target state="translated">시간 제한 및 상태 개체가 지정되어 있는 비동기 수신 작업을 시작합니다. 이는 작업의 수명이 지속되는 동안 관련된 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>The operation is not complete until either a message becomes available in the queue or the time-out occurs.</source>
          <target state="translated">큐에서 메시지를 사용할 수 있거나 시간 초과가 발생할 때까지 작업이 완료되지 않습니다.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that identifies the posted asynchronous request.</source>
          <target state="translated">게시된 비동기 요청을 식별하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 입니다.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>In asynchronous processing, you use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event when a message becomes available in the queue or when the specified interval of time has expired.</source>
          <target state="translated">비동기 처리에 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 시키려면는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트 메시지를 큐에 또는 지정된 된 시간 간격이 만료 될 때 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> is also raised if a message already exists in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 메시지가 큐에 이미 있는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>Use this overload to associate information with the operation that will be preserved throughout the operation's lifetime.</source>
          <target state="translated">작업의 수명 주기 동안 유지 해야 하는 작업과 정보를 연결 하기 위해이 오버 로드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>The event handler can detect this information by looking at the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> that is associated with the operation.</source>
          <target state="translated">이벤트 처리기 확인 하 여이 정보를 검색할 수는 <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> 작업과 연결 된입니다.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>To use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</source>
          <target state="translated">사용 하도록 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>을 비동기 작업의 결과 처리 하는 이벤트 처리기를 만들고 이벤트 대리자와 연결 합니다.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> initiates an asynchronous receive operation; the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> is notified, through the raising of the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event, when a message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 비동기 작업입니다. <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 알림을 발생 시켜는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트를 큐에 메시지가 도착할 때.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> can then access the message by calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> or retrieving the result using the <ph id="ph3">&lt;xref:System.Messaging.ReceiveCompletedEventArgs&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 호출 하 여 메시지에 액세스할 수 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> 하거나 사용 하 여 결과 검색 하는 <ph id="ph3">&lt;xref:System.Messaging.ReceiveCompletedEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 메서드가 즉시 반환 하지만, 이벤트 처리기가 호출 될 때까지는 비동기 작업이 완료 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 는 비동기적 이며이 호출 하면 실행의 현재 스레드를 차단 하지 않고 큐에서 메시지를 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>To synchronously receive a message, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 동기적으로 메시지를 받으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>Once an asynchronous operation completes, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> again in the event handler to keep receiving notifications.</source>
          <target state="translated">비동기 작업이 완료 되 면 호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 알림을 수신할 이벤트 처리기에서 다시 합니다.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> that <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> returns identifies the asynchronous operation that the method started.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 하 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 반환 메서드가 시작 된 비동기 작업을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>You can use this <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> throughout the lifetime of the operation, although you generally do not use it until <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> is called.</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 작업의 수명 주기 동안 있지만 일반적으로 사용 하지 않는 때까지 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>However, if you start several asynchronous operations, you can place their <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> values in an array and specify whether to wait for all operations or any operation to complete.</source>
          <target state="translated">그러나 몇 가지 비동기 작업을 시작 하는 경우 배치할 수 있습니다 자신의 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 값을 배열에 하 고 모든 작업 또는 모든 작업이 완료 되기를 기다려야 하는지 여부를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>In this case, you use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to identify the completed operation.</source>
          <target state="translated">사용 하는 경우에 <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> 완료 작업을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>This overload specifies a time-out and a state object.</source>
          <target state="translated">이 오버 로드는 제한 시간 및 상태 개체를 지정합니다.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>If the interval specified by the <ph id="ph1">`timeout`</ph> parameter expires, this component raises the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event.</source>
          <target state="translated">으로 지정한 간격이 하는 경우는 <ph id="ph1">`timeout`</ph> 매개 변수 만료 되 면이 구성 요소는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>Because no message exists, a subsequent call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> will throw an exception.</source>
          <target state="translated">메시지가 없으므로 한 후속 호출에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>The state object associates state information with the operation.</source>
          <target state="translated">상태 개체는 작업 상태 정보를 연결합니다.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>For example, if you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</source>
          <target state="translated">예를 들어, 호출 하는 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 여러 번 여러 작업을 시작할 수, 사용자가 정의한 개별 상태 개체를 통해 각 작업을 식별할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>You can also use the state object to pass information across process threads.</source>
          <target state="translated">또한 프로세스 스레드 간에 정보를 전달 하는 상태 개체를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</source>
          <target state="translated">스레드 시작 되었지만 비동기 시나리오의 다른 스레드에서 콜백이, 하는 경우 상태 개체 마샬링되고 이벤트에서 정보와 함께 다시 전달 합니다.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>Do not use the asynchronous call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> with transactions.</source>
          <target state="translated">비동기 호출을 사용 하지 마십시오 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 트랜잭션과 합니다.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>If you want to perform a transactional asynchronous operation, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, and put the transaction and the (synchronous) <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method within the event handler you create for the peek operation.</source>
          <target state="translated">트랜잭션 비동기 작업을 수행 하려는 경우 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, (동기) 하 여 트랜잭션을 저장 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 피크 (peek) 작업에 대해 만들 이벤트 처리기 내에서 메서드.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>Your event handler might contain functionality as shown in the following C# code.</source>
          <target state="translated">이벤트 처리기는 다음 C# 코드에 표시 된 대로 기능을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>The following code example creates an asynchronous receive operation.</source>
          <target state="translated">다음 코드 예제에서는 비동기 수신 작업입니다.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>The code example creates an event handler, <ph id="ph1">`MyReceiveCompleted`</ph>, and attaches it to the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event handler delegate.</source>
          <target state="translated">코드 예제에서는 이벤트 처리기를 <ph id="ph1">`MyReceiveCompleted`</ph>에 연결 된 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트 처리기 대리자입니다.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>The code example sends a message to a local message queue, then calls <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%2CSystem.Object%29&gt;</ph>, passing in a time-out value of ten seconds and a unique integer that identifies that particular message.</source>
          <target state="translated">메시지를 로컬 메시지 큐는 코드 예제에서는 보낸 다음 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%2CSystem.Object%29&gt;</ph>시간 제한 값이 10 초에 한 및 특정 메시지를 식별 하는 고유한 정수에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>When a <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event is raised, the event handler receives the message and writes the message body and the integer message identifier to the screen.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트가 발생 하면 이벤트 처리기는 메시지를 받고 메시지 본문과 정수 메시지 식별자를 화면에 출력 합니다.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the interval of time to wait for a message to become available.</source>
          <target state="translated">메시지를 사용할 수 있을 때까지 기다리는 시간 간격을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>A state object, specified by the application, that contains information associated with the asynchronous operation.</source>
          <target state="translated">비동기 작업과 관련된 정보가 들어 있는 상태 개체이며 응용 프로그램에서 지정합니다.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> that will receive the notification of the asynchronous operation completion.</source>
          <target state="translated">비동기 작업 완료에 대한 알림을 수신할 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Initiates an asynchronous receive operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</source>
          <target state="translated">시간 제한 및 상태 개체가 지정되어 있는 비동기 수신 작업을 시작합니다. 이는 작업의 수명이 지속되는 동안 관련된 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>This overload receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">이 오버로드는 콜백을 통해 해당 작업의 이벤트 처리기 ID에 대한 알림을 수신합니다.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The operation is not complete until either a message becomes available in the queue or the time-out occurs.</source>
          <target state="translated">큐에서 메시지를 사용할 수 있거나 시간 초과가 발생할 때까지 작업이 완료되지 않습니다.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that identifies the posted asynchronous request.</source>
          <target state="translated">게시된 비동기 요청을 식별하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 입니다.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired; the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event is not raised.</source>
          <target state="translated">이 오버 로드를 사용 하 여 콜백 매개 변수에 지정 된 콜백 됩니다 때 직접 호출 메시지를 큐에 또는 지정된 된 시간 간격이 만료 되 면 사용할 수 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트가 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The other overloads of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> rely on this component to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event.</source>
          <target state="translated">다른 오버 로드 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 시키려면이 구성 요소에 의존는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> is also raised if a message already exists in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 메시지가 큐에 이미 있는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>To use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</source>
          <target state="translated">사용 하도록 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>을 비동기 작업의 결과 처리 하는 이벤트 처리기를 만들고 이벤트 대리자와 연결 합니다.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> initiates an asynchronous receive operation; the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> is notified, through the raising of the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event, when a message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 비동기 작업입니다. <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 알림을 발생 시켜는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트를 큐에 메시지가 도착할 때.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> can then access the message by calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> or retrieving the result using the <ph id="ph3">&lt;xref:System.Messaging.ReceiveCompletedEventArgs&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 호출 하 여 메시지에 액세스할 수 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> 하거나 사용 하 여 결과 검색 하는 <ph id="ph3">&lt;xref:System.Messaging.ReceiveCompletedEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 메서드가 즉시 반환 하지만, 이벤트 처리기가 호출 될 때까지는 비동기 작업이 완료 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 는 비동기적 이며이 호출 하면 실행의 현재 스레드를 차단 하지 않고 큐에서 메시지를 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>To synchronously receive a message, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 동기적으로 메시지를 받으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Once an asynchronous operation completes, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> again in the event handler to keep receiving notifications.</source>
          <target state="translated">비동기 작업이 완료 되 면 호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 알림을 수신할 이벤트 처리기에서 다시 합니다.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> that <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> returns identifies the asynchronous operation that the method started.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 하 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 반환 메서드가 시작 된 비동기 작업을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>You can use this <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> throughout the lifetime of the operation, although you generally do not use it until <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> is called.</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 작업의 수명 주기 동안 있지만 일반적으로 사용 하지 않는 때까지 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>However, if you start several asynchronous operations, you can place their <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> values in an array and specify whether to wait for all operations or any operation to complete.</source>
          <target state="translated">그러나 몇 가지 비동기 작업을 시작 하는 경우 배치할 수 있습니다 자신의 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 값을 배열에 하 고 모든 작업 또는 모든 작업이 완료 되기를 기다려야 하는지 여부를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>In this case, you use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to identify the completed operation.</source>
          <target state="translated">사용 하는 경우에 <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> 완료 작업을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The state object associates state information with the operation.</source>
          <target state="translated">상태 개체는 작업 상태 정보를 연결합니다.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>For example, if you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</source>
          <target state="translated">예를 들어, 호출 하는 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 여러 번 여러 작업을 시작할 수, 사용자가 정의한 개별 상태 개체를 통해 각 작업을 식별할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>You can also use the state object to pass information across process threads.</source>
          <target state="translated">또한 프로세스 스레드 간에 정보를 전달 하는 상태 개체를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</source>
          <target state="translated">스레드 시작 되었지만 비동기 시나리오의 다른 스레드에서 콜백이, 하는 경우 상태 개체 마샬링되고 이벤트에서 정보와 함께 다시 전달 합니다.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Do not use the asynchronous call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> with transactions.</source>
          <target state="translated">비동기 호출을 사용 하지 마십시오 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 트랜잭션과 합니다.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>If you want to perform a transactional asynchronous operation, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, and put the transaction and the (synchronous) <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method within the event handler you create for the peek operation.</source>
          <target state="translated">트랜잭션 비동기 작업을 수행 하려는 경우 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, (동기) 하 여 트랜잭션을 저장 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 피크 (peek) 작업에 대해 만들 이벤트 처리기 내에서 메서드.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Your event handler might contain functionality as shown in the following C# code.</source>
          <target state="translated">이벤트 처리기는 다음 C# 코드에 표시 된 대로 기능을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The following code example creates an asynchronous receive operation.</source>
          <target state="translated">다음 코드 예제에서는 비동기 수신 작업입니다.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The code example sends a message to a local message queue, then calls <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%2CSystem.Object%2CSystem.AsyncCallback%29&gt;</ph>, passing in: a time-out value of ten seconds; a unique integer that identifies that particular message; and a new instance of <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> that identifies the event handler, <ph id="ph3">`MyReceiveCompleted`</ph>.</source>
          <target state="translated">메시지를 로컬 메시지 큐는 코드 예제에서는 보낸 다음 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%2CSystem.Object%2CSystem.AsyncCallback%29&gt;</ph>를: 시간 제한 값이 10 초, 특정 메시지; 및의 새 인스턴스를 식별 하는 고유한 정수 <ph id="ph2">&lt;xref:System.AsyncCallback&gt;</ph> 이벤트 처리기를 식별 하는 <ph id="ph3">`MyReceiveCompleted`</ph>.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>When a <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event is raised, the event handler receives the message and writes the message body and the integer message identifier to the screen.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트가 발생 하면 이벤트 처리기는 메시지를 받고 메시지 본문과 정수 메시지 식별자를 화면에 출력 합니다.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the interval of time to wait for a message to become available.</source>
          <target state="translated">메시지를 사용할 수 있을 때까지 기다리는 시간 간격을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Cursor" /&gt;</ph> that maintains a specific position in the message queue.</source>
          <target state="translated">메시지 큐에서 특정 위치를 유지하는 <ph id="ph1">&lt;see cref="T:System.Messaging.Cursor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>A state object, specified by the application, that contains information associated with the asynchronous operation.</source>
          <target state="translated">비동기 작업과 관련된 정보가 들어 있는 상태 개체이며 응용 프로그램에서 지정합니다.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> that receives the notification of the asynchronous operation completion.</source>
          <target state="translated">비동기 작업 완료에 대한 알림을 수신하는 <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>Initiates an asynchronous receive operation that has a specified time-out and uses a specified cursor and a specified state object.</source>
          <target state="translated">지정된 제한 시간이 있고 지정된 커서 및 지정된 상태 개체를 사용하는 비동기 수신 작업을 초기화합니다.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>The state object provides associated information throughout the lifetime of the operation.</source>
          <target state="translated">상태 개체는 전체 작업 기간 동안 관련 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>This overload receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">이 오버로드는 콜백을 통해 해당 작업의 이벤트 처리기 ID에 대한 알림을 수신합니다.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>The operation is not complete until either a message becomes available in the queue or the time-out occurs.</source>
          <target state="translated">큐에서 메시지를 사용할 수 있거나 시간 초과가 발생할 때까지 작업이 완료되지 않습니다.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that identifies the posted asynchronous request.</source>
          <target state="translated">게시된 비동기 요청을 식별하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 입니다.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired; the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event is not raised.</source>
          <target state="translated">이 오버 로드를 사용 하 여 콜백 매개 변수에 지정 된 콜백 됩니다 때 직접 호출 메시지를 큐에 또는 지정된 된 시간 간격이 만료 되 면 사용할 수 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트가 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>The other overloads of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> rely on this component to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event.</source>
          <target state="translated">다른 오버 로드 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 시키려면이 구성 요소에 의존는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> is also raised if a message already exists in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 메시지가 큐에 이미 있는 경우에 발생 합니다.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>To use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</source>
          <target state="translated">사용 하도록 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>을 비동기 작업의 결과 처리 하는 이벤트 처리기를 만들고 이벤트 대리자와 연결 합니다.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> initiates an asynchronous receive operation; the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> is notified, through the raising of the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event, when a message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 비동기 작업입니다. <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 알림을 발생 시켜는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트를 큐에 메시지가 도착할 때.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> can then access the message by calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> or retrieving the result using the <ph id="ph3">&lt;xref:System.Messaging.ReceiveCompletedEventArgs&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 호출 하 여 메시지에 액세스할 수 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> 하거나 사용 하 여 결과 검색 하는 <ph id="ph3">&lt;xref:System.Messaging.ReceiveCompletedEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 메서드가 즉시 반환 하지만, 이벤트 처리기가 호출 될 때까지는 비동기 작업이 완료 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 는 비동기적 이며이 호출 하면 실행의 현재 스레드를 차단 하지 않고 큐에서 메시지를 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>To synchronously receive a message, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 동기적으로 메시지를 받으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>Once an asynchronous operation completes, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> again in the event handler to keep receiving notifications.</source>
          <target state="translated">비동기 작업이 완료 되 면 호출할 수 있습니다 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 알림을 수신할 이벤트 처리기에서 다시 합니다.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>The <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> that <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> returns identifies the asynchronous operation that the method started.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 하 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 반환 메서드가 시작 된 비동기 작업을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>You can use this <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> throughout the lifetime of the operation, although you generally do not use it until <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> is called.</source>
          <target state="translated">이 사용 하 여 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 작업의 수명 주기 동안 있지만 일반적으로 사용 하지 않는 때까지 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>However, if you start several asynchronous operations, you can place their <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> values in an array and specify whether to wait for all operations or any operation to complete.</source>
          <target state="translated">그러나 몇 가지 비동기 작업을 시작 하는 경우 배치할 수 있습니다 자신의 <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> 값을 배열에 하 고 모든 작업 또는 모든 작업이 완료 되기를 기다려야 하는지 여부를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>In this case, use the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to identify the completed operation.</source>
          <target state="translated">이 경우에 사용 된 <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> 완료 작업을 식별 합니다.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>The state object associates state information with the operation.</source>
          <target state="translated">상태 개체는 작업 상태 정보를 연결합니다.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>For example, if you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</source>
          <target state="translated">예를 들어, 호출 하는 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 여러 번 여러 작업을 시작할 수, 사용자가 정의한 개별 상태 개체를 통해 각 작업을 식별할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>You can also use the state object to pass information across process threads.</source>
          <target state="translated">또한 프로세스 스레드 간에 정보를 전달 하는 상태 개체를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</source>
          <target state="translated">스레드 시작 되었지만 비동기 시나리오의 다른 스레드에서 콜백이, 하는 경우 상태 개체 마샬링되고 이벤트에서 정보와 함께 다시 전달 합니다.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>Do not use the asynchronous call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> with transactions.</source>
          <target state="translated">비동기 호출을 사용 하지 마십시오 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 트랜잭션과 합니다.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>If you want to perform a transactional asynchronous operation, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, and put the transaction and the (synchronous) <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method within the event handler you create for the peek operation.</source>
          <target state="translated">트랜잭션 비동기 작업을 수행 하려는 경우 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph>, (동기) 하 여 트랜잭션을 저장 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 피크 (peek) 작업에 대해 만들 이벤트 처리기 내에서 메서드.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>Your event handler might contain functionality as shown in the following C# code.</source>
          <target state="translated">이벤트 처리기는 다음 C# 코드에 표시 된 대로 기능을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>The <ph id="ph1">&lt;paramref name="cursor" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cursor" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.CanRead">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> can be read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>를 읽을 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanRead">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> exists and the application can read from it; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 있고 응용 프로그램에서 이 큐를 읽을 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanRead">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> indicates whether the application is able to peek or receive messages from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> 응용 프로그램 큐에서 메시지를 받거나 피킹 수 인지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanRead">
          <source>If <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> can receive or peek messages from the queue.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 받거나 큐에서 메시지를 피킹할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanRead">
          <source>Otherwise, it cannot.</source>
          <target state="translated">그렇지 않으면 만들 수 없습니다.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanRead">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> is <ph id="ph2">`false`</ph> if a queue is already open with exclusive read access (or if it's open with non-exclusive access and this <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> requests exclusive access), or if the application does not have sufficient rights to access it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> <ph id="ph2">`false`</ph> 큐가 이미 단독 읽기 권한으로 열려 있으면 (비독점 액세스 하 고이 열려 있는 경우 또는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 단독 액세스를 요청), 응용 프로그램에 액세스할 수 있는 충분 한 권한이 없는 경우 또는 합니다.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanRead">
          <source>If your application tries to read from a queue when <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> is <ph id="ph2">`false`</ph>, access is denied.</source>
          <target state="translated">응용 프로그램이 큐에서 읽기를 시도 하면 때 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> 은 <ph id="ph2">`false`</ph>, 액세스가 거부 되었습니다.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanRead">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanRead">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanRead">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanRead">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanRead">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanRead">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanRead">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanRead">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanRead">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanRead">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanRead">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanRead">
          <source>The following code example displays the value of a message queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐의의 값을 표시 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanRead%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.CanWrite">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> can be written to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>에 쓸 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanWrite">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> exists and the application can write to it; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 있고 응용 프로그램이 여기에 쓸 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanWrite">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanWrite%2A&gt;</ph> indicates whether the application is able to send messages to the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanWrite%2A&gt;</ph> 응용 프로그램은 큐에 메시지를 보낼 수 있는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanWrite">
          <source>If <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanWrite%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> can send messages to the queue.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanWrite%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 큐에 메시지를 보낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanWrite">
          <source>Otherwise, it cannot.</source>
          <target state="translated">그렇지 않으면 만들 수 없습니다.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanWrite">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanWrite%2A&gt;</ph> is <ph id="ph2">`false`</ph> if a queue is already open with exclusive write access (or if it's open with non-exclusive access and this <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> requests exclusive access), or if the application does not have sufficient rights to access it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanWrite%2A&gt;</ph> <ph id="ph2">`false`</ph> 큐가 이미 단독 쓰기 권한으로 열려 있으면 (비독점 액세스 하 고이 열려 있는 경우 또는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 단독 액세스를 요청), 응용 프로그램에 액세스할 수 있는 충분 한 권한이 없는 경우 또는 합니다.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanWrite">
          <source>If your application tries to write to a queue when <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanWrite%2A&gt;</ph> is <ph id="ph2">`false`</ph>, access is denied.</source>
          <target state="translated">응용 프로그램이 큐에 쓰려고 시도 하면 때 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanWrite%2A&gt;</ph> 은 <ph id="ph2">`false`</ph>, 액세스가 거부 되었습니다.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanWrite">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanWrite">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanWrite">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanWrite">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanWrite">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanWrite">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanWrite">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanWrite">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanWrite">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanWrite">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanWrite">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CanWrite">
          <source>The following code example displays the value of a message queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanWrite%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐의의 값을 표시 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CanWrite%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.Category">
          <source>Gets or sets the queue category.</source>
          <target state="translated">큐 범주를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> that represents the queue category (Message Queuing type identifier), which allows an application to categorize its queues.</source>
          <target state="translated">큐 범주(메시지 큐 형식 식별자)를 나타내는 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>입니다. 여기서 응용 프로그램을 사용하여 큐를 분류할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>The default is <ph id="ph1">&lt;see langword="Guid.empty" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="Guid.empty" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>The queue category allows an application to categorize its queues.</source>
          <target state="translated">큐 범주에 응용을 프로그램에서 큐를 분류할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>For example, you can place all Billing queues in one category and all Order queues in another.</source>
          <target state="translated">예를 들어 하나의 범주 및 다른 모든 주문 큐에 모든 청구 큐를 배치할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> property provides access to the Message Queuing Type ID property (which is read/write), accessible through the <bpt id="p1">**</bpt>Queue Properties<ept id="p1">**</ept> dialog box in the Computer Management Console.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> 속성은 메시지 큐 형식 ID 속성 (즉, 읽기/쓰기)에 대 한 액세스를 제공을 통해 액세스할 수는 <bpt id="p1">**</bpt>큐 속성<ept id="p1">**</ept> 컴퓨터 관리 콘솔에서 대화 상자.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>You can define a new category.</source>
          <target state="translated">새 범주를 정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>Although you can use <ph id="ph1">&lt;xref:System.Guid.NewGuid%2A&gt;</ph> to create a category value that is unique across all <ph id="ph2">&lt;xref:System.Guid&gt;</ph> values, such an action is unnecessary.</source>
          <target state="translated">사용할 수 있지만 <ph id="ph1">&lt;xref:System.Guid.NewGuid%2A&gt;</ph> 는 모든 고유 범주 값을 만들려면 <ph id="ph2">&lt;xref:System.Guid&gt;</ph> 값, 이러한 작업이 필요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>The category value needs to be distinct only from other categories, not from all other <ph id="ph1">&lt;xref:System.Guid&gt;</ph> values.</source>
          <target state="translated">범주 값이 다른 범주에서가 아니라 다른 모든 구별 되도록 <ph id="ph1">&lt;xref:System.Guid&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>For example, you can assign <ph id="ph1">{00000000-0000-0000-0000-000000000001}</ph> as the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> for one set of queues and <ph id="ph3">{00000000-0000-0000-0000-000000000002}</ph> as the <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> for another set.</source>
          <target state="translated">할당할 수는 예를 들어 <ph id="ph1">{00000000-0000-0000-0000-000000000001}</ph> 로 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> 한 집합 큐에 대 한 및 <ph id="ph3">{00000000-0000-0000-0000-000000000002}</ph> 로 <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> 다른 집합에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>It is not necessary to set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph>.</source>
          <target state="translated">설정 하려면 필요 없는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>The value can be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">값은 <ph id="ph1">`null`</ph>이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>Setting this property modifies the Message Queuing queue.</source>
          <target state="translated">이 속성을 설정 하면 메시지 큐를 수정 합니다.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>Therefore, any other <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instances are affected by the change.</source>
          <target state="translated">따라서 다른 모든 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 인스턴스 변경의 영향을 받는 합니다.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Category">
          <source>The following code example gets and sets the value of a message queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐의 값을 설정 가져오고 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.Category">
          <source>The queue category was set to an invalid value.</source>
          <target state="translated">우선 순위 범주가 잘못된 값으로 설정되었습니다.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.Category">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ClearConnectionCache">
          <source>Clears the connection cache.</source>
          <target state="translated">연결 캐시를 지웁니다.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ClearConnectionCache">
          <source>When you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ClearConnectionCache%2A&gt;</ph>, the format names stored in the cache are removed and handles opened and stored in the cache are closed.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ClearConnectionCache%2A&gt;</ph>, 캐시에 저장 되는 형식 이름을 제거 되 고 핸들이 열리고 캐시에 저장 된 닫혀 있습니다.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ClearConnectionCache">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ClearConnectionCache">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ClearConnectionCache">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ClearConnectionCache">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ClearConnectionCache">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ClearConnectionCache">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ClearConnectionCache">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ClearConnectionCache">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ClearConnectionCache">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ClearConnectionCache">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ClearConnectionCache">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ClearConnectionCache">
          <source>The following code example calls <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ClearConnectionCache%2A&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ClearConnectionCache%2A&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Close">
          <source>Frees all resources allocated by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 할당한 리소스를 모두 해제합니다.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Close%2A&gt;</ph> frees all resources associated with a <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, including shared resources if appropriate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Close%2A&gt;</ph> 와 연결 된 모든 리소스를 해제 한 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>를 포함 하 여 공유 리소스에 해당 하는 경우.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>The system re-acquires these resources automatically if they are still available, for example when you call the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph> method, as in the following C# code.</source>
          <target state="translated">시스템 다시 이러한 리소스를 가져옵니다 자동으로 계속 사용할 수 있는, 예를 들어 호출 하는 경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph> 다음 C# 코드와 같이 메서드를 합니다.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>When you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Close%2A&gt;</ph>, all <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> properties that directly access the Message Queuing queue are cleared out. The <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A&gt;</ph> all remain as they were.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Close%2A&gt;</ph>모든 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 메시지 큐를 직접 액세스 하는 속성이 지워집니다. <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph>, 및 <ph id="ph6">&lt;xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A&gt;</ph> 모두 그대로 유지 됩니다.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Close%2A&gt;</ph> does not always free the read and write handles to a queue, because they might be shared.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Close%2A&gt;</ph> 읽기 및 공유 되어 때문에 큐에 쓰기 핸들 항상 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>You can take any of the following steps to ensure that <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Close%2A&gt;</ph> frees the read and write handles to a queue:</source>
          <target state="translated">확인 하려면 다음 단계를 사용할 수 있는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Close%2A&gt;</ph> 큐에 대 한 읽기 및 쓰기 핸들을 해제 합니다.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>Create the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> with exclusive access.</source>
          <target state="translated">만들기는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 단독 액세스 권한을 갖는 합니다.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>To do so, call the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29&gt;</ph> constructor, and set the <ph id="ph3">`sharedModeDenyReceive`</ph> parameter to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">이렇게 하려면 호출는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%29&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29&gt;</ph> 생성자 및 집합은 <ph id="ph3">`sharedModeDenyReceive`</ph> 매개 변수를 <ph id="ph4">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>Create the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> with connection caching disabled.</source>
          <target state="translated">만들기는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 연결 캐싱을 사용 하지 않도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>To do so, call the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29&gt;</ph> constructor and set the <ph id="ph2">`enableConnectionCache`</ph> parameter to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">이렇게 하려면 호출는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29&gt;</ph> 집합과, 생성자는 <ph id="ph2">`enableConnectionCache`</ph> 매개 변수를 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>Disable connection caching.</source>
          <target state="translated">연결 캐싱을 사용 하지 않도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>To do so, set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EnableConnectionCache%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">이 위해 설정 된 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EnableConnectionCache%2A&gt;</ph> 속성을 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>You should call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Close%2A&gt;</ph> for a queue before you delete the queue on the Message Queuing server.</source>
          <target state="translated">호출 해야 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Close%2A&gt;</ph> 메시지 큐 서버에 있는 큐를 삭제 하기 전에 큐에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>Otherwise, messages sent to the queue could throw exceptions or appear in the dead-letter queue.</source>
          <target state="translated">그렇지 않은 경우 큐에 전송 된 메시지 예외를 throw 하거나 배달 못 한 편지 큐에 표시 수 없습니다.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Close">
          <source>The following code example closes a Message Queuing queue.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐를 닫습니다.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>Creates a new queue at the specified path on a Message Queuing server.</source>
          <target state="translated">메시지 큐 서버의 지정된 경로에 새 큐를 만듭니다.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>The path of the queue to create.</source>
          <target state="translated">만들 큐의 경로입니다.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>Creates a non-transactional Message Queuing queue at the specified path.</source>
          <target state="translated">지정된 경로에 비트랜잭션 메시지 큐를 만듭니다.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> that represents the new queue.</source>
          <target state="translated">새 큐를 나타내는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>Use this overload to create a non-transactional Message Queuing queue.</source>
          <target state="translated">이 오버 로드를 사용 하 여 메시지 큐 비트랜잭션 큐를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>To create a new instance of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class in your application and bind it to an existing queue, use the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">새 인스턴스를 만드는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 응용 프로그램에서 클래스 및 기존 큐를 바인딩, 사용 하 여는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>To create a new queue in Message Queuing, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph>.</source>
          <target state="translated">메시지 큐에서 새 큐를 만들려면, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>The syntax for the <ph id="ph1">`path`</ph> parameter depends on the type of queue it references, as shown in the following table.</source>
          <target state="translated">에 대 한 구문에서 <ph id="ph1">`path`</ph> 매개 변수 유형에 따라 다릅니다 큐의 해당 참조는 다음 표에 나와 있는 것 처럼 합니다.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>Queue type</source>
          <target state="translated">큐 유형</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>Public queue</source>
          <target state="translated">공개 큐</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>Private queue</source>
          <target state="translated">개인 큐</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>Use "." for the local computer.</source>
          <target state="translated">사용 하 여 "." 로컬 컴퓨터에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>For more syntax, see the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property.</source>
          <target state="translated">자세한 구문에 대 한 참조는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>The following code example creates public and private queues.</source>
          <target state="translated">다음 코드 예제에서는 공용 및 개인 큐를 만듭니다.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>It sends a message to selected queues.</source>
          <target state="translated">선택한 큐에 메시지를 보냅니다.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is an empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이거나 빈 문자열("")인 경우</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>A queue already exists at the specified path.</source>
          <target state="translated">지정된 경로에 큐가 이미 존재합니다.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Create(System.String)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>The path of the queue to create.</source>
          <target state="translated">만들 큐의 경로입니다.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to create a transactional queue; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to create a non-transactional queue.</source>
          <target state="translated">트랜잭션 큐를 만들려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 비트랜잭션 큐를 만들려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>Creates a transactional or non-transactional Message Queuing queue at the specified path.</source>
          <target state="translated">지정된 경로에 트랜잭션 또는 비트랜잭션 메시지 큐를 만듭니다.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> that represents the new queue.</source>
          <target state="translated">새 큐를 나타내는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>You can use this overload to create a transactional queue in Message Queuing.</source>
          <target state="translated">메시지 큐에서 트랜잭션 큐를 만들려면이 오버 로드를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>You can create a non-transactional queue, by setting the <ph id="ph1">`transactional`</ph> parameter to <ph id="ph2">`false`</ph> or by calling the other overload of <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph>.</source>
          <target state="translated">설정 하 여 비트랜잭션 큐를 만들 수는 <ph id="ph1">`transactional`</ph> 매개 변수를 <ph id="ph2">`false`</ph> 의 다른 오버 로드를 호출 하 여 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>To create a new instance of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class in your application and bind it to an existing queue, use the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">새 인스턴스를 만드는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 응용 프로그램에서 클래스 및 기존 큐를 바인딩, 사용 하 여는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>To create a new queue in Message Queuing, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph>.</source>
          <target state="translated">메시지 큐에서 새 큐를 만들려면, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Create%28System.String%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>The syntax for the <ph id="ph1">`path`</ph> parameter depends on the type of queue it references, as shown in the following table.</source>
          <target state="translated">에 대 한 구문에서 <ph id="ph1">`path`</ph> 매개 변수 유형에 따라 다릅니다 큐의 해당 참조는 다음 표에 나와 있는 것 처럼 합니다.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>Queue type</source>
          <target state="translated">큐 유형</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>Public queue</source>
          <target state="translated">공개 큐</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>Private queue</source>
          <target state="translated">개인 큐</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>Use "." for the local computer.</source>
          <target state="translated">사용 하 여 "." 로컬 컴퓨터에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>For more syntax, see the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property.</source>
          <target state="translated">자세한 구문에 대 한 참조는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>The following code example creates public and private transactional queues.</source>
          <target state="translated">다음 코드 예제에서는 공용 및 개인 트랜잭션 큐를 만듭니다.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>It sends a message to selected queues.</source>
          <target state="translated">선택한 큐에 메시지를 보냅니다.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is an empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이거나 빈 문자열("")인 경우</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>A queue already exists at the specified path.</source>
          <target state="translated">지정된 경로에 큐가 이미 존재합니다.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.CreateCursor">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Messaging.Cursor" /&gt;</ph> for the current message queue.</source>
          <target state="translated">현재 메시지 큐의 새 <ph id="ph1">&lt;see cref="T:System.Messaging.Cursor" /&gt;</ph>를 만듭니다.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.CreateCursor">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Messaging.Cursor" /&gt;</ph> for the current message queue.</source>
          <target state="translated">현재 메시지 큐의 새 <ph id="ph1">&lt;see cref="T:System.Messaging.Cursor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.CreateCursor">
          <source>This cursor is used to maintain a specific location in the queue when reading the queue's messages.</source>
          <target state="translated">이 커서는 큐의 메시지를 읽을 때 큐의 특정 위치를 유지하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.CreateTime">
          <source>Gets the time and date that the queue was created in Message Queuing.</source>
          <target state="translated">메시지 큐에서 큐가 만들어진 날짜와 시간을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CreateTime">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> that represents the date and time at which the queue was created.</source>
          <target state="translated">큐가 만들어진 날짜와 시간을 나타내는 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CreateTime">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CreateTime%2A&gt;</ph> refers to the queue on the Message Queuing server, not the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CreateTime%2A&gt;</ph> 메시지 큐 서버에 있는 큐를으로 참조는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CreateTime">
          <source>If the queue exists, this property represents the time the queue was created, adjusted to the local time of the server on which the queue exists.</source>
          <target state="translated">큐가 있으면이 속성은 큐가 있는 서버의 현지 시간으로 조정 큐를 만든 시간을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CreateTime">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CreateTime">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CreateTime">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CreateTime">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CreateTime">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CreateTime">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CreateTime">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CreateTime">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CreateTime">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CreateTime">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CreateTime">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.CreateTime">
          <source>The following code example displays the value of a message queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CreateTime%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐의의 값을 표시 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.CreateTime%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.CreateTime">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>Gets or sets the message property values to be used by default when the application sends messages to the queue.</source>
          <target state="translated">응용 프로그램이 큐에 메시지를 보낼 때 기본적으로 사용되는 메시지 속성 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.DefaultPropertiesToSend" /&gt;</ph> that contains the default Message Queuing message property values used when the application sends objects other than <ph id="ph2">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> instances to the queue.</source>
          <target state="translated">응용 프로그램에서 <ph id="ph1">&lt;see cref="T:System.Messaging.DefaultPropertiesToSend" /&gt;</ph> 인스턴스 이외의 개체를 큐에 보낼 때 사용된 기본 메시지 큐 메시지 속성 값이 포함된 <ph id="ph2">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>When you send any object that is not of type <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> to the queue, the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> inserts the object into a Message Queuing message.</source>
          <target state="translated">다른 형식의 모든 개체를 보낼 때 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> 큐에는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 메시지 큐 메시지 개체를 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>At that time, the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> applies to the message the property values you specify in the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> property.</source>
          <target state="translated">그 당시는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 속성 값을 지정할 때에 메시지에 적용 되는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>Conversely, if you send a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> to the queue, these properties are already specified for the instance itself, so <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> is ignored for the <ph id="ph3">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
          <target state="translated">반대로, 보내는 경우는 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> 큐에 이러한 속성이 이미 지정 되어 인스턴스 자체에 대 한 하므로 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> 에 대해 무시 됩니다는 <ph id="ph3">&lt;xref:System.Messaging.Message&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>Although you set the properties through the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> object, the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> refers to the properties of the messages that are sent to the queue, not the queue itself.</source>
          <target state="translated">통해 속성을 설정할 수 있지만 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> 큐 자체 큐로 전송 된 메시지의 속성을 참조 합니다.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>The default values for the properties are shown in the following table.</source>
          <target state="translated">속성에 대 한 기본 값은 다음 표에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>Default value</source>
          <target state="translated">기본값</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>Zero (0)</source>
          <target state="translated">영 (0)</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>A zero-length array of bytes</source>
          <target state="translated">바이트 길이가 0 인 배열</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>Empty string ("")</source>
          <target state="translated">빈 문자열 ("")</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>The following code example uses the priority of a message to determine default properties to send for the message.</source>
          <target state="translated">다음 코드 예제에서는 보낼 메시지에 대 한 기본 속성을 확인 하는 메시지의 우선 순위를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
          <source>The default properties could not be set for the queue, possibly because one of the properties is not valid.</source>
          <target state="translated">큐에 대한 기본 속성을 설정할 수 없습니다(예: 속성 중 하나가 잘못된 경우).</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>The location of the queue to be deleted.</source>
          <target state="translated">삭제할 큐의 위치입니다.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>Deletes a queue on a Message Queuing server.</source>
          <target state="translated">메시지 큐 서버에 있는 큐를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>The syntax for the <ph id="ph1">`path`</ph> parameter depends on the type of queue.</source>
          <target state="translated">에 대 한 구문에서 <ph id="ph1">`path`</ph> 매개 변수는 큐의 형식에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>Queue type</source>
          <target state="translated">큐 유형</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>Public queue</source>
          <target state="translated">공개 큐</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>Private queue</source>
          <target state="translated">개인 큐</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>For more syntax, see the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property.</source>
          <target state="translated">자세한 구문에 대 한 참조는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>Alternatively, you can use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> to describe the queue path.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> 큐 경로 설명 하기 위해.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>Reference</source>
          <target state="translated">참조</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>Format name</source>
          <target state="translated">형식 이름</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>FormatName:[ <bpt id="p1">*</bpt>format name<ept id="p1">*</ept> ]</source>
          <target state="translated">FormatName: [ <bpt id="p1">*</bpt>형식 이름을<ept id="p1">*</ept> ]</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>Label</source>
          <target state="translated">레이블</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>Label:[ <bpt id="p1">*</bpt>label<ept id="p1">*</ept> ]</source>
          <target state="translated">레이블: [ <bpt id="p1">*</bpt>레이블<ept id="p1">*</ept> ]</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>The following code example deletes a Message Queuing queue, if it exists.</source>
          <target state="translated">다음 코드 예제에서는 있는 경우는 메시지 큐의 큐를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is an empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이거나 빈 문자열("")인 경우</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>The syntax for the <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 매개 변수에 대한 구문이 잘못된 경우.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Delete(System.String)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.DenySharedReceive">
          <source>Gets or sets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> has exclusive access to receive messages from the Message Queuing queue.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 메시지 큐에서 메시지를 받기 위한 단독 액세스 권한을 갖는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DenySharedReceive">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> has exclusive rights to receive messages from the queue; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 큐에서 메시지를 받기 위한 단독 권한을 갖는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DenySharedReceive">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DenySharedReceive">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A&gt;</ph> specifies the shared mode of the queue referenced by this <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A&gt;</ph> 이 참조 하는 큐의 공유 모드를 지정 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DenySharedReceive">
          <source>Set <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A&gt;</ph> to <ph id="ph2">`true`</ph> to indicate that only this <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> should have access to peek or receive messages from the queue with the specified <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph>.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A&gt;</ph> 를 <ph id="ph2">`true`</ph> 만 나타내기 위해이 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 지정 된 큐에서 메시지를 받거나 피킹에 대해 액세스 권한이 <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DenySharedReceive">
          <source>If another <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> or another application is associated with the same queue resource, that instance or application will not be able to peek or receive messages, but it can still send them.</source>
          <target state="translated">다른 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 또는 해당 인스턴스는 동일한 큐 리소스와 연결 된 다른 응용 프로그램 또는 응용 프로그램 보기 또는 메시지를 받을 수는 없지만 보낼 여전히 수 있습니다.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DenySharedReceive">
          <source>If <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the queue is available to multiple applications for sending, peeking, or receiving messages.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A&gt;</ph> 은 <ph id="ph2">`false`</ph>, 큐를 보내기, 보기, 또는 메시지를 받기 위해 여러 응용 프로그램에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DenySharedReceive">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DenySharedReceive">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DenySharedReceive">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DenySharedReceive">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DenySharedReceive">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DenySharedReceive">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DenySharedReceive">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DenySharedReceive">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DenySharedReceive">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DenySharedReceive">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DenySharedReceive">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.DenySharedReceive">
          <source>The following code example gets and sets the value of a message queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐의 값을 설정 가져오고 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DenySharedReceive%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>로 설정하고, 관리되지 않는 리소스만 해제하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>로 설정합니다.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Dispose(System.Boolean)">
          <source>Disposes of the resources (other than memory) used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>에서 사용하는 리소스(메모리 제외)를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Dispose(System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29&gt;</ph> 사용을 마치면 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Dispose(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29&gt;</ph> 메서드를 사용하면 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>를 사용할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Dispose(System.Boolean)">
          <source>After calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> so the memory it was occupying can be reclaimed by garbage collection.</source>
          <target state="translated">호출한 후 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29&gt;</ph>에 대 한 모든 참조를 해제 해야는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 차지 했던 메모리를 가비지 수집에 의해 회수 될 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Dispose(System.Boolean)">
          <source>You should call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.</source>
          <target state="translated">호출 해야 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29&gt;</ph> 에 대 한 마지막 참조를 해제 하기 전에 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Dispose(System.Boolean)">
          <source>Otherwise, the resources the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> is using will not be freed until garbage collection calls the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> object's destructor.</source>
          <target state="translated">그렇지 않으면 리소스는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 는 사용 하 여 해제 되지 것입니다 가비지 컬렉션 호출할 때까지 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 개체의 소멸자가 있습니다.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.EnableConnectionCache">
          <source>Gets or sets a value that indicates whether a cache of connections will be maintained by the application.</source>
          <target state="translated">연결 캐시가 응용 프로그램에 의해 유지 관리될지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EnableConnectionCache">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to create and use a connection cache; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">연결 캐시를 만들어 사용하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EnableConnectionCache">
          <source>A connection cache is a list of references to structures that contain read or write handles to queues.</source>
          <target state="translated">연결 캐시는 큐로 쓰기 핸들 또는 읽기를 포함 하는 구조에 대 한 참조의 목록입니다.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EnableConnectionCache">
          <source>When <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EnableConnectionCache%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> borrows handles from the cache each time you call <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>, or <ph id="ph6">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, rather than open new handles.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EnableConnectionCache%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 호출할 때마다 캐시에서 처리를 빌리 기 <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>, 또는 <ph id="ph6">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, 열려 있는 새 핸들이 대신 합니다.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EnableConnectionCache">
          <source>This can improve performance.</source>
          <target state="translated">이 경우 성능을 향상 시킬 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EnableConnectionCache">
          <source>Using a connection cache also insulates the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> from changes in the network topology.</source>
          <target state="translated">분리도 연결 캐시를 사용 하 여는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 네트워크 토폴로지에 변경 된 내용입니다.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EnableConnectionCache">
          <source>If you create a new connection to a queue when the connection cache is full, the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> overwrites the least recently accessed structure with the new connection.</source>
          <target state="translated">연결 캐시 꽉 큐에 새 연결을 만드는 경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 새 연결을 가장 최근에 액세스 된 구조를 덮어씁니다.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EnableConnectionCache">
          <source>You can clear the cache entirely by calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ClearConnectionCache%2A&gt;</ph>, for example, if the format names of the queues you are working with have changed so that the previous read and write handles are no longer valid.</source>
          <target state="translated">호출 하 여 완전히 캐시를 지울 수 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ClearConnectionCache%2A&gt;</ph>, 예를 들어 이전 읽기 및 쓰기 핸들을 사용할 더 이상 사용 하는 큐의 형식 이름이 변경 된 경우.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EnableConnectionCache">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EnableConnectionCache">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EnableConnectionCache">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EnableConnectionCache">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EnableConnectionCache">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EnableConnectionCache">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EnableConnectionCache">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EnableConnectionCache">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EnableConnectionCache">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EnableConnectionCache">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EnableConnectionCache">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EnableConnectionCache">
          <source>The following code example gets and sets the value of a message queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EnableConnectionCache%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐의 값을 설정 가져오고 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EnableConnectionCache%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>Gets or sets a value that indicates whether the queue accepts only non-private (non-encrypted) messages.</source>
          <target state="translated">큐에서 비개인(암호화되지 않은) 메시지만 허용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.EncryptionRequired" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.EncryptionRequired" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>The default is <ph id="ph1">&lt;see langword="None" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="None" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>When you specify that encryption is required for the messages sent to a queue, only the message bodies are encrypted.</source>
          <target state="translated">큐로 전송 된 메시지에 해당 암호화가 필요한을 지정 하면 메시지 본문에만 암호화 됩니다.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>The other members (for example, the <ph id="ph1">&lt;xref:System.Messaging.Message.Label%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.Message.SenderId%2A&gt;</ph> properties) cannot be encrypted.</source>
          <target state="translated">다른 멤버 (예를 들어는 <ph id="ph1">&lt;xref:System.Messaging.Message.Label%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Messaging.Message.SenderId%2A&gt;</ph> 속성) 암호화할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>Setting this property modifies the Message Queuing queue.</source>
          <target state="translated">이 속성을 설정 하면 메시지 큐를 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>Therefore, any other <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instances are affected by the change.</source>
          <target state="translated">따라서 다른 모든 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 인스턴스 변경의 영향을 받는 합니다.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>Encrypting a message makes the message private.</source>
          <target state="translated">메시지를 암호화 하면 메시지 개인 합니다.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>You can specify the queue's encryption requirement to be <ph id="ph1">`None`</ph>, <ph id="ph2">`Body`</ph>, or <ph id="ph3">`Optional`</ph> by setting the <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.EncryptionRequired%2A&gt;</ph> property appropriately.</source>
          <target state="translated">큐의 암호화 요구 사항 수를 지정할 수 있습니다 <ph id="ph1">`None`</ph>, <ph id="ph2">`Body`</ph>, 또는 <ph id="ph3">`Optional`</ph> 설정 하 여는 <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.EncryptionRequired%2A&gt;</ph> 속성 적절 하 게 합니다.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.UseEncryption%2A&gt;</ph> setting of the message must correspond to the encryption requirement of the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message.UseEncryption%2A&gt;</ph> 메시지의 설정을 큐의 암호화 요구 사항 일치 해야 합니다.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>If the message is not encrypted but the queue specifies <ph id="ph1">`Body`</ph>, or if the message is encrypted but the queue specifies <ph id="ph2">`None`</ph>, the message is rejected by the queue.</source>
          <target state="translated">메시지가 암호화 되지 않았지만 큐를 지정 하는 경우 <ph id="ph1">`Body`</ph>, 메시지를 암호화 하지만 큐를 지정 하는 경우 또는 <ph id="ph2">`None`</ph>, 메시지 큐에서 거부 됩니다.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>If the sending application requests a negative acknowledgment message in this event, Message Queuing indicates the message's rejection to the sending application.</source>
          <target state="translated">이 이벤트에서 부정 승인 메시지를 요청 하는 송신 응용 프로그램 메시지 큐는 보내는 응용 프로그램 메시지의 거부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>If the <ph id="ph1">&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, a message that fails encryption is sent to the dead-letter queue.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph>, 암호화 실패 한 메시지는 배달 못 한 편지 큐로 보내집니다.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>Otherwise, the message is lost.</source>
          <target state="translated">그렇지 않은 경우 메시지가 손실 됩니다.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>The following code example gets and sets the value of a message queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EncryptionRequired%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐의 값을 설정 가져오고 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EncryptionRequired%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.EncryptionRequired">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that identifies the asynchronous peek operation to finish and from which to retrieve an end result.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>는 종료한 후 최종 결과를 검색해 올 비동기 피킹(peeking) 작업을 식별합니다.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>Completes the specified asynchronous peek operation.</source>
          <target state="translated">지정된 비동기 피킹(peeking) 작업을 완료합니다.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> associated with the completed asynchronous operation.</source>
          <target state="translated">완료된 비동기 작업과 관련된 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>When the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event is raised, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> completes the operation that was initiated by the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> call.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트가 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> 의해 시작 된 작업이 완료 되는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 호출 합니다.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>To do so, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> peeks the message.</source>
          <target state="translated">이렇게 하려면 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> 메시지를 관찰 합니다.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> can specify a time-out, which causes the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event to be raised if the time-out occurs before a message appears in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 로 인해 시간 초과 지정할 수는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트를 큐에 메시지가 표시 되기 전에 제한 시간이 발생 하는 경우 발생 합니다.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>When a time-out occurs without a message arriving in the queue, a subsequent call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> throws an exception.</source>
          <target state="translated">초과 된 경우 후속 호출을 큐에 도착 하는 메시지 없이 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> is used to read the message that caused the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event to be raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> 시킨 메시지를 읽는 데 사용 되는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트를 발생 합니다.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>If you want to continue to asynchronously peek messages, you can again call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph>.</source>
          <target state="translated">다시 호출 수를 비동기적으로 메시지를 피킹할 계속 하려면 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 호출한 후 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>The following code example creates an event handler named <ph id="ph1">`MyPeekCompleted`</ph>, attaches it to the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event handler delegate, and calls <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> to initiate an asynchronous peek operation on the queue that is located at the path ".\myQueue".</source>
          <target state="translated">다음 코드 예제에서는 라는 이벤트 처리기를 만들고 <ph id="ph1">`MyPeekCompleted`</ph>에 연결는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트 처리기 대리자 및 호출 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 경로에 있는 큐에서 비동기 작업을 시작 하려면 ". \myQueue"입니다.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>When a <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event is raised, the example peeks the message and writes its body to the screen.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트가 발생 하면이 예에서는 메시지를 관찰 합니다. 한 화면으로 해당 본문을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>The example then calls <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> again to initiate a new asynchronous peek operation.</source>
          <target state="translated">이 예에서는 다음 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 새 비동기 작업을 시작 하려면 다시 합니다.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>The syntax of the <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 매개 변수의 구문이 잘못된 경우.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that identifies the asynchronous receive operation to finish and from which to retrieve an end result.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>는 종료한 후 최종 결과를 검색해 올 비동기 수신 작업을 식별합니다.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>Completes the specified asynchronous receive operation.</source>
          <target state="translated">지정된 비동기 수신 작업을 완료합니다.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> associated with the completed asynchronous operation.</source>
          <target state="translated">완료된 비동기 작업과 관련된 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>When the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event is raised, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> completes the operation that was initiated by the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> call.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트가 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> 의해 시작 된 작업이 완료 되는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 호출 합니다.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>To do so, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> receives the message.</source>
          <target state="translated">이렇게 하려면 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> 메시지를 받습니다.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> can specify a time-out, which causes the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event to be raised if the time-out occurs before a message appears in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 로 인해 시간 초과 지정할 수는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트를 큐에 메시지가 표시 되기 전에 제한 시간이 발생 하는 경우 발생 합니다.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>When a time-out occurs without a message arriving in the queue, a subsequent call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> throws an exception.</source>
          <target state="translated">초과 된 경우 후속 호출을 큐에 도착 하는 메시지 없이 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> is used to read (removing from the queue) the message that caused the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event to be raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> 메시지를 발생 시킨 (큐에서 제거 됨) 읽는 데 사용 되는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트를 발생 합니다.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>If you want to continue to asynchronously receive messages, you can again call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph>.</source>
          <target state="translated">다시 호출 수를 비동기적으로 메시지를 받을 계속 하려면 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 호출한 후 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>The following code example chains asynchronous requests.</source>
          <target state="translated">다음 코드 예제에서는 비동기 요청을 연결 합니다.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>It assumes there is a queue on the local computer called "myQueue".</source>
          <target state="translated">"MyQueue" 라는 로컬 컴퓨터에는 큐가 가정 합니다.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>The <ph id="ph1">`Main`</ph> function begins the asynchronous operation that is handled by the <ph id="ph2">`MyReceiveCompleted`</ph> routine.</source>
          <target state="translated"><ph id="ph1">`Main`</ph> 에서 처리 하는 비동기 작업을 시작 하는 함수는 <ph id="ph2">`MyReceiveCompleted`</ph> 루틴입니다.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source><ph id="ph1">`MyReceiveCompleted`</ph> processes the current message and begins a new asynchronous receive operation.</source>
          <target state="translated"><ph id="ph1">`MyReceiveCompleted`</ph> 현재 메시지를 처리 하 고 새 시작 비동기 수신 작업입니다.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>The syntax of the <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 매개 변수의 구문이 잘못된 경우.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>The location of the queue to find.</source>
          <target state="translated">찾을 큐의 위치입니다.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>Determines whether a Message Queuing queue exists at the specified path.</source>
          <target state="translated">지정된 경로에 메시지 큐가 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a queue with the specified path exists; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">지정된 경로에 큐가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환하고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Exists%28System.String%29&gt;</ph> method determines whether a Message Queuing queue exists at a specified path.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Exists%28System.String%29&gt;</ph> 메서드 메시지 큐가 지정된 된 경로에 있는지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>No method exists to determine whether a queue with a specified format name exists.</source>
          <target state="translated">지정 된 형식 이름 가진 큐가 있는지 여부를 확인 메서드가 있습니다.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>For more information about the format name syntax and other path syntax forms, see the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property.)</source>
          <target state="translated">형식 이름 구문 및 다른 경로 구문 형식에 대 한 자세한 내용은 참조는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 속성입니다.)</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Exists%28System.String%29&gt;</ph> is an expensive operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Exists%28System.String%29&gt;</ph> 부담이 큰 작업이입니다.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>Use it only when it is necessary within the application.</source>
          <target state="translated">응용 프로그램 내에서 필요한 경우에 사용 합니다.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Exists%28System.String%29&gt;</ph> method does not support the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> prefix.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Exists%28System.String%29&gt;</ph> 방법은 지원 하지 않습니다는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> 접두사입니다.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>The syntax for the <ph id="ph1">`path`</ph> parameter depends on the type of queue, as shown in the following table.</source>
          <target state="translated">에 대 한 구문은 <ph id="ph1">`path`</ph> 매개 변수는 다음 표에 나와 있는 것 처럼 큐의 형식에 의존 합니다.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>Queue type</source>
          <target state="translated">큐 유형</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>Public queue</source>
          <target state="translated">공개 큐</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Exists%28System.String%29&gt;</ph> cannot be called to verify the existence of a remote private queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Exists%28System.String%29&gt;</ph> 원격 개인 큐의 존재 여부를 확인 하려면 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>For more syntax, see the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property.</source>
          <target state="translated">자세한 구문에 대 한 참조는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>Alternatively, you can use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> to describe the queue path.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> 큐 경로 설명 하기 위해.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>Reference</source>
          <target state="translated">참조</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>Label</source>
          <target state="translated">레이블</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>Label:[ <ph id="ph1">`label`</ph> ]</source>
          <target state="translated">레이블: [ <ph id="ph1">`label`</ph> ]</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>The following code example verifies whether a Message Queuing queue exists, and then deletes it.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐가 있는 경우 한 다음 삭제 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> syntax is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 구문이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.Exists(System.String)" /&gt;</ph> method is being called on a remote private queue</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.Exists(System.String)" /&gt;</ph> 메서드가 원격 개인 큐에서 호출되는 경우</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Exists(System.String)">
          <source>The application used format name syntax when verifying queue existence.</source>
          <target state="translated">큐가 있는지 여부를 확인할 때 응용 프로그램이 형식 이름 구문을 사용했습니다.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>Gets the unique queue name that Message Queuing generated at the time of the queue's creation.</source>
          <target state="translated">큐를 작성할 때 메시지 큐가 발생시킨 고유한 큐 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>The name for the queue, which is unique on the network.</source>
          <target state="translated">네트워크에서 고유한 큐 이름입니다.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> property contains the format name of the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> 속성 큐의 형식 이름을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>Message Queuing uses the format name to identify which queue to open and how to access it.</source>
          <target state="translated">메시지 큐 큐를 열려는 및 액세스 하는 방법을 식별 하는 형식 이름을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>Unlike most of a queue's characteristics, the format name is not a Message Queuing application queue property, so you cannot access it through the Message Queuing management tool.</source>
          <target state="translated">대부분의 큐의 특성에서는 달리 형식 이름을 하지 않으므로 메시지 큐 응용 프로그램 큐 속성을 메시지 큐 관리 도구를 통해 액세스할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>The format name is simply a unique name for the queue, which Message Queuing generates when it creates the queue or which the application generates later.</source>
          <target state="translated">형식 이름은 큐에 대 한 고유한 이름을 단순히 메시지 큐는 큐 또는 응용 프로그램을 나중에 생성 하는 메시지를 만들 때 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>If you specify a path using the path name syntax (such as <ph id="ph1">`myComputer\myQueue`</ph>) rather than using the format name syntax when you read or write to the queue, the primary domain controller (which uses Active Directory) translates the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> into the associated <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> before accessing the queue.</source>
          <target state="translated">경로 이름 구문을 사용 하 여 경로 지정 하는 경우 (같은 <ph id="ph1">`myComputer\myQueue`</ph>) (사용 하 여 Active Directory)는 주 도메인 컨트롤러를 읽거나 큐에 쓸 때 형식 이름 구문을 사용 하는 대신 변환는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 관련된 에<ph id="ph3">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> 큐에 액세스 하기 전에.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>If your application is working offline, you must use the format name syntax; otherwise, the primary domain controller will not be available to perform the path translation.</source>
          <target state="translated">형식 이름 구문을;를 사용 해야 응용 프로그램을 오프 라인으로 작업 하는 경우 그렇지 않으면 주 도메인 컨트롤러의 경로 변환 하는 데 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>The following code example displays the value of a message queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐의의 값을 표시 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph> is not set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph>이 설정되지 않은 경우</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.FormatName">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>Gets or sets the formatter used to serialize an object into or deserialize an object from the body of a message read from or written to the queue.</source>
          <target state="translated">큐에서 읽거나 쓴 메시지 본문으로 개체를 serialize하거나 그 메시지 본문에서 개체를 deserialize하는 데 사용되는 포맷터를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.IMessageFormatter" /&gt;</ph> that produces a stream to be written to or read from the message body.</source>
          <target state="translated">메시지 본문에서 쓰거나 읽는 스트림을 만드는 <ph id="ph1">&lt;see cref="T:System.Messaging.IMessageFormatter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>The default is <ph id="ph1">&lt;see cref="T:System.Messaging.XmlMessageFormatter" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="T:System.Messaging.XmlMessageFormatter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> property contains an instance of a formatter object, which transforms messages when your application reads or writes to the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> 속성 응용 프로그램을 읽거나 큐에 쓸 때 메시지를 변환 하는 포맷터 개체의 인스턴스를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>When the application sends message to the queue, the formatter serializes the object into a stream and inserts it into the message body.</source>
          <target state="translated">응용 프로그램 큐로 메시지를 보내면, 포맷터는 개체를 스트림으로 serialize 하 고 메시지 본문에 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>When reading from a queue, the formatter deserializes the message data into the <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
          <target state="translated">큐에서 읽을 때 포맷터는 메시지 데이터에는 <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> 속성은 <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> 는 느슨하게 결합 되어 있으므로이 형식을 사용 하는 경우에 발신자와 수신자 입력 동일한 개체를 설정할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> serialize the data into binary representation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> 이진 표현으로 데이터를 직렬화 합니다.</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> is used when sending or receiving COM components.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> COM 구성 요소를 받거나 보낼 때 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source><ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> provide faster throughput than the <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> 보다 더 빠르게 처리는 <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> allows interoperability with Visual Basic 6.0 Message Queuing applications.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> Visual Basic 6.0 메시지 큐 응용 프로그램과 상호 운용성을 허용 합니다.</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>When your application sends messages to the queue, the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType&gt;</ph> applies only to those messages that use the default message properties, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph>.</source>
          <target state="translated">응용 프로그램 큐에 메시지를 보낼 때의 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType&gt;</ph> 기본 메시지 속성을 사용 하는 해당 메시지에만 적용 됩니다 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>If you send a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> to the queue, Message Queuing uses the formatter defined in the <ph id="ph2">&lt;xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType&gt;</ph> property to serialize the body instead.</source>
          <target state="translated">보내는 경우는 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> 큐에 메시지 큐 사용 하 여에 정의 된 포맷터는 <ph id="ph2">&lt;xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType&gt;</ph> 대신 본문을 serialize 할 속성입니다.</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class will always use a <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> to receive or peek a message from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 클래스는 항상 사용는 <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> 받거나 큐에서 메시지를 피킹할 합니다.</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>The message is deserialized using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">메시지를 사용 하 여 deserialize 되는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>The following code example demonstrates formatting a message body using <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 서식을 사용 하 여 메시지 본문을 보여 줍니다. <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Formatter">
          <source>The following code example demonstrates formatting a message body using <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 서식을 사용 하 여 메시지 본문을 보여 줍니다. <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetAllMessages">
          <source>Returns all the messages that are in the queue.</source>
          <target state="translated">큐에 있는 메시지를 모두 반환합니다.</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetAllMessages">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that represents all the messages in the queue, in the same order as they appear in the Message Queuing queue.</source>
          <target state="translated">큐에 있는 모든 메시지를 메시지 큐에서 표시되는 것과 동일한 순서로 나타내는 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetAllMessages">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetAllMessages%2A&gt;</ph> returns a static snapshot of the messages in the queue, not dynamic links to those messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetAllMessages%2A&gt;</ph> 이러한 메시지를 큐에 메시지, 동적 아님 링크의 정적 스냅숏을 반환합니다.</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetAllMessages">
          <source>Therefore, you cannot use the array to modify the messages in the queue.</source>
          <target state="translated">따라서 큐에서 메시지를 수정 하는 배열을 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetAllMessages">
          <source>If you want real-time, dynamic interaction with the queue (such as the ability to delete messages), call the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A&gt;</ph> method, which returns a dynamic list of the messages in the queue.</source>
          <target state="translated">(예: 메시지를 삭제 하는 기능) 큐와 상호 작용을 실시간으로 동적 호출의 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A&gt;</ph> 메서드를 큐에 있는 메시지의 동적 목록을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetAllMessages">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetAllMessages%2A&gt;</ph> returns a copy of the messages in the queue at the time the method was called, the array does not reflect new messages that arrive in the queue or messages that are removed from the queue.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetAllMessages%2A&gt;</ph> 메서드가 호출 된 시간에 큐에서 메시지의 복사본을 반환, 큐에 도착 하는 새로운 메시지 또는 메시지 큐에서 제거 된 배열을 반영 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetAllMessages">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetAllMessages%2A&gt;</ph> retrieves only those properties not filtered out by the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetAllMessages%2A&gt;</ph> 에 의해 필터링 되지 속성만 검색는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetAllMessages">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetAllMessages">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetAllMessages">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetAllMessages">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetAllMessages">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetAllMessages">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetAllMessages">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetAllMessages">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetAllMessages">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetAllMessages">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetAllMessages">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetAllMessages">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetAllMessages%2A&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetAllMessages%2A&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetAllMessages">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetEnumerator">
          <source>Enumerates the messages in a queue.</source>
          <target state="translated">큐의 메시지를 열거합니다.</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetEnumerator">
          <source><ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.GetEnumerator" /&gt;</ph> is deprecated.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.GetEnumerator" /&gt;</ph>은 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetEnumerator">
          <source><ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" /&gt;</ph> should be used instead.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" /&gt;</ph>를 대신 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetEnumerator">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that provides a dynamic connection to the messages in the queue.</source>
          <target state="translated">큐에 있는 메시지에 대한 동적 연결을 제공하는 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetEnumerator">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetEnumerator">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetEnumerator">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetEnumerator">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetEnumerator">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetEnumerator">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetEnumerator">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetEnumerator">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetEnumerator">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetEnumerator">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetEnumerator">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetEnumerator">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetEnumerator%2A&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetEnumerator%2A&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>The name of the computer that contains the queue, without the two preceding backslashes (<ph id="ph1">\\</ph><ph id="ph2">\\</ph>).</source>
          <target state="translated">큐가 포함된 컴퓨터의 이름이며 앞에 백슬래시 두 개(<ph id="ph1">\\</ph><ph id="ph2">\\</ph>)가 없습니다.</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>Gets the identifier of the computer on which the queue referenced by this <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> is located.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 큐가 있는 컴퓨터의 식별자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> that represents a unique identifier for the computer on which the queue is located.</source>
          <target state="translated">큐가 있는 컴퓨터의 고유 식별자를 나타내는 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>You can use a computer's identifier for two purposes, among others: to read the computer journal and to set security certificates.</source>
          <target state="translated">컴퓨터의 식별자를 사용 하 여 다른 규칙 으로부터 다음 두 가지 목적: 보안 인증서를 설정 하 고 컴퓨터 저널을 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>However, you cannot call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMachineId%28System.String%29&gt;</ph> for a remote computer when you are working offline because the application must have access to the directory service on the domain controller.</source>
          <target state="translated">그러나 호출할 수 없습니다 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMachineId%28System.String%29&gt;</ph> 작업 하는 경우 오프 라인 도메인 컨트롤러에서 응용 프로그램 디렉터리 서비스에 액세스 해야 하기 때문에 원격 컴퓨터에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>The computer identifier (or machine identifier) is a <ph id="ph1">&lt;xref:System.Guid&gt;</ph> that Message Queuing creates when a computer is added to the enterprise.</source>
          <target state="translated">컴퓨터 식별자 (또는 컴퓨터 식별자)는 한 <ph id="ph1">&lt;xref:System.Guid&gt;</ph> 메시지 큐 엔터프라이즈에 컴퓨터가 추가 될 때 만들어지는 합니다.</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>Message Queuing combines the computer identifier with the <ph id="ph1">`Machine`</ph> and <ph id="ph2">`Journal`</ph> keywords to create the machine journal's format name, which has the syntax <ph id="ph3">`Machine=&lt;computeridentifier&gt;;Journal`</ph>.</source>
          <target state="translated">메시지 큐 컴퓨터 식별자와 결합 된 <ph id="ph1">`Machine`</ph> 및 <ph id="ph2">`Journal`</ph> 키워드 구문을 컴퓨터 저널 형식 이름을 만드는 데 <ph id="ph3">`Machine=&lt;computeridentifier&gt;;Journal`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>The machine journal, which is also known as the journal queue, is a system queue that stores copies of application-generated messages when the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.UseJournalQueue%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">라고도 하는 저널 큐로는의 복사본을 저장 하는 시스템 큐 응용 프로그램에서 생성 된 경우 컴퓨터 저널 경우 메시지는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.UseJournalQueue%2A&gt;</ph> 속성은 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>This syntax for the journal is only valid when constructing the format name for the queue.</source>
          <target state="translated">이 구문은 업무 일지 큐에 대 한 형식 이름을 생성 하는 경우에 유효 합니다.</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>The path name syntax is <ph id="ph1">`MachineName`</ph><ph id="ph2">\\</ph><ph id="ph3">`Journal$`</ph>.</source>
          <target state="translated">경로 이름 구문은 <ph id="ph1">`MachineName`</ph> <ph id="ph2">\\</ph> <ph id="ph3">`Journal$`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>The following code example calls <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMachineId%28System.String%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMachineId%28System.String%29&gt;</ph>를 호출합니다.</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>The computer identifier could not be retrieved, possibly because the directory service is not available; for example, if you are working offline.</source>
          <target state="translated">오프라인으로 작업하는 경우와 같이 디렉터리 서비스를 사용할 수 없기 때문에 컴퓨터 식별자를 검색할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source>Creates an enumerator object for all the messages in the queue.</source>
          <target state="translated">큐에 있는 모든 메시지에 대해 열거자 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source><ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator" /&gt;</ph> is deprecated.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator" /&gt;</ph>은 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source><ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" /&gt;</ph> should be used instead.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" /&gt;</ph>를 대신 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.MessageEnumerator" /&gt;</ph> holding the messages that are contained in the queue.</source>
          <target state="translated">큐에 있는 메시지를 보유하는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageEnumerator" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A&gt;</ph> creates a dynamic list of all the messages in a queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A&gt;</ph> 큐에 있는 모든 메시지의 동적 목록을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source>You can remove from the queue the message at the enumerator's current position by calling <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> that <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A&gt;</ph> returns.</source>
          <target state="translated">제거할 수 있습니다는 큐에서 열거자의 현재 위치에서 메시지를 호출 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> 에 대 한는 <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> 하 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A&gt;</ph> 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source>Because the cursor is associated with the dynamic list of messages in the queue, the enumeration reflects any modification you make to the messages in the queue, if the message is beyond the current cursor position.</source>
          <target state="translated">커서가 연결 된 큐에 메시지의 동적 목록과 있으므로 열거형 메시지는 현재 커서 위치 초과 하는 경우 큐의 메시지에 대 한 수정 내용을 반영 합니다.</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source>For example, the enumerator can automatically access a lower-priority message placed beyond the cursor's current position, but not a higher-priority message inserted before that position.</source>
          <target state="translated">예를 들어 열거자 커서의 현재 위치를 넘어 배치 된 우선 순위가 낮은 메시지 있지만 해당 위치 앞에 삽입 하는 우선 순위가 높은 메시지가 아니라에 자동으로 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source>However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Reset%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph>.</source>
          <target state="translated">그러나 다시 설정할 수 있습니다는 열거 되므로 커서 다시 목록 맨 앞으로 호출 하 여 이동 <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Reset%2A&gt;</ph> 에 대 한는 <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source>The order of the messages in the enumeration reflects their order in the queue, so higher-priority messages will appear before lower-priority ones.</source>
          <target state="translated">열거형에 있는 메시지의 순서는 우선 순위가 낮은 것 하기 전에 우선 순위가 높은 메시지가 표시 되므로 큐에서의 순서를 반영 합니다.</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source>If you want a static snapshot of the messages in the queue rather than a dynamic connection to them, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetAllMessages%2A&gt;</ph>.</source>
          <target state="translated">동적 연결 하지 않고 큐의 메시지를 정적 스냅숏을 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetAllMessages%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source>This method returns an array of <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> objects, which represent the messages at the time the method was called.</source>
          <target state="translated">이 메서드는 배열을 반환 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> 개체를 메서드가 호출 된 시간에 메시지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator">
          <source>The following code example gets a dynamic list of messages in a queue and counts all messages with the <ph id="ph1">&lt;xref:System.Messaging.Message.Priority%2A&gt;</ph> property set to <ph id="ph2">&lt;xref:System.Messaging.MessagePriority.Lowest?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 큐에 있는 메시지의 동적 목록을 가져오고 있는 모든 메시지가 계산 된 <ph id="ph1">&lt;xref:System.Messaging.Message.Priority%2A&gt;</ph> 속성이로 설정 <ph id="ph2">&lt;xref:System.Messaging.MessagePriority.Lowest?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
          <source>Creates an enumerator object for all the messages in the queue.</source>
          <target state="translated">큐에 있는 모든 메시지에 대해 열거자 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.MessageEnumerator" /&gt;</ph> holding the messages that are contained in the queue.</source>
          <target state="translated">큐에 있는 메시지를 보유하는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageEnumerator" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A&gt;</ph> creates a dynamic list of all the messages in a queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A&gt;</ph> 큐에 있는 모든 메시지의 동적 목록을 만듭니다.</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
          <source>You can remove from the queue the message at the enumerator's current position by calling <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> that <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A&gt;</ph> returns.</source>
          <target state="translated">제거할 수 있습니다는 큐에서 열거자의 현재 위치에서 메시지를 호출 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A&gt;</ph> 에 대 한는 <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph> 하 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A&gt;</ph> 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
          <source>Because the cursor is associated with the dynamic list of messages in the queue, the enumeration reflects any modification you make to the messages in the queue, if the message is beyond the current cursor position.</source>
          <target state="translated">커서가 연결 된 큐에 메시지의 동적 목록과 있으므로 열거형 메시지는 현재 커서 위치 초과 하는 경우 큐의 메시지에 대 한 수정 내용을 반영 합니다.</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
          <source>For example, the enumerator can automatically access a lower-priority message placed beyond the cursor's current position, but not a higher-priority message inserted before that position.</source>
          <target state="translated">예를 들어 열거자 커서의 현재 위치를 넘어 배치 된 우선 순위가 낮은 메시지 있지만 해당 위치 앞에 삽입 하는 우선 순위가 높은 메시지가 아니라에 자동으로 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
          <source>However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Reset%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph>.</source>
          <target state="translated">그러나 다시 설정할 수 있습니다는 열거 되므로 커서 다시 목록 맨 앞으로 호출 하 여 이동 <ph id="ph1">&lt;xref:System.Messaging.MessageEnumerator.Reset%2A&gt;</ph> 에 대 한는 <ph id="ph2">&lt;xref:System.Messaging.MessageEnumerator&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
          <source>The order of the messages in the enumeration reflects their order in the queue, so higher-priority messages will appear before lower-priority ones.</source>
          <target state="translated">열거형에 있는 메시지의 순서는 우선 순위가 낮은 것 하기 전에 우선 순위가 높은 메시지가 표시 되므로 큐에서의 순서를 반영 합니다.</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
          <source>If you want a static snapshot of the messages in the queue rather than a dynamic connection to them, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetAllMessages%2A&gt;</ph>.</source>
          <target state="translated">동적 연결 하지 않고 큐의 메시지를 정적 스냅숏을 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetAllMessages%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
          <source>This method returns an array of <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> objects, which represent the messages at the time the method was called.</source>
          <target state="translated">이 메서드는 배열을 반환 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> 개체를 메서드가 호출 된 시간에 메시지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageEnumerator2">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>Creates an enumerator object for a dynamic listing of the public queues on the network.</source>
          <target state="translated">네트워크에 있는 공개 큐의 동적 목록에 대한 열거자 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>Provides forward-only cursor semantics to enumerate through all public queues on the network.</source>
          <target state="translated">앞으로만 이동 가능한 커서 의미 체계 기능을 제공하여 네트워크에 있는 모든 공개 큐를 열거합니다.</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph> that provides a dynamic listing of all the public message queues on the network.</source>
          <target state="translated">네트워크에 있는 모든 공개 메시지 큐의 동적 목록을 제공하는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>This overload of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A&gt;</ph> returns an enumeration of all the public queues that are on the network.</source>
          <target state="translated">이 오버 로드의 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A&gt;</ph> 네트워크에 있는 모든 공개 큐의 열거형을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>Because the cursor is associated with a dynamic listing, the enumeration reflects any modification you make to a queue list for queues deleted or added beyond the cursor's current position.</source>
          <target state="translated">커서가 동적 목록과 관련 되어 있으므로 열거형에는 삭제 또는 커서의 현재 위치를 벗어나서 추가 큐에 대 한 큐 목록에 대 한 수정 내용을 반영 합니다.</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>Additions or deletion of queues located before the cursor's current position are not reflected.</source>
          <target state="translated">추가 또는 삭제는 커서의 현재 위치 보다 앞에 있는 큐의 반영 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>For example, the enumerator can automatically access a queue appended beyond the cursor position but not one inserted before that position.</source>
          <target state="translated">예를 들어 열거자의 커서 위치 뒤에 추가 하는 큐 이지만 아닌 해당 위치 앞에 삽입에 자동으로 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>.</source>
          <target state="translated">그러나 다시 설정할 수 있습니다는 열거 되므로 커서 다시 목록 맨 앞으로 호출 하 여 이동 <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> 에 대 한는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>There is no defined ordering of queues in a network.</source>
          <target state="translated">큐는 네트워크에 정의 된 순서가 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>An enumerator does not order them, for example, by computer, label, public or private status, or any other accessible criteria.</source>
          <target state="translated">열거자 정렬 되지 않은, 예를 들어 컴퓨터, 레이블, 공개 또는 개인 상태 또는 다른 액세스할 수 있는 기준으로 합니다.</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>If you want a static snapshot of the queues on the network rather than a dynamic connection to them, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueues%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29&gt;</ph>.</source>
          <target state="translated">동적 연결 하지 않고 네트워크에 있는 큐의 정적 스냅샷 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueues%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>Each of these two methods returns an array of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> objects, which represent the queues at the time the method was called.</source>
          <target state="translated">이러한 두 메서드는 각각의 배열을 반환 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 개체를 메서드가 호출 된 시간에 큐를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>The following code example iterates through all the message queues in the network, and examines the path for each queue.</source>
          <target state="translated">다음 코드 예제에서는 네트워크의 모든 메시지 큐에서 반복 되며 각 큐에 대 한 경로 검사 합니다.</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
          <source>Finally, it displays the number of public queues on the network.</source>
          <target state="translated">마지막으로, 네트워크에 공개 큐의 수를 표시합니다.</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueCriteria" /&gt;</ph> that contains the criteria used to filter the available message queues.</source>
          <target state="translated">사용 가능한 메시지 큐를 필터링하는 데 사용되는 기준이 포함된 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueCriteria" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>Provides forward-only cursor semantics to enumerate through all public queues on the network that meet the specified criteria.</source>
          <target state="translated">앞으로만 이동 가능한 커서 의미 체계 기능 제공하여 네트워크에 있는 공개 큐 중 지정된 기준을 만족하는 큐를 모두 열거합니다.</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph> that provides a dynamic listing of the public message queues on the network that satisfy the restrictions specified by the <ph id="ph2">&lt;paramref name="criteria" /&gt;</ph> parameter.</source>
          <target state="translated">네트워크에 있는 공개 메시지 큐 중 <ph id="ph2">&lt;paramref name="criteria" /&gt;</ph> 매개 변수가 지정한 제한 사항을 만족시키는 큐에 대한 동적 목록을 제공하는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>This overload of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A&gt;</ph> returns a listing of all the public queues on the network that satisfy criteria defined in the application criteria.</source>
          <target state="translated">이 오버 로드의 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A&gt;</ph> 응용 프로그램 조건에 정의 된 조건을 충족 하는 네트워크에 있는 모든 공개 큐의 목록을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>You can specify the criteria to include, for example, queue creation or modification time, computer name, label, category, or any combination of these.</source>
          <target state="translated">를 포함 하는 조건을 작성 또는 수정 시간, 컴퓨터 이름, 레이블, 범주 또는 이러한 조건의 조합을 예를 들어 큐를 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>Because the cursor is associated with a dynamic listing, the enumeration reflects any modification you make to a queue that occurs beyond the cursor's current position.</source>
          <target state="translated">커서가 동적 목록과 관련 되어 있으므로 열거형에는 커서의 현재 위치 뒤에 발생 하는 큐에 대 한 수정 내용을 반영 합니다.</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>Changes to queues located before the cursor's current position are not reflected.</source>
          <target state="translated">커서의 현재 위치 보다 앞에 있는 큐에 변경 내용이 반영 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>For example, the enumerator can automatically access a queue appended beyond the cursor position but not one inserted before that position.</source>
          <target state="translated">예를 들어 열거자의 커서 위치 뒤에 추가 하는 큐 이지만 아닌 해당 위치 앞에 삽입에 자동으로 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>.</source>
          <target state="translated">그러나 다시 설정할 수 있습니다는 열거 되므로 커서 다시 목록 맨 앞으로 호출 하 여 이동 <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> 에 대 한는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>There is no defined ordering of queues in a network.</source>
          <target state="translated">큐는 네트워크에 정의 된 순서가 있지 않습니다.</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>An enumerator does not order them, for example, by computer, label, public or private status, or any other accessible criteria.</source>
          <target state="translated">열거자 정렬 되지 않은, 예를 들어 컴퓨터, 레이블, 공개 또는 개인 상태 또는 다른 액세스할 수 있는 기준으로 합니다.</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>If you want a static snapshot of the queues on the network rather than a dynamic connection to them, specify criteria for <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueues%2A&gt;</ph> or call <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29&gt;</ph>.</source>
          <target state="translated">동적 연결 하지 않고 네트워크에 있는 큐의 정적 스냅샷 하려는 경우에 대 한 조건을 지정 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueues%2A&gt;</ph> 호출 또는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>Each of these two methods returns an array of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> objects, which represent the queues at the time the method was called.</source>
          <target state="translated">이러한 두 메서드는 각각의 배열을 반환 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 개체를 메서드가 호출 된 시간에 큐를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>Calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29&gt;</ph>, or <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29&gt;</ph> provides the same results as calling <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.GetPublicQueues%2A&gt;</ph> with the filtering criteria of <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph>, respectively.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29&gt;</ph> 호출할 때와 같은 결과 얻을 <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.GetPublicQueues%2A&gt;</ph> 의 필터링 기준을 사용 하 여 <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph>, 및 <ph id="ph7">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph>각각.</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
          <source>The following code example iterates through message queues and displays the path of each queue that was created in the last day and that exists on the computer "MyComputer".</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐를 통해 반복 하 고 "MyComputer" 컴퓨터에 같고 마지막 날에 만들어진 각 큐의 경로 표시 합니다.</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
          <source>The computer from which to retrieve the private queues.</source>
          <target state="translated">개인 큐를 검색할 컴퓨터입니다.</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
          <source>Retrieves all the private queues on the specified computer.</source>
          <target state="translated">지정된 컴퓨터에 있는 개인 큐를 모두 검색합니다.</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> objects that reference the retrieved private queues.</source>
          <target state="translated">검색된 개인 큐를 참조하는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29&gt;</ph> retrieves a static snapshot of the queues on a specified computer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29&gt;</ph> 지정된 된 컴퓨터에 있는 큐의 정적 스냅숏을 검색합니다.</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
          <source>The following code example retrieves lists of queues.</source>
          <target state="translated">다음 코드 예제에서는 큐 목록을 검색합니다.</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>이거나 빈 문자열("")입니다.</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>Retrieves all the public queues on the network.</source>
          <target state="translated">네트워크에 있는 공개 큐를 모두 검색합니다.</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPublicQueues">
          <source>Retrieves all the public queues on the network.</source>
          <target state="translated">네트워크에 있는 공개 큐를 모두 검색합니다.</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPublicQueues">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> objects that reference the retrieved public queues.</source>
          <target state="translated">검색된 공개 큐를 참조하는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues">
          <source>Use this overload if you want a complete list of all the public queues on the network.</source>
          <target state="translated">네트워크에 있는 모든 공개 큐의 전체 목록을 원하는 경우이 오버 로드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues">
          <source>If you want to restrict the list by certain criteria, such as <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph>, or last modified time use another overload of this method.</source>
          <target state="translated">와 같은 특정 조건을 기준으로 목록을 제한 하려는 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph>, 또는이 메서드의 다른 오버 로드를 사용 하는 마지막으로 수정한 시간입니다.</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues">
          <source>(Alternatively, you can use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29&gt;</ph>, or <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29&gt;</ph>.)</source>
          <target state="translated">(사용할 수 있습니다 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29&gt;</ph>.)</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueues%2A&gt;</ph> retrieves a static snapshot of the queues.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueues%2A&gt;</ph> 큐의 정적 스냅숏을 검색합니다.</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues">
          <source>To interact with a dynamic list of the queues, use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A&gt;</ph>.</source>
          <target state="translated">큐의 동적 목록을 사용 하 여 상호 작용을 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues">
          <source>The following code example retrieves lists of queues.</source>
          <target state="translated">다음 코드 예제에서는 큐 목록을 검색합니다.</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPublicQueues">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueCriteria" /&gt;</ph> that contains the criteria used to filter the queues.</source>
          <target state="translated">큐를 필터링하는 데 사용되는 기준이 포함된 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueCriteria" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>Retrieves all the public queues on the network that meet the specified criteria.</source>
          <target state="translated">네트워크에 있는 공개 큐 중 지정된 기준을 만족시키는 큐를 모두 검색합니다.</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> objects that reference the retrieved public queues.</source>
          <target state="translated">검색된 공개 큐를 참조하는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>If you want to filter all the public queues on the network by label, category, or computer name, the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class contains specific methods that provide that functionality (<ph id="ph2">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29&gt;</ph>, <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29&gt;</ph>, and <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29&gt;</ph>, respectively).</source>
          <target state="translated">레이블, 범주 또는 컴퓨터 이름으로 네트워크에 있는 모든 공개 큐를 필터링 하려는 경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 해당 기능을 제공 하는 특정 메서드를 포함 하는 클래스 (<ph id="ph2">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29&gt;</ph>, <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29&gt;</ph>각각).</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>Use this overload to get a list of all the public queues on the network that meet more than one of these criteria (for example, if you want to specify both a label and a category).</source>
          <target state="translated">이 오버 로드를 사용 하 여 (예를 들어 경우 레이블과 범주 둘 다 지정 하려는) 이러한 조건 중 하나 이상 만족 하는 네트워크에서 공개 큐를 모든 목록을 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>You can also filter by message criteria other than <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph>.</source>
          <target state="translated">필터링 할 수도 있습니다 메시지 조건으로 이외의 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>For example, you use this overload to filter by a queue's last-modified time.</source>
          <target state="translated">예를 들어 큐의 마지막 수정 시간을 기준으로이 오버 로드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>Simply create a new instance of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueueCriteria&gt;</ph> class, set the appropriate properties in the instance, and pass the instance as the <ph id="ph2">`criteria`</ph> parameter.</source>
          <target state="translated">새 인스턴스를 만들기만 <ph id="ph1">&lt;xref:System.Messaging.MessageQueueCriteria&gt;</ph> 클래스 인스턴스의 적절 한 속성을 설정 하 고 해당 인스턴스를 전달는 <ph id="ph2">`criteria`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueues%2A&gt;</ph> retrieves a static snapshot of the queues.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueues%2A&gt;</ph> 큐의 정적 스냅숏을 검색합니다.</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>To interact with a dynamic list of the queues, use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A&gt;</ph>.</source>
          <target state="translated">큐의 동적 목록을 사용 하 여 상호 작용을 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>The following code example retrieves lists of queues.</source>
          <target state="translated">다음 코드 예제에서는 큐 목록을 검색합니다.</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> that groups the set of queues to be retrieved.</source>
          <target state="translated">검색할 큐 집합을 그룹화하는 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>Retrieves all the public queues on the network that belong to the specified category.</source>
          <target state="translated">네트워크에 있는 공개 큐 중 지정된 범주에 속한 큐를 모두 검색합니다.</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> objects that reference the retrieved public queues.</source>
          <target state="translated">검색된 공개 큐를 참조하는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>Use this method to filter the public queues by category.</source>
          <target state="translated">공개 큐를 범주별으로 필터링 하려면이 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> property provides access to the Message Queuing type ID property (which is read/write) of a particular queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> 속성은 메시지 큐 유형의 ID 속성 (즉, 읽기/쓰기) 특정 큐에 대 한 액세스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>Although you can use <ph id="ph1">&lt;xref:System.Guid.NewGuid%2A&gt;</ph> to create a category value that is unique across all <ph id="ph2">&lt;xref:System.Guid&gt;</ph> values, it is not necessary.</source>
          <target state="translated">사용할 수 있지만 <ph id="ph1">&lt;xref:System.Guid.NewGuid%2A&gt;</ph> 는 모든 고유 범주 값을 만들려면 <ph id="ph2">&lt;xref:System.Guid&gt;</ph> 값 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>The category value needs to be distinct only from other categories, not from all other <ph id="ph1">&lt;xref:System.Guid&gt;</ph> values.</source>
          <target state="translated">범주 값이 다른 범주에서가 아니라 다른 모든 구별 되도록 <ph id="ph1">&lt;xref:System.Guid&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>For example, you can assign <ph id="ph1">{00000000-0000-0000-0000-000000000001}</ph> as the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> for one set of queues and <ph id="ph3">{00000000-0000-0000-0000-000000000002}</ph> as the <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> for another set.</source>
          <target state="translated">할당할 수는 예를 들어 <ph id="ph1">{00000000-0000-0000-0000-000000000001}</ph> 로 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> 한 집합 큐에 대 한 및 <ph id="ph3">{00000000-0000-0000-0000-000000000002}</ph> 로 <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph> 다른 집합에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29&gt;</ph> retrieves a static snapshot of the queues.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29&gt;</ph> 큐의 정적 스냅숏을 검색합니다.</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>To interact with a dynamic list of the queues, use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A&gt;</ph>.</source>
          <target state="translated">큐의 동적 목록을 사용 하 여 상호 작용을 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>You can specify the category as part of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueueCriteria&gt;</ph> you pass into the method.</source>
          <target state="translated">일부로 범주를 지정할 수는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueueCriteria&gt;</ph> 메서드에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>The following code example retrieves lists of queues.</source>
          <target state="translated">다음 코드 예제에서는 큐 목록을 검색합니다.</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
          <source>A label that groups the set of queues to be retrieved.</source>
          <target state="translated">검색할 큐 집합을 그룹화하는 레이블입니다.</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
          <source>Retrieves all the public queues on the network that carry the specified label.</source>
          <target state="translated">네트워크에 있는 공개 큐 중 지정된 레이블이 있는 큐를 모두 검색합니다.</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> objects that reference the retrieved public queues.</source>
          <target state="translated">검색된 공개 큐를 참조하는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
          <source>Use this method to filter the public queues by label.</source>
          <target state="translated">이 메서드를 사용 하 여 레이블에 의해 공개 큐를 필터링 합니다.</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29&gt;</ph> retrieves a static snapshot of the queues.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29&gt;</ph> 큐의 정적 스냅숏을 검색합니다.</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
          <source>To interact with a dynamic list of the queues, use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A&gt;</ph>.</source>
          <target state="translated">큐의 동적 목록을 사용 하 여 상호 작용을 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
          <source>You can specify the label as part of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueueCriteria&gt;</ph> you pass into the method.</source>
          <target state="translated">일부분으로 레이블을 지정할 수는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueueCriteria&gt;</ph> 메서드에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
          <source>The following code example retrieves lists of queues.</source>
          <target state="translated">다음 코드 예제에서는 큐 목록을 검색합니다.</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="label" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="label" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
          <source>The name of the computer that contains the set of public queues to be retrieved.</source>
          <target state="translated">검색할 공개 큐 집합을 포함하는 컴퓨터의 이름입니다.</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
          <source>Retrieves all the public queues that reside on the specified computer.</source>
          <target state="translated">지정된 컴퓨터에 있는 공개 큐를 모두 검색합니다.</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> objects that reference the public queues on the computer.</source>
          <target state="translated">컴퓨터에 있는 공개 큐를 참조하는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> 개체의 배열입니다.</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
          <source>Use this method to filter the public queues by computer.</source>
          <target state="translated">컴퓨터별 공개 큐를 필터링 하려면이 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29&gt;</ph> retrieves a static snapshot of the queues.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29&gt;</ph> 큐의 정적 스냅숏을 검색합니다.</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
          <source>To interact with a dynamic list of the queues, use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A&gt;</ph>.</source>
          <target state="translated">큐의 동적 목록을 사용 하 여 상호 작용을 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
          <source>You can specify the computer name as part of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueueCriteria&gt;</ph> you pass into the method.</source>
          <target state="translated">일부분으로 컴퓨터 이름을 지정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueueCriteria&gt;</ph> 메서드에 전달 합니다.</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
          <source>The following code example retrieves lists of queues.</source>
          <target state="translated">다음 코드 예제에서는 큐 목록을 검색합니다.</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> parameter has incorrect syntax.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="machineName" /&gt;</ph> 매개 변수의 구문이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetSecurityContext">
          <source>Retrieves the security context that MSMQ associates with the current user (thread identity) at the time of this call.</source>
          <target state="translated">이 호출 시 MSMQ가 현재 사용자(스레드 ID)와 연결된 보안 컨텍스트를 검색합니다.</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.GetSecurityContext">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.SecurityContext" /&gt;</ph> object that contains the security context.</source>
          <target state="translated">보안 컨텍스트를 포함하는 <ph id="ph1">&lt;see cref="T:System.Messaging.SecurityContext" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.Id">
          <source>Gets the unique Message Queuing identifier of the queue.</source>
          <target state="translated">큐의 고유한 메시지 큐 식별자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Id">
          <source>A <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Id" /&gt;</ph> that represents the message identifier generated by the Message Queuing application.</source>
          <target state="translated">메시지 큐 응용 프로그램에 의해 생성된 메시지 식별자를 나타내는 <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Id" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Id">
          <source>Message Queuing sets the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Id%2A&gt;</ph> property when it creates the queue.</source>
          <target state="translated">메시지 큐는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Id%2A&gt;</ph> 속성 큐를 만듭니다.</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Id">
          <source>This property is only available for public queues.</source>
          <target state="translated">이 속성은 공개 큐에 사용할 수만 있습니다.</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Id">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Id">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Id">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Id">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Id">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Id">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Id">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Id">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Id">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Id">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Id">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Id">
          <source>The following code example displays the value of a message queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Id%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐의의 값을 표시 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Id%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.Id">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" uid="F:System.Messaging.MessageQueue.InfiniteQueueSize">
          <source>Specifies that no size restriction exists for a queue.</source>
          <target state="translated">큐에 크기 제한이 없도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Messaging.MessageQueue.InfiniteQueueSize">
          <source>This member is frequently used when setting <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MaximumJournalSize%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MaximumQueueSize%2A&gt;</ph>.</source>
          <target state="translated">이 멤버는 설정할 때 사용할 자주 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MaximumJournalSize%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MaximumQueueSize%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Messaging.MessageQueue.InfiniteQueueSize">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteQueueSize&gt;</ph> member.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteQueueSize&gt;</ph> 멤버입니다.</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" uid="F:System.Messaging.MessageQueue.InfiniteTimeout">
          <source>Specifies that no time-out exists for methods that peek or receive messages.</source>
          <target state="translated">메시지를 피킹하거나 받는 메서드에 시간 제한이 없도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Messaging.MessageQueue.InfiniteTimeout">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> supports two types of message retrieval: synchronous and asynchronous.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 두 가지 유형의 메시지 검색 지원: 동기 및 비동기입니다.</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Messaging.MessageQueue.InfiniteTimeout">
          <source>The synchronous methods, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, cause the process thread to wait a specified time interval for a new message to arrive in the queue.</source>
          <target state="translated">동기 메서드 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, 프로세스 스레드가 지정된 된 시간 간격을 큐에 도착할 때까지 새 메시지에 대해 기다려야 합니다.</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Messaging.MessageQueue.InfiniteTimeout">
          <source>If the specified time interval is <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph>, the process thread remains blocked until a new message is available.</source>
          <target state="translated">지정 된 시간 간격이 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph>, 새 메시지가 있을 때까지 프로세스 스레드가 차단 됩니다.</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Messaging.MessageQueue.InfiniteTimeout">
          <source>On the other hand, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> (the asynchronous methods), allow the main application tasks to continue in a separate thread until a message arrives in the queue.</source>
          <target state="translated">반면에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> (비동기 메서드), 주 응용 프로그램 작업을 큐에 메시지가 도착할 때까지 별도의 스레드에서 계속 허용 합니다.</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Messaging.MessageQueue.InfiniteTimeout">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> member.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> 멤버입니다.</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.Label">
          <source>Gets or sets the queue description.</source>
          <target state="translated">큐 설명을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Label">
          <source>The label for the message queue.</source>
          <target state="translated">메시지 큐의 레이블입니다.</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Label">
          <source>The default is an empty string ("").</source>
          <target state="translated">기본값은 빈 문자열("")입니다.</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Label">
          <source>The maximum length of a message queue label is 124 characters.</source>
          <target state="translated">메시지 큐 레이블의 최대 길이 124 자입니다.</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Label">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> property does not need to be unique across all queues.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> 속성이 모든 큐에서 고유할 필요는 없습니다.</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Label">
          <source>However, if multiple queues share the same <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph>, you cannot use the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph> method to broadcast a message to all of them.</source>
          <target state="translated">그러나 동일한 여러 큐를 공유 하는 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph>를 사용할 수 없습니다는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph> 모든 사람이 메시지를 브로드캐스팅하려면 메서드.</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Label">
          <source>If you use the label syntax for the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property when you send the message, an exception will be thrown if the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> is not unique.</source>
          <target state="translated">에 대 한 레이블 구문을 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 메시지를 보낼 때 속성에는 예외가 발생 하는 경우는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> 고유 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Label">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Label">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Label">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Label">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Label">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Label">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Label">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Label">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Label">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Label">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Label">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Label">
          <source>The following code example gets and sets the value of a message queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐의 값을 설정 가져오고 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.Label">
          <source>The label was set to an invalid value.</source>
          <target state="translated">레이블이 잘못된 값으로 설정되었습니다.</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.Label">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.LastModifyTime">
          <source>Gets the last time the properties of a queue were modified.</source>
          <target state="translated">큐의 속성이 마지막으로 수정된 시간을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.LastModifyTime">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> that indicates when the queue properties were last modified.</source>
          <target state="translated">큐의 속성이 마지막으로 수정된 시간을 알려주는 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.LastModifyTime">
          <source>The last modification time includes when the queue was created and any <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> property that modifies the Message Queuing queue, such as <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BasePriority%2A&gt;</ph>.</source>
          <target state="translated">큐를 만들 때 마지막으로 수정한 시간 포함 및 모든 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 와 같은 메시지 큐 큐를 수정 하는 속성 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BasePriority%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.LastModifyTime">
          <source>The value of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.LastModifyTime%2A&gt;</ph> property represents the system time of the local computer.</source>
          <target state="translated">값은 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.LastModifyTime%2A&gt;</ph> 속성은 로컬 컴퓨터의 시스템 시간을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.LastModifyTime">
          <source>You must call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Refresh%2A&gt;</ph> before getting the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.LastModifyTime%2A&gt;</ph> property; otherwise, the modification time associated with this <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> might not be current.</source>
          <target state="translated">호출 해야 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Refresh%2A&gt;</ph> 을 가져오기 전에 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.LastModifyTime%2A&gt;</ph> 속성; 연결 된이 수정 시간, <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 최신 상태가 아닐 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.LastModifyTime">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.LastModifyTime">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.LastModifyTime">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.LastModifyTime">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.LastModifyTime">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.LastModifyTime">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.LastModifyTime">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.LastModifyTime">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.LastModifyTime">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.LastModifyTime">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.LastModifyTime">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.LastModifyTime">
          <source>The following code example displays the value of a message queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.LastModifyTime%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐의의 값을 표시 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.LastModifyTime%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.LastModifyTime">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Gets or sets the name of the computer where the Message Queuing queue is located.</source>
          <target state="translated">메시지 큐가 있는 컴퓨터의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>The name of the computer where the queue is located.</source>
          <target state="translated">큐가 있는 컴퓨터의 이름입니다.</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>The Message Queuing default is ".", the local computer.</source>
          <target state="translated">메시지 큐의 기본값은 "."이며, 이는 로컬 컴퓨터를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> is an integral component of the friendly name syntax of the queue <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> 큐의 약식 이름 구문이의 필수 구성 요소인 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>The following table shows the syntax you should use for a queue of a specified type when you want to identify the queue path using its friendly name.</source>
          <target state="translated">다음 표에서 해당 이름을 사용 하 여 큐 경로 식별 하려는 경우 형식이 지정 된 큐에 대 한 사용 해야 하는 구문을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Queue type</source>
          <target state="translated">큐 유형</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Public queue</source>
          <target state="translated">공개 큐</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Private queue</source>
          <target state="translated">개인 큐</target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Journal queue</source>
          <target state="translated">저널 큐</target>       </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Machine journal queue</source>
          <target state="translated">컴퓨터 저널 큐</target>       </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Machine dead-letter queue</source>
          <target state="translated">컴퓨터 배달 못 한 편지 큐</target>       </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Machine transactional dead-letter queue</source>
          <target state="translated">컴퓨터 트랜잭션 배달 못 한 편지 큐</target>       </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Use "." for the local computer when specifying the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph>.</source>
          <target state="translated">사용 하 여 "."를 지정할 때 로컬 컴퓨터에 대 한는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Only the computer name is recognized for this property, for example, <ph id="ph1">`Server0`</ph>.</source>
          <target state="translated">컴퓨터 이름에만이 속성에 대 한 예를 들어 인식 <ph id="ph1">`Server0`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> property does not support the IP address format.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> 속성 IP 주소 형식은 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>If you define the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> in terms of the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph>, the application throws an exception when working offline because the domain controller is required for path translation.</source>
          <target state="translated">정의 하는 경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 의 측면에서 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph>, 도메인 컨트롤러에 대 한 경로 변환 필요 하기 때문에 오프 라인으로 작업 하는 경우 응용 프로그램 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Therefore, you must use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> for the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> syntax when working offline.</source>
          <target state="translated">따라서 사용 해야 합니다는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> 에 대 한는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 구문 오프 라인으로 작업 하는 경우.</target>       </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> properties are related.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> 속성은 서로 관련 됩니다.</target>       </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Changing the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> property causes the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property to change.</source>
          <target state="translated">변경 된 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> 속성 원인을 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 변경할 속성입니다.</target>       </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>It is built from the new <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph>.</source>
          <target state="translated">새 구성 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Changing the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> (for example, to use the format name syntax) resets the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> properties to refer to the new queue.</source>
          <target state="translated">변경 된 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> (예: 형식 이름 구문 사용) 다시 설정는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> 새 큐를 참조 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>If the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> property is empty, the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> is set to the Journal queue of the computer you specify.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> 속성이 비어는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 지정한 컴퓨터의 업무 일지 큐에 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>The following code example gets and sets the value of a message queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐의 값을 설정 가져오고 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>The name of the computer is not valid, possibly because the syntax is incorrect.</source>
          <target state="translated">컴퓨터 이름이 잘못되었습니다(예: 구문이 잘못된 경우).</target>       </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.MachineName">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>Gets or sets the maximum size of the journal queue.</source>
          <target state="translated">업무 일지 큐의 최대 크기를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>The maximum size, in kilobytes, of the journal queue.</source>
          <target state="translated">업무 일지 큐의 최대 크기입니다(단위: KB).</target>       </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>The Message Queuing default specifies that no limit exists.</source>
          <target state="translated">메시지 큐에서는 기본적으로 제한이 없도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MaximumJournalSize%2A&gt;</ph> provides access to the Message Queuing journal storage limit.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MaximumJournalSize%2A&gt;</ph> 저널 메시지 큐 저장 용량 제한에 대 한 액세스를 제공합니다.</target>       </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>It is relevant only when <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.UseJournalQueue%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">인 경우에만 관련 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.UseJournalQueue%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>Setting this property modifies the Message Queuing queue.</source>
          <target state="translated">이 속성을 설정 하면 메시지 큐를 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>Therefore, any other <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instances are affected by the change</source>
          <target state="translated">따라서 다른 모든 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 는 변경의 영향을 받는 인스턴스</target>       </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>If you store messages in a journal or dead-letter queue, you should periodically clear the queue to remove messages that are no longer needed.</source>
          <target state="translated">업무 일지 나 배달 못 한 편지 큐에 메시지를 저장 하는 경우 주기적으로 더 이상 필요 없는 메시지를 제거 하려면 큐를 지워야 합니다.</target>       </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>Messages in such a queue count toward the message quota for the computer where the queue resides.</source>
          <target state="translated">이러한 큐에서 메시지 큐가 있는 컴퓨터에 대 한 메시지 할당량을 차지 합니다.</target>       </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>(The administrator sets the computer quota.)</source>
          <target state="translated">(관리자 컴퓨터 할당량을 설정 합니다.)</target>       </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>The following code example gets and sets the value of a message queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MaximumJournalSize%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐의 값을 설정 가져오고 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MaximumJournalSize%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>The maximum journal queue size was set to an invalid value.</source>
          <target state="translated">업무 일지 큐의 최대 크기가 잘못된 값으로 설정되었습니다.</target>       </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.MaximumJournalSize">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>Gets or sets the maximum size of the queue.</source>
          <target state="translated">큐의 최대 크기를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>The maximum size, in kilobytes, of the queue.</source>
          <target state="translated">큐의 최대 크기입니다(단위: KB).</target>       </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>The Message Queuing default specifies that no limit exists.</source>
          <target state="translated">메시지 큐에서는 기본적으로 제한이 없도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MaximumQueueSize%2A&gt;</ph> provides access to the Message Queuing message storage limit, which is separate from the computer's message quota that the administrator defines.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MaximumQueueSize%2A&gt;</ph> 는 메시지 큐 메시지 저장소 용량 한도 관리자가 정의 하는 컴퓨터의 메시지 할당량와에서 구분 됨에 대 한 액세스를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>For more information about the message quota, see <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MaximumJournalSize%2A&gt;</ph>.</source>
          <target state="translated">메시지 할당량에 대 한 자세한 내용은 참조 하십시오. <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MaximumJournalSize%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>Setting this property modifies the Message Queuing queue.</source>
          <target state="translated">이 속성을 설정 하면 메시지 큐를 수정 합니다.</target>       </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>Therefore, any other <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instances are affected by the change</source>
          <target state="translated">따라서 다른 모든 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 는 변경의 영향을 받는 인스턴스</target>       </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>If an attempt is made to exceed either the maximum queue size or the computer message quota, messages might be lost.</source>
          <target state="translated">최대 큐 크기 또는 컴퓨터 메시지 할당량을 초과 하려고 하는 경우 메시지가 손실 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>When the queue quota is reached, Message Queuing notifies the administration queue of the sending application to indicate that the queue is full, by returning a negative acknowledgment message.</source>
          <target state="translated">큐 할당량에 도달 하면 메시지 큐는 부정 승인 메시지를 반환 하 여 큐가 꽉 차면를 보내는 응용 프로그램의 관리 큐를 알립니다.</target>       </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>Message Queuing continues to send negative acknowledgments until the total size of the messages in the queue drops below the limit.</source>
          <target state="translated">메시지 큐 큐에 메시지의 총 크기 제한 아래로 떨어질 때까지 부정 승인을 보내도록 계속 합니다.</target>       </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>The following code example gets and sets the value of a message queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MaximumQueueSize%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐의 값을 설정 가져오고 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MaximumQueueSize%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>The maximum queue size contains a negative value.</source>
          <target state="translated">큐의 최대 크기에 음수 값이 포함된 경우입니다.</target>       </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.MaximumQueueSize">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>Gets or sets the property filter for receiving or peeking messages.</source>
          <target state="translated">메시지를 받거나 또는 피킹하는 데 필요한 속성 필터를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.MessagePropertyFilter" /&gt;</ph> used by the queue to filter the set of properties it receives or peeks for each message.</source>
          <target state="translated">큐가 각각의 메시지에 대해 받거나 피킹하는 속성 집합을 필터링하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessagePropertyFilter" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>This filter is a set of Boolean values restricting the message properties that the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> receives or peeks.</source>
          <target state="translated">이 필터는 메시지 속성을 제한 하는 부울 값의 집합입니다는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 받거나를 관찰 합니다.</target>       </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>When the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> receives or peeks a message from the server queue, it retrieves only those properties for which the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A&gt;</ph> value is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 를 수신 하거나 메시지를 관찰 합니다. 서버 큐에서를 해당 속성만 검색는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A&gt;</ph> 값은 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>The following shows initial property values for the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A&gt;</ph> property.</source>
          <target state="translated">다음에 대 한 초기 속성 값이 표시는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>These settings are identical to calling <ph id="ph1">&lt;xref:System.Messaging.MessagePropertyFilter.SetDefaults%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Messaging.MessagePropertyFilter&gt;</ph>.</source>
          <target state="translated">이러한 설정은 호출 동일 <ph id="ph1">&lt;xref:System.Messaging.MessagePropertyFilter.SetDefaults%2A&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Messaging.MessagePropertyFilter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>Property</source>
          <target state="translated">속성</target>       </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>Default value</source>
          <target state="translated">기본값</target>       </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>1024 bytes</source>
          <target state="translated">1024 바이트</target>       </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>255 bytes</source>
          <target state="translated">255 바이트</target>       </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>255 bytes</source>
          <target state="translated">255 바이트</target>       </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A&gt;</ph> to restrict the message properties received.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A&gt;</ph> 받은 메시지 속성을 제한할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
          <source>The filter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">필터가 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>Introduced in MSMQ 3.0.</source>
          <target state="translated">MSMQ 3.0에서 도입되었습니다.</target>       </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>Gets or sets the multicast address associated with the queue.</source>
          <target state="translated">큐에 연결된 멀티캐스트 주소를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains a valid multicast address (in the form shown below) or <ph id="ph2">&lt;see langword="null" /&gt;</ph>, which indicates that the queue is not associated with a multicast address.</source>
          <target state="translated">아래 형식으로 된 올바른 멀티캐스트 주소가 들어 있는 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>이거나, 큐가 멀티캐스트 주소에 연결되지 않았음을 나타내는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MulticastAddress%2A&gt;</ph> property is used to associate a non-transactional queue with a multicast address that can be used when sending messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MulticastAddress%2A&gt;</ph> 속성은 비트랜잭션 큐 메시지를 보낼 때 사용할 수 있는 멀티 캐스트 주소와 연결 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>You cannot associate a transactional queue with a multicast address.</source>
          <target state="translated">멀티 캐스트 주소와 트랜잭션 큐를 연결할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>When the sending application sends messages to a multicast address, Message Queuing sends a copy of the message to every queue associated with that address.</source>
          <target state="translated">해당 주소와 연결 된 모든 큐에 보내는 응용 프로그램 메시지를 보내면 멀티 캐스트 주소를, 메시지 큐 메시지의 사본을 보냅니다.</target>       </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>IP multicast addresses must be in the class D range from 224.0.0.0 to 239.255.255.255, which corresponds to setting the first four high-order bits equal to 1110.</source>
          <target state="translated">IP 멀티 캐스트 주소 224.0.0.0에서 239.255.255.255 처음 네 개의 상위 비트를 1110 설정에 해당 하는 클래스 D 범위에 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>However, only certain ranges of addresses in this range are unreserved and available for sending multicast messages.</source>
          <target state="translated">그러나 특정 범위의이 범위에는 주소는 예약 되지 않은 및 멀티 캐스트 메시지를 보내는 데 사용할 수 있는 합니다.</target>       </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>For the latest list of reserved multicast addresses, see the <bpt id="p1">[</bpt>Internet Assigned Number Authority (IANA) Internet Multicast Addresses<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=3859)</ept> Web page.</source>
          <target state="translated">예약 된 멀티 캐스트 주소 목록이 최신에 대 한 참조는 <bpt id="p1">[</bpt>번호 기관 IANA (Internet Assigned) 인터넷 멀티 캐스트 주소<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=3859)</ept> 웹 페이지입니다.</target>       </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>There are no restrictions on the port number.</source>
          <target state="translated">포트 번호에서 제한은 없습니다.</target>       </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>If several source computers are sending multicast messages and you want a specific queue to receive messages from only one source computer, each source computer must send messages to a different combination of IP address and port number.</source>
          <target state="translated">여러 소스 컴퓨터 멀티 캐스트 메시지를 보내는 경우 메시지를 받는 하나의 원본 컴퓨터에서 특정 큐 각 원본 컴퓨터 IP 주소와 포트 번호의 다른 조합에 메시지를 전송 해야 합니다.</target>       </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>To dissociate a queue from a multicast address, set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MulticastAddress%2A&gt;</ph> property to a zero-length string.</source>
          <target state="translated">멀티 캐스트 주소에서 큐를 분리 하려면 설정는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MulticastAddress%2A&gt;</ph> 속성을 빈 문자열입니다.</target>       </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>Do not set it to <ph id="ph1">`null`</ph>, as this will result in a <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph>.</source>
          <target state="translated">설정 하지 마십시오 <ph id="ph1">`null`</ph>에서 발생 하므로, 한 <ph id="ph2">&lt;xref:System.ArgumentNullException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.MulticastAddress">
          <source>MSMQ 3.0 is not installed.</source>
          <target state="translated">MSMQ 3.0이 설치되어 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.Path">
          <source>Gets or sets the queue's path.</source>
          <target state="translated">큐의 경로를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.Path">
          <source>Setting the <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph> causes the <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> to point to a new queue.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph>를 설정하면 <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 새 큐를 가리킵니다.</target>       </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>The queue that is referenced by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 큐입니다.</target>       </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>The default depends on which <ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.#ctor" /&gt;</ph> constructor you use; it is either <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is specified by the constructor's <ph id="ph3">&lt;paramref name="path" /&gt;</ph> parameter.</source>
          <target state="translated">기본값은 사용하는 <ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.#ctor" /&gt;</ph> 생성자에 따라 달라지는데, <ph id="ph2">&lt;see langword="null" /&gt;</ph>이거나 생성자의 <ph id="ph3">&lt;paramref name="path" /&gt;</ph> 매개 변수에 의해 지정됩니다.</target>       </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>The syntax for the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property depends on the type of queue it points to, as shown in the following table.</source>
          <target state="translated">에 대 한 구문에서 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 속성 유형에 따라 다릅니다 큐의 해당 지점에는 다음 표에 나와 있는 것 처럼 합니다.</target>       </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Queue type</source>
          <target state="translated">큐 유형</target>       </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Public queue</source>
          <target state="translated">공개 큐</target>       </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Private queue</source>
          <target state="translated">개인 큐</target>       </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Journal queue</source>
          <target state="translated">저널 큐</target>       </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Machine journal queue</source>
          <target state="translated">컴퓨터 저널 큐</target>       </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Machine dead-letter queue</source>
          <target state="translated">컴퓨터 배달 못 한 편지 큐</target>       </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Machine transactional dead-letter queue</source>
          <target state="translated">컴퓨터 트랜잭션 배달 못 한 편지 큐</target>       </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Use "." to represent the local computer.</source>
          <target state="translated">사용 하 여 "." 로컬 컴퓨터를 나타낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> properties are related.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> 속성은 서로 관련 됩니다.</target>       </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Changing the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> property causes the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property to change.</source>
          <target state="translated">변경 된 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> 속성 원인을 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 변경할 속성입니다.</target>       </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>It is built from the new <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph>.</source>
          <target state="translated">새 구성 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Changing the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> (for example, to use the format name syntax) resets the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> properties to refer to the new queue.</source>
          <target state="translated">변경 된 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> (예: 형식 이름 구문 사용) 다시 설정는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> 새 큐를 참조 하는 속성입니다.</target>       </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Alternatively, you can use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> to describe the queue path, as shown in the following table.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.FormatName%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> 다음 표에 나와 있는 것 처럼 큐 경로 설명 하기 위해 합니다.</target>       </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Reference</source>
          <target state="translated">참조</target>       </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Example</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Format name</source>
          <target state="translated">형식 이름</target>       </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source><ph id="ph1">`FormatName:`</ph> [ <bpt id="p1">*</bpt>format name<ept id="p1">*</ept> ]</source>
          <target state="translated"><ph id="ph1">`FormatName:`</ph> [ <bpt id="p1">*</bpt>형식 이름을<ept id="p1">*</ept> ]</target>       </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source><ph id="ph1">`FormatName:Public=`</ph> 5A5F7535-AE9A-41d4-935C-845C2AFF7112</source>
          <target state="translated"><ph id="ph1">`FormatName:Public=`</ph> 5A5F7535-AE9A-41d4-935C-845C2AFF7112</target>       </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Label</source>
          <target state="translated">레이블</target>       </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source><ph id="ph1">`Label:`</ph> [ <bpt id="p1">*</bpt>label<ept id="p1">*</ept> ]</source>
          <target state="translated"><ph id="ph1">`Label:`</ph> [ <bpt id="p1">*</bpt>레이블<ept id="p1">*</ept> ]</target>       </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source><ph id="ph1">`Label:`</ph> TheLabel</source>
          <target state="translated"><ph id="ph1">`Label:`</ph> TheLabel</target>       </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>If you use the label syntax for the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property when you send the message, an exception will be thrown if the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> is not unique.</source>
          <target state="translated">에 대 한 레이블 구문을 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 메시지를 보낼 때 속성에는 예외가 발생 하는 경우는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> 고유 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>To work offline, you must use the format name syntax, rather than the friendly name syntax in the first table.</source>
          <target state="translated">오프 라인으로 작업 하려면 첫 번째 테이블의 이름 구문이 아닌 형식 이름 구문을 사용 해야 합니다.</target>       </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Otherwise, an exception is thrown because the primary domain controller (on which Active Directory resides) is not available to resolve the path to the format name.</source>
          <target state="translated">그렇지 않으면 주 도메인 컨트롤러 (Active Directory 상주 하는) 형식 이름에 경로 확인할 수 없기 때문에 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Setting a new path closes the message queue and releases all handles.</source>
          <target state="translated">새 경로 설정 하면 메시지 큐 닫고 모든 핸들을 해제 합니다.</target>       </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>In workgroup mode you can only use private queues.</source>
          <target state="translated">작업 그룹 모드에서 개인 큐의 경우에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>You specify the path using the private queue syntax <ph id="ph1">`MachineName`</ph><ph id="ph2">\\</ph><ph id="ph3">`Private$`</ph><ph id="ph4">\\</ph><ph id="ph5">`QueueName`</ph>.</source>
          <target state="translated">개인 큐 구문을 사용 하 여 경로 지정 <ph id="ph1">`MachineName`</ph> <ph id="ph2">\\</ph> <ph id="ph3">`Private$`</ph> <ph id="ph4">\\</ph> <ph id="ph5">`QueueName`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>The following code example creates new <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> objects using various path name syntax types.</source>
          <target state="translated">다음 코드 예제에서는 새 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 다양 한 경로 이름 구문 형식을 사용 하 여 개체입니다.</target>       </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Path">
          <source>In each case, it sends a message to the queue whose path is defined in the constructor.</source>
          <target state="translated">각각의 경우에서 경로가 생성자에 정의 된 큐로 메시지를 보냅니다.</target>       </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.Path">
          <source>The path is not valid, possibly because the syntax is not valid.</source>
          <target state="translated">경로가 잘못되었습니다(예: 구문이 잘못된 경우)</target>       </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>Returns a copy of the first message in the queue without removing the message from the queue.</source>
          <target state="translated">큐에 있는 첫 번째 메시지의 복사본을 반환하지만 큐에서 메시지를 제거하지는 않습니다.</target>       </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek">
          <source>Returns without removing (peeks) the first message in the queue referenced by this <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 큐의 첫 번째 메시지를 반환하지만 제거(피킹)하지는 않습니다.</target>       </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek">
          <source>The <ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.Peek" /&gt;</ph> method is synchronous, so it blocks the current thread until a message becomes available.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.Peek" /&gt;</ph> 메서드는 동기적이므로 메시지를 사용할 수 있을 때까지 현재 스레드를 차단시킵니다.</target>       </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that represents the first message in the queue.</source>
          <target state="translated">큐에 있는 첫 번째 메시지를 나타내는 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>Use this overload to peek a queue, or to wait until a message exists in the queue.</source>
          <target state="translated">이 오버 로드를 사용 하는 큐를 피킹할 수 하거나 메시지가 큐에 있는 될 때까지 기다립니다.</target>       </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method reads, but does not remove, the first message from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드 읽지만 첫 번째 메시지 큐에서 제거 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>Therefore, repeated calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> return the same message, unless a higher priority message arrives in the queue.</source>
          <target state="translated">따라서 반복 호출을 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 우선 순위가 높은 메시지가 큐에 도착 하지 않는 한 동일한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method, on the other hand, both reads and removes the first message from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 메서드 반면에 모두를 읽는 첫 번째 메시지를 큐에서 제거 합니다.</target>       </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>Repeated calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, therefore, return different messages.</source>
          <target state="translated">반복 호출을 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, 따라서 다양 한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>Message Queuing orders messages in the queue according to priority and arrival time.</source>
          <target state="translated">메시지 큐는 우선 순위와 도착 시간에 따라 큐에 메시지를 정리 합니다.</target>       </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>A newer message is placed before an older one only if it is of a higher priority.</source>
          <target state="translated">새 메시지는 우선 순위가 높을 경우에 이전 앞에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>Use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
          <target state="translated">큐에 메시지가 도착할 때까지 대기하는 동안 현재 스레드를 차단하는 것이 허용되는 경우에만 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>를 사용합니다.</target>       </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>Because this overload does not specify a time-out, the application might wait indefinitely.</source>
          <target state="translated">이 오버 로드는 제한 시간을 지정 하지 않으므로, 응용 프로그램이 무기한 대기 합니다.</target>       </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>If you need the application processing to continue without waiting, use the asynchronous <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> method.</source>
          <target state="translated">대기하지 않고 응용 프로그램 처리를 계속하려면 비동기 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>Alternatively, you can specify a time-out for a message to arrive in the queue by using the overload of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> that specifies a time-out.</source>
          <target state="translated">또는의 오버 로드를 사용 하 여 큐에 도착 하는 메시지에 대 한 제한 시간을 지정할 수 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 하는 제한 시간을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>The following examples use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method on a queue.</source>
          <target state="translated">다음 예에서는 사용 된 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 큐에 메서드.</target>       </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>In the first example, the application waits until a message becomes available in the queue.</source>
          <target state="translated">첫 번째 예제에서 응용 프로그램 메시지 큐에서 사용할 수 있게 될 때까지 대기 합니다.</target>       </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>Note that the first example does not access the message that arrives; it merely pauses processing until a message arrives.</source>
          <target state="translated">첫 번째 예에서는; 도착 하는 메시지에 액세스 하지 않는 참고 단지 메시지가 도착할 때까지 처리 일시 중지 됩니다.</target>       </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>If a message already exists in the queue, it will return immediately.</source>
          <target state="translated">경우 메시지가 큐에 이미 있는 즉시 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>In the second example, a message that contains an application-defined <ph id="ph1">`Order`</ph> class is sent to the queue, and then peeked from the queue.</source>
          <target state="translated">두 번째 예제에서는 응용 프로그램 정의 포함 하는 메시지 <ph id="ph1">`Order`</ph> 클래스는 큐로 전송 되 고 다음 큐에서 피킹 합니다.</target>       </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the maximum time to wait for the queue to contain a message.</source>
          <target state="translated">큐가 메시지를 포함하도록 대기하는 최대 시간을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>Returns without removing (peeks) the first message in the queue referenced by this <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 큐의 첫 번째 메시지를 반환하지만 제거(피킹)하지는 않습니다.</target>       </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.Peek" /&gt;</ph> method is synchronous, so it blocks the current thread until a message becomes available or the specified time-out occurs.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.Peek" /&gt;</ph> 메서드는 동기적이므로 메시지를 사용할 수 있거나 지정된 시간이 초과될 때까지 현재 실행 스레드를 차단시킵니다.</target>       </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that represents the first message in the queue.</source>
          <target state="translated">큐에 있는 첫 번째 메시지를 나타내는 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>Use this overload to peek a queue, or to wait a specified period of time until a message exists in the queue.</source>
          <target state="translated">이 오버 로드를 사용 하 여 큐를 피킹할 수 또는 지정된 된 시간까지 메시지가 큐에 있는 동안 기다려야 합니다.</target>       </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>The method returns immediately if a message already exists in the queue.</source>
          <target state="translated">메시지가 큐에 이미 있는 경우 메서드가 즉시 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method reads, but does not remove, the first message from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드 읽지만 첫 번째 메시지 큐에서 제거 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>Therefore, repeated calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> return the same message, unless a higher priority message arrives in the queue.</source>
          <target state="translated">따라서 반복 호출을 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 우선 순위가 높은 메시지가 큐에 도착 하지 않는 한 동일한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method, on the other hand, both reads and removes the first message from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 메서드 반면에 모두를 읽는 첫 번째 메시지를 큐에서 제거 합니다.</target>       </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>Repeated calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, therefore, return different messages.</source>
          <target state="translated">반복 호출을 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>, 따라서 다양 한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>Message Queuing orders messages in the queue according to priority and arrival time.</source>
          <target state="translated">메시지 큐는 우선 순위와 도착 시간에 따라 큐에 메시지를 정리 합니다.</target>       </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>A newer message is placed before an older one only if it is of a higher priority.</source>
          <target state="translated">새 메시지는 우선 순위가 높을 경우에 이전 앞에 배치 됩니다.</target>       </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>Use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
          <target state="translated">큐에 메시지가 도착할 때까지 대기하는 동안 현재 스레드를 차단하는 것이 허용되는 경우에만 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>를 사용합니다.</target>       </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>The thread will be blocked up to the specified period of time, or indefinitely if you indicated <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph>.</source>
          <target state="translated">스레드는 지정 된 시간을 무기한으로 차단 될 다른 사람이 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>If you need the application processing to continue without waiting, use the asynchronous <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> method.</source>
          <target state="translated">대기하지 않고 응용 프로그램 처리를 계속하려면 비동기 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method with a time-out of zero to check whether the queue is empty.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드 큐가 비어 있는지 여부를 확인 하려면 0 시간 제한 사용 합니다.</target>       </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid, possibly <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is less than <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우. <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>이 <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>보다 작거나 <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>보다 클 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the maximum time to wait for the queue to contain a message.</source>
          <target state="translated">큐가 메시지를 포함하도록 대기하는 최대 시간을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Cursor" /&gt;</ph> that maintains a specific position in the message queue.</source>
          <target state="translated">메시지 큐에서 특정 위치를 유지하는 <ph id="ph1">&lt;see cref="T:System.Messaging.Cursor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.PeekAction" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.PeekAction" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>Indicates whether to peek at the current message in the queue, or the next message.</source>
          <target state="translated">이 값은 큐의 현재 메시지를 피킹할지 또는 다음 메시지를 피킹할지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>Returns without removing (peeks) the current or next message in the queue, using the specified cursor.</source>
          <target state="translated">지정된 커서를 사용하여 큐에 있는 현재 또는 다음 메시지를 제거하지 않고 반환(피킹)합니다.</target>       </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.Peek" /&gt;</ph> method is synchronous, so it blocks the current thread until a message becomes available or the specified time-out occurs.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.Peek" /&gt;</ph> 메서드는 동기적이므로 메시지를 사용할 수 있거나 지정된 시간이 초과될 때까지 현재 실행 스레드를 차단시킵니다.</target>       </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that represents a message in the queue.</source>
          <target state="translated">큐에 있는 메시지를 나타내는 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>Use this overload to peek a queue, or to wait a specified period of time until a message exists in the queue.</source>
          <target state="translated">이 오버 로드를 사용 하 여 큐를 피킹할 수 또는 지정된 된 시간까지 메시지가 큐에 있는 동안 기다려야 합니다.</target>       </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>The method returns immediately if a message already exists in the queue.</source>
          <target state="translated">메시지가 큐에 이미 있는 경우 메서드가 즉시 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method reads, but does not remove, a message from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드 읽지만 큐에서 메시지 제거 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method, on the other hand, both reads and removes a message from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 메서드 반면에 모두를 읽는 큐에서 메시지를 제거 합니다.</target>       </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>Use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
          <target state="translated">큐에 메시지가 도착할 때까지 대기하는 동안 현재 스레드를 차단하는 것이 허용되는 경우에만 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>를 사용합니다.</target>       </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>The thread is blocked up to the specified period of time, or indefinitely if you indicated <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph>.</source>
          <target state="translated">스레드는 지정 된 시간을 무기한으로 차단 하면 지정한 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>If you need the application processing to continue without waiting, use the asynchronous <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> method.</source>
          <target state="translated">대기하지 않고 응용 프로그램 처리를 계속하려면 비동기 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 메서드를 사용합니다.</target>       </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>A value other than <ph id="ph1">&lt;see langword="PeekAction.Current" /&gt;</ph> or <ph id="ph2">&lt;see langword="PeekAction.Next" /&gt;</ph> was specified for the <ph id="ph3">&lt;paramref name="action" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="action" /&gt;</ph> 매개 변수에 대해 <ph id="ph1">&lt;see langword="PeekAction.Current" /&gt;</ph> 또는 <ph id="ph2">&lt;see langword="PeekAction.Next" /&gt;</ph> 이외의 값을 지정했습니다.</target>       </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>The <ph id="ph1">&lt;paramref name="cursor" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cursor" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>Possibly <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph>이 <ph id="ph2">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>보다 클 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>Peeks a message that matches a given correlation identifier.</source>
          <target state="translated">주어진 상관 관계 식별자를 갖는 메시지를 피킹합니다.</target>       </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph> of the message to peek.</source>
          <target state="translated">피킹할 메시지의 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>Peeks the message that matches the given correlation identifier and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</source>
          <target state="translated">주어진 상관 관계 식별자를 갖는 메시지를 피킹합니다. 지정된 상관 관계 식별자가 포함된 메시지가 큐에 현재 없는 경우에는 바로 예외가 발생합니다.</target>       </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph> matches the <ph id="ph3">&lt;paramref name="correlationId" /&gt;</ph> parameter passed in.</source>
          <target state="translated">전달된 <ph id="ph3">&lt;paramref name="correlationId" /&gt;</ph> 매개 변수와 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>가 일치하는 <ph id="ph2">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>This method looks in the queue referenced by the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> for a message whose <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the specified <ph id="ph3">`correlationId`</ph> parameter.</source>
          <target state="translated">참조 하는 큐에이 메서드를 찾습니다는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 메시지에 대 한 해당 <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 지정 된 일치 <ph id="ph3">`correlationId`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>If no message is found that matches the <ph id="ph1">`correlationID`</ph> parameter, an exception is thrown.</source>
          <target state="translated">메시지가 발견 되지 일치 하는 경우는 <ph id="ph1">`correlationID`</ph> 매개 변수를 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 속성 관련된 응답, 보고서 또는 승인 메시지를 큐에 전송 된 메시지를 연결 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>Two other methods allow you to peek messages in a queue.</source>
          <target state="translated">다른 두 메서드를 사용 하면 큐에서 피킹 메시지를 합니다.</target>       </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method is used to retrieve a message by specifying its unique identifier.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> 의 고유 식별자를 지정 하 여 메시지를 검색할 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>The following code example sends and receives a message that contains an order to and from a queue.</source>
          <target state="translated">다음 코드 예제는 큐에서 주문에 포함 된 메시지 송수신 설정 합니다.</target>       </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</source>
          <target state="translated">원본 메시지가 도달 하거나이 긍정 승인을 특별히 요청 큐에서 검색 합니다.</target>       </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>The message with the specified <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> could not be found.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph>의 메시지를 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph> of the message to peek.</source>
          <target state="translated">피킹할 메시지의 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
          <target state="translated">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>Peeks the message that matches the given correlation identifier and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</source>
          <target state="translated">주어진 상관 관계 식별자를 갖는 메시지를 피킹하며, 지정된 상관 관계 식별자가 포함된 메시지를 큐에서 사용할 수 있거나 제한 시간이 만료될 때까지 대기합니다.</target>       </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph> matches the <ph id="ph3">&lt;paramref name="correlationId" /&gt;</ph> parameter passed in.</source>
          <target state="translated">전달된 <ph id="ph3">&lt;paramref name="correlationId" /&gt;</ph> 매개 변수와 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>가 일치하는 <ph id="ph2">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>This method looks in the queue referenced by the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> for a message whose <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the specified <ph id="ph3">`correlationId`</ph> parameter.</source>
          <target state="translated">참조 하는 큐에이 메서드를 찾습니다는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 메시지에 대 한 해당 <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 지정 된 일치 <ph id="ph3">`correlationId`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>If no message is found that matches the <ph id="ph1">`correlationID`</ph> parameter, and no new message arrives in the queue within the period specified by the <ph id="ph2">`timeout`</ph> parameter, an exception is thrown.</source>
          <target state="translated">메시지가 발견 되지 일치 하는 경우는 <ph id="ph1">`correlationID`</ph> 매개 변수를 새 메시지에 지정 된 기간 내에서 큐에 도착할는 <ph id="ph2">`timeout`</ph> 매개 변수를 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">`timeout`</ph> parameter does not specify the total running time for this method.</source>
          <target state="translated"><ph id="ph1">`timeout`</ph> 매개 변수는 총 실행이 메서드에 대 한 시간을 지정 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>Rather, it specifies the time to wait for a new message to arrive in the queue.</source>
          <target state="translated">새 메시지가 큐에 도착할 때까지 대기 하는 시간을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>Each time a new message arrives, this method examines the <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> of the new message to see if it matches the <ph id="ph2">`correlationId`</ph> parameter.</source>
          <target state="translated">될 때마다 새 메시지가 도착 하면이 메서드는 <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 일치 하는지 확인 하는 새 메시지는 <ph id="ph2">`correlationId`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>If not, this method starts the time-out period over and waits for another new message to arrive.</source>
          <target state="translated">그렇지 않으면이 메서드를 통해 제한 시간을 시작 하 고 다른 새 메시지가 도착할 때까지 대기 합니다.</target>       </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the <ph id="ph2">`correlationId`</ph> parameter.</source>
          <target state="translated">따라서 새 메시지 시간 제한 기간 내에 도착 하는 데 계속 것이 제한 된 시간까지 또는 해당 메시지가 도착할 때까지 무기한으로 실행을 계속 하려면이 메서드 <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 일치는 <ph id="ph2">`correlationId`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 속성 관련된 응답, 보고서 또는 승인 메시지를 큐에 전송 된 메시지를 연결 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>Two other methods allow you to peek messages in a queue.</source>
          <target state="translated">다른 두 메서드를 사용 하면 큐에서 피킹 메시지를 합니다.</target>       </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method is used to retrieve a message by specifying its unique identifier.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> 의 고유 식별자를 지정 하 여 메시지를 검색할 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%2CSystem.TimeSpan%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%2CSystem.TimeSpan%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="1864" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1865" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid, possibly <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is less than <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우. <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>이 <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>보다 작거나 <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>보다 클 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1866" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>The message with the specified <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> does not exist in the queue and did not arrive before the time-out expired.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph>가 들어 있는 메시지가 큐에 없고 제한 시간이 만료되기 전에 도착하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="1867" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>A message did not arrive before the time-out expired.</source>
          <target state="translated">제한 시간이 만료되기 전에 메시지가 도착하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="1868" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="1869" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1870" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>Returns a copy of the message that has the specified message identifier without removing the message from the queue.</source>
          <target state="translated">지정된 메시지 식별자가 포함된 메시지의 복사본을 반환하지만 큐에서 해당 메시지를 제거하지는 않습니다.</target>       </trans-unit>
        <trans-unit id="1871" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph> of the message to peek.</source>
          <target state="translated">피킹할 메시지의 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1872" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>Peeks the message whose message identifier matches the <ph id="ph1">&lt;paramref name="id" /&gt;</ph> parameter.</source>
          <target state="translated">메시지 식별자가 <ph id="ph1">&lt;paramref name="id" /&gt;</ph> 매개 변수와 일치하는 메시지를 피킹합니다.</target>       </trans-unit>
        <trans-unit id="1873" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph> property matches the <ph id="ph3">&lt;paramref name="id" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> 속성이 <ph id="ph3">&lt;paramref name="id" /&gt;</ph> 매개 변수와 일치하는 <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> to read, without removing from the queue, a message that has a known message identifier.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> 큐에서 제거 하지 않고 읽이 알려진된 메시지 식별자를 가진 메시지입니다.</target>       </trans-unit>
        <trans-unit id="1875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>The identifier of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given <ph id="ph1">`id`</ph> parameter.</source>
          <target state="translated">메시지의 식별자가 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에 메시지 큐 엔터프라이즈 전체에서 고유는 주어진 <ph id="ph1">`id`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>This overload throws an exception if the queue does not currently contain the message.</source>
          <target state="translated">이 오버 로드 큐 메시지 포함 하지 않는 경우 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="1877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>Two additional methods allow you to peek messages in a queue: <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph>.</source>
          <target state="translated">두 개의 추가 메서드를 사용 하면 메시지를 피킹할 큐에 있는: <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method returns the first message in the queue; <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> returns an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드; 큐에 있는 첫 번째 메시지를 반환 합니다. <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> 는 승인, 보고서 또는 큐로 보낸 메시지 결과로 생성 된 응용 프로그램 생성 응답 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="1891" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="id" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1892" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>No message with the specified <ph id="ph1">&lt;paramref name="id" /&gt;</ph> exists.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="id" /&gt;</ph>의 메시지가 없습니다.</target>       </trans-unit>
        <trans-unit id="1893" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekById(System.String)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1894" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph> of the message to peek.</source>
          <target state="translated">피킹할 메시지의 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1895" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
          <target state="translated">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1896" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>Peeks the message whose message identifier matches the <ph id="ph1">&lt;paramref name="id" /&gt;</ph> parameter.</source>
          <target state="translated">메시지 식별자가 <ph id="ph1">&lt;paramref name="id" /&gt;</ph> 매개 변수와 일치하는 메시지를 피킹합니다.</target>       </trans-unit>
        <trans-unit id="1897" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>Waits until the message appears in the queue or a time-out occurs.</source>
          <target state="translated">큐에 메시지가 표시되거나 제한 시간이 만료될 때까지 대기합니다.</target>       </trans-unit>
        <trans-unit id="1898" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph> property matches the <ph id="ph3">&lt;paramref name="id" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> 속성이 <ph id="ph3">&lt;paramref name="id" /&gt;</ph> 매개 변수와 일치하는 <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>Use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> to read, without removing from the queue, a message that has a known message identifier.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> 큐에서 제거 하지 않고 읽이 알려진된 메시지 식별자를 가진 메시지입니다.</target>       </trans-unit>
        <trans-unit id="1900" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>The identifier of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given <ph id="ph1">`id`</ph> parameter.</source>
          <target state="translated">메시지의 식별자가 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에 메시지 큐 엔터프라이즈 전체에서 고유는 주어진 <ph id="ph1">`id`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>This overload throws an exception if the queue does not currently contain the message and a new message does not arrive before the time-out occurs.</source>
          <target state="translated">이 오버 로드 큐 메시지 포함 하지 않는 경우 제한 시간이 발생 하기 전에 새 메시지가 도착 하지 않으면 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="1902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">`timeout`</ph> parameter does not specify the total running time for this method.</source>
          <target state="translated"><ph id="ph1">`timeout`</ph> 매개 변수는 총 실행이 메서드에 대 한 시간을 지정 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="1903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>Rather, it specifies the time to wait for a new message to arrive in the queue.</source>
          <target state="translated">새 메시지가 큐에 도착할 때까지 대기 하는 시간을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="1904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>Each time a new message arrives, this method examines the <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> of the new message to see if it matches the <ph id="ph2">`id`</ph> parameter.</source>
          <target state="translated">될 때마다 새 메시지가 도착 하면이 메서드는 <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> 일치 하는지 확인 하는 새 메시지는 <ph id="ph2">`id`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>If not, this method starts the time-out period over and waits for another new message to arrive.</source>
          <target state="translated">그렇지 않으면이 메서드를 통해 제한 시간을 시작 하 고 다른 새 메시지가 도착할 때까지 대기 합니다.</target>       </trans-unit>
        <trans-unit id="1906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> matches the <ph id="ph2">`id`</ph> parameter.</source>
          <target state="translated">따라서 새 메시지 시간 제한 기간 내에 도착 하는 데 계속 것이 제한 된 시간까지 또는 해당 메시지가 도착할 때까지 무기한으로 실행을 계속 하려면이 메서드 <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> 일치는 <ph id="ph2">`id`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>Two additional methods allow you to peek messages in a queue: <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph>.</source>
          <target state="translated">두 개의 추가 메서드를 사용 하면 메시지를 피킹할 큐에 있는: <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="1908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method returns the first message in the queue; <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> returns an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드; 큐에 있는 첫 번째 메시지를 반환 합니다. <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> 는 승인, 보고서 또는 큐로 보낸 메시지 결과로 생성 된 응용 프로그램 생성 응답 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="1909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%2CSystem.TimeSpan%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%2CSystem.TimeSpan%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="1921" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;paramref name="id" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="1922" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid, possibly <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is less than <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우. <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>이 <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>보다 작거나 <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>보다 클 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1923" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>The message with the specified <ph id="ph1">&lt;paramref name="id" /&gt;</ph> does not exist in the queue and did not arrive before the period specified by the <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> parameter expired.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="id" /&gt;</ph>가 들어 있는 메시지가 큐에 없고 <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> 매개 변수가 지정한 기간이 만료되기 전에 메시지가 도착하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="1924" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1925" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>Introduced in MSMQ 3.0.</source>
          <target state="translated">MSMQ 3.0에서 도입되었습니다.</target>       </trans-unit>
        <trans-unit id="1926" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>Peeks at a specific message from the queue.</source>
          <target state="translated">큐의 특정 메시지를 피킹합니다.</target>       </trans-unit>
        <trans-unit id="1927" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>The message can be specified by a lookup identifier or by its position at the front or end of the queue.</source>
          <target state="translated">메시지는 조회 식별자로 지정하거나 큐의 앞이나 뒤와 같은 위치로 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1928" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.LookupId" /&gt;</ph> of the message to peek at.</source>
          <target state="translated">피킹할 메시지의 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.LookupId" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1929" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>Introduced in MSMQ 3.0.</source>
          <target state="translated">MSMQ 3.0에서 도입되었습니다.</target>       </trans-unit>
        <trans-unit id="1930" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>Peeks at the message that matches the given lookup identifier from a non-transactional queue.</source>
          <target state="translated">비트랜잭션 큐에서 지정된 조회 식별자를 갖는 메시지를 피킹합니다.</target>       </trans-unit>
        <trans-unit id="1931" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.LookupId" /&gt;</ph> property matches the <ph id="ph3">&lt;paramref name="lookupId" /&gt;</ph> parameter passed in.</source>
          <target state="translated">전달된 <ph id="ph3">&lt;paramref name="lookupId" /&gt;</ph> 매개 변수와 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> 속성이 일치하는 <ph id="ph2">&lt;see cref="P:System.Messaging.Message.LookupId" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="1932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>Use this method to read a message with a known lookup identifier without removing it from the queue.</source>
          <target state="translated">이 메서드를 사용 하 여 큐에서 제거 하지 않고 알려진된 조회 식별자를 가진 메시지를 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>This method throws an exception immediately if the message is not in the queue.</source>
          <target state="translated">이 메서드는 메시지 큐에 없는 경우 예외가 즉시 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="1934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.LookupId%2A&gt;</ph> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given <ph id="ph2">`lookupId`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message.LookupId%2A&gt;</ph> 메시지의 속성은 큐에 고유한 해당 메시지가 있는 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에는 주어진 <ph id="ph2">`lookupId`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>To read a message with a specified lookup identifier and remove it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A&gt;</ph> method.</source>
          <target state="translated">지정한 lookup 식별자와 메시지를 읽고 큐에서 제거를 사용 하 여는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1947" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>MSMQ 3.0 is not installed.</source>
          <target state="translated">MSMQ 3.0이 설치되어 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="1948" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>The message with the specified <ph id="ph1">&lt;paramref name="lookupId" /&gt;</ph> could not be found.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="lookupId" /&gt;</ph>의 메시지를 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1949" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1950" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageLookupAction" /&gt;</ph> values, specifying how the message is read in the queue.</source>
          <target state="translated">큐에서 메시지를 읽는 방법을 지정하는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageLookupAction" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="1951" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>Specify one of the following:</source>
          <target state="translated">다음 중 하나를 지정합니다.</target>       </trans-unit>
        <trans-unit id="1952" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source><ph id="ph1">&lt;see langword="MessageLookupAction.Current" /&gt;</ph>: Peeks at the message specified by <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="MessageLookupAction.Current" /&gt;</ph>: <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept>로 지정된 메시지를 피킹합니다.</target>       </trans-unit>
        <trans-unit id="1953" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source><ph id="ph1">&lt;see langword="MessageLookupAction.Next" /&gt;</ph>: Peeks at the message following the message specified by <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="MessageLookupAction.Next" /&gt;</ph>: <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept>로 지정된 메시지의 뒤에 있는 메시지를 피킹합니다.</target>       </trans-unit>
        <trans-unit id="1954" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source><ph id="ph1">&lt;see langword="MessageLookupAction.Previous" /&gt;</ph>: Peeks at the message preceding the message specified by <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="MessageLookupAction.Previous" /&gt;</ph>: <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept>로 지정된 메시지의 앞에 있는 메시지를 피킹합니다.</target>       </trans-unit>
        <trans-unit id="1955" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source><ph id="ph1">&lt;see langword="MessageLookupAction.First" /&gt;</ph>: Peeks at the first message in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="MessageLookupAction.First" /&gt;</ph>: 큐에 있는 첫 번째 메시지를 피킹합니다.</target>       </trans-unit>
        <trans-unit id="1956" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept> parameter must be set to 0.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept> 매개 변수를 0으로 설정해야 합니다.</target>       </trans-unit>
        <trans-unit id="1957" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source><ph id="ph1">&lt;see langword="MessageLookupAction.Last" /&gt;</ph>: Peeks at the last message in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="MessageLookupAction.Last" /&gt;</ph>: 큐에 있는 마지막 메시지를 피킹합니다.</target>       </trans-unit>
        <trans-unit id="1958" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept> parameter must be set to 0.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept> 매개 변수를 0으로 설정해야 합니다.</target>       </trans-unit>
        <trans-unit id="1959" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.LookupId" /&gt;</ph> of the message to peek at, or 0.</source>
          <target state="translated">0에서 피킹할 메시지의 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.LookupId" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1960" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>0 is used when accessing the first or last message in the queue.</source>
          <target state="translated">0은 큐에 있는 첫 번째 또는 마지막 메시지에 액세스할 때 사용됩니다.</target>       </trans-unit>
        <trans-unit id="1961" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>Introduced in MSMQ 3.0.</source>
          <target state="translated">MSMQ 3.0에서 도입되었습니다.</target>       </trans-unit>
        <trans-unit id="1962" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>Peeks at a specific message from the queue.</source>
          <target state="translated">큐의 특정 메시지를 피킹합니다.</target>       </trans-unit>
        <trans-unit id="1963" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>The message can be specified by a lookup identifier or by its position at the front or end of the queue.</source>
          <target state="translated">메시지는 조회 식별자로 지정하거나 큐의 앞이나 뒤와 같은 위치로 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1964" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> specified by the <ph id="ph2">&lt;paramref name="action" /&gt;</ph> and <ph id="ph3">&lt;paramref name="lookupId" /&gt;</ph> parameters passed in.</source>
          <target state="translated">전달된 <ph id="ph2">&lt;paramref name="action" /&gt;</ph> 및 <ph id="ph3">&lt;paramref name="lookupId" /&gt;</ph> 매개 변수로 지정된 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="1965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>Use this method to read a message with a known lookup identifier without removing it from the queue.</source>
          <target state="translated">이 메서드를 사용 하 여 큐에서 제거 하지 않고 알려진된 조회 식별자를 가진 메시지를 읽을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="1966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>This method throws an exception immediately if the message is not in the queue.</source>
          <target state="translated">이 메서드는 메시지 큐에 없는 경우 예외가 즉시 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="1967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.LookupId%2A&gt;</ph> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given <ph id="ph2">`lookupId`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message.LookupId%2A&gt;</ph> 메시지의 속성은 큐에 고유한 해당 메시지가 있는 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에는 주어진 <ph id="ph2">`lookupId`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="1968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>To read a message with a specified identifier and remove it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 지정 된 식별자를 갖는 메시지를 큐에서 제거할는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="1969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="1971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="1972" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="1973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="1977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="1978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="1979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="1980" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>MSMQ 3.0 is not installed.</source>
          <target state="translated">MSMQ 3.0이 설치되어 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="1981" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>The message with the specified <ph id="ph1">&lt;paramref name="lookupId" /&gt;</ph> could not be found.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="lookupId" /&gt;</ph>의 메시지를 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="1982" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="1983" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)">
          <source>The <ph id="ph1">&lt;paramref name="action" /&gt;</ph> parameter is not one of the <ph id="ph2">&lt;see cref="T:System.Messaging.MessageLookupAction" /&gt;</ph> members.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="action" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="T:System.Messaging.MessageLookupAction" /&gt;</ph> 멤버 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="1984" translate="yes" xml:space="preserve" uid="E:System.Messaging.MessageQueue.PeekCompleted">
          <source>Occurs when a message is read without being removed from the queue.</source>
          <target state="translated">큐에서 메시지를 제거하지 않고 메시지를 읽는 경우에 발생합니다.</target>       </trans-unit>
        <trans-unit id="1985" translate="yes" xml:space="preserve" uid="E:System.Messaging.MessageQueue.PeekCompleted">
          <source>This is a result of the asynchronous operation, <ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.BeginPeek" /&gt;</ph>.</source>
          <target state="translated">이는 비동기 작업인 <ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.BeginPeek" /&gt;</ph>의 결과입니다.</target>       </trans-unit>
        <trans-unit id="1986" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Messaging.MessageQueue.PeekCompleted">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> is used in asynchronous processing to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event when a message is available in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 비동기 처리에서 발생 하는 데 사용 되는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트 메시지가 큐에서 사용할 수 있는 때입니다.</target>       </trans-unit>
        <trans-unit id="1987" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Messaging.MessageQueue.PeekCompleted">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> is used to complete the operation initiated by a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> and peek the message when the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29&gt;</ph> 호출 하 여 시작 된 작업을 완료 하는 데는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 및 메시지 피킹 때는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="1988" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Messaging.MessageQueue.PeekCompleted">
          <source>When you create a <ph id="ph1">&lt;xref:System.Messaging.PeekCompletedEventHandler&gt;</ph> delegate, you identify the method that will handle the event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.PeekCompletedEventHandler&gt;</ph> 대리자를 만들 때, 이벤트를 처리할 메서드를 식별합니다.</target>       </trans-unit>
        <trans-unit id="1989" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Messaging.MessageQueue.PeekCompleted">
          <source>To associate the event with your event handler, add an instance of the delegate to the event.</source>
          <target state="translated">이벤트를 이벤트 처리기와 연결하려면 대리자의 인스턴스를 해당 이벤트에 추가합니다.</target>       </trans-unit>
        <trans-unit id="1990" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Messaging.MessageQueue.PeekCompleted">
          <source>The event handler is called whenever the event occurs, unless you remove the delegate.</source>
          <target state="translated">대리자를 제거하지 않는 경우 이벤트가 발생할 때마다 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="1991" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Messaging.MessageQueue.PeekCompleted">
          <source>For more information about event handler delegates, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트 처리기 대리자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="1992" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Messaging.MessageQueue.PeekCompleted">
          <source>The following code example creates an event handler named <ph id="ph1">`MyPeekCompleted`</ph>, attaches it to the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event handler delegate, and calls <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> to initiate an asynchronous peek operation on the queue that is located at the path ".\myQueue".</source>
          <target state="translated">다음 코드 예제에서는 라는 이벤트 처리기를 만들고 <ph id="ph1">`MyPeekCompleted`</ph>에 연결는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트 처리기 대리자 및 호출 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 경로에 있는 큐에서 비동기 작업을 시작 하려면 ". \myQueue"입니다.</target>       </trans-unit>
        <trans-unit id="1993" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Messaging.MessageQueue.PeekCompleted">
          <source>When a <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event is raised, the example peeks the message and writes its body to the screen.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트가 발생 하면이 예에서는 메시지를 관찰 합니다. 한 화면으로 해당 본문을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="1994" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Messaging.MessageQueue.PeekCompleted">
          <source>The example then calls <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> again to initiate a new asynchronous peek operation</source>
          <target state="translated">이 예에서는 다음 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 다시 새 비동기 작업을 시작 하려면</target>       </trans-unit>
        <trans-unit id="1995" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Purge">
          <source>Deletes all the messages contained in the queue.</source>
          <target state="translated">큐에 포함된 모든 메시지를 삭제합니다.</target>       </trans-unit>
        <trans-unit id="1996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Purge">
          <source>Purging the queue causes Message Queuing to set the queue modification flag, which affects the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.LastModifyTime%2A&gt;</ph> property.</source>
          <target state="translated">큐를 제거로 인해 메시지 큐에 영향을 주는 큐 수정 플래그를 설정 하는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.LastModifyTime%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="1997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Purge">
          <source>Messages that are purged from the queue are lost; they are not sent to the dead-letter queue or the journal queue.</source>
          <target state="translated">메시지 큐에서 제거 하는 손실 됩니다. 배달 못 한 편지 큐 또는 저널 큐에 전송 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="1998" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Purge">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="1999" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Purge">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2000" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Purge">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Purge">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Purge">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Purge">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Purge">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Purge">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Purge">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Purge">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Purge">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Purge">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Purge%2A&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Purge%2A&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="2010" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Purge">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2011" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>Gets or sets the friendly name that identifies the queue.</source>
          <target state="translated">큐를 식별하는 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="2012" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>The name that identifies the queue referenced by this <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 큐를 식별하는 이름입니다.</target>       </trans-unit>
        <trans-unit id="2013" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>The value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="2014" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>You can combine the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> to create a friendly <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> name for the queue.</source>
          <target state="translated">결합할 수는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> 친숙 한 만들려는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 큐에 대 한 이름입니다.</target>       </trans-unit>
        <trans-unit id="2015" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>The syntax for the friendly name variation of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property depends on the type of queue, as shown in the following table.</source>
          <target state="translated">이름 변형에 대 한 구문에서 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 다음 표에 나와 있는 것 처럼 속성 큐의 형식에 따라 다릅니다.</target>       </trans-unit>
        <trans-unit id="2016" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>Queue type</source>
          <target state="translated">큐 유형</target>       </trans-unit>
        <trans-unit id="2017" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="2018" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>Public queue</source>
          <target state="translated">공개 큐</target>       </trans-unit>
        <trans-unit id="2019" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>Private queue</source>
          <target state="translated">개인 큐</target>       </trans-unit>
        <trans-unit id="2020" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>Journal queue</source>
          <target state="translated">저널 큐</target>       </trans-unit>
        <trans-unit id="2021" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>Use "." to represent the local computer.</source>
          <target state="translated">사용 하 여 "." 로컬 컴퓨터를 나타낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2022" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>Changing the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> property affects the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property.</source>
          <target state="translated">변경 된 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> 속성에 영향을 미칩니다는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="2023" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>If you set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> without setting the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> property, the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property becomes .<ph id="ph4">\\</ph><ph id="ph5">`QueueName`</ph>.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> 설정 하지 않고는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MachineName%2A&gt;</ph> 속성에는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 속성은.<ph id="ph4">\\</ph> <ph id="ph5">`QueueName`</ph>.</target>       </trans-unit>
        <trans-unit id="2024" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> becomes <ph id="ph2">`MachineName`</ph><ph id="ph3">\\</ph><ph id="ph4">`QueueName`</ph>.</source>
          <target state="translated">그렇지 않은 경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 됩니다 <ph id="ph2">`MachineName`</ph> <ph id="ph3">\\</ph> <ph id="ph4">`QueueName`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2025" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2026" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2027" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2028" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2029" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2030" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2031" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2032" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2033" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2034" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2035" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2036" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>The following code example gets and sets the value of a message queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐의 값을 설정 가져오고 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.QueueName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="2037" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.QueueName">
          <source>The queue name is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">큐 이름이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2038" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.ReadHandle">
          <source>Gets the native handle used to read messages from the message queue.</source>
          <target state="translated">메시지 큐에서 메시지를 읽는 데 사용되는 기본 핸들을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="2039" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.ReadHandle">
          <source>A handle to the native queue object that you use for peeking and receiving messages from the queue.</source>
          <target state="translated">큐에서 메시지를 피킹하거나 받는 데 사용하는 네이티브 큐 개체에 대한 핸들입니다.</target>       </trans-unit>
        <trans-unit id="2040" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.ReadHandle">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReadHandle%2A&gt;</ph> provides a native Windows handle to the message queue object that is used for peeking and receiving messages from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReadHandle%2A&gt;</ph> 관찰 하 고 큐에서 메시지 수신에 사용 되는 메시지 큐 개체에 대 한 기본 창 핸들을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="2041" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.ReadHandle">
          <source>If you change the path of the queue, the handle is closed and reopened with a new value.</source>
          <target state="translated">큐의 경로 변경 하면 핸들을 닫고 다시 새 값으로.</target>       </trans-unit>
        <trans-unit id="2042" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.ReadHandle">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2043" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.ReadHandle">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2044" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.ReadHandle">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2045" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.ReadHandle">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2046" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.ReadHandle">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2047" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.ReadHandle">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2048" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.ReadHandle">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2049" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.ReadHandle">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2050" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.ReadHandle">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2051" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.ReadHandle">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2052" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.ReadHandle">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2053" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.ReadHandle">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2054" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueue">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2055" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>Receives the first message in the queue, removing it from the queue.</source>
          <target state="translated">큐에 있는 첫 번째 메시지를 받고, 큐에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="2056" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive">
          <source>Receives the first message available in the queue referenced by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 큐에서 사용할 수 있는 첫 번째 메시지를 받습니다.</target>       </trans-unit>
        <trans-unit id="2057" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive">
          <source>This call is synchronous, and blocks the current thread of execution until a message is available.</source>
          <target state="translated">이 호출은 동기적이므로 메시지를 사용할 수 있을 때까지 현재 실행 스레드를 중단합니다.</target>       </trans-unit>
        <trans-unit id="2058" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that references the first message available in the queue.</source>
          <target state="translated">큐에서 사용할 수 있는 첫 번째 메시지를 참조하는 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive">
          <source>Use this overload to receive a message from a queue, or wait until there are messages in the queue.</source>
          <target state="translated">이 오버 로드를 사용 하 여 큐에서 메시지를 받거나 큐에 메시지가 도착할 때까지 대기 합니다.</target>       </trans-unit>
        <trans-unit id="2060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method allows for the synchronous reading of a message, thereby removing it from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐에서 제거할 동기적으로 메시지를 읽고에 대 한 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="2061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive">
          <source>Subsequent calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> will return the messages that follow in the queue, or new, higher priority messages.</source>
          <target state="translated">에 대 한 후속 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 있는 높은 우선 순위의 메시지가 새로운, 또는 큐에서 다음 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive">
          <source>To read the first message in a queue without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 큐의 첫 번째 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드는 항상 반환 첫 번째 메시지는 큐에서 우선 순위가 높은 메시지가 큐에 도착 하지 않는 한 메서드에 대 한 후속 호출 동일한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive">
          <source>Use a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
          <target state="translated">에 대 한 호출을 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 것은 현재 스레드를 메시지가 큐에 도착 하기를 기다리는 동안 차단 적합 합니다.</target>       </trans-unit>
        <trans-unit id="2065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive">
          <source>Because this overload of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method specifies an infinite time-out, the application might wait indefinitely.</source>
          <target state="translated">이 오버 로드 때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 메서드 시간 제한이 없음을 지정, 응용 프로그램이 무기한 대기 합니다.</target>       </trans-unit>
        <trans-unit id="2066" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive">
          <source>If the application processing should continue without waiting for the message, consider using the asynchronous method, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>.</source>
          <target state="translated">비동기 메서드를 사용 하 여 응용 프로그램 처리를 메시지를 기다리지 않고 계속, 고려 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive">
          <source>The following code example receives a message from a queue and outputs information about that message to the screen.</source>
          <target state="translated">다음 코드 예제에서는 큐에서 메시지를 받은 및 화면으로 해당 메시지에 대 한 정보를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="2079" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2080" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> 개체</target>       </trans-unit>
        <trans-unit id="2081" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>Receives the first message available in the transactional queue referenced by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 트랜잭션 큐에서 사용할 수 있는 첫 번째 메시지를 받습니다.</target>       </trans-unit>
        <trans-unit id="2082" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>This call is synchronous, and blocks the current thread of execution until a message is available.</source>
          <target state="translated">이 호출은 동기적이므로 메시지를 사용할 수 있을 때까지 현재 실행 스레드를 중단합니다.</target>       </trans-unit>
        <trans-unit id="2083" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that references the first message available in the queue.</source>
          <target state="translated">큐에서 사용할 수 있는 첫 번째 메시지를 참조하는 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>Use this overload to receive a message from a transactional queue using the internal transaction context defined by the <ph id="ph1">`transaction`</ph> parameter, or wait until there are messages in the queue.</source>
          <target state="translated">이 오버 로드를 사용 하 여 정의 된 내부 트랜잭션 컨텍스트를 사용 하 여 트랜잭션 큐에서 메시지를 수신 하기는 <ph id="ph1">`transaction`</ph> 매개 변수 또는 큐에 메시지가 도착할 때까지 대기 합니다.</target>       </trans-unit>
        <trans-unit id="2085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method allows for the synchronous reading of a message, thereby removing it from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐에서 제거할 동기적으로 메시지를 읽고에 대 한 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="2086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>Subsequent calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> will return the messages that follow in the queue.</source>
          <target state="translated">에 대 한 후속 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐에 있는 다음 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
          <target state="translated">트랜잭션 큐에서이 메서드는, 때문에 받은 메시지가 반환 됩니다 큐에 트랜잭션이 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="2088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
          <target state="translated">메시지는 영구적으로 제거 되지 큐에서 트랜잭션이 커밋될 때까지 합니다.</target>       </trans-unit>
        <trans-unit id="2089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>To read the first message in a queue without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 큐의 첫 번째 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드는 항상 반환 첫 번째 메시지는 큐에서 우선 순위가 높은 메시지가 큐에 도착 하지 않는 한 메서드에 대 한 후속 호출 동일한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>.</source>
          <target state="translated">에 대 한 호출에서 반환 된 메시지와 관련 된 트랜잭션 컨텍스트가 없는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back by a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 에서는 큐의 메시지를 제거 하지 않으며, 호출 하 여 롤백할 수 <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>Use a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
          <target state="translated">에 대 한 호출을 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 것은 현재 스레드를 메시지가 큐에 도착 하기를 기다리는 동안 차단 적합 합니다.</target>       </trans-unit>
        <trans-unit id="2094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>Because this overload of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method specifies an infinite time-out, the application might wait indefinitely.</source>
          <target state="translated">이 오버 로드 때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 메서드 시간 제한이 없음을 지정, 응용 프로그램이 무기한 대기 합니다.</target>       </trans-unit>
        <trans-unit id="2095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>If the application processing should continue without waiting for the message, consider using the asynchronous method, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>.</source>
          <target state="translated">비동기 메서드를 사용 하 여 응용 프로그램 처리를 메시지를 기다리지 않고 계속, 고려 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>The following code example connects to a transactional queue on the local computer and sends a message to the queue.</source>
          <target state="translated">다음 코드 예제에서는 로컬 컴퓨터에는 트랜잭션 큐에 연결 하 고 큐에 메시지를 보냅니다.</target>       </trans-unit>
        <trans-unit id="2108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>It then receives the message that contains an order.</source>
          <target state="translated">그런 다음 주문이 포함 된 메시지를 받습니다.</target>       </trans-unit>
        <trans-unit id="2109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>If it encounters a non-transactional queue, it will throw and exception and rollback the transaction.</source>
          <target state="translated">Throw 비트랜잭션 큐를 발생 하는 경우 예외 및 트랜잭션 롤백합니다.</target>       </trans-unit>
        <trans-unit id="2110" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2111" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2112" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>The queue is non-transactional.</source>
          <target state="translated">비트랜잭션 큐입니다.</target>       </trans-unit>
        <trans-unit id="2113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2114" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> values, describing the type of transaction context to associate with the message.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> 값 중 하나로, 메시지와 연결할 트랜잭션 컨텍스트 형식을 설명합니다.</target>       </trans-unit>
        <trans-unit id="2115" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>Receives the first message available in the queue referenced by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 큐에서 사용할 수 있는 첫 번째 메시지를 받습니다.</target>       </trans-unit>
        <trans-unit id="2116" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>This call is synchronous, and blocks the current thread of execution until a message is available.</source>
          <target state="translated">이 호출은 동기적이므로 메시지를 사용할 수 있을 때까지 현재 실행 스레드를 중단합니다.</target>       </trans-unit>
        <trans-unit id="2117" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that references the first message available in the queue.</source>
          <target state="translated">큐에서 사용할 수 있는 첫 번째 메시지를 참조하는 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>Use this overload to receive a message from a queue using a transaction context defined by the <ph id="ph1">`transactionType`</ph> parameter, or wait until there are messages in the queue.</source>
          <target state="translated">이 오버 로드를 사용 하 여 정의 된 트랜잭션 컨텍스트를 사용 하 여 큐에서 메시지를 수신 하기는 <ph id="ph1">`transactionType`</ph> 매개 변수 또는 큐에 메시지가 도착할 때까지 대기 합니다.</target>       </trans-unit>
        <trans-unit id="2119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
          <target state="translated">지정 <ph id="ph1">`Automatic`</ph> 에 대 한는 <ph id="ph2">`transactionType`</ph> 이미 있는 경우 외부 트랜잭션 컨텍스트 매개 변수를 사용 하는 메시지를 받을 원하는 스레드에 연결 된입니다.</target>       </trans-unit>
        <trans-unit id="2120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
          <target state="translated">지정 <ph id="ph1">`Single`</ph> 내부 단일 트랜잭션으로 메시지를 수신 하려는 경우.</target>       </trans-unit>
        <trans-unit id="2121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
          <target state="translated">지정할 수 있습니다 <ph id="ph1">`None`</ph> 트랜잭션 컨텍스트 외부에서 트랜잭션 큐에서 메시지를 수신 하려는 경우.</target>       </trans-unit>
        <trans-unit id="2122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method allows for the synchronous reading of a message, thereby removing it from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐에서 제거할 동기적으로 메시지를 읽고에 대 한 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="2123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>Subsequent calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> will return the messages that follow in the queue.</source>
          <target state="translated">에 대 한 후속 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐에 있는 다음 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
          <target state="translated">이 메서드를 호출 하 여 트랜잭션 큐에서 메시지를 수신 하기, 받은 메시지에 반환 됩니다 큐 트랜잭션이 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="2125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
          <target state="translated">메시지는 영구적으로 제거 되지 큐에서 트랜잭션이 커밋될 때까지 합니다.</target>       </trans-unit>
        <trans-unit id="2126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>To read the first message in a queue without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 큐의 첫 번째 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드는 항상 반환 첫 번째 메시지는 큐에서 우선 순위가 높은 메시지가 큐에 도착 하지 않는 한 메서드에 대 한 후속 호출 동일한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>.</source>
          <target state="translated">에 대 한 호출에서 반환 된 메시지와 관련 된 트랜잭션 컨텍스트가 없는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back by a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 에서는 큐의 메시지를 제거 하지 않으며, 호출 하 여 롤백할 수 <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>Use a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
          <target state="translated">에 대 한 호출을 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 것은 현재 스레드를 메시지가 큐에 도착 하기를 기다리는 동안 차단 적합 합니다.</target>       </trans-unit>
        <trans-unit id="2131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>Because this overload of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method specifies an infinite time-out, the application might wait indefinitely.</source>
          <target state="translated">이 오버 로드 때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 메서드 시간 제한이 없음을 지정, 응용 프로그램이 무기한 대기 합니다.</target>       </trans-unit>
        <trans-unit id="2132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>If the application processing should continue without waiting for the message, consider using the asynchronous method, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>.</source>
          <target state="translated">비동기 메서드를 사용 하 여 응용 프로그램 처리를 메시지를 기다리지 않고 계속, 고려 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%28System.Messaging.MessageQueueTransactionType%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%28System.Messaging.MessageQueueTransactionType%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="2145" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2146" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> parameter is not one of the <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> members.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> 멤버 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="2147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2148" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
          <target state="translated">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2149" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>Receives the first message available in the queue referenced by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> and waits until either a message is available in the queue, or the time-out expires.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 큐의 첫 번째 메시지를 받고, 메시지를 큐에서 사용할 수 있거나 제한 시간이 만료될 때까지 대기합니다.</target>       </trans-unit>
        <trans-unit id="2150" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that references the first message available in the queue.</source>
          <target state="translated">큐에서 사용할 수 있는 첫 번째 메시지를 참조하는 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>Use this overload to receive a message and return in a specified period of time if there are no messages in the queue.</source>
          <target state="translated">이 오버로드를 사용하여 메시지를 받고, 큐에 메시지가 없는 경우에는 지정된 시간 내에 반환합니다.</target>       </trans-unit>
        <trans-unit id="2152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method allows for the synchronous reading of a message, removing it from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 동기적으로 메시지를 읽고에 대 한 메서드를 사용 하면 큐에서 제거 합니다.</target>       </trans-unit>
        <trans-unit id="2153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>Subsequent calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> will return the messages that follow in the queue, or new, higher priority messages.</source>
          <target state="translated">에 대 한 후속 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 있는 높은 우선 순위의 메시지가 새로운, 또는 큐에서 다음 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>To read the first message in a queue without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 큐의 첫 번째 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드는 항상 반환 첫 번째 메시지는 큐에서 우선 순위가 높은 메시지가 큐에 도착 하지 않는 한 메서드에 대 한 후속 호출 동일한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>Use a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
          <target state="translated">에 대 한 호출을 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 것은 현재 스레드를 메시지가 큐에 도착 하기를 기다리는 동안 차단 적합 합니다.</target>       </trans-unit>
        <trans-unit id="2157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>The thread will be blocked for the given period of time, or indefinitely if you specified the value <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> for the <ph id="ph2">`timeout`</ph> parameter.</source>
          <target state="translated">스레드, 또는 무한정 지정된 된 기간에 대 한 차단 될 값을 지정한 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> 에 대 한는 <ph id="ph2">`timeout`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>If the application processing should continue without waiting for a message, consider using the asynchronous method, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>.</source>
          <target state="translated">비동기 메서드를 사용 하 여 응용 프로그램 처리를 메시지를 기다리지 않고 계속, 고려 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>The following code example receives a message from a queue and outputs information about that message to the screen.</source>
          <target state="translated">다음 코드 예제에서는 큐에서 메시지를 받은 및 화면으로 해당 메시지에 대 한 정보를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="2171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>The example pauses execution for up to five seconds while waiting for a message to arrive in the queue.</source>
          <target state="translated">이 예제에서는 메시지가 큐에 도착할 때까지 기다리는 동안 최대 5 초 동안 실행이 일시 중지 합니다.</target>       </trans-unit>
        <trans-unit id="2172" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid, possibly <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is less than <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우. <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>이 <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>보다 작거나 <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>보다 클 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2173" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>A message did not arrive in the queue before the time-out expired.</source>
          <target state="translated">제한 시간이 만료되기 전에 큐에 메시지가 도착하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="2174" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2175" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>An error occurred when accessing a Message Queuing method</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2177" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
          <target state="translated">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2178" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Cursor" /&gt;</ph> that maintains a specific position in the message queue.</source>
          <target state="translated">메시지 큐에서 특정 위치를 유지하는 <ph id="ph1">&lt;see cref="T:System.Messaging.Cursor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2179" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)">
          <source>Receives the current message in the queue, using a specified cursor.</source>
          <target state="translated">지정된 커서를 사용하여 큐에 있는 현재 메시지를 받습니다.</target>       </trans-unit>
        <trans-unit id="2180" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)">
          <source>If no message is available, this method waits until either a message is available, or the time-out expires.</source>
          <target state="translated">사용할 수 있는 메시지가 없는 경우 이 메서드는 메시지를 사용할 수 있거나 시간 제한이 만료될 때까지 대기합니다.</target>       </trans-unit>
        <trans-unit id="2181" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that references the first message available in the queue.</source>
          <target state="translated">큐에서 사용할 수 있는 첫 번째 메시지를 참조하는 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2182" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid, possibly <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is less than <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우. <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>이 <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>보다 작거나 <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>보다 클 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2183" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)">
          <source>A message did not arrive in the queue before the time-out expired.</source>
          <target state="translated">제한 시간이 만료되기 전에 큐에 메시지가 도착하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="2184" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2185" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)">
          <source>An error occurred when accessing a Message Queuing method</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2186" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)">
          <source>Use this overload to receive a message and return in a specified period of time if there are no messages in the queue.</source>
          <target state="translated">이 오버로드를 사용하여 메시지를 받고, 큐에 메시지가 없는 경우에는 지정된 시간 내에 반환합니다.</target>       </trans-unit>
        <trans-unit id="2187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2188" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
          <target state="translated">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2189" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> 개체</target>       </trans-unit>
        <trans-unit id="2190" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Receives the first message available in the transactional queue referenced by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> and waits until either a message is available in the queue, or the time-out expires.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 트랜잭션 큐의 첫 번째 메시지를 받으며, 메시지를 큐에서 사용할 수 있거나 제한 시간이 만료될 때까지 대기합니다.</target>       </trans-unit>
        <trans-unit id="2191" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that references the first message available in the queue.</source>
          <target state="translated">큐에서 사용할 수 있는 첫 번째 메시지를 참조하는 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Use this overload to receive a message from a transactional queue using the internal transaction context defined by the <ph id="ph1">`transaction`</ph> parameter, and return within a specified period of time if there are no messages in the queue.</source>
          <target state="translated">이 오버 로드를 사용 하 여 정의 된 내부 트랜잭션 컨텍스트를 사용 하 여 트랜잭션 큐에서 메시지를 수신 하기는 <ph id="ph1">`transaction`</ph> 매개 변수 및 큐에 메시지가 없는 경우 시간을 지정 된 기간에 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method allows for the synchronous reading of a message, thereby removing it from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐에서 제거할 동기적으로 메시지를 읽고에 대 한 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="2194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Subsequent calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> will return the messages that follow in the queue.</source>
          <target state="translated">에 대 한 후속 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐에 있는 다음 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
          <target state="translated">트랜잭션 큐에서이 메서드는, 때문에 받은 메시지가 반환 됩니다 큐에 트랜잭션이 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="2196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
          <target state="translated">메시지는 영구적으로 제거 되지 큐에서 트랜잭션이 커밋될 때까지 합니다.</target>       </trans-unit>
        <trans-unit id="2197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>To read the first message in a queue without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 큐의 첫 번째 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드는 항상 반환 첫 번째 메시지는 큐에서 우선 순위가 높은 메시지가 큐에 도착 하지 않는 한 메서드에 대 한 후속 호출 동일한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>.</source>
          <target state="translated">에 대 한 호출에서 반환 된 메시지와 관련 된 트랜잭션 컨텍스트가 없는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back by a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 에서는 큐의 메시지를 제거 하지 않으며, 호출 하 여 롤백할 수 <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Use a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
          <target state="translated">에 대 한 호출을 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 것은 현재 스레드를 메시지가 큐에 도착 하기를 기다리는 동안 차단 적합 합니다.</target>       </trans-unit>
        <trans-unit id="2202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The thread will be blocked for the given period of time, or indefinitely if you specified the value <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> for the <ph id="ph2">`timeout`</ph> parameter.</source>
          <target state="translated">스레드, 또는 무한정 지정된 된 기간에 대 한 차단 될 값을 지정한 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> 에 대 한는 <ph id="ph2">`timeout`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>If the application processing should continue without waiting for a message, consider using the asynchronous method, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>.</source>
          <target state="translated">비동기 메서드를 사용 하 여 응용 프로그램 처리를 메시지를 기다리지 않고 계속, 고려 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The following code example demonstrates the use of this method.</source>
          <target state="translated">다음 코드 예제에서는이 방법 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2216" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid, possibly <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is less than <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우. <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>이 <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>보다 작거나 <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>보다 클 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2217" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>A message did not arrive in the queue before the time-out expired.</source>
          <target state="translated">제한 시간이 만료되기 전에 큐에 메시지가 도착하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="2218" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2219" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The queue is non-transactional.</source>
          <target state="translated">비트랜잭션 큐입니다.</target>       </trans-unit>
        <trans-unit id="2220" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2221" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2223" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
          <target state="translated">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2224" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> values, describing the type of transaction context to associate with the message.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> 값 중 하나로, 메시지와 연결할 트랜잭션 컨텍스트 형식을 설명합니다.</target>       </trans-unit>
        <trans-unit id="2225" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Receives the first message available in the queue referenced by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 큐에서 사용할 수 있는 첫 번째 메시지를 받습니다.</target>       </trans-unit>
        <trans-unit id="2226" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>This call is synchronous, and waits until either a message is available in the queue, or the time-out expires.</source>
          <target state="translated">이 호출은 동기적이므로 큐에 메시지를 사용할 수 있거나 제한 시간이 만료될 때까지 대기합니다.</target>       </trans-unit>
        <trans-unit id="2227" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that references the first message available in the queue.</source>
          <target state="translated">큐에서 사용할 수 있는 첫 번째 메시지를 참조하는 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Use this overload to receive a message from a queue using a transaction context defined by the <ph id="ph1">`transactionType`</ph> parameter, and return in a specified period of time if there are no messages in the queue.</source>
          <target state="translated">이 오버 로드를 사용 하 여 정의 된 트랜잭션 컨텍스트를 사용 하 여 큐에서 메시지를 수신 하기는 <ph id="ph1">`transactionType`</ph> 매개 변수, 및 지정 된 기간 동안 큐에 메시지가 없는 경우 시간을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
          <target state="translated">지정 <ph id="ph1">`Automatic`</ph> 에 대 한는 <ph id="ph2">`transactionType`</ph> 이미 있는 경우 외부 트랜잭션 컨텍스트 매개 변수를 사용 하는 메시지를 받을 원하는 스레드에 연결 된입니다.</target>       </trans-unit>
        <trans-unit id="2230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
          <target state="translated">지정 <ph id="ph1">`Single`</ph> 내부 단일 트랜잭션으로 메시지를 수신 하려는 경우.</target>       </trans-unit>
        <trans-unit id="2231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
          <target state="translated">지정할 수 있습니다 <ph id="ph1">`None`</ph> 트랜잭션 컨텍스트 외부에서 트랜잭션 큐에서 메시지를 수신 하려는 경우.</target>       </trans-unit>
        <trans-unit id="2232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method allows for the synchronous reading of a message, thereby removing it from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐에서 제거할 동기적으로 메시지를 읽고에 대 한 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="2233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Subsequent calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> will return the messages that follow in the queue.</source>
          <target state="translated">에 대 한 후속 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐에 있는 다음 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
          <target state="translated">이 메서드를 호출 하 여 트랜잭션 큐에서 메시지를 수신 하기, 받은 메시지에 반환 됩니다 큐 트랜잭션이 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="2235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
          <target state="translated">메시지는 영구적으로 제거 되지 큐에서 트랜잭션이 커밋될 때까지 합니다.</target>       </trans-unit>
        <trans-unit id="2236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>To read the first message in a queue without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 큐의 첫 번째 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드는 항상 반환 첫 번째 메시지는 큐에서 우선 순위가 높은 메시지가 큐에 도착 하지 않는 한 메서드에 대 한 후속 호출 동일한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>.</source>
          <target state="translated">에 대 한 호출에서 반환 된 메시지와 관련 된 트랜잭션 컨텍스트가 없는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back by a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 에서는 큐의 메시지를 제거 하지 않으며, 호출 하 여 롤백할 수 <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Use a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
          <target state="translated">에 대 한 호출을 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 것은 현재 스레드를 메시지가 큐에 도착 하기를 기다리는 동안 차단 적합 합니다.</target>       </trans-unit>
        <trans-unit id="2241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The thread will be blocked for the given period of time, or indefinitely if you specified the value <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> for the <ph id="ph2">`timeout`</ph> parameter.</source>
          <target state="translated">스레드, 또는 무한정 지정된 된 기간에 대 한 차단 될 값을 지정한 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> 에 대 한는 <ph id="ph2">`timeout`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>If the application processing should continue without waiting for a message, consider using the asynchronous method, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>.</source>
          <target state="translated">비동기 메서드를 사용 하 여 응용 프로그램 처리를 메시지를 기다리지 않고 계속, 고려 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The following code example demonstrates the use of this method.</source>
          <target state="translated">다음 코드 예제에서는이 방법 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2255" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid, possibly <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is less than <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우. <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>이 <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>보다 작거나 <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>보다 클 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2256" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> parameter is not one of the <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> members.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> 멤버 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="2257" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>A message did not arrive in the queue before the time-out expired.</source>
          <target state="translated">제한 시간이 만료되기 전에 큐에 메시지가 도착하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="2258" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2259" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2261" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
          <target state="translated">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2262" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Cursor" /&gt;</ph> that maintains a specific position in the message queue.</source>
          <target state="translated">메시지 큐에서 특정 위치를 유지하는 <ph id="ph1">&lt;see cref="T:System.Messaging.Cursor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2263" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> 개체</target>       </trans-unit>
        <trans-unit id="2264" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>Receives the current message in the queue, using a specified cursor.</source>
          <target state="translated">지정된 커서를 사용하여 큐에 있는 현재 메시지를 받습니다.</target>       </trans-unit>
        <trans-unit id="2265" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>If no message is available, this method waits until either a message is available, or the time-out expires.</source>
          <target state="translated">사용할 수 있는 메시지가 없는 경우 이 메서드는 메시지를 사용할 수 있거나 시간 제한이 만료될 때까지 대기합니다.</target>       </trans-unit>
        <trans-unit id="2266" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that references a message in the queue.</source>
          <target state="translated">큐에 있는 메시지를 참조하는 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>Use this overload to receive a message from a transactional queue using the internal transaction context defined by the <ph id="ph1">`transaction`</ph> parameter, and return within a specified period of time if there are no messages in the queue.</source>
          <target state="translated">이 오버 로드를 사용 하 여 정의 된 내부 트랜잭션 컨텍스트를 사용 하 여 트랜잭션 큐에서 메시지를 수신 하기는 <ph id="ph1">`transaction`</ph> 매개 변수 및 큐에 메시지가 없는 경우 시간을 지정 된 기간에 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method allows for the synchronous reading of a message, thereby removing it from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐에서 제거할 동기적으로 메시지를 읽고에 대 한 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="2269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>Subsequent calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> return the messages that follow in the queue.</source>
          <target state="translated">에 대 한 후속 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐에 있는 다음 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>Because this method is called on a transactional queue, the message that is received is returned to the queue if the transaction is aborted.</source>
          <target state="translated">트랜잭션 큐에서이 메서드는, 때문에 트랜잭션이 중단 되 면 받은 메시지를 큐로 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="2271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
          <target state="translated">메시지는 영구적으로 제거 되지 큐에서 트랜잭션이 커밋될 때까지 합니다.</target>       </trans-unit>
        <trans-unit id="2272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>To read a message in a queue without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 큐의 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>.</source>
          <target state="translated">에 대 한 호출에서 반환 된 메시지와 관련 된 트랜잭션 컨텍스트가 없는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> does not remove any messages in the queue, there is nothing to roll back by a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 큐에 메시지를 제거 하지 않습니다, 호출 하 여 롤백하지 즉 <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>Use a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
          <target state="translated">에 대 한 호출을 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 것은 현재 스레드를 메시지가 큐에 도착 하기를 기다리는 동안 차단 적합 합니다.</target>       </trans-unit>
        <trans-unit id="2276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>The thread is blocked for the given period of time, or indefinitely if you specified the value <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> for the <ph id="ph2">`timeout`</ph> parameter.</source>
          <target state="translated">또는 무한정 지정된 된 기간에 대 한 스레드가 차단 되는 값을 지정한 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> 에 대 한는 <ph id="ph2">`timeout`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>If the application processing should continue without waiting for a message, consider using the asynchronous method, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>.</source>
          <target state="translated">비동기 메서드를 사용 하 여 응용 프로그램 처리를 메시지를 기다리지 않고 계속, 고려 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2289" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;paramref name="cursor" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cursor" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2290" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2291" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;paramref name="transaction" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transaction" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2292" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="2293" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>Possibly <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph>이 <ph id="ph2">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>보다 클 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2294" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>A message did not arrive in the queue before the time-out expired.</source>
          <target state="translated">제한 시간이 만료되기 전에 큐에 메시지가 도착하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="2295" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2296" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>The queue is non-transactional.</source>
          <target state="translated">비트랜잭션 큐입니다.</target>       </trans-unit>
        <trans-unit id="2297" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2298" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2300" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
          <target state="translated">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2301" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Cursor" /&gt;</ph> that maintains a specific position in the message queue.</source>
          <target state="translated">메시지 큐에서 특정 위치를 유지하는 <ph id="ph1">&lt;see cref="T:System.Messaging.Cursor" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2302" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> values that describes the type of transaction context to associate with the message.</source>
          <target state="translated">메시지와 연결할 트랜잭션 컨텍스트 형식을 설명하는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="2303" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>Receives the current message in the queue, using a specified cursor.</source>
          <target state="translated">지정된 커서를 사용하여 큐에 있는 현재 메시지를 받습니다.</target>       </trans-unit>
        <trans-unit id="2304" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>If no message is available, this method waits until either a message is available, or the time-out expires.</source>
          <target state="translated">사용할 수 있는 메시지가 없는 경우 이 메서드는 메시지를 사용할 수 있거나 시간 제한이 만료될 때까지 대기합니다.</target>       </trans-unit>
        <trans-unit id="2305" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that references a message in the queue.</source>
          <target state="translated">큐에 있는 메시지를 참조하는 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>Use this overload to receive a message from a queue using a transaction context defined by the <ph id="ph1">`transactionType`</ph> parameter, and return in a specified period of time if there are no messages in the queue.</source>
          <target state="translated">이 오버 로드를 사용 하 여 정의 된 트랜잭션 컨텍스트를 사용 하 여 큐에서 메시지를 수신 하기는 <ph id="ph1">`transactionType`</ph> 매개 변수, 및 지정 된 기간 동안 큐에 메시지가 없는 경우 시간을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
          <target state="translated">지정 <ph id="ph1">`Automatic`</ph> 에 대 한는 <ph id="ph2">`transactionType`</ph> 이미 있는 경우 외부 트랜잭션 컨텍스트 매개 변수를 사용 하는 메시지를 받을 원하는 스레드에 연결 된입니다.</target>       </trans-unit>
        <trans-unit id="2308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
          <target state="translated">지정 <ph id="ph1">`Single`</ph> 내부 단일 트랜잭션으로 메시지를 수신 하려는 경우.</target>       </trans-unit>
        <trans-unit id="2309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
          <target state="translated">지정할 수 있습니다 <ph id="ph1">`None`</ph> 트랜잭션 컨텍스트 외부에서 트랜잭션 큐에서 메시지를 수신 하려는 경우.</target>       </trans-unit>
        <trans-unit id="2310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method allows for the synchronous reading of a message, thereby removing it from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐에서 제거할 동기적으로 메시지를 읽고에 대 한 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="2311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>Subsequent calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> return the messages that follow in the queue.</source>
          <target state="translated">에 대 한 후속 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐에 있는 다음 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>If this method is called to receive a message from a transactional queue, the message that is received is returned to the queue if the transaction is aborted.</source>
          <target state="translated">이 메서드는 트랜잭션 큐에서 메시지를 수신 하기, 트랜잭션이 중단 되는 경우 수신 되는 메시지 큐로 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="2313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
          <target state="translated">메시지는 영구적으로 제거 되지 큐에서 트랜잭션이 커밋될 때까지 합니다.</target>       </trans-unit>
        <trans-unit id="2314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>To read a message in a queue without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 큐의 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>.</source>
          <target state="translated">에 대 한 호출에서 반환 된 메시지와 관련 된 트랜잭션 컨텍스트가 없는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> does not remove any messages in the queue, there is nothing to roll back by a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> 큐에 메시지를 제거 하지 않습니다, 호출 하 여 롤백하지 즉 <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>Use a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
          <target state="translated">에 대 한 호출을 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 것은 현재 스레드를 메시지가 큐에 도착 하기를 기다리는 동안 차단 적합 합니다.</target>       </trans-unit>
        <trans-unit id="2318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>The thread is blocked for the given period of time, or indefinitely if you specified the value <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> for the <ph id="ph2">`timeout`</ph> parameter.</source>
          <target state="translated">또는 무한정 지정된 된 기간에 대 한 스레드가 차단 되는 값을 지정한 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> 에 대 한는 <ph id="ph2">`timeout`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>If the application processing should continue without waiting for a message, consider using the asynchronous method, <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>.</source>
          <target state="translated">비동기 메서드를 사용 하 여 응용 프로그램 처리를 메시지를 기다리지 않고 계속, 고려 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2331" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;paramref name="cursor" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cursor" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2332" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우</target>       </trans-unit>
        <trans-unit id="2333" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>Possibly <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph>이 <ph id="ph2">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>보다 작거나 <ph id="ph3">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>보다 클 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2334" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> parameter is not one of the <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> members.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> 멤버 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="2335" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>A message did not arrive in the queue before the time-out expired.</source>
          <target state="translated">제한 시간이 만료되기 전에 큐에 메시지가 도착하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="2336" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2337" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)">
          <source>The method is not thread safe.</source>
          <target state="translated">메서드는 스레드로부터 안전 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2339" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>Receives a message that matches a given correlation identifier.</source>
          <target state="translated">주어진 상관 관계 식별자를 갖는 메시지를 받습니다.</target>       </trans-unit>
        <trans-unit id="2340" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph> of the message to receive.</source>
          <target state="translated">받을 메시지의 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2341" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>Receives the message that matches the given correlation identifier (from a non-transactional queue) and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</source>
          <target state="translated">주어진 상관 관계 식별자를 갖는 메시지를 비트랜잭션 큐로부터 받습니다. 지정된 상관 관계 식별자가 포함된 메시지가 큐에 현재 존재하지 않는 경우에는 바로 예외가 발생합니다.</target>       </trans-unit>
        <trans-unit id="2342" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph> matches the <ph id="ph3">&lt;paramref name="correlationId" /&gt;</ph> parameter passed in.</source>
          <target state="translated">전달된 <ph id="ph3">&lt;paramref name="correlationId" /&gt;</ph> 매개 변수와 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>가 일치하는 <ph id="ph2">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>This method looks in the non-transactional queue referenced by the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> for a message whose <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the specified <ph id="ph3">`correlationId`</ph> parameter.</source>
          <target state="translated">가 참조 비트랜잭션 큐에서이 메서드를 찾습니다는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 메시지에 대 한 해당 <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 지정 된 일치 <ph id="ph3">`correlationId`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>If no message is found that matches the <ph id="ph1">`correlationID`</ph> parameter, an exception is thrown.</source>
          <target state="translated">메시지가 발견 되지 일치 하는 경우는 <ph id="ph1">`correlationID`</ph> 매개 변수를 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="2345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>Otherwise, the message is removed from the queue and returned to the application.</source>
          <target state="translated">그렇지 않으면 메시지 큐에서 제거 되 고 응용 프로그램에 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="2346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 속성 관련된 응답, 보고서 또는 승인 메시지를 큐에 전송 된 메시지를 연결 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="2347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>Two other methods allow you to receive messages from a queue.</source>
          <target state="translated">다른 두 메서드를 사용 하는 큐에서 메시지를 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> method retrieves a message by specifying its unique identifier.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> 메서드의 고유 식별자를 지정 하 여 메시지를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="2349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>To read a message with a specified correlation identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 지정 된 상관 관계 식별자를 가진 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> 메서드는 항상 반환 첫 번째 메시지는 큐에서 우선 순위가 높은 메시지가 큐에 도착 하지 않는 한 메서드에 대 한 후속 호출 동일한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>The following code example sends and receives a message that contains an order to and from a queue.</source>
          <target state="translated">다음 코드 예제는 큐에서 주문에 포함 된 메시지 송수신 설정 합니다.</target>       </trans-unit>
        <trans-unit id="2363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</source>
          <target state="translated">원본 메시지가 도달 하거나이 긍정 승인을 특별히 요청 큐에서 검색 합니다.</target>       </trans-unit>
        <trans-unit id="2364" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2365" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>The message with the specified <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> could not be found.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph>의 메시지를 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="2366" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2367" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph> of the message to receive.</source>
          <target state="translated">받을 메시지의 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2368" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> 개체</target>       </trans-unit>
        <trans-unit id="2369" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Receives the message that matches the given correlation identifier (from a transactional queue) and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</source>
          <target state="translated">주어진 상관 관계 식별자를 갖는 메시지를 트랜잭션 큐로부터 받습니다. 지정된 상관 관계 식별자가 포함된 메시지가 큐에 현재 존재하지 않는 경우에는 바로 예외가 발생합니다.</target>       </trans-unit>
        <trans-unit id="2370" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph> matches the <ph id="ph3">&lt;paramref name="correlationId" /&gt;</ph> parameter passed in.</source>
          <target state="translated">전달된 <ph id="ph3">&lt;paramref name="correlationId" /&gt;</ph> 매개 변수와 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>가 일치하는 <ph id="ph2">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>This method looks in the transactional queue referenced by the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> for a message whose <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the specified <ph id="ph3">`correlationId`</ph> parameter.</source>
          <target state="translated">참조 하는 트랜잭션 큐에이 메서드를 찾습니다는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 메시지에 대 한 해당 <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 지정 된 일치 <ph id="ph3">`correlationId`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>If no message is found that matches the <ph id="ph1">`correlationID`</ph> parameter, an exception is thrown.</source>
          <target state="translated">메시지가 발견 되지 일치 하는 경우는 <ph id="ph1">`correlationID`</ph> 매개 변수를 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="2373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Otherwise, the message is removed from the queue and returned to the application using the internal transaction context defined by the <ph id="ph1">`transaction`</ph> parameter.</source>
          <target state="translated">그렇지 않으면, 메시지 큐에서 제거 고 정의 된 내부 트랜잭션 컨텍스트를 사용 하 여 응용 프로그램에 반환 된 <ph id="ph1">`transaction`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
          <target state="translated">트랜잭션 큐에서이 메서드는, 때문에 받은 메시지가 반환 됩니다 큐에 트랜잭션이 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="2375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
          <target state="translated">메시지는 영구적으로 제거 되지 큐에서 트랜잭션이 커밋될 때까지 합니다.</target>       </trans-unit>
        <trans-unit id="2376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 속성 관련된 응답, 보고서 또는 승인 메시지를 큐에 전송 된 메시지를 연결 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="2377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Two other methods allow you to receive messages from a queue.</source>
          <target state="translated">다른 두 메서드를 사용 하는 큐에서 메시지를 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> method is used to retrieve a message by specifying its unique identifier.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> 의 고유 식별자를 지정 하 여 메시지를 검색할 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="2379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>To read a message with a specified correlation identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 지정 된 상관 관계 식별자를 가진 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> 메서드는 항상 반환 첫 번째 메시지는 큐에서 우선 순위가 높은 메시지가 큐에 도착 하지 않는 한 메서드에 대 한 후속 호출 동일한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph>.</source>
          <target state="translated">에 대 한 호출에서 반환 된 메시지와 관련 된 트랜잭션 컨텍스트가 없는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> 트랜잭션이 중단 된 경우 롤백될 수, 큐에 메시지를 제거 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.Messaging.MessageQueueTransaction%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.Messaging.MessageQueueTransaction%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="2395" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2396" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2397" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;paramref name="transaction" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transaction" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2398" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The message with the specified <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> could not be found.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph>의 메시지를 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="2399" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The queue is non-transactional.</source>
          <target state="translated">비트랜잭션 큐입니다.</target>       </trans-unit>
        <trans-unit id="2400" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2401" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2402" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph> of the message to receive.</source>
          <target state="translated">받을 메시지의 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2403" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> values, describing the type of transaction context to associate with the message.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> 값 중 하나로, 메시지와 연결할 트랜잭션 컨텍스트 형식을 설명합니다.</target>       </trans-unit>
        <trans-unit id="2404" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Receives the message that matches the given correlation identifier and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</source>
          <target state="translated">주어진 상관 관계 식별자를 갖는 메시지를 받습니다. 지정된 상관 관계 식별자가 들어 있는 메시지가 큐에 현재 없는 경우에는 바로 예외가 발생합니다.</target>       </trans-unit>
        <trans-unit id="2405" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph> matches the <ph id="ph3">&lt;paramref name="correlationId" /&gt;</ph> parameter passed in.</source>
          <target state="translated">전달된 <ph id="ph3">&lt;paramref name="correlationId" /&gt;</ph> 매개 변수와 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>가 일치하는 <ph id="ph2">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>This method looks in the queue referenced by the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> for a message whose <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the specified <ph id="ph3">`correlationId`</ph> parameter.</source>
          <target state="translated">참조 하는 큐에이 메서드를 찾습니다는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 메시지에 대 한 해당 <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 지정 된 일치 <ph id="ph3">`correlationId`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>If no message is found that matches the <ph id="ph1">`correlationID`</ph> parameter, an exception is thrown.</source>
          <target state="translated">메시지가 발견 되지 일치 하는 경우는 <ph id="ph1">`correlationID`</ph> 매개 변수를 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="2408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Otherwise, the message is removed from the queue and returned to the application using a transaction context defined by the <ph id="ph1">`transactionType`</ph> parameter.</source>
          <target state="translated">메시지 큐에서 제거 되 고 정의 된 트랜잭션 컨텍스트를 사용 하 여 응용 프로그램에 반환 되는 그렇지 않은 경우는 <ph id="ph1">`transactionType`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
          <target state="translated">지정 <ph id="ph1">`Automatic`</ph> 에 대 한는 <ph id="ph2">`transactionType`</ph> 이미 있는 경우 외부 트랜잭션 컨텍스트 매개 변수를 사용 하는 메시지를 받을 원하는 스레드에 연결 된입니다.</target>       </trans-unit>
        <trans-unit id="2410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
          <target state="translated">지정 <ph id="ph1">`Single`</ph> 내부 단일 트랜잭션으로 메시지를 수신 하려는 경우.</target>       </trans-unit>
        <trans-unit id="2411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
          <target state="translated">지정할 수 있습니다 <ph id="ph1">`None`</ph> 트랜잭션 컨텍스트 외부에서 트랜잭션 큐에서 메시지를 수신 하려는 경우.</target>       </trans-unit>
        <trans-unit id="2412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
          <target state="translated">이 메서드를 호출 하 여 트랜잭션 큐에서 메시지를 수신 하기, 받은 메시지에 반환 됩니다 큐 트랜잭션이 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="2413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
          <target state="translated">메시지는 영구적으로 제거 되지 큐에서 트랜잭션이 커밋될 때까지 합니다.</target>       </trans-unit>
        <trans-unit id="2414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 속성 관련된 응답, 보고서 또는 승인 메시지를 큐에 전송 된 메시지를 연결 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="2415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Two other methods allow you to receive messages from a queue.</source>
          <target state="translated">다른 두 메서드를 사용 하는 큐에서 메시지를 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> method is used to retrieve a message by specifying its unique identifier.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> 의 고유 식별자를 지정 하 여 메시지를 검색할 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="2417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>To read a message with a specified correlation identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 지정 된 상관 관계 식별자를 가진 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> 메서드는 항상 반환 첫 번째 메시지는 큐에서 우선 순위가 높은 메시지가 큐에 도착 하지 않는 한 메서드에 대 한 후속 호출 동일한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph>.</source>
          <target state="translated">에 대 한 호출에서 반환 된 메시지와 관련 된 트랜잭션 컨텍스트가 없는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> 트랜잭션이 중단 된 경우 롤백될 수, 큐에 메시지를 제거 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.Messaging.MessageQueueTransactionType%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.Messaging.MessageQueueTransactionType%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="2433" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2434" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The message with the specified <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> could not be found.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph>의 메시지를 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="2435" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> parameter is not one of the <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> members.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> 멤버 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="2436" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2437" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph> of the message to receive.</source>
          <target state="translated">받을 메시지의 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2438" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
          <target state="translated">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2439" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>Receives the message that matches the given correlation identifier (from a non-transactional queue) and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</source>
          <target state="translated">주어진 상관 관계 식별자를 갖는 메시지를 비트랜잭션 큐로부터 받고, 지정된 상관 관계 식별자가 포함된 메시지를 큐에서 사용할 수 있거나 제한 시간이 만료될 때까지 대기합니다.</target>       </trans-unit>
        <trans-unit id="2440" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph> matches the <ph id="ph3">&lt;paramref name="correlationId" /&gt;</ph> parameter passed in.</source>
          <target state="translated">전달된 <ph id="ph3">&lt;paramref name="correlationId" /&gt;</ph> 매개 변수와 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>가 일치하는 <ph id="ph2">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>This method looks in the non-transactional queue referenced by the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> for a message whose <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the specified <ph id="ph3">`correlationId`</ph> parameter.</source>
          <target state="translated">가 참조 비트랜잭션 큐에서이 메서드를 찾습니다는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 메시지에 대 한 해당 <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 지정 된 일치 <ph id="ph3">`correlationId`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>This method returns immediately if the message with the correlation identifier specified by the <ph id="ph1">`correlationId`</ph> parameter is in the queue.</source>
          <target state="translated">이 메서드는 상관 관계 식별자를 가진 메시지에 지정 된 즉시 반환는 <ph id="ph1">`correlationId`</ph> 매개 변수는 큐에 들어갑니다.</target>       </trans-unit>
        <trans-unit id="2443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>Otherwise, the method waits the given period of time for a new message to arrive.</source>
          <target state="translated">그렇지 않으면 메서드는 도착 하는 데 새 메시지에 대해 지정 된 기간을 대기 합니다.</target>       </trans-unit>
        <trans-unit id="2444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>If a new message does not arrive before the time-out expires, an exception is thrown.</source>
          <target state="translated">제한 시간이 만료 되기 전에 새 메시지가 도착 하지 않으면, 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="2445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">`timeout`</ph> parameter does not specify the total running time for this method.</source>
          <target state="translated"><ph id="ph1">`timeout`</ph> 매개 변수는 총 실행이 메서드에 대 한 시간을 지정 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>Rather, it specifies the time to wait for a new message to arrive in the queue.</source>
          <target state="translated">새 메시지가 큐에 도착할 때까지 대기 하는 시간을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="2447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>Each time a new message arrives, this method examines the <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> of the new message to see if it matches the <ph id="ph2">`correlationId`</ph> parameter.</source>
          <target state="translated">될 때마다 새 메시지가 도착 하면이 메서드는 <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 일치 하는지 확인 하는 새 메시지는 <ph id="ph2">`correlationId`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>If not, this method starts the time-out period over and waits for another new message to arrive.</source>
          <target state="translated">그렇지 않으면이 메서드를 통해 제한 시간을 시작 하 고 다른 새 메시지가 도착할 때까지 대기 합니다.</target>       </trans-unit>
        <trans-unit id="2449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the <ph id="ph2">`correlationId`</ph> parameter.</source>
          <target state="translated">따라서 새 메시지 시간 제한 기간 내에 도착 하는 데 계속 것이 제한 된 시간까지 또는 해당 메시지가 도착할 때까지 무기한으로 실행을 계속 하려면이 메서드 <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 일치는 <ph id="ph2">`correlationId`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 속성 관련된 응답, 보고서 또는 승인 메시지를 큐에 전송 된 메시지를 연결 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="2451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>Two other methods allow you to receive messages from a queue.</source>
          <target state="translated">다른 두 메서드를 사용 하는 큐에서 메시지를 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> method is used to retrieve a message by specifying its unique identifier.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> 의 고유 식별자를 지정 하 여 메시지를 검색할 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="2453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>To read a message with a specified correlation identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 지정 된 상관 관계 식별자를 가진 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> 메서드는 항상 반환 첫 번째 메시지는 큐에서 우선 순위가 높은 메시지가 큐에 도착 하지 않는 한 메서드에 대 한 후속 호출 동일한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="2467" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2468" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid, possibly <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is less than <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우. <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>이 <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>보다 작거나 <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>보다 클 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2469" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>The message with the specified <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> does not exist in the queue and did not arrive before the time-out expired.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph>가 들어 있는 메시지가 큐에 없고 제한 시간이 만료되기 전에 도착하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="2470" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2471" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2472" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph> of the message to receive.</source>
          <target state="translated">받을 메시지의 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2473" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
          <target state="translated">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2474" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> 개체</target>       </trans-unit>
        <trans-unit id="2475" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Receives the message that matches the given correlation identifier (from a transactional queue) and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</source>
          <target state="translated">주어진 상관 관계 식별자를 갖는 메시지를 트랜잭션 큐로부터 받고, 지정된 상관 관계 식별자가 포함된 메시지를 큐에서 사용할 수 있거나 제한 시간이 만료될 때까지 대기합니다.</target>       </trans-unit>
        <trans-unit id="2476" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph> matches the <ph id="ph3">&lt;paramref name="correlationId" /&gt;</ph> parameter passed in.</source>
          <target state="translated">전달된 <ph id="ph3">&lt;paramref name="correlationId" /&gt;</ph> 매개 변수와 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>가 일치하는 <ph id="ph2">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>This method looks in the transactional queue referenced by the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> for a message whose <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the specified <ph id="ph3">`correlationId`</ph> parameter.</source>
          <target state="translated">참조 하는 트랜잭션 큐에이 메서드를 찾습니다는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 메시지에 대 한 해당 <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 지정 된 일치 <ph id="ph3">`correlationId`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>This method returns immediately if the message with the correlation identifier specified by the <ph id="ph1">`correlationId`</ph> parameter is in the queue, using the internal transaction context defined by the <ph id="ph2">`transaction`</ph> parameter.</source>
          <target state="translated">이 메서드는 상관 관계 식별자를 가진 메시지에 지정 된 즉시 반환는 <ph id="ph1">`correlationId`</ph> 매개 변수는 정의 된 내부 트랜잭션 컨텍스트를 사용 하 여 큐에는 <ph id="ph2">`transaction`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Otherwise, the method waits the given period of time for a new message to arrive.</source>
          <target state="translated">그렇지 않으면 메서드는 도착 하는 데 새 메시지에 대해 지정 된 기간을 대기 합니다.</target>       </trans-unit>
        <trans-unit id="2480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>If a new message does not arrive before the time-out expires, an exception is thrown.</source>
          <target state="translated">제한 시간이 만료 되기 전에 새 메시지가 도착 하지 않으면, 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="2481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">`timeout`</ph> parameter does not specify the total running time for this method.</source>
          <target state="translated"><ph id="ph1">`timeout`</ph> 매개 변수는 총 실행이 메서드에 대 한 시간을 지정 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Rather, it specifies the time to wait for a new message to arrive in the queue.</source>
          <target state="translated">새 메시지가 큐에 도착할 때까지 대기 하는 시간을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="2483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Each time a new message arrives, this method examines the <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> of the new message to see if it matches the <ph id="ph2">`correlationId`</ph> parameter.</source>
          <target state="translated">될 때마다 새 메시지가 도착 하면이 메서드는 <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 일치 하는지 확인 하는 새 메시지는 <ph id="ph2">`correlationId`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>If not, this method starts the time-out period over and waits for another new message to arrive.</source>
          <target state="translated">그렇지 않으면이 메서드를 통해 제한 시간을 시작 하 고 다른 새 메시지가 도착할 때까지 대기 합니다.</target>       </trans-unit>
        <trans-unit id="2485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the <ph id="ph2">`correlationId`</ph> parameter.</source>
          <target state="translated">따라서 새 메시지 시간 제한 기간 내에 도착 하는 데 계속 것이 제한 된 시간까지 또는 해당 메시지가 도착할 때까지 무기한으로 실행을 계속 하려면이 메서드 <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 일치는 <ph id="ph2">`correlationId`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
          <target state="translated">트랜잭션 큐에서이 메서드는, 때문에 받은 메시지가 반환 됩니다 큐에 트랜잭션이 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="2487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
          <target state="translated">메시지는 영구적으로 제거 되지 큐에서 트랜잭션이 커밋될 때까지 합니다.</target>       </trans-unit>
        <trans-unit id="2488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 속성 관련된 응답, 보고서 또는 승인 메시지를 큐에 전송 된 메시지를 연결 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="2489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Two other methods allow you to receive messages from a queue.</source>
          <target state="translated">다른 두 메서드를 사용 하는 큐에서 메시지를 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> method is used to retrieve a message by specifying its unique identifier.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> 의 고유 식별자를 지정 하 여 메시지를 검색할 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="2491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>To read a message with a specified correlation identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 지정 된 상관 관계 식별자를 가진 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> 메서드는 항상 반환 첫 번째 메시지는 큐에서 우선 순위가 높은 메시지가 큐에 도착 하지 않는 한 메서드에 대 한 후속 호출 동일한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph>.</source>
          <target state="translated">에 대 한 호출에서 반환 된 메시지와 관련 된 트랜잭션 컨텍스트가 없는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> 트랜잭션이 중단 된 경우 롤백될 수, 큐에 메시지를 제거 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransaction%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransaction%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="2507" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2508" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2509" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;paramref name="transaction" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transaction" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2510" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid, possibly <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is less than <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우. <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>이 <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>보다 작거나 <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>보다 클 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2511" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The message with the specified <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> does not exist in the queue and did not arrive before the time-out expired.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph>가 들어 있는 메시지가 큐에 없고 제한 시간이 만료되기 전에 도착하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="2512" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2513" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The queue is non-transactional.</source>
          <target state="translated">비트랜잭션 큐입니다.</target>       </trans-unit>
        <trans-unit id="2514" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2515" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2516" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph> of the message to receive.</source>
          <target state="translated">받을 메시지의 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2517" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
          <target state="translated">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2518" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> values, describing the type of transaction context to associate with the message.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> 값 중 하나로, 메시지와 연결할 트랜잭션 컨텍스트 형식을 설명합니다.</target>       </trans-unit>
        <trans-unit id="2519" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Receives the message that matches the given correlation identifier and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</source>
          <target state="translated">주어진 상관 관계 식별자를 갖는 메시지를 받고, 지정된 상관 관계 식별자가 포함된 메시지를 큐에서 사용할 수 있거나 제한 시간이 만료될 때까지 대기합니다.</target>       </trans-unit>
        <trans-unit id="2520" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph> matches the <ph id="ph3">&lt;paramref name="correlationId" /&gt;</ph> parameter passed in.</source>
          <target state="translated">전달된 <ph id="ph3">&lt;paramref name="correlationId" /&gt;</ph> 매개 변수와 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>가 일치하는 <ph id="ph2">&lt;see cref="P:System.Messaging.Message.CorrelationId" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>This method looks in the queue referenced by the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> for a message whose <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the specified <ph id="ph3">`correlationId`</ph> parameter.</source>
          <target state="translated">참조 하는 큐에이 메서드를 찾습니다는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 메시지에 대 한 해당 <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 지정 된 일치 <ph id="ph3">`correlationId`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>This method returns immediately if the message with the correlation identifier specified by the <ph id="ph1">`correlationId`</ph> parameter is in the queue, using a transaction context defined by the <ph id="ph2">`transactionType`</ph> parameter.</source>
          <target state="translated">이 메서드는 상관 관계 식별자를 가진 메시지에 지정 된 즉시 반환는 <ph id="ph1">`correlationId`</ph> 매개 변수는 정의 된 트랜잭션 컨텍스트를 사용 하 여 큐에는 <ph id="ph2">`transactionType`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Otherwise, the method waits the given period of time for a new message to arrive.</source>
          <target state="translated">그렇지 않으면 메서드는 도착 하는 데 새 메시지에 대해 지정 된 기간을 대기 합니다.</target>       </trans-unit>
        <trans-unit id="2524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>If a new message does not arrive before the time-out expires, an exception is thrown.</source>
          <target state="translated">제한 시간이 만료 되기 전에 새 메시지가 도착 하지 않으면, 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="2525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">`timeout`</ph> parameter does not specify the total running time for this method.</source>
          <target state="translated"><ph id="ph1">`timeout`</ph> 매개 변수는 총 실행이 메서드에 대 한 시간을 지정 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Rather, it specifies the time to wait for a new message to arrive in the queue.</source>
          <target state="translated">새 메시지가 큐에 도착할 때까지 대기 하는 시간을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="2527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Each time a new message arrives, this method examines the <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> of the new message to see if it matches the <ph id="ph2">`correlationId`</ph> parameter.</source>
          <target state="translated">될 때마다 새 메시지가 도착 하면이 메서드는 <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 일치 하는지 확인 하는 새 메시지는 <ph id="ph2">`correlationId`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>If not, this method starts the time-out period over and waits for another new message to arrive.</source>
          <target state="translated">그렇지 않으면이 메서드를 통해 제한 시간을 시작 하 고 다른 새 메시지가 도착할 때까지 대기 합니다.</target>       </trans-unit>
        <trans-unit id="2529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> matches the <ph id="ph2">`correlationId`</ph> parameter.</source>
          <target state="translated">따라서 새 메시지 시간 제한 기간 내에 도착 하는 데 계속 것이 제한 된 시간까지 또는 해당 메시지가 도착할 때까지 무기한으로 실행을 계속 하려면이 메서드 <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 일치는 <ph id="ph2">`correlationId`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
          <target state="translated">지정 <ph id="ph1">`Automatic`</ph> 에 대 한는 <ph id="ph2">`transactionType`</ph> 이미 있는 경우 외부 트랜잭션 컨텍스트 매개 변수를 사용 하는 메시지를 받을 원하는 스레드에 연결 된입니다.</target>       </trans-unit>
        <trans-unit id="2531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
          <target state="translated">지정 <ph id="ph1">`Single`</ph> 내부 단일 트랜잭션으로 메시지를 수신 하려는 경우.</target>       </trans-unit>
        <trans-unit id="2532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
          <target state="translated">지정할 수 있습니다 <ph id="ph1">`None`</ph> 트랜잭션 컨텍스트 외부에서 트랜잭션 큐에서 메시지를 수신 하려는 경우.</target>       </trans-unit>
        <trans-unit id="2533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
          <target state="translated">이 메서드를 호출 하 여 트랜잭션 큐에서 메시지를 수신 하기, 받은 메시지에 반환 됩니다 큐 트랜잭션이 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="2534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
          <target state="translated">메시지는 영구적으로 제거 되지 큐에서 트랜잭션이 커밋될 때까지 합니다.</target>       </trans-unit>
        <trans-unit id="2535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> 속성 관련된 응답, 보고서 또는 승인 메시지를 큐에 전송 된 메시지를 연결 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="2536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Two other methods allow you to receive messages from a queue.</source>
          <target state="translated">다른 두 메서드를 사용 하는 큐에서 메시지를 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> method is used to retrieve a message by specifying its unique identifier.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> 의 고유 식별자를 지정 하 여 메시지를 검색할 메서드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="2538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>To read a message with a specified correlation identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 지정 된 상관 관계 식별자를 가진 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> 메서드는 항상 반환 첫 번째 메시지는 큐에서 우선 순위가 높은 메시지가 큐에 도착 하지 않는 한 메서드에 대 한 후속 호출 동일한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph>.</source>
          <target state="translated">에 대 한 호출에서 반환 된 메시지와 관련 된 트랜잭션 컨텍스트가 없는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29&gt;</ph> 트랜잭션이 중단 된 경우 롤백될 수, 큐에 메시지를 제거 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransactionType%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransactionType%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="2554" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2555" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The message with the specified <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> could not be found.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph>의 메시지를 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="2556" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid, possibly <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is less than <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우. <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>이 <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>보다 작거나 <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>보다 클 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2557" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> parameter is not one of the <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> members.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> 멤버 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="2558" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The message with the specified <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph> does not exist in the queue and did not arrive before the time-out expired.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="correlationId" /&gt;</ph>가 들어 있는 메시지가 큐에 없고 제한 시간이 만료되기 전에 도착하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="2559" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2560" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2561" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>Receives the message that matches the given identifier, removing it from the queue.</source>
          <target state="translated">주어진 식별자를 갖는 메시지를 받고, 큐에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="2562" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph> of the message to receive.</source>
          <target state="translated">받을 메시지의 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2563" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>Receives the message that matches the given identifier from a non-transactional queue and immediately raises an exception if no message with the specified identifier currently exists in the queue.</source>
          <target state="translated">주어진 식별자를 갖는 메시지를 비트랜잭션 큐로부터 받습니다. 지정된 식별자가 들어 있는 메시지가 큐에 현재 없는 경우에는 바로 예외가 발생합니다.</target>       </trans-unit>
        <trans-unit id="2564" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph> property matches the <ph id="ph3">&lt;paramref name="id" /&gt;</ph> parameter passed in.</source>
          <target state="translated">전달된 <ph id="ph3">&lt;paramref name="id" /&gt;</ph> 매개 변수와 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> 속성이 일치하는 <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>Use this method to read a message with a known identifier and remove it from the queue.</source>
          <target state="translated">이 메서드를 사용 하 여 알려진된 식별자를 갖는 메시지를 읽고 큐에서 제거 합니다.</target>       </trans-unit>
        <trans-unit id="2566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>This method throws an exception immediately if the message is not in the queue.</source>
          <target state="translated">이 메서드는 메시지 큐에 없는 경우 예외가 즉시 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="2567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given <ph id="ph2">`id`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에 메시지의 속성은 메시지 큐 엔터프라이즈 전체에서 고유는 주어진 <ph id="ph2">`id`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>Two other methods allow you to receive messages from a queue.</source>
          <target state="translated">다른 두 메서드를 사용 하는 큐에서 메시지를 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29&gt;</ph> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29&gt;</ph> 메서드를 사용 하는 승인, 보고서 또는 큐로 보낸 메시지 결과로 생성 된 응용 프로그램 생성 응답 메시지를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="2570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>To read a message with a specified identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 지정 된 식별자를 갖는 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> 메서드는 항상 반환 첫 번째 메시지는 큐에서 우선 순위가 높은 메시지가 큐에 도착 하지 않는 한 메서드에 대 한 후속 호출 동일한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="2584" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="id" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2585" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>The message with the specified <ph id="ph1">&lt;paramref name="id" /&gt;</ph> could not be found.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="id" /&gt;</ph>의 메시지를 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="2586" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2587" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph> of the message to receive.</source>
          <target state="translated">받을 메시지의 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2588" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> 개체</target>       </trans-unit>
        <trans-unit id="2589" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Receives the message that matches the given identifier (from a transactional queue) and immediately raises an exception if no message with the specified identifier currently exists in the queue.</source>
          <target state="translated">주어진 식별자를 갖는 메시지를 트랜잭션 큐로부터 받습니다. 지정된 식별자가 포함된 메시지가 큐에 현재 없는 경우에는 바로 예외가 발생합니다.</target>       </trans-unit>
        <trans-unit id="2590" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph> property matches the <ph id="ph3">&lt;paramref name="id" /&gt;</ph> parameter passed in.</source>
          <target state="translated">전달된 <ph id="ph3">&lt;paramref name="id" /&gt;</ph> 매개 변수와 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> 속성이 일치하는 <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Use this method to read a message with a known identifier and remove it from the queue, using the internal transaction context defined by the <ph id="ph1">`transaction`</ph> parameter.</source>
          <target state="translated">이 메서드를 사용 하 여 알려진된 식별자를 가진 포함 된 메시지에 정의 된 내부 트랜잭션 컨텍스트를 사용 하 여 큐에서 제거 하는 <ph id="ph1">`transaction`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>This method throws an exception immediately if the message is not in the queue</source>
          <target state="translated">이 메서드에서 예외가 throw 즉시 메시지 큐에 없는 경우</target>       </trans-unit>
        <trans-unit id="2593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given <ph id="ph2">`id`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에 메시지의 속성은 메시지 큐 엔터프라이즈 전체에서 고유는 주어진 <ph id="ph2">`id`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
          <target state="translated">트랜잭션 큐에서이 메서드는, 때문에 받은 메시지가 반환 됩니다 큐에 트랜잭션이 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="2595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
          <target state="translated">메시지는 영구적으로 제거 되지 큐에서 트랜잭션이 커밋될 때까지 합니다.</target>       </trans-unit>
        <trans-unit id="2596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Two other methods allow you to receive messages from a queue.</source>
          <target state="translated">다른 두 메서드를 사용 하는 큐에서 메시지를 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29&gt;</ph> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29&gt;</ph> 메서드를 사용 하는 승인, 보고서 또는 큐로 보낸 메시지 결과로 생성 된 응용 프로그램 생성 응답 메시지를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="2598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>To read a message with a specified identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 지정 된 식별자를 갖는 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> 메서드는 항상 반환 첫 번째 메시지는 큐에서 우선 순위가 높은 메시지가 큐에 도착 하지 않는 한 메서드에 대 한 후속 호출 동일한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph>.</source>
          <target state="translated">에 대 한 호출에서 반환 된 메시지와 관련 된 트랜잭션 컨텍스트가 없는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> 트랜잭션이 중단 된 경우 롤백될 수, 큐에 메시지를 제거 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.Messaging.MessageQueueTransaction%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.Messaging.MessageQueueTransaction%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="2614" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;paramref name="id" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2615" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2616" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;paramref name="transaction" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transaction" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2617" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The message with the specified <ph id="ph1">&lt;paramref name="id" /&gt;</ph> could not be found.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="id" /&gt;</ph>의 메시지를 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="2618" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>The queue is non-transactional.</source>
          <target state="translated">비트랜잭션 큐입니다.</target>       </trans-unit>
        <trans-unit id="2619" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2620" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2621" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph> of the message to receive.</source>
          <target state="translated">받을 메시지의 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2622" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> values, describing the type of transaction context to associate with the message.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> 값 중 하나로, 메시지와 연결할 트랜잭션 컨텍스트 형식을 설명합니다.</target>       </trans-unit>
        <trans-unit id="2623" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Receives the message that matches the given identifier and immediately raises an exception if no message with the specified identifier currently exists in the queue.</source>
          <target state="translated">주어진 식별자를 갖는 메시지를 받습니다. 지정된 식별자가 포함된 메시지가 큐에 현재 없는 경우에는 바로 예외가 발생합니다.</target>       </trans-unit>
        <trans-unit id="2624" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph> property matches the <ph id="ph3">&lt;paramref name="id" /&gt;</ph> parameter passed in.</source>
          <target state="translated">전달된 <ph id="ph3">&lt;paramref name="id" /&gt;</ph> 매개 변수와 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> 속성이 일치하는 <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Use this method to read a message with a known identifier and remove it from the queue.</source>
          <target state="translated">이 메서드를 사용 하 여 알려진된 식별자를 갖는 메시지를 읽고 큐에서 제거 합니다.</target>       </trans-unit>
        <trans-unit id="2626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>This method throws an exception immediately if the message is not in the queue.</source>
          <target state="translated">이 메서드는 메시지 큐에 없는 경우 예외가 즉시 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="2627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Otherwise, the message is removed from the queue and returned to the application using a transaction context defined by the <ph id="ph1">`transactionType`</ph> parameter.</source>
          <target state="translated">메시지 큐에서 제거 되 고 정의 된 트랜잭션 컨텍스트를 사용 하 여 응용 프로그램에 반환 되는 그렇지 않은 경우는 <ph id="ph1">`transactionType`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
          <target state="translated">지정 <ph id="ph1">`Automatic`</ph> 에 대 한는 <ph id="ph2">`transactionType`</ph> 이미 있는 경우 외부 트랜잭션 컨텍스트 매개 변수를 사용 하는 메시지를 받을 원하는 스레드에 연결 된입니다.</target>       </trans-unit>
        <trans-unit id="2629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
          <target state="translated">지정 <ph id="ph1">`Single`</ph> 내부 단일 트랜잭션으로 메시지를 수신 하려는 경우.</target>       </trans-unit>
        <trans-unit id="2630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
          <target state="translated">지정할 수 있습니다 <ph id="ph1">`None`</ph> 트랜잭션 컨텍스트 외부에서 트랜잭션 큐에서 메시지를 수신 하려는 경우.</target>       </trans-unit>
        <trans-unit id="2631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given <ph id="ph2">`id`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에 메시지의 속성은 메시지 큐 엔터프라이즈 전체에서 고유는 주어진 <ph id="ph2">`id`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>If the message with the specified identifier is in a queue other than the one associated with this <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance, the message will not be found.</source>
          <target state="translated">지정한 식별자를 가진 메시지는 큐와 연결 된 것과 다른 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 인스턴스 메시지를 찾을 수는 있습니다.</target>       </trans-unit>
        <trans-unit id="2633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
          <target state="translated">이 메서드를 호출 하 여 트랜잭션 큐에서 메시지를 수신 하기, 받은 메시지에 반환 됩니다 큐 트랜잭션이 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="2634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
          <target state="translated">메시지는 영구적으로 제거 되지 큐에서 트랜잭션이 커밋될 때까지 합니다.</target>       </trans-unit>
        <trans-unit id="2635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Two other methods allow you to receive messages from a queue.</source>
          <target state="translated">다른 두 메서드를 사용 하는 큐에서 메시지를 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29&gt;</ph> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29&gt;</ph> 메서드를 사용 하는 승인, 보고서 또는 큐로 보낸 메시지 결과로 생성 된 응용 프로그램 생성 응답 메시지를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="2637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>To read a message with a specified identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 지정 된 식별자를 갖는 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> 메서드는 항상 반환 첫 번째 메시지는 큐에서 우선 순위가 높은 메시지가 큐에 도착 하지 않는 한 메서드에 대 한 후속 호출 동일한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph>.</source>
          <target state="translated">에 대 한 호출에서 반환 된 메시지와 관련 된 트랜잭션 컨텍스트가 없는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> 트랜잭션이 중단 된 경우 롤백될 수, 큐에 메시지를 제거 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.Messaging.MessageQueueTransactionType%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.Messaging.MessageQueueTransactionType%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="2653" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;paramref name="id" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2654" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The message with the specified <ph id="ph1">&lt;paramref name="id" /&gt;</ph> could not be found.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="id" /&gt;</ph>의 메시지를 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="2655" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> parameter is not one of the <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> members.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> 멤버 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="2656" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2657" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph> of the message to receive.</source>
          <target state="translated">받을 메시지의 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2658" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
          <target state="translated">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2659" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>Receives the message that matches the given identifier (from a non-transactional queue) and waits until either a message with the specified identifier is available in the queue or the time-out expires.</source>
          <target state="translated">주어진 식별자를 갖는 메시지를 비트랜잭션 큐로부터 받고, 지정된 식별자가 포함된 메시지를 큐에서 사용할 수 있거나 제한 시간이 만료될 때까지 대기합니다.</target>       </trans-unit>
        <trans-unit id="2660" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph> property matches the <ph id="ph3">&lt;paramref name="id" /&gt;</ph> parameter passed in.</source>
          <target state="translated">전달된 <ph id="ph3">&lt;paramref name="id" /&gt;</ph> 매개 변수와 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> 속성이 일치하는 <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>Use this method to read a message with a known identifier and remove it from the queue.</source>
          <target state="translated">이 메서드를 사용 하 여 알려진된 식별자를 갖는 메시지를 읽고 큐에서 제거 합니다.</target>       </trans-unit>
        <trans-unit id="2662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>This method returns immediately if the message with the identifier specified by the <ph id="ph1">`id`</ph> parameter is in the queue.</source>
          <target state="translated">이 메서드는 식별자를 가진 메시지에 지정 된 즉시 반환는 <ph id="ph1">`id`</ph> 매개 변수는 큐에 들어갑니다.</target>       </trans-unit>
        <trans-unit id="2663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>Otherwise, the method waits the given period of time for a new message to arrive.</source>
          <target state="translated">그렇지 않으면 메서드는 도착 하는 데 새 메시지에 대해 지정 된 기간을 대기 합니다.</target>       </trans-unit>
        <trans-unit id="2664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>If a new message does not arrive before the time-out expires, an exception is thrown.</source>
          <target state="translated">제한 시간이 만료 되기 전에 새 메시지가 도착 하지 않으면, 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="2665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">`timeout`</ph> parameter does not specify the total running time for this method.</source>
          <target state="translated"><ph id="ph1">`timeout`</ph> 매개 변수는 총 실행이 메서드에 대 한 시간을 지정 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>Rather, it specifies the time to wait for a new message to arrive in the queue.</source>
          <target state="translated">새 메시지가 큐에 도착할 때까지 대기 하는 시간을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="2667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>Each time a new message arrives, this method examines the <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> of the new message to see if it matches the <ph id="ph2">`id`</ph> parameter.</source>
          <target state="translated">될 때마다 새 메시지가 도착 하면이 메서드는 <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> 일치 하는지 확인 하는 새 메시지는 <ph id="ph2">`id`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>If not, this method starts the time-out period over and waits for another new message to arrive.</source>
          <target state="translated">그렇지 않으면이 메서드를 통해 제한 시간을 시작 하 고 다른 새 메시지가 도착할 때까지 대기 합니다.</target>       </trans-unit>
        <trans-unit id="2669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> matches the <ph id="ph2">`id`</ph> parameter.</source>
          <target state="translated">따라서 새 메시지 시간 제한 기간 내에 도착 하는 데 계속 것이 제한 된 시간까지 또는 해당 메시지가 도착할 때까지 무기한으로 실행을 계속 하려면이 메서드 <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> 일치는 <ph id="ph2">`id`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given <ph id="ph2">`id`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에 메시지의 속성은 메시지 큐 엔터프라이즈 전체에서 고유는 주어진 <ph id="ph2">`id`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>Use this overload of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> when it is acceptable for the current thread to be blocked as long as new messages continue to arrive in the queue within the time-out period specified by the <ph id="ph2">`timeout`</ph> parameter.</source>
          <target state="translated">이 오버 로드를 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> 것이 현재 스레드를 차단 하 여 새 메시지에 지정한 제한 시간 내에 큐에 도착 계속으로 허용 되는 <ph id="ph2">`timeout`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>The thread will be blocked for at least the given period of time, or indefinitely if you specified the value <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> for the <ph id="ph2">`timeout`</ph> parameter, or if new messages continue to arrive in the queue within the time-out period specified by the <ph id="ph3">`timeout`</ph> parameter.</source>
          <target state="translated">스레드가 차단 됩니다 이상, 또는 무한정 지정된 된 기간 값을 지정한 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> 에 대 한는 <ph id="ph2">`timeout`</ph> 매개 변수를 새 메시지가 계속 하 여 지정 된 제한 시간 내에 큐에 도착 하는 경우 또는 <ph id="ph3">`timeout`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>Two other methods allow you to receive messages from a queue.</source>
          <target state="translated">다른 두 메서드를 사용 하는 큐에서 메시지를 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29&gt;</ph> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29&gt;</ph> 메서드를 사용 하는 승인, 보고서 또는 큐로 보낸 메시지 결과로 생성 된 응용 프로그램 생성 응답 메시지를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="2675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>To read a message with a specified identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 지정 된 식별자를 갖는 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> 메서드는 항상 반환 첫 번째 메시지는 큐에서 우선 순위가 높은 메시지가 큐에 도착 하지 않는 한 메서드에 대 한 후속 호출 동일한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="2689" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;paramref name="id" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2690" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid, possibly <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is less than <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우. <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>이 <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>보다 작거나 <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>보다 클 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2691" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>A message with the specified <ph id="ph1">&lt;paramref name="id" /&gt;</ph> did not arrive in the queue before the time-out expired.</source>
          <target state="translated">제한 시간이 만료되기 전에 <ph id="ph1">&lt;paramref name="id" /&gt;</ph>가 지정된 메시지가 큐에 도착하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="2692" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2693" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2694" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph> of the message to receive.</source>
          <target state="translated">받을 메시지의 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2695" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
          <target state="translated">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2696" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> 개체</target>       </trans-unit>
        <trans-unit id="2697" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Receives the message that matches the given identifier (from a transactional queue) and waits until either a message with the specified identifier is available in the queue or the time-out expires.</source>
          <target state="translated">주어진 식별자를 갖는 메시지를 트랜잭션 큐로부터 받고, 지정된 식별자가 포함된 메시지를 큐에서 사용할 수 있거나 제한 시간이 만료될 때까지 대기합니다.</target>       </trans-unit>
        <trans-unit id="2698" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph> property matches the <ph id="ph3">&lt;paramref name="id" /&gt;</ph> parameter passed in.</source>
          <target state="translated">전달된 <ph id="ph3">&lt;paramref name="id" /&gt;</ph> 매개 변수와 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> 속성이 일치하는 <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Use this method to read a message with a known identifier and remove it from the queue, using the internal transaction context defined by the <ph id="ph1">`transaction`</ph> parameter.</source>
          <target state="translated">이 메서드를 사용 하 여 알려진된 식별자를 가진 포함 된 메시지에 정의 된 내부 트랜잭션 컨텍스트를 사용 하 여 큐에서 제거 하는 <ph id="ph1">`transaction`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>This method returns immediately if the message with the identifier specified by the <ph id="ph1">`id`</ph> parameter is in the queue.</source>
          <target state="translated">이 메서드는 식별자를 가진 메시지에 지정 된 즉시 반환는 <ph id="ph1">`id`</ph> 매개 변수는 큐에 들어갑니다.</target>       </trans-unit>
        <trans-unit id="2701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Otherwise, the method waits the given period of time for a new message to arrive.</source>
          <target state="translated">그렇지 않으면 메서드는 도착 하는 데 새 메시지에 대해 지정 된 기간을 대기 합니다.</target>       </trans-unit>
        <trans-unit id="2702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>If a new message does not arrive before the time-out expires, an exception is thrown.</source>
          <target state="translated">제한 시간이 만료 되기 전에 새 메시지가 도착 하지 않으면, 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="2703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">`timeout`</ph> parameter does not specify the total running time for this method.</source>
          <target state="translated"><ph id="ph1">`timeout`</ph> 매개 변수는 총 실행이 메서드에 대 한 시간을 지정 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Rather, it specifies the time to wait for a new message to arrive in the queue.</source>
          <target state="translated">새 메시지가 큐에 도착할 때까지 대기 하는 시간을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="2705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Each time a new message arrives, this method examines the <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> of the new message to see if it matches the <ph id="ph2">`id`</ph> parameter.</source>
          <target state="translated">될 때마다 새 메시지가 도착 하면이 메서드는 <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> 일치 하는지 확인 하는 새 메시지는 <ph id="ph2">`id`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>If not, this method starts the time-out period over and waits for another new message to arrive.</source>
          <target state="translated">그렇지 않으면이 메서드를 통해 제한 시간을 시작 하 고 다른 새 메시지가 도착할 때까지 대기 합니다.</target>       </trans-unit>
        <trans-unit id="2707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> matches the <ph id="ph2">`id`</ph> parameter.</source>
          <target state="translated">따라서 새 메시지 시간 제한 기간 내에 도착 하는 데 계속 것이 제한 된 시간까지 또는 해당 메시지가 도착할 때까지 무기한으로 실행을 계속 하려면이 메서드 <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> 일치는 <ph id="ph2">`id`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given <ph id="ph2">`id`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에 메시지의 속성은 메시지 큐 엔터프라이즈 전체에서 고유는 주어진 <ph id="ph2">`id`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Use this overload of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> when it is acceptable for the current thread to be blocked as long as new messages continue to arrive in the queue within the time-out period specified by the <ph id="ph2">`timeout`</ph> parameter.</source>
          <target state="translated">이 오버 로드를 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> 것이 현재 스레드를 차단 하 여 새 메시지에 지정한 제한 시간 내에 큐에 도착 계속으로 허용 되는 <ph id="ph2">`timeout`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The thread will be blocked for at least the given period of time, or indefinitely if you specified the value <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> for the <ph id="ph2">`timeout`</ph> parameter, or if new messages continue to arrive in the queue within the timeout period specified by the <ph id="ph3">`timeout`</ph> parameter.</source>
          <target state="translated">스레드가 차단 됩니다 이상, 또는 무한정 지정된 된 기간 값을 지정한 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> 에 대 한는 <ph id="ph2">`timeout`</ph> 매개 변수를 새 메시지에 지정 된 시간 제한 기간 내에 큐에 도착 계속 되 면 또는 <ph id="ph3">`timeout`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
          <target state="translated">트랜잭션 큐에서이 메서드는, 때문에 받은 메시지가 반환 됩니다 큐에 트랜잭션이 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="2712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
          <target state="translated">메시지는 영구적으로 제거 되지 큐에서 트랜잭션이 커밋될 때까지 합니다.</target>       </trans-unit>
        <trans-unit id="2713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Two other methods allow you to receive messages from a queue.</source>
          <target state="translated">다른 두 메서드를 사용 하는 큐에서 메시지를 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29&gt;</ph> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29&gt;</ph> 메서드를 사용 하는 승인, 보고서 또는 큐로 보낸 메시지 결과로 생성 된 응용 프로그램 생성 응답 메시지를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="2715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>To read a message with a specified identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 지정 된 식별자를 갖는 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message, unless a higher priority message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> 메서드는 항상 반환 첫 번째 메시지는 큐에서 우선 순위가 높은 메시지가 큐에 도착 하지 않는 한 메서드에 대 한 후속 호출 동일한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph>.</source>
          <target state="translated">에 대 한 호출에서 반환 된 메시지와 관련 된 트랜잭션 컨텍스트가 없는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> 트랜잭션이 중단 된 경우 롤백될 수, 큐에 메시지를 제거 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransaction%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransaction%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="2731" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;paramref name="id" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2732" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2733" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;paramref name="transaction" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transaction" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2734" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid, possibly <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is less than <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우. <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>이 <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>보다 작거나 <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>보다 클 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2735" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>A message with the specified <ph id="ph1">&lt;paramref name="id" /&gt;</ph> did not arrive in the queue before the time-out expired.</source>
          <target state="translated">제한 시간이 만료되기 전에 <ph id="ph1">&lt;paramref name="id" /&gt;</ph>가 지정된 메시지가 큐에 도착하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="2736" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2737" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>The queue is non-transactional.</source>
          <target state="translated">비트랜잭션 큐입니다.</target>       </trans-unit>
        <trans-unit id="2738" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2739" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2740" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph> of the message to receive.</source>
          <target state="translated">받을 메시지의 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2741" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that indicates the time to wait until a new message is available for inspection.</source>
          <target state="translated">새 메시지를 검사할 수 있을 때까지 기다리는 시간을 나타내는 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2742" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> values, describing the type of transaction context to associate with the message.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> 값 중 하나로, 메시지와 연결할 트랜잭션 컨텍스트 형식을 설명합니다.</target>       </trans-unit>
        <trans-unit id="2743" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Receives the message that matches the given identifier and waits until either a message with the specified identifier is available in the queue or the time-out expires.</source>
          <target state="translated">주어진 식별자를 갖는 메시지를 받고, 지정된 식별자가 포함된 메시지를 큐에서 사용할 수 있거나 제한 시간이 만료될 때까지 대기합니다.</target>       </trans-unit>
        <trans-unit id="2744" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph> property matches the <ph id="ph3">&lt;paramref name="id" /&gt;</ph> parameter passed in.</source>
          <target state="translated">전달된 <ph id="ph3">&lt;paramref name="id" /&gt;</ph> 매개 변수와 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> 속성이 일치하는 <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Id" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Use this method to read a message with a known identifier and remove it from the queue.</source>
          <target state="translated">이 메서드를 사용 하 여 알려진된 식별자를 갖는 메시지를 읽고 큐에서 제거 합니다.</target>       </trans-unit>
        <trans-unit id="2746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>This method returns immediately if the message with the identifier specified by the <ph id="ph1">`id`</ph> parameter is in the queue, using a transaction context defined by the <ph id="ph2">`transactionType`</ph> parameter.</source>
          <target state="translated">이 메서드는 식별자를 가진 메시지에 지정 된 즉시 반환는 <ph id="ph1">`id`</ph> 매개 변수는 정의 된 트랜잭션 컨텍스트를 사용 하 여 큐에는 <ph id="ph2">`transactionType`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Otherwise, the method waits the given period of time for a new message to arrive.</source>
          <target state="translated">그렇지 않으면 메서드는 도착 하는 데 새 메시지에 대해 지정 된 기간을 대기 합니다.</target>       </trans-unit>
        <trans-unit id="2748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>If a new message does not arrive before the time-out expires, an exception is thrown.</source>
          <target state="translated">제한 시간이 만료 되기 전에 새 메시지가 도착 하지 않으면, 예외가 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="2749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">`timeout`</ph> parameter does not specify the total running time for this method.</source>
          <target state="translated"><ph id="ph1">`timeout`</ph> 매개 변수는 총 실행이 메서드에 대 한 시간을 지정 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Rather, it specifies the time to wait for a new message to arrive in the queue.</source>
          <target state="translated">새 메시지가 큐에 도착할 때까지 대기 하는 시간을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="2751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Each time a new message arrives, this method examines the <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> of the new message to see if it matches the <ph id="ph2">`id`</ph> parameter.</source>
          <target state="translated">될 때마다 새 메시지가 도착 하면이 메서드는 <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> 일치 하는지 확인 하는 새 메시지는 <ph id="ph2">`id`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>If not, this method starts the time-out period over and waits for another new message to arrive.</source>
          <target state="translated">그렇지 않으면이 메서드를 통해 제한 시간을 시작 하 고 다른 새 메시지가 도착할 때까지 대기 합니다.</target>       </trans-unit>
        <trans-unit id="2753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> matches the <ph id="ph2">`id`</ph> parameter.</source>
          <target state="translated">따라서 새 메시지 시간 제한 기간 내에 도착 하는 데 계속 것이 제한 된 시간까지 또는 해당 메시지가 도착할 때까지 무기한으로 실행을 계속 하려면이 메서드 <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> 일치는 <ph id="ph2">`id`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
          <target state="translated">지정 <ph id="ph1">`Automatic`</ph> 에 대 한는 <ph id="ph2">`transactionType`</ph> 이미 있는 경우 외부 트랜잭션 컨텍스트 매개 변수를 사용 하는 메시지를 받을 원하는 스레드에 연결 된입니다.</target>       </trans-unit>
        <trans-unit id="2755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
          <target state="translated">지정 <ph id="ph1">`Single`</ph> 내부 단일 트랜잭션으로 메시지를 수신 하려는 경우.</target>       </trans-unit>
        <trans-unit id="2756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
          <target state="translated">지정할 수 있습니다 <ph id="ph1">`None`</ph> 트랜잭션 컨텍스트 외부에서 트랜잭션 큐에서 메시지를 수신 하려는 경우.</target>       </trans-unit>
        <trans-unit id="2757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given <ph id="ph2">`id`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에 메시지의 속성은 메시지 큐 엔터프라이즈 전체에서 고유는 주어진 <ph id="ph2">`id`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>If the message with the specified identifier is in a queue other than the one associated with this <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance, the message will not be found.</source>
          <target state="translated">지정한 식별자를 가진 메시지는 큐와 연결 된 것과 다른 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 인스턴스 메시지를 찾을 수는 있습니다.</target>       </trans-unit>
        <trans-unit id="2759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Use this overload of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> when it is acceptable for the current thread to be blocked as long as new messages continue to arrive in the queue within the time-out period specified by the <ph id="ph2">`timeout`</ph> parameter.</source>
          <target state="translated">이 오버 로드를 사용 하 여 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29&gt;</ph> 것이 현재 스레드를 차단 하 여 새 메시지에 지정한 제한 시간 내에 큐에 도착 계속으로 허용 되는 <ph id="ph2">`timeout`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The thread will be blocked for at least the given period of time, or indefinitely if you specified the value <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> for the <ph id="ph2">`timeout`</ph> parameter, or if new messages continue to arrive in the queue within the time-out period specified by the <ph id="ph3">`timeout`</ph> parameter.</source>
          <target state="translated">스레드가 차단 됩니다 이상, 또는 무한정 지정된 된 기간 값을 지정한 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.InfiniteTimeout&gt;</ph> 에 대 한는 <ph id="ph2">`timeout`</ph> 매개 변수를 새 메시지가 계속 하 여 지정 된 제한 시간 내에 큐에 도착 하는 경우 또는 <ph id="ph3">`timeout`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
          <target state="translated">이 메서드를 호출 하 여 트랜잭션 큐에서 메시지를 수신 하기, 받은 메시지에 반환 됩니다 큐 트랜잭션이 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="2762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
          <target state="translated">메시지는 영구적으로 제거 되지 큐에서 트랜잭션이 커밋될 때까지 합니다.</target>       </trans-unit>
        <trans-unit id="2763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Two other methods allow you to receive messages from a queue.</source>
          <target state="translated">다른 두 메서드를 사용 하는 큐에서 메시지를 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> method returns the first message in the queue, and the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29&gt;</ph> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph> 큐의 첫 번째 메시지를 반환 하는 메서드 및 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29&gt;</ph> 메서드를 사용 하는 승인, 보고서 또는 큐로 보낸 메시지 결과로 생성 된 응용 프로그램 생성 응답 메시지를 검색 합니다.</target>       </trans-unit>
        <trans-unit id="2765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>To read a message with a specified identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 지정 된 식별자를 갖는 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> 메서드는 항상 반환 첫 번째 메시지는 큐에서 우선 순위가 높은 메시지가 큐에 도착 하지 않는 한 메서드에 대 한 후속 호출 동일한 메시지를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph>.</source>
          <target state="translated">에 대 한 호출에서 반환 된 메시지와 관련 된 트랜잭션 컨텍스트가 없는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekById%28System.String%29&gt;</ph> 트랜잭션이 중단 된 경우 롤백될 수, 큐에 메시지를 제거 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransactionType%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransactionType%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="2781" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;paramref name="id" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="id" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2782" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The value specified for the <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> parameter is not valid, possibly <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is less than <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> 매개 변수에 지정된 값이 잘못된 경우. <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>이 <ph id="ph3">&lt;see cref="F:System.TimeSpan.Zero" /&gt;</ph>보다 작거나 <ph id="ph4">&lt;see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" /&gt;</ph>보다 클 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2783" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>A message with the specified <ph id="ph1">&lt;paramref name="id" /&gt;</ph> did not arrive in the queue before the time-out expired.</source>
          <target state="translated">제한 시간이 만료되기 전에 <ph id="ph1">&lt;paramref name="id" /&gt;</ph>가 지정된 메시지가 큐에 도착하지 않았습니다.</target>       </trans-unit>
        <trans-unit id="2784" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2785" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2786" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> parameter is not one of the <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> members.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> 멤버 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="2787" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>Introduced in MSMQ 3.0.</source>
          <target state="translated">MSMQ 3.0에서 도입되었습니다.</target>       </trans-unit>
        <trans-unit id="2788" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>Receives a specific message from the queue.</source>
          <target state="translated">큐에서 특정 메시지를 받습니다.</target>       </trans-unit>
        <trans-unit id="2789" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>The message can be specified by a lookup identifier or by its position at the front or end of the queue.</source>
          <target state="translated">메시지는 조회 식별자로 지정하거나 큐의 앞이나 뒤와 같은 위치로 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2790" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.LookupId" /&gt;</ph> of the message to receive.</source>
          <target state="translated">받을 메시지의 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.LookupId" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2791" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>Introduced in MSMQ 3.0.</source>
          <target state="translated">MSMQ 3.0에서 도입되었습니다.</target>       </trans-unit>
        <trans-unit id="2792" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>Receives the message that matches the given lookup identifier from a non-transactional queue.</source>
          <target state="translated">비트랜잭션 큐에서 지정된 조회 식별자를 갖는 메시지를 받습니다.</target>       </trans-unit>
        <trans-unit id="2793" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.LookupId" /&gt;</ph> property matches the <ph id="ph3">&lt;paramref name="lookupId" /&gt;</ph> parameter passed in.</source>
          <target state="translated">전달된 <ph id="ph3">&lt;paramref name="lookupId" /&gt;</ph> 매개 변수와 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> 속성이 일치하는 <ph id="ph2">&lt;see cref="P:System.Messaging.Message.LookupId" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="2794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>Use this method to read a message with a known lookup identifier and remove it from the queue.</source>
          <target state="translated">이 메서드를 사용 하 여 알려진된 조회 식별자를 갖는 메시지를 큐에서 제거 합니다.</target>       </trans-unit>
        <trans-unit id="2795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>This method throws an exception immediately if the message is not in the queue.</source>
          <target state="translated">이 메서드는 메시지 큐에 없는 경우 예외가 즉시 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="2796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.LookupId%2A&gt;</ph> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given <ph id="ph2">`lookupId`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message.LookupId%2A&gt;</ph> 메시지의 속성은 큐에 고유한 해당 메시지가 있는 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에는 주어진 <ph id="ph2">`lookupId`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>To read a message with a specified lookup identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph> method.</source>
          <target state="translated">지정한 lookup 식별자와 메시지를 읽으려면 큐에서 제거 하지 않고, 사용 된 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2809" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>MSMQ 3.0 is not installed.</source>
          <target state="translated">MSMQ 3.0이 설치되어 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="2810" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>The message with the specified <ph id="ph1">&lt;paramref name="lookupId" /&gt;</ph> could not be found.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="lookupId" /&gt;</ph>의 메시지를 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="2811" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2812" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageLookupAction" /&gt;</ph> values, specifying how the message is read in the queue.</source>
          <target state="translated">큐에서 메시지를 읽는 방법을 지정하는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageLookupAction" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="2813" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>Specify one of the following:</source>
          <target state="translated">다음 중 하나를 지정합니다.</target>       </trans-unit>
        <trans-unit id="2814" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source><ph id="ph1">&lt;see langword="MessageLookupAction.Current" /&gt;</ph>: Receives the message specified by <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept> and removes it from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="MessageLookupAction.Current" /&gt;</ph>: <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept>로 지정된 메시지를 받고 큐에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="2815" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source><ph id="ph1">&lt;see langword="MessageLookupAction.Next" /&gt;</ph>: Receives the message following the message specified by <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept> and removes it from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="MessageLookupAction.Next" /&gt;</ph>: <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept>로 지정된 메시지의 뒤에 있는 메시지를 받고 큐에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="2816" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source><ph id="ph1">&lt;see langword="MessageLookupAction.Previous" /&gt;</ph>: Receives the message preceding the message specified by <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept> and removes it from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="MessageLookupAction.Previous" /&gt;</ph>: <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept>로 지정된 메시지의 앞에 있는 메시지를 받고 큐에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="2817" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source><ph id="ph1">&lt;see langword="MessageLookupAction.First" /&gt;</ph>: Receives the first message in the queue and removes it from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="MessageLookupAction.First" /&gt;</ph>: 큐에 있는 첫 번째 메시지를 받고 큐에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="2818" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept> parameter must be set to 0.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept> 매개 변수를 0으로 설정해야 합니다.</target>       </trans-unit>
        <trans-unit id="2819" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source><ph id="ph1">&lt;see langword="MessageLookupAction.Last" /&gt;</ph>: Receives the last message in the queue and removes it from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="MessageLookupAction.Last" /&gt;</ph>: 큐에 있는 마지막 메시지를 받고 큐에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="2820" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept> parameter must be set to 0.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept> 매개 변수를 0으로 설정해야 합니다.</target>       </trans-unit>
        <trans-unit id="2821" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.LookupId" /&gt;</ph> of the message to receive, or 0.</source>
          <target state="translated">0을 수신할 메시지의 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.LookupId" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2822" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>0 is used when accessing the first or last message in the queue.</source>
          <target state="translated">0은 큐에 있는 첫 번째 또는 마지막 메시지에 액세스할 때 사용됩니다.</target>       </trans-unit>
        <trans-unit id="2823" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> 개체</target>       </trans-unit>
        <trans-unit id="2824" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>Introduced in MSMQ 3.0.</source>
          <target state="translated">MSMQ 3.0에서 도입되었습니다.</target>       </trans-unit>
        <trans-unit id="2825" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>Receives a specific message from a transactional queue.</source>
          <target state="translated">트랜잭션 큐에서 특정 메시지를 받습니다.</target>       </trans-unit>
        <trans-unit id="2826" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>The message can be specified by a lookup identifier or by its position at the front or end of the queue.</source>
          <target state="translated">메시지는 조회 식별자로 지정하거나 큐의 앞이나 뒤와 같은 위치로 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2827" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> specified by the <ph id="ph2">&lt;paramref name="lookupId" /&gt;</ph> and <ph id="ph3">&lt;paramref name="action" /&gt;</ph> parameters passed in.</source>
          <target state="translated">전달된 <ph id="ph2">&lt;paramref name="lookupId" /&gt;</ph> 및 <ph id="ph3">&lt;paramref name="action" /&gt;</ph> 매개 변수로 지정된 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>Use this method to read a message with a known lookup identifier and remove it from the queue, using a transaction context defined by the <ph id="ph1">`transaction`</ph> parameter.</source>
          <target state="translated">이 메서드를 사용 하 여 알려진된 조회 식별자를 갖는 메시지 정의 된 트랜잭션 컨텍스트를 사용 하 여 큐에서 제거 하는 <ph id="ph1">`transaction`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>This method throws an exception immediately if the message is not in the queue.</source>
          <target state="translated">이 메서드는 메시지 큐에 없는 경우 예외가 즉시 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="2830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.LookupId%2A&gt;</ph> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given <ph id="ph2">`lookupId`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message.LookupId%2A&gt;</ph> 메시지의 속성은 큐에 고유한 해당 메시지가 있는 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에는 주어진 <ph id="ph2">`lookupId`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
          <target state="translated">트랜잭션 큐에서이 메서드는, 때문에 받은 메시지가 반환 됩니다 큐에 트랜잭션이 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="2832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
          <target state="translated">메시지는 영구적으로 제거 되지 큐에서 트랜잭션이 커밋될 때까지 합니다.</target>       </trans-unit>
        <trans-unit id="2833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>To read a message with a specified identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 지정 된 식별자를 갖는 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph>.</source>
          <target state="translated">에 대 한 호출에서 반환 된 메시지와 관련 된 트랜잭션 컨텍스트가 없는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph> does not remove any messages from the queue, there would be nothing to roll back if the transaction were aborted.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph> 트랜잭션이 중단 된 경우 롤백될 수, 큐에서 메시지를 제거 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2847" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>MSMQ 3.0 is not installed.</source>
          <target state="translated">MSMQ 3.0이 설치되어 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="2848" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>The message with the specified <ph id="ph1">&lt;paramref name="lookupId" /&gt;</ph> could not be found.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="lookupId" /&gt;</ph>의 메시지를 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="2849" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2850" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2851" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>The queue is non-transactional.</source>
          <target state="translated">비트랜잭션 큐입니다.</target>       </trans-unit>
        <trans-unit id="2852" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;paramref name="action" /&gt;</ph> parameter is not one of the <ph id="ph2">&lt;see cref="T:System.Messaging.MessageLookupAction" /&gt;</ph> members.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="action" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="T:System.Messaging.MessageLookupAction" /&gt;</ph> 멤버 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="2853" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageLookupAction" /&gt;</ph> values, specifying how the message is read in the queue.</source>
          <target state="translated">큐에서 메시지를 읽는 방법을 지정하는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageLookupAction" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="2854" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>Specify one of the following:</source>
          <target state="translated">다음 중 하나를 지정합니다.</target>       </trans-unit>
        <trans-unit id="2855" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source><ph id="ph1">&lt;see langword="MessageLookupAction.Current" /&gt;</ph>: Receives the message specified by <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept> and removes it from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="MessageLookupAction.Current" /&gt;</ph>: <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept>로 지정된 메시지를 받고 큐에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="2856" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source><ph id="ph1">&lt;see langword="MessageLookupAction.Next" /&gt;</ph>: Receives the message following the message specified by <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept> and removes it from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="MessageLookupAction.Next" /&gt;</ph>: <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept>로 지정된 메시지의 뒤에 있는 메시지를 받고 큐에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="2857" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source><ph id="ph1">&lt;see langword="MessageLookupAction.Previous" /&gt;</ph>: Receives the message preceding the message specified by <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept> and removes it from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="MessageLookupAction.Previous" /&gt;</ph>: <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept>로 지정된 메시지의 앞에 있는 메시지를 받고 큐에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="2858" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source><ph id="ph1">&lt;see langword="MessageLookupAction.First" /&gt;</ph>: Receives the first message in the queue and removes it from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="MessageLookupAction.First" /&gt;</ph>: 큐에 있는 첫 번째 메시지를 받고 큐에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="2859" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept> parameter must be set to 0.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept> 매개 변수를 0으로 설정해야 합니다.</target>       </trans-unit>
        <trans-unit id="2860" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source><ph id="ph1">&lt;see langword="MessageLookupAction.Last" /&gt;</ph>: Receives the last message in the queue and removes it from the queue.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="MessageLookupAction.Last" /&gt;</ph>: 큐에 있는 마지막 메시지를 받고 큐에서 제거합니다.</target>       </trans-unit>
        <trans-unit id="2861" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept> parameter must be set to 0.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>lookupId<ept id="p1">&lt;/c&gt;</ept> 매개 변수를 0으로 설정해야 합니다.</target>       </trans-unit>
        <trans-unit id="2862" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.Message.LookupId" /&gt;</ph> of the message to receive, or 0.</source>
          <target state="translated">0을 수신할 메시지의 <ph id="ph1">&lt;see cref="P:System.Messaging.Message.LookupId" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2863" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>0 is used when accessing the first or last message in the queue.</source>
          <target state="translated">0은 큐에 있는 첫 번째 또는 마지막 메시지에 액세스할 때 사용됩니다.</target>       </trans-unit>
        <trans-unit id="2864" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> values, describing the type of transaction context to associate with the message.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> 값 중 하나로, 메시지와 연결할 트랜잭션 컨텍스트 형식을 설명합니다.</target>       </trans-unit>
        <trans-unit id="2865" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>Introduced in MSMQ 3.0.</source>
          <target state="translated">MSMQ 3.0에서 도입되었습니다.</target>       </trans-unit>
        <trans-unit id="2866" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>Receives a specific message from the queue, using the specified transaction context.</source>
          <target state="translated">지정된 트랜잭션 컨텍스트를 사용하여 큐에서 특정 메시지를 받습니다.</target>       </trans-unit>
        <trans-unit id="2867" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>The message can be specified by a lookup identifier or by its position at the front or end of the queue.</source>
          <target state="translated">메시지는 조회 식별자로 지정하거나 큐의 앞이나 뒤와 같은 위치로 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2868" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> specified by the <ph id="ph2">&lt;paramref name="action" /&gt;</ph> and <ph id="ph3">&lt;paramref name="lookupId" /&gt;</ph> parameters passed in.</source>
          <target state="translated">전달된 <ph id="ph2">&lt;paramref name="action" /&gt;</ph> 및 <ph id="ph3">&lt;paramref name="lookupId" /&gt;</ph> 매개 변수로 지정된 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="2869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>Use this method to read a message with a known lookup identifier and remove it from the queue, using a transaction context defined by the <ph id="ph1">`transactionType`</ph> parameter.</source>
          <target state="translated">이 메서드를 사용 하 여 알려진된 조회 식별자를 갖는 메시지 정의 된 트랜잭션 컨텍스트를 사용 하 여 큐에서 제거 하는 <ph id="ph1">`transactionType`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>This method throws an exception immediately if the message is not in the queue.</source>
          <target state="translated">이 메서드는 메시지 큐에 없는 경우 예외가 즉시 throw 됩니다.</target>       </trans-unit>
        <trans-unit id="2871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.LookupId%2A&gt;</ph> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given <ph id="ph2">`lookupId`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.Message.LookupId%2A&gt;</ph> 메시지의 속성은 큐에 고유한 해당 메시지가 있는 될 수 있도록 최대 하나의 메시지와 일치 하는 큐에는 주어진 <ph id="ph2">`lookupId`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>To read a message with a specified identifier without removing it from the queue, use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph> method.</source>
          <target state="translated">사용 하 여 큐에서 제거 하지 않고 지정 된 식별자를 갖는 메시지를 읽으려면는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="2873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>There is no transaction context associated with a message returned by a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph>.</source>
          <target state="translated">에 대 한 호출에서 반환 된 메시지와 관련 된 트랜잭션 컨텍스트가 없는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>Because <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph> does not remove any messages from the queue, there would be nothing to roll back if the transaction were aborted.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph> 트랜잭션이 중단 된 경우 롤백될 수, 큐에서 메시지를 제거 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="2875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</source>
          <target state="translated">지정 <ph id="ph1">`Automatic`</ph> 에 대 한는 <ph id="ph2">`transactionType`</ph> 이미 있는 경우 외부 트랜잭션 컨텍스트 매개 변수를 사용 하는 메시지를 받을 원하는 스레드에 연결 된입니다.</target>       </trans-unit>
        <trans-unit id="2876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to receive the message as a single internal transaction.</source>
          <target state="translated">지정 <ph id="ph1">`Single`</ph> 내부 단일 트랜잭션으로 메시지를 수신 하려는 경우.</target>       </trans-unit>
        <trans-unit id="2877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to receive a message from a transactional queue outside of a transaction context.</source>
          <target state="translated">지정할 수 있습니다 <ph id="ph1">`None`</ph> 트랜잭션 컨텍스트 외부에서 트랜잭션 큐에서 메시지를 수신 하려는 경우.</target>       </trans-unit>
        <trans-unit id="2878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</source>
          <target state="translated">이 메서드를 호출 하 여 트랜잭션 큐에서 메시지를 수신 하기, 받은 메시지에 반환 됩니다 큐 트랜잭션이 중단 됩니다.</target>       </trans-unit>
        <trans-unit id="2879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>The message is not permanently removed from the queue until the transaction is committed.</source>
          <target state="translated">메시지는 영구적으로 제거 되지 큐에서 트랜잭션이 커밋될 때까지 합니다.</target>       </trans-unit>
        <trans-unit id="2880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2891" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>MSMQ 3.0 is not installed.</source>
          <target state="translated">MSMQ 3.0이 설치되어 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="2892" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>The message with the specified <ph id="ph1">&lt;paramref name="lookupId" /&gt;</ph> could not be found.</source>
          <target state="translated">지정된 <ph id="ph1">&lt;paramref name="lookupId" /&gt;</ph>의 메시지를 찾을 수 없는 경우</target>       </trans-unit>
        <trans-unit id="2893" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2894" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;paramref name="action" /&gt;</ph> parameter is not one of the <ph id="ph2">&lt;see cref="T:System.Messaging.MessageLookupAction" /&gt;</ph> members.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="action" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="T:System.Messaging.MessageLookupAction" /&gt;</ph> 멤버 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="2895" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2896" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> parameter is not one of the <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> members.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> 멤버 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="2897" translate="yes" xml:space="preserve" uid="E:System.Messaging.MessageQueue.ReceiveCompleted">
          <source>Occurs when a message has been removed from the queue.</source>
          <target state="translated">큐에서 메시지가 제거된 경우에 발생합니다.</target>       </trans-unit>
        <trans-unit id="2898" translate="yes" xml:space="preserve" uid="E:System.Messaging.MessageQueue.ReceiveCompleted">
          <source>This event is raised by the asynchronous operation, <ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.BeginReceive" /&gt;</ph>.</source>
          <target state="translated">이 이벤트는 비동기 작업인 <ph id="ph1">&lt;see cref="M:System.Messaging.MessageQueue.BeginReceive" /&gt;</ph>에 의해 발생합니다.</target>       </trans-unit>
        <trans-unit id="2899" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Messaging.MessageQueue.ReceiveCompleted">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> is used in asynchronous processing to raise the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event when a message is available in the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 비동기 처리에서 발생 하는 데 사용 되는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트 메시지가 큐에서 사용할 수 있는 때입니다.</target>       </trans-unit>
        <trans-unit id="2900" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Messaging.MessageQueue.ReceiveCompleted">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> is used to complete the operation initiated by a call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> and peek the message when the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29&gt;</ph> 호출 하 여 시작 된 작업을 완료 하는 데는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 및 메시지 피킹 때는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="2901" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Messaging.MessageQueue.ReceiveCompleted">
          <source>When you create a <ph id="ph1">&lt;xref:System.Messaging.ReceiveCompletedEventHandler&gt;</ph> delegate, you identify the method that will handle the event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.ReceiveCompletedEventHandler&gt;</ph> 대리자를 만들 때, 이벤트를 처리할 메서드를 식별합니다.</target>       </trans-unit>
        <trans-unit id="2902" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Messaging.MessageQueue.ReceiveCompleted">
          <source>To associate the event with your event handler, add an instance of the delegate to the event.</source>
          <target state="translated">이벤트를 이벤트 처리기와 연결하려면 대리자의 인스턴스를 해당 이벤트에 추가합니다.</target>       </trans-unit>
        <trans-unit id="2903" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Messaging.MessageQueue.ReceiveCompleted">
          <source>The event handler is called whenever the event occurs, unless you remove the delegate.</source>
          <target state="translated">대리자를 제거하지 않는 경우 이벤트가 발생할 때마다 이벤트 처리기가 호출됩니다.</target>       </trans-unit>
        <trans-unit id="2904" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Messaging.MessageQueue.ReceiveCompleted">
          <source>For more information about event handler delegates, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">이벤트 처리기 대리자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>이벤트 처리 및 발생<ept id="p1">](~/docs/standard/events/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="2905" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Messaging.MessageQueue.ReceiveCompleted">
          <source>The following code example creates an event handler named <ph id="ph1">`MyReceiveCompleted`</ph>, attaches it to the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event handler delegate, and calls <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> to initiate an asynchronous receive operation on the queue that is located at the path ".\myQueue".</source>
          <target state="translated">다음 코드 예제에서는 라는 이벤트 처리기를 만들고 <ph id="ph1">`MyReceiveCompleted`</ph>에 연결는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트 처리기 대리자 및 호출 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 시작 하는 비동기 수신 작업의 경로에 있는 큐에 ". \myQueue"입니다.</target>       </trans-unit>
        <trans-unit id="2906" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Messaging.MessageQueue.ReceiveCompleted">
          <source>When a <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event is raised, the example receives the message and writes its body to the screen.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트가 발생 하면이 예제는 메시지를 받고 화면으로 해당 본문을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="2907" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Messaging.MessageQueue.ReceiveCompleted">
          <source>The example then calls <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> again to initiate a new asynchronous receive operation.</source>
          <target state="translated">이 예에서는 다음 호출 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 새 시작을 다시 비동기 수신 작업입니다.</target>       </trans-unit>
        <trans-unit id="2908" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Refresh">
          <source>Refreshes the properties presented by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> to reflect the current state of the resource.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 제공하는 속성을 새로 고쳐 리소스의 현재 상태를 반영합니다.</target>       </trans-unit>
        <trans-unit id="2909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Refresh">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Refresh%2A&gt;</ph> synchronizes the properties of a <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> with its associated Message Queuing server resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Refresh%2A&gt;</ph> 속성을 동기화 하는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 리소스가 있는 해당 연결 된 메시지 큐 서버입니다.</target>       </trans-unit>
        <trans-unit id="2910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Refresh">
          <source>If any property, such as <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph>, has changed on the server since the time the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> was created, <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.Refresh%2A&gt;</ph> updates the <ph id="ph5">&lt;xref:System.Messaging.MessageQueue&gt;</ph> with the new information.</source>
          <target state="translated">경우 속성을 같은 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Label%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Category%2A&gt;</ph>, 시간 이후 서버에서 변경 되었습니다는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 만들어진 <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.Refresh%2A&gt;</ph> 업데이트는 <ph id="ph5">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 새 정보로 합니다.</target>       </trans-unit>
        <trans-unit id="2911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Refresh">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Refresh">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Refresh">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Refresh">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Refresh">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Refresh">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Refresh">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Refresh">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Refresh">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Refresh">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Refresh">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Refresh">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Refresh%2A&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Refresh%2A&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="2923" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ResetPermissions">
          <source>Resets the permission list to the operating system's default values.</source>
          <target state="translated">사용 권한 목록을 운영 체제의 기본값으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="2924" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ResetPermissions">
          <source>Removes any queue permissions you have appended to the default list.</source>
          <target state="translated">기본 목록에 추가한 큐 권한을 모두 제거합니다.</target>       </trans-unit>
        <trans-unit id="2925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ResetPermissions">
          <source>When you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ResetPermissions%2A&gt;</ph>, you return the permission list to its default values.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ResetPermissions%2A&gt;</ph>를 기본값으로 사용 권한 목록을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="2926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ResetPermissions">
          <source>Generally, this grants the queue creator all permissions, and gives the group Everyone the following rights:</source>
          <target state="translated">일반적으로이 큐 작성자 모든 사용 권한을 부여 하 고 Everyone 그룹에 게 다음 권한을:</target>       </trans-unit>
        <trans-unit id="2927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ResetPermissions">
          <source>Get the properties of the queue.</source>
          <target state="translated">큐의 속성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="2928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ResetPermissions">
          <source>Get queue permissions.</source>
          <target state="translated">큐 권한을 얻습니다.</target>       </trans-unit>
        <trans-unit id="2929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ResetPermissions">
          <source>Write to the queue.</source>
          <target state="translated">큐에 쓸 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ResetPermissions">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ResetPermissions">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ResetPermissions">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ResetPermissions">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ResetPermissions">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ResetPermissions">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ResetPermissions">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ResetPermissions">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ResetPermissions">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ResetPermissions">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ResetPermissions">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.ResetPermissions">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ResetPermissions%2A&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ResetPermissions%2A&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="2942" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.ResetPermissions">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2943" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>Sends an object to a queue.</source>
          <target state="translated">큐에 개체를 보냅니다.</target>       </trans-unit>
        <trans-unit id="2944" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>The object to send to the queue.</source>
          <target state="translated">큐에 보낼 개체입니다.</target>       </trans-unit>
        <trans-unit id="2945" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>Sends an object to non-transactional queue referenced by this <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 비트랜잭션 큐에 개체를 보냅니다.</target>       </trans-unit>
        <trans-unit id="2946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>Use this overload to send a message that contains the <ph id="ph1">`obj`</ph> parameter to the queue referenced by the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.</source>
          <target state="translated">이 오버 로드를 사용 하 여 포함 된 메시지를 보낼는 <ph id="ph1">`obj`</ph> 가 참조 하는 큐에 대 한 매개 변수는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>The object you send to the queue can be a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> or any managed object.</source>
          <target state="translated">큐에 보내는 개체 수는 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> 또는 관리 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>If you send any object other than a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the object is serialized and inserted into the body of the message.</source>
          <target state="translated">이외의 다른 모든 개체를 보낼 경우는 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, 개체를 직렬화 하 고 메시지의 본문에 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="2949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>If you use this overload to send a message to a transactional queue, the message will be sent to the dead-letter queue.</source>
          <target state="translated">이 오버 로드를 사용 하 여 트랜잭션 큐로 메시지를 보내려고 하면 메시지가 배달 못 한 편지 큐로 보내집니다.</target>       </trans-unit>
        <trans-unit id="2950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>If you want the message to be part of a transaction that contains other messages, use an overload that takes a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransactionType&gt;</ph> as a parameter.</source>
          <target state="translated">사용 하는 오버 로드를 사용 하 여 메시지가 다른 메시지를 포함 하는 트랜잭션의 일부가 되도록 하려는 경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransactionType&gt;</ph> 매개 변수로 합니다.</target>       </trans-unit>
        <trans-unit id="2951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>If you do not set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> property before calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, the formatter defaults to the <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
          <target state="translated">설정 하지 않은 경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> 호출 하기 전에 속성 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, 기본적으로 포맷터는 <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> property applies to any object other than a <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> 속성이 아닌 다른 모든 개체에 적용 한 <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>If you specify, for example, a label or a priority using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> member, these values apply to any message that contains an object that is not of type <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> when your application sends it to the queue.</source>
          <target state="translated">지정 하면, 예를 들어, 레이블 또는 사용 하 여 우선 순위는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> 멤버를이 값은 다른 형식의 개체가 포함 된 모든 메시지에 적용 <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> 때 응용 프로그램 큐로 보냅니다는 합니다.</target>       </trans-unit>
        <trans-unit id="2954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>When sending a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the property values set for the <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> take precedence over <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> and the message's <ph id="ph4">&lt;xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType&gt;</ph> property takes precedence over the queue's <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">보낼 때는 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, 속성 값이 설정에 대 한는 <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> 우선 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> 및 메시지의 <ph id="ph4">&lt;xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType&gt;</ph> 속성 우선 순위가 큐의 <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="2955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>The following code example connects to a message queue and sends a message to the queue.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐에 연결 하 고 큐에 메시지를 보냅니다.</target>       </trans-unit>
        <trans-unit id="2967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>The following code example sends an application-defined <ph id="ph1">`Order`</ph> class to a queue and then receives a message from that queue.</source>
          <target state="translated">다음 코드 예제에서는 응용 프로그램 정의 보냅니다 <ph id="ph1">`Order`</ph> 큐에 클래스 및 해당 큐에서 메시지를 받습니다.</target>       </trans-unit>
        <trans-unit id="2968" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph> property has not been set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph> 속성이 설정되어 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="2969" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="2970" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="2971" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>The object to send to the queue.</source>
          <target state="translated">큐에 보낼 개체입니다.</target>       </trans-unit>
        <trans-unit id="2972" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> 개체</target>       </trans-unit>
        <trans-unit id="2973" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>Sends an object to the transactional queue referenced by this <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 트랜잭션 큐에 개체를 보냅니다.</target>       </trans-unit>
        <trans-unit id="2974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>Use this overload to send a message that contains the <ph id="ph1">`obj`</ph> parameter to the transactional queue referenced by the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, using an internal transaction context defined by the <ph id="ph3">`transaction`</ph> parameter.</source>
          <target state="translated">이 오버 로드를 사용 하 여 포함 된 메시지를 보낼는 <ph id="ph1">`obj`</ph> 가 참조 하는 트랜잭션 큐에 대 한 매개 변수는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>에 정의 된 내부 트랜잭션 컨텍스트를 사용 하 여는 <ph id="ph3">`transaction`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="2975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>The object you send to the queue can be a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> or any managed object.</source>
          <target state="translated">큐에 보내는 개체 수는 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> 또는 관리 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="2976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>If you send any object other than a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the object is serialized and inserted into the body of the message.</source>
          <target state="translated">이외의 다른 모든 개체를 보낼 경우는 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, 개체를 직렬화 하 고 메시지의 본문에 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="2977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>If you use this overload to send a message to a non-transactional queue, the message might be sent to the dead-letter queue without throwing an exception.</source>
          <target state="translated">비트랜잭션 큐로 메시지를 보내려고이 오버 로드를 사용 하는 경우 예외를 throw 하지 않고 배달 못 한 편지 큐로 메시지를 보낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="2978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>If you do not set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> property before calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, the formatter defaults to the <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
          <target state="translated">설정 하지 않은 경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> 호출 하기 전에 속성 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, 기본적으로 포맷터는 <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> property applies to any object other than a <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> 속성이 아닌 다른 모든 개체에 적용 한 <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="2980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>If you specify, for example, a label or a priority using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> member, these values apply to any message that contains an object that is not of type <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> when your application sends it to the queue.</source>
          <target state="translated">지정 하면, 예를 들어, 레이블 또는 사용 하 여 우선 순위는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> 멤버를이 값은 다른 형식의 개체가 포함 된 모든 메시지에 적용 <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> 때 응용 프로그램 큐로 보냅니다는 합니다.</target>       </trans-unit>
        <trans-unit id="2981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>When sending a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the property values set for the <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> take precedence over <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> and the message's <ph id="ph4">&lt;xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType&gt;</ph> property takes precedence over the queue's <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">보낼 때는 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, 속성 값이 설정에 대 한는 <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> 우선 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> 및 메시지의 <ph id="ph4">&lt;xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType&gt;</ph> 속성 우선 순위가 큐의 <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="2982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> is threading apartment aware, so if your apartment state is <ph id="ph2">`STA`</ph>, you cannot use the transaction in multiple threads.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> 스레딩 아파트를 인식 아파트 상태가 따라서 <ph id="ph2">`STA`</ph>, 트랜잭션이 여러 스레드를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="2983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>Visual Basic sets the state of the main thread to <ph id="ph1">`STA`</ph>, so you must apply the <ph id="ph2">&lt;xref:System.MTAThreadAttribute&gt;</ph> in the <ph id="ph3">`Main`</ph> subroutine.</source>
          <target state="translated">에 주 스레드의 상태를 설정 하는 Visual Basic <ph id="ph1">`STA`</ph>적용 해야 하므로 <ph id="ph2">&lt;xref:System.MTAThreadAttribute&gt;</ph> 에 <ph id="ph3">`Main`</ph> 서브루틴 합니다.</target>       </trans-unit>
        <trans-unit id="2984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>Otherwise, sending a transactional message using another thread throws a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueException&gt;</ph> exception.</source>
          <target state="translated">그렇지 않으면 다른 스레드를 사용하여 트랜잭션 메시지를 전달할 때 <ph id="ph1">&lt;xref:System.Messaging.MessageQueueException&gt;</ph> 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="2985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>You apply the <ph id="ph1">&lt;xref:System.MTAThreadAttribute&gt;</ph> by using the following fragment.</source>
          <target state="translated">적용 된 <ph id="ph1">&lt;xref:System.MTAThreadAttribute&gt;</ph> 다음 부분을 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="2986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="2987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="2988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="2989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="2990" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="2994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="2995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="2996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="2997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>The following code example sends a string to a transactional queue and then receives a message from that queue.</source>
          <target state="translated">다음 코드 예제에서는 문자열은 트랜잭션 큐로 보내고 해당 큐에서 메시지를 받습니다.</target>       </trans-unit>
        <trans-unit id="2998" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;paramref name="transaction" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transaction" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="2999" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph> property has not been set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph> 속성이 설정되어 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="3000" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3001" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>The Message Queuing application indicated an incorrect transaction use.</source>
          <target state="translated">메시지 큐 응용 프로그램에서 트랜잭션을 잘못 사용했음을 나타냈습니다.</target>       </trans-unit>
        <trans-unit id="3002" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3003" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="3004" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>The object to send to the queue.</source>
          <target state="translated">큐에 보낼 개체입니다.</target>       </trans-unit>
        <trans-unit id="3005" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> values, describing the type of transaction context to associate with the message.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> 값 중 하나로, 메시지와 연결할 트랜잭션 컨텍스트 형식을 설명합니다.</target>       </trans-unit>
        <trans-unit id="3006" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>Sends an object to the queue referenced by this <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 큐에 개체를 보냅니다.</target>       </trans-unit>
        <trans-unit id="3007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>Use this overload to send a message that contains the <ph id="ph1">`obj`</ph> parameter to the queue referenced by the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, using a transaction context defined by the <ph id="ph3">`transactionType`</ph> parameter.</source>
          <target state="translated">이 오버 로드를 사용 하 여 포함 된 메시지를 보낼는 <ph id="ph1">`obj`</ph> 가 참조 하는 큐에 대 한 매개 변수는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, 정의 된 트랜잭션 컨텍스트를 사용 하 여는 <ph id="ph3">`transactionType`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to send the message.</source>
          <target state="translated">지정 <ph id="ph1">`Automatic`</ph> 에 대 한는 <ph id="ph2">`transactionType`</ph> 이미 있는 경우 외부 트랜잭션 컨텍스트 매개 변수는 메시지를 보내는 데 사용할 스레드에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="3009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to send the message as a single internal transaction.</source>
          <target state="translated">지정 <ph id="ph1">`Single`</ph> 내부 단일 트랜잭션으로 메시지를 전송 하려는 경우.</target>       </trans-unit>
        <trans-unit id="3010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to send a transactional message to a non-transactional thread.</source>
          <target state="translated">지정할 수 있습니다 <ph id="ph1">`None`</ph> 비트랜잭션 스레드에 트랜잭션 메시지를 전송 하려는 경우.</target>       </trans-unit>
        <trans-unit id="3011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>The object you send to the queue can be a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> or any managed object.</source>
          <target state="translated">큐에 보내는 개체 수는 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> 또는 관리 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="3012" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>If you send any object other than a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the object is serialized and inserted into the body of the message.</source>
          <target state="translated">이외의 다른 모든 개체를 보낼 경우는 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, 개체를 직렬화 하 고 메시지의 본문에 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="3013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>If you do not set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> property before calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, the formatter defaults to the <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
          <target state="translated">설정 하지 않은 경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> 호출 하기 전에 속성 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, 기본적으로 포맷터는 <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> property applies to any object other than a <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> 속성이 아닌 다른 모든 개체에 적용 한 <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>If you specify, for example, a label or a priority using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> member, these values apply to any message that contains an object that is not of type <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> when your application sends it to the queue.</source>
          <target state="translated">지정 하면, 예를 들어, 레이블 또는 사용 하 여 우선 순위는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> 멤버를이 값은 다른 형식의 개체가 포함 된 모든 메시지에 적용 <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> 때 응용 프로그램 큐로 보냅니다는 합니다.</target>       </trans-unit>
        <trans-unit id="3016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>When sending a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the property values set for the <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> take precedence over <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> and the message's <ph id="ph4">&lt;xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType&gt;</ph> property takes precedence over the queue's <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">보낼 때는 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, 속성 값이 설정에 대 한는 <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> 우선 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> 및 메시지의 <ph id="ph4">&lt;xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType&gt;</ph> 속성 우선 순위가 큐의 <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="3019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="3020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="3021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="3025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="3026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.Messaging.MessageQueueTransactionType%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.Messaging.MessageQueueTransactionType%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="3029" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> parameter is not one of the <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> members.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> 멤버 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="3030" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph> property has not been set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph> 속성이 설정되어 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="3031" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3032" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="3033" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>The object to send to the queue.</source>
          <target state="translated">큐에 보낼 개체입니다.</target>       </trans-unit>
        <trans-unit id="3034" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>The label of the message.</source>
          <target state="translated">메시지의 레이블입니다.</target>       </trans-unit>
        <trans-unit id="3035" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>Sends an object to the non-transactional queue referenced by this <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> and specifies a label for the message.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 비트랜잭션 큐에 개체를 보내고 메시지에 레이블을 지정합니다.</target>       </trans-unit>
        <trans-unit id="3036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>Use this overload to send a message that contains the <ph id="ph1">`obj`</ph> parameter to the queue referenced by the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>.</source>
          <target state="translated">이 오버 로드를 사용 하 여 포함 된 메시지를 보낼는 <ph id="ph1">`obj`</ph> 가 참조 하는 큐에 대 한 매개 변수는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>With this overload, you can specify the string label that identifies the message.</source>
          <target state="translated">이 오버 로드를 가진 메시지를 식별 하는 문자열 레이블을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>The object you send to the queue can be a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, a structure, a data object, or any managed object.</source>
          <target state="translated">큐에 보내는 개체 수는 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, 구조체, 데이터 개체 또는 관리 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="3039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>If you send any object other than a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the object is serialized and inserted into the body of the message.</source>
          <target state="translated">이외의 다른 모든 개체를 보낼 경우는 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, 개체를 직렬화 하 고 메시지의 본문에 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="3040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>The message label is distinct from the message queue label, but both are application-dependent and have no inherit meaning to Message Queuing.</source>
          <target state="translated">메시지 레이블에 메시지 큐 레이블 다릅니다 되지만 둘 다 응용 프로그램에 따라 되어 상속 메시지 큐에 의미가 없습니다.</target>       </trans-unit>
        <trans-unit id="3041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>If you use this overload to send a message to a transactional queue, the message will be sent to the dead-letter queue.</source>
          <target state="translated">이 오버 로드를 사용 하 여 트랜잭션 큐로 메시지를 보내려고 하면 메시지가 배달 못 한 편지 큐로 보내집니다.</target>       </trans-unit>
        <trans-unit id="3042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>If you want the message to be part of a transaction that contains other messages, use an overload that takes a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransactionType&gt;</ph> as a parameter.</source>
          <target state="translated">사용 하는 오버 로드를 사용 하 여 메시지가 다른 메시지를 포함 하는 트랜잭션의 일부가 되도록 하려는 경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransactionType&gt;</ph> 매개 변수로 합니다.</target>       </trans-unit>
        <trans-unit id="3043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> property for this <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance must be specified before you send the message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Path%2A&gt;</ph> 이 대 한 속성 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 메시지를 보내기 전에 인스턴스를 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="3044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>If you do not set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> property before calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, the formatter defaults to the <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
          <target state="translated">설정 하지 않은 경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> 호출 하기 전에 속성 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, 기본적으로 포맷터는 <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> property applies to any object other than a <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> 속성이 아닌 다른 모든 개체에 적용 한 <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>If you specify, for example, a label or a priority using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> member, these values apply to any message that contains an object that is not of type <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> when your application sends it to the queue.</source>
          <target state="translated">지정 하면, 예를 들어, 레이블 또는 사용 하 여 우선 순위는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> 멤버를이 값은 다른 형식의 개체가 포함 된 모든 메시지에 적용 <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> 때 응용 프로그램 큐로 보냅니다는 합니다.</target>       </trans-unit>
        <trans-unit id="3047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>When sending a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the property values set for the <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> take precedence over <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> and the message's <ph id="ph4">&lt;xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType&gt;</ph> property takes precedence over the queue's <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">보낼 때는 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, 속성 값이 설정에 대 한는 <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> 우선 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> 및 메시지의 <ph id="ph4">&lt;xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType&gt;</ph> 속성 우선 순위가 큐의 <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="3050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="3051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="3052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="3056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="3057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="3060" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="label" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="label" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="3061" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph> property has not been set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph> 속성이 설정되어 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="3062" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3063" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="3064" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>The object to send to the queue.</source>
          <target state="translated">큐에 보낼 개체입니다.</target>       </trans-unit>
        <trans-unit id="3065" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>The label of the message.</source>
          <target state="translated">메시지의 레이블입니다.</target>       </trans-unit>
        <trans-unit id="3066" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransaction" /&gt;</ph> 개체</target>       </trans-unit>
        <trans-unit id="3067" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>Sends an object to the transactional queue referenced by this <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> and specifies a label for the message.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 트랜잭션 큐에 개체를 보내고 메시지에 레이블을 지정합니다.</target>       </trans-unit>
        <trans-unit id="3068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>Use this overload to send a message that contains the <ph id="ph1">`obj`</ph> parameter to the transactional queue referenced by the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, using an internal transaction context defined by the <ph id="ph3">`transaction`</ph> parameter.</source>
          <target state="translated">이 오버 로드를 사용 하 여 포함 된 메시지를 보낼는 <ph id="ph1">`obj`</ph> 가 참조 하는 트랜잭션 큐에 대 한 매개 변수는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>에 정의 된 내부 트랜잭션 컨텍스트를 사용 하 여는 <ph id="ph3">`transaction`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>With this overload, you can specify the string label that identifies the message.</source>
          <target state="translated">이 오버 로드를 가진 메시지를 식별 하는 문자열 레이블을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>The object you send to the queue can be a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, a structure, a data object, or any managed object.</source>
          <target state="translated">큐에 보내는 개체 수는 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, 구조체, 데이터 개체 또는 관리 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="3071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>If you send any object other than a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the object is serialized and inserted into the body of the message.</source>
          <target state="translated">이외의 다른 모든 개체를 보낼 경우는 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, 개체를 직렬화 하 고 메시지의 본문에 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="3072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>The message label is distinct from the message queue label, but both are application-dependent and have no inherit meaning to Message Queuing.</source>
          <target state="translated">메시지 레이블에 메시지 큐 레이블 다릅니다 되지만 둘 다 응용 프로그램에 따라 되어 상속 메시지 큐에 의미가 없습니다.</target>       </trans-unit>
        <trans-unit id="3073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>If you use this overload to send a message to a non-transactional queue, the message might be sent to the dead-letter queue without throwing an exception.</source>
          <target state="translated">비트랜잭션 큐로 메시지를 보내려고이 오버 로드를 사용 하는 경우 예외를 throw 하지 않고 배달 못 한 편지 큐로 메시지를 보낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>If you do not set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> property before calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, the formatter defaults to the <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
          <target state="translated">설정 하지 않은 경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> 호출 하기 전에 속성 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, 기본적으로 포맷터는 <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> property applies to any object other than a <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> 속성이 아닌 다른 모든 개체에 적용 한 <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>If you specify, for example, a label or a priority using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> member, these values apply to any message that contains an object that is not of type <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> when your application sends it to the queue.</source>
          <target state="translated">지정 하면, 예를 들어, 레이블 또는 사용 하 여 우선 순위는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> 멤버를이 값은 다른 형식의 개체가 포함 된 모든 메시지에 적용 <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> 때 응용 프로그램 큐로 보냅니다는 합니다.</target>       </trans-unit>
        <trans-unit id="3077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>When sending a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the property values set for the <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> take precedence over <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> and the message's <ph id="ph4">&lt;xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType&gt;</ph> property takes precedence over the queue's <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType&gt;</ph> property</source>
          <target state="translated">보낼 때는 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, 속성 값이 설정에 대 한는 <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> 우선 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> 및 메시지의 <ph id="ph4">&lt;xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType&gt;</ph> 속성 우선 순위가 큐의 <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType&gt;</ph> 속성</target>       </trans-unit>
        <trans-unit id="3078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> is threading apartment aware, so if your apartment state is <ph id="ph2">`STA`</ph>, you cannot use the transaction in multiple threads.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> 스레딩 아파트를 인식 아파트 상태가 따라서 <ph id="ph2">`STA`</ph>, 트랜잭션이 여러 스레드를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="3079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>Visual Basic sets the state of the main thread to <ph id="ph1">`STA`</ph>, so you must apply the <ph id="ph2">&lt;xref:System.MTAThreadAttribute&gt;</ph> in the <ph id="ph3">`Main`</ph> subroutine.</source>
          <target state="translated">에 주 스레드의 상태를 설정 하는 Visual Basic <ph id="ph1">`STA`</ph>적용 해야 하므로 <ph id="ph2">&lt;xref:System.MTAThreadAttribute&gt;</ph> 에 <ph id="ph3">`Main`</ph> 서브루틴 합니다.</target>       </trans-unit>
        <trans-unit id="3080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>Otherwise, sending a transactional message using another thread throws a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueException&gt;</ph> exception.</source>
          <target state="translated">그렇지 않으면 다른 스레드를 사용하여 트랜잭션 메시지를 전달할 때 <ph id="ph1">&lt;xref:System.Messaging.MessageQueueException&gt;</ph> 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="3081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>You apply the <ph id="ph1">&lt;xref:System.MTAThreadAttribute&gt;</ph> by using the following fragment.</source>
          <target state="translated">적용 된 <ph id="ph1">&lt;xref:System.MTAThreadAttribute&gt;</ph> 다음 부분을 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="3082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="3084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="3085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="3086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="3090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="3091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%2CSystem.Messaging.MessageQueueTransaction%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%2CSystem.Messaging.MessageQueueTransaction%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="3094" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;paramref name="label" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="label" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="3095" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3096" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;paramref name="transaction" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transaction" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="3097" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph> property has not been set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph> 속성이 설정되어 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="3098" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3099" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>The Message Queuing application indicated an incorrect transaction usage.</source>
          <target state="translated">메시지 큐 응용 프로그램에서 트랜잭션을 잘못 사용했음을 나타냈습니다.</target>       </trans-unit>
        <trans-unit id="3100" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3101" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="3102" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The object to send to the queue.</source>
          <target state="translated">큐에 보낼 개체입니다.</target>       </trans-unit>
        <trans-unit id="3103" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The label of the message.</source>
          <target state="translated">메시지의 레이블입니다.</target>       </trans-unit>
        <trans-unit id="3104" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> values, describing the type of transaction context to associate with the message.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> 값 중 하나로, 메시지와 연결할 트랜잭션 컨텍스트 형식을 설명합니다.</target>       </trans-unit>
        <trans-unit id="3105" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Sends an object to the queue referenced by this <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> and specifies a label for the message.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph>가 참조하는 큐에 개체를 보내고 메시지에 레이블을 지정합니다.</target>       </trans-unit>
        <trans-unit id="3106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Use this overload to send a message that contains the <ph id="ph1">`obj`</ph> parameter to the queue referenced by the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, using a transaction context defined by the <ph id="ph3">`transactionType`</ph> parameter.</source>
          <target state="translated">이 오버 로드를 사용 하 여 포함 된 메시지를 보낼는 <ph id="ph1">`obj`</ph> 가 참조 하는 큐에 대 한 매개 변수는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, 정의 된 트랜잭션 컨텍스트를 사용 하 여는 <ph id="ph3">`transactionType`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Automatic`</ph> for the <ph id="ph2">`transactionType`</ph> parameter if there is already an external transaction context attached to the thread that you want to use to send the message.</source>
          <target state="translated">지정 <ph id="ph1">`Automatic`</ph> 에 대 한는 <ph id="ph2">`transactionType`</ph> 이미 있는 경우 외부 트랜잭션 컨텍스트 매개 변수는 메시지를 보내는 데 사용할 스레드에 연결 합니다.</target>       </trans-unit>
        <trans-unit id="3108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Specify <ph id="ph1">`Single`</ph> if you want to send the message as a single internal transaction.</source>
          <target state="translated">지정 <ph id="ph1">`Single`</ph> 내부 단일 트랜잭션으로 메시지를 전송 하려는 경우.</target>       </trans-unit>
        <trans-unit id="3109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>You can specify <ph id="ph1">`None`</ph> if you want to send a transactional message to a non-transactional thread.</source>
          <target state="translated">지정할 수 있습니다 <ph id="ph1">`None`</ph> 비트랜잭션 스레드에 트랜잭션 메시지를 전송 하려는 경우.</target>       </trans-unit>
        <trans-unit id="3110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The object you send to the queue can be a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> or any managed object.</source>
          <target state="translated">큐에 보내는 개체 수는 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> 또는 관리 되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="3111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>If you send any object other than a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the object is serialized and inserted into the body of the message.</source>
          <target state="translated">이외의 다른 모든 개체를 보낼 경우는 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, 개체를 직렬화 하 고 메시지의 본문에 삽입 합니다.</target>       </trans-unit>
        <trans-unit id="3112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>With this overload, you can specify the string label that identifies the message.</source>
          <target state="translated">이 오버 로드를 가진 메시지를 식별 하는 문자열 레이블을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The message label is distinct from the message queue label, but both are application-dependent and have no inherit meaning to Message Queuing.</source>
          <target state="translated">메시지 레이블에 메시지 큐 레이블 다릅니다 되지만 둘 다 응용 프로그램에 따라 되어 상속 메시지 큐에 의미가 없습니다.</target>       </trans-unit>
        <trans-unit id="3114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>If you do not set the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> property before calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, the formatter defaults to the <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
          <target state="translated">설정 하지 않은 경우는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Formatter%2A&gt;</ph> 호출 하기 전에 속성 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%29&gt;</ph>, 기본적으로 포맷터는 <ph id="ph3">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> property applies to any object other than a <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> 속성이 아닌 다른 모든 개체에 적용 한 <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>If you specify, for example, a label or a priority using the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> member, these values apply to any message that contains an object that is not of type <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> when your application sends it to the queue.</source>
          <target state="translated">지정 하면, 예를 들어, 레이블 또는 사용 하 여 우선 순위는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> 멤버를이 값은 다른 형식의 개체가 포함 된 모든 메시지에 적용 <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> 때 응용 프로그램 큐로 보냅니다는 합니다.</target>       </trans-unit>
        <trans-unit id="3117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>When sending a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, the property values set for the <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> take precedence over <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph>, and the message's <ph id="ph4">&lt;xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType&gt;</ph> property takes precedence over the queue's <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">보낼 때는 <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, 속성 값이 설정에 대 한는 <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> 우선 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph>, 및 메시지의 <ph id="ph4">&lt;xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType&gt;</ph> 속성 우선 순위가 큐의 <ph id="ph5">&lt;xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="3120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="3121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="3122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="3126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="3127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%2CSystem.Messaging.MessageQueueTransactionType%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%2CSystem.Messaging.MessageQueueTransactionType%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="3130" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;paramref name="label" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="label" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="3131" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The Message Queuing application indicated an incorrect transaction usage.</source>
          <target state="translated">메시지 큐 응용 프로그램에서 트랜잭션을 잘못 사용했음을 나타냈습니다.</target>       </trans-unit>
        <trans-unit id="3132" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> parameter is not one of the <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> members.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transactionType" /&gt;</ph> 매개 변수가 <ph id="ph2">&lt;see cref="T:System.Messaging.MessageQueueTransactionType" /&gt;</ph> 멤버 중 하나가 아닌 경우</target>       </trans-unit>
        <trans-unit id="3133" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph> property has not been set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueue.Path" /&gt;</ph> 속성이 설정되어 있지 않은 경우</target>       </trans-unit>
        <trans-unit id="3134" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="3135" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="3136" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>Adds permissions to the current set.</source>
          <target state="translated">현재 집합에 사용 권한을 추가합니다.</target>       </trans-unit>
        <trans-unit id="3137" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueue">
          <source>This controls who has access rights to queue properties and messages in the queue.</source>
          <target state="translated">큐 속성 및 큐에 있는 메시지에 대해 액세스 권한이 있는 사용자를 제어합니다.</target>       </trans-unit>
        <trans-unit id="3138" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.AccessControlList" /&gt;</ph> that contains one or more access control entries that specify the trustees and the permissions to grant.</source>
          <target state="translated">부여할 사용 권한 및 트러스티를 지정하는 액세스 제어 항목이 하나 이상 포함된 <ph id="ph1">&lt;see cref="T:System.Messaging.AccessControlList" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3139" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Assigns access rights to the queue based on the contents of an access control list.</source>
          <target state="translated">액세스 제어 목록의 내용을 기준으로 큐에 액세스 권한을 할당합니다.</target>       </trans-unit>
        <trans-unit id="3140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Use this overload to grant, deny, or revoke rights by using a collection of access control entries to specify trustee and permissions information.</source>
          <target state="translated">이 오버 로드를 사용 하 여 권한을 부여, 거부 또는 트러스티 및 사용 권한 정보를 지정 하려면 액세스 제어 항목의 컬렉션을 사용 하 여 권한을 취소 합니다.</target>       </trans-unit>
        <trans-unit id="3141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>This is used, for example, to grant permissions to multiple users at the same time.</source>
          <target state="translated">이 데, 예를 들어 동시에 여러 사용자에 게 권한을 부여 합니다.</target>       </trans-unit>
        <trans-unit id="3142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>The trustee you specify when you construct the <ph id="ph1">`ace`</ph> parameter can be an individual user, a group of users, or a computer.</source>
          <target state="translated">생성할 때 지정 하는 트러스티는 <ph id="ph1">`ace`</ph> 매개 변수는 개별 사용자, 사용자, 그룹 또는 컴퓨터 일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>If the trustee is an individual, use the format <ph id="ph1">`DOMAIN`</ph><ph id="ph2">\\</ph><ph id="ph3">`user`</ph>.</source>
          <target state="translated">트러스티 개별 이면 형식을 사용 <ph id="ph1">`DOMAIN`</ph> <ph id="ph2">\\</ph> <ph id="ph3">`user`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>You can specify "." for the trustee to indicate the local computer.</source>
          <target state="translated">지정할 수 있습니다 "." 트러스티 로컬 컴퓨터에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="3145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>The permissions you assign through <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> add rights to the existing list.</source>
          <target state="translated">통해 할당 한 권한은 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> 기존 목록에 대 한 권한을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="3146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</source>
          <target state="translated">기본적으로 공용 또는 개인 큐의 작성자에 게 모든 권한을 큐 속성, 사용 권한, 가져오고, 큐에 쓸 수 있는 권한이 모든 사용자는 도메인 그룹입니다.</target>       </trans-unit>
        <trans-unit id="3147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>When you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph>, the user and permissions information is appended to the bottom of the existing list.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph>, 사용자 및 권한 정보가 기존 목록 맨 아래에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="3148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>The system examines each <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> in sequence until one of the following events occurs:</source>
          <target state="translated">각 시스템 검사 <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> 다음 이벤트 중 하나가 발생할 때까지 시퀀스에서:</target>       </trans-unit>
        <trans-unit id="3149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>An access-denied <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</source>
          <target state="translated">액세스 거부 됨 <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> 는 스레드의 액세스 토큰에 표시 된 트러스티 중 하나에 요청 된 액세스 권한을 명시적으로 거부 합니다.</target>       </trans-unit>
        <trans-unit id="3150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>One or more access-allowed <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</source>
          <target state="translated">하나 이상의 액세스가 허용 된 <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> 트러스티는 스레드의 액세스 토큰에 명시적으로 나열 된 모든 요청 된 액세스 권한 부여에 대 한 항목입니다.</target>       </trans-unit>
        <trans-unit id="3151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>All <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</source>
          <target state="translated">모든 <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> 가 항목을 체크 이며 여전히 하나 이상의 요청 된 액세스 권한이 허용 되지 않은 명시적으로,이 경우 암시적으로 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>When you construct the <ph id="ph1">`dacl`</ph> parameter, you add <ph id="ph2">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> instances to your <ph id="ph3">&lt;xref:System.Messaging.AccessControlList&gt;</ph> collection.</source>
          <target state="translated">생성할 때는 <ph id="ph1">`dacl`</ph> 추가 매개 변수를 <ph id="ph2">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> 인스턴스 여 <ph id="ph3">&lt;xref:System.Messaging.AccessControlList&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="3153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>When you construct each access control entry, you can specify generic or standard access rights.</source>
          <target state="translated">각 액세스 제어 항목을 생성할 때 일반 또는 표준 액세스 권한을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>The rights to a queue can be any combination of the following:</source>
          <target state="translated">큐에 대 한 권한은 다음의 조합이 포함 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Delete</source>
          <target state="translated">삭제</target>       </trans-unit>
        <trans-unit id="3156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Read Security</source>
          <target state="translated">보안 읽기</target>       </trans-unit>
        <trans-unit id="3157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Write Security</source>
          <target state="translated">보안 쓰기</target>       </trans-unit>
        <trans-unit id="3158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Synchronize</source>
          <target state="translated">동기화</target>       </trans-unit>
        <trans-unit id="3159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Modify Owner</source>
          <target state="translated">소유자 수정</target>       </trans-unit>
        <trans-unit id="3160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Read</source>
          <target state="translated">읽기</target>       </trans-unit>
        <trans-unit id="3161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Write</source>
          <target state="translated">Write</target>       </trans-unit>
        <trans-unit id="3162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Execute</source>
          <target state="translated">실행</target>       </trans-unit>
        <trans-unit id="3163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Required</source>
          <target state="translated">필수</target>       </trans-unit>
        <trans-unit id="3164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>All</source>
          <target state="translated">모두</target>       </trans-unit>
        <trans-unit id="3165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="3166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>These rights are a set of bit flags that you can combine using the OR bitwise operator.</source>
          <target state="translated">이러한 권한은 비트 OR 연산자를 사용 하 여 결합할 수 있는 비트 플래그 집합으로 구성 합니다.</target>       </trans-unit>
        <trans-unit id="3167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Full Control</source>
          <target state="translated">모든 권한</target>       </trans-unit>
        <trans-unit id="3168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Delete Message</source>
          <target state="translated">메시지를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="3169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Receive Message</source>
          <target state="translated">메시지를 수신 합니다.</target>       </trans-unit>
        <trans-unit id="3170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Peek Message</source>
          <target state="translated">메시지 엿보기</target>       </trans-unit>
        <trans-unit id="3171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Receive Journal Message</source>
          <target state="translated">저널 메시지 받기</target>       </trans-unit>
        <trans-unit id="3172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Get Queue Properties</source>
          <target state="translated">큐 속성</target>       </trans-unit>
        <trans-unit id="3173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Set Queue Properties</source>
          <target state="translated">큐 속성 설정</target>       </trans-unit>
        <trans-unit id="3174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Get Permissions</source>
          <target state="translated">사용 권한 가져오기</target>       </trans-unit>
        <trans-unit id="3175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Set Permissions</source>
          <target state="translated">사용 권한 설정</target>       </trans-unit>
        <trans-unit id="3176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Take Queue Ownership</source>
          <target state="translated">큐 소유권 가져오기</target>       </trans-unit>
        <trans-unit id="3177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Write Message</source>
          <target state="translated">메시지 작성</target>       </trans-unit>
        <trans-unit id="3178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="3180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="3181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="3182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="3186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="3187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="3189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%28System.Messaging.AccessControlList%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%28System.Messaging.AccessControlList%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="3190" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="3191" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueAccessControlEntry" /&gt;</ph> that specifies a user, an access type, and a permission type.</source>
          <target state="translated">사용자, 액세스 형식 및 사용 권한 형식을 지정하는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueAccessControlEntry" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3192" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>Assigns access rights to the queue based on the contents of an access control entry.</source>
          <target state="translated">액세스 제어 항목의 내용을 기준으로 큐에 액세스 권한을 할당합니다.</target>       </trans-unit>
        <trans-unit id="3193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>Use this overload to grant, deny, or revoke rights by using an access control entry to specify trustee and rights information.</source>
          <target state="translated">이 오버 로드를 사용 하 여 권한을 부여, 거부 또는 트러스티 및 권한 정보를 지정 하는 액세스 제어 항목을 사용 하 여 권한을 취소 합니다.</target>       </trans-unit>
        <trans-unit id="3194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>The trustee you specify when you construct the <ph id="ph1">`ace`</ph> parameter can be an individual user, a group of users, or a computer.</source>
          <target state="translated">생성할 때 지정 하는 트러스티는 <ph id="ph1">`ace`</ph> 매개 변수는 개별 사용자, 사용자, 그룹 또는 컴퓨터 일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>If the trustee is an individual, use the format <ph id="ph1">`DOMAIN`</ph><ph id="ph2">\\</ph><ph id="ph3">`user`</ph>.</source>
          <target state="translated">트러스티 개별 이면 형식을 사용 <ph id="ph1">`DOMAIN`</ph> <ph id="ph2">\\</ph> <ph id="ph3">`user`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>You can specify "." for the trustee to indicate the local computer.</source>
          <target state="translated">지정할 수 있습니다 "." 트러스티 로컬 컴퓨터에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="3197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>The permissions you assign through <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> add rights to the existing list.</source>
          <target state="translated">통해 할당 한 권한은 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> 기존 목록에 대 한 권한을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="3198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</source>
          <target state="translated">기본적으로 공용 또는 개인 큐의 작성자에 게 모든 권한을 큐 속성, 사용 권한, 가져오고, 큐에 쓸 수 있는 권한이 모든 사용자는 도메인 그룹입니다.</target>       </trans-unit>
        <trans-unit id="3199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>When you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph>, the user and permissions information is appended to the bottom of the existing list.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph>, 사용자 및 권한 정보가 기존 목록 맨 아래에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="3200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>The system examines each <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> in sequence until one of the following events occurs:</source>
          <target state="translated">각 시스템 검사 <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> 다음 이벤트 중 하나가 발생할 때까지 시퀀스에서:</target>       </trans-unit>
        <trans-unit id="3201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>An access-denied <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</source>
          <target state="translated">액세스 거부 됨 <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> 는 스레드의 액세스 토큰에 표시 된 트러스티 중 하나에 요청 된 액세스 권한을 명시적으로 거부 합니다.</target>       </trans-unit>
        <trans-unit id="3202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>One or more access-allowed <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</source>
          <target state="translated">하나 이상의 액세스가 허용 된 <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> 트러스티는 스레드의 액세스 토큰에 명시적으로 나열 된 모든 요청 된 액세스 권한 부여에 대 한 항목입니다.</target>       </trans-unit>
        <trans-unit id="3203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>All <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</source>
          <target state="translated">모든 <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> 가 항목을 체크 이며 여전히 하나 이상의 요청 된 액세스 권한이 허용 되지 않은 명시적으로,이 경우 암시적으로 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>The rights to a queue, which you specify in the <ph id="ph1">`rights`</ph> parameter when you construct your <ph id="ph2">&lt;xref:System.Messaging.MessageQueueAccessControlEntry&gt;</ph>, can be any combination of the following:</source>
          <target state="translated">지정 하는 큐에 대 한 권한을 <ph id="ph1">`rights`</ph> 매개 변수를 생성할 때 프로그램 <ph id="ph2">&lt;xref:System.Messaging.MessageQueueAccessControlEntry&gt;</ph>, 다음의 조합일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>Full Control</source>
          <target state="translated">모든 권한</target>       </trans-unit>
        <trans-unit id="3206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>Delete Message</source>
          <target state="translated">메시지를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="3207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>Receive Message</source>
          <target state="translated">메시지를 수신 합니다.</target>       </trans-unit>
        <trans-unit id="3208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>Peek Message</source>
          <target state="translated">메시지 엿보기</target>       </trans-unit>
        <trans-unit id="3209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>Receive Journal Message</source>
          <target state="translated">저널 메시지 받기</target>       </trans-unit>
        <trans-unit id="3210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>Get Queue Properties</source>
          <target state="translated">큐 속성</target>       </trans-unit>
        <trans-unit id="3211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>Set Queue Properties</source>
          <target state="translated">큐 속성 설정</target>       </trans-unit>
        <trans-unit id="3212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>Get Permissions</source>
          <target state="translated">사용 권한 가져오기</target>       </trans-unit>
        <trans-unit id="3213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>Set Permissions</source>
          <target state="translated">사용 권한 설정</target>       </trans-unit>
        <trans-unit id="3214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>Take Queue Ownership</source>
          <target state="translated">큐 소유권 가져오기</target>       </trans-unit>
        <trans-unit id="3215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>Write Message</source>
          <target state="translated">메시지 작성</target>       </trans-unit>
        <trans-unit id="3216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>The <ph id="ph1">`rights`</ph> parameter you specify in the constructor for the <ph id="ph2">`ace`</ph> parameter is a flag of the <ph id="ph3">&lt;xref:System.Messaging.MessageQueueAccessRights&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">`rights`</ph> 에 대 한 생성자에서 지정한 매개 변수는 <ph id="ph2">`ace`</ph> 매개 변수는의 플래그는 <ph id="ph3">&lt;xref:System.Messaging.MessageQueueAccessRights&gt;</ph> 열거형입니다.</target>       </trans-unit>
        <trans-unit id="3217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>It represents a set of bit flags that you can combine using the bitwise operator OR when you build the <ph id="ph1">`rights`</ph> parameter.</source>
          <target state="translated">비트 연산자를 사용 하 여 결합할 수 있는 비트 플래그 집합을 나타냅니다를 빌드할 때는 <ph id="ph1">`rights`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="3220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="3221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="3222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="3226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="3227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="3229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%28System.Messaging.MessageQueueAccessControlEntry%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%28System.Messaging.MessageQueueAccessControlEntry%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="3230" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="3231" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>The individual, group, or computer that gets additional rights to the queue.</source>
          <target state="translated">큐에 대한 추가 권한을 가져오는 개인, 그룹 또는 컴퓨터입니다.</target>       </trans-unit>
        <trans-unit id="3232" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueAccessRights" /&gt;</ph> that indicates the set of rights to the queue that Message Queuing assigns to the <bpt id="p1">&lt;c&gt;</bpt>user<ept id="p1">&lt;/c&gt;</ept> passed in.</source>
          <target state="translated">전달된 <bpt id="p1">&lt;c&gt;</bpt>사용자<ept id="p1">&lt;/c&gt;</ept>에 메시지 큐 서비스가 할당하는 큐에 대한 권한 집합을 나타내는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueAccessRights" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3233" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>Gives a computer, group, or user the specified access rights.</source>
          <target state="translated">지정된 액세스 권한을 컴퓨터, 그룹, 또는 사용자에게 부여합니다.</target>       </trans-unit>
        <trans-unit id="3234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>Use this overload to grant specified rights to an individual user.</source>
          <target state="translated">이 오버 로드를 사용 하 여 개별 사용자에 지정 된 권한을 부여 합니다.</target>       </trans-unit>
        <trans-unit id="3235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>The user can be any valid trustee, which includes individual users, groups of users, or a computer.</source>
          <target state="translated">사용자는 개별 사용자에 게, 사용자, 그룹 또는 컴퓨터를 포함 하는 모든 유효한 트러스티를 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>If the user is an individual, use the format <ph id="ph1">`DOMAIN`</ph><ph id="ph2">\\</ph><ph id="ph3">`user`</ph> for the <ph id="ph4">`user`</ph> parameter.</source>
          <target state="translated">사용자가 개인을 사용 하 여 형식을 <ph id="ph1">`DOMAIN`</ph> <ph id="ph2">\\</ph> <ph id="ph3">`user`</ph> 에 대 한는 <ph id="ph4">`user`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>You can specify "." for the <ph id="ph1">`user`</ph> parameter to indicate the local computer.</source>
          <target state="translated">지정할 수 있습니다 "."에 대 한는 <ph id="ph1">`user`</ph> 로컬 컴퓨터를 나타내기 위해 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>The permissions you assign through <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> add rights to the existing list.</source>
          <target state="translated">통해 할당 한 권한은 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> 기존 목록에 대 한 권한을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="3239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</source>
          <target state="translated">기본적으로 공용 또는 개인 큐의 작성자에 게 모든 권한을 큐 속성, 사용 권한, 가져오고, 큐에 쓸 수 있는 권한이 모든 사용자는 도메인 그룹입니다.</target>       </trans-unit>
        <trans-unit id="3240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>When you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph>, the user and permissions information is appended to the bottom of the existing list.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph>, 사용자 및 권한 정보가 기존 목록 맨 아래에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="3241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>The system examines each <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> in sequence until one of the following events occurs:</source>
          <target state="translated">각 시스템 검사 <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> 다음 이벤트 중 하나가 발생할 때까지 시퀀스에서:</target>       </trans-unit>
        <trans-unit id="3242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>An access-denied <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</source>
          <target state="translated">액세스 거부 됨 <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> 는 스레드의 액세스 토큰에 표시 된 트러스티 중 하나에 요청 된 액세스 권한을 명시적으로 거부 합니다.</target>       </trans-unit>
        <trans-unit id="3243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>One or more access-allowed <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</source>
          <target state="translated">하나 이상의 액세스가 허용 된 <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> 트러스티는 스레드의 액세스 토큰에 명시적으로 나열 된 모든 요청 된 액세스 권한 부여에 대 한 항목입니다.</target>       </trans-unit>
        <trans-unit id="3244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>All <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</source>
          <target state="translated">모든 <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> 가 항목을 체크 이며 여전히 하나 이상의 요청 된 액세스 권한이 허용 되지 않은 명시적으로,이 경우 암시적으로 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>The rights to a queue, specified in the <ph id="ph1">`rights`</ph> parameter, can be any combination of the following:</source>
          <target state="translated">에 지정 된 큐에 대 한 권한을 <ph id="ph1">`rights`</ph> 매개 변수를 다음의 조합일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>Full Control</source>
          <target state="translated">모든 권한</target>       </trans-unit>
        <trans-unit id="3247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>Delete Message</source>
          <target state="translated">메시지를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="3248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>Receive Message</source>
          <target state="translated">메시지를 수신 합니다.</target>       </trans-unit>
        <trans-unit id="3249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>Peek Message</source>
          <target state="translated">메시지 엿보기</target>       </trans-unit>
        <trans-unit id="3250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>Receive Journal Message</source>
          <target state="translated">저널 메시지 받기</target>       </trans-unit>
        <trans-unit id="3251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>Get Queue Properties</source>
          <target state="translated">큐 속성</target>       </trans-unit>
        <trans-unit id="3252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>Set Queue Properties</source>
          <target state="translated">큐 속성 설정</target>       </trans-unit>
        <trans-unit id="3253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>Get Permissions</source>
          <target state="translated">사용 권한 가져오기</target>       </trans-unit>
        <trans-unit id="3254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>Set Permissions</source>
          <target state="translated">사용 권한 설정</target>       </trans-unit>
        <trans-unit id="3255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>Take Queue Ownership</source>
          <target state="translated">큐 소유권 가져오기</target>       </trans-unit>
        <trans-unit id="3256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>Write Message</source>
          <target state="translated">메시지 작성</target>       </trans-unit>
        <trans-unit id="3257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueueAccessRights&gt;</ph> enumeration represents a set of bit flags that you can combine using the bitwise operator OR to build the <ph id="ph2">`rights`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueAccessRights&gt;</ph> 열거형은 빌드 또는 비트 연산자를 사용 하 여 결합할 수 있는 비트 플래그 집합 나타냅니다는 <ph id="ph2">`rights`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>With this overload, you can only grant permissions; you cannot revoke or deny them.</source>
          <target state="translated">이 오버 로드를 가진만 권한을 부여할 수 있습니다. 취소 하거나 거부할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="3259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>You must use a different overload to explicitly grant any <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntryType&gt;</ph> other than <ph id="ph2">`Allow`</ph>.</source>
          <target state="translated">명시적으로 부여 된 다른 오버 로드를 사용 해야 <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntryType&gt;</ph> 이외의 <ph id="ph2">`Allow`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="3260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="3262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="3263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="3264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="3268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="3269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="3271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%28System.String%2CSystem.Messaging.MessageQueueAccessRights%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%28System.String%2CSystem.Messaging.MessageQueueAccessRights%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="3272" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>The <ph id="ph1">&lt;paramref name="user" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="user" /&gt;</ph>이 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="3273" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="3274" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>The individual, group, or computer that gets additional rights to the queue.</source>
          <target state="translated">큐에 대한 추가 권한을 가져오는 개인, 그룹 또는 컴퓨터입니다.</target>       </trans-unit>
        <trans-unit id="3275" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueAccessRights" /&gt;</ph> that indicates the set of rights to the queue that Message Queuing assigns to the <bpt id="p1">&lt;c&gt;</bpt>user<ept id="p1">&lt;/c&gt;</ept> passed in.</source>
          <target state="translated">전달된 <bpt id="p1">&lt;c&gt;</bpt>사용자<ept id="p1">&lt;/c&gt;</ept>에 메시지 큐 서비스가 할당하는 큐에 대한 권한 집합을 나타내는 <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueAccessRights" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3276" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.AccessControlEntryType" /&gt;</ph> that specifies whether to grant, deny, or revoke the permissions specified by the <bpt id="p1">&lt;c&gt;</bpt>rights<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>rights<ept id="p1">&lt;/c&gt;</ept> 매개 변수로 지정된 사용 권한을 부여할지 거부할지 또는 해지할지를 지정하는 <ph id="ph1">&lt;see cref="T:System.Messaging.AccessControlEntryType" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3277" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>Gives a computer, group, or user the specified access rights, with the specified access control type (allow, deny, revoke, or set).</source>
          <target state="translated">지정된 액세스 제어 형식(예: 허용, 거부, 해지, 또는 설정)을 포함하여, 지정된 액세스 권한을 컴퓨터, 그룹 또는 사용자에게 제공합니다.</target>       </trans-unit>
        <trans-unit id="3278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>Use this overload to grant, deny, or revoke specified rights for an individual user.</source>
          <target state="translated">이 오버 로드를 사용 하 여 권한을 부여, 거부 또는 개별 사용자에 대 한 지정 된 권한을 취소 합니다.</target>       </trans-unit>
        <trans-unit id="3279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>The user can be any valid trustee, which includes individual users, groups of users, or a computer.</source>
          <target state="translated">사용자는 개별 사용자에 게, 사용자, 그룹 또는 컴퓨터를 포함 하는 모든 유효한 트러스티를 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>If the user is an individual, use the format <ph id="ph1">`DOMAIN`</ph><ph id="ph2">\\</ph><ph id="ph3">`user`</ph> for the <ph id="ph4">`user`</ph> parameter.</source>
          <target state="translated">사용자가 개인을 사용 하 여 형식을 <ph id="ph1">`DOMAIN`</ph> <ph id="ph2">\\</ph> <ph id="ph3">`user`</ph> 에 대 한는 <ph id="ph4">`user`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>You can specify "." for the <ph id="ph1">`user`</ph> parameter to indicate the local computer.</source>
          <target state="translated">지정할 수 있습니다 "."에 대 한는 <ph id="ph1">`user`</ph> 로컬 컴퓨터를 나타내기 위해 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>The permissions you assign through <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> add rights to the existing list.</source>
          <target state="translated">통해 할당 한 권한은 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph> 기존 목록에 대 한 권한을 추가 합니다.</target>       </trans-unit>
        <trans-unit id="3283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</source>
          <target state="translated">기본적으로 공용 또는 개인 큐의 작성자에 게 모든 권한을 큐 속성, 사용 권한, 가져오고, 큐에 쓸 수 있는 권한이 모든 사용자는 도메인 그룹입니다.</target>       </trans-unit>
        <trans-unit id="3284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>When you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph>, the user and permissions information is appended to the bottom of the existing list.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%2A&gt;</ph>, 사용자 및 권한 정보가 기존 목록 맨 아래에 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="3285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>The system examines each <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> in sequence until one of the following events occurs:</source>
          <target state="translated">각 시스템 검사 <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> 다음 이벤트 중 하나가 발생할 때까지 시퀀스에서:</target>       </trans-unit>
        <trans-unit id="3286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>An access-denied <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</source>
          <target state="translated">액세스 거부 됨 <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> 는 스레드의 액세스 토큰에 표시 된 트러스티 중 하나에 요청 된 액세스 권한을 명시적으로 거부 합니다.</target>       </trans-unit>
        <trans-unit id="3287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>One or more access-allowed <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</source>
          <target state="translated">하나 이상의 액세스가 허용 된 <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> 트러스티는 스레드의 액세스 토큰에 명시적으로 나열 된 모든 요청 된 액세스 권한 부여에 대 한 항목입니다.</target>       </trans-unit>
        <trans-unit id="3288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>All <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</source>
          <target state="translated">모든 <ph id="ph1">&lt;xref:System.Messaging.AccessControlEntry&gt;</ph> 가 항목을 체크 이며 여전히 하나 이상의 요청 된 액세스 권한이 허용 되지 않은 명시적으로,이 경우 암시적으로 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>The rights to a queue, specified in the <ph id="ph1">`rights`</ph> parameter, can be any combination of the following:</source>
          <target state="translated">에 지정 된 큐에 대 한 권한을 <ph id="ph1">`rights`</ph> 매개 변수를 다음의 조합일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="3290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>Full Control</source>
          <target state="translated">모든 권한</target>       </trans-unit>
        <trans-unit id="3291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>Delete Message</source>
          <target state="translated">메시지를 삭제 합니다.</target>       </trans-unit>
        <trans-unit id="3292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>Receive Message</source>
          <target state="translated">메시지를 수신 합니다.</target>       </trans-unit>
        <trans-unit id="3293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>Peek Message</source>
          <target state="translated">메시지 엿보기</target>       </trans-unit>
        <trans-unit id="3294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>Receive Journal Message</source>
          <target state="translated">저널 메시지 받기</target>       </trans-unit>
        <trans-unit id="3295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>Get Queue Properties</source>
          <target state="translated">큐 속성</target>       </trans-unit>
        <trans-unit id="3296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>Set Queue Properties</source>
          <target state="translated">큐 속성 설정</target>       </trans-unit>
        <trans-unit id="3297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>Get Permissions</source>
          <target state="translated">사용 권한 가져오기</target>       </trans-unit>
        <trans-unit id="3298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>Set Permissions</source>
          <target state="translated">사용 권한 설정</target>       </trans-unit>
        <trans-unit id="3299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>Take Queue Ownership</source>
          <target state="translated">큐 소유권 가져오기</target>       </trans-unit>
        <trans-unit id="3300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>Write Message</source>
          <target state="translated">메시지 작성</target>       </trans-unit>
        <trans-unit id="3301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueueAccessRights&gt;</ph> enumeration represents a set of bit flags that you can combine using the bitwise operator OR to build the <ph id="ph2">`rights`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueAccessRights&gt;</ph> 열거형은 빌드 또는 비트 연산자를 사용 하 여 결합할 수 있는 비트 플래그 집합 나타냅니다는 <ph id="ph2">`rights`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="3302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>The following table shows whether this method is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 메서드는 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="3304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="3305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="3306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="3310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="3311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="3313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>The following code example demonstrates the use of <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%28System.String%2CSystem.Messaging.MessageQueueAccessRights%2CSystem.Messaging.AccessControlEntryType%29&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SetPermissions%28System.String%2CSystem.Messaging.MessageQueueAccessRights%2CSystem.Messaging.AccessControlEntryType%29&gt;</ph>의 사용법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="3314" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="3315" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.SynchronizingObject">
          <source>Gets or sets the object that marshals the event-handler call resulting from a <ph id="ph1">&lt;see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Messaging.MessageQueue.PeekCompleted" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="E:System.Messaging.MessageQueue.PeekCompleted" /&gt;</ph> 이벤트의 결과로 생성된 이벤트 처리기의 호출을 마샬링하는 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="3316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.SynchronizingObject">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISynchronizeInvoke" /&gt;</ph>, which represents the object that marshals the event-handler call resulting from a <ph id="ph2">&lt;see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /&gt;</ph> or <ph id="ph3">&lt;see cref="E:System.Messaging.MessageQueue.PeekCompleted" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ISynchronizeInvoke" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /&gt;</ph> 이벤트의 결과로 생성된 이벤트 처리기의 호출을 마샬링하는 개체를 나타내는 <ph id="ph3">&lt;see cref="E:System.Messaging.MessageQueue.PeekCompleted" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.SynchronizingObject">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.SynchronizingObject">
          <source>A <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> event results from a <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> request, respectively, to a specific thread.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.PeekCompleted&gt;</ph> 이벤트에서 결과 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.BeginPeek%2A&gt;</ph> 각각 특정 스레드를 요청 합니다.</target>       </trans-unit>
        <trans-unit id="3319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.SynchronizingObject">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SynchronizingObject%2A&gt;</ph> is set when its related component is placed inside a control or a form, because those components are bound to a specific thread.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.SynchronizingObject%2A&gt;</ph> 해당 구성 요소에 지정 된 스레드에 바인딩되므로 관련된 구성 요소 컨트롤 또는 폼에 배치 된 경우 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="3320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.SynchronizingObject">
          <source>Typically, the synchronizing object marshals a method call into a single thread.</source>
          <target state="translated">일반적으로 동기화 개체는 메서드 호출을을 단일 스레드를 마샬링합니다.</target>       </trans-unit>
        <trans-unit id="3321" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>Gets a value that indicates whether the queue accepts only transactions.</source>
          <target state="translated">큐가 트랜잭션만 허용하는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="3322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the queue accepts only messages sent as part of a transaction; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">큐가 트랜잭션의 일부로서 전달된 메시지만 허용하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>Transactional messaging refers to the coupling of several related messages into a single transaction.</source>
          <target state="translated">트랜잭션 메시지를 단일 트랜잭션에 관련 된 여러 메시지의 결합을 참조합니다.</target>       </trans-unit>
        <trans-unit id="3324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>Sending messages as part of a transaction ensures that the messages are delivered in order, delivered only once, and successfully retrieved from their destination queue.</source>
          <target state="translated">트랜잭션의 일부는 메시지가 순서 대로 배달 보장 메시지를 보내는 한 번만 배달 되 고 대상 큐에서 성공적으로 검색 합니다.</target>       </trans-unit>
        <trans-unit id="3325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>If a queue is transactional, it accepts only messages that are sent as part of a transaction.</source>
          <target state="translated">트랜잭션 대기열의 경우에 트랜잭션의 일부로 전송 되는 메시지에만 허용 합니다.</target>       </trans-unit>
        <trans-unit id="3326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>However, a non-transactional message can be sent or received from a local transaction queue without explicitly using transactional <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> syntax.</source>
          <target state="translated">하지만 비트랜잭션 메시지가 수 전송 되거나 명시적으로 트랜잭션를 사용 하지 않고 로컬 트랜잭션 큐에서 수신 <ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction.Begin%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Messaging.MessageQueueTransaction.Commit%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Messaging.MessageQueueTransaction.Abort%2A&gt;</ph> 구문입니다.</target>       </trans-unit>
        <trans-unit id="3327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>If a non-transactional message is sent to a transactional queue, this component creates a single-message transaction for it, except in the case of referencing a queue on a remote computer using a direct format name.</source>
          <target state="translated">비트랜잭션 메시지가 트랜잭션 큐로 전송 되,이 구성 요소는 단일 메시지 트랜잭션을 만듭니다,에 대 한 제외 하 고 직접 형식 이름을 사용 하 여 원격 컴퓨터에 있는 큐를 참조 하는 경우.</target>       </trans-unit>
        <trans-unit id="3328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>In this situation, if you do not specify a transaction context when sending a message, one is not created for you and the message will be sent to the dead-letter queue.</source>
          <target state="translated">이 상황에서 메시지를 보낼 때 트랜잭션 컨텍스트를 지정 하지 않으면 하나 드립니다 만들어지지 않습니다 및 메시지 배달 못 한 편지 큐로 보내집니다.</target>       </trans-unit>
        <trans-unit id="3329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>If you send a non-transactional message to a transactional queue, you will not be able to roll back the message in the event of an exception.</source>
          <target state="translated">비트랜잭션 메시지가 트랜잭션 큐 보내기에서 예외가 발생할 경우 메시지를 롤백할 수 없게 됩니다.</target>       </trans-unit>
        <trans-unit id="3330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> is threading apartment aware, so if your apartment state is <ph id="ph2">`STA`</ph>, you cannot use the transaction in multiple threads.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueTransaction&gt;</ph> 스레딩 아파트를 인식 아파트 상태가 따라서 <ph id="ph2">`STA`</ph>, 트랜잭션이 여러 스레드를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="3331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>Visual Basic sets the state of the main thread to <ph id="ph1">`STA`</ph>, so you must apply the <ph id="ph2">&lt;xref:System.MTAThreadAttribute&gt;</ph> in the <ph id="ph3">`Main`</ph> subroutine.</source>
          <target state="translated">에 주 스레드의 상태를 설정 하는 Visual Basic <ph id="ph1">`STA`</ph>적용 해야 하므로 <ph id="ph2">&lt;xref:System.MTAThreadAttribute&gt;</ph> 에 <ph id="ph3">`Main`</ph> 서브루틴 합니다.</target>       </trans-unit>
        <trans-unit id="3332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>Otherwise, sending a transactional message using another thread throws a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueException&gt;</ph> exception.</source>
          <target state="translated">그렇지 않으면 다른 스레드를 사용하여 트랜잭션 메시지를 전달할 때 <ph id="ph1">&lt;xref:System.Messaging.MessageQueueException&gt;</ph> 예외가 throw됩니다.</target>       </trans-unit>
        <trans-unit id="3333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>You apply the <ph id="ph1">&lt;xref:System.MTAThreadAttribute&gt;</ph> by using the following fragment.</source>
          <target state="translated">적용 된 <ph id="ph1">&lt;xref:System.MTAThreadAttribute&gt;</ph> 다음 부분을 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="3334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="3336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="3337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="3338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="3342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="3343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="3345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>The following code example displays the value of a message queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Transactional%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐의의 값을 표시 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Transactional%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3346" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.Transactional">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="3347" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>Gets or sets a value that indicates whether received messages are copied to the journal queue.</source>
          <target state="translated">받은 메시지가 업무 일지 큐로 복사되는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="3348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if messages received from the queue are copied to its journal queue; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">큐에서 받은 메시지가 해당 업무 일지 큐로 복사되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="3349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>When the Message Queuing application creates a new application queue, it automatically creates an associated journal queue in the same location.</source>
          <target state="translated">메시지 큐 응용 프로그램에서 새 응용 프로그램 큐를 동일한 위치에 자동으로 연결 된 저널 큐를 만듭니다.</target>       </trans-unit>
        <trans-unit id="3350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>The journal queue is used to track the messages removed from a queue.</source>
          <target state="translated">큐에서 제거 된 메시지를 추적 하는 저널 큐 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="3351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>Setting this property modifies the Message Queuing queue.</source>
          <target state="translated">이 속성을 설정 하면 메시지 큐를 수정 합니다.</target>       </trans-unit>
        <trans-unit id="3352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>Therefore, any other <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instances are affected by the change.</source>
          <target state="translated">따라서 다른 모든 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> 인스턴스 변경의 영향을 받는 합니다.</target>       </trans-unit>
        <trans-unit id="3353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>The journal queue does not track messages removed from the queue because their time-to-be-received timer expired, nor does it track messages purged from the queue by using a Message Queuing directory service (Information Store or Active Directory).</source>
          <target state="translated">저널 큐의 받는 시간이 타이머가 만료 되었습니다 (Information Store 또는 Active Directory)는 메시지 큐 디렉터리 서비스를 사용 하 여 큐에서 제거 된 메시지 추적 때문에 큐에서 제거 된 메시지를 추적 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="3354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>Applications cannot send messages to journal queues; they are limited to read-only access of these queues.</source>
          <target state="translated">응용 프로그램; 업무 일지 큐에 메시지를 보낼 수 없습니다. 이러한 큐의 읽기 전용 액세스로 제한 됩니다.</target>       </trans-unit>
        <trans-unit id="3355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>Furthermore, Message Queuing never removes messages from journal queues.</source>
          <target state="translated">또한 메시지 큐는 저널 큐에서 메시지를 제거 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="3356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>The application using the queue must clear these messages either by receiving them or by purging the queue.</source>
          <target state="translated">큐를 사용 하 여 응용 프로그램 받는 하거나 큐를 제거 하 여 이러한 메시지를 지워야 합니다.</target>       </trans-unit>
        <trans-unit id="3357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="3359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="3360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="3361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="3365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="3366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="3368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>The following code example gets and sets the value of a message queue's <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.UseJournalQueue%2A&gt;</ph> property.</source>
          <target state="translated">다음 코드 예제에서는 메시지 큐의 값을 설정 가져오고 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.UseJournalQueue%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="3369" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.UseJournalQueue">
          <source>An error occurred when accessing a Message Queuing method.</source>
          <target state="translated">메시지 큐 메서드에 액세스하는 동안 오류가 발생한 경우</target>       </trans-unit>
        <trans-unit id="3370" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.WriteHandle">
          <source>Gets the native handle used to send messages to the message queue.</source>
          <target state="translated">메시지 큐에 메시지를 보내는 데 사용되는 기본 핸들을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="3371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.WriteHandle">
          <source>A handle to the native queue object that you use for sending messages to the queue.</source>
          <target state="translated">큐에 메시지를 보내는 데 사용하는 네이티브 큐 개체에 대한 핸들입니다.</target>       </trans-unit>
        <trans-unit id="3372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.WriteHandle">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.WriteHandle%2A&gt;</ph> provides a native Windows handle to the message queue object that is used for sending messages to the queue.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.WriteHandle%2A&gt;</ph> 큐에 메시지를 보내는 데 사용 되는 메시지 큐 개체에 대 한 기본 창 핸들을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="3373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.WriteHandle">
          <source>If you change the path of the queue, the handle is closed and reopened with a new value.</source>
          <target state="translated">큐의 경로 변경 하면 핸들을 닫고 다시 새 값으로.</target>       </trans-unit>
        <trans-unit id="3374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.WriteHandle">
          <source>The following table shows whether this property is available in various Workgroup modes.</source>
          <target state="translated">다음 표에서이 속성은 다양 한 작업 그룹 모드에서 사용할 수 있는지 여부를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="3375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.WriteHandle">
          <source>Workgroup mode</source>
          <target state="translated">작업 그룹 모드</target>       </trans-unit>
        <trans-unit id="3376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.WriteHandle">
          <source>Available</source>
          <target state="translated">사용 가능</target>       </trans-unit>
        <trans-unit id="3377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.WriteHandle">
          <source>Local computer</source>
          <target state="translated">로컬 컴퓨터</target>       </trans-unit>
        <trans-unit id="3378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.WriteHandle">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.WriteHandle">
          <source>Local computer and direct format name</source>
          <target state="translated">로컬 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.WriteHandle">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.WriteHandle">
          <source>Remote computer</source>
          <target state="translated">원격 컴퓨터</target>       </trans-unit>
        <trans-unit id="3382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.WriteHandle">
          <source>No</source>
          <target state="translated">아니요</target>       </trans-unit>
        <trans-unit id="3383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.WriteHandle">
          <source>Remote computer and direct format name</source>
          <target state="translated">원격 컴퓨터와 직접 형식 이름</target>       </trans-unit>
        <trans-unit id="3384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueue.WriteHandle">
          <source>Yes</source>
          <target state="translated">예</target>       </trans-unit>
        <trans-unit id="3385" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueue.WriteHandle">
          <source>The message queue is not available for writing.</source>
          <target state="translated">메시지 큐를 쓰기 작업에 사용할 수 없습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>