<Type Name="ActiveXMessageFormatter" FullName="System.Messaging.ActiveXMessageFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bcb0d5ed5e9f2af7770e251b62d11f1b941dd6ec" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30459617" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ActiveXMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveXMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.ActiveXMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class ActiveXMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveXMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="6af3a-101">MSMQ ActiveX 구성 요소와 호환되는 형식을 사용하여 메시지 큐 메시지의 본문으로 또는 메시지 큐 메시지의 본문에서 기본 데이터 형식과 다른 개체를 serialize하거나 deserialize합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6af3a-101">Serializes or deserializes primitive data types and other objects to or from the body of a Message Queuing message, using a format that is compatible with the MSMQ ActiveX Component.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6af3a-102"><xref:System.Messaging.ActiveXMessageFormatter> MSMQ COM 컨트롤을 사용 하는 응용 프로그램과 상호 운용 메시지 큐 COM 구성 요소를 사용 하 여 보낸 메시지와 호환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="6af3a-102">The <xref:System.Messaging.ActiveXMessageFormatter> is compatible with messages sent using Message Queuing COM components, allowing interoperability with applications that use the MSMQ COM control.</span></span>  
  
 <span data-ttu-id="6af3a-103"><xref:System.Messaging.ActiveXMessageFormatter> 대부분 기본 형식으로 구현 하는 개체를 serialize 할 수는 `IPersistStream` OLE 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="6af3a-103">The <xref:System.Messaging.ActiveXMessageFormatter> can serialize most primitives, as well as objects that implement the `IPersistStream` OLE interface.</span></span> <span data-ttu-id="6af3a-104">동일한 집합 기본 형식 역직렬화 할 수 있는 구현 하는 COM 개체 (예를 들어 Visual Basic 6.0을 사용 하 여 만든 개체)를 역직렬화 하는 동안 작업이 더 이상 필요 하지만 `IPersistStream`합니다.</span><span class="sxs-lookup"><span data-stu-id="6af3a-104">It can deserialize the same set of primitives, but requires further effort when deserializing a COM object (for example, an object created using Visual Basic 6.0) that implements `IPersistStream`.</span></span> <span data-ttu-id="6af3a-105">역직렬화 할 개체를 가져와서 첫 번째 개체를.NET Framework 응용 프로그램에 메모리에 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6af3a-105">The object to deserialize must be in memory by first importing the object into a .NET Framework application.</span></span>  
  
 <span data-ttu-id="6af3a-106">응용 프로그램의 인스턴스를 사용 하 여 큐에 메시지를 보낼 때는 <xref:System.Messaging.MessageQueue> 포맷터 클래스 개체를 스트림으로 serialize 하 고 메시지 본문에 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="6af3a-106">When an application sends a message to the queue using an instance of the <xref:System.Messaging.MessageQueue> class, the formatter serializes the object into a stream and inserts it into the message body.</span></span> <span data-ttu-id="6af3a-107">사용 하 여 큐에서 읽을 때는 <xref:System.Messaging.MessageQueue>, 포맷터는 메시지 데이터에는 <xref:System.Messaging.Message.Body%2A> 속성은 <xref:System.Messaging.Message>합니다.</span><span class="sxs-lookup"><span data-stu-id="6af3a-107">When reading from a queue using a <xref:System.Messaging.MessageQueue>, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>.</span></span>  
  
 <span data-ttu-id="6af3a-108">사용 하 여 ActiveX serialization은 매우 compact는 <xref:System.Messaging.ActiveXMessageFormatter> MSMQ COM 직렬화 하는 매우 빠르게 방법을 제어 합니다.</span><span class="sxs-lookup"><span data-stu-id="6af3a-108">ActiveX serialization is very compact, which makes using the <xref:System.Messaging.ActiveXMessageFormatter> and MSMQ COM control a very fast method of serialization.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveXMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveXMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6af3a-109">
            <see cref="T:System.Messaging.ActiveXMessageFormatter" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6af3a-109">Initializes a new instance of the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="6af3a-110">검사할 <see cref="T:System.Messaging.Message" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6af3a-110">The <see cref="T:System.Messaging.Message" /> to inspect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6af3a-111">포맷터에서 메시지 내용을 deserialize할 수 있는지 여부를 확인합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6af3a-111">Determines whether the formatter can deserialize the contents of the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6af3a-112">
            <see cref="T:System.Messaging.ActiveXMessageFormatter" />에서 메시지를 deserialize할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6af3a-112">
              <see langword="true" /> if the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> can deserialize the message; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6af3a-113"><xref:System.Messaging.ActiveXMessageFormatter.CanRead%2A> 반환 `false` 메시지 본문은 메시지 큐 ActiveX 컨트롤을 deserialize 할 수 있는 기본 형식 또는 구현 하지 않는 경우는 `IPersistStream` 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="6af3a-113"><xref:System.Messaging.ActiveXMessageFormatter.CanRead%2A> returns `false` if the message body is not a primitive that the Message Queuing ActiveX control can deserialize or if it does not implement the `IPersistStream` interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6af3a-114">
            <paramref name="message" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6af3a-114">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6af3a-115">현재 <see cref="T:System.Messaging.ActiveXMessageFormatter" />와 동일한 <see cref="T:System.Messaging.ActiveXMessageFormatter" /> 클래스의 인스턴스를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6af3a-115">Creates an instance of the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> class that is identical to the current <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6af3a-116">
            <see cref="T:System.Messaging.ActiveXMessageFormatter" />와 동일한 속성을 가진 개체를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6af3a-116">An object whose properties are identical to those of this <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6af3a-117">이 메서드를 사용 하 여는 <xref:System.Messaging.MessageQueue> 클래스 (예를 들어 응용 프로그램 받는 경우 비동기적으로) 한 번에 여러 메시지를 수신 하려면.</span><span class="sxs-lookup"><span data-stu-id="6af3a-117">This method is used by the <xref:System.Messaging.MessageQueue> class in order to receive multiple messages at the same time (for example, if the application is receiving asynchronously).</span></span> <span data-ttu-id="6af3a-118">일반적으로 응용 프로그램 코드에서이 메서드를 호출할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="6af3a-118">You typically do not need to call this method in your application code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="InitStreamedObject">
      <MemberSignature Language="C#" Value="public static void InitStreamedObject (object streamedObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitStreamedObject(object streamedObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InitStreamedObject (streamedObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitStreamedObject(System::Object ^ streamedObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamedObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="streamedObject">
          <span data-ttu-id="6af3a-119">
            <see langword="IPersistStreamInit" />를 구현하는 OLE 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6af3a-119">An OLE object that implements <see langword="IPersistStreamInit" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6af3a-120">
            <see langword="IPersistStream" />을 구현하고 <see langword="IPersistStreamInit" />를 사용하여 호출되는 COM 개체를 serialize할 수 있는 유틸리티를 제공합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6af3a-120">Provides a utility to help serialize COM objects that implement <see langword="IPersistStream" /> and require <see langword="IPersistStreamInit" /> to be called.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="6af3a-121">deserialize할 <see cref="T:System.Messaging.Message" />(MSMQ ActiveX 컨트롤 형식)입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6af3a-121">The <see cref="T:System.Messaging.Message" />, in MSMQ ActiveX control format, to deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6af3a-122">지정된 메시지의 내용을 읽고 deserialize된 메시지가 포함된 개체를 만듭니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6af3a-122">Reads the contents from the given message and creates an object that contains the deserialized message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6af3a-123">deserialize된 메시지를 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6af3a-123">The deserialized message.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6af3a-124">메시지의 본문 기본 형식을 나타냅니다, 메시지의 <xref:System.Messaging.Message.BodyType%2A> 속성 다음 표에 관리 되는 형식 중 하나 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="6af3a-124">If the body of the message represents a primitive type, the message's <xref:System.Messaging.Message.BodyType%2A> property must be one of the managed types in the following table.</span></span>  
  
|<span data-ttu-id="6af3a-125">BodyType 값</span><span class="sxs-lookup"><span data-stu-id="6af3a-125">BodyType value</span></span>|<span data-ttu-id="6af3a-126">관리 되는 형식</span><span class="sxs-lookup"><span data-stu-id="6af3a-126">Managed type</span></span>|  
|--------------------|------------------|  
|<span data-ttu-id="6af3a-127">VT_LPSTR</span><span class="sxs-lookup"><span data-stu-id="6af3a-127">VT_LPSTR</span></span>|<span data-ttu-id="6af3a-128"><xref:System.Char> 배열 (ASCII 인코딩을 사용 하 여 역직렬화)</span><span class="sxs-lookup"><span data-stu-id="6af3a-128"><xref:System.Char> array (deserialized using ASCII encoding)</span></span>|  
|<span data-ttu-id="6af3a-129">VT_BSTR, VT_LPWSTR</span><span class="sxs-lookup"><span data-stu-id="6af3a-129">VT_BSTR, VT_LPWSTR</span></span>|<span data-ttu-id="6af3a-130"><xref:System.String> (유니코드 인코딩을 사용 하 여 역직렬화)</span><span class="sxs-lookup"><span data-stu-id="6af3a-130"><xref:System.String> (deserialized using Unicode encoding)</span></span>|  
|<span data-ttu-id="6af3a-131">VT_VECTOR &#124; VT_UI1</span><span class="sxs-lookup"><span data-stu-id="6af3a-131">VT_VECTOR &#124; VT_UI1</span></span>|<span data-ttu-id="6af3a-132"><xref:System.Byte> 배열</span><span class="sxs-lookup"><span data-stu-id="6af3a-132"><xref:System.Byte> array</span></span>|  
|<span data-ttu-id="6af3a-133">VT_BOOL</span><span class="sxs-lookup"><span data-stu-id="6af3a-133">VT_BOOL</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="6af3a-134">VT_CLSID</span><span class="sxs-lookup"><span data-stu-id="6af3a-134">VT_CLSID</span></span>|<xref:System.Guid>|  
|<span data-ttu-id="6af3a-135">VT_CY</span><span class="sxs-lookup"><span data-stu-id="6af3a-135">VT_CY</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="6af3a-136">VT_DATE</span><span class="sxs-lookup"><span data-stu-id="6af3a-136">VT_DATE</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="6af3a-137">VT_I1, VT_UI1</span><span class="sxs-lookup"><span data-stu-id="6af3a-137">VT_I1, VT_UI1</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="6af3a-138">VT_I2</span><span class="sxs-lookup"><span data-stu-id="6af3a-138">VT_I2</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="6af3a-139">VT_UI2</span><span class="sxs-lookup"><span data-stu-id="6af3a-139">VT_UI2</span></span>|<xref:System.UInt16>|  
|<span data-ttu-id="6af3a-140">VT_I4</span><span class="sxs-lookup"><span data-stu-id="6af3a-140">VT_I4</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="6af3a-141">VT_UI4</span><span class="sxs-lookup"><span data-stu-id="6af3a-141">VT_UI4</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="6af3a-142">VT_I8</span><span class="sxs-lookup"><span data-stu-id="6af3a-142">VT_I8</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="6af3a-143">VT_UI8</span><span class="sxs-lookup"><span data-stu-id="6af3a-143">VT_UI8</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="6af3a-144">VT_R4</span><span class="sxs-lookup"><span data-stu-id="6af3a-144">VT_R4</span></span>|<xref:System.Single>|  
|<span data-ttu-id="6af3a-145">VT_R8</span><span class="sxs-lookup"><span data-stu-id="6af3a-145">VT_R8</span></span>|<xref:System.Double>|  
|<span data-ttu-id="6af3a-146">VT_NULL</span><span class="sxs-lookup"><span data-stu-id="6af3a-146">VT_NULL</span></span>|`null`|  
|<span data-ttu-id="6af3a-147">VT_STREAMED_OBJECT</span><span class="sxs-lookup"><span data-stu-id="6af3a-147">VT_STREAMED_OBJECT</span></span>|<xref:System.Object>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6af3a-148">매개 변수로 전달된 <paramref name="message" />의 <see cref="P:System.Messaging.Message.BodyType" /> 속성이 기본 형식에 매핑되지 않거나 스트림된 개체를 나타내지 않는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6af3a-148">The <see cref="P:System.Messaging.Message.BodyType" /> property of the <paramref name="message" /> passed as a parameter cannot be mapped to a primitive type, nor does it represent a streamed object.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6af3a-149">본문이 저장된 개체를 나타내는 경우.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6af3a-149">The body represents a stored object.</span>
          </span>
          <span data-ttu-id="6af3a-150">
            <see cref="T:System.Messaging.ActiveXMessageFormatter" />는 저장된 개체의 deserialization을 지원하지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6af3a-150">The <see cref="T:System.Messaging.ActiveXMessageFormatter" /> does not support deserialization of stored objects.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6af3a-151">
            <paramref name="message" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6af3a-151">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="6af3a-152">
            <see cref="T:System.Messaging.Message" /> 속성에 serialize된 개체가 포함될 <see cref="P:System.Messaging.Message.Body" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6af3a-152">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span>
          </span>
        </param>
        <param name="obj">
          <span data-ttu-id="6af3a-153">메시지 본문으로 serialize될 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6af3a-153">The object to be serialized into the message body.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6af3a-154">메시지 본문으로 개체를 serialize합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6af3a-154">Serializes an object into the body of the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6af3a-155">다음 표에서 관리 되는 형식 간의 관계를 보여 줍니다. 및 <xref:System.Messaging.Message.BodyType%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="6af3a-155">The following table shows the relationship between managed types and the <xref:System.Messaging.Message.BodyType%2A> property.</span></span> <span data-ttu-id="6af3a-156">개체를 serialize 하면 이러한 관리 되는 형식 중 하나 여야 하거나 구현 해야 OLE `IPersistStream` 인터페이스입니다.</span><span class="sxs-lookup"><span data-stu-id="6af3a-156">The object that you serialize must be one of these managed types or must implement the OLE `IPersistStream` interface.</span></span>  
  
|<span data-ttu-id="6af3a-157">BodyType 값</span><span class="sxs-lookup"><span data-stu-id="6af3a-157">BodyType value</span></span>|<span data-ttu-id="6af3a-158">관리 되는 형식</span><span class="sxs-lookup"><span data-stu-id="6af3a-158">Managed type</span></span>|  
|--------------------|------------------|  
|<span data-ttu-id="6af3a-159">VT_LPSTR</span><span class="sxs-lookup"><span data-stu-id="6af3a-159">VT_LPSTR</span></span>|<xref:System.Char>|  
|<span data-ttu-id="6af3a-160">VT_BSTR, VT_LPWSTR</span><span class="sxs-lookup"><span data-stu-id="6af3a-160">VT_BSTR, VT_LPWSTR</span></span>|<xref:System.String>|  
|<span data-ttu-id="6af3a-161">VT_VECTOR &#124; VT_UI1</span><span class="sxs-lookup"><span data-stu-id="6af3a-161">VT_VECTOR &#124; VT_UI1</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="6af3a-162">VT_BOOL</span><span class="sxs-lookup"><span data-stu-id="6af3a-162">VT_BOOL</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="6af3a-163">VT_CLSID</span><span class="sxs-lookup"><span data-stu-id="6af3a-163">VT_CLSID</span></span>|<xref:System.Guid>|  
|<span data-ttu-id="6af3a-164">VT_CY</span><span class="sxs-lookup"><span data-stu-id="6af3a-164">VT_CY</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="6af3a-165">VT_DATE</span><span class="sxs-lookup"><span data-stu-id="6af3a-165">VT_DATE</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="6af3a-166">VT_I1, VT_UI1</span><span class="sxs-lookup"><span data-stu-id="6af3a-166">VT_I1, VT_UI1</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="6af3a-167">VT_I2</span><span class="sxs-lookup"><span data-stu-id="6af3a-167">VT_I2</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="6af3a-168">VT_UI2</span><span class="sxs-lookup"><span data-stu-id="6af3a-168">VT_UI2</span></span>|<xref:System.UInt16>|  
|<span data-ttu-id="6af3a-169">VT_I4</span><span class="sxs-lookup"><span data-stu-id="6af3a-169">VT_I4</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="6af3a-170">VT_UI4</span><span class="sxs-lookup"><span data-stu-id="6af3a-170">VT_UI4</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="6af3a-171">VT_I8</span><span class="sxs-lookup"><span data-stu-id="6af3a-171">VT_I8</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="6af3a-172">VT_UI8</span><span class="sxs-lookup"><span data-stu-id="6af3a-172">VT_UI8</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="6af3a-173">VT_R4</span><span class="sxs-lookup"><span data-stu-id="6af3a-173">VT_R4</span></span>|<xref:System.Single>|  
|<span data-ttu-id="6af3a-174">VT_R8</span><span class="sxs-lookup"><span data-stu-id="6af3a-174">VT_R8</span></span>|<xref:System.Double>|  
|<span data-ttu-id="6af3a-175">VT_NULL</span><span class="sxs-lookup"><span data-stu-id="6af3a-175">VT_NULL</span></span>|`null`|  
|<span data-ttu-id="6af3a-176">VT_STREAMED_OBJECT</span><span class="sxs-lookup"><span data-stu-id="6af3a-176">VT_STREAMED_OBJECT</span></span>|<span data-ttu-id="6af3a-177">`IPersistStream` (OLE) <xref:System.Object></span><span class="sxs-lookup"><span data-stu-id="6af3a-177">`IPersistStream` (OLE) <xref:System.Object></span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6af3a-178">serialize할 개체가 기본 형식이 아니고 OLE <see langword="IPersistStream" /> 인터페이스를 구현하는 스트림된 개체도 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6af3a-178">The object to serialize is neither a primitive nor a streamed object that implements the OLE <see langword="IPersistStream" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6af3a-179">
            <paramref name="message" /> 매개 변수가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="6af3a-179">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>