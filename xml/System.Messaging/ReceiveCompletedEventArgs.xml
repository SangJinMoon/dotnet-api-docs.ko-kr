<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ReceiveCompletedEventArgs.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52ce9c98f0b219b152b6fc43b83c980bbac0b4e6a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ce9c98f0b219b152b6fc43b83c980bbac0b4e6a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Messaging.ReceiveCompletedEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /&gt;</ph> 이벤트에 대한 데이터를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Messaging.ReceiveCompletedEventArgs">
          <source>When your asynchronous receive operation calls an event handler, an instance of this class is passed to the handler.</source>
          <target state="translated">비동기 수신 작업에서 이벤트 처리기가 호출되면 이 클래스의 인스턴스가 해당 처리기로 전달됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ReceiveCompletedEventArgs">
          <source>When you use event notification to receive messages asynchronously from the queue, you must create a method that handles your message processing.</source>
          <target state="translated">이벤트 알림을 사용 하 여 큐에서 메시지를 비동기적으로 받을 메시지를 처리 하는 메서드를 만들어야 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ReceiveCompletedEventArgs">
          <source>Your code must call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> to begin the asynchronous processing.</source>
          <target state="translated">코드를 호출 해야 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 여 비동기 처리를 시작 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ReceiveCompletedEventArgs">
          <source>When a message is received, your application is notified through the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event.</source>
          <target state="translated">통해 메시지를 받을 때 응용 프로그램에 알립니다는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ReceiveCompletedEventArgs">
          <source>An instance of <ph id="ph1">&lt;xref:System.Messaging.ReceiveCompletedEventArgs&gt;</ph> is passed into the event delegate that calls your event handler.</source>
          <target state="translated">인스턴스 <ph id="ph1">&lt;xref:System.Messaging.ReceiveCompletedEventArgs&gt;</ph> 이벤트 처리기를 호출 하는 이벤트 대리자에 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ReceiveCompletedEventArgs">
          <source>The data associated with the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event is contained in the delegate's <ph id="ph2">&lt;xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A&gt;</ph> parameter.</source>
          <target state="translated">와 연결 된 데이터는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트는 대리자에 포함 된 <ph id="ph2">&lt;xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A&gt;</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ReceiveCompletedEventArgs">
          <source>There are two ways to provide notification of event completion: event notification and callbacks.</source>
          <target state="translated">이벤트 완료를 제공 하는 방법은 두 가지: 이벤트 알림과 콜백 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ReceiveCompletedEventArgs">
          <source><ph id="ph1">&lt;xref:System.Messaging.ReceiveCompletedEventArgs&gt;</ph> is used only with event notification.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.ReceiveCompletedEventArgs&gt;</ph> 이벤트 알림을에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ReceiveCompletedEventArgs">
          <source>For information comparing callbacks and event notification, see "Events vs. Callbacks" on MSDN.</source>
          <target state="translated">콜백 및 이벤트 알림을 비교 내용은 "이벤트 vs을 참조 하십시오. 참조 "하십시오입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ReceiveCompletedEventArgs">
          <source><ph id="ph1">&lt;xref:System.Messaging.ReceiveCompletedEventArgs&gt;</ph> provides access to the message that initiated the end of the asynchronous receive operation, through the <ph id="ph2">&lt;xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A&gt;</ph> member.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.ReceiveCompletedEventArgs&gt;</ph> 액세스를 제공를 통해 수신 작업, 비동기의 끝을 초기화 하는 메시지에는 <ph id="ph2">&lt;xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A&gt;</ph> 멤버입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ReceiveCompletedEventArgs">
          <source>This is an alternate access to the message, and behaves much the same as a call to <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">메시지에 액세스 하는 다른 이며 동일한 효과에 대 한 호출으로 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ReceiveCompletedEventArgs">
          <source>The following code example creates an event handler for the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> event and associates it with the event delegate by using the <ph id="ph2">&lt;xref:System.Messaging.ReceiveCompletedEventHandler&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에 대 한 이벤트 처리기를 만듭니다.는 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.ReceiveCompleted&gt;</ph> 이벤트 및 이벤트 대리자를 사용 하 여 동료는 <ph id="ph2">&lt;xref:System.Messaging.ReceiveCompletedEventHandler&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.ReceiveCompletedEventArgs">
          <source>The event handler, <ph id="ph1">`MyReceiveCompleted`</ph>, receives a message from a queue and writes its body to the screen.</source>
          <target state="translated">이벤트 처리기 <ph id="ph1">`MyReceiveCompleted`</ph>, 큐에서 메시지를 받은 및 화면으로 해당 본문을 작성 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Messaging.ReceiveCompletedEventArgs.AsyncResult">
          <source>Gets or sets the result of the asynchronous operation requested.</source>
          <target state="translated">요청한 비동기 작업의 결과를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.ReceiveCompletedEventArgs.AsyncResult">
          <source>A <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that contains the data associated with the receive operation.</source>
          <target state="translated">받기 작업과 관련된 데이터를 포함하는 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.ReceiveCompletedEventArgs.AsyncResult">
          <source><ph id="ph1">&lt;xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A&gt;</ph> identifies ongoing or completed asynchronous operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A&gt;</ph> 진행 중이거나 완료 된 비동기 작업을 식별합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.ReceiveCompletedEventArgs.AsyncResult">
          <source>The property contains data that helps determine which of several potential asynchronous operations to complete, and when passed to the event handler, enables <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%2A&gt;</ph> to access the message associated with the completed operation.</source>
          <target state="translated">속성을 완료 하려면 몇 가지 잠재적인 비동기 작업 중 어떤 진단에 도움이 되는 데이터를 포함 하 고 이벤트 처리기에 전달 되 면 활성화 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%2A&gt;</ph> 완료 된 작업과 관련 된 메시지에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.ReceiveCompletedEventArgs.AsyncResult">
          <source>When you call <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>, a <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> is returned immediately, even though a message, if one exists, has not yet been retrieved because the operation is not completed.</source>
          <target state="translated">호출 하는 경우 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> 메시지를 있는 경우에 검색 되지 않은 작업이 완료 되지 않았으므로 하는 경우에 즉시 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.ReceiveCompletedEventArgs.AsyncResult">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A&gt;</ph> indicates the state of the asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A&gt;</ph> 비동기 작업의 상태를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.ReceiveCompletedEventArgs.AsyncResult">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> creates the object, which is modified throughout the operation until <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%2A&gt;</ph> completes it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.BeginReceive%2A&gt;</ph> 까지 작업 전체에서 수정 되는 개체를 만듭니다 <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.EndReceive%2A&gt;</ph> 에서 작업을 완료 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Messaging.ReceiveCompletedEventArgs.Message">
          <source>Gets the message associated with the asynchronous receive operation.</source>
          <target state="translated">비동기 수신 작업과 관련된 메시지를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.ReceiveCompletedEventArgs.Message">
          <source>A <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> that represents the end result of the asynchronous receive operation.</source>
          <target state="translated">비동기 수신 작업의 최종 결과를 나타내는 <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.ReceiveCompletedEventArgs.Message">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A&gt;</ph> property provides a means for retrieving the message that initiated the end of the asynchronous receive operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A&gt;</ph> 속성은 비동기 작업의 끝을 초기화 하는 메시지를 검색 하기 위한 수단을 제공 수신 작업입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.ReceiveCompletedEventArgs.Message">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType&gt;</ph> is called the first time the <ph id="ph2">&lt;xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A&gt;</ph> property is read, so it is not necessary to call <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.EndReceive%2A&gt;</ph> prior to getting the value of this property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType&gt;</ph> 처음으로 호출 되는 <ph id="ph2">&lt;xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A&gt;</ph> 호출 되지 않도록 속성은 읽기 <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.EndReceive%2A&gt;</ph> 이 속성의 값을 가져오기 전에 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Messaging.ReceiveCompletedEventArgs.Message">
          <source>The <ph id="ph1">&lt;see cref="P:System.Messaging.ReceiveCompletedEventArgs.Message" /&gt;</ph> could not be retrieved.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Messaging.ReceiveCompletedEventArgs.Message" /&gt;</ph>를 검색할 수 없는 경우.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Messaging.ReceiveCompletedEventArgs.Message">
          <source>The time-out on the asynchronous operation might have expired.</source>
          <target state="translated">비동기 작업에 대한 제한 시간이 만료되었을 수 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>