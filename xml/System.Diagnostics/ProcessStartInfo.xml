<Type Name="ProcessStartInfo" FullName="System.Diagnostics.ProcessStartInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="57b90f5410d83f27ef62009855cc5e70be040006" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36343334" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ProcessStartInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ProcessStartInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ProcessStartInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProcessStartInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProcessStartInfo sealed" />
  <TypeSignature Language="F#" Value="type ProcessStartInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f37f4-101">프로세스를 시작할 때 사용되는 값 집합을 지정합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f37f4-101">Specifies a set of values that are used when you start a process.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37f4-102"><xref:System.Diagnostics.ProcessStartInfo> 와 함께 사용 되는 <xref:System.Diagnostics.Process> 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-102"><xref:System.Diagnostics.ProcessStartInfo> is used together with the <xref:System.Diagnostics.Process> component.</span></span> <span data-ttu-id="f37f4-103">사용 하 여 프로세스를 시작할 때는 <xref:System.Diagnostics.Process> 실행 중인 프로세스에 연결 하는 경우 프로세스를 사용할 수 있는 정보에 액세스할 수 있는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-103">When you start a process using the <xref:System.Diagnostics.Process> class, you have access to process information in addition to that available when attaching to a running process.</span></span>  
  
 <span data-ttu-id="f37f4-104">사용할 수는 <xref:System.Diagnostics.ProcessStartInfo> 시작 하는 프로세스를 보다 효율적으로 제어에 대 한 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-104">You can use the <xref:System.Diagnostics.ProcessStartInfo> class for better control over the process you start.</span></span> <span data-ttu-id="f37f4-105">이상 설정 해야 합니다는 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 속성을 수동으로 생성자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-105">You must at least set the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property, either manually or using the constructor.</span></span> <span data-ttu-id="f37f4-106">파일 이름은 응용 프로그램이 나 문서입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-106">The file name is any application or document.</span></span> <span data-ttu-id="f37f4-107">여기서 문서 열린 모든 파일 형식 또는 작업이 연결 된 기본으로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-107">Here a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="f37f4-108">볼 수 있습니다 등록 된 파일 형식과 연결 된 응용 프로그램 컴퓨터에 대 한 사용 하 여는 **폴더 옵션** 운영 체제를 통해 사용할 수 있는 대화 상자.</span><span class="sxs-lookup"><span data-stu-id="f37f4-108">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="f37f4-109">**고급** 단추는 등록 된 특정 파일 형식과 연결 열기 동작이 있는지 여부를 보여 주는 대화 상자에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-109">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="f37f4-110">또한 해당 파일과 함께 수행할 작업을 정의 하는 기타 속성을 설정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-110">In addition, you can set other properties that define actions to take with that file.</span></span> <span data-ttu-id="f37f4-111">형식에 특정 값을 지정할 수는 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 속성에 대 한는 <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-111">You can specify a value specific to the type of the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property for the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property.</span></span> <span data-ttu-id="f37f4-112">예를 들어 "인쇄" 문서 형식에 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-112">For example, you can specify "print" for a document type.</span></span> <span data-ttu-id="f37f4-113">지정할 수는 또한 <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> 속성 값을 해당 파일의 open 프로시저가에 전달할 명령줄 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-113">Additionally, you can specify <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> property values to be command-line arguments to pass to the file's open procedure.</span></span> <span data-ttu-id="f37f4-114">예를 들어, 텍스트 편집기에서 응용 프로그램을 지정 하는 경우는 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 속성, 있습니다 사용할 수는 <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> 속성 편집기에서 열 수를 텍스트 파일을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-114">For example, if you specify a text editor application in the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property, you can use the <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> property to specify a text file to be opened by the editor.</span></span>  
  
 <span data-ttu-id="f37f4-115">표준 입력은 일반적으로 키보드 및 표준 출력과 표준 오류는 일반적으로 모니터 화면입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-115">Standard input is usually the keyboard, and standard output and standard error are usually the monitor screen.</span></span> <span data-ttu-id="f37f4-116">사용할 수 있습니다는 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>, <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>, 및 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> 속성에서 입력 또는 출력 파일 또는 다른 장치에 반환 하는 프로세스를 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-116">However, you can use the <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>, <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>, and <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> properties to cause the process to get input from or return output to a file or other device.</span></span> <span data-ttu-id="f37f4-117">사용 하는 경우는 <xref:System.Diagnostics.Process.StandardInput%2A>, <xref:System.Diagnostics.Process.StandardOutput%2A>, 또는 <xref:System.Diagnostics.Process.StandardError%2A> 속성에는 <xref:System.Diagnostics.Process> 구성 요소를 먼저 설정 해야 해당 값에는 <xref:System.Diagnostics.ProcessStartInfo> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-117">If you use the <xref:System.Diagnostics.Process.StandardInput%2A>, <xref:System.Diagnostics.Process.StandardOutput%2A>, or <xref:System.Diagnostics.Process.StandardError%2A> properties on the <xref:System.Diagnostics.Process> component, you must first set the corresponding value on the <xref:System.Diagnostics.ProcessStartInfo> property.</span></span> <span data-ttu-id="f37f4-118">그렇지 않으면 시스템 읽거나 스트림에 쓸 때 예외가 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-118">Otherwise, the system throws an exception when you read or write to the stream.</span></span>  
  
 <span data-ttu-id="f37f4-119">설정의 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 속성을 통해 운영 체제 셸을 사용 하 여 프로세스를 시작할지 여부를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-119">Set the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property to specify whether to start the process by using the operating system shell.</span></span> <span data-ttu-id="f37f4-120">경우 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 로 설정 된 `false`, 새 프로세스는 표준 입력을 표준 출력으로 상속 하 고 않으면 호출의 표준 오류 스트림을 처리는 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>, <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>, 또는 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> 속성로 각각 설정 `true`.</span><span class="sxs-lookup"><span data-stu-id="f37f4-120">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is set to `false`, the new process inherits the standard input, standard output, and standard error streams of the calling process, unless the <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>, <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>, or <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> properties, respectively, are set to `true`.</span></span> 
  
 <span data-ttu-id="f37f4-121">모든 값을 변경할 수 <xref:System.Diagnostics.ProcessStartInfo> 프로세스가 시작 될 때까지 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-121">You can change the value of any <xref:System.Diagnostics.ProcessStartInfo> property up to the time that the process starts.</span></span> <span data-ttu-id="f37f4-122">프로세스를 시작 하면이 기본값을 변경 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-122">After you start the process, changing these values has no effect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f37f4-123">이 클래스는 모든 멤버에 적용 되는 클래스 수준에서 링크 요청을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-123">This class contains a link demand at the class level that applies to all members.</span></span> <span data-ttu-id="f37f4-124">A <xref:System.Security.SecurityException> 직접 실행 호출자에 완전 신뢰 권한이 없는 경우에 throw 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-124">A <xref:System.Security.SecurityException> is thrown when the immediate caller does not have full-trust permission.</span></span> <span data-ttu-id="f37f4-125">보안 요청에 대 한 세부 정보를 참조 하십시오. [링크 요청](~/docs/framework/misc/link-demands.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-125">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37f4-126">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Diagnostics.ProcessStartInfo> 으로 대상 Url을 제공 하는 Internet Explorer를 시작 하는 클래스 <xref:System.Diagnostics.ProcessStartInfo> 인수입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-126">The following code example demonstrates how to use the <xref:System.Diagnostics.ProcessStartInfo> class to start Internet Explorer, providing the destination URLs as <xref:System.Diagnostics.ProcessStartInfo> arguments.</span></span>  
  
 [!code-cpp[Process.Start_static#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#1)]
 [!code-csharp[Process.Start_static#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#1)]
 [!code-vb[Process.Start_static#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="f37f4-127">형식의 멤버를 호출에 대 한 <see cref="T:System.Diagnostics.ProcessStartInfo" />합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f37f4-127">for calling members of <see cref="T:System.Diagnostics.ProcessStartInfo" />.</span>
      </span>
      <span data-ttu-id="f37f4-128">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: 명명 된 권한 집합] (http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f37f4-128">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Named Permission Sets](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</span>
      </span>
    </permission>
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-129">
            <see cref="T:System.Diagnostics.ProcessStartInfo" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-129">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessStartInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ProcessStartInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProcessStartInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-130">프로세스를 시작할 때 사용할 파일 이름을 지정하지 않고 <see cref="T:System.Diagnostics.ProcessStartInfo" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-130">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class without specifying a file name with which to start the process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37f4-131">설정 해야 적어도 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 프로세스를 시작 하기 전에 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-131">You must set at least the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property before you start the process.</span></span> <span data-ttu-id="f37f4-132">파일 이름은 응용 프로그램이 나 문서입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-132">The file name is any application or document.</span></span> <span data-ttu-id="f37f4-133">이 경우 문서 열린 모든 파일 형식 또는 작업이 연결 된 기본으로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-133">In this case, a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="f37f4-134">볼 수 있습니다 등록 된 파일 형식과 연결 된 응용 프로그램 컴퓨터에 대 한 사용 하 여는 **폴더 옵션** 운영 체제를 통해 사용할 수 있는 대화 상자.</span><span class="sxs-lookup"><span data-stu-id="f37f4-134">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="f37f4-135">**고급** 단추는 등록 된 특정 파일 형식과 연결 열기 동작이 있는지 여부를 보여 주는 대화 상자에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-135">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="f37f4-136">필요에 따라 프로세스를 시작 하기 전에 다른 속성을 설정할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-136">Optionally, you can also set other properties before you start the process.</span></span> <span data-ttu-id="f37f4-137"><xref:System.Diagnostics.ProcessStartInfo.Verb%2A> 속성이 제공 수행할 동작을, "print" 등의 지정 된 파일의 사용은 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-137">The <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property supplies actions to take, such as "print", with the file indicated in the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="f37f4-138"><xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> 속성에는 시스템으로 열 때 파일에 명령줄 인수를 전달 하는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-138">The <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> property supplies a way to pass command-line arguments to the file when the system opens it.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f37f4-139">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-139">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f37f4-140">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-140">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessStartInfo (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProcessStartInfo(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ProcessStartInfo : string -&gt; System.Diagnostics.ProcessStartInfo" Usage="new System.Diagnostics.ProcessStartInfo fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="f37f4-141">프로세스를 시작할 때 사용할 응용 프로그램이나 문서입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-141">An application or document with which to start a process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f37f4-142">
            <see cref="T:System.Diagnostics.ProcessStartInfo" /> 클래스의 새 인스턴스를 초기화하고 프로세스를 시작할 때 사용할 응용 프로그램이나 문서와 같은 파일 이름을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-142">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class and specifies a file name such as an application or document with which to start the process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37f4-143">파일 이름은 응용 프로그램이 나 문서입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-143">The file name is any application or document.</span></span> <span data-ttu-id="f37f4-144">이 경우 문서 열린 모든 파일 형식 또는 작업이 연결 된 기본으로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-144">In this case, a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="f37f4-145">볼 수 있습니다 등록 된 파일 형식과 연결 된 응용 프로그램 컴퓨터에 대 한 사용 하 여는 **폴더 옵션** 운영 체제를 통해 사용할 수 있는 대화 상자.</span><span class="sxs-lookup"><span data-stu-id="f37f4-145">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="f37f4-146">**고급** 단추는 등록 된 특정 파일 형식과 연결 열기 동작이 있는지 여부를 보여 주는 대화 상자에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-146">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="f37f4-147">변경할 수는 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 프로세스가 시작 될 때까지이 생성자를 호출한 후에 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-147">You can change the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property after you call this constructor, up to the time that the process starts.</span></span> <span data-ttu-id="f37f4-148">프로세스를 시작 하면이 기본값을 변경 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-148">After you start the process, changing these values has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f37f4-149">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-149">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f37f4-150">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-150">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessStartInfo (string fileName, string arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, arguments As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProcessStartInfo(System::String ^ fileName, System::String ^ arguments);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ProcessStartInfo : string * string -&gt; System.Diagnostics.ProcessStartInfo" Usage="new System.Diagnostics.ProcessStartInfo (fileName, arguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="arguments" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="f37f4-151">프로세스를 시작할 때 사용할 응용 프로그램입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-151">An application with which to start a process.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="f37f4-152">프로세스가 시작될 때 응용 프로그램에 전달할 명령줄 인수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-152">Command-line arguments to pass to the application when the process starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f37f4-153">
            <see cref="T:System.Diagnostics.ProcessStartInfo" /> 클래스의 새 인스턴스를 초기화하고, 프로세스를 시작할 응용 프로그램 파일 이름과 응용 프로그램에 전달할 명령줄 인수 집합을 지정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-153">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class, specifies an application file name with which to start the process, and specifies a set of command-line arguments to pass to the application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37f4-154">파일 이름은 응용 프로그램이 나 문서입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-154">The file name is any application or document.</span></span> <span data-ttu-id="f37f4-155">이 경우 문서 열린 모든 파일 형식 또는 작업이 연결 된 기본으로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-155">In this case, a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="f37f4-156">볼 수 있습니다 등록 된 파일 형식과 연결 된 응용 프로그램 컴퓨터에 대 한 사용 하 여는 **폴더 옵션** 운영 체제를 통해 사용할 수 있는 대화 상자.</span><span class="sxs-lookup"><span data-stu-id="f37f4-156">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="f37f4-157">**고급** 단추는 등록 된 특정 파일 형식과 연결 열기 동작이 있는지 여부를 보여 주는 대화 상자에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-157">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="f37f4-158">변경할 수는 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 또는 <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> 프로세스가 시작 될 때까지이 생성자를 호출한 후에 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-158">You can change the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> or <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> properties after you call this constructor, up to the time that the process starts.</span></span> <span data-ttu-id="f37f4-159">프로세스를 시작 하면이 기본값을 변경 효과가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-159">After you start the process, changing these values has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="f37f4-160">직접 실행 호출자에 대 한 완전 신뢰 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-160">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f37f4-161">이 멤버는 부분적으로 신뢰할 수 있는 코드에서 사용할 수 없습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-161">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ArgumentList">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; ArgumentList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; ArgumentList" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.ArgumentList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentList As Collection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ ArgumentList { System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ArgumentList : System.Collections.ObjectModel.Collection&lt;string&gt;" Usage="System.Diagnostics.ProcessStartInfo.ArgumentList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public string Arguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Arguments" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public Property Arguments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Arguments { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Arguments : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Command line arguments that will be passed to the application specified by the FileName property.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-162">응용 프로그램을 시작할 때 사용할 명령줄 인수 집합을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-162">Gets or sets the set of command-line arguments to use when starting the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-163">
            <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 속성에 지정된 대상 응용 프로그램으로 전달할 인수를 포함한 단일 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-163">A single string containing the arguments to pass to the target application specified in the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span>
          </span>
          <span data-ttu-id="f37f4-164">기본값은 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-164">The default is an empty string ("").</span>
          </span>
          <span data-ttu-id="f37f4-165">Windows Vista 및 Windows 운영 체제의 이전 버전에서 프로세스의 전체 경로 길이에 추가되는 인수의 길이는 2080자보다 짧아야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-165">On Windows Vista and earlier versions of the Windows operating system, the length of the arguments added to the length of the full path to the process must be less than 2080.</span>
          </span>
          <span data-ttu-id="f37f4-166">Windows 7 이상 버전에서는 길이가 32699 미만이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-166">On Windows 7 and later versions, the length must be less than 32699.</span>
          </span>
          <span data-ttu-id="f37f4-167">인수가 대상 응용 프로그램에서 분석 및 해석되므로 이 응용 프로그램의 예상과 일치해야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-167">Arguments are parsed and interpreted by the target application, so must align with the expectations of that application.</span>
          </span>
          <span data-ttu-id="f37f4-168">아래 예제와 같은 .NET 응용 프로그램의 경우 공백은 여러 인수 사이의 구분 기호로 해석됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-168">For.NET applications as demonstrated in the Examples below, spaces are interpreted as a separator between multiple arguments.</span>
          </span>
          <span data-ttu-id="f37f4-169">공백이 포함된 단일 인수는 따옴표로 묶어야 하지만 따옴표 자체는 대상 응용 프로그램으로 전달되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-169">A single argument that includes spaces must be surrounded by quotation marks, but those quotation marks are not carried through to the target application.</span>
          </span>
          <span data-ttu-id="f37f4-170">최종 분석 인수에 따옴표를 포함하려면 각 따옴표에 트리플 이스케이프를 적용합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-170">In include quotation marks in the final parsed argument, triple-escape each mark.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f37f4-171">아래의 첫 번째 예는 작은 응용 프로그램 (argsecho.exe)를 해당 echos 만듭니다는 인수를 콘솔.</span><span class="sxs-lookup"><span data-stu-id="f37f4-171">The first example below creates a small application (argsecho.exe) that echos its arguments to the console.</span></span> <span data-ttu-id="f37f4-172">두 번째 예에서는 argsecho.exe 인수 속성에 대 한 다른 변형을 보여 주기 위해 호출 하는 응용 프로그램을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-172">The second example creates an application that invokes argsecho.exe to demonstrate different variations for the Arguments property.</span></span>  
  
 [!code-cpp[Process.Start_static#3](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#3)]
 [!code-csharp[Process.Start_static#3](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#3)]
 [!code-vb[Process.Start_static#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#3)]  
  
 [!code-cpp[Process.Start_static#2](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#2)]
 [!code-csharp[Process.Start_static#2](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#2)]
 [!code-vb[Process.Start_static#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNoWindow">
      <MemberSignature Language="C#" Value="public bool CreateNoWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CreateNoWindow" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.CreateNoWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property CreateNoWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CreateNoWindow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CreateNoWindow : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.CreateNoWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether to start the process without creating a new window to contain it.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-173">프로세스를 새 창에서 시작할지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-173">Gets or sets a value indicating whether to start the process in a new window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-174">프로세스를 포함할 새 창을 만들지 않고 프로세스를 시작해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" /> 입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-174">
              <see langword="true" /> if the process should be started without creating a new window to contain it; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f37f4-175">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-175">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37f4-176">경우는 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 속성은 `true` 또는 <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> 및 <xref:System.Diagnostics.ProcessStartInfo.Password%2A> 속성이 `null`, <xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A> 속성 값은 무시 되 고 새 창이 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-176">If the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property is `true` or the <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> properties are not `null`, the <xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A> property value is ignored and a new window is created.</span></span>  

 <span data-ttu-id="f37f4-177">.NET core macOS 등 Linux, Unix 방식 플랫폼에 직접 만드는 windows를 지원 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-177">.NET Core does not support creating windows directly on Unix-like platforms, including macOS and Linux.</span></span> <span data-ttu-id="f37f4-178">이러한 플랫폼에서이 속성은 무시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-178">This property is ignored on such platforms.</span></span>
  
   
  
## Examples  
 [!code-cpp[Process.Start_instance#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_instance/CPP/processstart.cpp#1)]
 [!code-csharp[Process.Start_instance#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_instance/CS/processstart.cs#1)]
 [!code-vb[Process.Start_instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_instance/VB/processstart.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-179">프로세스를 시작할 때 사용할 도메인을 식별하는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-179">Gets or sets a value that identifies the domain to use when starting the process.</span>
          </span>
          <span data-ttu-id="f37f4-180">이 값이 <see langword="null" />이면 <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> 속성은 UPN 형식으로 지정되어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-180">If this value is <see langword="null" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> property must be specified in UPN format.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-181">프로세스를 시작할 때 사용할 Active Directory 도메인입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-181">The Active Directory domain to use when starting the process.</span>
          </span>
          <span data-ttu-id="f37f4-182">이 값이 <see langword="null" />이면 <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> 속성은 UPN 형식으로 지정되어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-182">If this value is <see langword="null" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> property must be specified in UPN format.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="f37f4-183">이 속성은 주로 Active Directory를 사용 하는 엔터프라이즈 환경 내의 사용자에 게 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-183">This property is primarily of interest to users within enterprise environments that use Active Directory.</span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Environment">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Environment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Environment" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Environment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Environment As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Environment { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Environment : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Diagnostics.ProcessStartInfo.Environment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-184">이 프로세스와 자식 프로세스에 적용되는 환경 변수를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-184">Gets the environment variables that apply to this process and its child processes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-185">이 프로세스와 해당 자식 프로세스에 적용되는 환경 변수를 포함하는 제네릭 사전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-185">A generic dictionary containing the environment variables that apply to this process and its child processes.</span>
          </span>
          <span data-ttu-id="f37f4-186">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-186">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37f4-187">환경 변수는 파일에 대 한 검색 경로, 임시 파일, 응용 프로그램별 옵션 및 기타 유사한 정보에 대 한 디렉터리를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-187">The environment variables contain search paths for files, directories for temporary files, application-specific options, and other similar information.</span></span> <span data-ttu-id="f37f4-188">직접 설정할 수 없어도 <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> 속성을 속성에서 반환 하는 제네릭 사전 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-188">Although you cannot directly set the <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> property, you can modify the generic dictionary returned by the property.</span></span> <span data-ttu-id="f37f4-189">다음 코드에서는 TempPath 환경 변수를 추가 하는 예를 들어: `myProcess.StartInfo.Environment.Add("TempPath", "C:\\Temp")`합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-189">For example, the following code adds a TempPath environment variable: `myProcess.StartInfo.Environment.Add("TempPath", "C:\\Temp")`.</span></span>  <span data-ttu-id="f37f4-190">설정 해야 합니다는 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 속성을 `false` 변경한 후 프로세스를 시작 하 여 <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-190">You must set the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property to `false` to start the process after changing the <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> property.</span></span> <span data-ttu-id="f37f4-191">경우 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 은 `true`, <xref:System.InvalidOperationException> 경우 throw 되는 <xref:System.Diagnostics.Process.Start%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-191">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, an <xref:System.InvalidOperationException> is thrown when the <xref:System.Diagnostics.Process.Start%2A> method is called.</span></span>  
  
 <span data-ttu-id="f37f4-192">사용 하 여.NET Framework 응용 프로그램에는 <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> 속성은 사용 하 여 동일는 <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-192">On .NET Framework applications, using the <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> property is the same as using the <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="M:System.Diagnostics.Process.Start" />
      </Docs>
    </Member>
    <Member MemberName="EnvironmentVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary EnvironmentVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary EnvironmentVariables" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvironmentVariables As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ EnvironmentVariables { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnvironmentVariables : System.Collections.Specialized.StringDictionary" Usage="System.Diagnostics.ProcessStartInfo.EnvironmentVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StringDictionaryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Set of environment variables that apply to this process and child processes.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-193">파일 검색 경로, 임시파일의 디렉터리, 응용 프로그램별 옵션 및 기타 유사한 정보를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-193">Gets search paths for files, directories for temporary files, application-specific options, and other similar information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-194">이 프로세스와 자식 프로세스에 적용되는 환경 변수를 제공하는 문자열 사전입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-194">A string dictionary that provides environment variables that apply to this process and child processes.</span>
          </span>
          <span data-ttu-id="f37f4-195">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-195">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37f4-196">설정할 수 없습니다. 하지만 <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> 속성을 수정할 수 있습니다는 <xref:System.Collections.Specialized.StringDictionary> 속성에서 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-196">Although you cannot set the <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> property, you can modify the <xref:System.Collections.Specialized.StringDictionary> returned by the property.</span></span> <span data-ttu-id="f37f4-197">다음 코드에서는 TempPath 환경 변수를 추가 하는 예를 들어: `myProcess.StartInfo.EnvironmentVariables.Add("TempPath", "C:\\Temp")`합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-197">For example, the following code adds a TempPath environment variable: `myProcess.StartInfo.EnvironmentVariables.Add("TempPath", "C:\\Temp")`.</span></span>  <span data-ttu-id="f37f4-198">설정 해야 합니다는 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 속성을 `false` 변경한 후 프로세스를 시작 하 여 <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-198">You must set the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property to `false` to start the process after changing the <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> property.</span></span> <span data-ttu-id="f37f4-199">경우 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 은 `true`, <xref:System.InvalidOperationException> 경우 throw 되는 <xref:System.Diagnostics.Process.Start%2A> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-199">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, an <xref:System.InvalidOperationException> is thrown when the <xref:System.Diagnostics.Process.Start%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorDialog">
      <MemberSignature Language="C#" Value="public bool ErrorDialog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ErrorDialog" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.ErrorDialog" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorDialog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ErrorDialog { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorDialog : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.ErrorDialog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether to show an error dialog to the user if there is an error.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-200">프로세스를 시작할 수 없는 경우 사용자에게 오류 대화 상자를 표시할지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-200">Gets or sets a value indicating whether an error dialog box is displayed to the user if the process cannot be started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-201">프로세스를 시작할 수 없는 경우 화면에 오류 대화 상자를 표시하려면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-201">
              <see langword="true" /> if an error dialog box should be displayed on the screen if the process cannot be started; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f37f4-202">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-202">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f37f4-203"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 해야 `true` 설정 하려는 경우 <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A> 를 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-203"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> must be `true` if you want to set <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A> to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorDialogParentHandle">
      <MemberSignature Language="C#" Value="public IntPtr ErrorDialogParentHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ErrorDialogParentHandle" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorDialogParentHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ErrorDialogParentHandle { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorDialogParentHandle : nativeint with get, set" Usage="System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-204">프로세스를 시작할 수 없음을 알리는 오류 대화 상자가 표시될 때 사용할 창 핸들을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-204">Gets or sets the window handle to use when an error dialog box is shown for a process that cannot be started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-205">프로세스를 시작할 수 없을 때 표시되는 오류 대화 상자의 핸들에 대한 포인터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-205">A pointer to the handle of the error dialog box that results from a process start failure.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37f4-206">경우 <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A> 은 `true`, <xref:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle%2A> 속성에 표시 되는 대화 상자에 대 한 부모 창 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-206">If <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A> is `true`, the <xref:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle%2A> property specifies the parent window for the dialog box that is shown.</span></span> <span data-ttu-id="f37f4-207">응용 프로그램 전면에 대화 상자에 부모를 지정 하는 것이 유용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-207">It is useful to specify a parent to keep the dialog box in front of the application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.FileName" />
      <MemberSignature Language="VB.NET" Value="Public Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StartFileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The name of the application, document or URL to start.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-208">시작할 응용 프로그램 또는 문서를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-208">Gets or sets the application or document to start.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-209">응용 프로그램과 연결되며 그 응용 프로그램에서 사용할 수 있는 기본 열기 동작이 있는 파일 형식의 문서 이름 또는 시작할 응용 프로그램의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-209">The name of the application to start, or the name of a document of a file type that is associated with an application and that has a default open action available to it.</span>
          </span>
          <span data-ttu-id="f37f4-210">기본값은 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-210">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37f4-211">설정 해야 적어도 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 프로세스를 시작 하기 전에 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-211">You must set at least the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property before you start the process.</span></span> <span data-ttu-id="f37f4-212">파일 이름은 응용 프로그램이 나 문서입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-212">The file name is any application or document.</span></span> <span data-ttu-id="f37f4-213">문서 열린 모든 파일 형식 또는 작업이 연결 된 기본으로 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-213">A document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="f37f4-214">볼 수 있습니다 등록 된 파일 형식과 연결 된 응용 프로그램 컴퓨터에 대 한 사용 하 여는 **폴더 옵션** 운영 체제를 통해 사용할 수 있는 대화 상자.</span><span class="sxs-lookup"><span data-stu-id="f37f4-214">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="f37f4-215">**고급** 단추는 등록 된 특정 파일 형식과 연결 열기 동작이 있는지 여부를 보여 주는 대화 상자에 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-215">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="f37f4-216">파일 형식 집합을 사용할 수 정도 따라 결정의 값에는 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-216">The set of file types available to you depends in part on the value of the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property.</span></span> <span data-ttu-id="f37f4-217">경우 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 은 `true`를 모든 문서를 시작 하 고 사용 하 여 인쇄, 같은 파일에 대 한 작업을 수행할 수는 <xref:System.Diagnostics.Process> 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-217">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, you can start any document and perform operations on the file, such as printing, with the <xref:System.Diagnostics.Process> component.</span></span> <span data-ttu-id="f37f4-218">때 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 은 `false`와 실행 파일만 시작할 수 있습니다는 <xref:System.Diagnostics.Process> 구성 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-218">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`, you can start only executables with the <xref:System.Diagnostics.Process> component.</span></span>  
  
 <span data-ttu-id="f37f4-219">설정 하 여 ClickOnce 응용 프로그램을 시작할 수는 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 속성을 원래 응용 프로그램 설치 위치 (예를 들어 웹 주소).</span><span class="sxs-lookup"><span data-stu-id="f37f4-219">You can start a ClickOnce application by setting the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property to the location (for example, a Web address) from which you originally installed the application.</span></span> <span data-ttu-id="f37f4-220">하드 디스크에 설치 된 위치를 지정 하 여 ClickOnce 응용 프로그램을 시작 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-220">Do not start a ClickOnce application by specifying its installed location on your hard disk.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Process.Start_instance#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_instance/CPP/processstart.cpp#1)]
 [!code-csharp[Process.Start_instance#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_instance/CS/processstart.cs#1)]
 [!code-vb[Process.Start_instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_instance/VB/processstart.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadUserProfile">
      <MemberSignature Language="C#" Value="public bool LoadUserProfile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadUserProfile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.LoadUserProfile" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadUserProfile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LoadUserProfile { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LoadUserProfile : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.LoadUserProfile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-221">Windows 사용자 프로필을 레지스트리에서 로드할지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-221">Gets or sets a value that indicates whether the Windows user profile is to be loaded from the registry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-222">Windows 사용자 프로필을 로드해야 하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-222">
              <see langword="true" /> if the Windows user profile should be loaded; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f37f4-223">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-223">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37f4-224">이 속성은 사용자 이름, 암호 및 도메인을 사용 하 여 프로세스가 시작 되는 경우 참조 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-224">This property is referenced if the process is being started by using the user name, password, and domain.</span></span>  
  
 <span data-ttu-id="f37f4-225">값이 `true`, 사용자의 프로필에는 `HKEY_USERS` 레지스트리 키를 로드 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-225">If the value is `true`, the user's profile in the `HKEY_USERS` registry key is loaded.</span></span> <span data-ttu-id="f37f4-226">프로필을 로드 하는 것은 시간이 많이 걸릴 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-226">Loading the profile can be time-consuming.</span></span> <span data-ttu-id="f37f4-227">따라서 것이 정보에 액세스 해야 하는 경우에이 값을 사용 하 여 `HKEY_CURRENT_USER` 레지스트리 키입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-227">Therefore, it is best to use this value only if you must access the information in the `HKEY_CURRENT_USER` registry key.</span></span>  
  
 <span data-ttu-id="f37f4-228">Windows Server 2003 및 Windows 2000 프로필 언로드될 새 프로세스가 종료 되, 여부는 프로세스를 만들었습니다 자식 프로세스에 관계 없이 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-228">In Windows Server 2003 and Windows 2000, the profile is unloaded after the new process has been terminated, regardless of whether the process has created child processes.</span></span>  
  
 <span data-ttu-id="f37f4-229">Windows XP에서 프로필은 새 프로세스 후와 만들어진 모든 자식 프로세스가 종료 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-229">In Windows XP, the profile is unloaded after the new process and all child processes it has created have been terminated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public System.Security.SecureString Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.SecureString Password" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::SecureString ^ Password { System::Security::SecureString ^ get(); void set(System::Security::SecureString ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : System.Security.SecureString with get, set" Usage="System.Diagnostics.ProcessStartInfo.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-230">프로세스를 시작할 때 사용할 사용자 암호가 포함된 보안 문자열을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-230">Gets or sets a secure string that contains the user password to use when starting the process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-231">프로세스를 시작할 때 사용할 사용자 암호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-231">The user password to use when starting the process.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="f37f4-232"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> 경우 속성을 설정 해야 <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> 및 <xref:System.Diagnostics.ProcessStartInfo.Password%2A> 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-232">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property must be set if <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> are provided.</span></span> <span data-ttu-id="f37f4-233">속성을 설정 하지 않으면 기본 작업 디렉터리는 %SYSTEMROOT%\system32 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-233">If the property is not set, the default working directory is %SYSTEMROOT%\system32.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f37f4-234">설정의 <xref:System.Diagnostics.ProcessStartInfo.Domain%2A>, <xref:System.Diagnostics.ProcessStartInfo.UserName%2A>, 및 <xref:System.Diagnostics.ProcessStartInfo.Password%2A> 속성에는 <xref:System.Diagnostics.ProcessStartInfo> 개체 사용자 자격 증명으로 프로세스를 시작 하기 위한 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-234">Setting the <xref:System.Diagnostics.ProcessStartInfo.Domain%2A>, <xref:System.Diagnostics.ProcessStartInfo.UserName%2A>, and the <xref:System.Diagnostics.ProcessStartInfo.Password%2A> properties in a <xref:System.Diagnostics.ProcessStartInfo> object is the recommended practice for starting a process with user credentials.</span></span>  
  
 <span data-ttu-id="f37f4-235">A <xref:System.Security.SecureString> 개체 비슷합니다는 <xref:System.String> 텍스트 값이 있다는 점에서 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-235">A <xref:System.Security.SecureString> object is like a <xref:System.String> object in that it has a text value.</span></span> <span data-ttu-id="f37f4-236">그러나 값은 <xref:System.Security.SecureString> 개체가 자동으로 암호화, 응용 프로그램이 읽기 전용으로 표시 하 고 응용 프로그램 또는.NET Framework 가비지 수집기에서 컴퓨터 메모리에서 삭제할 수 있습니다 때까지 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-236">However, the value of a <xref:System.Security.SecureString> object is automatically encrypted, it can be modified until your application marks it as read-only, and it can be deleted from computer memory by either your application or the .NET Framework garbage collector.</span></span>  
  
 <span data-ttu-id="f37f4-237">보안 문자열 및이 속성을 설정 하는 데 암호를 구하는 방법의 예에 대 한 자세한 내용은 참조는 <xref:System.Security.SecureString> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-237">For more information about secure strings and an example of how to obtain a password to set this property, see the <xref:System.Security.SecureString> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f37f4-238">에 대 한 값을 제공 하는 경우는 <xref:System.Diagnostics.ProcessStartInfo.Password%2A> 속성에는 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 속성 이어야 합니다 `false`, 또는 <xref:System.InvalidOperationException> throw 됩니다는 <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-238">If you provide a value for the <xref:System.Diagnostics.ProcessStartInfo.Password%2A> property, the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property must be `false`, or an <xref:System.InvalidOperationException> will be thrown when the <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordInClearText">
      <MemberSignature Language="C#" Value="public string PasswordInClearText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordInClearText" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.PasswordInClearText" />
      <MemberSignature Language="VB.NET" Value="Public Property PasswordInClearText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PasswordInClearText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordInClearText : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.PasswordInClearText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-239">프로세스를 시작할 때 사용할 일반 텍스트 형식의 사용자 암호를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-239">Gets or sets the user password in clear text to use when starting the process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-240">일반 텍스트 형식의 사용자 암호입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-240">The user password in clear text.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectStandardError">
      <MemberSignature Language="C#" Value="public bool RedirectStandardError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RedirectStandardError" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectStandardError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RedirectStandardError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RedirectStandardError : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether the process's error output is written to the Process instance's StandardError member.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-241">응용 프로그램의 오류 출력을 <see cref="P:System.Diagnostics.Process.StandardError" /> 스트림에 쓸지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-241">Gets or sets a value that indicates whether the error output of an application is written to the <see cref="P:System.Diagnostics.Process.StandardError" /> stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-242">오류 출력을 <see cref="P:System.Diagnostics.Process.StandardError" />에 써야 하는 경우 <see langword="true" />이고, 그렇지 않으면<see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-242">
              <see langword="true" /> if error output should be written to <see cref="P:System.Diagnostics.Process.StandardError" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f37f4-243">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-243">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37f4-244">경우는 <xref:System.Diagnostics.Process> 표준 오류 스트림에 텍스트를 쓰는 해당 텍스트는 일반적으로 콘솔에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-244">When a <xref:System.Diagnostics.Process> writes text to its standard error stream, that text is typically displayed on the console.</span></span> <span data-ttu-id="f37f4-245">리디렉션하여는 <xref:System.Diagnostics.Process.StandardError%2A> 스트림을 조작 하거나 프로세스의 오류 출력을 표시 하지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-245">By redirecting the <xref:System.Diagnostics.Process.StandardError%2A> stream, you can manipulate or suppress the error output of a process.</span></span> <span data-ttu-id="f37f4-246">예를 들어 텍스트를 필터링 다르게 형식을 지정 하거나 콘솔 및 지정 된 로그 파일 모두에 출력을 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-246">For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f37f4-247">설정 해야 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 를 `false` 설정 하려는 경우 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> 를 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-247">You must set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> to `false` if you want to set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> to `true`.</span></span> <span data-ttu-id="f37f4-248">그렇지 않은 경우에서 읽기는 <xref:System.Diagnostics.Process.StandardError%2A> 스트림 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-248">Otherwise, reading from the <xref:System.Diagnostics.Process.StandardError%2A> stream throws an exception.</span></span>  
  
 <span data-ttu-id="f37f4-249">리디렉션된 <xref:System.Diagnostics.Process.StandardError%2A> 동기적 또는 비동기적으로 스트림은 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-249">The redirected <xref:System.Diagnostics.Process.StandardError%2A> stream can be read synchronously or asynchronously.</span></span> <span data-ttu-id="f37f4-250">와 같은 메서드 <xref:System.IO.StreamReader.Read%2A>, <xref:System.IO.StreamReader.ReadLine%2A> 및 <xref:System.IO.StreamReader.ReadToEnd%2A> 프로세스의 오류 출력 스트림에서 동기 읽기 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-250">Methods such as <xref:System.IO.StreamReader.Read%2A>, <xref:System.IO.StreamReader.ReadLine%2A> and <xref:System.IO.StreamReader.ReadToEnd%2A> perform synchronous read operations on the error output stream of the process.</span></span> <span data-ttu-id="f37f4-251">이들 동기 읽기 작업이 연결 될 때까지 완료 되지 않고 <xref:System.Diagnostics.Process> 쓰려는 해당 <xref:System.Diagnostics.Process.StandardError%2A> 스트리밍하거나 스트림을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-251">These synchronous read operations do not complete until the associated <xref:System.Diagnostics.Process> writes to its <xref:System.Diagnostics.Process.StandardError%2A> stream, or closes the stream.</span></span>  
  
 <span data-ttu-id="f37f4-252">반면, <xref:System.Diagnostics.Process.BeginErrorReadLine%2A> 시작 비동기 읽기 작업에는 <xref:System.Diagnostics.Process.StandardError%2A> 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-252">In contrast, <xref:System.Diagnostics.Process.BeginErrorReadLine%2A> starts asynchronous read operations on the <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span> <span data-ttu-id="f37f4-253">이 메서드는 스트림 출력에 대 한 지정 된 이벤트 처리기 하 고 이벤트 처리기에 스트림을 출력 하는 동안 다른 작업을 수행할 수 있는 호출자에 게 즉시 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-253">This method enables a designated event handler for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f37f4-254">비동기 출력을 처리 하는 응용 프로그램은 <xref:System.Diagnostics.Process.WaitForExit%2A> 메서드를 출력 버퍼 플러시 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-254">The application that is processing the asynchronous output should call the <xref:System.Diagnostics.Process.WaitForExit%2A> method to ensure that the output buffer has been flushed.</span></span>  
  
 <span data-ttu-id="f37f4-255">동기 작업에서 읽는 호출자 간의 종속성을 유발 읽기는 <xref:System.Diagnostics.Process.StandardError%2A> 스트림과 자식 해당 스트림에 쓰기를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-255">Synchronous read operations introduce a dependency between the caller reading from the <xref:System.Diagnostics.Process.StandardError%2A> stream and the child process writing to that stream.</span></span> <span data-ttu-id="f37f4-256">이러한 종속성으로 인해 교착 상태가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-256">These dependencies can cause deadlock conditions.</span></span> <span data-ttu-id="f37f4-257">호출자에 게 자식 프로세스의 리디렉션된 스트림에서 읽으면 자식에 종속 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-257">When the caller reads from the redirected stream of a child process, it is dependent on the child.</span></span> <span data-ttu-id="f37f4-258">호출자에 게 자식 스트림에 쓰거나 스트림이 닫을 때까지 읽기 작업에 대 한 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-258">The caller waits for the read operation until the child writes to the stream or closes the stream.</span></span> <span data-ttu-id="f37f4-259">리디렉션된 스트림을 맞게 충분 한 데이터를 기록 하는 자식 프로세스를 부모에 종속 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-259">When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</span></span> <span data-ttu-id="f37f4-260">자식 프로세스 부모 전체 스트림을 읽기 / 스트림의 닫을 때까지 다음 쓰기 작업에 대 한 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-260">The child process waits for the next write operation until the parent reads from the full stream or closes the stream.</span></span> <span data-ttu-id="f37f4-261">호출자와 자식 프로세스는 작업을 완료 하려면 서로 대기 하 고 아무 작업도 처리할 수 하는 경우 교착 상태가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-261">The deadlock condition results when the caller and child process wait for each other to complete an operation, and neither can continue.</span></span> <span data-ttu-id="f37f4-262">호출자와 자식 프로세스 간의 종속성을 평가 하 여 교착 상태를 방지할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-262">You can avoid deadlocks by evaluating dependencies between the caller and child process.</span></span>  
  
 <span data-ttu-id="f37f4-263">예를 들어 다음 C# 코드에서 리디렉션된 스트림에서 읽고 자식 프로세스가 종료 될 때까지 대기 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-263">For example, the following C# code shows how to read from a redirected stream and wait for the child process to exit.</span></span>  
  
```csharp  
// Start the child process.  
 Process p = new Process();  
 // Redirect the error stream of the child process.  
 p.StartInfo.UseShellExecute = false;  
 p.StartInfo.RedirectStandardError = true;  
 p.StartInfo.FileName = "Write500Lines.exe";  
 p.Start();  
 // Do not wait for the child process to exit before  
 // reading to the end of its redirected error stream.  
 // p.WaitForExit();  
 // Read the error stream first and then wait.  
 string error = p.StandardError.ReadToEnd();  
 p.WaitForExit();  
```  
  
 <span data-ttu-id="f37f4-264">호출 하 여 교착 상태를 방지 하는 코드 예제에서는 `p.StandardError.ReadToEnd` 전에 `p.WaitForExit`합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-264">The code example avoids a deadlock condition by calling `p.StandardError.ReadToEnd` before `p.WaitForExit`.</span></span> <span data-ttu-id="f37f4-265">부모 호출을 처리 하는 경우 교착 상태가 발생할 수 있습니다 `p.WaitForExit` 전에 `p.StandardError.ReadToEnd` 자식 프로세스 리디렉션된 스트림에 맞게 충분 한 텍스트를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-265">A deadlock condition can result if the parent process calls `p.WaitForExit` before `p.StandardError.ReadToEnd` and the child process writes enough text to fill the redirected stream.</span></span> <span data-ttu-id="f37f4-266">부모 프로세스를 종료 하는 자식 프로세스 무기한 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-266">The parent process would wait indefinitely for the child process to exit.</span></span> <span data-ttu-id="f37f4-267">자식 프로세스 전체에서 읽을 수 부모 무기한 대기 <xref:System.Diagnostics.Process.StandardError%2A> 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-267">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
  
 <span data-ttu-id="f37f4-268">표준 출력과 표준 오류 스트림 모두에서 모든 텍스트를 읽을 때에 유사한 문제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-268">There is a similar issue when you read all text from both the standard output and standard error streams.</span></span> <span data-ttu-id="f37f4-269">예를 들어 다음 C# 코드는 두 스트림이 읽기 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-269">For example, the following C# code performs a read operation on both streams.</span></span>  
  
```csharp  
// Do not perform a synchronous read to the end of both  
// redirected streams.  
// string output = p.StandardOutput.ReadToEnd();  
// string error = p.StandardError.ReadToEnd();  
// p.WaitForExit();  
// Use asynchronous read operations on at least one of the streams.  
p.BeginOutputReadLine();  
string error = p.StandardError.ReadToEnd();  
p.WaitForExit();  
```  
  
 <span data-ttu-id="f37f4-270">비동기 읽기 작업에서 수행 하 여 교착 상태를 방지 하는 코드 예제는 <xref:System.Diagnostics.Process.StandardOutput%2A> 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-270">The code example avoids the deadlock condition by performing asynchronous read operations on the <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="f37f4-271">부모 호출을 처리 하는 경우 교착 상태가 발생 `p.StandardOutput.ReadToEnd` 이어서 `p.StandardError.ReadToEnd` 자식 프로세스 오류 스트림을 맞게 충분 한 텍스트를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-271">A deadlock condition results if the parent process calls `p.StandardOutput.ReadToEnd` followed by `p.StandardError.ReadToEnd` and the child process writes enough text to fill its error stream.</span></span> <span data-ttu-id="f37f4-272">부모 프로세스는 자식 프로세스를 닫으려면 무기한 대기 해당 <xref:System.Diagnostics.Process.StandardOutput%2A> 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-272">The parent process would wait indefinitely for the child process to close its <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="f37f4-273">자식 프로세스 전체에서 읽을 수 부모 무기한 대기 <xref:System.Diagnostics.Process.StandardError%2A> 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-273">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
  
 <span data-ttu-id="f37f4-274">이러한 종속성과 교착 방지 하기 위해 비동기 읽기 작업을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-274">You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</span></span> <span data-ttu-id="f37f4-275">또는 두 개의 스레드를 만들고 각 스트림에서 별도 스레드에서 출력을 읽는 하 여 교착 상태를 방지할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-275">Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37f4-276">다음 예제에서는 `net use` 매핑할 네트워크 리소스에 대 한 사용자가 제공한 인수 명령과 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-276">The following example uses the `net use` command together with a user-supplied argument to map a network resource.</span></span> <span data-ttu-id="f37f4-277">그런 다음 net 명령의 표준 오류 스트림을 읽고 콘솔에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-277">It then reads the standard error stream of the net command and writes it to console.</span></span>  
  
 [!code-cpp[Process_StandardError#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process_StandardError/CPP/source.cpp#1)]
 [!code-csharp[Process_StandardError#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process_StandardError/CS/source.cs#1)]
 [!code-vb[Process_StandardError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process_StandardError/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="P:System.Diagnostics.Process.StandardError" />
      </Docs>
    </Member>
    <Member MemberName="RedirectStandardInput">
      <MemberSignature Language="C#" Value="public bool RedirectStandardInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RedirectStandardInput" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectStandardInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RedirectStandardInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RedirectStandardInput : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether the process command input is read from the Process instance's StandardInput member.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-278">응용 프로그램의 입력을 <see cref="P:System.Diagnostics.Process.StandardInput" /> 스트림에서 읽을지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-278">Gets or sets a value indicating whether the input for an application is read from the <see cref="P:System.Diagnostics.Process.StandardInput" /> stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-279">입력을 <see cref="P:System.Diagnostics.Process.StandardInput" />에서 읽어야 하는 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-279">
              <see langword="true" /> if input should be read from <see cref="P:System.Diagnostics.Process.StandardInput" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f37f4-280">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-280">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37f4-281">A <xref:System.Diagnostics.Process> 는 표준 입력된 스트림 일반적으로 키보드에서에서 입력된 텍스트를 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-281">A <xref:System.Diagnostics.Process> can read input text from its standard input stream, typically the keyboard.</span></span> <span data-ttu-id="f37f4-282">리디렉션하여는 <xref:System.Diagnostics.Process.StandardInput%2A> 스트림에 프로세스의 입력을 프로그래밍 방식으로 지정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-282">By redirecting the <xref:System.Diagnostics.Process.StandardInput%2A> stream, you can programmatically specify the input of a process.</span></span> <span data-ttu-id="f37f4-283">예를 들어, 키보드 입력을 사용 하는 대신 지정 된 파일의 내용에서 텍스트 또는 다른 응용 프로그램에서 출력을 제공할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-283">For example, instead of using keyboard input, you can provide text from the contents of a designated file or output from another application.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f37f4-284">설정 해야 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 를 `false` 설정 하려는 경우 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A> 를 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-284">You must set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> to `false` if you want to set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A> to `true`.</span></span> <span data-ttu-id="f37f4-285">그렇지 않은 경우에 쓰기는 <xref:System.Diagnostics.Process.StandardInput%2A> 스트림 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-285">Otherwise, writing to the <xref:System.Diagnostics.Process.StandardInput%2A> stream throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37f4-286">리디렉션하는 방법을 보여 주는 다음 예제는 <xref:System.Diagnostics.Process.StandardInput%2A> 프로세스의 스트림입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-286">The following example illustrates how to redirect the <xref:System.Diagnostics.Process.StandardInput%2A> stream of a process.</span></span> <span data-ttu-id="f37f4-287">`sort` 명령 읽고 텍스트 입력을 정렬 하는 콘솔 응용 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-287">The `sort` command is a console application that reads and sorts text input.</span></span>  
  
 <span data-ttu-id="f37f4-288">이 예제에서는 시작는 `sort` 명령이 리디렉션된 입력을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-288">The example starts the `sort` command with redirected input.</span></span> <span data-ttu-id="f37f4-289">그런 다음 텍스트를 위한 사용자 요청 하 고 텍스트를 전달 된 `sort` 프로세스 리디렉션된을 통한 <xref:System.Diagnostics.Process.StandardInput%2A> 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-289">It then prompts the user for text, and passes the text to the `sort` process through the redirected <xref:System.Diagnostics.Process.StandardInput%2A> stream.</span></span> <span data-ttu-id="f37f4-290">`sort` 결과가 콘솔에 사용자에 게 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-290">The `sort` results are displayed to the user on the console.</span></span>  
  
 [!code-cpp[Process_StandardInput#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process_StandardInput/CPP/process_standardinput.cpp#1)]
 [!code-csharp[Process_StandardInput#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process_StandardInput/CS/process_standardinput.cs#1)]
 [!code-vb[Process_StandardInput#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process_StandardInput/VB/process_standardinput.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="P:System.Diagnostics.Process.StandardInput" />
      </Docs>
    </Member>
    <Member MemberName="RedirectStandardOutput">
      <MemberSignature Language="C#" Value="public bool RedirectStandardOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RedirectStandardOutput" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectStandardOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RedirectStandardOutput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RedirectStandardOutput : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether the process output is written to the Process instance's StandardOutput member.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-291">응용 프로그램의 텍스트 출력을 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 스트림에 쓸지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-291">Gets or sets a value that indicates whether the textual output of an application is written to the <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-292">출력을 <see cref="P:System.Diagnostics.Process.StandardOutput" />에 써야 하는 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-292">
              <see langword="true" /> if output should be written to <see cref="P:System.Diagnostics.Process.StandardOutput" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f37f4-293">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-293">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37f4-294">경우는 <xref:System.Diagnostics.Process> 해당 텍스트는 일반적으로 콘솔에 표시 됩니다 텍스트를 표준 스트림에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-294">When a <xref:System.Diagnostics.Process> writes text to its standard stream, that text is typically displayed on the console.</span></span> <span data-ttu-id="f37f4-295">설정 하 여 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A> 를 `true` 리디렉션하는 <xref:System.Diagnostics.Process.StandardOutput%2A> 스트림을 조작 하거나 프로세스의 출력을 표시 하지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-295">By setting <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A> to `true` to redirect the <xref:System.Diagnostics.Process.StandardOutput%2A> stream, you can manipulate or suppress the output of a process.</span></span> <span data-ttu-id="f37f4-296">예를 들어 텍스트를 필터링 다르게 형식을 지정 하거나 콘솔 및 지정 된 로그 파일 모두에 출력을 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-296">For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f37f4-297">설정 해야 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 를 `false` 설정 하려는 경우 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A> 를 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-297">You must set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> to `false` if you want to set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A> to `true`.</span></span> <span data-ttu-id="f37f4-298">그렇지 않은 경우에서 읽기는 <xref:System.Diagnostics.Process.StandardOutput%2A> 스트림 예외를 throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-298">Otherwise, reading from the <xref:System.Diagnostics.Process.StandardOutput%2A> stream throws an exception.</span></span>  
  
 <span data-ttu-id="f37f4-299">리디렉션된 <xref:System.Diagnostics.Process.StandardOutput%2A> 동기적 또는 비동기적으로 스트림은 읽을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-299">The redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream can be read synchronously or asynchronously.</span></span> <span data-ttu-id="f37f4-300">와 같은 메서드 <xref:System.IO.StreamReader.Read%2A>, <xref:System.IO.StreamReader.ReadLine%2A>, 및 <xref:System.IO.StreamReader.ReadToEnd%2A> 프로세스의 출력 스트림에서 동기 읽기 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-300">Methods such as <xref:System.IO.StreamReader.Read%2A>, <xref:System.IO.StreamReader.ReadLine%2A>, and <xref:System.IO.StreamReader.ReadToEnd%2A> perform synchronous read operations on the output stream of the process.</span></span> <span data-ttu-id="f37f4-301">이들 동기 읽기 작업이 연결 될 때까지 완료 되지 않고 <xref:System.Diagnostics.Process> 쓰려는 해당 <xref:System.Diagnostics.Process.StandardOutput%2A> 스트리밍하거나 스트림을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-301">These synchronous read operations do not complete until the associated <xref:System.Diagnostics.Process> writes to its <xref:System.Diagnostics.Process.StandardOutput%2A> stream, or closes the stream.</span></span>  
  
 <span data-ttu-id="f37f4-302">반면, <xref:System.Diagnostics.Process.BeginOutputReadLine%2A> 시작 비동기 읽기 작업에는 <xref:System.Diagnostics.Process.StandardOutput%2A> 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-302">In contrast, <xref:System.Diagnostics.Process.BeginOutputReadLine%2A> starts asynchronous read operations on the <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="f37f4-303">이 메서드는 지정 된 이벤트 처리기를 사용 하면 (참조 <xref:System.Diagnostics.Process.OutputDataReceived>) 출력 스트림 및 즉시 호출자에 게 반환, 있는 동안 수행할 수 있습니다 다른 작업 출력 스트림 이벤트 처리기에 전송 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-303">This method enables a designated event handler (see <xref:System.Diagnostics.Process.OutputDataReceived>) for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f37f4-304">비동기 출력을 처리 하는 응용 프로그램은 <xref:System.Diagnostics.Process.WaitForExit%2A> 메서드를 출력 버퍼 플러시 되었습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-304">The application that is processing the asynchronous output should call the <xref:System.Diagnostics.Process.WaitForExit%2A> method to ensure that the output buffer has been flushed.</span></span>  
  
 <span data-ttu-id="f37f4-305">동기 작업에서 읽는 호출자 간의 종속성을 유발 읽기는 <xref:System.Diagnostics.Process.StandardOutput%2A> 스트림과 자식 해당 스트림에 쓰기를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-305">Synchronous read operations introduce a dependency between the caller reading from the <xref:System.Diagnostics.Process.StandardOutput%2A> stream and the child process writing to that stream.</span></span> <span data-ttu-id="f37f4-306">이러한 종속성으로 인해 교착 상태가 발생할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-306">These dependencies can cause deadlock conditions.</span></span> <span data-ttu-id="f37f4-307">호출자에 게 자식 프로세스의 리디렉션된 스트림에서 읽으면 자식에 종속 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-307">When the caller reads from the redirected stream of a child process, it is dependent on the child.</span></span> <span data-ttu-id="f37f4-308">호출자에 게 자식 스트림에 쓰거나 스트림이 닫을 때까지 읽기 작업에 대 한 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-308">The caller waits for the read operation until the child writes to the stream or closes the stream.</span></span> <span data-ttu-id="f37f4-309">리디렉션된 스트림을 맞게 충분 한 데이터를 기록 하는 자식 프로세스를 부모에 종속 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-309">When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</span></span> <span data-ttu-id="f37f4-310">자식 프로세스 부모 전체 스트림을 읽기 / 스트림의 닫을 때까지 다음 쓰기 작업에 대 한 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-310">The child process waits for the next write operation until the parent reads from the full stream or closes the stream.</span></span> <span data-ttu-id="f37f4-311">호출자와 자식 프로세스는 작업을 완료 하려면 서로 대기 하 고 아무 작업도 처리할 수 하는 경우 교착 상태가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-311">The deadlock condition results when the caller and child process wait for each other to complete an operation, and neither can continue.</span></span> <span data-ttu-id="f37f4-312">호출자와 자식 프로세스 간의 종속성을 평가 하 여 교착 상태를 방지할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-312">You can avoid deadlocks by evaluating dependencies between the caller and child process.</span></span>  
  
 <span data-ttu-id="f37f4-313">예를 들어 다음 C# 코드에서 리디렉션된 스트림에서 읽고 자식 프로세스가 종료 될 때까지 대기 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-313">For example, the following C# code shows how to read from a redirected stream and wait for the child process to exit.</span></span>  
  
```csharp  
Process p = new Process();  
p.StartInfo.UseShellExecute = false;  
p.StartInfo.RedirectStandardOutput = true;  
p.StartInfo.FileName = "Write500Lines.exe";  
p.Start();  
  
// To avoid deadlocks, always read the output stream first and then wait.  
string output = p.StandardOutput.ReadToEnd();  
p.WaitForExit();  
```  
  
 <span data-ttu-id="f37f4-314">호출 하 여 교착 상태를 방지 하는 코드 예제에서는 `p.StandardOutput.ReadToEnd` 전에 `p.WaitForExit`합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-314">The code example avoids a deadlock condition by calling `p.StandardOutput.ReadToEnd` before `p.WaitForExit`.</span></span> <span data-ttu-id="f37f4-315">부모 호출을 처리 하는 경우 교착 상태가 발생할 수 있습니다 `p.WaitForExit` 전에 `p.StandardOutput.ReadToEnd` 자식 프로세스 리디렉션된 스트림에 맞게 충분 한 텍스트를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-315">A deadlock condition can result if the parent process calls `p.WaitForExit` before `p.StandardOutput.ReadToEnd` and the child process writes enough text to fill the redirected stream.</span></span> <span data-ttu-id="f37f4-316">부모 프로세스를 종료 하는 자식 프로세스 무기한 대기 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-316">The parent process would wait indefinitely for the child process to exit.</span></span> <span data-ttu-id="f37f4-317">자식 프로세스 전체에서 읽을 수 부모 무기한 대기 <xref:System.Diagnostics.Process.StandardOutput%2A> 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-317">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span>  
  
 <span data-ttu-id="f37f4-318">표준 출력과 표준 오류 스트림 모두에서 모든 텍스트를 읽을 때에 유사한 문제가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-318">There is a similar issue when you read all text from both the standard output and standard error streams.</span></span> <span data-ttu-id="f37f4-319">예를 들어 다음 C# 코드는 두 스트림이 읽기 작업을 수행합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-319">For example, the following C# code performs a read operation on both streams.</span></span>  
  
```csharp  
// To avoid deadlocks, use asynchronous read operations on at least one of the streams.  
// Do not perform a synchronous read to the end of both redirected streams.  
p.BeginOutputReadLine();  
string error = p.StandardError.ReadToEnd();  
p.WaitForExit();  
```  
  
 <span data-ttu-id="f37f4-320">비동기 읽기 작업에서 수행 하 여 교착 상태를 방지 하는 코드 예제는 <xref:System.Diagnostics.Process.StandardOutput%2A> 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-320">The code example avoids the deadlock condition by performing asynchronous read operations on the <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="f37f4-321">부모 호출을 처리 하는 경우 교착 상태가 발생 `p.StandardOutput.ReadToEnd` 이어서 `p.StandardError.ReadToEnd` 자식 프로세스 오류 스트림을 맞게 충분 한 텍스트를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-321">A deadlock condition results if the parent process calls `p.StandardOutput.ReadToEnd` followed by `p.StandardError.ReadToEnd` and the child process writes enough text to fill its error stream.</span></span> <span data-ttu-id="f37f4-322">부모 프로세스는 자식 프로세스를 닫으려면 무기한 대기 해당 <xref:System.Diagnostics.Process.StandardOutput%2A> 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-322">The parent process would wait indefinitely for the child process to close its <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="f37f4-323">자식 프로세스 전체에서 읽을 수 부모 무기한 대기 <xref:System.Diagnostics.Process.StandardError%2A> 스트림 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-323">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
  
 <span data-ttu-id="f37f4-324">이러한 종속성과 교착 방지 하기 위해 비동기 읽기 작업을 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-324">You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</span></span> <span data-ttu-id="f37f4-325">또는 두 개의 스레드를 만들고 각 스트림에서 별도 스레드에서 출력을 읽는 하 여 교착 상태를 방지할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-325">Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</span></span>  
  
   
  
## Examples  
 [!code-cpp[ProcessOneStream#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessOneStream/CPP/stdstr.cpp#1)]
 [!code-csharp[ProcessOneStream#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessOneStream/CS/stdstr.cs#1)]
 [!code-vb[ProcessOneStream#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessOneStream/VB/stdstr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="P:System.Diagnostics.Process.StandardOutput" />
      </Docs>
    </Member>
    <Member MemberName="StandardErrorEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding StandardErrorEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardErrorEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardErrorEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ StandardErrorEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StandardErrorEncoding : System.Text.Encoding with get, set" Usage="System.Diagnostics.ProcessStartInfo.StandardErrorEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-326">오류 출력에 대한 기본 설정 인코딩을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-326">Gets or sets the preferred encoding for error output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-327">오류 출력에 대한 기본 설정 인코딩을 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-327">An object that represents the preferred encoding for error output.</span>
          </span>
          <span data-ttu-id="f37f4-328">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-328">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37f4-329">하는 경우의 값은 <xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A> 속성은 `null`, 프로세스 오류 출력에 대 한 기본 표준 오류 인코딩을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-329">If the value of the <xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A> property is `null`, the process uses the default standard error encoding for error output.</span></span> <span data-ttu-id="f37f4-330"><xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A> 프로세스를 시작 하기 전에 속성을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-330">The <xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A> property must be set before the process is started.</span></span> <span data-ttu-id="f37f4-331">이 속성을 설정 해도 지정 된 인코딩을;는 프로세스에서 사용 되도록 보장 하지 않습니다 프로세스에는 지 원하는 인코딩을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-331">Setting this property does not guarantee that the process will use the specified encoding; the process will use only those encodings that it supports.</span></span> <span data-ttu-id="f37f4-332">지원 되는 인코딩을 결정 하는 응용 프로그램을 테스트 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-332">The application should be tested to determine which encodings are supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardInputEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding StandardInputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardInputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.StandardInputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardInputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ StandardInputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StandardInputEncoding : System.Text.Encoding with get, set" Usage="System.Diagnostics.ProcessStartInfo.StandardInputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding StandardOutputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardOutputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardOutputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ StandardOutputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StandardOutputEncoding : System.Text.Encoding with get, set" Usage="System.Diagnostics.ProcessStartInfo.StandardOutputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-333">표준 출력에 대한 기본 설정 인코딩을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-333">Gets or sets the preferred encoding for standard output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-334">표준 출력에 대한 기본 설정 인코딩을 나타내는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-334">An object that represents the preferred encoding for standard output.</span>
          </span>
          <span data-ttu-id="f37f4-335">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-335">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37f4-336">하는 경우의 값은 <xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A> 속성은 `null`, 프로세스는 표준 출력에 대 한 기본 표준 출력 인코딩을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-336">If the value of the <xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A> property is `null`, the process uses the default standard output encoding for the standard output.</span></span> <span data-ttu-id="f37f4-337"><xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A> 프로세스를 시작 하기 전에 속성을 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-337">The <xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A> property must be set before the process is started.</span></span> <span data-ttu-id="f37f4-338">이 속성을 설정 해도 프로세스에서 지정 된 인코딩을 사용 되도록 보장 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-338">Setting this property does not guarantee that the process will use the specified encoding.</span></span> <span data-ttu-id="f37f4-339">지원 되는 인코딩을 결정 하는 응용 프로그램을 테스트 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-339">The application should be tested to determine which encodings the process supports.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-340">프로세스를 시작할 때 사용할 사용자 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-340">Gets or sets the user name to use when starting the process.</span>
          </span>
          <span data-ttu-id="f37f4-341">
            <paramref name="user" />@<paramref name="DNS_domain_name" /> UPN 형식을 사용 하는 경우 <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> 속성은 <see langword="null" />이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-341">If you use the UPN format, <paramref name="user" />@<paramref name="DNS_domain_name" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> property must be <see langword="null" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-342">프로세스를 시작할 때 사용할 사용자 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-342">The user name to use when starting the process.</span>
          </span>
          <span data-ttu-id="f37f4-343">
            <paramref name="user" />@<paramref name="DNS_domain_name" /> UPN 형식을 사용 하는 경우 <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> 속성은 <see langword="null" />이어야 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-343">If you use the UPN format, <paramref name="user" />@<paramref name="DNS_domain_name" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> property must be <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="f37f4-344"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> 경우 속성을 설정 해야 <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> 및 <xref:System.Diagnostics.ProcessStartInfo.Password%2A> 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-344">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property must be set if <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> are provided.</span></span> <span data-ttu-id="f37f4-345">속성을 설정 하지 않으면 기본 작업 디렉터리는 %SYSTEMROOT%\system32 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-345">If the property is not set, the default working directory is %SYSTEMROOT%\system32.</span></span>  
  
 <span data-ttu-id="f37f4-346">경우는 <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> 속성은 `null` 또는 빈 문자열인 경우는 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 속성 이어야 합니다 `false`, 또는 <xref:System.InvalidOperationException> throw 됩니다는 <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-346">If the <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> property is not `null` or an empty string, the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property must be `false`, or an <xref:System.InvalidOperationException> will be thrown when the <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseShellExecute">
      <MemberSignature Language="C#" Value="public bool UseShellExecute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseShellExecute" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
      <MemberSignature Language="VB.NET" Value="Public Property UseShellExecute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseShellExecute { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseShellExecute : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.UseShellExecute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether to use the operating system shell to start the process.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-347">프로세스를 시작할 때 운영 체제 셸을 사용할지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-347">Gets or sets a value indicating whether to use the operating system shell to start the process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-348">프로세스를 시작할 때 셸을 사용하려면 <see langword="true" />이고, 실행 파일에서 직접 프로세스를 만들어야 하면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-348">
              <see langword="true" /> if the shell should be used when starting the process; <see langword="false" /> if the process should be created directly from the executable file.</span>
          </span>
          <span data-ttu-id="f37f4-349">기본값은 <see langword="true" /> .NET Framework 응용 프로그램에 및 <see langword="false" /> .NET Core 응용 프로그램에 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-349">The default is <see langword="true" /> on .NET Framework apps and <see langword="false" /> on .NET Core apps.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37f4-350">이 속성을 설정 `false` 입력, 출력 및 오류 스트림을 리디렉션할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-350">Setting this property to `false` enables you to redirect input, output, and error streams.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f37f4-351"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 이어야 합니다 `false` 경우는 <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> 속성은 `null` 또는 빈 문자열인 경우 또는 <xref:System.InvalidOperationException> throw 됩니다는 <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-351"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> must be `false` if the <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> property is not `null` or an empty string, or an <xref:System.InvalidOperationException> will be thrown when the <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> method is called.</span></span>  
  
 <span data-ttu-id="f37f4-352">운영 체제 셸을 사용 하 여 프로세스를 시작 하는 경우에 문서 (즉, 기본 열기 동작이 있는 실행 개체와 연결 된 모든 등록 된 파일 형식)를 시작할 고 사용 하 여 인쇄, 같은 파일에 대 한 작업을 수행할 수 있습니다는 <xref:System.Diagnostics.Process> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-352">When you use the operating system shell to start processes, you can start any document (which is any registered file type associated with an executable that has a default open action) and perform operations on the file, such as printing, by using the <xref:System.Diagnostics.Process> object.</span></span> <span data-ttu-id="f37f4-353">때 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 은 `false`를 사용 하 여 실행 파일만 시작할 수 있습니다는 <xref:System.Diagnostics.Process> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-353">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`, you can start only executables by using the <xref:System.Diagnostics.Process> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f37f4-354"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 해야 `true` 설정 하는 경우는 <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A> 속성을 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-354"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> must be `true` if you set the <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="f37f4-355"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> 속성의 값에 따라 다르게 동작 하는 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-355">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property behaves differently depending on the value of the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property.</span></span> <span data-ttu-id="f37f4-356">때 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 은 `true`, <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> 속성 실행 파일의 위치를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-356">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property specifies the location of the executable.</span></span> <span data-ttu-id="f37f4-357">경우 <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> 이 빈 문자열인 경우 현재 디렉터리에 실행 파일이 포함 되어 있음을 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-357">If <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> is an empty string, it is assumed that the current directory contains the executable.</span></span>  
  
 <span data-ttu-id="f37f4-358">때 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 은 `false`, <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> 실행 파일을 찾으려고 속성이 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-358">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property is not used to find the executable.</span></span> <span data-ttu-id="f37f4-359">대신, 시작 되 고 새 프로세스의 컨텍스트 내 에서만 의미가 하는 프로세스에 의해서만 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-359">Instead, it is used only by the process that is started and has meaning only within the context of the new process.</span></span> <span data-ttu-id="f37f4-360">때 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 은 `false`, <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 속성, 실행 파일에는 정규화 된 경로 또는 시스템이 PATH 환경 변수에서 지정한 폴더 내에서 찾아야 하는 간단한 실행 파일 이름이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-360">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`, the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property can be either a fully qualified path to the executable, or a simple executable name that the system will attempt to find within folders specified by the PATH environment variable.</span></span>  
  
   
  
## Examples  
 [!code-cpp[ProcessOneStream#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessOneStream/CPP/stdstr.cpp#1)]
 [!code-csharp[ProcessOneStream#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessOneStream/CS/stdstr.cs#1)]
 [!code-vb[ProcessOneStream#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessOneStream/VB/stdstr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f37f4-361">UWP(유니버설 Windows 플랫폼) 앱에서 값을 <see langword="true" />로 설정하려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-361">An attempt to set the value to <see langword="true" /> on Universal Windows Platform (UWP) apps occurs.</span>
          </span>
        </exception>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
      </Docs>
    </Member>
    <Member MemberName="Verb">
      <MemberSignature Language="C#" Value="public string Verb { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Verb" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Verb" />
      <MemberSignature Language="VB.NET" Value="Public Property Verb As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Verb { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Verb : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.Verb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.VerbConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The verb to apply to the document specified by the FileName property.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-362">
            <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 속성이 지정한 응용 프로그램이나 문서를 열 때 사용할 동사를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-362">Gets or sets the verb to use when opening the application or document specified by the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-363">프로세스가 여는 파일을 사용하여 수행할 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-363">The action to take with the file that the process opens.</span>
          </span>
          <span data-ttu-id="f37f4-364">기본값은 작업이 없음을 나타내는 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-364">The default is an empty string (""), which signifies no action.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37f4-365">각 파일 이름 확장명은 고유한을 사용 하 여 가져올 수 있는 동사는 <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-365">Each file name extension has its own set of verbs, which can be obtained by using the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property.</span></span> <span data-ttu-id="f37f4-366">예를 들어는 "`print`" 동사를 사용 하 여 지정 하는 문서를 인쇄 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-366">For example, the "`print`" verb will print a document specified by using <xref:System.Diagnostics.ProcessStartInfo.FileName%2A>.</span></span> <span data-ttu-id="f37f4-367">기본 동사는 빈 문자열을 사용 하 여 지정할 수 있습니다 ("").</span><span class="sxs-lookup"><span data-stu-id="f37f4-367">The default verb can be specified by using an empty string ("").</span></span> <span data-ttu-id="f37f4-368">동사에는 "편집", "열기", "OpenAsReadOnly", "Print" 및 "Printto"이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-368">Examples of verbs are "Edit", "Open", "OpenAsReadOnly", "Print", and "Printto".</span></span> <span data-ttu-id="f37f4-369">반환 하는 동사 집합에 표시 되는 동사에만 사용 해야는 <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-369">You should use only verbs that appear in the set of verbs returned by the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property.</span></span>  
  
 <span data-ttu-id="f37f4-370">사용 하는 경우는 <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> 속성의 값을 설정할 때 파일 이름 확장명 포함 해야는 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-370">When you use the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property, you must include the file name extension when you set the value of the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="f37f4-371">파일 이름 확장명이 대 한 값을 수동으로 입력 하지 않아도 <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-371">The file name does not need to have an extension if you manually enter a value for the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37f4-372">다음 코드 예제에서는 지정 된 동사와 파일 이름을 사용 하 여 새 프로세스를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-372">The following code example starts a new process by using the specified verb and file name.</span></span> <span data-ttu-id="f37f4-373">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-373">This code example is part of a larger example provided for the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property.</span></span>  
  
 [!code-csharp[ProcessVerbs_Diagnostics#4](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessVerbs_Diagnostics/CS/source.cs#4)]
 [!code-vb[ProcessVerbs_Diagnostics#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessVerbs_Diagnostics/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.Verbs" />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public string[] Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Verbs As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Verbs { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : string[]" Usage="System.Diagnostics.ProcessStartInfo.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-374">
            <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 속성이 지정한 파일 형식과 연결된 동사 집합을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-374">Gets the set of verbs associated with the type of file specified by the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-375">
            <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 속성이 나타내는 파일에 시스템이 적용할 수 있는 작업입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-375">The actions that the system can apply to the file indicated by the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37f4-376"><xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> 속성으로 지정 된 파일에 사용할 수 있는 동사를 확인할 수 있습니다는 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-376">The <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property enables you to determine the verbs that can be used with the file specified by the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="f37f4-377">설정할 수 있습니다는 <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> 속성 집합의 모든 동사 값입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-377">You can set the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property to the value of any verb in the set.</span></span> <span data-ttu-id="f37f4-378">동사에는 "편집", "열기", "OpenAsReadOnly", "Print" 및 "Printto"이 있습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-378">Examples of verbs are "Edit", "Open", "OpenAsReadOnly", "Print", and "Printto".</span></span>  
  
 <span data-ttu-id="f37f4-379">사용 하는 경우는 <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> 속성의 값을 설정할 때 파일 이름 확장명 포함 해야는 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-379">When you use the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property, you must include the file name extension when you set the value of the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="f37f4-380">파일 이름 확장명 가능한 동사 집합을 결정합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-380">The file name extension determines the set of possible verbs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37f4-381">다음 코드 예제에서는 선택한 파일 이름에 대해 정의 된 동사를 표시합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-381">The following code example displays the defined verbs for the chosen file name.</span></span> <span data-ttu-id="f37f4-382">사용자가 정의 된 동사 중 하나를 선택 하는 경우이 예제에서는 선택한 동사와 입력된 파일 이름을 사용 하 여 새 프로세스를 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-382">If the user selects one of the defined verbs, the example starts a new process using the selected verb and the input file name.</span></span>  
  
 [!code-csharp[ProcessVerbs_Diagnostics#3](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessVerbs_Diagnostics/CS/source.cs#3)]
 [!code-vb[ProcessVerbs_Diagnostics#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessVerbs_Diagnostics/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.Verb" />
      </Docs>
    </Member>
    <Member MemberName="WindowStyle">
      <MemberSignature Language="C#" Value="public System.Diagnostics.ProcessWindowStyle WindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.ProcessWindowStyle WindowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.WindowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStyle As ProcessWindowStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::ProcessWindowStyle WindowStyle { System::Diagnostics::ProcessWindowStyle get(); void set(System::Diagnostics::ProcessWindowStyle value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStyle : System.Diagnostics.ProcessWindowStyle with get, set" Usage="System.Diagnostics.ProcessStartInfo.WindowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("How the main window should be created when the process starts.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ProcessWindowStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-383">프로세스가 시작될 때 사용할 창 상태를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-383">Gets or sets the window state to use when the process is started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-384">최대화, 최소화, 표준(최대화되거나 최소화되지 않은) 또는 표시되지 않는 창 중 어느 상태에서 프로세스가 시작되는지 나타내는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-384">One of the enumeration values that indicates whether the process is started in a window that is maximized, minimized, normal (neither maximized nor minimized), or not visible.</span>
          </span>
          <span data-ttu-id="f37f4-385">기본값은 <see langword="Normal" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-385">The default is <see langword="Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[Process.Start_static#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#1)]
 [!code-csharp[Process.Start_static#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#1)]
 [!code-vb[Process.Start_static#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="f37f4-386">창 스타일이 <see cref="T:System.Diagnostics.ProcessWindowStyle" /> 열거형 멤버 중 하나가 아닌 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-386">The window style is not one of the <see cref="T:System.Diagnostics.ProcessWindowStyle" /> enumeration members.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WorkingDirectory">
      <MemberSignature Language="C#" Value="public string WorkingDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkingDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.WorkingDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkingDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WorkingDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WorkingDirectory : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.WorkingDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.WorkingDirectoryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The initial working directory for the process.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f37f4-387">
            <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 속성이 <see langword="false" />인 경우 시작할 프로세스의 작업 디렉터리를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-387">When the <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property is <see langword="false" />, gets or sets the working directory for the process to be started.</span>
          </span>
          <span data-ttu-id="f37f4-388">
            <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />가 <see langword="true" />인 경우 시작할 프로세스가 포함된 디렉터리를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-388">When <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> is <see langword="true" />, gets or sets the directory that contains the process to be started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f37f4-389">
            <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />가 <see langword="true" />이면 시작할 프로세스가 들어 있는 디렉터리의 정규화된 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-389">When <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> is <see langword="true" />, the fully qualified name of the directory that contains the process to be started.</span>
          </span>
          <span data-ttu-id="f37f4-390">
            <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 속성이 <see langword="false" />인 경우 시작할 프로세스의 작업 디렉터리입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-390">When the <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property is <see langword="false" />, the working directory for the process to be started.</span>
          </span>
          <span data-ttu-id="f37f4-391">기본값은 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37f4-391">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="f37f4-392"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> 경우 속성을 설정 해야 <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> 및 <xref:System.Diagnostics.ProcessStartInfo.Password%2A> 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-392">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property must be set if <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> are provided.</span></span> <span data-ttu-id="f37f4-393">속성을 설정 하지 않으면 기본 작업 디렉터리는 %SYSTEMROOT%\system32 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-393">If the property is not set, the default working directory is %SYSTEMROOT%\system32.</span></span>  
  
 <span data-ttu-id="f37f4-394">디렉터리가 이미 시스템 경로 변수에의 일부인 경우이 속성에는 디렉터리의 위치를 반복 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-394">If the directory is already part of the system path variable, you do not have to repeat the directory's location in this property.</span></span>  
  
 <span data-ttu-id="f37f4-395"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> 속성 다르게 동작 때 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 은 `true` 되었을 때 보다 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 은 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-395">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property behaves differently when <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true` than when <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`.</span></span> <span data-ttu-id="f37f4-396">때 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 은 `true`, <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> 속성 실행 파일의 위치를 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-396">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property specifies the location of the executable.</span></span> <span data-ttu-id="f37f4-397">경우 <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> 이 빈 문자열인 경우 현재 디렉터리가 실행 파일을 포함 하도록 인식 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-397">If <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> is an empty string, the current directory is understood to contain the executable.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f37f4-398">때 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 은 `true`, 실행 파일을 시작 하는 응용 프로그램의 작업 디렉터리는 실행 파일의 작업 디렉터리 이기도 합니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-398">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, the working directory of the application that starts the executable is also the working directory of the executable.</span></span>  
  
 <span data-ttu-id="f37f4-399">때 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 은 `false`, <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> 실행 파일을 찾으려고 속성이 사용 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-399">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property is not used to find the executable.</span></span> <span data-ttu-id="f37f4-400">대신, 해당 값은 시작 하 고만 새 프로세스의 컨텍스트 내에서 의미가 있는 프로세스에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="f37f4-400">Instead, its value applies to the process that is started and only has meaning within the context of the new process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>