<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DebuggableAttribute+DebuggingModes.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51c526fdb77d40293e0248a61d9618e8372eab15c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c526fdb77d40293e0248a61d9618e8372eab15c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>Specifies the debugging mode for the just-in-time (JIT) compiler.</source>
          <target state="translated">JIT(Just-In-Time) 컴파일러의 디버깅 모드를 지정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DebuggableAttribute.DebuggingModes&gt;</ph> enumeration specifies how the runtime is to track information important to the debugger during code generation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DebuggableAttribute.DebuggingModes&gt;</ph> 열거형 런타임은 코드 생성 하는 동안 디버거를 중요 한 정보를 추적 하는 하는 방법을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>This information helps the debugger provide a rich debugging experience.</source>
          <target state="translated">이러한 정보를 통해 디버거 풍부한 디버깅 환경을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>Unlike the .NET Framework version 1.1, versions 2.0 or later do not allow you to turn off tracking by the just-in-time (JIT) compiler.</source>
          <target state="translated">.NET Framework 버전 1.1에서는 달리 버전 2.0 이상 허용 하지 않습니다 타임 (JIT) 컴파일러에 의해 추적을 해제할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>JIT tracking is always enabled for debuggable files.</source>
          <target state="translated">JIT 추적 디버깅할 수 있는 파일에 대해 항상 사용 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>In version 2.0 and later, the enumeration values have the following effect.</source>
          <target state="translated">버전 2.0 이상 열거형 값에는 다음과 같은 결과가 나타납니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>Debugging mode</source>
          <target state="translated">디버깅 모드</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>Result</source>
          <target state="translated">결과</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>Tracking on, JIT optimizations enabled</source>
          <target state="translated">추적에 사용 되는 JIT 최적화</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>Default</source>
          <target state="translated">기본</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>Tracking on, JIT optimizations enabled</source>
          <target state="translated">추적에 사용 되는 JIT 최적화</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>DisableOptimizations</source>
          <target state="translated">DisableOptimizations</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>Tracking on, JIT optimizations enabled</source>
          <target state="translated">추적에 사용 되는 JIT 최적화</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>Default &amp;#124; DisableOptimizations</source>
          <target state="translated">기본 &amp;#124; DisableOptimizations</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>Tracking on, JIT optimizations disabled</source>
          <target state="translated">JIT 최적화를 사용에 대 한 추적</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>Sequence points are used to indicate locations in the Microsoft intermediate language (MSIL) code that a debugger user will expect to be able to refer to uniquely, such as for setting a breakpoint.</source>
          <target state="translated">시퀀스 위치는 디버거 사용자 증명을 고유 하 게를 참조할 수 있는 Microsoft MSIL (intermediate language) 코드의 위치를 나타내는 데 사용 되는, 예: 중단점을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>The JIT compiler ensures it does not compile the MSIL at two different sequence points into a single native instruction.</source>
          <target state="translated">JIT 컴파일러는 네이티브 단일 명령으로 MSIL 시퀀스 위치 두 곳에서 컴파일되지 않을 확인 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>By default, the JIT compiler examines the symbol store in the program database (PDB) file for a list of additional sequence points.</source>
          <target state="translated">기본적으로 JIT 컴파일러의 추가 시퀀스 위치 목록에 대 한 프로그램 데이터베이스 (PDB) 파일에 기호 저장소를 검사합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>However, loading the PDB file requires that the file be available and has a negative performance impact.</source>
          <target state="translated">그러나 로드 PDB 파일 하려면 해야 하는데 파일은 사용할 수 및 성능에 부정적인 영향을 줄 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>Starting with version 2.0, compilers can emit "implicit sequence points" in the MSIL code stream through the use of MSIL "<ph id="ph1">`nop"`</ph> instructions.</source>
          <target state="translated">버전 2.0 부터는 컴파일러를에서 내보낼 수 "암시적 시퀀스 위치" MSIL 사용 하 여 MSIL 코드 스트림을 "<ph id="ph1">`nop"`</ph> 지시 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>Such compilers should set the IgnoreSymbolStoreSequencePoints flag to notify the common language runtime to not load the PDB file.</source>
          <target state="translated">이러한 컴파일러에 PDB 파일을 로드 하지 않도록 공용 언어 런타임 알리기 위해 IgnoreSymbolStoreSequencePoints 플래그를 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>This enumeration is primarily used by language developers.</source>
          <target state="translated">이 열거형은 주로 언어 개발자가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>It is generally not used in application development.</source>
          <target state="translated">일반적으로 응용 프로그램 개발에 사용 됩니다 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
          <source>Development environments use <ph id="ph1">&lt;xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints&gt;</ph> based on compiler parameters such as <bpt id="p1">**</bpt>/debug<ept id="p1">**</ept> and <bpt id="p2">**</bpt>/optimize<ept id="p2">**</ept>.</source>
          <target state="translated">개발 환경에서는 <ph id="ph1">&lt;xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints&gt;</ph> 와 같은 컴파일러 매개 변수에 따라 <bpt id="p1">**</bpt>/debug<ept id="p1">**</ept> 및 <bpt id="p2">**</bpt>/optimize<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default">
          <source>Instructs the just-in-time (JIT) compiler to use its default behavior, which includes enabling optimizations, disabling Edit and Continue support, and using symbol store sequence points if present.</source>
          <target state="translated">JIT(Just In Time) 컴파일러에 기본 동작을 사용하도록 지시합니다. 기본 동작은 최적화를 사용하고, 편집하며 계속하기 지원을 사용하지 않고, 기호 저장소 시퀀스 위치가 있는 경우 해당 위치를 사용하는 것 등입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default">
          <source>Starting with the .NET Framework version 2.0, JIT tracking information, the Microsoft intermediate language (MSIL) offset to the native-code offset within a method, is always generated.</source>
          <target state="translated">.NET Framework 버전 2.0부터 JIT 추적 정보인 메서드 내부의 네이티브 코드 오프셋에 대한 MSIL(Microsoft Intermediate Language) 오프셋이 항상 생성됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations">
          <source>Disable optimizations performed by the compiler to make your output file smaller, faster, and more efficient.</source>
          <target state="translated">컴파일러에서 더 작지만 빠르고 효율적인 출력 파일을 만들기 위해 수행하는 최적화 기능을 비활성화합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations">
          <source>Optimizations result in code rearrangement in the output file, which can make debugging difficult.</source>
          <target state="translated">최적화 작업을 수행하면 출력 파일에서 코드가 다시 정렬되기 때문에 디버깅이 어려워질 수 있습니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations">
          <source>Typically optimization should be disabled while debugging.</source>
          <target state="translated">일반적으로 디버깅하는 동안에는 최적화 기능을 비활성해야 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations">
          <source>In versions 2.0 or later, combine this value with Default (Default | DisableOptimizations) to enable JIT tracking and disable optimizations.</source>
          <target state="translated">버전 2.0 이상에서는 이 값을 기본값(Default | DisableOptimizations)과 결합하여 JIT 추적을 활성화하고 최적화를 비활성화합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.EnableEditAndContinue">
          <source>Enable edit and continue.</source>
          <target state="translated">편집하며 계속하기를 활성화합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.EnableEditAndContinue">
          <source>Edit and continue enables you to make changes to your source code while your program is in break mode.</source>
          <target state="translated">편집하며 계속하기를 활성화하면 프로그램이 중단 모드에 있는 동안 소스 코드를 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.EnableEditAndContinue">
          <source>The ability to edit and continue is compiler dependent.</source>
          <target state="translated">편집하며 계속하기 기능은 컴파일러에 따라 다릅니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints">
          <source>Use the implicit MSIL sequence points, not the program database (PDB) sequence points.</source>
          <target state="translated">PDB(프로그램 데이터베이스) 시퀀스 위치가 아닌 암시적 MSIL 시퀀스 위치를 사용합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints">
          <source>The symbolic information normally includes at least one Microsoft intermediate language (MSIL) offset for each source line.</source>
          <target state="translated">일반적으로 기호 정보에는 소스의 각 줄마다 최소한 하나의 MSIL(Microsoft Intermediate Language) 오프셋이 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints">
          <source>When the just-in-time (JIT) compiler is about to compile a method, it asks the profiling services for a list of MSIL offsets that should be preserved.</source>
          <target state="translated">JIT(Just-In-Time) 컴파일러에서 메서드를 컴파일할 때, 컴파일러에서는 프로파일링 서비스에 저장된 MSIL 오프셋 목록을 요청합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints">
          <source>These MSIL offsets are called sequence points.</source>
          <target state="translated">이러한 MSIL 오프셋을 시퀀스 위치라고 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.None">
          <source>Starting with the .NET Framework version 2.0, JIT tracking information is always generated, and this flag has the same effect as <ph id="ph1">&lt;see cref="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default" /&gt;</ph>, except that it sets the <ph id="ph2">&lt;see cref="P:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled" /&gt;</ph> property to <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">.NET Framework 버전 2.0부터 JIT 추적 정보가 항상 생성되며 이 플래그는 <ph id="ph2">&lt;see cref="P:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled" /&gt;</ph> 속성을 <ph id="ph3">&lt;see langword="false" /&gt;</ph>로 설정하는 경우를 제외하고는 <ph id="ph1">&lt;see cref="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default" /&gt;</ph>와 동일한 영향을 줍니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.None">
          <source>However, because JIT tracking is always enabled, the property value is ignored in version 2.0 or later.</source>
          <target state="translated">그러나 JIT 추적은 항상 사용하도록 설정되어 있으므로 버전 2.0 이상에서는 속성 값이 무시됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.None">
          <source>Note that, unlike the <ph id="ph1">&lt;see cref="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations" /&gt;</ph> flag, the <ph id="ph2">&lt;see cref="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.None" /&gt;</ph> flag cannot be used to disable JIT optimizations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations" /&gt;</ph> 플래그와 달리 <ph id="ph2">&lt;see cref="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.None" /&gt;</ph> 플래그는 JIT 최적화를 사용하지 않도록 설정하는 데 사용할 수 없습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>