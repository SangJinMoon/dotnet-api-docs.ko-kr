<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TraceEventCache.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d4f8153f62f07113049d73c4105266bca1dd7d38.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d4f8153f62f07113049d73c4105266bca1dd7d38</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceEventCache">
          <source>Provides trace event data specific to a thread and a process.</source>
          <target state="translated">스레드 및 프로세스별 추적 이벤트 데이터를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceEventCache">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph> class, designed as a performance optimization for trace listener calls, is of interest only to developers creating custom trace listeners.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph> 추적 수신기 호출에 대 한 성능 최적화로 설계 된 클래스는 사용자 지정 추적 수신기를 만드는 개발자 에게만 중요 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceEventCache">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph> class is used as a parameter in tracing methods to accurately identify the source of a trace event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph> 클래스는 추적 이벤트의 소스를 정확 하 게 식별 하는 데 추적 메서드에서 매개 변수로 사용 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceEventCache">
          <source>Examples of methods that use <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph> are <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">사용 하는 메서드의 예로 <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph> 는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceEventCache">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A&gt;</ph> property contains data that can be used to correlate the trace with related traces.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A&gt;</ph> 속성 관련된 추적을 사용 하 여 추적을 상호 연결 하는 데 사용할 수 있는 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceEventCache.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceEventCache.Callstack">
          <source>Gets the call stack for the current thread.</source>
          <target state="translated">현재 스레드에 대한 호출 스택을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.Callstack">
          <source>A string containing stack trace information.</source>
          <target state="translated">스택 추적 정보가 포함된 문자열입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.Callstack">
          <source>This value can be an empty string ("").</source>
          <target state="translated">이 값은 빈 문자열("")이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.Callstack">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> property gets the call stack from the <ph id="ph2">&lt;xref:System.Environment.StackTrace%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Environment&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.Callstack%2A&gt;</ph> 속성에서 호출 스택을 가져옵니다는 <ph id="ph2">&lt;xref:System.Environment.StackTrace%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Environment&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.Callstack">
          <source>The property value lists method calls in reverse chronological order.</source>
          <target state="translated">속성 값에 메서드 호출 시간 순서 대로 나열합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.Callstack">
          <source>That is, the most recent method call is described first.</source>
          <target state="translated">즉, 가장 최근의 메서드 호출이 먼저에 설명 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.Callstack">
          <source>One line of stack trace information is listed for each method call on the stack.</source>
          <target state="translated">스택의 각 메서드 호출에 대 한 한 줄의 스택 추적 정보가 나열 됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.Callstack">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Environment.StackTrace%2A&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Environment.StackTrace%2A&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.Callstack">
          <source>for full access to the resource protected by the permission.</source>
          <target state="translated">에 대 한 전체 액세스 권한으로 보호 되는 리소스입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.Callstack">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceEventCache.DateTime">
          <source>Gets the date and time at which the event trace occurred.</source>
          <target state="translated">이벤트 추적이 발생한 날짜와 시간을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.DateTime">
          <source>A <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> structure whose value is a date and time expressed in Coordinated Universal Time (UTC).</source>
          <target state="translated">UTC(지역 표준시)로 표현된 날짜와 시간을 값으로 갖는 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.DateTime">
          <source>The first time the property is accessed in an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph> class, the current time is returned.</source>
          <target state="translated">속성 액세스의 인스턴스에 처음으로 <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph> 클래스를 현재 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.DateTime">
          <source>Subsequent queries of this property in that instance return that same <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value, allowing it to be used as a timestamp.</source>
          <target state="translated">해당 인스턴스에서이 속성의 후속 쿼리는 같은 반환 <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> 값은 타임 스탬프 사용 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceEventCache.LogicalOperationStack">
          <source>Gets the correlation data, contained in a stack.</source>
          <target state="translated">스택에 포함된 상관 관계 데이터를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.LogicalOperationStack">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> containing correlation data.</source>
          <target state="translated">상관 관계 데이터가 포함된 <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.LogicalOperationStack">
          <source>The correlation data is stored as an object in the call context with the name "System.Diagnostics.Trace.CorrelationManagerSlot".</source>
          <target state="translated">상관 관계 데이터는 "System.Diagnostics.Trace.CorrelationManagerSlot" 이름의 호출 컨텍스트에 개체로 저장 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.LogicalOperationStack">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.CorrelationManager&gt;</ph> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.CorrelationManager&gt;</ph> 클래스 스레드 바인딩 컨텍스트에서 논리 작업 id를 저장 하 고 자동으로 저장된 된 id 가진 스레드에 의해 생성 된 각 추적 이벤트 태그를 지정 하는 데 사용 되는 메서드를 제공 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.LogicalOperationStack">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.CorrelationManager&gt;</ph> is accessed through the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.CorrelationManager&gt;</ph> 통해 액세스 되는 <ph id="ph2">&lt;xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.LogicalOperationStack">
          <source>Each call to the <ph id="ph1">&lt;xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A&gt;</ph> method pushes a new logical operation identity onto the stack.</source>
          <target state="translated">호출할 때마다는 <ph id="ph1">&lt;xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A&gt;</ph> 메서드 새 논리 작업 id를 스택에 푸시합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.LogicalOperationStack">
          <source>Each call to the <ph id="ph1">&lt;xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A&gt;</ph> method pops a logical operation identity from the stack</source>
          <target state="translated">호출할 때마다는 <ph id="ph1">&lt;xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A&gt;</ph> 논리 작업 id 스택에서 팝 하는 메서드</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceEventCache.ProcessId">
          <source>Gets the unique identifier of the current process.</source>
          <target state="translated">현재 프로세스의 고유 식별자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.ProcessId">
          <source>The system-generated unique identifier of the current process.</source>
          <target state="translated">현재 프로세스의 시스템 생성 고유 식별자입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.ProcessId">
          <source>Until the process terminates, the process identifier uniquely identifies the process throughout the system.</source>
          <target state="translated">프로세스가 종료 될 때까지 프로세스 식별자가 시스템에서 프로세스를 고유 하 게 식별 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.ProcessId">
          <source>for the ability to call unmanaged code.</source>
          <target state="translated">비관리 코드를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.ProcessId">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceEventCache.ThreadId">
          <source>Gets a unique identifier for the current managed thread.</source>
          <target state="translated">현재 관리되는 스레드의 고유 식별자를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.ThreadId">
          <source>A string that represents a unique integer identifier for this managed thread.</source>
          <target state="translated">관리되는 이 스레드의 고유 정수 식별자를 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.ThreadId">
          <source>The thread identifier is the value of the <ph id="ph1">&lt;xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=nameWithType&gt;</ph> property formatted as a string.</source>
          <target state="translated">스레드 식별자의 값은 고 <ph id="ph1">&lt;xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=nameWithType&gt;</ph> 문자열로 서식이 지정 된 속성입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceEventCache.Timestamp">
          <source>Gets the current number of ticks in the timer mechanism.</source>
          <target state="translated">타이머 메커니즘에서 현재 틱 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.Timestamp">
          <source>The tick counter value of the underlying timer mechanism.</source>
          <target state="translated">내부 타이머 메커니즘의 틱 카운터 값입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.Timestamp">
          <source>The get accessor calls the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=nameWithType&gt;</ph> method to get the timestamp.</source>
          <target state="translated">Get 접근자 호출은 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=nameWithType&gt;</ph> 을 타임 스탬프를 가져오는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.Timestamp">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class uses a high-resolution performance counter, <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.GetTimestamp%2A&gt;</ph> returns the current value of that counter.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 클래스에는 고해상도 성능 카운터를 사용 하 여 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.GetTimestamp%2A&gt;</ph> 해당 카운터의 현재 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceEventCache.Timestamp">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class uses the system timer, <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.GetTimestamp%2A&gt;</ph> returns the <ph id="ph3">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property of <ph id="ph4">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 클래스 시스템 타이머를 사용 하 여 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.GetTimestamp%2A&gt;</ph> 반환는 <ph id="ph3">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> 속성 <ph id="ph4">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>