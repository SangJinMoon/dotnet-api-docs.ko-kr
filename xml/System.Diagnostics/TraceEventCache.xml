<Type Name="TraceEventCache" FullName="System.Diagnostics.TraceEventCache">
  <TypeSignature Language="C#" Value="public class TraceEventCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceEventCache extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceEventCache" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceEventCache" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceEventCache" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fd6a7-101">스레드 및 프로세스별 추적 이벤트 데이터를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-101">Provides trace event data specific to a thread and a process.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fd6a7-102"><xref:System.Diagnostics.TraceEventCache> 추적 수신기 호출에 대 한 성능 최적화로 설계 된 클래스는 사용자 지정 추적 수신기를 만드는 개발자 에게만 중요 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-102">The <xref:System.Diagnostics.TraceEventCache> class, designed as a performance optimization for trace listener calls, is of interest only to developers creating custom trace listeners.</span></span>  
  
 <span data-ttu-id="fd6a7-103"><xref:System.Diagnostics.TraceEventCache> 클래스는 추적 이벤트의 소스를 정확 하 게 식별 하는 데 추적 메서드에서 매개 변수로 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-103">The <xref:System.Diagnostics.TraceEventCache> class is used as a parameter in tracing methods to accurately identify the source of a trace event.</span></span> <span data-ttu-id="fd6a7-104">사용 하는 메서드의 예로 <xref:System.Diagnostics.TraceEventCache> 는 <xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=nameWithType> 및 <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-104">Examples of methods that use <xref:System.Diagnostics.TraceEventCache> are <xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fd6a7-105"><xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A> 속성 관련된 추적을 사용 하 여 추적을 상호 연결 하는 데 사용할 수 있는 데이터를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-105">The <xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A> property contains data that can be used to correlate the trace with related traces.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceEventCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceEventCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceEventCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd6a7-106"><see cref="T:System.Diagnostics.TraceEventCache" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-106">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceEventCache" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Callstack">
      <MemberSignature Language="C#" Value="public string Callstack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Callstack" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.Callstack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Callstack As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Callstack { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd6a7-107">현재 스레드에 대한 호출 스택을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-107">Gets the call stack for the current thread.</span></span></summary>
        <value><span data-ttu-id="fd6a7-108">스택 추적 정보가 포함된 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-108">A string containing stack trace information.</span></span> <span data-ttu-id="fd6a7-109">이 값은 빈 문자열("")이 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-109">This value can be an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd6a7-110"><xref:System.Diagnostics.TraceEventCache.Callstack%2A> 속성에서 호출 스택을 가져옵니다는 <xref:System.Environment.StackTrace%2A> 의 속성은 <xref:System.Environment> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-110">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property gets the call stack from the <xref:System.Environment.StackTrace%2A> property of the <xref:System.Environment> class.</span></span> <span data-ttu-id="fd6a7-111">속성 값에 메서드 호출 시간 순서 대로 나열합니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-111">The property value lists method calls in reverse chronological order.</span></span> <span data-ttu-id="fd6a7-112">즉, 가장 최근의 메서드 호출이 먼저에 설명 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-112">That is, the most recent method call is described first.</span></span> <span data-ttu-id="fd6a7-113">스택의 각 메서드 호출에 대 한 한 줄의 스택 추적 정보가 나열 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-113">One line of stack trace information is listed for each method call on the stack.</span></span> <span data-ttu-id="fd6a7-114">자세한 내용은 <xref:System.Environment.StackTrace%2A>을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-114">For more information, see <xref:System.Environment.StackTrace%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="fd6a7-115">에 대 한 전체 액세스 권한으로 보호 되는 리소스입니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-115">for full access to the resource protected by the permission.</span></span> <span data-ttu-id="fd6a7-116">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="fd6a7-116">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DateTime">
      <MemberSignature Language="C#" Value="public DateTime DateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateTime" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.DateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd6a7-117">이벤트 추적이 발생한 날짜와 시간을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-117">Gets the date and time at which the event trace occurred.</span></span></summary>
        <value><span data-ttu-id="fd6a7-118">UTC(지역 표준시)로 표현된 날짜와 시간을 값으로 갖는 <see cref="T:System.DateTime" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-118">A <see cref="T:System.DateTime" /> structure whose value is a date and time expressed in Coordinated Universal Time (UTC).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd6a7-119">속성 액세스의 인스턴스에 처음으로 <xref:System.Diagnostics.TraceEventCache> 클래스를 현재 반환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-119">The first time the property is accessed in an instance of the <xref:System.Diagnostics.TraceEventCache> class, the current time is returned.</span></span> <span data-ttu-id="fd6a7-120">해당 인스턴스에서이 속성의 후속 쿼리는 같은 반환 <xref:System.DateTime> 값은 타임 스탬프 사용 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-120">Subsequent queries of this property in that instance return that same <xref:System.DateTime> value, allowing it to be used as a timestamp.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalOperationStack">
      <MemberSignature Language="C#" Value="public System.Collections.Stack LogicalOperationStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Stack LogicalOperationStack" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.LogicalOperationStack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalOperationStack As Stack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Stack ^ LogicalOperationStack { System::Collections::Stack ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Stack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd6a7-121">스택에 포함된 상관 관계 데이터를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-121">Gets the correlation data, contained in a stack.</span></span></summary>
        <value><span data-ttu-id="fd6a7-122">상관 관계 데이터가 포함된 <see cref="T:System.Collections.Stack" />입니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-122">A <see cref="T:System.Collections.Stack" /> containing correlation data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd6a7-123">상관 관계 데이터는 "System.Diagnostics.Trace.CorrelationManagerSlot" 이름의 호출 컨텍스트에 개체로 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-123">The correlation data is stored as an object in the call context with the name "System.Diagnostics.Trace.CorrelationManagerSlot".</span></span> <span data-ttu-id="fd6a7-124"><xref:System.Diagnostics.CorrelationManager> 클래스 스레드 바인딩 컨텍스트에서 논리 작업 id를 저장 하 고 자동으로 저장된 된 id 가진 스레드에 의해 생성 된 각 추적 이벤트 태그를 지정 하는 데 사용 되는 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-124">The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.</span></span> <span data-ttu-id="fd6a7-125"><xref:System.Diagnostics.CorrelationManager> 통해 액세스 되는 <xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-125">The <xref:System.Diagnostics.CorrelationManager> is accessed through the <xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="fd6a7-126">호출할 때마다는 <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> 메서드 새 논리 작업 id를 스택에 푸시합니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-126">Each call to the <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> method pushes a new logical operation identity onto the stack.</span></span> <span data-ttu-id="fd6a7-127">호출할 때마다는 <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> 논리 작업 id 스택에서 팝 하는 메서드</span><span class="sxs-lookup"><span data-stu-id="fd6a7-127">Each call to the <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> method pops a logical operation identity from the stack</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public int ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProcessId { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd6a7-128">현재 프로세스의 고유 식별자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-128">Gets the unique identifier of the current process.</span></span></summary>
        <value><span data-ttu-id="fd6a7-129">현재 프로세스의 시스템 생성 고유 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-129">The system-generated unique identifier of the current process.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd6a7-130">프로세스가 종료 될 때까지 프로세스 식별자가 시스템에서 프로세스를 고유 하 게 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-130">Until the process terminates, the process identifier uniquely identifies the process throughout the system.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="fd6a7-131">비관리 코드를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-131">for the ability to call unmanaged code.</span></span> <span data-ttu-id="fd6a7-132">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="fd6a7-132">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ThreadId">
      <MemberSignature Language="C#" Value="public string ThreadId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreadId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.ThreadId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreadId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd6a7-133">현재 관리되는 스레드의 고유 식별자를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-133">Gets a unique identifier for the current managed thread.</span></span></summary>
        <value><span data-ttu-id="fd6a7-134">관리되는 이 스레드의 고유 정수 식별자를 나타내는 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-134">A string that represents a unique integer identifier for this managed thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd6a7-135">스레드 식별자의 값은 고 <xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=nameWithType> 문자열로 서식이 지정 된 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-135">The thread identifier is the value of the <xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=nameWithType> property formatted as a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public long Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Timestamp { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd6a7-136">타이머 메커니즘에서 현재 틱 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-136">Gets the current number of ticks in the timer mechanism.</span></span></summary>
        <value><span data-ttu-id="fd6a7-137">내부 타이머 메커니즘의 틱 카운터 값입니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-137">The tick counter value of the underlying timer mechanism.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd6a7-138">Get 접근자 호출은 <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=nameWithType> 을 타임 스탬프를 가져오는 메서드입니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-138">The get accessor calls the <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=nameWithType> method to get the timestamp.</span></span> <span data-ttu-id="fd6a7-139">경우는 <xref:System.Diagnostics.Stopwatch> 클래스에는 고해상도 성능 카운터를 사용 하 여 <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> 해당 카운터의 현재 값을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-139">If the <xref:System.Diagnostics.Stopwatch> class uses a high-resolution performance counter, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the current value of that counter.</span></span> <span data-ttu-id="fd6a7-140">경우는 <xref:System.Diagnostics.Stopwatch> 클래스 시스템 타이머를 사용 하 여 <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> 반환는 <xref:System.DateTime.Ticks%2A> 속성 <xref:System.DateTime.Now%2A?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="fd6a7-140">If the <xref:System.Diagnostics.Stopwatch> class uses the system timer, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the <xref:System.DateTime.Ticks%2A> property of <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>