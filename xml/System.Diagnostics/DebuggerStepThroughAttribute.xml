<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DebuggerStepThroughAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b857fe3" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2eccf4de-4b1c-4706-8cb3-f46682ccfb72185d7a33c1cdca6fcbf981b81d9705ccc2f7fd6e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">185d7a33c1cdca6fcbf981b81d9705ccc2f7fd6e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b15b8cf0f6dbc1504057c88969d9ef4b790891fe</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/11/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.DebuggerStepThroughAttribute">
          <source>Instructs the debugger to step through the code instead of stepping into the code.</source>
          <target state="translated">코드를 한 단계씩 실행하는 대신 단계별로 실행되도록 디버거에 지시합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.DebuggerStepThroughAttribute">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggerStepThroughAttribute">
          <source>This attribute is provided for use by source code debuggers; the common language runtime is not affected by it.</source>
          <target state="translated">이 특성은 소스 코드 디버거에; 사용 하도록 제공 됩니다. 공용 언어 런타임에 의해 영향을 받지 않습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggerStepThroughAttribute">
          <source>For example, the Visual Studio debugger does not stop in a method that is marked with this attribute even if a breakpoint is set in the method.</source>
          <target state="translated">예를 들어 Visual Studio 디버거는 메서드에 중단점을 설정 하는 경우에이 특성으로 표시 하는 메서드에서 중지 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggerStepThroughAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DebuggerStepThroughAttribute&gt;</ph> attribute affects the <bpt id="p1">[</bpt>Just My Code<ept id="p1">](http://msdn.microsoft.com/library/0f0df097-bbaf-46ad-9ad1-ef5f40435079)</ept> (JMC) feature of Visual Studio in the following ways:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DebuggerStepThroughAttribute&gt;</ph> 영향을 줌 특성은 <bpt id="p1">[</bpt>내 코드만<ept id="p1">](http://msdn.microsoft.com/library/0f0df097-bbaf-46ad-9ad1-ef5f40435079)</ept> 다음과 같은 방법으로 Visual Studio의 기능을 (JMC):</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggerStepThroughAttribute">
          <source>If JMC is enabled, the Visual Studio debugger will not stop at a breakpoint in a method marked with the <ph id="ph1">&lt;xref:System.Diagnostics.DebuggerStepThroughAttribute&gt;</ph> attribute.</source>
          <target state="translated">JMC를 사용 하는 경우 Visual Studio 디버거도 표시 된 메서드에서 중단점에서 중지 되지 됩니다는 <ph id="ph1">&lt;xref:System.Diagnostics.DebuggerStepThroughAttribute&gt;</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggerStepThroughAttribute">
          <source>If JMC is disabled, the debugger stops at the breakpoint even if the method is marked with the <ph id="ph1">&lt;xref:System.Diagnostics.DebuggerStepThroughAttribute&gt;</ph>.</source>
          <target state="translated">메서드가로 표시 되는 경우에 중단점에서 디버거가 중지 JMC 비활성화 된 경우에 <ph id="ph1">&lt;xref:System.Diagnostics.DebuggerStepThroughAttribute&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggerStepThroughAttribute">
          <source>The following code shows how the Visual Basic compiler uses the attribute.</source>
          <target state="translated">다음 코드는 Visual Basic 컴파일러에서 특성을 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggerStepThroughAttribute">
          <source>This attribute avoids having to step into compiler-provided code and only steps into developer-provided code.</source>
          <target state="translated">이 특성 않아도 컴파일러 제공 코드 및 개발자가 제공한 코드에만 단계에 대 한 단계씩 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggerStepThroughAttribute">
          <source>For example, if you are stepping through code by using the <bpt id="p1">**</bpt>F11<ept id="p1">**</ept> (Step Into) key, the attribute will cause the step to behave like an <bpt id="p2">**</bpt>F10<ept id="p2">**</ept> (Step Over) key for compiler-provided code.</source>
          <target state="translated">예를 들어, 사용 하 여 코드를 단계별로 <bpt id="p1">**</bpt>F11<ept id="p1">**</ept> (한 단계씩 코드) 키 특성 인해 처럼 동작 하는 단계는 <bpt id="p2">**</bpt>F10<ept id="p2">**</ept> 컴파일러에서 제공 하는 코드에 대 한 키 (프로시저 단위 실행) 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggerStepThroughAttribute">
          <source>The method won’t be stepped into, but it will be executed.</source>
          <target state="translated">메서드를 실행할 수 없습니다 하지만 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggerStepThroughAttribute">
          <source>For more information about using attributes, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">특성을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>특성<ept id="p1">](~/docs/standard/attributes/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DebuggerStepThroughAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.DebuggerStepThroughAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.DebuggerStepThroughAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>