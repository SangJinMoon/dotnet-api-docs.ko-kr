<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Stopwatch.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53c035670b6a5acf3a4bb5bd86c113e7784448fdd.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3c035670b6a5acf3a4bb5bd86c113e7784448fdd</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Stopwatch">
          <source>Provides a set of methods and properties that you can use to accurately measure elapsed time.</source>
          <target state="translated">경과 시간을 정확하게 측정하는 데 사용할 수 있는 일련의 메서드와 속성을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Stopwatch">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance can measure elapsed time for one interval, or the total of elapsed time across multiple intervals.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스 한 간격 또는 총 경과 된 시간에 대 한 여러 간격에 경과 된 시간을 측정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Stopwatch">
          <source>In a typical <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> scenario, you call the <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> method, then eventually call the <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> method, and then you check elapsed time using the <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph> property.</source>
          <target state="translated">일반적인 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 호출 하는 시나리오는 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> 메서드를 결국 호출는 <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> 메서드를 한 다음 확인 경과 시간을 사용 하는 <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Stopwatch">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance is either running or stopped; use <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.IsRunning%2A&gt;</ph> to determine the current state of a <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 실행 중이거나 중지 된 인스턴스가 사용 하 여; <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.IsRunning%2A&gt;</ph> 의 현재 상태를 확인 하는 <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Stopwatch">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> to begin measuring elapsed time; use <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> to stop measuring elapsed time.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> ; 경과 시간 측정을 시작 하려면 사용 하 여 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> 경과 시간 측정을 중지 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Stopwatch">
          <source>Query the elapsed time value through the properties <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A&gt;</ph>.</source>
          <target state="translated">경과 된 시간 값 속성을 통해 쿼리 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Stopwatch">
          <source>You can query the elapsed time properties while the instance is running or stopped.</source>
          <target state="translated">인스턴스가 실행 중이거나 중지 된 동안 경과 시간 속성을 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Stopwatch">
          <source>The elapsed time properties steadily increase while the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> is running; they remain constant when the instance is stopped.</source>
          <target state="translated">속성 꾸준히 증가 하는 경과 된 시간 동안는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 가 실행 될 일정 하 게 유지는 인스턴스가 중지 된 경우.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Stopwatch">
          <source>By default, the elapsed time value of a <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance equals the total of all measured time intervals.</source>
          <target state="translated">경과 시간 값은 기본적으로는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스 모든 측정된 시간 간격의 합계와 같습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Stopwatch">
          <source>Each call to <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> begins counting at the cumulative elapsed time; each call to <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> ends the current interval measurement and freezes the cumulative elapsed time value.</source>
          <target state="translated">호출할 때마다 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> 누적 경과 시간; 여기에서 시작을 호출할 때마다 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> 현재 간격 측정을 종료 하 고 누적 경과 된 시간 값을 고정 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Stopwatch">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> method to clear the cumulative elapsed time in an existing <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> 가 기존 누적 경과 시간을 지울 메서드 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Stopwatch">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> measures elapsed time by counting timer ticks in the underlying timer mechanism.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 내부 타이머 메커니즘에서 타이머 틱 수를 계산 하 여 경과 시간을 측정 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Stopwatch">
          <source>If the installed hardware and operating system support a high-resolution performance counter, then the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class uses that counter to measure elapsed time.</source>
          <target state="translated">설치 된 하드웨어 및 운영 체제에서 고해상도 성능 카운터를 지원 하면 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 클래스 해당 카운터를 사용 하 여 경과 시간을 측정 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Stopwatch">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class uses the system timer to measure elapsed time.</source>
          <target state="translated">그렇지 않은 경우는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 클래스 시스템 타이머를 사용 하 여 경과 시간을 측정 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Stopwatch">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.IsHighResolution&gt;</ph> fields to determine the precision and resolution of the <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> timing implementation.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.IsHighResolution&gt;</ph> 정밀도 정확도 확인 하는 필드는 <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 타이밍 구현 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Stopwatch">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class assists the manipulation of timing-related performance counters within managed code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 클래스 조작의 관리 코드 내에서 타이밍 관련 성능 카운터를 지원 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Stopwatch">
          <source>Specifically, the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph> field and <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.GetTimestamp%2A&gt;</ph> method can be used in place of the unmanaged Win32 APIs <ph id="ph3">`QueryPerformanceFrequency`</ph> and <ph id="ph4">`QueryPerformanceCounter`</ph>.</source>
          <target state="translated">특히,는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph> 필드 및 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.GetTimestamp%2A&gt;</ph> 관리 되지 않는 Win32 Api 대신 메서드를 사용할 수 있습니다 <ph id="ph3">`QueryPerformanceFrequency`</ph> 및 <ph id="ph4">`QueryPerformanceCounter`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Stopwatch">
          <source>On a multiprocessor computer, it does not matter which processor the thread runs on.</source>
          <target state="translated">다중 프로세서 컴퓨터에서 실행 되는 스레드는 프로세서를 중요 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Stopwatch">
          <source>However, because of bugs in the BIOS or the Hardware Abstraction Layer (HAL), you can get different timing results on different processors.</source>
          <target state="translated">그러나 BIOS 또는 (HAL (하드웨어 추상화 계층)의 버그 때문에 서로 다른 프로세서에서 다른 타이밍 결과 얻을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Stopwatch">
          <source>To specify processor affinity for a thread, use the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessThread.ProcessorAffinity%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">스레드에 대 한 프로세서 선호도 지정 하려면 사용 된 <ph id="ph1">&lt;xref:System.Diagnostics.ProcessThread.ProcessorAffinity%2A?displayProperty=nameWithType&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Stopwatch">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class to determine the execution time for an application.</source>
          <target state="translated">다음 예제에서는 사용 하는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 응용 프로그램에 대 한 실행 시간을 확인 하려면 클래스입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Stopwatch">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class to calculate performance data.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 성능 데이터를 계산 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Stopwatch.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Stopwatch" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.Stopwatch" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.#ctor">
          <source>The returned <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance is stopped, and the elapsed time property of the instance is zero.</source>
          <target state="translated">반환 된 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스가 중지 되 고 인스턴스 경과 시간 속성 기본값은 0입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.#ctor">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> method to begin measuring elapsed time with the new <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> 새 경과 시간 측정을 시작 하는 메서드 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.#ctor">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.StartNew%2A&gt;</ph> method to initialize a new <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance and immediately start it.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.StartNew%2A&gt;</ph> 새 메서드 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스 한 즉시 시작 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.#ctor">
          <source>The following example initializes a <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance by using a simple class constructor.</source>
          <target state="translated">다음 예제에서는 초기화는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 간단한 클래스 생성자를 사용 하 여 인스턴스.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Stopwatch.Elapsed">
          <source>Gets the total elapsed time measured by the current instance.</source>
          <target state="translated">현재 인스턴스가 측정한 총 경과 시간을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.Elapsed">
          <source>A read-only <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> representing the total elapsed time measured by the current instance.</source>
          <target state="translated">현재 인스턴스가 측정한 총 경과 시간을 나타내는 읽기 전용 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.Elapsed">
          <source>In a typical <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> scenario, you call the <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> method, then eventually call the <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> method, and then you check elapsed time using the <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph> property.</source>
          <target state="translated">일반적인 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 호출 하는 시나리오는 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> 메서드를 결국 호출는 <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> 메서드를 한 다음 확인 경과 시간을 사용 하는 <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.Elapsed">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph> property to retrieve the elapsed time value using <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> methods and properties.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph> 경과 시간을 검색 속성 값을 사용 하 여 <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> 메서드 및 속성입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.Elapsed">
          <source>For example, you can format the returned <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> instance into a text representation, or pass it to another class that requires a <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> parameter.</source>
          <target state="translated">예를 들어 서식을 지정할 수 있습니다는 반환 된 <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> 인스턴스의 텍스트 표현으로 하거나 필요로 하는 다른 클래스에 전달 된 <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.Elapsed">
          <source>You can query the properties <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A&gt;</ph> while the <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance is running or stopped.</source>
          <target state="translated">속성을 쿼리할 수 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A&gt;</ph> 동안는 <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스는 실행 또는 중지 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.Elapsed">
          <source>The elapsed time properties steadily increase while the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> is running; they remain constant when the instance is stopped.</source>
          <target state="translated">속성 꾸준히 증가 하는 경과 된 시간 동안는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 가 실행 될 일정 하 게 유지는 인스턴스가 중지 된 경우.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.Elapsed">
          <source>By default, the elapsed time value of a <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance equals the total of all measured time intervals.</source>
          <target state="translated">경과 시간 값은 기본적으로는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스 모든 측정된 시간 간격의 합계와 같습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.Elapsed">
          <source>Each call to <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> begins counting at the cumulative elapsed time; each call to <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> ends the current interval measurement and freezes the cumulative elapsed time value.</source>
          <target state="translated">호출할 때마다 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> 누적 경과 시간; 여기에서 시작을 호출할 때마다 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> 현재 간격 측정을 종료 하 고 누적 경과 된 시간 값을 고정 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.Elapsed">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> method to clear the cumulative elapsed time in an existing <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> 가 기존 누적 경과 시간을 지울 메서드 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.Elapsed">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph> property to determine the execution time for an application.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph> 속성 응용 프로그램에 대 한 실행 시간을 결정 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds">
          <source>Gets the total elapsed time measured by the current instance, in milliseconds.</source>
          <target state="translated">현재 인스턴스가 측정한 밀리초 단위의 총 경과 시간을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds">
          <source>A read-only long integer representing the total number of milliseconds measured by the current instance.</source>
          <target state="translated">현재 인스턴스가 측정한 총 밀리초 수를 나타내는 읽기 전용 정수(Long)입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds">
          <source>This property represents elapsed time rounded down to the nearest whole millisecond value.</source>
          <target state="translated">이 속성은 가장 가까운 정수 밀리초 값으로 내림 하는 경과 시간을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds">
          <source>For higher precision measurements, use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A&gt;</ph> properties.</source>
          <target state="translated">더 높은 정밀도 측정을 사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds">
          <source>You can query the properties <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A&gt;</ph> while the <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance is running or stopped.</source>
          <target state="translated">속성을 쿼리할 수 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A&gt;</ph> 동안는 <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스는 실행 또는 중지 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds">
          <source>The elapsed time properties steadily increase while the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> is running; they remain constant when the instance is stopped.</source>
          <target state="translated">속성 꾸준히 증가 하는 경과 된 시간 동안는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 가 실행 될 일정 하 게 유지는 인스턴스가 중지 된 경우.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds">
          <source>By default, the elapsed time value of a <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance equals the total of all measured time intervals.</source>
          <target state="translated">경과 시간 값은 기본적으로는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스 모든 측정된 시간 간격의 합계와 같습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds">
          <source>Each call to <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> begins counting at the cumulative elapsed time; each call to <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> ends the current interval measurement and freezes the cumulative elapsed time value.</source>
          <target state="translated">호출할 때마다 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> 누적 경과 시간; 여기에서 시작을 호출할 때마다 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> 현재 간격 측정을 종료 하 고 누적 경과 된 시간 값을 고정 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> method to clear the cumulative elapsed time in an existing <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> 가 기존 누적 경과 시간을 지울 메서드 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class to measure the performance of four different implementations for parsing an integer from a string.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 문자열에서 정수를 구문 분석을 위한 4 개의 서로 다른 구현의 성능을 측정 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Stopwatch.ElapsedTicks">
          <source>Gets the total elapsed time measured by the current instance, in timer ticks.</source>
          <target state="translated">현재 인스턴스가 측정한 총 경과 시간(타이머 틱 수)을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedTicks">
          <source>A read-only long integer representing the total number of timer ticks measured by the current instance.</source>
          <target state="translated">현재 인스턴스가 측정한 총 타이머 틱 수를 나타내는 읽기 전용 정수(Long)입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedTicks">
          <source>This property represents the number of elapsed ticks in the underlying timer mechanism.</source>
          <target state="translated">이 속성은 내부 타이머 메커니즘에서 경과 된 틱 수를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedTicks">
          <source>A tick is the smallest unit of time that the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> timer can measure.</source>
          <target state="translated">틱은 최소 시간 단위는는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 타이머 측정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedTicks">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph> field to convert the <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A&gt;</ph> value into a number of seconds.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph> 변환 하는 필드는 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A&gt;</ph> 값을 초 수입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedTicks">
          <source>You can query the properties <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A&gt;</ph> while the <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance is running or stopped.</source>
          <target state="translated">속성을 쿼리할 수 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A&gt;</ph> 동안는 <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스는 실행 또는 중지 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedTicks">
          <source>The elapsed time properties steadily increase while the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> is running; they remain constant when the instance is stopped.</source>
          <target state="translated">속성 꾸준히 증가 하는 경과 된 시간 동안는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 가 실행 될 일정 하 게 유지는 인스턴스가 중지 된 경우.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedTicks">
          <source>By default, the elapsed time value of a <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance equals the total of all measured time intervals.</source>
          <target state="translated">경과 시간 값은 기본적으로는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스 모든 측정된 시간 간격의 합계와 같습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedTicks">
          <source>Each call to <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> begins counting at the cumulative elapsed time; each call to <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> ends the current interval measurement and freezes the cumulative elapsed time value.</source>
          <target state="translated">호출할 때마다 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> 누적 경과 시간; 여기에서 시작을 호출할 때마다 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> 현재 간격 측정을 종료 하 고 누적 경과 된 시간 값을 고정 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedTicks">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> method to clear the cumulative elapsed time in an existing <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> 가 기존 누적 경과 시간을 지울 메서드 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedTicks">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> ticks are different from <ph id="ph2">&lt;xref:System.DateTime.Ticks%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 틱은 다릅니다 <ph id="ph2">&lt;xref:System.DateTime.Ticks%2A?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedTicks">
          <source>Each tick in the <ph id="ph1">&lt;xref:System.DateTime.Ticks%2A?displayProperty=nameWithType&gt;</ph> value represents one 100-nanosecond interval.</source>
          <target state="translated">각 틱은 <ph id="ph1">&lt;xref:System.DateTime.Ticks%2A?displayProperty=nameWithType&gt;</ph> 값 하나 100 나노초 간격을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedTicks">
          <source>Each tick in the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A&gt;</ph> value represents the time interval equal to 1 second divided by the <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph>.</source>
          <target state="translated">각 눈금에는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A&gt;</ph> 값으로 나눈 1 초 시간 간격을 나타내면는 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedTicks">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class to measure the performance of four different implementations for parsing an integer from a string.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 문자열에서 정수를 구문 분석을 위한 4 개의 서로 다른 구현의 성능을 측정 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.ElapsedTicks">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.Stopwatch.Frequency">
          <source>Gets the frequency of the timer as the number of ticks per second.</source>
          <target state="translated">초당 틱 수로 나타낸 타이머의 빈도를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.Stopwatch.Frequency">
          <source>This field is read-only.</source>
          <target state="translated">이 필드는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Diagnostics.Stopwatch.Frequency">
          <source>The timer frequency indicates the timer precision and resolution.</source>
          <target state="translated">타이머 주파수 타이머 정밀도 정확도 나타냅니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Diagnostics.Stopwatch.Frequency">
          <source>For example, a timer frequency of 2 million ticks per second equals a timer resolution of 500 nanoseconds per tick.</source>
          <target state="translated">예를 들어 2 백만 주파수 타이머 틱 당 500 나노초의 타이머 확인 이면 당 틱입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Diagnostics.Stopwatch.Frequency">
          <source>In other words, because one second equals 1 billion nanoseconds, a timer frequency of 2 million ticks per second is equivalent to 2 million ticks per 1 billion nanoseconds, which can be further simplified to 1 tick per 500 nanoseconds.</source>
          <target state="translated">즉, 1 초가 십억 1 나노초 인 때문에 초당 2 백만 틱 타이머 주파수는 2 백만 틱 당 1 십억 나노초 단위, 1 틱 당 500 나노초를 단순화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Diagnostics.Stopwatch.Frequency">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph> value depends on the resolution of the underlying timing mechanism.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph> 값 기본 타이밍 메커니즘에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Diagnostics.Stopwatch.Frequency">
          <source>If the installed hardware and operating system support a high-resolution performance counter, then the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph> value reflects the frequency of that counter.</source>
          <target state="translated">설치 된 하드웨어 및 운영 체제에서 고해상도 성능 카운터를 지원 하면 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph> 값은 해당 카운터의 빈도 반영 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Diagnostics.Stopwatch.Frequency">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph> value is based on the system timer frequency.</source>
          <target state="translated">그렇지 않은 경우는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph> 값은 시스템 타이머 빈도에 따라 결정 됩니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Diagnostics.Stopwatch.Frequency">
          <source>Because the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> frequency depends on the installed hardware and operating system, the <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph> value remains constant while the system is running.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 빈도 설치 된 하드웨어 및 운영 체제에 따라 달라 집니다는 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph> 값 일정 하 게 유지 시스템에서 실행 되는 동안 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Diagnostics.Stopwatch.Frequency">
          <source>The following example displays the frequency and resolution of a <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> timer.</source>
          <target state="translated">다음 예제에서는 표시 된 빈도 및 해상도의 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 타이머 합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Diagnostics.Stopwatch.Frequency">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Stopwatch.GetTimestamp">
          <source>Gets the current number of ticks in the timer mechanism.</source>
          <target state="translated">타이머 메커니즘에서 현재 틱 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Stopwatch.GetTimestamp">
          <source>A long integer representing the tick counter value of the underlying timer mechanism.</source>
          <target state="translated">내부 타이머 메커니즘의 틱 카운터 값을 나타내는 정수(Long)입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.GetTimestamp">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class uses a high-resolution performance counter, <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.GetTimestamp%2A&gt;</ph> returns the current value of that counter.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 클래스에는 고해상도 성능 카운터를 사용 하 여 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.GetTimestamp%2A&gt;</ph> 해당 카운터의 현재 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.GetTimestamp">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class uses the system timer, <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.GetTimestamp%2A&gt;</ph> returns the current <ph id="ph3">&lt;xref:System.DateTime.Ticks%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph4">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> instance.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 클래스 시스템 타이머를 사용 하 여 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.GetTimestamp%2A&gt;</ph> 현재 반환 <ph id="ph3">&lt;xref:System.DateTime.Ticks%2A?displayProperty=nameWithType&gt;</ph> 의 속성은 <ph id="ph4">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.GetTimestamp">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.GetTimestamp%2A&gt;</ph> method to update a performance counter.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.GetTimestamp%2A&gt;</ph> 메서드를 성능 카운터를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.Stopwatch.IsHighResolution">
          <source>Indicates whether the timer is based on a high-resolution performance counter.</source>
          <target state="translated">타이머가 고해상도 성능 카운터를 기반으로 하는지를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.Stopwatch.IsHighResolution">
          <source>This field is read-only.</source>
          <target state="translated">이 필드는 읽기 전용입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Diagnostics.Stopwatch.IsHighResolution">
          <source>The timer used by the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class depends on the system hardware and operating system.</source>
          <target state="translated">사용 하는 타이머는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 클래스 시스템 하드웨어와 운영 체제에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Diagnostics.Stopwatch.IsHighResolution">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.IsHighResolution&gt;</ph> is <ph id="ph2">`true`</ph> if the <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> timer is based on a high-resolution performance counter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.IsHighResolution&gt;</ph> <ph id="ph2">`true`</ph> 경우는 <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 타이머가 고해상도 성능 카운터를 기반 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Diagnostics.Stopwatch.IsHighResolution">
          <source>Otherwise, <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.IsHighResolution&gt;</ph> is <ph id="ph2">`false`</ph>, which indicates that the <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> timer is based on the system timer.</source>
          <target state="translated">그렇지 않으면 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.IsHighResolution&gt;</ph> 은 <ph id="ph2">`false`</ph>, 않는다는 의미는 <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 타이머가 시스템 타이머를 기반 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Diagnostics.Stopwatch.IsHighResolution">
          <source>The following example displays the frequency and resolution of a <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> timer.</source>
          <target state="translated">다음 예제에서는 표시 된 빈도 및 해상도의 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 타이머 합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Diagnostics.Stopwatch.IsHighResolution">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Stopwatch.IsRunning">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Stopwatch" /&gt;</ph> timer is running.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.Stopwatch" /&gt;</ph> 타이머가 실행 중인지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.IsRunning">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Diagnostics.Stopwatch" /&gt;</ph> instance is currently running and measuring elapsed time for an interval; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">현재 <ph id="ph2">&lt;see cref="T:System.Diagnostics.Stopwatch" /&gt;</ph> 인스턴스가 간격의 경과 시간을 측정하면서 실행되고 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.IsRunning">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance begins running with a call to <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.StartNew%2A&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 을 호출 하 여 실행을 시작 하는 인스턴스 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.StartNew%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Stopwatch.IsRunning">
          <source>The instance stops running with a call to <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph>.</source>
          <target state="translated">호출 하 여 실행을 중지 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Stopwatch.Reset">
          <source>Stops time interval measurement and resets the elapsed time to zero.</source>
          <target state="translated">시간 간격 측정을 중지하고 경과 시간을 0으로 다시 설정합니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Reset">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스 계산 하 고 인스턴스를 다시 설정 될 때까지 여러 시간 간격의 누적 경과 시간을 유지 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Reset">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> to stop the current interval measurement and retain the cumulative elapsed time value.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> 하 현재 간격 측정을 중지 하 고 누적 경과 된 시간 값을 유지 합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Reset">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> to stop any interval measurement in progress and clear the elapsed time value.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> 을 진행 중인 모든 간격 측정을 중지 한 경과 시간 값의 선택을 취소 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Stopwatch.Restart">
          <source>Stops time interval measurement, resets the elapsed time to zero, and starts measuring elapsed time.</source>
          <target state="translated">시간 간격 측정을 중지하고 경과 시간 값을 0으로 다시 설정한 다음 경과 시간 측정을 시작합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Restart">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset or restarted.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스가 계산 하 고 인스턴스가 다시 설정 되거나 다시 시작 될 때까지 여러 시간 간격의 누적 경과 시간을 유지 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Restart">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> to stop the current interval measurement and retain the cumulative elapsed time value.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> 하 현재 간격 측정을 중지 하 고 누적 경과 된 시간 값을 유지 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Restart">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> to stop any interval measurement in progress and clear the elapsed time value.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> 을 진행 중인 모든 간격 측정을 중지 한 경과 시간 값의 선택을 취소 합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Restart">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Restart%2A&gt;</ph> to stop current interval measurement and start a new interval measurement.</source>
          <target state="translated">사용 하 여 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Restart%2A&gt;</ph> 현재 간격 측정을 중지 하 고 새 간격 측정을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Stopwatch.Start">
          <source>Starts, or resumes, measuring elapsed time for an interval.</source>
          <target state="translated">간격에 대한 경과 시간 측정을 시작하거나 다시 시작합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Start">
          <source>In a typical <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> scenario, you call the <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> method, then eventually call the <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> method, and then you check elapsed time using the <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph> property.</source>
          <target state="translated">일반적인 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 호출 하는 시나리오는 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> 메서드를 결국 호출는 <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> 메서드를 한 다음 확인 경과 시간을 사용 하는 <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Start">
          <source>Once started, a <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> timer measures the current interval, in elapsed timer ticks, until the instance is stopped or reset.</source>
          <target state="translated">일단 시작 되 면 한 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 타이머 인스턴스가 중지 되었거나 다시 설정 될 때까지 경과 된 타이머 틱에서 현재 간격을 측정 합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Start">
          <source>Starting a <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> that is already running does not change the timer state or reset the elapsed time properties.</source>
          <target state="translated">시작 하는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 즉 이미 실행 되 고 타이머 상태가 변경 않거나 경과 시간 속성 다시 설정 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Start">
          <source>When a <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance measures more than one interval, the <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> method resumes measuring time from the current elapsed time value.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스가 여러 개 간격을 측정할는 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> 메서드를 계속 진행 현재 경과 시간 값에서 시간을 측정 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Start">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스 계산 하 고 인스턴스를 다시 설정 될 때까지 여러 시간 간격의 누적 경과 시간을 유지 합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Start">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> method before calling <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> to clear the cumulative elapsed time in a <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> 메서드 호출 하기 전에 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> 누적 된 경과 시간을 선택 취소 한 <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Start">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Restart%2A&gt;</ph> method to <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> the <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> with a single command.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Restart%2A&gt;</ph> 메서드를 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> 는 <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 단일 명령으로 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Start">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> method to start a timer that measures the execution time of an application.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> 메서드를 응용 프로그램의 실행 시간을 측정 하는 타이머를 시작 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Stopwatch.StartNew">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Diagnostics.Stopwatch" /&gt;</ph> instance, sets the elapsed time property to zero, and starts measuring elapsed time.</source>
          <target state="translated">새 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Stopwatch" /&gt;</ph> 인스턴스를 초기화하고 경과 시간 속성을 0으로 설정한 다음 경과 시간 측정을 시작합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Stopwatch.StartNew">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.Stopwatch" /&gt;</ph> that has just begun measuring elapsed time.</source>
          <target state="translated">경과 시간 측정을 방금 시작한 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Stopwatch" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.StartNew">
          <source>This method is equivalent to calling the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> constructor and then calling <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> on the new instance.</source>
          <target state="translated">이 메서드는 호출에 해당 하는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 생성자를 호출한 다음 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> 새 인스턴스에서 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.StartNew">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class to measure the performance of four different implementations for parsing an integer from a string.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 문자열에서 정수를 구문 분석을 위한 4 개의 서로 다른 구현의 성능을 측정 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.StartNew">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Stopwatch.Stop">
          <source>Stops measuring elapsed time for an interval.</source>
          <target state="translated">간격에 대한 경과 시간 측정을 중지합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Stop">
          <source>In a typical <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> scenario, you call the <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> method, then eventually call the <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> method, and then you check elapsed time using the <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph> property.</source>
          <target state="translated">일반적인 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 호출 하는 시나리오는 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> 메서드를 결국 호출는 <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> 메서드를 한 다음 확인 경과 시간을 사용 하는 <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Stop">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> method ends the current time interval measurement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> 메서드는 현재 시간 간격 측정을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Stop">
          <source>Stopping a <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> that is not running does not change the timer state or reset the elapsed time properties.</source>
          <target state="translated">중지 된 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 즉 실행 되 고 있지 않는 하지 타이머 또는 상태 변경 경과 시간 속성 다시 설정 합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Stop">
          <source>When a <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance measures more than one interval, the <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> method is equivalent to pausing the elapsed time measurement.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스가 여러 개 간격을 측정할는 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> 을 경과 시간 측정을 일시 중지 하는 것과 같습니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Stop">
          <source>A subsequent call to <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> resumes measuring time from the current elapsed time value.</source>
          <target state="translated">후속 호출에 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> 현재 경과 시간 값에서 시간을 측정 하는 다시 시작 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Stop">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> method to clear the cumulative elapsed time in a <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> 누적 된 경과 시간을 선택 취소 하는 메서드는 <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Stopwatch.Stop">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> method to stop a timer that measures the execution time of an application.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> 메서드를 응용 프로그램의 실행 시간을 측정 하는 타이머를 중지 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>