<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StackFrame.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5714fbf44d620dc5e0fada1990d848be249a7fe7a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">714fbf44d620dc5e0fada1990d848be249a7fe7a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.StackFrame">
          <source>Provides information about a <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph>, which represents a function call on the call stack for the current thread.</source>
          <target state="translated">현재 스레드의 호출 스택에 대한 함수를 나타내는 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> 관련 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackFrame">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> is created and pushed on the call stack for every function call made during the execution of a thread.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 생성 되 고 스레드를 실행 하는 동안 수행 된 모든 함수 호출에 대 한 호출 스택에 푸시됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackFrame">
          <source>The stack frame always includes <ph id="ph1">&lt;xref:System.Reflection.MethodBase&gt;</ph> information, and optionally includes file name, line number, and column number information.</source>
          <target state="translated">스택 프레임에 포함 되어 항상 <ph id="ph1">&lt;xref:System.Reflection.MethodBase&gt;</ph> 내용은 고 선택적으로 파일 이름, 줄 번호 및 열 번호 정보를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackFrame">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> information will be most informative with Debug build configurations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 정보는 디버그 빌드 구성을 통해 풍부한 정보를 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackFrame">
          <source>By default, Debug builds include debug symbols, while Release builds do not.</source>
          <target state="translated">기본적으로 디버그 빌드는 디버그 기호를 포함 하지만 릴리스 빌드는 그렇지 않습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackFrame">
          <source>The debug symbols contain most of the file, method name, line number, and column information used in constructing <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> objects.</source>
          <target state="translated">대부분의 파일, 메서드 이름, 줄 번호 및 구성할 때 사용 되는 열 정보를 포함 하는 디버그 기호 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackFrame">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class to provide the stack frame information for a stack trace.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 스택 추적에 대 한 스택 프레임 정보를 제공 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackFrame">
          <source>The following example demonstrates the use of  the members of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">다음 예제에서는의 멤버를 사용 하 여 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackFrame">
          <source>for the ability of inheritors to access unmanaged code.</source>
          <target state="translated">상속자 참고 사항의 비관리 코드에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackFrame">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackFrame">
          <source>This class cannot be inherited by partially trusted code.</source>
          <target state="translated">부분적으로 신뢰할 수 있는 코드에서이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.StackFrame">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to capture the file name, line number, and column number of the stack frame; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">스택 프레임의 파일 이름, 줄 번호 및 열 번호를 캡처하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> class, optionally capturing source information.</source>
          <target state="translated">필요에 따라 소스 정보를 캡처하고 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.Boolean)">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.%23ctor%28System.Boolean%29&gt;</ph> constructor.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.%23ctor%28System.Boolean%29&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.Boolean)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.Int32)">
          <source>The number of frames up the stack to skip.</source>
          <target state="translated">건너뛸 스택 프레임의 개수입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> class that corresponds to a frame above the current stack frame.</source>
          <target state="translated">현재 스택 프레임 위의 프레임에 해당하는 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.Int32)">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.%23ctor%28System.Int32%29&gt;</ph> constructor.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.%23ctor%28System.Int32%29&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)">
          <source>The number of frames up the stack to skip.</source>
          <target state="translated">건너뛸 스택 프레임의 개수입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to capture the file name, line number, and column number of the stack frame; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">스택 프레임의 파일 이름, 줄 번호 및 열 번호를 캡처하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> class that corresponds to a frame above the current stack frame, optionally capturing source information.</source>
          <target state="translated">필요에 따라 소스 정보를 캡처하고 현재 스택 프레임 위의 프레임에 해당하는 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.%23ctor%28System.Int32%2CSystem.Boolean%29&gt;</ph> constructor.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.%23ctor%28System.Int32%2CSystem.Boolean%29&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)">
          <source>The file name.</source>
          <target state="translated">파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)">
          <source>The line number in the specified file.</source>
          <target state="translated">지정된 파일의 줄 번호입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> class that contains only the given file name and line number.</source>
          <target state="translated">지정된 파일 이름과 줄 번호만 포함하는 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)">
          <source>Use this constructor when you do not want to use the debugger's line mapping logic.</source>
          <target state="translated">디버거의 줄 매핑을 논리를 사용 하지 않을 경우이 생성자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph> constructor.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)">
          <source>The file name.</source>
          <target state="translated">파일 이름입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)">
          <source>The line number in the specified file.</source>
          <target state="translated">지정된 파일의 줄 번호입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)">
          <source>The column number in the specified file.</source>
          <target state="translated">지정된 파일의 열 번호입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> class that contains only the given file name, line number, and column number.</source>
          <target state="translated">지정된 파일 이름, 줄 번호 및 열 번호만 포함하는 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)">
          <source>Use this constructor when you do not want to use the debugger's line mapping logic.</source>
          <target state="translated">디버거의 줄 매핑을 논리를 사용 하지 않을 경우이 생성자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetFileColumnNumber">
          <source>Gets the column number in the file that contains the code that is executing.</source>
          <target state="translated">실행 중인 코드가 포함된 파일에서 열 번호를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetFileColumnNumber">
          <source>This information is typically extracted from the debugging symbols for the executable.</source>
          <target state="translated">이 정보는 일반적으로 실행 파일의 디버깅 기호에서 추출됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetFileColumnNumber">
          <source>The file column number, or 0 (zero) if the file column number cannot be determined.</source>
          <target state="translated">파일 열 번호 또는 파일 열 번호를 확인할 수 없는 경우 0입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetFileColumnNumber">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetFileColumnNumber%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetFileColumnNumber%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetFileColumnNumber">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetFileLineNumber">
          <source>Gets the line number in the file that contains the code that is executing.</source>
          <target state="translated">실행 중인 코드가 포함된 파일에서 줄 번호를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetFileLineNumber">
          <source>This information is typically extracted from the debugging symbols for the executable.</source>
          <target state="translated">이 정보는 일반적으로 실행 파일의 디버깅 기호에서 추출됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetFileLineNumber">
          <source>The file line number, or 0 (zero) if the file line number cannot be determined.</source>
          <target state="translated">파일 줄 번호 또는 파일 줄 번호를 확인할 수 없는 경우 0입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetFileLineNumber">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetFileLineNumber%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetFileLineNumber%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetFileLineNumber">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetFileName">
          <source>Gets the file name that contains the code that is executing.</source>
          <target state="translated">실행 중인 코드가 포함된 파일 이름을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetFileName">
          <source>This information is typically extracted from the debugging symbols for the executable.</source>
          <target state="translated">이 정보는 일반적으로 실행 파일의 디버깅 기호에서 추출됩니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetFileName">
          <source>The file name, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the file name cannot be determined.</source>
          <target state="translated">파일 이름 또는 파일 이름을 확인할 수 없는 경우 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetFileName">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetFileName%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetFileName%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetFileName">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetFileName">
          <source>for access to the path information.</source>
          <target state="translated">경로 정보에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetFileName">
          <source>Associated enumeration:  <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우:  <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetILOffset">
          <source>Gets the offset from the start of the Microsoft intermediate language (MSIL) code for the method that is executing.</source>
          <target state="translated">실행 중인 메서드의 MSIL(Microsoft Intermediate Language) 코드 시작 부분에서 오프셋을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetILOffset">
          <source>This offset might be an approximation depending on whether or not the just-in-time (JIT) compiler is generating debugging code.</source>
          <target state="translated">이 오프셋은 JIT(just-in-time) 컴파일러가 디버깅 코드를 생성하는지 여부에 따라 근사값이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetILOffset">
          <source>The generation of this debugging information is controlled by the <ph id="ph1">&lt;see cref="T:System.Diagnostics.DebuggableAttribute" /&gt;</ph>.</source>
          <target state="translated">이 디버깅 정보의 생성은 <ph id="ph1">&lt;see cref="T:System.Diagnostics.DebuggableAttribute" /&gt;</ph>에 의해 제어됩니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetILOffset">
          <source>The offset from the start of the MSIL code for the method that is executing.</source>
          <target state="translated">실행 중인 메서드의 MSIL 코드 처음부터 계산한 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetILOffset">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetILOffset%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetILOffset%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetILOffset">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetMethod">
          <source>Gets the method in which the frame is executing.</source>
          <target state="translated">프레임이 실행되고 있는 메서드를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetMethod">
          <source>The method in which the frame is executing.</source>
          <target state="translated">프레임이 실행되고 있는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetMethod">
          <source>The method that is currently executing may be inherited from a base class, although it is called in a derived class.</source>
          <target state="translated">파생된 클래스에서 호출 했더라도 기본 클래스에서 현재 실행 중인 메서드는 상속 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetMethod">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Reflection.MethodBase&gt;</ph> object that is returned by <ph id="ph3">&lt;xref:System.Diagnostics.StackFrame.GetMethod%2A&gt;</ph> identifies the base class, not the derived class.</source>
          <target state="translated">이 경우는 <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.ReflectedType%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Reflection.MethodBase&gt;</ph> 개체에서 반환 되는 <ph id="ph3">&lt;xref:System.Diagnostics.StackFrame.GetMethod%2A&gt;</ph> 파생된 클래스가 아닌 기본 클래스를 식별 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetMethod">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetMethod%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetMethod%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetMethod">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetNativeOffset">
          <source>Gets the offset from the start of the native just-in-time (JIT)-compiled code for the method that is being executed.</source>
          <target state="translated">실행 중인 메서드의 네이티브 JIT(just-in-time) 컴파일 코드 처음부터 계산한 오프셋을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetNativeOffset">
          <source>The generation of this debugging information is controlled by the <ph id="ph1">&lt;see cref="T:System.Diagnostics.DebuggableAttribute" /&gt;</ph> class.</source>
          <target state="translated">이 디버깅 정보의 생성은 <ph id="ph1">&lt;see cref="T:System.Diagnostics.DebuggableAttribute" /&gt;</ph>에 의해 제어됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.GetNativeOffset">
          <source>The offset from the start of the JIT-compiled code for the method that is being executed.</source>
          <target state="translated">실행 중인 메서드의 JIT 컴파일 코드 처음부터 계산한 오프셋입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetNativeOffset">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetNativeOffset%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.GetNativeOffset%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.GetNativeOffset">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.StackFrame.OFFSET_UNKNOWN">
          <source>Defines the value that is returned from the <ph id="ph1">&lt;see cref="M:System.Diagnostics.StackFrame.GetNativeOffset" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.Diagnostics.StackFrame.GetILOffset" /&gt;</ph> method when the native or Microsoft intermediate language (MSIL) offset is unknown.</source>
          <target state="translated">네이티브 또는 MSIL(Microsoft Intermediate Language) 오프셋을 알 수 없을 때 <ph id="ph1">&lt;see cref="M:System.Diagnostics.StackFrame.GetNativeOffset" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.Diagnostics.StackFrame.GetILOffset" /&gt;</ph> 메서드를 통해 반환되는 값을 정의합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.StackFrame.OFFSET_UNKNOWN">
          <source>This field is constant.</source>
          <target state="translated">이 필드는 상수입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Diagnostics.StackFrame.OFFSET_UNKNOWN">
          <source>The value of this constant is -1.</source>
          <target state="translated">이 상수의 값은-1입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.ToString">
          <source>Builds a readable representation of the stack trace.</source>
          <target state="translated">읽을 수 있도록 스택 추적을 만듭니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackFrame.ToString">
          <source>A readable representation of the stack trace.</source>
          <target state="translated">읽을 수 있도록 만든 스택 추적입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.ToString">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.ToString%2A&gt;</ph> method.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame.ToString%2A&gt;</ph> 메서드를 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.ToString">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.ToString">
          <source>for access to the path information.</source>
          <target state="translated">경로 정보에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackFrame.ToString">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">연결 된 열거형의 경우: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>