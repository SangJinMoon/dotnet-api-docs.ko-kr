<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DebuggableAttribute.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50a97bab4285baf3facdeff57d93b8096a3cedff7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a97bab4285baf3facdeff57d93b8096a3cedff7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.DebuggableAttribute">
          <source>Modifies code generation for runtime just-in-time (JIT) debugging.</source>
          <target state="translated">런타임 JIT(Just-In-Time) 디버깅을 위해 생성된 코드를 수정합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.DebuggableAttribute">
          <source>This class cannot be inherited.</source>
          <target state="translated">이 클래스는 상속될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DebuggableAttribute&gt;</ph> controls how the runtime treats code within the module.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DebuggableAttribute&gt;</ph> 런타임에 모듈 내의 코드를 처리 하는 방법을 제어 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute">
          <source>The runtime might track extra information about generated code, and it might disable certain optimizations based on the values contained within this attribute.</source>
          <target state="translated">런타임에서 생성 된 코드에 대 한 추가 정보 추적 하 고이 특성에 포함 된 값에 따라 특정 최적화를 비활성화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute">
          <source>A debugger might choose to ignore the <ph id="ph1">&lt;xref:System.Diagnostics.DebuggableAttribute&gt;</ph> settings when loading an assembly.</source>
          <target state="translated">디버거를 무시 하도록 선택할 수는 <ph id="ph1">&lt;xref:System.Diagnostics.DebuggableAttribute&gt;</ph> 어셈블리를 로드할 때 설정 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute">
          <source>However, attaching a debugger to a running program may prevent the debugger from changing the settings because they have already been applied.</source>
          <target state="translated">그러나 실행 중인 프로그램에 디버거를 연결 설정을 변경 하면 이미 적용 되었으므로에서 디버거가 되지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute">
          <source>To use the <ph id="ph1">&lt;xref:System.Diagnostics.DebuggableAttribute&gt;</ph> with dynamic assemblies using the Reflection Emit <ph id="ph2">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A&gt;</ph> methods, emit the <ph id="ph3">&lt;xref:System.Diagnostics.DebuggableAttribute&gt;</ph> before calling the <ph id="ph4">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A&gt;</ph> methods to ensure that the settings are applied to the entire assembly.</source>
          <target state="translated">사용 하는 <ph id="ph1">&lt;xref:System.Diagnostics.DebuggableAttribute&gt;</ph> 리플렉션 내보내기를 사용 하 여 동적 어셈블리를 사용한 <ph id="ph2">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A&gt;</ph> 메서드 내보내기는 <ph id="ph3">&lt;xref:System.Diagnostics.DebuggableAttribute&gt;</ph> 호출 하기 전에 <ph id="ph4">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A&gt;</ph> 설정을 전체 어셈블리에 적용 되는지 확인 하는 메서드.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DebuggableAttribute">
          <source>For more information about using attributes, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">특성을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>특성<ept id="p1">](~/docs/standard/attributes/index.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.DebuggableAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.DebuggableAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.DebuggableAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Diagnostics.DebuggableAttribute.DebuggingModes)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" /&gt;</ph> values specifying the debugging mode for the JIT compiler.</source>
          <target state="translated">JIT 컴파일러의 디버깅 모드를 지정하는 <ph id="ph1">&lt;see cref="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Diagnostics.DebuggableAttribute.DebuggingModes)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.DebuggableAttribute" /&gt;</ph> class, using the specified debugging modes for the just-in-time (JIT) compiler.</source>
          <target state="translated">JIT(Just-In-Time) 컴파일러에 대해 지정된 디버깅 모드를 사용하여 <ph id="ph1">&lt;see cref="T:System.Diagnostics.DebuggableAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Diagnostics.DebuggableAttribute.DebuggingModes)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Diagnostics.DebuggableAttribute.%23ctor%28System.Diagnostics.DebuggableAttribute.DebuggingModes%29&gt;</ph> constructor with a <ph id="ph2">`modes`</ph> parameter value of <ph id="ph3">&lt;xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default&gt;</ph> is equivalent to calling the <ph id="ph4">&lt;xref:System.Diagnostics.DebuggableAttribute.%23ctor%28System.Boolean%2CSystem.Boolean%29&gt;</ph> constructor with an <ph id="ph5">`isJITTrackingEnabled`</ph> parameter value of <ph id="ph6">`true`</ph>.</source>
          <target state="translated">호출의 <ph id="ph1">&lt;xref:System.Diagnostics.DebuggableAttribute.%23ctor%28System.Diagnostics.DebuggableAttribute.DebuggingModes%29&gt;</ph> 생성자는 <ph id="ph2">`modes`</ph> 의 매개 변수 값 <ph id="ph3">&lt;xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default&gt;</ph> 호출 하는 것과 같습니다는 <ph id="ph4">&lt;xref:System.Diagnostics.DebuggableAttribute.%23ctor%28System.Boolean%2CSystem.Boolean%29&gt;</ph> 생성자는 <ph id="ph5">`isJITTrackingEnabled`</ph> 매개 변수 값의 <ph id="ph6">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to enable debugging; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">디버깅을 사용하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to disable the optimizer for execution; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">실행을 위해 최적화 프로그램을 사용하지 않으려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 사용하려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Boolean,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.DebuggableAttribute" /&gt;</ph> class, using the specified tracking and optimization options for the just-in-time (JIT) compiler.</source>
          <target state="translated">JIT(Just-In-Time) 컴파일러에 대한 지정된 추적 및 최적화 옵션을 사용하여 <ph id="ph1">&lt;see cref="T:System.Diagnostics.DebuggableAttribute" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Boolean,System.Boolean)">
          <source>This constructor sets the properties <ph id="ph1">&lt;xref:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled%2A&gt;</ph>.</source>
          <target state="translated">이 생성자는 속성을 설정 <ph id="ph1">&lt;xref:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Boolean,System.Boolean)">
          <source>An <ph id="ph1">`isJITTrackingEnabaled`</ph> parameter value of <ph id="ph2">`true`</ph> causes the runtime to track information important to the debugger during code generation; a value of <ph id="ph3">`false`</ph> results in no tracking, but does not prevent debugging.</source>
          <target state="translated"><ph id="ph1">`isJITTrackingEnabaled`</ph> 매개 변수 값의 <ph id="ph2">`true`</ph> ; 코드를 생성 하는 동안 디버거를 중요 한 정보를 추적 런타임에서 값 <ph id="ph3">`false`</ph> 없는 추적으로 인해 하지만 디버깅 하는 것을 방지 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Boolean,System.Boolean)">
          <source>This parameter has no effect in the .NET Framework version 2.0.</source>
          <target state="translated">이 매개 변수는.NET Framework 버전 2.0에 적용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Boolean,System.Boolean)">
          <source>In version 2.0, JIT tracking information, the Microsoft intermediate language (MSIL) offset to the native-code offset within a method, is always generated.</source>
          <target state="translated">버전 2.0에서는 JIT 추적 정보는 Microsoft intermediate language MSIL 오프셋 인 메서드 내부의 네이티브 코드 오프셋에 항상 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Boolean,System.Boolean)">
          <source>An <ph id="ph1">`isJITOptimizerDisabled`</ph> parameter value of <ph id="ph2">`true`</ph> optimizes for debugging; a value of <ph id="ph3">`false`</ph> optimizes for execution.</source>
          <target state="translated"><ph id="ph1">`isJITOptimizerDisabled`</ph> 매개 변수 값의 <ph id="ph2">`true`</ph> ; 디버깅을 위해 최적화 값 <ph id="ph3">`false`</ph> 실행에 대 한 최적화 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.DebuggableAttribute.DebuggingFlags">
          <source>Gets the debugging modes for the attribute.</source>
          <target state="translated">특성의 디버깅 모드를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DebuggableAttribute.DebuggingFlags">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" /&gt;</ph> values describing the debugging mode for the just-in-time (JIT) compiler.</source>
          <target state="translated">JIT(Just-In-Time) 컴파일러의 디버깅 모드를 나타내는 <ph id="ph1">&lt;see cref="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" /&gt;</ph> 값의 비트 조합입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DebuggableAttribute.DebuggingFlags">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DebuggableAttribute.DebuggingFlags">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DebuggableAttribute.DebuggingFlags%2A&gt;</ph> property controls how the runtime tracks information important to the debugger during code generation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DebuggableAttribute.DebuggingFlags%2A&gt;</ph> 속성은 런타임 추적 하는 방법을 중요 한 정보는 디버거에 코드 생성 중 제어 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DebuggableAttribute.DebuggingFlags">
          <source>This information helps the debugger provide a rich debugging experience.</source>
          <target state="translated">이러한 정보를 통해 디버거 풍부한 디버깅 환경을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled">
          <source>Gets a value that indicates whether the runtime optimizer is disabled.</source>
          <target state="translated">런타임 최적화 프로그램을 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the runtime optimizer is disabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">런타임 최적화 프로그램이 사용하지 않도록 설정되어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 사용하도록 설정되어 있으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled">
          <source>A value of <ph id="ph1">`true`</ph> enhances performance for runtime debugging, which can cause a decline in execution performance.</source>
          <target state="translated">값이 <ph id="ph1">`true`</ph> 실행 성능이 저하 될 수 있는 런타임 디버깅을 위해 성능을 향상 시킵니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled">
          <source>A value of <ph id="ph1">`false`</ph> enhances performance for execution.</source>
          <target state="translated">값이 <ph id="ph1">`false`</ph> 실행의 성능을 향상 시킵니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled">
          <source>When <ph id="ph1">&lt;xref:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>, stepping through code might result in a different behavior than when set to <ph id="ph3">`true`</ph> because the compiler might reorder instructions or insert jumps to common code.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled%2A&gt;</ph> 로 설정 되어 <ph id="ph2">`false`</ph>, 다른 동작에서 발생할 수 있습니다 코드를 단계별로로 설정 된 경우 <ph id="ph3">`true`</ph> 컴파일러 명령을 다시 정렬할 수 있습니다 또는 점프 공통 코드를 삽입 하기 때문에 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled">
          <source>Gets a value that indicates whether the runtime will track information during code generation for the debugger.</source>
          <target state="translated">런타임에서 디버거를 위한 코드 생성 중에 정보를 추적할지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the runtime will track information during code generation for the debugger; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">런타임이 디버거를 위한 코드 생성 중에 정보를 추적하는 경우 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled%2A&gt;</ph> controls whether the runtime tracks information important to the debugger during code generation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled%2A&gt;</ph> 추적 하는지 여부를 런타임에서 중요 한 정보는 디버거에 코드 생성 중 제어 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled">
          <source>This information helps the debugger provide a rich debugging experience.</source>
          <target state="translated">이러한 정보를 통해 디버거 풍부한 디버깅 환경을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled">
          <source>Starting with the .NET Framework 2.0, JIT tracking information is always enabled during debugging, and this property value is ignored.</source>
          <target state="translated">.NET Framework 2.0부터 JIT 추적 정보는 디버깅 과정에서 항상 사용할 수 있으며이 속성 값이 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled">
          <source>This property does not control the ability to debug, but tells the just-in-time (JIT) compiler to generate tracking information.</source>
          <target state="translated">이 속성을 디버깅 하는 기능을 제어 하지 않습니다 하지만 컴파일러가 타임 (JIT)에 추적 정보를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled">
          <source>Specifically, the compiler tracks the Microsoft Intermediate Language (MSIL)-offset to the native-code offset within a method.</source>
          <target state="translated">특히, 컴파일러 메서드 내의 오프셋 네이티브 코드에 MSIL Microsoft Intermediate Language 오프셋을 추적 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>