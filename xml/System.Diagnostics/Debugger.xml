<Type Name="Debugger" FullName="System.Diagnostics.Debugger">
  <TypeSignature Language="C#" Value="public sealed class Debugger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Debugger extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Debugger" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Debugger" />
  <TypeSignature Language="C++ CLI" Value="public ref class Debugger sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Debug</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="91410-101">디버거와 통신할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="91410-101">Enables communication with a debugger.</span></span> <span data-ttu-id="91410-102">이 클래스는 상속될 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="91410-102">This class cannot be inherited.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Debugger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debugger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Debugger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Call the static methods directly on this type", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91410-103"><see cref="T:System.Diagnostics.Debugger" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="91410-103">Initializes a new instance of the <see cref="T:System.Diagnostics.Debugger" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public static void Break ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Break() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debugger.Break" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Break ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Break();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91410-104">연결된 디버거에 중단점을 신호로 알립니다.</span><span class="sxs-lookup"><span data-stu-id="91410-104">Signals a breakpoint to an attached debugger.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91410-105">디버거가 연결 되 면 사용자는 디버거를 연결 하려는 경우 요청 됩니다.</span><span class="sxs-lookup"><span data-stu-id="91410-105">If no debugger is attached, users are asked if they want to attach a debugger.</span></span> <span data-ttu-id="91410-106">사용자가 예를 디버거가 시작 됩니다.</span><span class="sxs-lookup"><span data-stu-id="91410-106">If users say yes, the debugger is started.</span></span> <span data-ttu-id="91410-107">디버거가 연결 된 경우 디버거가 사용자 중단점 이벤트와 신호를 받고 디버거가 한 경우 처럼 디버거 중단점을 적중 된 프로세스의 실행을 일시 중단 합니다.</span><span class="sxs-lookup"><span data-stu-id="91410-107">If a debugger is attached, the debugger is signaled with a user breakpoint event, and the debugger suspends execution of the process just as if a debugger breakpoint had been hit.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="91410-108">부터는 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 런타임에서 더 이상에 대 한 디버거 실행에 대 한 엄격한 제어를 실행 하는 <xref:System.Diagnostics.Debugger.Break%2A> 메서드를 대신 Windows 오류 보고 (WER) 하위 시스템에는 오류를 보고 하지만 합니다.</span><span class="sxs-lookup"><span data-stu-id="91410-108">Starting with [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the runtime no longer exercises tight control of launching the debugger for the <xref:System.Diagnostics.Debugger.Break%2A> method, but instead reports an error to the Windows Error Reporting (WER) subsystem.</span></span> <span data-ttu-id="91410-109">WER는 수많은 요인 WER 오류 응답 하도록 운영 체제 버전, 프로세스, 세션, 사용자, 컴퓨터 및 도메인 같은 방식으로 영향을 미치는 하도록 보고 환경을, 문제를 사용자 지정 하는 많은 설정을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="91410-109">WER provides many settings to customize the problem reporting experience, so a lot of factors will influence  the way WER responds to an error such as operating system version, process, session, user, machine and domain.</span></span> <span data-ttu-id="91410-110">있는 경우 호출할 때 예기치 않은 결과 <xref:System.Diagnostics.Debugger.Break%2A> 메서드를 컴퓨터에 WER 설정을 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="91410-110">If you're having unexpected results when calling  the <xref:System.Diagnostics.Debugger.Break%2A> method,  check the  WER settings on your machine.</span></span> <span data-ttu-id="91410-111">WER 사용자 지정 하는 방법에 대 한 자세한 내용은 참조 하십시오. [WER 설정](https://msdn.microsoft.com/library/windows/desktop/bb513638.aspx)합니다.</span><span class="sxs-lookup"><span data-stu-id="91410-111">For more information on how to customize WER, see [WER Settings](https://msdn.microsoft.com/library/windows/desktop/bb513638.aspx).</span></span> <span data-ttu-id="91410-112">WER 설정에 관계 없이 디버거를 시작할 수 있도록 하려는 경우 호출 해야는 <xref:System.Diagnostics.Debugger.Launch%2A> 메서드 대신 합니다.</span><span class="sxs-lookup"><span data-stu-id="91410-112">If you want to ensure the debugger is launched regardless of the WER settings, be sure to call the <xref:System.Diagnostics.Debugger.Launch%2A> method instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91410-113">다음 코드 예제에 함수가 호출 될 때 디버거를 중지 하는 방법을 보여 줍니다 <xref:System.Console.WriteLine%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="91410-113">The following code example demonstrates how to stop the debugger at the call to <xref:System.Console.WriteLine%2A>.</span></span>  
  
```vb  
Debugger.Break()  
Console.WriteLine("Hello, world.")  
```  
  
```csharp  
Debugger.Break();  
Console.WriteLine("Hello, world.");  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="91410-114"><see cref="T:System.Security.Permissions.UIPermission" />이 디버거를 중단하도록 설정되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="91410-114">The <see cref="T:System.Security.Permissions.UIPermission" /> is not set to break into the debugger.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="91410-115">디버거를 시작 하는 데 필요한 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="91410-115">for permission to start a debugger.</span></span> <span data-ttu-id="91410-116">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="91410-116">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="91410-117">에 비관리 코드와 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="91410-117">for operating with unmanaged code.</span></span> <span data-ttu-id="91410-118">연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> 보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span><span class="sxs-lookup"><span data-stu-id="91410-118">Associated enumeration:  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DefaultCategory">
      <MemberSignature Language="C#" Value="public static readonly string DefaultCategory;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultCategory" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Debugger.DefaultCategory" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultCategory As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultCategory;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91410-119">상수를 포함하는 메시지의 기본 범주를 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="91410-119">Represents the default category of message with a constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91410-120">이 기본 상수의 값은 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="91410-120">The value of this default constant is `null`.</span></span> <span data-ttu-id="91410-121"><xref:System.Diagnostics.Debugger.DefaultCategory>은 <xref:System.Diagnostics.Debugger.Log%2A>에 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="91410-121"><xref:System.Diagnostics.Debugger.DefaultCategory> is used by <xref:System.Diagnostics.Debugger.Log%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAttached">
      <MemberSignature Language="C#" Value="public static bool IsAttached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsAttached" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debugger.IsAttached" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsAttached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsAttached { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="91410-122">디버거가 프로세스에 연결되어 있는지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="91410-122">Gets a value that indicates whether a debugger is attached to the process.</span></span></summary>
        <value>
          <span data-ttu-id="91410-123">디버거가 연결되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="91410-123"><see langword="true" /> if a debugger is attached; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLogging">
      <MemberSignature Language="C#" Value="public static bool IsLogging ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLogging() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debugger.IsLogging" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLogging () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLogging();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91410-124">연결된 디버거에 의해 로깅이 활성화되어 있는지 여부를 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="91410-124">Checks to see if logging is enabled by an attached debugger.</span></span></summary>
        <returns>
          <span data-ttu-id="91410-125">디버거가 연결되어 있고 로깅이 활성화되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="91410-125"><see langword="true" /> if a debugger is attached and logging is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="91410-126">연결된 디버거는 <see langword="DbgManagedDebugger" /> 레지스트리 키에 등록된 관리되는 디버거입니다.</span><span class="sxs-lookup"><span data-stu-id="91410-126">The attached debugger is the registered managed debugger in the <see langword="DbgManagedDebugger" /> registry key.</span></span> <span data-ttu-id="91410-127">이 키에 대한 자세한 내용은 [JIT 연결 디버깅 설정](~/docs/framework/debug-trace-profile/enabling-jit-attach-debugging.md)을 참조하세요.</span><span class="sxs-lookup"><span data-stu-id="91410-127">For more information on this key, see [Enabling JIT-Attach Debugging](~/docs/framework/debug-trace-profile/enabling-jit-attach-debugging.md).</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Launch">
      <MemberSignature Language="C#" Value="public static bool Launch ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Launch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debugger.Launch" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Launch () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Launch();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91410-128">디버거를 시작하고 프로세스에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="91410-128">Launches and attaches a debugger to the process.</span></span></summary>
        <returns>
          <span data-ttu-id="91410-129">디버거가 시작되었거나 이미 연결된 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="91410-129"><see langword="true" /> if the startup is successful or if the debugger is already attached; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91410-130">디버거가 이미 연결 되어 아무 일도 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="91410-130">If a debugger is already attached, nothing happens.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="91410-131"><see cref="T:System.Security.Permissions.UIPermission" />가 디버거를 시작하도록 설정되지 않은 경우</span><span class="sxs-lookup"><span data-stu-id="91410-131">The <see cref="T:System.Security.Permissions.UIPermission" /> is not set to start the debugger.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="91410-132">디버거를 시작 하는 데 필요한 권한입니다.</span><span class="sxs-lookup"><span data-stu-id="91410-132">for permission to start a debugger.</span></span> <span data-ttu-id="91410-133">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="91410-133">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="91410-134">에 비관리 코드와 작동 합니다.</span><span class="sxs-lookup"><span data-stu-id="91410-134">for operating with unmanaged code.</span></span> <span data-ttu-id="91410-135">연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> 보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></span><span class="sxs-lookup"><span data-stu-id="91410-135">Associated enumeration:  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></span></span></permission>
        <altmember cref="T:System.Security.Permissions.UIPermission" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static void Log (int level, string category, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Log(int32 level, string category, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Log (level As Integer, category As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Log(int level, System::String ^ category, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="level"><span data-ttu-id="91410-136">메시지의 중요성에 대한 설명입니다.</span><span class="sxs-lookup"><span data-stu-id="91410-136">A description of the importance of the message.</span></span></param>
        <param name="category"><span data-ttu-id="91410-137">메시지의 범주입니다.</span><span class="sxs-lookup"><span data-stu-id="91410-137">The category of the message.</span></span></param>
        <param name="message"><span data-ttu-id="91410-138">표시할 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="91410-138">The message to show.</span></span></param>
        <summary><span data-ttu-id="91410-139">연결된 디버거에 대한 메시지를 게시합니다.</span><span class="sxs-lookup"><span data-stu-id="91410-139">Posts a message for the attached debugger.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91410-140">디버거를 연결 하는 경우이 메서드는 영향을 주지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="91410-140">If there is no debugger attached, this method has no effect.</span></span> <span data-ttu-id="91410-141">디버거 필요 하거나 보고 하지 않거나 메시지를 해당 설정에 따라.</span><span class="sxs-lookup"><span data-stu-id="91410-141">The debugger might or might not report the message, depending upon its settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="91410-142">범주 매개 변수는 256 자로 제한 됩니다.</span><span class="sxs-lookup"><span data-stu-id="91410-142">The category parameter is limited to 256 characters.</span></span> <span data-ttu-id="91410-143">256 자 보다 긴 문자열은 잘립니다.</span><span class="sxs-lookup"><span data-stu-id="91410-143">Strings longer than 256 characters are truncated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOfCrossThreadDependency">
      <MemberSignature Language="C#" Value="public static void NotifyOfCrossThreadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NotifyOfCrossThreadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub NotifyOfCrossThreadDependency ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void NotifyOfCrossThreadDependency();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91410-144">실행에서 크로스 스레드 종속성과 관련된 경로를 입력한다고 디버거에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="91410-144">Notifies a debugger that execution is about to enter a path that involves a cross-thread dependency.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91410-145">디버거 콜백을 수신 하고자 하는 사용 하도록 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="91410-145">Debuggers must specifically enable callbacks that they wish to receive.</span></span> <span data-ttu-id="91410-146">크로스 스레드 종속성 콜백을 수신 하려는 디버거 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="91410-146">A debugger that wants to receive cross-thread dependency callbacks must call the  method.</span></span>  
  
 <span data-ttu-id="91410-147">선택 된 디버거 <xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A> 알림 시 적절 한 작업을 수행할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="91410-147">A debugger that has selected <xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A> can take appropriate action upon notification.</span></span> <span data-ttu-id="91410-148">예를 들어 일반적으로 함수 계산을 수행 평가 수행 하는 스레드를 제외한 모든 스레드를 중지 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="91410-148">For example, performing a function evaluation typically requires freezing all threads except for the thread that is performing the evaluation.</span></span> <span data-ttu-id="91410-149">함수 실행 원격 시나리오에서 발생할 수 있듯이 둘 이상의 스레드에서 실행이 필요한 경우 실행이 차단 됩니다.</span><span class="sxs-lookup"><span data-stu-id="91410-149">If the function evaluation requires execution on more than one thread, as might occur in remoting scenarios, the evaluation will block.</span></span> <span data-ttu-id="91410-150"><xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A> 알림 스레드를 해제 또는 함수 실행을 중단 있음을 디버거에 알립니다.</span><span class="sxs-lookup"><span data-stu-id="91410-150">The <xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A> notification informs the debugger that it has to release a thread or abort the function evaluation.</span></span> <span data-ttu-id="91410-151">이 메서드가 반환 된 후 수집의 대상이 알림이입니다.</span><span class="sxs-lookup"><span data-stu-id="91410-151">The notification is subject to collection after this method returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>