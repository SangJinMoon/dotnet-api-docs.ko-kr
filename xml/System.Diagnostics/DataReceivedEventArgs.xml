<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataReceivedEventArgs.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5205ebec39040ed058ad9ffbdc4b91602849b5386.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">205ebec39040ed058ad9ffbdc4b91602849b5386</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.DataReceivedEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.OutputDataReceived" /&gt;</ph> and <ph id="ph2">&lt;see cref="E:System.Diagnostics.Process.ErrorDataReceived" /&gt;</ph> events.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="E:System.Diagnostics.Process.OutputDataReceived" /&gt;</ph> 및 <ph id="ph2">&lt;see cref="E:System.Diagnostics.Process.ErrorDataReceived" /&gt;</ph> 이벤트에 대한 데이터를 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventArgs">
          <source>To asynchronously collect the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream output of a process, you must create a method that handles the redirected stream output events.</source>
          <target state="translated">비동기적으로 리디렉션된를 수집 하려면 <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> 스트림, 프로세스의 출력 리디렉션된 스트림 출력 이벤트를 처리 하는 메서드를 작성 해야 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventArgs">
          <source>The event-handler method is called when the process writes to the redirected stream.</source>
          <target state="translated">이벤트 처리기 메서드는 프로세스가 리디렉션된 스트림에 쓸 때 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventArgs">
          <source>The event delegate calls your event handler with an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventArgs&gt;</ph>.</source>
          <target state="translated">인스턴스와 이벤트 처리기를 호출 하는 이벤트 대리자 <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventArgs&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> property contains the text line that the process wrote to the redirected stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> 속성 프로세스 리디렉션된 스트림에 작성 하는 텍스트 줄을 포함 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventArgs">
          <source>The following code example illustrates how to perform asynchronous read operations on the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream of the <ph id="ph2">`sort`</ph> command.</source>
          <target state="translated">다음 코드 예제에서는 리디렉션된에 대해 비동기 읽기 작업을 수행 하는 방법을 보여 줍니다. <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> 스트림을 <ph id="ph2">`sort`</ph> 명령입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventArgs">
          <source>The <ph id="ph1">`sort`</ph> command is a console application that reads and sorts text input.</source>
          <target state="translated"><ph id="ph1">`sort`</ph> 명령 읽고 텍스트 입력을 정렬 하는 콘솔 응용 프로그램입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventArgs">
          <source>The example creates an event delegate for the <ph id="ph1">`SortOutputHandler`</ph> event handler and associates it with the <ph id="ph2">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> event.</source>
          <target state="translated">이 예에서는 대 한 이벤트 대리자를 만듭니다는 <ph id="ph1">`SortOutputHandler`</ph> 이벤트 처리기에 연결 된 <ph id="ph2">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DataReceivedEventArgs">
          <source>The event handler receives text lines from the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream, formats the text, and writes the text to the screen.</source>
          <target state="translated">이벤트 처리기는 리디렉션된 텍스트 줄을 받아서 <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> 스트림에 텍스트의 서식을 지정 하 고 화면에 텍스트를 씁니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.DataReceivedEventArgs.Data">
          <source>Gets the line of characters that was written to a redirected <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> output stream.</source>
          <target state="translated">리디렉션된 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> 출력 스트림에 쓰여진 문자 줄을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DataReceivedEventArgs.Data">
          <source>The line that was written by an associated <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph> to its redirected <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> or <ph id="ph3">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> stream.</source>
          <target state="translated">연결된 <ph id="ph1">&lt;see cref="T:System.Diagnostics.Process" /&gt;</ph>가 리디렉션된 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Process.StandardOutput" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="P:System.Diagnostics.Process.StandardError" /&gt;</ph> 스트림에 쓴 줄입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DataReceivedEventArgs.Data">
          <source>When you redirect the <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> stream of a <ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph> to your event handler, an event is raised each time the process writes a line to the redirected stream.</source>
          <target state="translated">리디렉션하는 경우는 <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Diagnostics.Process.StandardError%2A&gt;</ph> 스트림을 <ph id="ph3">&lt;xref:System.Diagnostics.Process&gt;</ph> 이벤트 처리기 인 이벤트가 프로세스 리디렉션된 스트림에 쓸 때마다 발생 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DataReceivedEventArgs.Data">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> property is the line that the <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> wrote to the redirected output stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> 속성은 줄 하는 <ph id="ph2">&lt;xref:System.Diagnostics.Process&gt;</ph> 리디렉션된 출력 스트림에 작성 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DataReceivedEventArgs.Data">
          <source>Your event handler can use the <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> property to filter process output or write output to an alternate location.</source>
          <target state="translated">이벤트 처리기를 사용할 수는 <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> 프로세스 출력을 필터링 하거나 다른 위치에 출력을 쓸 속성입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DataReceivedEventArgs.Data">
          <source>For example, you might create an event handler that stores all error output lines into a designated error log file.</source>
          <target state="translated">예를 들어, 모든 오류 출력 줄을 지정 된 오류 로그 파일에 저장 하는 이벤트 처리기를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DataReceivedEventArgs.Data">
          <source>A line is defined as a sequence of characters followed by a line feed ("\n") or a carriage return immediately followed by a line feed ("\r\n").</source>
          <target state="translated">줄은 캐리지 리턴 뒤에 줄 바꿈 ("\r\n") 또는 문자 시퀀스 뒤에 줄 바꿈 ("\n")으로 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DataReceivedEventArgs.Data">
          <source>The line characters are encoded using the default system ANSI code page.</source>
          <target state="translated">기본 시스템의 ANSI 코드 페이지를 사용 하 여 줄 문자가 인코딩됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DataReceivedEventArgs.Data">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> property does not include the terminating carriage return or line feed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> 속성 종결 캐리지 리턴 또는 줄 바꿈 하지 않는 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DataReceivedEventArgs.Data">
          <source>When the redirected stream is closed, a null line is sent to the event handler.</source>
          <target state="translated">리디렉션된 스트림이 닫힐 때 이벤트 처리기에 null 줄 전송 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DataReceivedEventArgs.Data">
          <source>Ensure your event handler checks the <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> property appropriately before accessing it.</source>
          <target state="translated">이벤트 처리기 검사 확인는 <ph id="ph1">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> 속성에 액세스 하기 전에 적절 하 게 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DataReceivedEventArgs.Data">
          <source>For example, you can use the static method <ph id="ph1">&lt;xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType&gt;</ph> to validate the <ph id="ph2">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> property in your event handler.</source>
          <target state="translated">예를 들어 정적 메서드를 사용할 수 있습니다 <ph id="ph1">&lt;xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType&gt;</ph> 유효성을 검사 하 여 <ph id="ph2">&lt;xref:System.Diagnostics.DataReceivedEventArgs.Data%2A&gt;</ph> 이벤트 처리기에는 속성입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DataReceivedEventArgs.Data">
          <source>The following code example illustrates a simple event handler associated with the <ph id="ph1">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> event.</source>
          <target state="translated">다음 코드 예제에서는 간단한 이벤트 처리기와 연결 된는 <ph id="ph1">&lt;xref:System.Diagnostics.Process.OutputDataReceived&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DataReceivedEventArgs.Data">
          <source>The event handler receives text lines from the redirected <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> stream, formats the text, and writes the text to the screen.</source>
          <target state="translated">이벤트 처리기는 리디렉션된 텍스트 줄을 받아서 <ph id="ph1">&lt;xref:System.Diagnostics.Process.StandardOutput%2A&gt;</ph> 스트림에 텍스트의 서식을 지정 하 고 화면에 텍스트를 씁니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>