<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventLogEntryCollection.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b825868554479cc986c422c0a1843f6688abe547.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b825868554479cc986c422c0a1843f6688abe547</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.EventLogEntryCollection">
          <source>Defines size and enumerators for a collection of <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogEntry" /&gt;</ph> instances.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogEntry" /&gt;</ph> 인스턴스 컬렉션의 크기 및 열거자를 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogEntryCollection">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> class when reading the entries associated with an <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> 에 관련 된 항목을 읽을 때 클래스는 <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> 인스턴스.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogEntryCollection">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Entries%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> class is a collection of all the entries in the event log.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Entries%2A&gt;</ph> 의 속성은 <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> 클래스는 이벤트 로그에 있는 모든 항목의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogEntryCollection">
          <source>Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph>.</source>
          <target state="translated">새 항목을 기존 목록에 추가 된, 때문에 컬렉션을 단계별로 액세스할 수 있도록 처음에 만든 후에 생성 된 항목은 <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogEntryCollection">
          <source>However, after you view the entire list, it is not updated with new entries.</source>
          <target state="translated">그러나 전체 목록을 확인 한 후 새 항목으로 되지 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventLogEntryCollection">
          <source>The following example demonstrates how to obtain event log information from an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> object.</source>
          <target state="translated">다음 예제에서 이벤트 로그 정보를 가져오는 방법을 <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)">
          <source>The zero-based index in the array at which copying begins.</source>
          <target state="translated">복사를 시작할 배열의 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogEntryCollection" /&gt;</ph> to an array of <ph id="ph2">&lt;see cref="T:System.Diagnostics.EventLogEntry" /&gt;</ph> instances, starting at a particular array index.</source>
          <target state="translated">특정 배열 인덱스부터 시작하여 <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogEntryCollection" /&gt;</ph> 요소를 <ph id="ph2">&lt;see cref="T:System.Diagnostics.EventLogEntry" /&gt;</ph> 인스턴스의 배열에 복사합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)">
          <source>Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph>.</source>
          <target state="translated">새 항목을 기존 목록에 추가 된, 때문에 컬렉션을 단계별로 액세스할 수 있도록 처음에 만든 후에 생성 된 항목은 <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)">
          <source>An array of <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntry&gt;</ph> instances is fixed at the time it is instantiated.</source>
          <target state="translated">배열 <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntry&gt;</ph> 인스턴스를 인스턴스화할 때 고정 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)">
          <source>Therefore, you cannot read new entries by using the array that is returned by the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection.CopyTo%2A&gt;</ph> method.</source>
          <target state="translated">반환 되는 배열을 사용 하 여 새 항목을 읽을 수 없습니다 따라서는 <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection.CopyTo%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntry&gt;</ph> array and uses the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntryCollection.CopyTo%2A&gt;</ph> method to copy the contents of an <ph id="ph3">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> into it.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntry&gt;</ph> 배열 및 사용 하 여는 <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntryCollection.CopyTo%2A&gt;</ph> 의 내용을 복사 하는 메서드는 <ph id="ph3">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> 넣습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventLogEntryCollection.Count">
          <source>Gets the number of entries in the event log (that is, the number of elements in the <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogEntry" /&gt;</ph> collection).</source>
          <target state="translated">이벤트 로그의 엔트리 수, 즉 <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogEntry" /&gt;</ph> 컬렉션의 요소 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogEntryCollection.Count">
          <source>The number of entries currently in the event log.</source>
          <target state="translated">현재 이벤트 로그에 있는 엔트리의 수입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogEntryCollection.Count">
          <source>An <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> represents a dynamic list of all the entries in a log.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> 로그에 있는 모든 항목의 동적 목록을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogEntryCollection.Count">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection.Count%2A&gt;</ph> property can change during the lifetime of the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> instance that you create.</source>
          <target state="translated">따라서는 <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection.Count%2A&gt;</ph> 속성의 수명 동안 변경할 수는 <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> 인스턴스를 만들면 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogEntryCollection.Count">
          <source>It is usually best to work with the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection.Count%2A&gt;</ph> property directly instead of assigning its value to a variable.</source>
          <target state="translated">일반적으로 좋습니다 작업할는 <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection.Count%2A&gt;</ph> 속성 값을 변수에 할당 하는 대신 직접 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogEntryCollection.Count">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection.Count%2A&gt;</ph> property to iterate through an <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 사용 하는 방법을 <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection.Count%2A&gt;</ph> 속성을 반복 하는 <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogEntryCollection.GetEnumerator">
          <source>Supports a simple iteration over the <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogEntryCollection" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogEntryCollection" /&gt;</ph> 개체의 단순 반복을 지원합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogEntryCollection.GetEnumerator">
          <source>An object that can be used to iterate over the collection.</source>
          <target state="translated">컬렉션에서 반복하는 데 사용할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogEntryCollection.GetEnumerator">
          <source>The object that is returned by the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection.GetEnumerator%2A&gt;</ph> method is a wrapper for the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> class that implements the <ph id="ph3">&lt;xref:System.Collections.IEnumerator&gt;</ph> enumerator.</source>
          <target state="translated">반환 되는 개체는 <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection.GetEnumerator%2A&gt;</ph> 메서드는에 대 한 래퍼는 <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> 구현 하는 클래스는 <ph id="ph3">&lt;xref:System.Collections.IEnumerator&gt;</ph> 열거자입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogEntryCollection.GetEnumerator">
          <source>If the collection is changed during the iteration, the iteration is terminated.</source>
          <target state="translated">컬렉션에서 반복 하는 동안 변경 되 면 반복이 종료 됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogEntryCollection.GetEnumerator">
          <source>To avoid this possibility, see the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection.Item%2A&gt;</ph> property for an alternative technique for iterating through a collection.</source>
          <target state="translated">이 문제를 방지 하려면 참조는 <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection.Item%2A&gt;</ph> 컬렉션을 반복 하기 위한 다른 방법에 대 한 속성입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)">
          <source>The zero-based index that is associated with the event log entry.</source>
          <target state="translated">이벤트 로그 엔트리와 연결된 인덱스(0부터 시작)입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)">
          <source>Gets an entry in the event log, based on an index that starts at 0 (zero).</source>
          <target state="translated">0부터 시작하는 인덱스를 기준으로 이벤트 로그에 있는 엔트리를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)">
          <source>The event log entry at the location that is specified by the <ph id="ph1">&lt;paramref name="index" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 매개 변수로 지정한 위치에 있는 이벤트 로그 엔트리입니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntry&gt;</ph> objects are indexed by the event log system according to the chronological order in which they arrived in the event log.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntry&gt;</ph> 개체는 이벤트 로그 시스템 이벤트 로그에 도착 시간 순서에 의해 인덱싱됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection.Item%2A&gt;</ph> property to select a specific event log entry whose index in the collection is known.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection.Item%2A&gt;</ph> 속성을 컬렉션에서 해당 인덱스가 알려져 특정 이벤트 로그 항목을 선택 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)">
          <source>Iterating through the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> instance steps through each <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntry&gt;</ph> object sequentially.</source>
          <target state="translated">반복 하는 <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> 하면서 각 인스턴스 <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntry&gt;</ph> 순차적 개체입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)">
          <source>The collection is dynamic and the number of entries may not be immutable when you enter the loop.</source>
          <target state="translated">컬렉션은 동적 하 고 루프를 입력 하면 항목 수가 변경할 수 없는 되지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)">
          <source>Therefore, you should use a <ph id="ph1">`for each...next`</ph> loop instead of a <ph id="ph2">`for(int i=0; i&lt;count, i++)`</ph> loop to step through entries that are associated with the <ph id="ph3">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> instance to examine the entire set of entries.</source>
          <target state="translated">따라서 사용 해야는 <ph id="ph1">`for each...next`</ph> 루프 대신는 <ph id="ph2">`for(int i=0; i&lt;count, i++)`</ph> 연관 된 항목을 단계별로 실행 되도록 루프는 <ph id="ph3">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> 전체 항목 집합을 검사 하는 인스턴스.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)">
          <source>Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph>.</source>
          <target state="translated">새 항목을 기존 목록에 추가 된, 때문에 컬렉션을 단계별로 액세스할 수 있도록 처음에 만든 후에 생성 된 항목은 <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)">
          <source>The following example demonstrates how to display information for the items in an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> object.</source>
          <target state="translated">다음 예제에서는 항목에 대 한 정보를 표시 하는 <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements that are copied from the collection.</source>
          <target state="translated">컬렉션에서 복사한 요소의 대상인 1차원 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>에는 0부터 시작하는 인덱스가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>배열<ept id="p1">&lt;/c&gt;</ept>에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the collection to an <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>, starting at a particular <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> index.</source>
          <target state="translated">특정 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 인덱스부터 시작하여 컬렉션의 요소를 <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>에 복사합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection.CopyTo%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> class to copy all or part of the collection to an <ph id="ph3">&lt;xref:System.Diagnostics.EventLogEntry&gt;</ph> array.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection.CopyTo%2A&gt;</ph> 의 메서드는 <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> 을 컬렉션의 전체 또는 일부를 복사 하는 클래스는 <ph id="ph3">&lt;xref:System.Diagnostics.EventLogEntry&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value that indicates whether access to the <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogEntryCollection" /&gt;</ph> is synchronized (thread-safe).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogEntryCollection" /&gt;</ph>에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if access to the collection is not synchronized (thread-safe).</source>
          <target state="translated">컬렉션에 대한 액세스가 동기화되지 않아서 스레드로부터 안전하게 보호되지 않으면 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized">
          <source>For the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntryCollection.System%23Collections%23ICollection%23IsSynchronized%2A&gt;</ph> method always returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">에 대 한는 <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> 클래스는 <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntryCollection.System%23Collections%23ICollection%23IsSynchronized%2A&gt;</ph> 메서드는 항상 반환 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogEntryCollection" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLogEntryCollection" /&gt;</ph> 개체에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the collection.</source>
          <target state="translated">컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot">
          <source>For the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntryCollection.System%23Collections%23ICollection%23SyncRoot%2A&gt;</ph> property always returns the current <ph id="ph3">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph>.</source>
          <target state="translated">에 대 한는 <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> 클래스는 <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntryCollection.System%23Collections%23ICollection%23SyncRoot%2A&gt;</ph> 속성은 항상 현재 반환 <ph id="ph3">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>