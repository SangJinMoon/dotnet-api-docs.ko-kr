<Type Name="EventLogEntryCollection" FullName="System.Diagnostics.EventLogEntryCollection">
  <TypeSignature Language="C#" Value="public class EventLogEntryCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogEntryCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLogEntryCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogEntryCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogEntryCollection : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="911bd-101"><see cref="T:System.Diagnostics.EventLogEntry" /> 인스턴스 컬렉션의 크기 및 열거자를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-101">Defines size and enumerators for a collection of <see cref="T:System.Diagnostics.EventLogEntry" /> instances.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911bd-102">사용 하 여는 <xref:System.Diagnostics.EventLogEntryCollection> 에 관련 된 항목을 읽을 때 클래스는 <xref:System.Diagnostics.EventLog> 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="911bd-102">Use the <xref:System.Diagnostics.EventLogEntryCollection> class when reading the entries associated with an <xref:System.Diagnostics.EventLog> instance.</span></span> <span data-ttu-id="911bd-103"><xref:System.Diagnostics.EventLog.Entries%2A> 의 속성은 <xref:System.Diagnostics.EventLog> 클래스는 이벤트 로그에 있는 모든 항목의 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-103">The <xref:System.Diagnostics.EventLog.Entries%2A> property of the <xref:System.Diagnostics.EventLog> class is a collection of all the entries in the event log.</span></span>  
  
 <span data-ttu-id="911bd-104">새 항목을 기존 목록에 추가 된, 때문에 컬렉션을 단계별로 액세스할 수 있도록 처음에 만든 후에 생성 된 항목은 <xref:System.Diagnostics.EventLogEntryCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-104">Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the <xref:System.Diagnostics.EventLogEntryCollection>.</span></span> <span data-ttu-id="911bd-105">그러나 전체 목록을 확인 한 후 새 항목으로 되지 업데이트 됩니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-105">However, after you view the entire list, it is not updated with new entries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="911bd-106">다음 예제에서 이벤트 로그 정보를 가져오는 방법을 <xref:System.Diagnostics.EventLogEntryCollection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-106">The following example demonstrates how to obtain event log information from an <xref:System.Diagnostics.EventLogEntryCollection> object.</span></span>  
  
 [!code-cpp[EventLogEntry_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogEntry_CopyTo/CPP/eventlogentry_copyto.cpp#1)]
 [!code-csharp[EventLogEntry_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogEntry_CopyTo/CS/eventlogentry_copyto.cs#1)]
 [!code-vb[EventLogEntry_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogEntry_CopyTo/VB/eventlogentry_copyto.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="P:System.Diagnostics.EventLog.Entries" />
  </Docs>
  <Members>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Diagnostics.EventLogEntry[] entries, int index);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Diagnostics.EventLogEntry[] entries, int32 index) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (entries As EventLogEntry(), index As Integer)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Diagnostics::EventLogEntry ^&gt; ^ entries, int index);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void CopyTo (System.Diagnostics.EventLogEntry[] eventLogEntries, int index);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Diagnostics.EventLogEntry[] eventLogEntries, int32 index) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (eventLogEntries As EventLogEntry(), index As Integer)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Diagnostics::EventLogEntry ^&gt; ^ eventLogEntries, int index);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entries" Type="System.Diagnostics.EventLogEntry[]" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="eventLogEntries" Type="System.Diagnostics.EventLogEntry[]" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" />
      </Parameters>
      <Docs>
        <param name="entries">To be added.</param>
        <param name="eventLogEntries">To be added.</param>
        <param name="index"><span data-ttu-id="911bd-107">복사를 시작할 배열의 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-107">The zero-based index in the array at which copying begins.</span></span></param>
        <summary><span data-ttu-id="911bd-108">특정 배열 인덱스부터 시작하여 <see cref="T:System.Diagnostics.EventLogEntryCollection" /> 요소를 <see cref="T:System.Diagnostics.EventLogEntry" /> 인스턴스의 배열에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-108">Copies the elements of the <see cref="T:System.Diagnostics.EventLogEntryCollection" /> to an array of <see cref="T:System.Diagnostics.EventLogEntry" /> instances, starting at a particular array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911bd-109">새 항목을 기존 목록에 추가 된, 때문에 컬렉션을 단계별로 액세스할 수 있도록 처음에 만든 후에 생성 된 항목은 <xref:System.Diagnostics.EventLogEntryCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-109">Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the <xref:System.Diagnostics.EventLogEntryCollection>.</span></span> <span data-ttu-id="911bd-110">배열 <xref:System.Diagnostics.EventLogEntry> 인스턴스를 인스턴스화할 때 고정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-110">An array of <xref:System.Diagnostics.EventLogEntry> instances is fixed at the time it is instantiated.</span></span> <span data-ttu-id="911bd-111">반환 되는 배열을 사용 하 여 새 항목을 읽을 수 없습니다 따라서는 <xref:System.Diagnostics.EventLogEntryCollection.CopyTo%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="911bd-111">Therefore, you cannot read new entries by using the array that is returned by the <xref:System.Diagnostics.EventLogEntryCollection.CopyTo%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="911bd-112">다음 예제에서는 <xref:System.Diagnostics.EventLogEntry> 배열 및 사용 하 여는 <xref:System.Diagnostics.EventLogEntryCollection.CopyTo%2A> 의 내용을 복사 하는 메서드는 <xref:System.Diagnostics.EventLogEntryCollection> 넣습니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-112">The following example creates an <xref:System.Diagnostics.EventLogEntry> array and uses the <xref:System.Diagnostics.EventLogEntryCollection.CopyTo%2A> method to copy the contents of an <xref:System.Diagnostics.EventLogEntryCollection> into it.</span></span>  
  
 [!code-csharp[EventLogEntry_CopyTo#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogEntry_CopyTo/CS/eventlogentry_copyto.cs#2)]
 [!code-vb[EventLogEntry_CopyTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogEntry_CopyTo/VB/eventlogentry_copyto.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntryCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911bd-113">이벤트 로그의 엔트리 수, 즉 <see cref="T:System.Diagnostics.EventLogEntry" /> 컬렉션의 요소 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-113">Gets the number of entries in the event log (that is, the number of elements in the <see cref="T:System.Diagnostics.EventLogEntry" /> collection).</span></span></summary>
        <value><span data-ttu-id="911bd-114">현재 이벤트 로그에 있는 엔트리의 수입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-114">The number of entries currently in the event log.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911bd-115"><xref:System.Diagnostics.EventLogEntryCollection> 로그에 있는 모든 항목의 동적 목록을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-115">An <xref:System.Diagnostics.EventLogEntryCollection> represents a dynamic list of all the entries in a log.</span></span> <span data-ttu-id="911bd-116">따라서는 <xref:System.Diagnostics.EventLogEntryCollection.Count%2A> 속성의 수명 동안 변경할 수는 <xref:System.Diagnostics.EventLogEntryCollection> 인스턴스를 만들면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-116">Therefore, the <xref:System.Diagnostics.EventLogEntryCollection.Count%2A> property can change during the lifetime of the <xref:System.Diagnostics.EventLogEntryCollection> instance that you create.</span></span> <span data-ttu-id="911bd-117">일반적으로 좋습니다 작업할는 <xref:System.Diagnostics.EventLogEntryCollection.Count%2A> 속성 값을 변수에 할당 하는 대신 직접 합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-117">It is usually best to work with the <xref:System.Diagnostics.EventLogEntryCollection.Count%2A> property directly instead of assigning its value to a variable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="911bd-118">다음 예제에서는 사용 하는 방법을 <xref:System.Diagnostics.EventLogEntryCollection.Count%2A> 속성을 반복 하는 <xref:System.Diagnostics.EventLogEntryCollection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-118">The following example demonstrates how to use the <xref:System.Diagnostics.EventLogEntryCollection.Count%2A> property to iterate through an <xref:System.Diagnostics.EventLogEntryCollection> object.</span></span>  
  
 [!code-cpp[EventLogEntry_Item#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogEntry_Item/CPP/eventlogentry_item.cpp#1)]
 [!code-csharp[EventLogEntry_Item#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogEntry_Item/CS/eventlogentry_item.cs#1)]
 [!code-vb[EventLogEntry_Item#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogEntry_Item/VB/eventlogentry_item.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Entries" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogEntryCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="911bd-119"><see cref="T:System.Diagnostics.EventLogEntryCollection" /> 개체의 단순 반복을 지원합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-119">Supports a simple iteration over the <see cref="T:System.Diagnostics.EventLogEntryCollection" /> object.</span></span></summary>
        <returns><span data-ttu-id="911bd-120">컬렉션에서 반복하는 데 사용할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-120">An object that can be used to iterate over the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911bd-121">반환 되는 개체는 <xref:System.Diagnostics.EventLogEntryCollection.GetEnumerator%2A> 메서드는에 대 한 래퍼는 <xref:System.Diagnostics.EventLogEntryCollection> 구현 하는 클래스는 <xref:System.Collections.IEnumerator> 열거자입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-121">The object that is returned by the <xref:System.Diagnostics.EventLogEntryCollection.GetEnumerator%2A> method is a wrapper for the <xref:System.Diagnostics.EventLogEntryCollection> class that implements the <xref:System.Collections.IEnumerator> enumerator.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="911bd-122">컬렉션에서 반복 하는 동안 변경 되 면 반복이 종료 됩니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-122">If the collection is changed during the iteration, the iteration is terminated.</span></span> <span data-ttu-id="911bd-123">이 문제를 방지 하려면 참조는 <xref:System.Diagnostics.EventLogEntryCollection.Item%2A> 컬렉션을 반복 하기 위한 다른 방법에 대 한 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-123">To avoid this possibility, see the <xref:System.Diagnostics.EventLogEntryCollection.Item%2A> property for an alternative technique for iterating through a collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.EventLogEntry this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.EventLogEntry Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As EventLogEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::EventLogEntry ^ default[int] { System::Diagnostics::EventLogEntry ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLogEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="911bd-124">이벤트 로그 엔트리와 연결된 인덱스(0부터 시작)입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-124">The zero-based index that is associated with the event log entry.</span></span></param>
        <summary><span data-ttu-id="911bd-125">0부터 시작하는 인덱스를 기준으로 이벤트 로그에 있는 엔트리를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-125">Gets an entry in the event log, based on an index that starts at 0 (zero).</span></span></summary>
        <value><span data-ttu-id="911bd-126"><paramref name="index" /> 매개 변수로 지정한 위치에 있는 이벤트 로그 엔트리입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-126">The event log entry at the location that is specified by the <paramref name="index" /> parameter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911bd-127"><xref:System.Diagnostics.EventLogEntry> 개체는 이벤트 로그 시스템 이벤트 로그에 도착 시간 순서에 의해 인덱싱됩니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-127"><xref:System.Diagnostics.EventLogEntry> objects are indexed by the event log system according to the chronological order in which they arrived in the event log.</span></span> <span data-ttu-id="911bd-128">사용 하 여는 <xref:System.Diagnostics.EventLogEntryCollection.Item%2A> 속성을 컬렉션에서 해당 인덱스가 알려져 특정 이벤트 로그 항목을 선택 합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-128">Use the <xref:System.Diagnostics.EventLogEntryCollection.Item%2A> property to select a specific event log entry whose index in the collection is known.</span></span>  
  
 <span data-ttu-id="911bd-129">반복 하는 <xref:System.Diagnostics.EventLogEntryCollection> 하면서 각 인스턴스 <xref:System.Diagnostics.EventLogEntry> 순차적 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-129">Iterating through the <xref:System.Diagnostics.EventLogEntryCollection> instance steps through each <xref:System.Diagnostics.EventLogEntry> object sequentially.</span></span> <span data-ttu-id="911bd-130">컬렉션은 동적 하 고 루프를 입력 하면 항목 수가 변경할 수 없는 되지 않을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-130">The collection is dynamic and the number of entries may not be immutable when you enter the loop.</span></span> <span data-ttu-id="911bd-131">따라서 사용 해야는 `for each...next` 루프 대신는 `for(int i=0; i<count, i++)` 연관 된 항목을 단계별로 실행 되도록 루프는 <xref:System.Diagnostics.EventLogEntryCollection> 전체 항목 집합을 검사 하는 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="911bd-131">Therefore, you should use a `for each...next` loop instead of a `for(int i=0; i<count, i++)` loop to step through entries that are associated with the <xref:System.Diagnostics.EventLogEntryCollection> instance to examine the entire set of entries.</span></span>  
  
 <span data-ttu-id="911bd-132">새 항목을 기존 목록에 추가 된, 때문에 컬렉션을 단계별로 액세스할 수 있도록 처음에 만든 후에 생성 된 항목은 <xref:System.Diagnostics.EventLogEntryCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-132">Because new entries are appended to the existing list, stepping through the collection enables you to access the entries that were created after you originally created the <xref:System.Diagnostics.EventLogEntryCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="911bd-133">다음 예제에서는 항목에 대 한 정보를 표시 하는 <xref:System.Diagnostics.EventLogEntryCollection> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-133">The following example demonstrates how to display information for the items in an <xref:System.Diagnostics.EventLogEntryCollection> object.</span></span>  
  
 [!code-cpp[EventLogEntry_Item#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogEntry_Item/CPP/eventlogentry_item.cpp#2)]
 [!code-csharp[EventLogEntry_Item#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogEntry_Item/CS/eventlogentry_item.cs#2)]
 [!code-vb[EventLogEntry_Item#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogEntry_Item/VB/eventlogentry_item.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogEntryCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="911bd-134">컬렉션에서 복사한 요소의 대상인 1차원 <see cref="T:System.Array" />입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-134">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements that are copied from the collection.</span></span> <span data-ttu-id="911bd-135"><see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-135">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="911bd-136"><c>배열</c>에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-136">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="911bd-137">특정 <see cref="T:System.Array" /> 인덱스부터 시작하여 컬렉션의 요소를 <see cref="T:System.Array" />에 복사합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-137">Copies the elements of the collection to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911bd-138">사용 하 여는 <xref:System.Diagnostics.EventLogEntryCollection.CopyTo%2A> 의 메서드는 <xref:System.Diagnostics.EventLogEntryCollection> 을 컬렉션의 전체 또는 일부를 복사 하는 클래스는 <xref:System.Diagnostics.EventLogEntry> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-138">Use the <xref:System.Diagnostics.EventLogEntryCollection.CopyTo%2A> method of the <xref:System.Diagnostics.EventLogEntryCollection> class to copy all or part of the collection to an <xref:System.Diagnostics.EventLogEntry> array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911bd-139"><see cref="T:System.Diagnostics.EventLogEntryCollection" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-139">Gets a value that indicates whether access to the <see cref="T:System.Diagnostics.EventLogEntryCollection" /> is synchronized (thread-safe).</span></span></summary>
        <value>
          <span data-ttu-id="911bd-140">컬렉션에 대한 액세스가 동기화되지 않아서 스레드로부터 안전하게 보호되지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-140"><see langword="false" /> if access to the collection is not synchronized (thread-safe).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911bd-141">에 대 한는 <xref:System.Diagnostics.EventLogEntryCollection> 클래스는 <xref:System.Diagnostics.EventLogEntryCollection.System%23Collections%23ICollection%23IsSynchronized%2A> 메서드는 항상 반환 `false`합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-141">For the <xref:System.Diagnostics.EventLogEntryCollection> class, the <xref:System.Diagnostics.EventLogEntryCollection.System%23Collections%23ICollection%23IsSynchronized%2A> method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="911bd-142"><see cref="T:System.Diagnostics.EventLogEntryCollection" /> 개체에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-142">Gets an object that can be used to synchronize access to the <see cref="T:System.Diagnostics.EventLogEntryCollection" /> object.</span></span></summary>
        <value><span data-ttu-id="911bd-143">컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-143">An object that can be used to synchronize access to the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="911bd-144">에 대 한는 <xref:System.Diagnostics.EventLogEntryCollection> 클래스는 <xref:System.Diagnostics.EventLogEntryCollection.System%23Collections%23ICollection%23SyncRoot%2A> 속성은 항상 현재 반환 <xref:System.Diagnostics.EventLogEntryCollection>합니다.</span><span class="sxs-lookup"><span data-stu-id="911bd-144">For the <xref:System.Diagnostics.EventLogEntryCollection> class, the <xref:System.Diagnostics.EventLogEntryCollection.System%23Collections%23ICollection%23SyncRoot%2A> property always returns the current <xref:System.Diagnostics.EventLogEntryCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>