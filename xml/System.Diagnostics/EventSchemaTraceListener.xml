<Type Name="EventSchemaTraceListener" FullName="System.Diagnostics.EventSchemaTraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="abdcf6aaf89cf211719c282b059b7c15b4d68ff5" />
    <Meta Name="ms.sourcegitcommit" Value="b15b8cf0f6dbc1504057c88969d9ef4b790891fe" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="05/11/2018" />
    <Meta Name="ms.locfileid" Value="34061175" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventSchemaTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSchemaTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventSchemaTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSchemaTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSchemaTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>종단 간 이벤트의 추적 또는 디버깅 출력을 XML로 인코딩된 스키마 규격 로그 파일에 연결합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventSchemaTraceListener> 클래스는 종단 간 스키마를 준수 하는 이벤트의 추적을 제공 합니다. 스레드 간 있는 시스템에 대 한 종단 간 추적을 사용할 수 있습니다 <xref:System.AppDomain>, 프로세스 및 컴퓨터 경계입니다. 표준화 된 이벤트 스키마 (참조 [이벤트 소비자에 대 한 이벤트 표현](http://go.microsoft.com/fwlink/?LinkId=78955))에서 이러한 경계를 넘어 추적을 사용 하도록 정의 되어 있는 합니다. 스키마에 사용자 지정, 스키마를 준수 하는 요소를 추가할 수 있습니다. 사용할 수는 [Service Trace Viewer 도구 (SvcTraceViewer.exe)](http://go.microsoft.com/fwlink/p/?LinkId=240129) 이벤트 데이터를 표시 합니다.  
  
 <xref:System.Diagnostics.EventSchemaTraceListener> 암시적으로 지원 하며 추적 잠금 해제에 대 한 로깅 성능에 대 한 조정 되어 있습니다.  
  
 <xref:System.Diagnostics.EventSchemaTraceListener> 클래스는 추적 및 디버깅 정보를 XML로 인코딩된 텍스트 스트림으로 변환 합니다. XML 출력의 설명이이 섹션의 뒷부분에 나오는 표에 표시 됩니다.  
  
 활성화 하거나 비활성화할 수는 <xref:System.Diagnostics.EventSchemaTraceListener> 응용 프로그램 구성 파일을 통해 개체를 사용 하 여 구성 된 <xref:System.Diagnostics.EventSchemaTraceListener> 응용 프로그램의 개체입니다. 또한 만들 수는 <xref:System.Diagnostics.EventSchemaTraceListener> 코드에서이 개체입니다. 응용 프로그램 구성 파일을 통해 추적 수신기를 사용 하는 것이 좋습니다. 추적 및 디버깅에 대 한 구성 파일의 사용에 대 한 정보를 참조 하십시오. [추적 및 디버그 설정 스키마](http://msdn.microsoft.com/library/277ca5f6-e1c4-41b6-a47f-3a67ce5b94ac)합니다.  
  
 구성 하는 <xref:System.Diagnostics.EventSchemaTraceListener> 개체, 응용 프로그램의 이름에 해당 하는 구성 파일을 수정 합니다. 이 파일에 추가, 제거 또는 수신기의 속성을 설정 수 있습니다. 구성 파일 형식은 다음과 같습니다.  
  
```xml  
<configuration>  
    <system.diagnostics>  
        <sources>  
            <source name="TestSource" >  
                <listeners>  
                    <!--Remove the default trace listener for better performance.-->  
                    <remove name="Default"/>  
                    <!--Note: Removing the default trace listener prevents the dialog box   
                    from being displayed for Debug.Fail or Debug.Assert commands that are   
                    executed in user mode.-->  
                    <add name="eventListener"   
                      type="System.Diagnostics.EventSchemaTraceListener,  system.core"  
                      initializeData="TraceOutput.xml"   
                      traceOutputOptions="ProcessId, DateTime, Timestamp"   
                      bufferSize="65536"  
                      maximumFileSize="20480000"  
                      logRetentionOption="LimitedCircularFiles"  
                      maximumNumberOfFiles="2"/>  
                </listeners>  
            </source>  
        </sources>  
    </system.diagnostics>  
```  
  
 <xref:System.Diagnostics.EventSchemaTraceListener> 클래스 상속의 <xref:System.Diagnostics.TraceListener.Filter%2A> 기본 클래스에서 속성 <xref:System.Diagnostics.TraceListener>합니다. <xref:System.Diagnostics.TraceListener.Filter%2A> 수신기에서 필터링 하는 추적 출력의 추가 수준을 대 한 속성을 사용 하면 됩니다. 필터는 사용할 수 있는 경우는 `Trace` 추적 수신기 호출의 메서드는 <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> 메서드는 필터는 추적을 내보낼지 여부를 결정 합니다.  
  
 사용 되 고 있거나 사용할 수 없는 파일에 기록 하려고 하는 경우 GUID 접미사가 파일 이름에 자동으로 추가 됩니다.  
  
> [!NOTE]
>  수신기 방법은 대상의 메서드에 의해 호출 되는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 클래스입니다. 응용 프로그램 코드에서 직접 수신기 메서드를 호출 하지 마십시오. <xref:System.Diagnostics.EventSchemaTraceListener> 수신기는에서 사용 하기 위해 주로 <xref:System.Diagnostics.TraceSource> 클래스입니다.  
  
 다음 표에서 XML 출력의 특성과 해당 요소를 설명합니다.  
  
|요소|특성|출력|노트|  
|-------------|----------------|------------|-----------|  
|`CallStack`|없음|존재 여부에 따라 달라 집니다는 <xref:System.Diagnostics.TraceOptions.Callstack> 플래그는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.|와 같은 특수 문자 > 또는 <를 이스케이프 시퀀스로 대체 됩니다. 다음 테이블에 이스케이프 된 문자 변환 표를 참조 하십시오.|  
|`Computer`|없음|항상 존재 합니다.|이 요소 값을 나타내는 <xref:System.Environment.MachineName%2A> 속성입니다.|  
|`Correlation`|`ActivityID`|항상 존재 합니다.|경우 `ActivityID` 을 지정 하지 않으면 기본값은 빈 GUID입니다.|  
||`RelatedActivityID`|존재 여부에 따라 달라 집니다는 `relatedActivityId` 에서 매개 변수는 `Trace` 메서드를 호출 합니다.|`RelatedActivityID` 특성에 해당 하는 `relatedActivityId` 의 매개 변수는 <xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A> 메서드.|  
|`Data`|없음|항상 존재 합니다.|이 요소는 매개 변수 입력을 나타냅니다 (`data`). 각 데이터 개체에 대해 하나의 요소가 제공 됩니다. 이벤트 로그의 경우는 `Data` 요소 이스케이프 된 XML 데이터를 포함 합니다. 로그 데이터의 경우는 `Data` 요소 이스케이프 되지 않은 데이터를 포함 합니다. 데이터에 사용 하 여 출력 로그는 `ToString` 전달 된 데이터 개체의 메서드.|  
|`Event`|없음|항상 존재 합니다.|이 요소는 추적 이벤트를 포함합니다.|  
|`EventData`|없음|이벤트 로그의 경우입니다.|이 요소는 매개 변수 입력을 나타냅니다 (`message`, `args`). 포함 된 `Data` 요소를 호출 하 여 만든 이스케이프 된 XML 데이터는 <xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A> 메서드.|  
|`EventID`|없음|항상 존재 합니다.|이 요소는 매개 변수 입력을 나타냅니다 (`id`).|  
|`Execution`|`ProcessID`|존재 여부에 따라 달라 집니다는 <xref:System.Diagnostics.TraceOptions.ProcessId> 플래그는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.|`ProcessID` 특성에 지정 된는 <xref:System.Diagnostics.TraceEventCache>합니다. Microsoft Windows 98 및 Windows 밀레니엄 Edition 운영 체제의 경우 `ProcessID` , 2147483647 보다 큰 음수를 양의 표현인 하 고 올바른 프로세스 식별자를 가져오려면 변환 되어야 합니다.|  
||`ThreadID`|있는 경우 `ProcessID` 있는 합니다.|`ThreadID` 특성에 지정 된는 <xref:System.Diagnostics.TraceEventCache>합니다.|  
|`Level`|없음|항상 존재 합니다.|이 요소는 매개 변수 입력을 나타냅니다 (의 숫자 값 `eventType`). 255 보다 큰 경우에 매개 변수 값은 8, 수준으로 나타내는 출력 <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType>합니다. 추적 이벤트 형식 <xref:System.Diagnostics.TraceEventType.Critical>, <xref:System.Diagnostics.TraceEventType.Error>, <xref:System.Diagnostics.TraceEventType.Warning>, <xref:System.Diagnostics.TraceEventType.Information>, 및 <xref:System.Diagnostics.TraceEventType.Verbose> 는 각각 1, 2, 4, 8 및 10, 수준으로 출력 됩니다.|  
|`LogicalOperationStack`|없음|존재 여부에 따라 달라 집니다는 <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> 플래그는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.|논리 작업을 하나만 존재할 수 있습니다. 따라서 이러한 값을 기록으로 `LogicalOperation` 아래의 노드는 `LogicalOperationStack` 요소입니다.|  
|`OpCode`|없음|있는 경우 `Level` 가 255 자를 초과 합니다.|이 요소는 추적 이벤트 유형의 255 보다 큰 숫자 값을 나타냅니다. <xref:System.Diagnostics.TraceEventType.Start><xref:System.Diagnostics.TraceEventType.Stop>, <xref:System.Diagnostics.TraceEventType.Suspend>, <xref:System.Diagnostics.TraceEventType.Resume>, 또는 <xref:System.Diagnostics.TraceEventType.Transfer> 는 각각 1, 2, 4, 8 및 10, 수준으로 출력 됩니다.|  
|`Provider`|`GUID`|항상 존재 합니다.|항상 비어 있습니다.|  
|`RenderingInfo`|`Culture`|항상 존재 합니다.|이 특성에는 이벤트 유형에 대 한 리소스 문자열을 나타냅니다. 이 패턴은 항상 "en EN\\"입니다.|  
|`System`|`Name`|항상 존재 합니다.||  
|`TimeCreated`|`SystemTime`|존재 여부에 따라 달라 집니다는 <xref:System.Diagnostics.TraceOptions.DateTime> 플래그는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.|값에 <xref:System.Diagnostics.TraceEventCache.DateTime%2A?displayProperty=nameWithType> 속성입니다. 이 속성은 협정 세계시로 표현 됩니다.|  
|`TimeStamp`|없음|존재 여부에 따라 달라 집니다는 <xref:System.Diagnostics.TraceOptions.Timestamp> 플래그는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.|이 요소에 지정 된는 <xref:System.Diagnostics.TraceEventCache>합니다.|  
|`UserData`|없음|데이터 로그를 표시 합니다.|이 요소는 포함 `Data` 에서 이스케이프 되지 않은, 사용자가 제공한 데이터를 사용 하 여 요소는 <xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A> 메서드.|  
  
 다음 표에서 XML 출력에는 이스케이프 된 문자를 보여 줍니다. 모든 요소에 나타나고 특성을 제외 하 고 이스케이프는 `UserData` 사용자가 제공한, 포함 하는 요소 데이터 이스케이프 해제 합니다. `UserData` 요소에 대 한 호출의 결과는 <xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A> 메서드.  
  
|이스케이프된 문자|값|  
|-----------------------|-----------|  
|&|&amp;|  
|\<|&lt;|  
|>|&gt;|  
|"|&quot;|  
|\|&apos;|  
|0xD|&\#xD;|  
|0xA|&\#xA;|  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Diagnostics.EventSchemaTraceListener> 클래스입니다.  
  
 [!code-cpp[System.Diagnostics.EventSchemaTraceListener#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/CPP/eventschematracelistener.cpp#1)]
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#1)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">로그 파일의 경로입니다.</param>
        <summary>지정된 파일을 디버깅 및 추적 출력의 수신자로 사용하여 <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 기본적으로 한 파일 크기 제한이 없는 기록 됩니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%29?displayProperty=nameWithType> 생성자입니다.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener.Ctors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/VB/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">로그 파일의 경로입니다.</param>
        <param name="name">수신기의 이름입니다.</param>
        <summary>지정된 파일을 디버깅 및 추적 출력의 수신자로 사용하여, 지정된 이름으로 <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType> 생성자입니다.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener.Ctors#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/CS/program.cs#2)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName, string name, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName, System::String ^ name, int bufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fileName">로그 파일의 경로입니다.</param>
        <param name="name">수신기의 이름입니다.</param>
        <param name="bufferSize">출력 버퍼의 크기(바이트)입니다.</param>
        <summary>지정된 파일을 디버깅 및 추적 출력의 수신자로 사용하여, 지정된 이름 및 지정된 버퍼 크기로 <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 성능 고려 사항에 대 한 `bufferSize` 1024 바이트의 배수 여야 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType> 생성자입니다.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener.Ctors#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/CS/program.cs#3)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/VB/program.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName, string name, int bufferSize, System.Diagnostics.TraceLogRetentionOption logRetentionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name, int32 bufferSize, valuetype System.Diagnostics.TraceLogRetentionOption logRetentionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String, bufferSize As Integer, logRetentionOption As TraceLogRetentionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName, System::String ^ name, int bufferSize, System::Diagnostics::TraceLogRetentionOption logRetentionOption);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="logRetentionOption" Type="System.Diagnostics.TraceLogRetentionOption" />
      </Parameters>
      <Docs>
        <param name="fileName">로그 파일의 경로입니다.</param>
        <param name="name">수신기의 이름입니다.</param>
        <param name="bufferSize">출력 버퍼의 크기(바이트)입니다.</param>
        <param name="logRetentionOption">
          <see cref="T:System.Diagnostics.TraceLogRetentionOption" /> 값 중 하나입니다.</param>
        <summary>지정된 로그 보존 정책이 있는 지정된 파일을 디버깅 및 추적 출력의 수신자로 사용하여, 지정된 이름 및 지정된 버퍼 크기로 <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 성능 고려 사항에 대 한 `bufferSize` 1024 바이트의 배수 여야 합니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%2CSystem.Diagnostics.TraceLogRetentionOption%29?displayProperty=nameWithType> 생성자입니다.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener.Ctors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/CS/program.cs#4)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/VB/program.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName, string name, int bufferSize, System.Diagnostics.TraceLogRetentionOption logRetentionOption, long maximumFileSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name, int32 bufferSize, valuetype System.Diagnostics.TraceLogRetentionOption logRetentionOption, int64 maximumFileSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String, bufferSize As Integer, logRetentionOption As TraceLogRetentionOption, maximumFileSize As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName, System::String ^ name, int bufferSize, System::Diagnostics::TraceLogRetentionOption logRetentionOption, long maximumFileSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="logRetentionOption" Type="System.Diagnostics.TraceLogRetentionOption" />
        <Parameter Name="maximumFileSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileName">로그 파일의 경로입니다.</param>
        <param name="name">수신기의 이름입니다.</param>
        <param name="bufferSize">출력 버퍼의 크기(바이트)입니다.</param>
        <param name="logRetentionOption">
          <see cref="T:System.Diagnostics.TraceLogRetentionOption" /> 값 중 하나입니다.</param>
        <param name="maximumFileSize">최대 파일 크기(바이트)입니다.</param>
        <summary>지정된 로그 보존 정책 및 최대 크기가 있는 지정된 파일을 디버깅 및 추적 출력의 수신자로 사용하여, 지정된 이름 및 지정된 버퍼 크기로 <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 성능 고려 사항에 대 한 `bufferSize` 및 `maximumFileSize` 1024 바이트의 배수 여야 합니다. `maximumFileSize` 절대 값, 아니면 마지막 메시지의 크기까지 초과 될 수 있는 임계값입니다.  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%2CSystem.Diagnostics.TraceLogRetentionOption%2CSystem.Int64%29?displayProperty=nameWithType> 생성자입니다.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener.Ctors#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/CS/program.cs#5)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/VB/program.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maximumFileSize" />가 음수입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName, string name, int bufferSize, System.Diagnostics.TraceLogRetentionOption logRetentionOption, long maximumFileSize, int maximumNumberOfFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name, int32 bufferSize, valuetype System.Diagnostics.TraceLogRetentionOption logRetentionOption, int64 maximumFileSize, int32 maximumNumberOfFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String, bufferSize As Integer, logRetentionOption As TraceLogRetentionOption, maximumFileSize As Long, maximumNumberOfFiles As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName, System::String ^ name, int bufferSize, System::Diagnostics::TraceLogRetentionOption logRetentionOption, long maximumFileSize, int maximumNumberOfFiles);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="logRetentionOption" Type="System.Diagnostics.TraceLogRetentionOption" />
        <Parameter Name="maximumFileSize" Type="System.Int64" />
        <Parameter Name="maximumNumberOfFiles" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fileName">로그 파일의 경로입니다.</param>
        <param name="name">수신기의 이름입니다.</param>
        <param name="bufferSize">출력 버퍼의 크기(바이트)입니다.</param>
        <param name="logRetentionOption">
          <see cref="T:System.Diagnostics.TraceLogRetentionOption" /> 값 중 하나입니다.</param>
        <param name="maximumFileSize">최대 파일 크기(바이트)입니다.</param>
        <param name="maximumNumberOfFiles">출력 로그 파일의 최대 수입니다.</param>
        <summary>지정된 로그 보존 정책, 최대 크기 및 파일 개수가 있는 지정된 파일을 디버깅 및 추적 출력의 수신자로 사용하여, 지정된 이름 및 지정된 버퍼 크기로 <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 성능 고려 사항에 대 한 `bufferSize` 및 `maximumFileSize` 1024 바이트의 배수 여야 합니다. `maximumFileSize` 절대 값; 않습니다. 마지막 메시지의 크기까지 초과할 수 임계값은  
  
   
  
## Examples  
 다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%2A> 생성자입니다. 이 코드 예제는 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.EventSchemaTraceListener> 클래스입니다.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#2)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maximumNumberOfFiles" />가 2보다 작고 <paramref name="logRetentionOption" />가 <see cref="F:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles" />입니다.</exception>
      </Docs>
    </Member>
    <Member MemberName="BufferSize">
      <MemberSignature Language="C#" Value="public int BufferSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.BufferSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BufferSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>출력 버퍼의 크기를 가져옵니다.</summary>
        <value>출력 버퍼의 크기(바이트)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 속성 값에 의해 설정 되는 `bufferSize` 생성자에서 매개 변수입니다. 성능상의 이유로 버퍼 크기는 1024 바이트의 배수 값으로 설정 되어야 합니다. 32 * 1024 바이트의 기본 크기 또는 64 권장\*최상의 성능을 위해 1024 바이트입니다.  
  
   
  
## Examples  
 값을 표시 하는 방법은 다음 코드 예제는 <xref:System.Diagnostics.EventSchemaTraceListener.BufferSize%2A> 속성입니다. 이 코드 예제는 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.EventSchemaTraceListener> 클래스입니다.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#5)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>추적 또는 디버깅 출력을 더 이상 받지 않도록 이 수신기에 대한 로그 파일을 닫습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">쓸 기본 오류 메시지입니다.</param>
        <param name="detailMessage">기본 오류 메시지에 추가할 자세한 오류 메시지입니다.</param>
        <summary>기본 오류 메시지와 자세한 오류 메시지를 포함한 오류 정보를 로그 파일에 씁니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 수신기에 대한 로그에 버퍼링된 데이터를 씁니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>추적 수신기가 지원하는 사용자 지정 XML 구성 특성을 가져옵니다.</summary>
        <returns>이 수신기가 인식하는 XML 구성 특성이 포함된 <see cref="T:System.String" /> 배열입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 인스턴스 동작을 제어 하는 XML 구성 파일에서 사용할 수이 메서드에 의해 반환 되는 사용자 지정 특성은 <xref:System.Diagnostics.EventSchemaTraceListener> 클래스입니다. 다른 특성을 사용 하면 구성 예외가 발생 합니다. <xref:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes%2A> 에 대 한 메서드는 <xref:System.Diagnostics.EventSchemaTraceListener> 다음 문자열 배열 값을 반환: "bufferSize", "logRetentionOption", "최적화" 및 "생성자"입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsThreadSafe">
      <MemberSignature Language="C#" Value="public override bool IsThreadSafe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsThreadSafe" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsThreadSafe As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsThreadSafe { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>추적 수신기가 스레드로부터 안전한지 여부를 나타내는 값을 가져옵니다.</summary>
        <value>항상 <see langword="true" />를 반환합니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 값을 표시 하는 방법은 다음 코드 예제는 <xref:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe%2A> 속성입니다. 이 코드 예제는 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.EventSchemaTraceListener> 클래스입니다.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#4)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumFileSize">
      <MemberSignature Language="C#" Value="public long MaximumFileSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumFileSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumFileSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumFileSize { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로그 파일의 최대 크기를 가져옵니다.</summary>
        <value>최대 파일 크기(바이트)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 속성 값을 설정한는 `maximumFileSize` 생성자에서 매개 변수 또는 `maximumFileSize` 구성 파일에는 특성입니다. 성능상의 이유로 1024 바이트의 배수를 최대 파일 크기를 설정 해야 합니다. <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A> 속성 값이 절대; 임계값 크기 마지막 메시지의 최대 초과할 수 있습니다.  
  
 다음 표에서 가능한 값과 기본값 파일 크기에 대 한 연결 된 각 추적 로그 보존 기간 옵션을 보여 줍니다. N/A로 표시 된 값을 표시 하는 <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A> 해당 속성은 확인 되지 <xref:System.Diagnostics.TraceLogRetentionOption> 값입니다.  
  
|TraceLogRetentionOption|최대 파일 크기|기본 파일 크기|  
|-----------------------------|-----------------------|-----------------------|  
|<xref:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles>|N/A|-1|  
|<xref:System.Diagnostics.TraceLogRetentionOption.LimitedSequentialFiles>|>0|4KB|  
|<xref:System.Diagnostics.TraceLogRetentionOption.SingleFileBoundedSize>|>0|4KB|  
|<xref:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize>|>0|4KB|  
|<xref:System.Diagnostics.TraceLogRetentionOption.UnlimitedSequentialFiles>|>0|4KB|  
  
   
  
## Examples  
 값을 표시 하는 방법은 다음 코드 예제는 <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A> 속성입니다. 이 코드 예제는 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.EventSchemaTraceListener> 클래스입니다.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#6)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumNumberOfFiles">
      <MemberSignature Language="C#" Value="public int MaximumNumberOfFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumNumberOfFiles" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumNumberOfFiles As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumNumberOfFiles { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로그 파일의 최대 수를 가져옵니다.</summary>
        <value>로그 파일의 최대 수이며 파일의 <see cref="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption" /> 속성 값에 의해 결정됩니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 속성 값을 설정한는 `maximumNumberOfFiles` 생성자에서 매개 변수 또는 `maximumNumberOfFiles` 구성 파일에는 특성입니다.  
  
 다음 표에서 가능한 값과 기본값 파일 크기 및 파일 개수에 대 한 연결 된 각 추적 로그 보존 기간 옵션을 보여 줍니다. N/A로 표시 된 값을 표시 하는 <xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A> 해당 속성은 확인 되지 <xref:System.Diagnostics.TraceLogRetentionOption> 값입니다.  
  
|TraceLogRetentionOption|최대 파일 수|기본 파일 수|  
|-----------------------------|-----------------------------|-----------------------------|  
|<xref:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles>|N/A|1|  
|<xref:System.Diagnostics.TraceLogRetentionOption.LimitedSequentialFiles>|N/A|1|  
|<xref:System.Diagnostics.TraceLogRetentionOption.SingleFileBoundedSize>|N/A|-1|  
|<xref:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize>|>0|1|  
|<xref:System.Diagnostics.TraceLogRetentionOption.UnlimitedSequentialFiles>|>1|2|  
  
   
  
## Examples  
 값을 표시 하는 방법은 다음 코드 예제는 <xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A> 속성입니다. 이 코드 예제는 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.EventSchemaTraceListener> 클래스입니다.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#7)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>로그 파일에 추적 데이터를 씁니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" />입니다.</param>
        <param name="source">소스 이름입니다.</param>
        <param name="eventType">
          <see cref="T:System.Diagnostics.TraceEventType" /> 값 중 하나입니다.</param>
        <param name="id">이벤트의 숫자 식별자입니다.</param>
        <param name="data">내보낼 데이터 개체입니다.</param>
        <summary>로그 파일에 추적 정보, 단일 데이터 개체 및 이벤트 정보를 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `eventCache`, `source`, `eventType`, 및 `id` 머리글 및 추적의 바닥글에 매개 변수가 사용 됩니다. `id` 쓰기 전에 매개 변수를 부호 없는 정수로 변환 됩니다. 따라서 음수 `id` 큰 양의 정수 값이 기록 됩니다. `data` 매개 변수는로 작성 한 `Data` 의 노드는 `UserData` 요소입니다. `ToString` 데이터 개체의 메서드는 개체를 문자열로 변환 하는 데 사용 됩니다.  
  
> [!IMPORTANT]
>  이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다. 메서드에 의해 호출 됩니다는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 추적 데이터를 작성 하는 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" />입니다.</param>
        <param name="source">소스 이름입니다.</param>
        <param name="eventType">
          <see cref="T:System.Diagnostics.TraceEventType" /> 값 중 하나입니다.</param>
        <param name="id">이벤트의 숫자 식별자입니다.</param>
        <param name="data">내보낼 데이터 개체 배열입니다.</param>
        <summary>로그 파일에 추적 정보, 여러 개의 데이터 개체 및 이벤트 정보를 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `eventCache`, `source`, `eventType`, 및 `id` 머리글 및 추적의 바닥글에 매개 변수가 사용 됩니다. `id` 쓰기 전에 매개 변수를 부호 없는 정수로 변환 됩니다. 따라서 음수 `id` 큰 양의 정수 값이 기록 됩니다. 개체는 `data` 매개 변수 배열으로 작성 되 `Data` 의 노드는 `UserData` 요소입니다. `ToString` 각 데이터 개체의 메서드는 개체를 문자열로 변환 하는 데 사용 됩니다.  
  
> [!IMPORTANT]
>  이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다. 메서드에 의해 호출 됩니다는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 추적 데이터를 작성 하는 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>로그 파일에 이벤트 추적 정보를 씁니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" />입니다.</param>
        <param name="source">소스 이름입니다.</param>
        <param name="eventType">
          <see cref="T:System.Diagnostics.TraceEventType" /> 값 중 하나입니다.</param>
        <param name="id">이벤트의 숫자 식별자입니다.</param>
        <param name="message">쓸 메시지입니다.</param>
        <summary>로그 파일에 추적 정보, 메시지 및 이벤트 정보를 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `eventCache`, `source`, `eventType`, 및 `id` 머리글 및 추적의 바닥글에 매개 변수가 사용 됩니다. `id` 쓰기 전에 매개 변수를 부호 없는 정수로 변환 됩니다. 따라서 음수 `id` 큰 양의 정수 값이 기록 됩니다. `message` 매개 변수는로 작성 한 `Data` 의 노드는 `EventData` 요소입니다.  
  
> [!IMPORTANT]
>  이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다. 메서드에 의해 호출 됩니다는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 추적 데이터를 작성 하는 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" />입니다.</param>
        <param name="source">소스 이름입니다.</param>
        <param name="eventType">
          <see cref="T:System.Diagnostics.TraceEventType" /> 값 중 하나입니다.</param>
        <param name="id">이벤트의 숫자 식별자입니다.</param>
        <param name="format">
          <c>args</c> 배열에 들어 있는 개체에 해당하는 0개 이상의 형식 항목이 포함된 형식 문자열입니다.</param>
        <param name="args">형식을 지정할 개체를 0개 이상 포함하는 개체 배열입니다.</param>
        <summary>로그 파일에 추적 정보, 형식이 지정된 메시지 및 이벤트 정보를 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `eventCache`, `source`, `eventType`, 및 `id` 머리글 및 추적의 바닥글에 매개 변수가 사용 됩니다. `id` 쓰기 전에 매개 변수를 부호 없는 정수로 변환 됩니다. 따라서 음수 `id` 큰 양의 정수 값이 기록 됩니다. <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> 메서드가 호출 되 고 `format` 문자열 및 `args` 배열 매개 변수로 전달 됩니다. 이 메서드는 형식을 `args` 개체 배열 형식이 지정 된 배열을로 씁니다는 `Data` 의 노드는 `EventData` 요소입니다.  
  
> [!IMPORTANT]
>  이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다. 메서드에 의해 호출 됩니다는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 추적 데이터를 작성 하는 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceLogRetentionOption">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceLogRetentionOption TraceLogRetentionOption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.TraceLogRetentionOption TraceLogRetentionOption" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceLogRetentionOption As TraceLogRetentionOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceLogRetentionOption TraceLogRetentionOption { System::Diagnostics::TraceLogRetentionOption get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceLogRetentionOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>파일에 대한 추적 로그 보존 옵션을 가져옵니다.</summary>
        <value>
          <see cref="T:System.Diagnostics.TraceLogRetentionOption" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 값을 표시 하는 방법은 다음 코드 예제는 <xref:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption%2A> 속성입니다. 이 코드 예제는 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.EventSchemaTraceListener> 클래스입니다.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#9)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public override void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" />입니다.</param>
        <param name="source">소스 이름입니다.</param>
        <param name="id">이벤트의 숫자 식별자입니다.</param>
        <param name="message">쓸 추적 메시지입니다.</param>
        <param name="relatedActivityId">관련 작업을 식별하는 <see cref="T:System.Guid" /> 구조체입니다.</param>
        <summary>로그 파일에 관련 작업 ID가 포함된 추적 정보와 메시지, 이벤트 정보를 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A> 메서드 관련된 추적을 상호 연결 하는 데 사용 됩니다. `eventCache`, `source`, `id`, 및 `relatedActivityId` 머리글 및 추적의 바닥글에 매개 변수가 사용 됩니다. `id` 쓰기 전에 매개 변수를 부호 없는 정수로 변환 됩니다. 따라서 음수 `id` 큰 양의 정수 값이 기록 됩니다. `message` 매개 변수는로 작성 된 `Data` 요소입니다. <xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> 메서드는 변환 하는 `relatedActivityId` "B"로 값의 머리글에 표시 된 문자열을 지정 합니다. `Opcode` 요소 바닥글에 추적 이벤트 유형으로 식별 한 <xref:System.Diagnostics.TraceEventType.Transfer>합니다.  
  
> [!IMPORTANT]
>  <xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A> 응용 프로그램 코드에서 메서드를 호출 해야 합니다. 사용 하는 것을 <xref:System.Diagnostics.TraceSource> 개체에 대 한 추적 정보를 내보내려면 해당 <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> 메서드.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">쓸 메시지입니다.</param>
        <summary>추가 컨텍스트 정보를 제공하지 않고 로그 파일에 메시지를 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A> 메서드를 호출 하는 로그로 메시지를 한 <xref:System.Diagnostics.TraceEventType.Information> 이벤트입니다.  
  
> [!IMPORTANT]
>  이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다. 메서드에 의해 호출 됩니다는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 추적 데이터를 작성 하는 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">쓸 메시지입니다.</param>
        <summary>추가 컨텍스트 정보를 제공하지 않고 로그 파일에 메시지와 현재 줄 종결자를 씁니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A> 메서드를 호출 하는 로그로 메시지를 한 <xref:System.Diagnostics.TraceEventType.Information> 이벤트입니다.  
  
> [!IMPORTANT]
>  이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다. 메서드에 의해 호출 됩니다는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 추적 데이터를 작성 하는 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Writer">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Writer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Writer" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.Writer" />
      <MemberSignature Language="VB.NET" Value="Public Property Writer As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Writer { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>로그 파일에 쓰는 기본 텍스트 기록기를 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.IO.TextWriter" /> 개체입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 에 대 한 set 접근자를 사용 하려는 시도가 <xref:System.Diagnostics.EventSchemaTraceListener.Writer%2A> 속성 발생 한 <xref:System.NotSupportedException>합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Diagnostics.EventSchemaTraceListener.Writer" /> 속성에 값을 할당하려고 한 경우</exception>
      </Docs>
    </Member>
  </Members>
</Type>