<Type Name="EventSchemaTraceListener" FullName="System.Diagnostics.EventSchemaTraceListener">
  <TypeSignature Language="C#" Value="public class EventSchemaTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSchemaTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventSchemaTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSchemaTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSchemaTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="33add-101">종단 간 이벤트의 추적 또는 디버깅 출력을 XML로 인코딩된 스키마 규격 로그 파일에 연결합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-101">Directs tracing or debugging output of end-to-end events to an XML-encoded, schema-compliant log file.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33add-102"><xref:System.Diagnostics.EventSchemaTraceListener> 클래스는 종단 간 스키마를 준수 하는 이벤트의 추적을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-102">The <xref:System.Diagnostics.EventSchemaTraceListener> class provides tracing of end-to-end schema-compliant events.</span></span> <span data-ttu-id="33add-103">스레드 간 있는 시스템에 대 한 종단 간 추적을 사용할 수 있습니다 <xref:System.AppDomain>, 프로세스 및 컴퓨터 경계입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-103">You can use end-to-end tracing for a system that has heterogeneous components that cross thread, <xref:System.AppDomain>, process, and computer boundaries.</span></span> <span data-ttu-id="33add-104">표준화 된 이벤트 스키마 (참조 [이벤트 소비자에 대 한 이벤트 표현](http://go.microsoft.com/fwlink/?LinkId=78955))에서 이러한 경계를 넘어 추적을 사용 하도록 정의 되어 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-104">A standardized event schema (see [Event Representation for Event Consumers](http://go.microsoft.com/fwlink/?LinkId=78955)) has been defined to enable tracing across these boundaries.</span></span> <span data-ttu-id="33add-105">스키마에 사용자 지정, 스키마를 준수 하는 요소를 추가할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="33add-105">The schema enables the addition of custom, schema-compliant elements.</span></span> <span data-ttu-id="33add-106">사용할 수는 [Service Trace Viewer 도구 (SvcTraceViewer.exe)](http://go.microsoft.com/fwlink/p/?LinkId=240129) 이벤트 데이터를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-106">You can use the [Service Trace Viewer Tool (SvcTraceViewer.exe)](http://go.microsoft.com/fwlink/p/?LinkId=240129) to display the event data.</span></span>  
  
 <span data-ttu-id="33add-107"><xref:System.Diagnostics.EventSchemaTraceListener> 암시적으로 지원 하며 추적 잠금 해제에 대 한 로깅 성능에 대 한 조정 되어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="33add-107"><xref:System.Diagnostics.EventSchemaTraceListener> is tuned for logging performance with implicit support for lock-free tracing.</span></span>  
  
 <span data-ttu-id="33add-108"><xref:System.Diagnostics.EventSchemaTraceListener> 클래스는 추적 및 디버깅 정보를 XML로 인코딩된 텍스트 스트림으로 변환 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-108">The <xref:System.Diagnostics.EventSchemaTraceListener> class converts tracing and debugging information into an XML-encoded text stream.</span></span> <span data-ttu-id="33add-109">XML 출력의 설명이이 섹션의 뒷부분에 나오는 표에 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-109">The description of the XML output is shown in the tables later in this section.</span></span>  
  
 <span data-ttu-id="33add-110">활성화 하거나 비활성화할 수는 <xref:System.Diagnostics.EventSchemaTraceListener> 응용 프로그램 구성 파일을 통해 개체를 사용 하 여 구성 된 <xref:System.Diagnostics.EventSchemaTraceListener> 응용 프로그램의 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-110">You can enable or disable an <xref:System.Diagnostics.EventSchemaTraceListener> object through the application configuration file, and then use the configured <xref:System.Diagnostics.EventSchemaTraceListener> object in your application.</span></span> <span data-ttu-id="33add-111">또한 만들 수는 <xref:System.Diagnostics.EventSchemaTraceListener> 코드에서이 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-111">Alternately, you can create an <xref:System.Diagnostics.EventSchemaTraceListener> object in your code.</span></span> <span data-ttu-id="33add-112">응용 프로그램 구성 파일을 통해 추적 수신기를 사용 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="33add-112">We recommend that you enable trace listeners through the application configuration file.</span></span> <span data-ttu-id="33add-113">추적 및 디버깅에 대 한 구성 파일의 사용에 대 한 정보를 참조 하십시오. [추적 및 디버그 설정 스키마](http://msdn.microsoft.com/library/277ca5f6-e1c4-41b6-a47f-3a67ce5b94ac)합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-113">For information about the use of configuration files for tracing and debugging, see [Trace and Debug Settings Schema](http://msdn.microsoft.com/library/277ca5f6-e1c4-41b6-a47f-3a67ce5b94ac).</span></span>  
  
 <span data-ttu-id="33add-114">구성 하는 <xref:System.Diagnostics.EventSchemaTraceListener> 개체, 응용 프로그램의 이름에 해당 하는 구성 파일을 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-114">To configure an <xref:System.Diagnostics.EventSchemaTraceListener> object, modify the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="33add-115">이 파일에 추가, 제거 또는 수신기의 속성을 설정 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="33add-115">In this file, you can add, remove, or set the properties for a listener.</span></span> <span data-ttu-id="33add-116">구성 파일 형식은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="33add-116">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
    <system.diagnostics>  
        <sources>  
            <source name="TestSource" >  
                <listeners>  
                    <!--Remove the default trace listener for better performance.-->  
                    <remove name="Default"/>  
                    <!--Note: Removing the default trace listener prevents the dialog box   
                    from being displayed for Debug.Fail or Debug.Assert commands that are   
                    executed in user mode.-->  
                    <add name="eventListener"   
                      type="System.Diagnostics.EventSchemaTraceListener,  system.core"  
                      initializeData="TraceOutput.xml"   
                      traceOutputOptions="ProcessId, DateTime, Timestamp"   
                      bufferSize="65536"  
                      maximumFileSize="20480000"  
                      logRetentionOption="LimitedCircularFiles"  
                      maximumNumberOfFiles="2"/>  
                </listeners>  
            </source>  
        </sources>  
    </system.diagnostics>  
```  
  
 <span data-ttu-id="33add-117"><xref:System.Diagnostics.EventSchemaTraceListener> 클래스 상속의 <xref:System.Diagnostics.TraceListener.Filter%2A> 기본 클래스에서 속성 <xref:System.Diagnostics.TraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-117">The <xref:System.Diagnostics.EventSchemaTraceListener> class inherits the <xref:System.Diagnostics.TraceListener.Filter%2A> property from the base class <xref:System.Diagnostics.TraceListener>.</span></span> <span data-ttu-id="33add-118"><xref:System.Diagnostics.TraceListener.Filter%2A> 수신기에서 필터링 하는 추적 출력의 추가 수준을 대 한 속성을 사용 하면 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-118">The <xref:System.Diagnostics.TraceListener.Filter%2A> property allows for an additional level of trace output filtering at the listener.</span></span> <span data-ttu-id="33add-119">필터는 사용할 수 있는 경우는 `Trace` 추적 수신기 호출의 메서드는 <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> 메서드는 필터는 추적을 내보낼지 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-119">If a filter is present, the `Trace` methods of the trace listener call the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method of the filter to determine whether to emit the trace.</span></span>  
  
 <span data-ttu-id="33add-120">사용 되 고 있거나 사용할 수 없는 파일에 기록 하려고 하는 경우 GUID 접미사가 파일 이름에 자동으로 추가 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-120">If an attempt is made to write to a file that is being used or is unavailable, a GUID suffix is automatically added to the file name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="33add-121">수신기 방법은 대상의 메서드에 의해 호출 되는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-121">Listener methods are intended to be called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes.</span></span> <span data-ttu-id="33add-122">응용 프로그램 코드에서 직접 수신기 메서드를 호출 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="33add-122">Do not call the listener methods directly from application code.</span></span> <span data-ttu-id="33add-123"><xref:System.Diagnostics.EventSchemaTraceListener> 수신기는에서 사용 하기 위해 주로 <xref:System.Diagnostics.TraceSource> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-123">The <xref:System.Diagnostics.EventSchemaTraceListener> listener is primarily intended for use by the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 <span data-ttu-id="33add-124">다음 표에서 XML 출력의 특성과 해당 요소를 설명합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-124">The following table describes the elements and attributes of the XML output.</span></span>  
  
|<span data-ttu-id="33add-125">요소</span><span class="sxs-lookup"><span data-stu-id="33add-125">Element</span></span>|<span data-ttu-id="33add-126">특성</span><span class="sxs-lookup"><span data-stu-id="33add-126">Attributes</span></span>|<span data-ttu-id="33add-127">출력</span><span class="sxs-lookup"><span data-stu-id="33add-127">Output</span></span>|<span data-ttu-id="33add-128">노트</span><span class="sxs-lookup"><span data-stu-id="33add-128">Notes</span></span>|  
|-------------|----------------|------------|-----------|  
|`CallStack`|<span data-ttu-id="33add-129">없음</span><span class="sxs-lookup"><span data-stu-id="33add-129">None</span></span>|<span data-ttu-id="33add-130">존재 여부에 따라 달라 집니다는 <xref:System.Diagnostics.TraceOptions.Callstack> 플래그는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-130">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Callstack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="33add-131">와 같은 특수 문자 > 또는 <를 이스케이프 시퀀스로 대체 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-131">Special characters such as > or < are replaced with escape sequences.</span></span> <span data-ttu-id="33add-132">다음 테이블에 이스케이프 된 문자 변환 표를 참조 하십시오.</span><span class="sxs-lookup"><span data-stu-id="33add-132">See the escaped character translation table in the next table.</span></span>|  
|`Computer`|<span data-ttu-id="33add-133">없음</span><span class="sxs-lookup"><span data-stu-id="33add-133">None</span></span>|<span data-ttu-id="33add-134">항상 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-134">Always present.</span></span>|<span data-ttu-id="33add-135">이 요소 값을 나타내는 <xref:System.Environment.MachineName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-135">This element represents the value of the <xref:System.Environment.MachineName%2A> property.</span></span>|  
|`Correlation`|`ActivityID`|<span data-ttu-id="33add-136">항상 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-136">Always present.</span></span>|<span data-ttu-id="33add-137">경우 `ActivityID` 을 지정 하지 않으면 기본값은 빈 GUID입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-137">If `ActivityID` is not specified, the default is an empty GUID.</span></span>|  
||`RelatedActivityID`|<span data-ttu-id="33add-138">존재 여부에 따라 달라 집니다는 `relatedActivityId` 에서 매개 변수는 `Trace` 메서드를 호출 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-138">Depends on the presence of the `relatedActivityId` parameter in the `Trace` method call.</span></span>|<span data-ttu-id="33add-139">`RelatedActivityID` 특성에 해당 하는 `relatedActivityId` 의 매개 변수는 <xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="33add-139">The `RelatedActivityID` attribute corresponds to the `relatedActivityId` parameter of the <xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A> method.</span></span>|  
|`Data`|<span data-ttu-id="33add-140">없음</span><span class="sxs-lookup"><span data-stu-id="33add-140">None</span></span>|<span data-ttu-id="33add-141">항상 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-141">Always present.</span></span>|<span data-ttu-id="33add-142">이 요소는 매개 변수 입력을 나타냅니다 (`data`).</span><span class="sxs-lookup"><span data-stu-id="33add-142">This element represents parameter input (`data`).</span></span> <span data-ttu-id="33add-143">각 데이터 개체에 대해 하나의 요소가 제공 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-143">One element is provided for each data object.</span></span> <span data-ttu-id="33add-144">이벤트 로그의 경우는 `Data` 요소 이스케이프 된 XML 데이터를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-144">In the case of event logs, the `Data` element contains escaped XML data.</span></span> <span data-ttu-id="33add-145">로그 데이터의 경우는 `Data` 요소 이스케이프 되지 않은 데이터를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-145">In the case of data logs, the `Data` element contains unescaped data.</span></span> <span data-ttu-id="33add-146">데이터에 사용 하 여 출력 로그는 `ToString` 전달 된 데이터 개체의 메서드.</span><span class="sxs-lookup"><span data-stu-id="33add-146">The data log output uses the `ToString` method of the passed-in data objects.</span></span>|  
|`Event`|<span data-ttu-id="33add-147">없음</span><span class="sxs-lookup"><span data-stu-id="33add-147">None</span></span>|<span data-ttu-id="33add-148">항상 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-148">Always present.</span></span>|<span data-ttu-id="33add-149">이 요소는 추적 이벤트를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-149">This element contains a trace event.</span></span>|  
|`EventData`|<span data-ttu-id="33add-150">없음</span><span class="sxs-lookup"><span data-stu-id="33add-150">None</span></span>|<span data-ttu-id="33add-151">이벤트 로그의 경우입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-151">Present for event logs.</span></span>|<span data-ttu-id="33add-152">이 요소는 매개 변수 입력을 나타냅니다 (`message`, `args`).</span><span class="sxs-lookup"><span data-stu-id="33add-152">This element represents parameter input (`message`, `args`).</span></span> <span data-ttu-id="33add-153">포함 된 `Data` 요소를 호출 하 여 만든 이스케이프 된 XML 데이터는 <xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="33add-153">It contains `Data` elements with escaped XML data that is created by calling the <xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A> method.</span></span>|  
|`EventID`|<span data-ttu-id="33add-154">없음</span><span class="sxs-lookup"><span data-stu-id="33add-154">None</span></span>|<span data-ttu-id="33add-155">항상 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-155">Always present.</span></span>|<span data-ttu-id="33add-156">이 요소는 매개 변수 입력을 나타냅니다 (`id`).</span><span class="sxs-lookup"><span data-stu-id="33add-156">This element represents parameter input (`id`).</span></span>|  
|`Execution`|`ProcessID`|<span data-ttu-id="33add-157">존재 여부에 따라 달라 집니다는 <xref:System.Diagnostics.TraceOptions.ProcessId> 플래그는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-157">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.ProcessId> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="33add-158">`ProcessID` 특성에 지정 된는 <xref:System.Diagnostics.TraceEventCache>합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-158">The `ProcessID` attribute is specified in the <xref:System.Diagnostics.TraceEventCache>.</span></span> <span data-ttu-id="33add-159">Microsoft Windows 98 및 Windows 밀레니엄 Edition 운영 체제의 경우 `ProcessID` , 2147483647 보다 큰 음수를 양의 표현인 하 고 올바른 프로세스 식별자를 가져오려면 변환 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-159">On the Microsoft Windows 98 and Windows Millenium Edition operating systems, if `ProcessID` is larger than 2,147,483,647, it is a positive representation of a negative number and should be converted to obtain the correct process identifier.</span></span>|  
||`ThreadID`|<span data-ttu-id="33add-160">있는 경우 `ProcessID` 있는 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-160">Present when `ProcessID` is present.</span></span>|<span data-ttu-id="33add-161">`ThreadID` 특성에 지정 된는 <xref:System.Diagnostics.TraceEventCache>합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-161">The `ThreadID` attribute is specified in the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
|`Level`|<span data-ttu-id="33add-162">없음</span><span class="sxs-lookup"><span data-stu-id="33add-162">None</span></span>|<span data-ttu-id="33add-163">항상 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-163">Always present.</span></span>|<span data-ttu-id="33add-164">이 요소는 매개 변수 입력을 나타냅니다 (의 숫자 값 `eventType`).</span><span class="sxs-lookup"><span data-stu-id="33add-164">This element represents parameter input (the numeric value of `eventType`).</span></span> <span data-ttu-id="33add-165">255 보다 큰 경우에 매개 변수 값은 8, 수준으로 나타내는 출력 <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType>합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-165">Parameter values that are larger than 255 are output as a level 8, which represents <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType>.</span></span> <span data-ttu-id="33add-166">추적 이벤트 형식 <xref:System.Diagnostics.TraceEventType.Critical>, <xref:System.Diagnostics.TraceEventType.Error>, <xref:System.Diagnostics.TraceEventType.Warning>, <xref:System.Diagnostics.TraceEventType.Information>, 및 <xref:System.Diagnostics.TraceEventType.Verbose> 는 각각 1, 2, 4, 8 및 10, 수준으로 출력 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-166">Trace event types <xref:System.Diagnostics.TraceEventType.Critical>, <xref:System.Diagnostics.TraceEventType.Error>, <xref:System.Diagnostics.TraceEventType.Warning>, <xref:System.Diagnostics.TraceEventType.Information>, and <xref:System.Diagnostics.TraceEventType.Verbose> are output as levels 1, 2, 4, 8, and 10, respectively.</span></span>|  
|`LogicalOperationStack`|<span data-ttu-id="33add-167">없음</span><span class="sxs-lookup"><span data-stu-id="33add-167">None</span></span>|<span data-ttu-id="33add-168">존재 여부에 따라 달라 집니다는 <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> 플래그는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-168">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="33add-169">논리 작업을 하나만 존재할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="33add-169">Only one logical operation can exist.</span></span> <span data-ttu-id="33add-170">따라서 이러한 값을 기록으로 `LogicalOperation` 아래의 노드는 `LogicalOperationStack` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-170">Therefore, the values are written as `LogicalOperation` nodes under the `LogicalOperationStack` element.</span></span>|  
|`OpCode`|<span data-ttu-id="33add-171">없음</span><span class="sxs-lookup"><span data-stu-id="33add-171">None</span></span>|<span data-ttu-id="33add-172">있는 경우 `Level` 가 255 자를 초과 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-172">Present when `Level` is greater than 255.</span></span>|<span data-ttu-id="33add-173">이 요소는 추적 이벤트 유형의 255 보다 큰 숫자 값을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="33add-173">This element represents Trace event types that have numeric values greater than 255.</span></span> <span data-ttu-id="33add-174"><xref:System.Diagnostics.TraceEventType.Start><xref:System.Diagnostics.TraceEventType.Stop>, <xref:System.Diagnostics.TraceEventType.Suspend>, <xref:System.Diagnostics.TraceEventType.Resume>, 또는 <xref:System.Diagnostics.TraceEventType.Transfer> 는 각각 1, 2, 4, 8 및 10, 수준으로 출력 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-174"><xref:System.Diagnostics.TraceEventType.Start>, <xref:System.Diagnostics.TraceEventType.Stop>, <xref:System.Diagnostics.TraceEventType.Suspend>, <xref:System.Diagnostics.TraceEventType.Resume>, or <xref:System.Diagnostics.TraceEventType.Transfer> are output as levels 1, 2, 4, 8, and 10, respectively.</span></span>|  
|`Provider`|`GUID`|<span data-ttu-id="33add-175">항상 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-175">Always present.</span></span>|<span data-ttu-id="33add-176">항상 비어 있습니다.</span><span class="sxs-lookup"><span data-stu-id="33add-176">Always empty.</span></span>|  
|`RenderingInfo`|`Culture`|<span data-ttu-id="33add-177">항상 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-177">Always present.</span></span>|<span data-ttu-id="33add-178">이 특성에는 이벤트 유형에 대 한 리소스 문자열을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="33add-178">This attribute represents a resource string for the event type.</span></span> <span data-ttu-id="33add-179">이 패턴은 항상 "en EN\\"입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-179">It is always "en-EN\\".</span></span>|  
|`System`|`Name`|<span data-ttu-id="33add-180">항상 존재 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-180">Always present.</span></span>||  
|`TimeCreated`|`SystemTime`|<span data-ttu-id="33add-181">존재 여부에 따라 달라 집니다는 <xref:System.Diagnostics.TraceOptions.DateTime> 플래그는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-181">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.DateTime> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="33add-182">값에 <xref:System.Diagnostics.TraceEventCache.DateTime%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-182">The time is the value of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="33add-183">이 속성은 협정 세계시로 표현 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-183">This property is expressed as Coordinated Universal Time</span></span>|  
|`TimeStamp`|<span data-ttu-id="33add-184">없음</span><span class="sxs-lookup"><span data-stu-id="33add-184">None</span></span>|<span data-ttu-id="33add-185">존재 여부에 따라 달라 집니다는 <xref:System.Diagnostics.TraceOptions.Timestamp> 플래그는 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-185">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Timestamp> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="33add-186">이 요소에 지정 된는 <xref:System.Diagnostics.TraceEventCache>합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-186">This element is specified in the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
|`UserData`|<span data-ttu-id="33add-187">없음</span><span class="sxs-lookup"><span data-stu-id="33add-187">None</span></span>|<span data-ttu-id="33add-188">데이터 로그를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-188">Present for data logs.</span></span>|<span data-ttu-id="33add-189">이 요소는 포함 `Data` 에서 이스케이프 되지 않은, 사용자가 제공한 데이터를 사용 하 여 요소는 <xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="33add-189">This element contains `Data` elements with unescaped, user-provided data from a <xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A> method.</span></span>|  
  
 <span data-ttu-id="33add-190">다음 표에서 XML 출력에는 이스케이프 된 문자를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="33add-190">The following table shows the characters that are escaped in the XML output.</span></span> <span data-ttu-id="33add-191">모든 요소에 나타나고 특성을 제외 하 고 이스케이프는 `UserData` 사용자가 제공한, 포함 하는 요소 데이터 이스케이프 해제 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-191">Escaping occurs in all the elements and attributes except for the `UserData` element, which contains user-provided, unescaped data.</span></span> <span data-ttu-id="33add-192">`UserData` 요소에 대 한 호출의 결과는 <xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="33add-192">The `UserData` element is a result of calls to the <xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A> method.</span></span>  
  
|<span data-ttu-id="33add-193">이스케이프된 문자</span><span class="sxs-lookup"><span data-stu-id="33add-193">Escaped character</span></span>|<span data-ttu-id="33add-194">값</span><span class="sxs-lookup"><span data-stu-id="33add-194">Value</span></span>|  
|-----------------------|-----------|  
|&|&amp;|  
|\<|&lt;|  
|>|&gt;|  
|<span data-ttu-id="33add-195">"</span><span class="sxs-lookup"><span data-stu-id="33add-195">"</span></span>|&quot;|  
|\|&apos;|  
|<span data-ttu-id="33add-196">0xD</span><span class="sxs-lookup"><span data-stu-id="33add-196">0xD</span></span>|<span data-ttu-id="33add-197">&\#xD;</span><span class="sxs-lookup"><span data-stu-id="33add-197">&\#xD;</span></span>|  
|<span data-ttu-id="33add-198">0xA</span><span class="sxs-lookup"><span data-stu-id="33add-198">0xA</span></span>|<span data-ttu-id="33add-199">&\#xA;</span><span class="sxs-lookup"><span data-stu-id="33add-199">&\#xA;</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33add-200">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Diagnostics.EventSchemaTraceListener> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-200">The following code example demonstrates how to use the <xref:System.Diagnostics.EventSchemaTraceListener> class.</span></span>  
  
 [!code-cpp[System.Diagnostics.EventSchemaTraceListener#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/CPP/eventschematracelistener.cpp#1)]
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#1)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="33add-201"><see cref="T:System.Diagnostics.EventSchemaTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-201">Initializes a new instance of the <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="33add-202">로그 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-202">The path for the log file.</span></span></param>
        <summary><span data-ttu-id="33add-203">지정된 파일을 디버깅 및 추적 출력의 수신자로 사용하여 <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-203">Initializes a new instance of the <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> class, using the specified file as the recipient of debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33add-204">기본적으로 한 파일 크기 제한이 없는 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-204">By default, one file of unrestricted size is logged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33add-205">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%29?displayProperty=nameWithType> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-205">The following code example demonstrates how to use the <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%29?displayProperty=nameWithType> constructor.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener.Ctors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/VB/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="33add-206">로그 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-206">The path for the log file.</span></span></param>
        <param name="name"><span data-ttu-id="33add-207">수신기의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-207">The name of the listener.</span></span></param>
        <summary><span data-ttu-id="33add-208">지정된 파일을 디버깅 및 추적 출력의 수신자로 사용하여, 지정된 이름으로 <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-208">Initializes a new instance of the <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> class with the specified name, using the specified file as the recipient of debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="33add-209">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-209">The following code example demonstrates how to use the <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType> constructor.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener.Ctors#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/CS/program.cs#2)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName, string name, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName, System::String ^ name, int bufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="33add-210">로그 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-210">The path for the log file.</span></span></param>
        <param name="name"><span data-ttu-id="33add-211">수신기의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-211">The name of the listener.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="33add-212">출력 버퍼의 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-212">The size of the output buffer, in bytes.</span></span></param>
        <summary><span data-ttu-id="33add-213">지정된 파일을 디버깅 및 추적 출력의 수신자로 사용하여, 지정된 이름 및 지정된 버퍼 크기로 <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-213">Initializes a new instance of the <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> class with the specified name and specified buffer size, using the specified file as the recipient of debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33add-214">성능 고려 사항에 대 한 `bufferSize` 1024 바이트의 배수 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-214">For performance considerations, `bufferSize` should be a multiple of 1024 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33add-215">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-215">The following code example demonstrates how to use the <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType> constructor.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener.Ctors#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/CS/program.cs#3)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/VB/program.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName, string name, int bufferSize, System.Diagnostics.TraceLogRetentionOption logRetentionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name, int32 bufferSize, valuetype System.Diagnostics.TraceLogRetentionOption logRetentionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String, bufferSize As Integer, logRetentionOption As TraceLogRetentionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName, System::String ^ name, int bufferSize, System::Diagnostics::TraceLogRetentionOption logRetentionOption);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="logRetentionOption" Type="System.Diagnostics.TraceLogRetentionOption" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="33add-216">로그 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-216">The path for the log file.</span></span></param>
        <param name="name"><span data-ttu-id="33add-217">수신기의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-217">The name of the listener.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="33add-218">출력 버퍼의 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-218">The size of the output buffer, in bytes.</span></span></param>
        <param name="logRetentionOption"><span data-ttu-id="33add-219"><see cref="T:System.Diagnostics.TraceLogRetentionOption" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-219">One of the <see cref="T:System.Diagnostics.TraceLogRetentionOption" /> values.</span></span></param>
        <summary><span data-ttu-id="33add-220">지정된 로그 보존 정책이 있는 지정된 파일을 디버깅 및 추적 출력의 수신자로 사용하여, 지정된 이름 및 지정된 버퍼 크기로 <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-220">Initializes a new instance of the <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> class with the specified name and specified buffer size, using the specified file with the specified log retention policy as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33add-221">성능 고려 사항에 대 한 `bufferSize` 1024 바이트의 배수 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-221">For performance considerations, `bufferSize` should be a multiple of 1024 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33add-222">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%2CSystem.Diagnostics.TraceLogRetentionOption%29?displayProperty=nameWithType> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-222">The following code example demonstrates how to use the <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%2CSystem.Diagnostics.TraceLogRetentionOption%29?displayProperty=nameWithType> constructor.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener.Ctors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/CS/program.cs#4)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/VB/program.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName, string name, int bufferSize, System.Diagnostics.TraceLogRetentionOption logRetentionOption, long maximumFileSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name, int32 bufferSize, valuetype System.Diagnostics.TraceLogRetentionOption logRetentionOption, int64 maximumFileSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String, bufferSize As Integer, logRetentionOption As TraceLogRetentionOption, maximumFileSize As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName, System::String ^ name, int bufferSize, System::Diagnostics::TraceLogRetentionOption logRetentionOption, long maximumFileSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="logRetentionOption" Type="System.Diagnostics.TraceLogRetentionOption" />
        <Parameter Name="maximumFileSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="33add-223">로그 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-223">The path for the log file.</span></span></param>
        <param name="name"><span data-ttu-id="33add-224">수신기의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-224">The name of the listener.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="33add-225">출력 버퍼의 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-225">The size of the output buffer, in bytes.</span></span></param>
        <param name="logRetentionOption"><span data-ttu-id="33add-226"><see cref="T:System.Diagnostics.TraceLogRetentionOption" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-226">One of the <see cref="T:System.Diagnostics.TraceLogRetentionOption" /> values.</span></span></param>
        <param name="maximumFileSize"><span data-ttu-id="33add-227">최대 파일 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-227">The maximum file size, in bytes.</span></span></param>
        <summary><span data-ttu-id="33add-228">지정된 로그 보존 정책 및 최대 크기가 있는 지정된 파일을 디버깅 및 추적 출력의 수신자로 사용하여, 지정된 이름 및 지정된 버퍼 크기로 <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-228">Initializes a new instance of the <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> class with the specified name and specified buffer size, using the specified file with the specified log retention policy and maximum size as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33add-229">성능 고려 사항에 대 한 `bufferSize` 및 `maximumFileSize` 1024 바이트의 배수 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-229">For performance considerations, `bufferSize` and `maximumFileSize` should be multiples of 1024 bytes.</span></span> <span data-ttu-id="33add-230">`maximumFileSize` 절대 값, 아니면 마지막 메시지의 크기까지 초과 될 수 있는 임계값입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-230">`maximumFileSize` is not an absolute value, it is a threshold which can be exceeded up to the size of the last message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33add-231">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%2CSystem.Diagnostics.TraceLogRetentionOption%2CSystem.Int64%29?displayProperty=nameWithType> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-231">The following code example demonstrates how to use the <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%2CSystem.Diagnostics.TraceLogRetentionOption%2CSystem.Int64%29?displayProperty=nameWithType> constructor.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener.Ctors#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/CS/program.cs#5)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/VB/program.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="33add-232"><paramref name="maximumFileSize" />가 음수입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-232"><paramref name="maximumFileSize" /> is a negative number.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName, string name, int bufferSize, System.Diagnostics.TraceLogRetentionOption logRetentionOption, long maximumFileSize, int maximumNumberOfFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name, int32 bufferSize, valuetype System.Diagnostics.TraceLogRetentionOption logRetentionOption, int64 maximumFileSize, int32 maximumNumberOfFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String, bufferSize As Integer, logRetentionOption As TraceLogRetentionOption, maximumFileSize As Long, maximumNumberOfFiles As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName, System::String ^ name, int bufferSize, System::Diagnostics::TraceLogRetentionOption logRetentionOption, long maximumFileSize, int maximumNumberOfFiles);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="logRetentionOption" Type="System.Diagnostics.TraceLogRetentionOption" />
        <Parameter Name="maximumFileSize" Type="System.Int64" />
        <Parameter Name="maximumNumberOfFiles" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="33add-233">로그 파일의 경로입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-233">The path for the log file.</span></span></param>
        <param name="name"><span data-ttu-id="33add-234">수신기의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-234">The name of the listener.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="33add-235">출력 버퍼의 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-235">The size of the output buffer, in bytes.</span></span></param>
        <param name="logRetentionOption"><span data-ttu-id="33add-236"><see cref="T:System.Diagnostics.TraceLogRetentionOption" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-236">One of the <see cref="T:System.Diagnostics.TraceLogRetentionOption" /> values.</span></span></param>
        <param name="maximumFileSize"><span data-ttu-id="33add-237">최대 파일 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-237">The maximum file size, in bytes.</span></span></param>
        <param name="maximumNumberOfFiles"><span data-ttu-id="33add-238">출력 로그 파일의 최대 수입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-238">The maximum number of output log files.</span></span></param>
        <summary><span data-ttu-id="33add-239">지정된 로그 보존 정책, 최대 크기 및 파일 개수가 있는 지정된 파일을 디버깅 및 추적 출력의 수신자로 사용하여, 지정된 이름 및 지정된 버퍼 크기로 <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-239">Initializes a new instance of the <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> class with the specified name and specified buffer size, using the specified file with the specified log retention policy, maximum size, and file count as the recipient of the debugging and tracing output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33add-240">성능 고려 사항에 대 한 `bufferSize` 및 `maximumFileSize` 1024 바이트의 배수 여야 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-240">For performance considerations, `bufferSize` and `maximumFileSize` should be multiples of 1024 bytes.</span></span> <span data-ttu-id="33add-241">`maximumFileSize` 절대 값; 않습니다. 마지막 메시지의 크기까지 초과할 수 임계값은</span><span class="sxs-lookup"><span data-stu-id="33add-241">`maximumFileSize` is not an absolute value; it is a threshold that can be exceeded up to the size of the last message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33add-242">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%2A> 생성자입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-242">The following code example demonstrates how to use the <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%2A> constructor.</span></span> <span data-ttu-id="33add-243">이 코드 예제는 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.EventSchemaTraceListener> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-243">This code example is part of a larger example that is provided for the <xref:System.Diagnostics.EventSchemaTraceListener> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#2)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="33add-244"><paramref name="maximumNumberOfFiles" />가 2보다 작고 <paramref name="logRetentionOption" />가 <see cref="F:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles" />입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-244"><paramref name="maximumNumberOfFiles" /> is less than 2, and <paramref name="logRetentionOption" /> is <see cref="F:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BufferSize">
      <MemberSignature Language="C#" Value="public int BufferSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.BufferSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BufferSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33add-245">출력 버퍼의 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="33add-245">Gets the size of the output buffer.</span></span></summary>
        <value><span data-ttu-id="33add-246">출력 버퍼의 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-246">The size of the output buffer, in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33add-247">속성 값에 의해 설정 되는 `bufferSize` 생성자에서 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-247">The property value is set by the `bufferSize` parameter in the constructor.</span></span> <span data-ttu-id="33add-248">성능상의 이유로 버퍼 크기는 1024 바이트의 배수 값으로 설정 되어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-248">For performance reasons, the buffer size should be set to a multiple of 1024 bytes.</span></span> <span data-ttu-id="33add-249">32 * 1024 바이트의 기본 크기 또는 64 권장\*최상의 성능을 위해 1024 바이트입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-249">We recommend either the default size of 32*1024 bytes or 64\*1024 bytes for best performance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33add-250">값을 표시 하는 방법은 다음 코드 예제는 <xref:System.Diagnostics.EventSchemaTraceListener.BufferSize%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-250">The following code example demonstrates how to display the value of the <xref:System.Diagnostics.EventSchemaTraceListener.BufferSize%2A> property.</span></span> <span data-ttu-id="33add-251">이 코드 예제는 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.EventSchemaTraceListener> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-251">This code example is part of a larger example that is provided for the <xref:System.Diagnostics.EventSchemaTraceListener> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#5)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33add-252">추적 또는 디버깅 출력을 더 이상 받지 않도록 이 수신기에 대한 로그 파일을 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="33add-252">Closes the log file for this listener so that it no longer receives tracing or debugging output.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="33add-253">쓸 기본 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-253">The basic error message to write.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="33add-254">기본 오류 메시지에 추가할 자세한 오류 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-254">The detailed error message to append to the basic error message.</span></span></param>
        <summary><span data-ttu-id="33add-255">기본 오류 메시지와 자세한 오류 메시지를 포함한 오류 정보를 로그 파일에 씁니다.</span><span class="sxs-lookup"><span data-stu-id="33add-255">Writes error information, including a basic error message and a detailed error message, to the log file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33add-256">이 수신기에 대한 로그에 버퍼링된 데이터를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="33add-256">Causes buffered data to be written to the log for this listener.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33add-257">추적 수신기가 지원하는 사용자 지정 XML 구성 특성을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="33add-257">Gets the custom XML configuration attributes that the trace listener supports.</span></span></summary>
        <returns><span data-ttu-id="33add-258">이 수신기가 인식하는 XML 구성 특성이 포함된 <see cref="T:System.String" /> 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-258">A <see cref="T:System.String" /> array that contains the XML configuration attributes recognized by this listener.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33add-259">인스턴스 동작을 제어 하는 XML 구성 파일에서 사용할 수이 메서드에 의해 반환 되는 사용자 지정 특성은 <xref:System.Diagnostics.EventSchemaTraceListener> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-259">The custom attributes that are returned by this method can be used in the XML configuration file to control the behavior of an instance of the <xref:System.Diagnostics.EventSchemaTraceListener> class.</span></span> <span data-ttu-id="33add-260">다른 특성을 사용 하면 구성 예외가 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-260">Using any other attribute causes a configuration exception.</span></span> <span data-ttu-id="33add-261"><xref:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes%2A> 에 대 한 메서드는 <xref:System.Diagnostics.EventSchemaTraceListener> 다음 문자열 배열 값을 반환: "bufferSize", "logRetentionOption", "최적화" 및 "생성자"입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-261">The <xref:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes%2A> method for the <xref:System.Diagnostics.EventSchemaTraceListener> returns the following string array values: "bufferSize", "logRetentionOption", "maximumFileSize", and "maximumNumberOfFiles".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsThreadSafe">
      <MemberSignature Language="C#" Value="public override bool IsThreadSafe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsThreadSafe" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsThreadSafe As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsThreadSafe { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33add-262">추적 수신기가 스레드로부터 안전한지 여부를 나타내는 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="33add-262">Gets a value indicating whether the trace listener is thread safe.</span></span></summary>
        <value><span data-ttu-id="33add-263">항상 <see langword="true" />를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-263">Always returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="33add-264">값을 표시 하는 방법은 다음 코드 예제는 <xref:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-264">The following code example demonstrates how to display the value of the <xref:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe%2A> property.</span></span> <span data-ttu-id="33add-265">이 코드 예제는 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.EventSchemaTraceListener> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-265">This code example is part of a larger example that is provided for the <xref:System.Diagnostics.EventSchemaTraceListener> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#4)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumFileSize">
      <MemberSignature Language="C#" Value="public long MaximumFileSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumFileSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumFileSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumFileSize { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33add-266">로그 파일의 최대 크기를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="33add-266">Gets the maximum size of the log file.</span></span></summary>
        <value><span data-ttu-id="33add-267">최대 파일 크기(바이트)입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-267">The maximum file size, in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33add-268">속성 값을 설정한는 `maximumFileSize` 생성자에서 매개 변수 또는 `maximumFileSize` 구성 파일에는 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-268">The property value is set by the `maximumFileSize` parameter in the constructor or the `maximumFileSize` attribute in the configuration file.</span></span> <span data-ttu-id="33add-269">성능상의 이유로 1024 바이트의 배수를 최대 파일 크기를 설정 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-269">For performance reasons, you should set the maximum file size to a multiple of 1024 bytes.</span></span> <span data-ttu-id="33add-270"><xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A> 속성 값이 절대; 임계값 크기 마지막 메시지의 최대 초과할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="33add-270">The <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A> property value is not an absolute; it is a threshold that can be exceeded up to the size of the last message.</span></span>  
  
 <span data-ttu-id="33add-271">다음 표에서 가능한 값과 기본값 파일 크기에 대 한 연결 된 각 추적 로그 보존 기간 옵션을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="33add-271">The following table shows the possible and default values for file size that are associated with each trace log retention option.</span></span> <span data-ttu-id="33add-272">N/A로 표시 된 값을 표시 하는 <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A> 해당 속성은 확인 되지 <xref:System.Diagnostics.TraceLogRetentionOption> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-272">The values marked as N/A indicate that the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A> property is not checked for that <xref:System.Diagnostics.TraceLogRetentionOption> value.</span></span>  
  
|<span data-ttu-id="33add-273">TraceLogRetentionOption</span><span class="sxs-lookup"><span data-stu-id="33add-273">TraceLogRetentionOption</span></span>|<span data-ttu-id="33add-274">최대 파일 크기</span><span class="sxs-lookup"><span data-stu-id="33add-274">Maximum file size</span></span>|<span data-ttu-id="33add-275">기본 파일 크기</span><span class="sxs-lookup"><span data-stu-id="33add-275">Default file size</span></span>|  
|-----------------------------|-----------------------|-----------------------|  
|<xref:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles>|<span data-ttu-id="33add-276">N/A</span><span class="sxs-lookup"><span data-stu-id="33add-276">N/A</span></span>|<span data-ttu-id="33add-277">-1</span><span class="sxs-lookup"><span data-stu-id="33add-277">-1</span></span>|  
|<xref:System.Diagnostics.TraceLogRetentionOption.LimitedSequentialFiles>|<span data-ttu-id="33add-278">>0</span><span class="sxs-lookup"><span data-stu-id="33add-278">>0</span></span>|<span data-ttu-id="33add-279">4KB</span><span class="sxs-lookup"><span data-stu-id="33add-279">4 KB</span></span>|  
|<xref:System.Diagnostics.TraceLogRetentionOption.SingleFileBoundedSize>|<span data-ttu-id="33add-280">>0</span><span class="sxs-lookup"><span data-stu-id="33add-280">>0</span></span>|<span data-ttu-id="33add-281">4KB</span><span class="sxs-lookup"><span data-stu-id="33add-281">4 KB</span></span>|  
|<xref:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize>|<span data-ttu-id="33add-282">>0</span><span class="sxs-lookup"><span data-stu-id="33add-282">>0</span></span>|<span data-ttu-id="33add-283">4KB</span><span class="sxs-lookup"><span data-stu-id="33add-283">4 KB</span></span>|  
|<xref:System.Diagnostics.TraceLogRetentionOption.UnlimitedSequentialFiles>|<span data-ttu-id="33add-284">>0</span><span class="sxs-lookup"><span data-stu-id="33add-284">>0</span></span>|<span data-ttu-id="33add-285">4KB</span><span class="sxs-lookup"><span data-stu-id="33add-285">4 KB</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33add-286">값을 표시 하는 방법은 다음 코드 예제는 <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-286">The following code example demonstrates how to display the value of the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A> property.</span></span> <span data-ttu-id="33add-287">이 코드 예제는 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.EventSchemaTraceListener> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-287">This code example is part of a larger example that is provided for the <xref:System.Diagnostics.EventSchemaTraceListener> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#6)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumNumberOfFiles">
      <MemberSignature Language="C#" Value="public int MaximumNumberOfFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumNumberOfFiles" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumNumberOfFiles As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumNumberOfFiles { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33add-288">로그 파일의 최대 수를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="33add-288">Gets the maximum number of log files.</span></span></summary>
        <value><span data-ttu-id="33add-289">로그 파일의 최대 수이며 파일의 <see cref="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption" /> 속성 값에 의해 결정됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-289">The maximum number of log files, determined by the value of the <see cref="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption" /> property for the file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33add-290">속성 값을 설정한는 `maximumNumberOfFiles` 생성자에서 매개 변수 또는 `maximumNumberOfFiles` 구성 파일에는 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-290">The property value is set by the `maximumNumberOfFiles` parameter in the constructor or the `maximumNumberOfFiles` attribute in the configuration file.</span></span>  
  
 <span data-ttu-id="33add-291">다음 표에서 가능한 값과 기본값 파일 크기 및 파일 개수에 대 한 연결 된 각 추적 로그 보존 기간 옵션을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="33add-291">The following table shows the possible and default values for file size and file count that are associated with each trace log retention option.</span></span> <span data-ttu-id="33add-292">N/A로 표시 된 값을 표시 하는 <xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A> 해당 속성은 확인 되지 <xref:System.Diagnostics.TraceLogRetentionOption> 값입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-292">The values marked as N/A indicate that the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A> property is not checked for that <xref:System.Diagnostics.TraceLogRetentionOption> value.</span></span>  
  
|<span data-ttu-id="33add-293">TraceLogRetentionOption</span><span class="sxs-lookup"><span data-stu-id="33add-293">TraceLogRetentionOption</span></span>|<span data-ttu-id="33add-294">최대 파일 수</span><span class="sxs-lookup"><span data-stu-id="33add-294">Maximum number of files</span></span>|<span data-ttu-id="33add-295">기본 파일 수</span><span class="sxs-lookup"><span data-stu-id="33add-295">Default number of files</span></span>|  
|-----------------------------|-----------------------------|-----------------------------|  
|<xref:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles>|<span data-ttu-id="33add-296">N/A</span><span class="sxs-lookup"><span data-stu-id="33add-296">N/A</span></span>|<span data-ttu-id="33add-297">1</span><span class="sxs-lookup"><span data-stu-id="33add-297">1</span></span>|  
|<xref:System.Diagnostics.TraceLogRetentionOption.LimitedSequentialFiles>|<span data-ttu-id="33add-298">N/A</span><span class="sxs-lookup"><span data-stu-id="33add-298">N/A</span></span>|<span data-ttu-id="33add-299">1</span><span class="sxs-lookup"><span data-stu-id="33add-299">1</span></span>|  
|<xref:System.Diagnostics.TraceLogRetentionOption.SingleFileBoundedSize>|<span data-ttu-id="33add-300">N/A</span><span class="sxs-lookup"><span data-stu-id="33add-300">N/A</span></span>|<span data-ttu-id="33add-301">-1</span><span class="sxs-lookup"><span data-stu-id="33add-301">-1</span></span>|  
|<xref:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize>|<span data-ttu-id="33add-302">>0</span><span class="sxs-lookup"><span data-stu-id="33add-302">>0</span></span>|<span data-ttu-id="33add-303">1</span><span class="sxs-lookup"><span data-stu-id="33add-303">1</span></span>|  
|<xref:System.Diagnostics.TraceLogRetentionOption.UnlimitedSequentialFiles>|<span data-ttu-id="33add-304">>1</span><span class="sxs-lookup"><span data-stu-id="33add-304">>1</span></span>|<span data-ttu-id="33add-305">2</span><span class="sxs-lookup"><span data-stu-id="33add-305">2</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33add-306">값을 표시 하는 방법은 다음 코드 예제는 <xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-306">The following code example demonstrates how to display the value of the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A> property.</span></span> <span data-ttu-id="33add-307">이 코드 예제는 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.EventSchemaTraceListener> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-307">This code example is part of a larger example that is provided for the <xref:System.Diagnostics.EventSchemaTraceListener> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#7)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="33add-308">로그 파일에 추적 데이터를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="33add-308">Writes trace data to the log file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="33add-309">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" />입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-309">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="33add-310">소스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-310">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="33add-311"><see cref="T:System.Diagnostics.TraceEventType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-311">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="33add-312">이벤트의 숫자 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-312">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="33add-313">내보낼 데이터 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-313">A data object to emit.</span></span></param>
        <summary><span data-ttu-id="33add-314">로그 파일에 추적 정보, 단일 데이터 개체 및 이벤트 정보를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="33add-314">Writes trace information, a single data object, and event information to the log file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33add-315">`eventCache`, `source`, `eventType`, 및 `id` 머리글 및 추적의 바닥글에 매개 변수가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-315">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="33add-316">`id` 쓰기 전에 매개 변수를 부호 없는 정수로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-316">The `id` parameter is converted to an unsigned integer before it is written.</span></span> <span data-ttu-id="33add-317">따라서 음수 `id` 큰 양의 정수 값이 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-317">Therefore, a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="33add-318">`data` 매개 변수는로 작성 한 `Data` 의 노드는 `UserData` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-318">The `data` parameter is written as a `Data` node in the `UserData` element.</span></span> <span data-ttu-id="33add-319">`ToString` 데이터 개체의 메서드는 개체를 문자열로 변환 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-319">The `ToString` method of the data object is used to convert the object to a string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="33add-320">이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="33add-320">This method is not intended to be called directly by application code.</span></span> <span data-ttu-id="33add-321">메서드에 의해 호출 됩니다는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 추적 데이터를 작성 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-321">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="33add-322">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" />입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-322">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="33add-323">소스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-323">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="33add-324"><see cref="T:System.Diagnostics.TraceEventType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-324">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="33add-325">이벤트의 숫자 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-325">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="33add-326">내보낼 데이터 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-326">An array of data objects to emit.</span></span></param>
        <summary><span data-ttu-id="33add-327">로그 파일에 추적 정보, 여러 개의 데이터 개체 및 이벤트 정보를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="33add-327">Writes trace information, multiple data objects, and event information to the log file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33add-328">`eventCache`, `source`, `eventType`, 및 `id` 머리글 및 추적의 바닥글에 매개 변수가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-328">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="33add-329">`id` 쓰기 전에 매개 변수를 부호 없는 정수로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-329">The `id` parameter is converted to an unsigned integer before it is written.</span></span> <span data-ttu-id="33add-330">따라서 음수 `id` 큰 양의 정수 값이 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-330">Therefore, a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="33add-331">개체는 `data` 매개 변수 배열으로 작성 되 `Data` 의 노드는 `UserData` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-331">The objects in the `data` parameter array are written as `Data` nodes in the `UserData` element.</span></span> <span data-ttu-id="33add-332">`ToString` 각 데이터 개체의 메서드는 개체를 문자열로 변환 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-332">The `ToString` method of each data object is used to convert the object to a string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="33add-333">이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="33add-333">This method is not intended to be called directly by application code.</span></span> <span data-ttu-id="33add-334">메서드에 의해 호출 됩니다는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 추적 데이터를 작성 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-334">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="33add-335">로그 파일에 이벤트 추적 정보를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="33add-335">Writes event trace information to the log file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="33add-336">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" />입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-336">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="33add-337">소스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-337">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="33add-338"><see cref="T:System.Diagnostics.TraceEventType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-338">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="33add-339">이벤트의 숫자 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-339">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="33add-340">쓸 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-340">The message to write.</span></span></param>
        <summary><span data-ttu-id="33add-341">로그 파일에 추적 정보, 메시지 및 이벤트 정보를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="33add-341">Writes trace information, a message, and event information to the log file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33add-342">`eventCache`, `source`, `eventType`, 및 `id` 머리글 및 추적의 바닥글에 매개 변수가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-342">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="33add-343">`id` 쓰기 전에 매개 변수를 부호 없는 정수로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-343">The `id` parameter is converted to an unsigned integer before it is written.</span></span> <span data-ttu-id="33add-344">따라서 음수 `id` 큰 양의 정수 값이 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-344">Therefore, a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="33add-345">`message` 매개 변수는로 작성 한 `Data` 의 노드는 `EventData` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-345">The `message` parameter is written as a `Data` node in the `EventData` element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="33add-346">이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="33add-346">This method is not intended to be called directly by application code.</span></span> <span data-ttu-id="33add-347">메서드에 의해 호출 됩니다는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 추적 데이터를 작성 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-347">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="33add-348">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" />입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-348">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="33add-349">소스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-349">The source name.</span></span></param>
        <param name="eventType"><span data-ttu-id="33add-350"><see cref="T:System.Diagnostics.TraceEventType" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-350">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span></span></param>
        <param name="id"><span data-ttu-id="33add-351">이벤트의 숫자 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-351">A numeric identifier for the event.</span></span></param>
        <param name="format"><span data-ttu-id="33add-352"><c>args</c> 배열에 들어 있는 개체에 해당하는 0개 이상의 형식 항목이 포함된 형식 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-352">A format string that contains zero or more format items that correspond to objects in the <c>args</c> array.</span></span></param>
        <param name="args"><span data-ttu-id="33add-353">형식을 지정할 개체를 0개 이상 포함하는 개체 배열입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-353">An object array that contains zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="33add-354">로그 파일에 추적 정보, 형식이 지정된 메시지 및 이벤트 정보를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="33add-354">Writes trace information, a formatted message, and event information to the log file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33add-355">`eventCache`, `source`, `eventType`, 및 `id` 머리글 및 추적의 바닥글에 매개 변수가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-355">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="33add-356">`id` 쓰기 전에 매개 변수를 부호 없는 정수로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-356">The `id` parameter is converted to an unsigned integer before it is written.</span></span> <span data-ttu-id="33add-357">따라서 음수 `id` 큰 양의 정수 값이 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-357">Therefore, a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="33add-358"><xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> 메서드가 호출 되 고 `format` 문자열 및 `args` 배열 매개 변수로 전달 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-358">The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method is called and the `format` string and `args` array are passed in as parameters.</span></span> <span data-ttu-id="33add-359">이 메서드는 형식을 `args` 개체 배열 형식이 지정 된 배열을로 씁니다는 `Data` 의 노드는 `EventData` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-359">This method formats the `args` object array and writes the formatted array as the `Data` node in the `EventData` element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="33add-360">이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="33add-360">This method is not intended to be called directly by application code.</span></span> <span data-ttu-id="33add-361">메서드에 의해 호출 됩니다는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 추적 데이터를 작성 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-361">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceLogRetentionOption">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceLogRetentionOption TraceLogRetentionOption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.TraceLogRetentionOption TraceLogRetentionOption" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceLogRetentionOption As TraceLogRetentionOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceLogRetentionOption TraceLogRetentionOption { System::Diagnostics::TraceLogRetentionOption get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceLogRetentionOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33add-362">파일에 대한 추적 로그 보존 옵션을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="33add-362">Gets the trace log retention option for the file.</span></span></summary>
        <value><span data-ttu-id="33add-363"><see cref="T:System.Diagnostics.TraceLogRetentionOption" /> 값 중 하나입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-363">One of the <see cref="T:System.Diagnostics.TraceLogRetentionOption" /> values.</span></span> <span data-ttu-id="33add-364">기본값은 <see cref="F:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize" />입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-364">The default is <see cref="F:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="33add-365">값을 표시 하는 방법은 다음 코드 예제는 <xref:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-365">The following code example demonstrates how to display the value of the <xref:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption%2A> property.</span></span> <span data-ttu-id="33add-366">이 코드 예제는 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.EventSchemaTraceListener> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-366">This code example is part of a larger example that is provided for the <xref:System.Diagnostics.EventSchemaTraceListener> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#9)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public override void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="33add-367">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <see cref="T:System.Diagnostics.TraceEventCache" />입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-367">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="33add-368">소스 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-368">The source name.</span></span></param>
        <param name="id"><span data-ttu-id="33add-369">이벤트의 숫자 식별자입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-369">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="33add-370">쓸 추적 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-370">A trace message to write.</span></span></param>
        <param name="relatedActivityId"><span data-ttu-id="33add-371">관련 작업을 식별하는 <see cref="T:System.Guid" /> 구조체입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-371">A <see cref="T:System.Guid" /> structure that identifies a related activity.</span></span></param>
        <summary><span data-ttu-id="33add-372">로그 파일에 관련 작업 ID가 포함된 추적 정보와 메시지, 이벤트 정보를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="33add-372">Writes trace information, including the identity of a related activity, a message, and event information, to the log file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33add-373"><xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A> 메서드 관련된 추적을 상호 연결 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-373">The <xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A> method is used to correlate related traces.</span></span> <span data-ttu-id="33add-374">`eventCache`, `source`, `id`, 및 `relatedActivityId` 머리글 및 추적의 바닥글에 매개 변수가 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-374">The `eventCache`, `source`, `id`, and `relatedActivityId` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="33add-375">`id` 쓰기 전에 매개 변수를 부호 없는 정수로 변환 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-375">The `id` parameter is converted to an unsigned integer before it is written.</span></span> <span data-ttu-id="33add-376">따라서 음수 `id` 큰 양의 정수 값이 기록 됩니다.</span><span class="sxs-lookup"><span data-stu-id="33add-376">Therefore, a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="33add-377">`message` 매개 변수는로 작성 된 `Data` 요소입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-377">The `message` parameter is written as the `Data` element.</span></span> <span data-ttu-id="33add-378"><xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> 메서드는 변환 하는 `relatedActivityId` "B"로 값의 머리글에 표시 된 문자열을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-378">The <xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> method is called to convert the `relatedActivityId` value to a "B" formatted string, which appears in the header.</span></span> <span data-ttu-id="33add-379">`Opcode` 요소 바닥글에 추적 이벤트 유형으로 식별 한 <xref:System.Diagnostics.TraceEventType.Transfer>합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-379">The `Opcode` element in the footer identifies the trace event type as a <xref:System.Diagnostics.TraceEventType.Transfer>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="33add-380"><xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A> 응용 프로그램 코드에서 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-380">The <xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A> method should not be called by application code.</span></span> <span data-ttu-id="33add-381">사용 하는 것을 <xref:System.Diagnostics.TraceSource> 개체에 대 한 추적 정보를 내보내려면 해당 <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="33add-381">It is intended to be used by a <xref:System.Diagnostics.TraceSource> object to emit the trace information for its <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="33add-382">쓸 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-382">The message to write.</span></span></param>
        <summary><span data-ttu-id="33add-383">추가 컨텍스트 정보를 제공하지 않고 로그 파일에 메시지를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="33add-383">Writes a message to the log file without providing any additional context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33add-384"><xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A> 메서드를 호출 하는 로그로 메시지를 한 <xref:System.Diagnostics.TraceEventType.Information> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-384">The <xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A> method is called to log the message as an <xref:System.Diagnostics.TraceEventType.Information> event.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="33add-385">이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="33add-385">This method is not intended to be called directly by application code.</span></span> <span data-ttu-id="33add-386">메서드에 의해 호출 됩니다는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 추적 데이터를 작성 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-386">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="33add-387">쓸 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-387">The message to write.</span></span></param>
        <summary><span data-ttu-id="33add-388">추가 컨텍스트 정보를 제공하지 않고 로그 파일에 메시지와 현재 줄 종결자를 씁니다.</span><span class="sxs-lookup"><span data-stu-id="33add-388">Writes a message followed by the current line terminator to the log file without providing any additional context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33add-389"><xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A> 메서드를 호출 하는 로그로 메시지를 한 <xref:System.Diagnostics.TraceEventType.Information> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-389">The <xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A> method is called to log the message as an <xref:System.Diagnostics.TraceEventType.Information> event.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="33add-390">이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="33add-390">This method is not intended to be called directly by application code.</span></span> <span data-ttu-id="33add-391">메서드에 의해 호출 됩니다는 <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, 및 <xref:System.Diagnostics.TraceSource> 추적 데이터를 작성 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-391">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Writer">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Writer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Writer" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.Writer" />
      <MemberSignature Language="VB.NET" Value="Public Property Writer As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Writer { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33add-392">로그 파일에 쓰는 기본 텍스트 기록기를 가져오거나 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-392">Gets or sets the underlying text writer that writes to the log file.</span></span></summary>
        <value><span data-ttu-id="33add-393"><see cref="T:System.IO.TextWriter" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="33add-393">A <see cref="T:System.IO.TextWriter" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33add-394">에 대 한 set 접근자를 사용 하려는 시도가 <xref:System.Diagnostics.EventSchemaTraceListener.Writer%2A> 속성 발생 한 <xref:System.NotSupportedException>합니다.</span><span class="sxs-lookup"><span data-stu-id="33add-394">An attempt to use the set accessor for the <xref:System.Diagnostics.EventSchemaTraceListener.Writer%2A> property raises a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="33add-395"><see cref="P:System.Diagnostics.EventSchemaTraceListener.Writer" /> 속성에 값을 할당하려고 한 경우</span><span class="sxs-lookup"><span data-stu-id="33add-395">An attempt was made to assign a value to the <see cref="P:System.Diagnostics.EventSchemaTraceListener.Writer" /> property.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>