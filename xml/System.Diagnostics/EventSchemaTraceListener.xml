<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventSchemaTraceListener.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b857fe3" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2eccf4de-4b1c-4706-8cb3-f46682ccfb72abdcf6aaf89cf211719c282b059b7c15b4d68ff5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">abdcf6aaf89cf211719c282b059b7c15b4d68ff5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b15b8cf0f6dbc1504057c88969d9ef4b790891fe</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/11/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Directs tracing or debugging output of end-to-end events to an XML-encoded, schema-compliant log file.</source>
          <target state="translated">종단 간 이벤트의 추적 또는 디버깅 출력을 XML로 인코딩된 스키마 규격 로그 파일에 연결합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> class provides tracing of end-to-end schema-compliant events.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> 클래스는 종단 간 스키마를 준수 하는 이벤트의 추적을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>You can use end-to-end tracing for a system that has heterogeneous components that cross thread, <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>, process, and computer boundaries.</source>
          <target state="translated">스레드 간 있는 시스템에 대 한 종단 간 추적을 사용할 수 있습니다 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>, 프로세스 및 컴퓨터 경계입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>A standardized event schema (see <bpt id="p1">[</bpt>Event Representation for Event Consumers<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=78955)</ept>) has been defined to enable tracing across these boundaries.</source>
          <target state="translated">표준화 된 이벤트 스키마 (참조 <bpt id="p1">[</bpt>이벤트 소비자에 대 한 이벤트 표현<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=78955)</ept>)에서 이러한 경계를 넘어 추적을 사용 하도록 정의 되어 있는 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>The schema enables the addition of custom, schema-compliant elements.</source>
          <target state="translated">스키마에 사용자 지정, 스키마를 준수 하는 요소를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>You can use the <bpt id="p1">[</bpt>Service Trace Viewer Tool (SvcTraceViewer.exe)<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=240129)</ept> to display the event data.</source>
          <target state="translated">사용할 수는 <bpt id="p1">[</bpt>Service Trace Viewer 도구 (SvcTraceViewer.exe)<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=240129)</ept> 이벤트 데이터를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> is tuned for logging performance with implicit support for lock-free tracing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> 암시적으로 지원 하며 추적 잠금 해제에 대 한 로깅 성능에 대 한 조정 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> class converts tracing and debugging information into an XML-encoded text stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> 클래스는 추적 및 디버깅 정보를 XML로 인코딩된 텍스트 스트림으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>The description of the XML output is shown in the tables later in this section.</source>
          <target state="translated">XML 출력의 설명이이 섹션의 뒷부분에 나오는 표에 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>You can enable or disable an <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> object through the application configuration file, and then use the configured <ph id="ph2">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> object in your application.</source>
          <target state="translated">활성화 하거나 비활성화할 수는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> 응용 프로그램 구성 파일을 통해 개체를 사용 하 여 구성 된 <ph id="ph2">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> 응용 프로그램의 개체입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Alternately, you can create an <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> object in your code.</source>
          <target state="translated">또한 만들 수는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> 코드에서이 개체입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>We recommend that you enable trace listeners through the application configuration file.</source>
          <target state="translated">응용 프로그램 구성 파일을 통해 추적 수신기를 사용 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>For information about the use of configuration files for tracing and debugging, see <bpt id="p1">[</bpt>Trace and Debug Settings Schema<ept id="p1">](http://msdn.microsoft.com/library/277ca5f6-e1c4-41b6-a47f-3a67ce5b94ac)</ept>.</source>
          <target state="translated">추적 및 디버깅에 대 한 구성 파일의 사용에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>추적 및 디버그 설정 스키마<ept id="p1">](http://msdn.microsoft.com/library/277ca5f6-e1c4-41b6-a47f-3a67ce5b94ac)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>To configure an <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> object, modify the configuration file that corresponds to the name of your application.</source>
          <target state="translated">구성 하는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> 개체, 응용 프로그램의 이름에 해당 하는 구성 파일을 수정 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>In this file, you can add, remove, or set the properties for a listener.</source>
          <target state="translated">이 파일에 추가, 제거 또는 수신기의 속성을 설정 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>The configuration file should be formatted as follows:</source>
          <target state="translated">구성 파일 형식은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> class inherits the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.Filter%2A&gt;</ph> property from the base class <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> 클래스 상속의 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.Filter%2A&gt;</ph> 기본 클래스에서 속성 <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Filter%2A&gt;</ph> property allows for an additional level of trace output filtering at the listener.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Filter%2A&gt;</ph> 수신기에서 필터링 하는 추적 출력의 추가 수준을 대 한 속성을 사용 하면 됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>If a filter is present, the <ph id="ph1">`Trace`</ph> methods of the trace listener call the <ph id="ph2">&lt;xref:System.Diagnostics.TraceFilter.ShouldTrace%2A&gt;</ph> method of the filter to determine whether to emit the trace.</source>
          <target state="translated">필터는 사용할 수 있는 경우는 <ph id="ph1">`Trace`</ph> 추적 수신기 호출의 메서드는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceFilter.ShouldTrace%2A&gt;</ph> 메서드는 필터는 추적을 내보낼지 여부를 결정 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>If an attempt is made to write to a file that is being used or is unavailable, a GUID suffix is automatically added to the file name.</source>
          <target state="translated">사용 되 고 있거나 사용할 수 없는 파일에 기록 하려고 하는 경우 GUID 접미사가 파일 이름에 자동으로 추가 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Listener methods are intended to be called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes.</source>
          <target state="translated">수신기 방법은 대상의 메서드에 의해 호출 되는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Do not call the listener methods directly from application code.</source>
          <target state="translated">응용 프로그램 코드에서 직접 수신기 메서드를 호출 하지 마십시오.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> listener is primarily intended for use by the <ph id="ph2">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> 수신기는에서 사용 하기 위해 주로 <ph id="ph2">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>The following table describes the elements and attributes of the XML output.</source>
          <target state="translated">다음 표에서 XML 출력의 특성과 해당 요소를 설명합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Attributes</source>
          <target state="translated">특성</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Output</source>
          <target state="translated">출력</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Notes</source>
          <target state="translated">노트</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">존재 여부에 따라 달라 집니다는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> 플래그는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Special characters such as &gt; or &lt; are replaced with escape sequences.</source>
          <target state="translated">와 같은 특수 문자 &gt; 또는 &lt;를 이스케이프 시퀀스로 대체 됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>See the escaped character translation table in the next table.</source>
          <target state="translated">다음 테이블에 이스케이프 된 문자 변환 표를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Always present.</source>
          <target state="translated">항상 존재 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>This element represents the value of the <ph id="ph1">&lt;xref:System.Environment.MachineName%2A&gt;</ph> property.</source>
          <target state="translated">이 요소 값을 나타내는 <ph id="ph1">&lt;xref:System.Environment.MachineName%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Always present.</source>
          <target state="translated">항상 존재 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>If <ph id="ph1">`ActivityID`</ph> is not specified, the default is an empty GUID.</source>
          <target state="translated">경우 <ph id="ph1">`ActivityID`</ph> 을 지정 하지 않으면 기본값은 빈 GUID입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Depends on the presence of the <ph id="ph1">`relatedActivityId`</ph> parameter in the <ph id="ph2">`Trace`</ph> method call.</source>
          <target state="translated">존재 여부에 따라 달라 집니다는 <ph id="ph1">`relatedActivityId`</ph> 에서 매개 변수는 <ph id="ph2">`Trace`</ph> 메서드를 호출 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>The <ph id="ph1">`RelatedActivityID`</ph> attribute corresponds to the <ph id="ph2">`relatedActivityId`</ph> parameter of the <ph id="ph3">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`RelatedActivityID`</ph> 특성에 해당 하는 <ph id="ph2">`relatedActivityId`</ph> 의 매개 변수는 <ph id="ph3">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Always present.</source>
          <target state="translated">항상 존재 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>This element represents parameter input (<ph id="ph1">`data`</ph>).</source>
          <target state="translated">이 요소는 매개 변수 입력을 나타냅니다 (<ph id="ph1">`data`</ph>).</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>One element is provided for each data object.</source>
          <target state="translated">각 데이터 개체에 대해 하나의 요소가 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>In the case of event logs, the <ph id="ph1">`Data`</ph> element contains escaped XML data.</source>
          <target state="translated">이벤트 로그의 경우는 <ph id="ph1">`Data`</ph> 요소 이스케이프 된 XML 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>In the case of data logs, the <ph id="ph1">`Data`</ph> element contains unescaped data.</source>
          <target state="translated">로그 데이터의 경우는 <ph id="ph1">`Data`</ph> 요소 이스케이프 되지 않은 데이터를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>The data log output uses the <ph id="ph1">`ToString`</ph> method of the passed-in data objects.</source>
          <target state="translated">데이터에 사용 하 여 출력 로그는 <ph id="ph1">`ToString`</ph> 전달 된 데이터 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Always present.</source>
          <target state="translated">항상 존재 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>This element contains a trace event.</source>
          <target state="translated">이 요소는 추적 이벤트를 포함합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Present for event logs.</source>
          <target state="translated">이벤트 로그의 경우입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>This element represents parameter input (<ph id="ph1">`message`</ph>, <ph id="ph2">`args`</ph>).</source>
          <target state="translated">이 요소는 매개 변수 입력을 나타냅니다 (<ph id="ph1">`message`</ph>, <ph id="ph2">`args`</ph>).</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>It contains <ph id="ph1">`Data`</ph> elements with escaped XML data that is created by calling the <ph id="ph2">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A&gt;</ph> method.</source>
          <target state="translated">포함 된 <ph id="ph1">`Data`</ph> 요소를 호출 하 여 만든 이스케이프 된 XML 데이터는 <ph id="ph2">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Always present.</source>
          <target state="translated">항상 존재 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>This element represents parameter input (<ph id="ph1">`id`</ph>).</source>
          <target state="translated">이 요소는 매개 변수 입력을 나타냅니다 (<ph id="ph1">`id`</ph>).</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">존재 여부에 따라 달라 집니다는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> 플래그는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>The <ph id="ph1">`ProcessID`</ph> attribute is specified in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`ProcessID`</ph> 특성에 지정 된는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>On the Microsoft Windows 98 and Windows Millenium Edition operating systems, if <ph id="ph1">`ProcessID`</ph> is larger than 2,147,483,647, it is a positive representation of a negative number and should be converted to obtain the correct process identifier.</source>
          <target state="translated">Microsoft Windows 98 및 Windows 밀레니엄 Edition 운영 체제의 경우 <ph id="ph1">`ProcessID`</ph> , 2147483647 보다 큰 음수를 양의 표현인 하 고 올바른 프로세스 식별자를 가져오려면 변환 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Present when <ph id="ph1">`ProcessID`</ph> is present.</source>
          <target state="translated">있는 경우 <ph id="ph1">`ProcessID`</ph> 있는 합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>The <ph id="ph1">`ThreadID`</ph> attribute is specified in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`ThreadID`</ph> 특성에 지정 된는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Always present.</source>
          <target state="translated">항상 존재 합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>This element represents parameter input (the numeric value of <ph id="ph1">`eventType`</ph>).</source>
          <target state="translated">이 요소는 매개 변수 입력을 나타냅니다 (의 숫자 값 <ph id="ph1">`eventType`</ph>).</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Parameter values that are larger than 255 are output as a level 8, which represents <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">255 보다 큰 경우에 매개 변수 값은 8, 수준으로 나타내는 출력 <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Trace event types <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventType.Critical&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.TraceEventType.Error&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Warning&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.TraceEventType.Information&gt;</ph>, and <ph id="ph5">&lt;xref:System.Diagnostics.TraceEventType.Verbose&gt;</ph> are output as levels 1, 2, 4, 8, and 10, respectively.</source>
          <target state="translated">추적 이벤트 형식 <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventType.Critical&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.TraceEventType.Error&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Warning&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.TraceEventType.Information&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Diagnostics.TraceEventType.Verbose&gt;</ph> 는 각각 1, 2, 4, 8 및 10, 수준으로 출력 됩니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">존재 여부에 따라 달라 집니다는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> 플래그는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Only one logical operation can exist.</source>
          <target state="translated">논리 작업을 하나만 존재할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Therefore, the values are written as <ph id="ph1">`LogicalOperation`</ph> nodes under the <ph id="ph2">`LogicalOperationStack`</ph> element.</source>
          <target state="translated">따라서 이러한 값을 기록으로 <ph id="ph1">`LogicalOperation`</ph> 아래의 노드는 <ph id="ph2">`LogicalOperationStack`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Present when <ph id="ph1">`Level`</ph> is greater than 255.</source>
          <target state="translated">있는 경우 <ph id="ph1">`Level`</ph> 가 255 자를 초과 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>This element represents Trace event types that have numeric values greater than 255.</source>
          <target state="translated">이 요소는 추적 이벤트 유형의 255 보다 큰 숫자 값을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.TraceEventType.Start&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.TraceEventType.Stop&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Suspend&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.TraceEventType.Resume&gt;</ph>, or <ph id="ph5">&lt;xref:System.Diagnostics.TraceEventType.Transfer&gt;</ph> are output as levels 1, 2, 4, 8, and 10, respectively.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceEventType.Start&gt;</ph><ph id="ph2">&lt;xref:System.Diagnostics.TraceEventType.Stop&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Suspend&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.TraceEventType.Resume&gt;</ph>, 또는 <ph id="ph5">&lt;xref:System.Diagnostics.TraceEventType.Transfer&gt;</ph> 는 각각 1, 2, 4, 8 및 10, 수준으로 출력 됩니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Always present.</source>
          <target state="translated">항상 존재 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Always empty.</source>
          <target state="translated">항상 비어 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Always present.</source>
          <target state="translated">항상 존재 합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>This attribute represents a resource string for the event type.</source>
          <target state="translated">이 특성에는 이벤트 유형에 대 한 리소스 문자열을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>It is always "en-EN<ph id="ph1">\\</ph>".</source>
          <target state="translated">이 패턴은 항상 "en EN<ph id="ph1">\\</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Always present.</source>
          <target state="translated">항상 존재 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">존재 여부에 따라 달라 집니다는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> 플래그는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>The time is the value of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">값에 <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>This property is expressed as Coordinated Universal Time</source>
          <target state="translated">이 속성은 협정 세계시로 표현 됩니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">존재 여부에 따라 달라 집니다는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> 플래그는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>This element is specified in the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph>.</source>
          <target state="translated">이 요소에 지정 된는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Present for data logs.</source>
          <target state="translated">데이터 로그를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>This element contains <ph id="ph1">`Data`</ph> elements with unescaped, user-provided data from a <ph id="ph2">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A&gt;</ph> method.</source>
          <target state="translated">이 요소는 포함 <ph id="ph1">`Data`</ph> 에서 이스케이프 되지 않은, 사용자가 제공한 데이터를 사용 하 여 요소는 <ph id="ph2">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>The following table shows the characters that are escaped in the XML output.</source>
          <target state="translated">다음 표에서 XML 출력에는 이스케이프 된 문자를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Escaping occurs in all the elements and attributes except for the <ph id="ph1">`UserData`</ph> element, which contains user-provided, unescaped data.</source>
          <target state="translated">모든 요소에 나타나고 특성을 제외 하 고 이스케이프는 <ph id="ph1">`UserData`</ph> 사용자가 제공한, 포함 하는 요소 데이터 이스케이프 해제 합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>The <ph id="ph1">`UserData`</ph> element is a result of calls to the <ph id="ph2">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`UserData`</ph> 요소에 대 한 호출의 결과는 <ph id="ph2">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Escaped character</source>
          <target state="translated">이스케이프된 문자</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Value</source>
          <target state="translated">값</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>"</source>
          <target state="translated">"</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>0xD</source>
          <target state="translated">0xD</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source><ph id="ph1">&amp;</ph><ph id="ph2">\#</ph>xD;</source>
          <target state="translated"><ph id="ph1">&amp;</ph><ph id="ph2">\#</ph>xD;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>0xA</source>
          <target state="translated">0xA</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source><ph id="ph1">&amp;</ph><ph id="ph2">\#</ph>xA;</source>
          <target state="translated"><ph id="ph1">&amp;</ph><ph id="ph2">\#</ph>xA;</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> class.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSchemaTraceListener" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSchemaTraceListener" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String)">
          <source>The path for the log file.</source>
          <target state="translated">로그 파일의 경로입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSchemaTraceListener" /&gt;</ph> class, using the specified file as the recipient of debugging and tracing output.</source>
          <target state="translated">지정된 파일을 디버깅 및 추적 출력의 수신자로 사용하여 <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSchemaTraceListener" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String)">
          <source>By default, one file of unrestricted size is logged.</source>
          <target state="translated">기본적으로 한 파일 크기 제한이 없는 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String)">
          <source>The path for the log file.</source>
          <target state="translated">로그 파일의 경로입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String)">
          <source>The name of the listener.</source>
          <target state="translated">수신기의 이름입니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSchemaTraceListener" /&gt;</ph> class with the specified name, using the specified file as the recipient of debugging and tracing output.</source>
          <target state="translated">지정된 파일을 디버깅 및 추적 출력의 수신자로 사용하여, 지정된 이름으로 <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSchemaTraceListener" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32)">
          <source>The path for the log file.</source>
          <target state="translated">로그 파일의 경로입니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32)">
          <source>The name of the listener.</source>
          <target state="translated">수신기의 이름입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32)">
          <source>The size of the output buffer, in bytes.</source>
          <target state="translated">출력 버퍼의 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSchemaTraceListener" /&gt;</ph> class with the specified name and specified buffer size, using the specified file as the recipient of debugging and tracing output.</source>
          <target state="translated">지정된 파일을 디버깅 및 추적 출력의 수신자로 사용하여, 지정된 이름 및 지정된 버퍼 크기로 <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSchemaTraceListener" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32)">
          <source>For performance considerations, <ph id="ph1">`bufferSize`</ph> should be a multiple of 1024 bytes.</source>
          <target state="translated">성능 고려 사항에 대 한 <ph id="ph1">`bufferSize`</ph> 1024 바이트의 배수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)">
          <source>The path for the log file.</source>
          <target state="translated">로그 파일의 경로입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)">
          <source>The name of the listener.</source>
          <target state="translated">수신기의 이름입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)">
          <source>The size of the output buffer, in bytes.</source>
          <target state="translated">출력 버퍼의 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceLogRetentionOption" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceLogRetentionOption" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSchemaTraceListener" /&gt;</ph> class with the specified name and specified buffer size, using the specified file with the specified log retention policy as the recipient of the debugging and tracing output.</source>
          <target state="translated">지정된 로그 보존 정책이 있는 지정된 파일을 디버깅 및 추적 출력의 수신자로 사용하여, 지정된 이름 및 지정된 버퍼 크기로 <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSchemaTraceListener" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)">
          <source>For performance considerations, <ph id="ph1">`bufferSize`</ph> should be a multiple of 1024 bytes.</source>
          <target state="translated">성능 고려 사항에 대 한 <ph id="ph1">`bufferSize`</ph> 1024 바이트의 배수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%2CSystem.Diagnostics.TraceLogRetentionOption%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%2CSystem.Diagnostics.TraceLogRetentionOption%29?displayProperty=nameWithType&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)">
          <source>The path for the log file.</source>
          <target state="translated">로그 파일의 경로입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)">
          <source>The name of the listener.</source>
          <target state="translated">수신기의 이름입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)">
          <source>The size of the output buffer, in bytes.</source>
          <target state="translated">출력 버퍼의 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceLogRetentionOption" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceLogRetentionOption" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)">
          <source>The maximum file size, in bytes.</source>
          <target state="translated">최대 파일 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSchemaTraceListener" /&gt;</ph> class with the specified name and specified buffer size, using the specified file with the specified log retention policy and maximum size as the recipient of the debugging and tracing output.</source>
          <target state="translated">지정된 로그 보존 정책 및 최대 크기가 있는 지정된 파일을 디버깅 및 추적 출력의 수신자로 사용하여, 지정된 이름 및 지정된 버퍼 크기로 <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSchemaTraceListener" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)">
          <source>For performance considerations, <ph id="ph1">`bufferSize`</ph> and <ph id="ph2">`maximumFileSize`</ph> should be multiples of 1024 bytes.</source>
          <target state="translated">성능 고려 사항에 대 한 <ph id="ph1">`bufferSize`</ph> 및 <ph id="ph2">`maximumFileSize`</ph> 1024 바이트의 배수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)">
          <source><ph id="ph1">`maximumFileSize`</ph> is not an absolute value, it is a threshold which can be exceeded up to the size of the last message.</source>
          <target state="translated"><ph id="ph1">`maximumFileSize`</ph> 절대 값, 아니면 마지막 메시지의 크기까지 초과 될 수 있는 임계값입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%2CSystem.Diagnostics.TraceLogRetentionOption%2CSystem.Int64%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%2CSystem.Diagnostics.TraceLogRetentionOption%2CSystem.Int64%29?displayProperty=nameWithType&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="maximumFileSize" /&gt;</ph> is a negative number.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="maximumFileSize" /&gt;</ph>가 음수입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)">
          <source>The path for the log file.</source>
          <target state="translated">로그 파일의 경로입니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)">
          <source>The name of the listener.</source>
          <target state="translated">수신기의 이름입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)">
          <source>The size of the output buffer, in bytes.</source>
          <target state="translated">출력 버퍼의 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceLogRetentionOption" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceLogRetentionOption" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)">
          <source>The maximum file size, in bytes.</source>
          <target state="translated">최대 파일 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)">
          <source>The maximum number of output log files.</source>
          <target state="translated">출력 로그 파일의 최대 수입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSchemaTraceListener" /&gt;</ph> class with the specified name and specified buffer size, using the specified file with the specified log retention policy, maximum size, and file count as the recipient of the debugging and tracing output.</source>
          <target state="translated">지정된 로그 보존 정책, 최대 크기 및 파일 개수가 있는 지정된 파일을 디버깅 및 추적 출력의 수신자로 사용하여, 지정된 이름 및 지정된 버퍼 크기로 <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSchemaTraceListener" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)">
          <source>For performance considerations, <ph id="ph1">`bufferSize`</ph> and <ph id="ph2">`maximumFileSize`</ph> should be multiples of 1024 bytes.</source>
          <target state="translated">성능 고려 사항에 대 한 <ph id="ph1">`bufferSize`</ph> 및 <ph id="ph2">`maximumFileSize`</ph> 1024 바이트의 배수 여야 합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)">
          <source><ph id="ph1">`maximumFileSize`</ph> is not an absolute value; it is a threshold that can be exceeded up to the size of the last message.</source>
          <target state="translated"><ph id="ph1">`maximumFileSize`</ph> 절대 값; 않습니다. 마지막 메시지의 크기까지 초과할 수 임계값은</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%2A&gt;</ph> 생성자입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)">
          <source>This code example is part of a larger example that is provided for the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="maximumNumberOfFiles" /&gt;</ph> is less than 2, and <ph id="ph2">&lt;paramref name="logRetentionOption" /&gt;</ph> is <ph id="ph3">&lt;see cref="F:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="maximumNumberOfFiles" /&gt;</ph>가 2보다 작고 <ph id="ph2">&lt;paramref name="logRetentionOption" /&gt;</ph>가 <ph id="ph3">&lt;see cref="F:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventSchemaTraceListener.BufferSize">
          <source>Gets the size of the output buffer.</source>
          <target state="translated">출력 버퍼의 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.BufferSize">
          <source>The size of the output buffer, in bytes.</source>
          <target state="translated">출력 버퍼의 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.BufferSize">
          <source>The property value is set by the <ph id="ph1">`bufferSize`</ph> parameter in the constructor.</source>
          <target state="translated">속성 값에 의해 설정 되는 <ph id="ph1">`bufferSize`</ph> 생성자에서 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.BufferSize">
          <source>For performance reasons, the buffer size should be set to a multiple of 1024 bytes.</source>
          <target state="translated">성능상의 이유로 버퍼 크기는 1024 바이트의 배수 값으로 설정 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.BufferSize">
          <source>We recommend either the default size of 32*1024 bytes or 64<ph id="ph1">\*</ph>1024 bytes for best performance.</source>
          <target state="translated">32 * 1024 바이트의 기본 크기 또는 64 권장<ph id="ph1">\*</ph>최상의 성능을 위해 1024 바이트입니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.BufferSize">
          <source>The following code example demonstrates how to display the value of the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.BufferSize%2A&gt;</ph> property.</source>
          <target state="translated">값을 표시 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.BufferSize%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.BufferSize">
          <source>This code example is part of a larger example that is provided for the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.Close">
          <source>Closes the log file for this listener so that it no longer receives tracing or debugging output.</source>
          <target state="translated">추적 또는 디버깅 출력을 더 이상 받지 않도록 이 수신기에 대한 로그 파일을 닫습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.Fail(System.String,System.String)">
          <source>The basic error message to write.</source>
          <target state="translated">쓸 기본 오류 메시지입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.Fail(System.String,System.String)">
          <source>The detailed error message to append to the basic error message.</source>
          <target state="translated">기본 오류 메시지에 추가할 자세한 오류 메시지입니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.Fail(System.String,System.String)">
          <source>Writes error information, including a basic error message and a detailed error message, to the log file.</source>
          <target state="translated">기본 오류 메시지와 자세한 오류 메시지를 포함한 오류 정보를 로그 파일에 씁니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.Flush">
          <source>Causes buffered data to be written to the log for this listener.</source>
          <target state="translated">이 수신기에 대한 로그에 버퍼링된 데이터를 씁니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes">
          <source>Gets the custom XML configuration attributes that the trace listener supports.</source>
          <target state="translated">추적 수신기가 지원하는 사용자 지정 XML 구성 특성을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> array that contains the XML configuration attributes recognized by this listener.</source>
          <target state="translated">이 수신기가 인식하는 XML 구성 특성이 포함된 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 배열입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes">
          <source>The custom attributes that are returned by this method can be used in the XML configuration file to control the behavior of an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> class.</source>
          <target state="translated">인스턴스 동작을 제어 하는 XML 구성 파일에서 사용할 수이 메서드에 의해 반환 되는 사용자 지정 특성은 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes">
          <source>Using any other attribute causes a configuration exception.</source>
          <target state="translated">다른 특성을 사용 하면 구성 예외가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes%2A&gt;</ph> method for the <ph id="ph2">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> returns the following string array values: "bufferSize", "logRetentionOption", "maximumFileSize", and "maximumNumberOfFiles".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes%2A&gt;</ph> 에 대 한 메서드는 <ph id="ph2">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> 다음 문자열 배열 값을 반환: "bufferSize", "logRetentionOption", "최적화" 및 "생성자"입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe">
          <source>Gets a value indicating whether the trace listener is thread safe.</source>
          <target state="translated">추적 수신기가 스레드로부터 안전한지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe">
          <source>Always returns <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">항상 <ph id="ph1">&lt;see langword="true" /&gt;</ph>를 반환합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe">
          <source>The following code example demonstrates how to display the value of the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe%2A&gt;</ph> property.</source>
          <target state="translated">값을 표시 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe">
          <source>This code example is part of a larger example that is provided for the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>Gets the maximum size of the log file.</source>
          <target state="translated">로그 파일의 최대 크기를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>The maximum file size, in bytes.</source>
          <target state="translated">최대 파일 크기(바이트)입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>The property value is set by the <ph id="ph1">`maximumFileSize`</ph> parameter in the constructor or the <ph id="ph2">`maximumFileSize`</ph> attribute in the configuration file.</source>
          <target state="translated">속성 값을 설정한는 <ph id="ph1">`maximumFileSize`</ph> 생성자에서 매개 변수 또는 <ph id="ph2">`maximumFileSize`</ph> 구성 파일에는 특성입니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>For performance reasons, you should set the maximum file size to a multiple of 1024 bytes.</source>
          <target state="translated">성능상의 이유로 1024 바이트의 배수를 최대 파일 크기를 설정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A&gt;</ph> property value is not an absolute; it is a threshold that can be exceeded up to the size of the last message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A&gt;</ph> 속성 값이 절대; 임계값 크기 마지막 메시지의 최대 초과할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>The following table shows the possible and default values for file size that are associated with each trace log retention option.</source>
          <target state="translated">다음 표에서 가능한 값과 기본값 파일 크기에 대 한 연결 된 각 추적 로그 보존 기간 옵션을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>The values marked as N/A indicate that the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A&gt;</ph> property is not checked for that <ph id="ph2">&lt;xref:System.Diagnostics.TraceLogRetentionOption&gt;</ph> value.</source>
          <target state="translated">N/A로 표시 된 값을 표시 하는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A&gt;</ph> 해당 속성은 확인 되지 <ph id="ph2">&lt;xref:System.Diagnostics.TraceLogRetentionOption&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>TraceLogRetentionOption</source>
          <target state="translated">TraceLogRetentionOption</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>Maximum file size</source>
          <target state="translated">최대 파일 크기</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>Default file size</source>
          <target state="translated">기본 파일 크기</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>N/A</source>
          <target state="translated">N/A</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>-1</source>
          <target state="translated">-1</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>&gt;0</source>
          <target state="translated">&gt;0</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>4 KB</source>
          <target state="translated">4KB</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>&gt;0</source>
          <target state="translated">&gt;0</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>4 KB</source>
          <target state="translated">4KB</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>&gt;0</source>
          <target state="translated">&gt;0</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>4 KB</source>
          <target state="translated">4KB</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>&gt;0</source>
          <target state="translated">&gt;0</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>4 KB</source>
          <target state="translated">4KB</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>The following code example demonstrates how to display the value of the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A&gt;</ph> property.</source>
          <target state="translated">값을 표시 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
          <source>This code example is part of a larger example that is provided for the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
          <source>Gets the maximum number of log files.</source>
          <target state="translated">로그 파일의 최대 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
          <source>The maximum number of log files, determined by the value of the <ph id="ph1">&lt;see cref="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption" /&gt;</ph> property for the file.</source>
          <target state="translated">로그 파일의 최대 수이며 파일의 <ph id="ph1">&lt;see cref="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption" /&gt;</ph> 속성 값에 의해 결정됩니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
          <source>The property value is set by the <ph id="ph1">`maximumNumberOfFiles`</ph> parameter in the constructor or the <ph id="ph2">`maximumNumberOfFiles`</ph> attribute in the configuration file.</source>
          <target state="translated">속성 값을 설정한는 <ph id="ph1">`maximumNumberOfFiles`</ph> 생성자에서 매개 변수 또는 <ph id="ph2">`maximumNumberOfFiles`</ph> 구성 파일에는 특성입니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
          <source>The following table shows the possible and default values for file size and file count that are associated with each trace log retention option.</source>
          <target state="translated">다음 표에서 가능한 값과 기본값 파일 크기 및 파일 개수에 대 한 연결 된 각 추적 로그 보존 기간 옵션을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
          <source>The values marked as N/A indicate that the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A&gt;</ph> property is not checked for that <ph id="ph2">&lt;xref:System.Diagnostics.TraceLogRetentionOption&gt;</ph> value.</source>
          <target state="translated">N/A로 표시 된 값을 표시 하는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A&gt;</ph> 해당 속성은 확인 되지 <ph id="ph2">&lt;xref:System.Diagnostics.TraceLogRetentionOption&gt;</ph> 값입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
          <source>TraceLogRetentionOption</source>
          <target state="translated">TraceLogRetentionOption</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
          <source>Maximum number of files</source>
          <target state="translated">최대 파일 수</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
          <source>Default number of files</source>
          <target state="translated">기본 파일 수</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
          <source>N/A</source>
          <target state="translated">N/A</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
          <source>N/A</source>
          <target state="translated">N/A</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
          <source>N/A</source>
          <target state="translated">N/A</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
          <source>-1</source>
          <target state="translated">-1</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
          <source>&gt;0</source>
          <target state="translated">&gt;0</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
          <source>&gt;1</source>
          <target state="translated">&gt;1</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
          <source>The following code example demonstrates how to display the value of the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A&gt;</ph> property.</source>
          <target state="translated">값을 표시 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
          <source>This code example is part of a larger example that is provided for the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Writes trace data to the log file.</source>
          <target state="translated">로그 파일에 추적 데이터를 씁니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The source name.</source>
          <target state="translated">소스 이름입니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">이벤트의 숫자 식별자입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A data object to emit.</source>
          <target state="translated">내보낼 데이터 개체입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Writes trace information, a single data object, and event information to the log file.</source>
          <target state="translated">로그 파일에 추적 정보, 단일 데이터 개체 및 이벤트 정보를 씁니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`eventType`</ph>, and <ph id="ph4">`id`</ph> parameters are used in the header and footer of the trace.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`eventType`</ph>, 및 <ph id="ph4">`id`</ph> 머리글 및 추적의 바닥글에 매개 변수가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">`id`</ph> parameter is converted to an unsigned integer before it is written.</source>
          <target state="translated"><ph id="ph1">`id`</ph> 쓰기 전에 매개 변수를 부호 없는 정수로 변환 됩니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Therefore, a negative <ph id="ph1">`id`</ph> value is written as a large positive integer.</source>
          <target state="translated">따라서 음수 <ph id="ph1">`id`</ph> 큰 양의 정수 값이 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">`data`</ph> parameter is written as a <ph id="ph2">`Data`</ph> node in the <ph id="ph3">`UserData`</ph> element.</source>
          <target state="translated"><ph id="ph1">`data`</ph> 매개 변수는로 작성 한 <ph id="ph2">`Data`</ph> 의 노드는 <ph id="ph3">`UserData`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">`ToString`</ph> method of the data object is used to convert the object to a string.</source>
          <target state="translated"><ph id="ph1">`ToString`</ph> 데이터 개체의 메서드는 개체를 문자열로 변환 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>This method is not intended to be called directly by application code.</source>
          <target state="translated">이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>It is called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.</source>
          <target state="translated">메서드에 의해 호출 됩니다는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> 추적 데이터를 작성 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The source name.</source>
          <target state="translated">소스 이름입니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A numeric identifier for the event.</source>
          <target state="translated">이벤트의 숫자 식별자입니다.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>An array of data objects to emit.</source>
          <target state="translated">내보낼 데이터 개체 배열입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Writes trace information, multiple data objects, and event information to the log file.</source>
          <target state="translated">로그 파일에 추적 정보, 여러 개의 데이터 개체 및 이벤트 정보를 씁니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`eventType`</ph>, and <ph id="ph4">`id`</ph> parameters are used in the header and footer of the trace.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`eventType`</ph>, 및 <ph id="ph4">`id`</ph> 머리글 및 추적의 바닥글에 매개 변수가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">`id`</ph> parameter is converted to an unsigned integer before it is written.</source>
          <target state="translated"><ph id="ph1">`id`</ph> 쓰기 전에 매개 변수를 부호 없는 정수로 변환 됩니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Therefore, a negative <ph id="ph1">`id`</ph> value is written as a large positive integer.</source>
          <target state="translated">따라서 음수 <ph id="ph1">`id`</ph> 큰 양의 정수 값이 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The objects in the <ph id="ph1">`data`</ph> parameter array are written as <ph id="ph2">`Data`</ph> nodes in the <ph id="ph3">`UserData`</ph> element.</source>
          <target state="translated">개체는 <ph id="ph1">`data`</ph> 매개 변수 배열으로 작성 되 <ph id="ph2">`Data`</ph> 의 노드는 <ph id="ph3">`UserData`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">`ToString`</ph> method of each data object is used to convert the object to a string.</source>
          <target state="translated"><ph id="ph1">`ToString`</ph> 각 데이터 개체의 메서드는 개체를 문자열로 변환 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>This method is not intended to be called directly by application code.</source>
          <target state="translated">이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>It is called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.</source>
          <target state="translated">메서드에 의해 호출 됩니다는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> 추적 데이터를 작성 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.EventSchemaTraceListener">
          <source>Writes event trace information to the log file.</source>
          <target state="translated">로그 파일에 이벤트 추적 정보를 씁니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The source name.</source>
          <target state="translated">소스 이름입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">이벤트의 숫자 식별자입니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Writes trace information, a message, and event information to the log file.</source>
          <target state="translated">로그 파일에 추적 정보, 메시지 및 이벤트 정보를 씁니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`eventType`</ph>, and <ph id="ph4">`id`</ph> parameters are used in the header and footer of the trace.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`eventType`</ph>, 및 <ph id="ph4">`id`</ph> 머리글 및 추적의 바닥글에 매개 변수가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">`id`</ph> parameter is converted to an unsigned integer before it is written.</source>
          <target state="translated"><ph id="ph1">`id`</ph> 쓰기 전에 매개 변수를 부호 없는 정수로 변환 됩니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Therefore, a negative <ph id="ph1">`id`</ph> value is written as a large positive integer.</source>
          <target state="translated">따라서 음수 <ph id="ph1">`id`</ph> 큰 양의 정수 값이 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">`message`</ph> parameter is written as a <ph id="ph2">`Data`</ph> node in the <ph id="ph3">`EventData`</ph> element.</source>
          <target state="translated"><ph id="ph1">`message`</ph> 매개 변수는로 작성 한 <ph id="ph2">`Data`</ph> 의 노드는 <ph id="ph3">`EventData`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>This method is not intended to be called directly by application code.</source>
          <target state="translated">이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>It is called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.</source>
          <target state="translated">메서드에 의해 호출 됩니다는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> 추적 데이터를 작성 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The source name.</source>
          <target state="translated">소스 이름입니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A numeric identifier for the event.</source>
          <target state="translated">이벤트의 숫자 식별자입니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A format string that contains zero or more format items that correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 배열에 들어 있는 개체에 해당하는 0개 이상의 형식 항목이 포함된 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>An object array that contains zero or more objects to format.</source>
          <target state="translated">형식을 지정할 개체를 0개 이상 포함하는 개체 배열입니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Writes trace information, a formatted message, and event information to the log file.</source>
          <target state="translated">로그 파일에 추적 정보, 형식이 지정된 메시지 및 이벤트 정보를 씁니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`eventType`</ph>, and <ph id="ph4">`id`</ph> parameters are used in the header and footer of the trace.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`eventType`</ph>, 및 <ph id="ph4">`id`</ph> 머리글 및 추적의 바닥글에 매개 변수가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">`id`</ph> parameter is converted to an unsigned integer before it is written.</source>
          <target state="translated"><ph id="ph1">`id`</ph> 쓰기 전에 매개 변수를 부호 없는 정수로 변환 됩니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Therefore, a negative <ph id="ph1">`id`</ph> value is written as a large positive integer.</source>
          <target state="translated">따라서 음수 <ph id="ph1">`id`</ph> 큰 양의 정수 값이 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method is called and the <ph id="ph2">`format`</ph> string and <ph id="ph3">`args`</ph> array are passed in as parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> 메서드가 호출 되 고 <ph id="ph2">`format`</ph> 문자열 및 <ph id="ph3">`args`</ph> 배열 매개 변수로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>This method formats the <ph id="ph1">`args`</ph> object array and writes the formatted array as the <ph id="ph2">`Data`</ph> node in the <ph id="ph3">`EventData`</ph> element.</source>
          <target state="translated">이 메서드는 형식을 <ph id="ph1">`args`</ph> 개체 배열 형식이 지정 된 배열을로 씁니다는 <ph id="ph2">`Data`</ph> 의 노드는 <ph id="ph3">`EventData`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>This method is not intended to be called directly by application code.</source>
          <target state="translated">이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>It is called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.</source>
          <target state="translated">메서드에 의해 호출 됩니다는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> 추적 데이터를 작성 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption">
          <source>Gets the trace log retention option for the file.</source>
          <target state="translated">파일에 대한 추적 로그 보존 옵션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceLogRetentionOption" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceLogRetentionOption" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption">
          <source>The following code example demonstrates how to display the value of the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption%2A&gt;</ph> property.</source>
          <target state="translated">값을 표시 하는 방법은 다음 코드 예제는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption">
          <source>This code example is part of a larger example that is provided for the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">현재 프로세스 ID, 스레드 ID 및 스택 추적 정보가 포함된 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>The source name.</source>
          <target state="translated">소스 이름입니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">이벤트의 숫자 식별자입니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>A trace message to write.</source>
          <target state="translated">쓸 추적 메시지입니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> structure that identifies a related activity.</source>
          <target state="translated">관련 작업을 식별하는 <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 구조체입니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>Writes trace information, including the identity of a related activity, a message, and event information, to the log file.</source>
          <target state="translated">로그 파일에 관련 작업 ID가 포함된 추적 정보와 메시지, 이벤트 정보를 씁니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A&gt;</ph> method is used to correlate related traces.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A&gt;</ph> 메서드 관련된 추적을 상호 연결 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>The <ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`id`</ph>, and <ph id="ph4">`relatedActivityId`</ph> parameters are used in the header and footer of the trace.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`id`</ph>, 및 <ph id="ph4">`relatedActivityId`</ph> 머리글 및 추적의 바닥글에 매개 변수가 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>The <ph id="ph1">`id`</ph> parameter is converted to an unsigned integer before it is written.</source>
          <target state="translated"><ph id="ph1">`id`</ph> 쓰기 전에 매개 변수를 부호 없는 정수로 변환 됩니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>Therefore, a negative <ph id="ph1">`id`</ph> value is written as a large positive integer.</source>
          <target state="translated">따라서 음수 <ph id="ph1">`id`</ph> 큰 양의 정수 값이 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>The <ph id="ph1">`message`</ph> parameter is written as the <ph id="ph2">`Data`</ph> element.</source>
          <target state="translated"><ph id="ph1">`message`</ph> 매개 변수는로 작성 된 <ph id="ph2">`Data`</ph> 요소입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>The <ph id="ph1">&lt;xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> method is called to convert the <ph id="ph2">`relatedActivityId`</ph> value to a "B" formatted string, which appears in the header.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> 메서드는 변환 하는 <ph id="ph2">`relatedActivityId`</ph> "B"로 값의 머리글에 표시 된 문자열을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>The <ph id="ph1">`Opcode`</ph> element in the footer identifies the trace event type as a <ph id="ph2">&lt;xref:System.Diagnostics.TraceEventType.Transfer&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Opcode`</ph> 요소 바닥글에 추적 이벤트 유형으로 식별 한 <ph id="ph2">&lt;xref:System.Diagnostics.TraceEventType.Transfer&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A&gt;</ph> method should not be called by application code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A&gt;</ph> 응용 프로그램 코드에서 메서드를 호출 해야 합니다.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>It is intended to be used by a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> object to emit the trace information for its <ph id="ph2">&lt;xref:System.Diagnostics.TraceSource.TraceTransfer%2A&gt;</ph> method.</source>
          <target state="translated">사용 하는 것을 <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> 개체에 대 한 추적 정보를 내보내려면 해당 <ph id="ph2">&lt;xref:System.Diagnostics.TraceSource.TraceTransfer%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.Write(System.String)">
          <source>The message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.Write(System.String)">
          <source>Writes a message to the log file without providing any additional context information.</source>
          <target state="translated">추가 컨텍스트 정보를 제공하지 않고 로그 파일에 메시지를 씁니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.Write(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A&gt;</ph> method is called to log the message as an <ph id="ph2">&lt;xref:System.Diagnostics.TraceEventType.Information&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A&gt;</ph> 메서드를 호출 하는 로그로 메시지를 한 <ph id="ph2">&lt;xref:System.Diagnostics.TraceEventType.Information&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.Write(System.String)">
          <source>This method is not intended to be called directly by application code.</source>
          <target state="translated">이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.Write(System.String)">
          <source>It is called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.</source>
          <target state="translated">메서드에 의해 호출 됩니다는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> 추적 데이터를 작성 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.WriteLine(System.String)">
          <source>The message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSchemaTraceListener.WriteLine(System.String)">
          <source>Writes a message followed by the current line terminator to the log file without providing any additional context information.</source>
          <target state="translated">추가 컨텍스트 정보를 제공하지 않고 로그 파일에 메시지와 현재 줄 종결자를 씁니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.WriteLine(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A&gt;</ph> method is called to log the message as an <ph id="ph2">&lt;xref:System.Diagnostics.TraceEventType.Information&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A&gt;</ph> 메서드를 호출 하는 로그로 메시지를 한 <ph id="ph2">&lt;xref:System.Diagnostics.TraceEventType.Information&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.WriteLine(System.String)">
          <source>This method is not intended to be called directly by application code.</source>
          <target state="translated">이 메서드는 응용 프로그램 코드에서 직접 호출할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSchemaTraceListener.WriteLine(System.String)">
          <source>It is called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.</source>
          <target state="translated">메서드에 의해 호출 됩니다는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> 추적 데이터를 작성 하는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventSchemaTraceListener.Writer">
          <source>Gets or sets the underlying text writer that writes to the log file.</source>
          <target state="translated">로그 파일에 쓰는 기본 텍스트 기록기를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.Writer">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSchemaTraceListener.Writer">
          <source>An attempt to use the set accessor for the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.Writer%2A&gt;</ph> property raises a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">에 대 한 set 접근자를 사용 하려는 시도가 <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.Writer%2A&gt;</ph> 속성 발생 한 <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventSchemaTraceListener.Writer">
          <source>An attempt was made to assign a value to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.EventSchemaTraceListener.Writer" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.EventSchemaTraceListener.Writer" /&gt;</ph> 속성에 값을 할당하려고 한 경우</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>