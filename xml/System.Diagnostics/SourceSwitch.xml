<Type Name="SourceSwitch" FullName="System.Diagnostics.SourceSwitch">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1b97c8de6d589b290cd9125d92851687aa6e8674" />
    <Meta Name="ms.sourcegitcommit" Value="b15b8cf0f6dbc1504057c88969d9ef4b790891fe" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="05/11/2018" />
    <Meta Name="ms.locfileid" Value="34061635" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SourceSwitch : System.Diagnostics.Switch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SourceSwitch extends System.Diagnostics.Switch" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.SourceSwitch" />
  <TypeSignature Language="VB.NET" Value="Public Class SourceSwitch&#xA;Inherits Switch" />
  <TypeSignature Language="C++ CLI" Value="public ref class SourceSwitch : System::Diagnostics::Switch" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.Switch</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>코드를 다시 컴파일하지 않고 추적 및 디버깅 출력을 제어하기 위한 다수준 스위치를 제공합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.Switch%2A> 의 속성은 <xref:System.Diagnostics.TraceSource> 클래스는는 <xref:System.Diagnostics.SourceSwitch> 개체입니다. <xref:System.Diagnostics.SourceSwitch> 클래스를 제공는 <xref:System.Diagnostics.SourceSwitch.Level%2A> 테스트할 스위치의 이벤트 수준 속성입니다. <xref:System.Diagnostics.SourceSwitch.Level%2A> 속성 스위치의를 가져오거나 설정 합니다. <xref:System.Diagnostics.TraceLevel> 값입니다.  
  
 수준 이벤트를 설정할 수 있습니다는 <xref:System.Diagnostics.SourceSwitch> 응용 프로그램 구성 파일을 사용 하 여 구성된 된 통해 <xref:System.Diagnostics.SourceSwitch> 응용 프로그램에서 수준입니다. 만들 수 있습니다는 <xref:System.Diagnostics.SourceSwitch> 코드 설정 하 여 수준을 직접 계측 코드의 특정 섹션에 있습니다.  
  
 구성 하는 <xref:System.Diagnostics.SourceSwitch>, 응용 프로그램의 이름에 해당 하는 구성 파일을 편집 합니다. 이 파일에 스위치의 값을 설정 하거나 응용 프로그램에서 이전에 설정한 모든 스위치 수 있습니다. 다음 예제와 같이 구성 파일의 형식은 해야 합니다.  
  
```xml  
<switches>  
  <add name="SourceSwitch" value="Verbose"></add>  
</switches>  
```  
  
 스위치는 추적을 전파 또는 무시 확인을 위해 사용 합니다. 각 <xref:System.Diagnostics.TraceSource> 메서드 호출을 추적는 <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 는 수신기를 호출 하기 전에 메서드. 경우는 <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 메서드 반환 `false`를 무시 되 고 trace 메서드 종료 됩니다. 경우는 <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 메서드 반환 `true`, 추적 수신기에 전달 됩니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Diagnostics.SourceSwitch" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SourceSwitch (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SourceSwitch.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SourceSwitch(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">소스의 이름입니다.</param>
        <summary>
          <see cref="T:System.Diagnostics.SourceSwitch" /> 클래스의 새 인스턴스를 초기화하고 소스의 이름을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `name` 의 값을 설정 하려면 매개 변수는 사용 된 <xref:System.Diagnostics.Switch.DisplayName%2A> 속성입니다.  
  
 수준을 설정 하려면 프로그램 <xref:System.Diagnostics.SourceSwitch>, 응용 프로그램의 이름에 해당 하는 구성 파일을 편집 합니다. 이 파일에 스위치를 추가 하 고 해당 값을 설정, 스위치를 제거 하거나 지울 수 스위치 응용 프로그램에서 이전에 설정한 모든 합니다. 소스 스위치를 추가 하려면 다음 예에서 같이 구성 파일의 형식은 해야 합니다.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="SourceSwitch" value="Verbose" ></add>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SourceSwitch (string displayName, string defaultSwitchValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string defaultSwitchValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SourceSwitch.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, defaultSwitchValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SourceSwitch(System::String ^ displayName, System::String ^ defaultSwitchValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="defaultSwitchValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">소스 스위치 이름입니다.</param>
        <param name="defaultSwitchValue">스위치의 기본값입니다.</param>
        <summary>
          <see cref="T:System.Diagnostics.SourceSwitch" /> 클래스의 새 인스턴스를 초기화하고 소스 스위치의 기본값과 표시 이름을 지정합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `displayName` 의 값을 설정 하려면 매개 변수를 사용 하는 <xref:System.Diagnostics.Switch.DisplayName%2A> 속성, `defaultSwitchValue` 매개 변수를 필드로 저장 하 고 초기화 하는 데는 <xref:System.Diagnostics.Switch.Value%2A> 첫 번째 참조에서 속성입니다.  
  
> [!NOTE]
>  스위치 구성 파일에 정의 된 경우 및 `value` 특성 지정, 구성 파일 값이 우선 및 `defaultSwitchValue` 는 무시 됩니다.  
  
 수준을 설정 하려면 프로그램 <xref:System.Diagnostics.SourceSwitch>, 응용 프로그램의 이름에 해당 하는 구성 파일을 편집 합니다. 이 파일에 스위치를 추가 하 고 해당 값을 설정, 스위치를 제거 하거나 지울 수 스위치 응용 프로그램에서 이전에 설정한 모든 합니다. 소스 스위치를 추가 하려면 다음 예에서 같이 구성 파일의 형식은 해야 합니다.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="SourceSwitch" value="Verbose" ></add>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 다음 코드 예제에서는 한 <xref:System.Diagnostics.SourceSwitch> "SourceSwitch" 이름과의 기본값을 갖는 <xref:System.Diagnostics.SourceLevels.Verbose>합니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.TraceSource> 클래스입니다.  
  
 [!code-csharp[System.Diagnostics.TraceSource#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#7)]
 [!code-vb[System.Diagnostics.TraceSource#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SourceLevels Level { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.SourceLevels Level" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SourceSwitch.Level" />
      <MemberSignature Language="VB.NET" Value="Public Property Level As SourceLevels" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::SourceLevels Level { System::Diagnostics::SourceLevels get(); void set(System::Diagnostics::SourceLevels value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SourceLevels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>스위치의 수준을 가져오거나 설정합니다.</summary>
        <value>스위치의 이벤트 수준을 나타내는 <see cref="T:System.Diagnostics.SourceLevels" /> 값 중 하나입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에서 값을 가져오는 <xref:System.Diagnostics.Switch.SwitchSetting%2A> 속성입니다. 이 속성을 설정 수정는 <xref:System.Diagnostics.Switch.SwitchSetting%2A> 속성입니다.  
  
> [!NOTE]
>  확장성을 고려 하는 <xref:System.Diagnostics.SourceSwitch.Level%2A> 로 제한 되는 것이 아니라 모든 정수에 속성을 설정할 수 있습니다는 <xref:System.Diagnostics.SourceLevels> 열거형 값입니다.  
  
   
  
## Examples  
 값을 표시 하는 다음 코드 예제는 <xref:System.Diagnostics.SourceSwitch.Level%2A> 소스 스위치에 대 한 속성입니다. 이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.TraceSource> 클래스입니다.  
  
 [!code-csharp[System.Diagnostics.TraceSource#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#8)]
 [!code-vb[System.Diagnostics.TraceSource#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">에 비관리 코드와 작동 합니다. 요청 값 <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />합니다.</permission>
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SourceSwitch.OnValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValueChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Diagnostics.Switch.Value" /> 속성 값이 변경되면 호출됩니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.SourceSwitch.OnValueChanged%2A> 의 새 값을 변환 하는 메서드는 <xref:System.Diagnostics.Switch.Value%2A> 속성에서 일치 하는 필드의 정수 표현에는 <xref:System.Diagnostics.SourceLevels> 열거형 다음이 정수를 사용 하 여 설정 하는 <xref:System.Diagnostics.Switch.SwitchSetting%2A> 속성.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Diagnostics.Switch.Value" />의 새 값이 <see cref="T:System.Diagnostics.SourceLevels" /> 값 중 하나가 아닌 경우</exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldTrace">
      <MemberSignature Language="C#" Value="public bool ShouldTrace (System.Diagnostics.TraceEventType eventType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldTrace(valuetype System.Diagnostics.TraceEventType eventType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldTrace (eventType As TraceEventType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldTrace(System::Diagnostics::TraceEventType eventType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
      </Parameters>
      <Docs>
        <param name="eventType">
          <see cref="T:System.Diagnostics.TraceEventType" /> 값 중 하나입니다.</param>
        <summary>추적 이벤트 형식을 기준으로 추적 수신기를 호출해야 하는지 여부를 결정합니다.</summary>
        <returns>
          추적 수신기를 호출해야 하면 <see langword="True" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 메서드는 `Trace` 의 메서드는 <xref:System.Diagnostics.TraceSource> 추적 작성을 수신기를 호출 해야 하는지 여부를 결정 하는 클래스입니다.  
  
> [!NOTE]
>  응용 프로그램 코드,이 메서드를 호출 하지 않아야 메서드를 통해서만 호출할 수 하는 것은 <xref:System.Diagnostics.TraceSource> 클래스입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>