<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Debug.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5331d1e20f17d7065dd117481b3458a017c3f98b4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">331d1e20f17d7065dd117481b3458a017c3f98b4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Provides a set of methods and properties that help debug your code.</source>
          <target state="translated">코드 디버깅에 도움이 되는 메서드 및 속성들을 제공합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>If you use methods in the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> class to print debugging information and check your logic with assertions, you can make your code more robust without impacting the performance and code size of your shipping product.</source>
          <target state="translated">메서드를 사용 하는 경우는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> 디버깅 정보를 출력에 클래스 및 어설션과 함께 논리를 검사, 코드 만들 수 있습니다 프로그램 더욱 강력한 성능 및 코드 크기 최종 제품의 영향을 주지 않고 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>This class provides methods to display an <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> dialog box, and to emit an assertion that will always fail.</source>
          <target state="translated">이 클래스는 표시 하는 메서드를 제공는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> 대화 상자를 생성 하 고 항상 실패 하는 어설션을 내보낼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>This class provides write methods in the following variations: <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Write%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteLine%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Debug.WriteIf%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Diagnostics.Debug.WriteLineIf%2A&gt;</ph>.</source>
          <target state="translated">이 클래스는 다음과 같은 형태로 쓰기 메서드를 제공: <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Write%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteLine%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Debug.WriteIf%2A&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Diagnostics.Debug.WriteLineIf%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.BooleanSwitch&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> classes provide means to dynamically control the tracing output.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.BooleanSwitch&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> 클래스 동적으로 추적 출력을 제어 하는 수단을 제공 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>You can modify the values of these switches without recompiling your application.</source>
          <target state="translated">응용 프로그램을 다시 컴파일하지 않고도 이러한 스위치의 값을 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>For information on using the configuration file to set a switch, see the <ph id="ph1">&lt;xref:System.Diagnostics.Switch&gt;</ph> class and the <bpt id="p1">[</bpt>Trace Switches<ept id="p1">](~/docs/framework/debug-trace-profile/trace-switches.md)</ept> topic.</source>
          <target state="translated">스위치를 설정 하는 구성 파일을 사용 하는 방법은 참조 하십시오.는 <ph id="ph1">&lt;xref:System.Diagnostics.Switch&gt;</ph> 클래스 및 <bpt id="p1">[</bpt>추적 스위치<ept id="p1">](~/docs/framework/debug-trace-profile/trace-switches.md)</ept> 항목입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>You can customize the tracing output's target by adding <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances to or removing instances from the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">추적 출력 대상을 추가 하 여 사용자 지정할 수 있습니다 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> 인스턴스 또는 인스턴스를 제거 하는 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection is shared by both the <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> and the <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph> classes; adding a trace listener to either class adds the listener to both.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션 모두에 의해 공유 되는 <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph> 클래스; 둘 다에 수신기를 추가 하는 클래스를 추적 수신기를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> class emits trace output.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> 클래스 추적 출력을 내보냅니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>Adding a trace listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</source>
          <target state="translated">추적 수신기를 추가 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션 추적 수신기에서 사용 되는 리소스를 사용할 수 없는 경우 추적을 동안 throw 된 예외를 일으킬 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</source>
          <target state="translated">조건 및 throw 된 예외 추적 수신기에 좌우 되며이 항목의 열거할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>It may be useful to place calls to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> methods in <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> blocks to detect and handle any exceptions from trace listeners.</source>
          <target state="translated">전화를 걸 수 유용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> 메서드 <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> 블록 감지 하 고 추적 수신기에서 발생 한 예외를 처리 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>You can modify the level of indentation using the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Indent%2A&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentLevel%2A&gt;</ph> property.</source>
          <target state="translated">들여쓰기를 사용 하 여 수준을 수정할 수는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Indent%2A&gt;</ph> 메서드 또는 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentLevel%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>To modify the indent spacing, use the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> property.</source>
          <target state="translated">들여쓰기 간격을 수정 하려면 사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>You can specify whether to automatically flush the output buffer after each write by setting the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">자동으로 설정 하 여 쓴 후 출력 버퍼를 플러시하지 여부를 지정할 수는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> 속성을 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>To set the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> for <ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>, you can edit the configuration file corresponding to the name of your application.</source>
          <target state="translated">설정 하는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> 에 대 한 <ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>, 응용 프로그램의 이름에 해당 하는 구성 파일을 편집할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The configuration file should be formatted as shown in the following example.</source>
          <target state="translated">다음 예제와 같이 구성 파일의 형식은 해야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> attribute is applied to the methods of <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> 의 메서드에 특성이 적용 되 <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>Compilers that support <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> ignore calls to these methods unless "DEBUG" is defined as a conditional compilation symbol.</source>
          <target state="translated">지 원하는 컴파일러 <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> "디버그"로 된 조건부 컴파일 기호가 정의 되어 있지 않으면 이러한 메서드 호출을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>Refer to a compiler's documentation to determine whether <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> is supported and the syntax for defining a conditional compilation symbol.</source>
          <target state="translated">확인 하려면 컴파일러의 설명서를 참조 하는지 여부를 <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> 사용할 수 및 조건부 컴파일 기호를 정의 하기 위한 구문을 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>In Visual Studio C# and Visual Basic projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</source>
          <target state="translated">기본적으로 Visual Studio C# 및 Visual Basic 프로젝트의 디버그 빌드에 대해 "디버그" 조건부 컴파일 기호가 정의 되어 하 고 모두 디버그 및 릴리스 빌드에 대해 "TRACE" 기호가 정의 됩니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>For information about how to disable this behavior, see the Visual Studio documentation.</source>
          <target state="translated">이 동작을 사용 하지 않도록 설정 하는 방법에 대 한 정보를 Visual Studio 설명서를 참조 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>For information about conditional debugging in Visual C++, see <bpt id="p1">[</bpt>Debug Class (C++/CLI)<ept id="p1">](/cpp/dotnet/debug-class-cpp-cli)</ept>.</source>
          <target state="translated">Visual c + +에서 조건부 디버깅 하는 방법에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>Debug 클래스 (C + + /cli CLI)<ept id="p1">](/cpp/dotnet/debug-class-cpp-cli)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>To define the "DEBUG" conditional compilation symbol in C#, add the <ph id="ph1">`/d:DEBUG`</ph> option to the compiler command line when you compile your code using a command line, or add <ph id="ph2">`#define DEBUG`</ph> to the top of your file.</source>
          <target state="translated">C#에서 "디버그" 조건부 컴파일 기호를 정의 하려면 추가 <ph id="ph1">`/d:DEBUG`</ph> 명령줄을 사용 하 여 코드를 컴파일할 때 컴파일러 명령줄 옵션 또는 추가 <ph id="ph2">`#define DEBUG`</ph> 파일의 맨 위로 이동 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>In Visual Basic, add the <ph id="ph1">`/d:DEBUG=True`</ph> option to the compiler command line or add <ph id="ph2">`#Const DEBUG=True`</ph> to the file.</source>
          <target state="translated">Visual Basic의 추가 <ph id="ph1">`/d:DEBUG=True`</ph> 하려면 컴파일러 명령줄 옵션을 선택 하거나 추가 <ph id="ph2">`#Const DEBUG=True`</ph> 파일에 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> to indicate the beginning and end of a program's execution.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph> 프로그램 실행의 시작과 끝을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>The example also uses <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Indent%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Unindent%2A&gt;</ph> to distinguish the tracing output.</source>
          <target state="translated">또한이 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Indent%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Unindent%2A&gt;</ph> 추적 출력을 구분할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.Debug">
          <source>This type is thread safe.</source>
          <target state="translated">이 형식은 스레드로부터 안전합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, outputs messages and displays a message box that shows the call stack.</source>
          <target state="translated">조건을 확인합니다. 조건이 <ph id="ph1">&lt;see langword="false" /&gt;</ph>이면 메시지를 출력하고 호출 스택을 보여주는 메시지 상자를 표시합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">평가할 조건식입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, a failure message is not sent and the message box is not displayed.</source>
          <target state="translated">조건이 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 실패 메시지가 전송되지 않고 메시지 상자가 표시되지 않습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, displays a message box that shows the call stack.</source>
          <target state="translated">조건을 확인합니다. 조건이 <ph id="ph1">&lt;see langword="false" /&gt;</ph>이면 호출 스택을 보여주는 메시지 상자를 표시합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> method works only in debug builds.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> 디버그 빌드에만 사용할 수 있는 방법입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> method if you want to do assertions in release builds.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> 릴리스에서 어설션을 수행 하려는 경우 메서드를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 코드에 어설션<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The <ph id="ph1">`Assert`</ph> methods are not available for <ph id="ph2">[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]</ph> apps.</source>
          <target state="translated"><ph id="ph1">`Assert`</ph> 메서드를 사용할 수 없는 <ph id="ph2">[!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)]</ph> 앱.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%29&gt;</ph> method is used to identify logic errors during program development.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%29&gt;</ph> 메서드는 프로그램을 개발 하는 동안 논리 오류를 식별 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> evaluates the condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> 조건을 확인합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>If the result is <ph id="ph1">`false`</ph>, it sends a failure message to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">결과가 <ph id="ph1">`false`</ph>, 오류 메시지를 보내는 것은 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">추가 하 여이 동작을 사용자 지정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, 제거 또는 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
          <target state="translated">사용자 인터페이스 모드로 실행 되는 응용 프로그램 파일 및 줄 번호가 있는 호출 스택을 표시 하는 메시지 상자가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
          <target state="translated">메시지 상자에 세 개의 단추가: <bpt id="p1">**</bpt>중단<ept id="p1">**</ept>, <bpt id="p2">**</bpt>을 다시 시도<ept id="p2">**</ept>, 및 <bpt id="p3">**</bpt>무시<ept id="p3">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
          <target state="translated">클릭 하 고 <bpt id="p1">**</bpt>중단<ept id="p1">**</ept> 단추는 응용 프로그램을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
          <target state="translated">클릭 하면 <bpt id="p1">**</bpt>을 다시 시도<ept id="p1">**</ept> 응용 프로그램에서 디버거를 실행 중인 되지 않았으면 디버거가 열려는 있는 경우 디버거에서 코드를 보냅니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
          <target state="translated">클릭 하면 <bpt id="p1">**</bpt>무시<ept id="p1">**</ept> 코드의 다음 명령으로 계속 진행 됩니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source><ph id="ph1">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph> apps do not support modal dialog boxes, so they behave the same in user interface mode and non-user interface mode.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph> 응용 프로그램 사용자 인터페이스 모드와 비 사용자 인터페이스 모드에서 동일 하므로 모달 대화 상자를 지원 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The message is written to the active trace listeners in debugging mode, or no message is written in release mode.</source>
          <target state="translated">디버깅 모드에서 활성 추적 수신기에 메시지를 씁니다 또는 릴리스 모드에서 메시지가 기록 됩니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The display of the message box depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">메시지 상자의 표시의 존재 여부에 따라 달라 집니다는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> 에 속하지 않는 <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> 컬렉션, 메시지 상자가 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> 으로 제거할 수 있습니다는 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>지우기<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>제거<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, 또는 호출 하 여는 <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> 는 메서드<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> 속성 (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
          <target state="translated">동작을 변경할 수는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> 응용 프로그램의 이름에 해당 하는 구성 파일에 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">이 파일에서 사용 하도록 설정 하 고 어설션 메시지 상자를 사용 하지 않도록 설정 하거나 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The configuration file should be formatted as follows:</source>
          <target state="translated">구성 파일 형식은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>The following example creates an index for an array, performs some action to set the value of the index, and then calls <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> to confirm that the index value is valid.</source>
          <target state="translated">다음 예제에서는 배열에 대 한 인덱스를 만듭니다는 인덱스의 값을 설정 하는 활동을 수행 하 고 다음 호출 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> 인덱스 값이 유효한 지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean)">
          <source>If it is not valid, <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> outputs the call stack.</source>
          <target state="translated">를 사용할 수 없는 경우 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> 호출 스택을 출력 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">평가할 조건식입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the specified message is not sent and the message box is not displayed.</source>
          <target state="translated">조건이 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 지정된 메시지가 전송되지 않고 메시지 상자가 표시되지 않습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The message to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> 컬렉션으로 보낼 메시지입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, outputs a specified message and displays a message box that shows the call stack.</source>
          <target state="translated">조건을 확인합니다. 조건이 <ph id="ph1">&lt;see langword="false" /&gt;</ph>이면 지정된 메시지를 출력하고 호출 스택을 보여주는 메시지 상자를 표시합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> method works only in debug builds.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> 디버그 빌드에만 사용할 수 있는 방법입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> method if you want to do assertions in release builds.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> 릴리스에서 어설션을 수행 하려는 경우 메서드를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 코드에 어설션<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> method is used to identify logic errors during program development.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> 메서드는 프로그램을 개발 하는 동안 논리 오류를 식별 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> evaluates the condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> 조건을 확인합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>If the result is <ph id="ph1">`false`</ph>, it sends the specified diagnostic message to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">결과가 <ph id="ph1">`false`</ph>, 지정된 된 진단 메시지를 보내는 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">추가 하 여이 동작을 사용자 지정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, 제거 또는 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
          <target state="translated">사용자 인터페이스 모드로 실행 되는 응용 프로그램 파일 및 줄 번호가 있는 호출 스택을 표시 하는 메시지 상자가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
          <target state="translated">메시지 상자에 세 개의 단추가: <bpt id="p1">**</bpt>중단<ept id="p1">**</ept>, <bpt id="p2">**</bpt>을 다시 시도<ept id="p2">**</ept>, 및 <bpt id="p3">**</bpt>무시<ept id="p3">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
          <target state="translated">클릭 하 고 <bpt id="p1">**</bpt>중단<ept id="p1">**</ept> 단추는 응용 프로그램을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
          <target state="translated">클릭 하면 <bpt id="p1">**</bpt>을 다시 시도<ept id="p1">**</ept> 응용 프로그램에서 디버거를 실행 중인 되지 않았으면 디버거가 열려는 있는 경우 디버거에서 코드를 보냅니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
          <target state="translated">클릭 하면 <bpt id="p1">**</bpt>무시<ept id="p1">**</ept> 코드의 다음 명령으로 계속 진행 됩니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The display of the message box depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">메시지 상자의 표시의 존재 여부에 따라 달라 집니다는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> 에 속하지 않는 <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> 컬렉션, 메시지 상자가 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> 으로 제거할 수 있습니다는 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>지우기<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>제거<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, 또는 호출 하 여는 <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> 는 메서드<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> 속성 (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
          <target state="translated">동작을 변경할 수는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> 응용 프로그램의 이름에 해당 하는 구성 파일에 있습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">이 파일에서 사용 하도록 설정 하 고 어설션 메시지 상자를 사용 하지 않도록 설정 하거나 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The configuration file should be formatted as follows:</source>
          <target state="translated">구성 파일 형식은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>The following example checks whether the <ph id="ph1">`type`</ph> parameter is valid.</source>
          <target state="translated">다음 예제에서는 검사 여부는 <ph id="ph1">`type`</ph> 매개 변수는 유효 합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
          <source>If <ph id="ph1">`type`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> outputs a message.</source>
          <target state="translated">경우 <ph id="ph1">`type`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> 된 메시지를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">평가할 조건식입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the specified messages are not sent and the message box is not displayed.</source>
          <target state="translated">조건이 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 지정된 메시지가 전송되지 않고 메시지 상자가 표시되지 않습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The message to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> 컬렉션으로 보낼 메시지입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The detailed message to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> 컬렉션으로 보낼 자세한 메시지입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, outputs two specified messages and displays a message box that shows the call stack.</source>
          <target state="translated">조건을 확인합니다. 조건이 <ph id="ph1">&lt;see langword="false" /&gt;</ph>이면 지정된 2개의 메시지를 출력하고 호출 스택을 보여주는 메시지 상자를 표시합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> method works only in debug builds.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> 디버그 빌드에만 사용할 수 있는 방법입니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> method if you want to do assertions in release builds.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> 릴리스에서 어설션을 수행 하려는 경우 메서드를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 코드에 어설션<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29&gt;</ph> method is used to identify logic errors during program development.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29&gt;</ph> 메서드는 프로그램을 개발 하는 동안 논리 오류를 식별 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> evaluates the condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> 조건을 확인합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>If the result is <ph id="ph1">`false`</ph>, it sends the specified diagnostic message and detailed message to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">결과가 <ph id="ph1">`false`</ph>, 지정 된 진단 메시지와 자세한 메시지를 보내는 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">추가 하 여이 동작을 사용자 지정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, 제거 또는 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
          <target state="translated">사용자 인터페이스 모드로 실행 되는 응용 프로그램 파일 및 줄 번호가 있는 호출 스택을 표시 하는 메시지 상자가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
          <target state="translated">메시지 상자에 세 개의 단추가: <bpt id="p1">**</bpt>중단<ept id="p1">**</ept>, <bpt id="p2">**</bpt>을 다시 시도<ept id="p2">**</ept>, 및 <bpt id="p3">**</bpt>무시<ept id="p3">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
          <target state="translated">클릭 하 고 <bpt id="p1">**</bpt>중단<ept id="p1">**</ept> 단추는 응용 프로그램을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
          <target state="translated">클릭 하면 <bpt id="p1">**</bpt>을 다시 시도<ept id="p1">**</ept> 응용 프로그램에서 디버거를 실행 중인 되지 않았으면 디버거가 열려는 있는 경우 디버거에서 코드를 보냅니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
          <target state="translated">클릭 하면 <bpt id="p1">**</bpt>무시<ept id="p1">**</ept> 코드의 다음 명령으로 계속 진행 됩니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The display of the message box depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">메시지 상자의 표시의 존재 여부에 따라 달라 집니다는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> 에 속하지 않는 <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> 컬렉션, 메시지 상자가 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> 으로 제거할 수 있습니다는 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>지우기<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>제거<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, 또는 호출 하 여는 <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> 는 메서드<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> 속성 (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
          <target state="translated">동작을 변경할 수는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> 응용 프로그램의 이름에 해당 하는 구성 파일에 있습니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">이 파일에서 사용 하도록 설정 하 고 어설션 메시지 상자를 사용 하지 않도록 설정 하거나 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The configuration file should be formatted as follows:</source>
          <target state="translated">구성 파일 형식은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>The following example checks whether the <ph id="ph1">`type`</ph> parameter is valid.</source>
          <target state="translated">다음 예제에서는 검사 여부는 <ph id="ph1">`type`</ph> 매개 변수는 유효 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
          <source>If <ph id="ph1">`type`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> outputs two messages.</source>
          <target state="translated">경우 <ph id="ph1">`type`</ph> 은 <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> 두 메시지를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">평가할 조건식입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the specified messages are not sent and the message box is not displayed.</source>
          <target state="translated">조건이 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 지정된 메시지가 전송되지 않고 메시지 상자가 표시되지 않습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The message to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> 컬렉션으로 보낼 메시지입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The composite format string to send to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Trace.Listeners" /&gt;</ph> 컬렉션에 보낼 복합 서식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>This message contains text intermixed with zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">이 메시지에는 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 배열의 개체에 해당하는 0개 이상의 서식 항목과 혼합된 텍스트가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>An object array that contains zero or more objects to format.</source>
          <target state="translated">형식을 지정할 개체를 0개 이상 포함하는 개체 배열입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Checks for a condition; if the condition is <ph id="ph1">&lt;see langword="false" /&gt;</ph>, outputs two messages (simple and formatted) and displays a message box that shows the call stack.</source>
          <target state="translated">조건을 확인합니다. 조건이 <ph id="ph1">&lt;see langword="false" /&gt;</ph>이면 두 개의 메시지(단순 및 서식 있는 메시지)를 출력하고 호출 스택을 보여 주는 메시지 상자를 표시합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">이 메서드는 사용 된 개체의 값을 텍스트 표현으로 변환 표현을 문자열로에 포함 하는.NET Framework의 합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The resulting string is sent to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">결과 문자열에 게 보내집니다는 <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> method works only in debug builds.</source>
          <target state="translated">기본적으로는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType&gt;</ph> 디버그 빌드에만 사용할 수 있는 방법입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> method if you want to do assertions in release builds.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType&gt;</ph> 릴리스에서 어설션을 수행 하려는 경우 메서드를 작성 합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>관리 코드에 어설션<ept id="p1">](/visualstudio/debugger/assertions-in-managed-code)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph> method is used to identify logic errors during program development.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph> 메서드는 프로그램을 개발 하는 동안 논리 오류를 식별 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> evaluates the condition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> 조건을 확인합니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>If the result is <ph id="ph1">`false`</ph>, The <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method is called and the <ph id="ph3">`detailMessageFormat`</ph> string and <ph id="ph4">`args`</ph> array are passed in as parameters.</source>
          <target state="translated">결과가 <ph id="ph1">`false`</ph>, <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> 메서드는 및 <ph id="ph3">`detailMessageFormat`</ph> 문자열 및 <ph id="ph4">`args`</ph> 배열 매개 변수로 전달 됩니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph> then sends the specified text message and the formatted text message to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29&gt;</ph> 그런 다음 지정된 텍스트 메시지 및 서식 있는 텍스트 메시지를 보냅니다는 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">추가 하 여이 동작을 사용자 지정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, 제거 또는 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
          <target state="translated">사용자 인터페이스 모드로 실행 되는 응용 프로그램 파일 및 줄 번호가 있는 호출 스택을 표시 하는 메시지 상자가 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
          <target state="translated">메시지 상자에 세 개의 단추가: <bpt id="p1">**</bpt>중단<ept id="p1">**</ept>, <bpt id="p2">**</bpt>을 다시 시도<ept id="p2">**</ept>, 및 <bpt id="p3">**</bpt>무시<ept id="p3">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
          <target state="translated">클릭 하 고 <bpt id="p1">**</bpt>중단<ept id="p1">**</ept> 단추는 응용 프로그램을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
          <target state="translated">클릭 하면 <bpt id="p1">**</bpt>을 다시 시도<ept id="p1">**</ept> 응용 프로그램에서 디버거를 실행 중인 되지 않았으면 디버거가 열려는 있는 경우 디버거에서 코드를 보냅니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
          <target state="translated">클릭 하면 <bpt id="p1">**</bpt>무시<ept id="p1">**</ept> 코드의 다음 명령으로 계속 진행 됩니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The display of the message box is dependent on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">메시지 상자의 표시의 존재 여부에 따라 달라 집니다.는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> 에 속하지 않는 <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> 컬렉션, 메시지 상자가 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> 으로 제거할 수 있습니다는 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>지우기<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>제거<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, 또는 호출 하 여는 <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> 는 메서드<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> 속성 (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
          <target state="translated">동작을 변경할 수는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> 응용 프로그램의 이름에 해당 하는 구성 파일에 있습니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">이 파일에서 사용 하도록 설정 하 고 어설션 메시지 상자를 사용 하지 않도록 설정 하거나 설정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
          <source>The configuration file should be formatted as follows:</source>
          <target state="translated">구성 파일 형식은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>Gets or sets a value indicating whether <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.Flush" /&gt;</ph> should be called on the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> after every write.</source>
          <target state="translated">각 쓰기 직후에 <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.Flush" /&gt;</ph>에서 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Flush" /&gt;</ph> is called on the <ph id="ph3">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> after every write; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">매번 쓴 후에 <ph id="ph3">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>에 대해 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Flush" /&gt;</ph> 호출되면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 호출되지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">`false`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>.</source>
          <target state="translated">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>Setting <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> 를 <ph id="ph2">`true`</ph> 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태 플러시되지 것입니다 있다는 것을 의미 합니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">따라서 올바르게 문자의 다음 블록을 인코딩할 수 있도록 (부분 문자)의 상태를 유지 하기 위해 인코더 수 있습니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">이 시나리오는 u t f 8와 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩할만 수 있는 위치에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>To set the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> for <ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>, you can also edit the configuration file corresponding to the name of your application.</source>
          <target state="translated">설정 하는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> 에 대 한 <ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>, 응용 프로그램의 이름에 해당 하는 구성 파일을 편집할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>The configuration file should be formatted as shown in the following example.</source>
          <target state="translated">다음 예제와 같이 구성 파일의 형식은 해야 합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>for operating with unmanaged code.</source>
          <target state="translated">에 비관리 코드와 작동 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.AutoFlush">
          <source>Demand value <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; associated enumeration: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">요청 값 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 연관 된 열거형: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Close">
          <source>Flushes the output buffer and then calls the <ph id="ph1">&lt;see langword="Close" /&gt;</ph> method on each of the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated">출력 버퍼를 플러시한 다음 각 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>에 대해 <ph id="ph1">&lt;see langword="Close" /&gt;</ph> 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>Use this method when the output goes to a file, such as to the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</source>
          <target state="translated">이 메서드를 사용 하 여 출력 되 면 파일에 같은 <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>.</source>
          <target state="translated">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>Setting <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> 를 <ph id="ph2">`true`</ph> 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태 플러시되지 것입니다 있다는 것을 의미 합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">따라서 올바르게 문자의 다음 블록을 인코딩할 수 있도록 (부분 문자)의 상태를 유지 하기 위해 인코더 수 있습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">이 시나리오는 u t f 8와 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩할만 수 있는 위치에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> named <ph id="ph2">`myTextListener`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> 라는 <ph id="ph2">`myTextListener`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source><ph id="ph1">`myTextListener`</ph> uses a <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> called <ph id="ph3">`myOutputWriter`</ph> to write to a file named <ph id="ph4">`TestFile.txt`</ph>.</source>
          <target state="translated"><ph id="ph1">`myTextListener`</ph> 사용 하 여 한 <ph id="ph2">&lt;xref:System.IO.StreamWriter&gt;</ph> 호출 <ph id="ph3">`myOutputWriter`</ph> 라는 파일에 쓸 수 <ph id="ph4">`TestFile.txt`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the output.</source>
          <target state="translated">이 예제에서는 파일, 스트림 및 텍스트 기록기, 파일을 텍스트 한 줄을 씁니다 및 플러시합니다 만들고 닫습니다 출력 합니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>for operating with unmanaged code.</source>
          <target state="translated">에 비관리 코드와 작동 합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Close">
          <source>Demand value <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; associated enumeration: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">요청 값 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 연관 된 열거형: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Emits an error message.</source>
          <target state="translated">오류 메시지를 내보냅니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>A message to emit.</source>
          <target state="translated">내보낼 메시지입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>Emits the specified error message.</source>
          <target state="translated">지정된 오류 메시지를 내보냅니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>The default behavior is that the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> outputs the message to a message box when the application is running in user interface mode and to the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances in the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">기본 동작은 하는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> 응용 프로그램이 실행 하는 사용자 인터페이스 모드에는 메시지 상자에 메시지를 출력는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> 인스턴스에 <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>The display of the message box is dependent on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">메시지 상자의 표시의 존재 여부에 따라 달라 집니다.는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> 에 속하지 않는 <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> 컬렉션, 메시지 상자가 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> 으로 제거할 수 있습니다는 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>지우기<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>제거<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, 또는 호출 하 여는 <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> 는 메서드<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> 속성 (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">추가 하 여이 동작을 사용자 지정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, 제거 또는 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> method to print a message during exception handling.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> 메서드 예외를 처리할 때 메시지 표시를 합니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> method in a switch statement.</source>
          <target state="translated">사용할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> switch 문에서 메서드.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>A message to emit.</source>
          <target state="translated">내보낼 메시지입니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>A detailed message to emit.</source>
          <target state="translated">내보낼 자세한 메시지입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>Emits an error message and a detailed error message.</source>
          <target state="translated">오류 메시지와 자세한 오류 메시지를 내보냅니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>The default behavior is that the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> outputs the message to a message box when the application is running in user interface mode and to the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances in the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">기본 동작은 하는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> 응용 프로그램이 실행 하는 사용자 인터페이스 모드에는 메시지 상자에 메시지를 출력는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> 인스턴스에 <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>The display of the message box is dependent on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">메시지 상자의 표시의 존재 여부에 따라 달라 집니다.는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> 에 속하지 않는 <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> 컬렉션, 메시지 상자가 표시 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>clear<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">&amp;lt;</ph>remove<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> 으로 제거할 수 있습니다는 <bpt id="p1">[</bpt> <ph id="ph2">&amp;lt;</ph>지우기<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, <bpt id="p2">[</bpt> <ph id="ph4">&amp;lt;</ph>제거<ph id="ph5">&amp;gt;</ph><ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, 또는 호출 하 여는 <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> 는 메서드<ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> 속성 (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection.</source>
          <target state="translated">추가 하 여이 동작을 사용자 지정할 수 있습니다는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, 제거 또는 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> method to print a message during exception handling.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> 메서드 예외를 처리할 때 메시지 표시를 합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> method in a switch statement.</source>
          <target state="translated">사용할 수도 있습니다는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> switch 문에서 메서드.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Flush">
          <source>Flushes the output buffer and causes buffered data to write to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated">출력 버퍼를 플러시하고 버퍼링된 데이터를 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션에 쓰도록 합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>.</source>
          <target state="translated">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Flush%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Close%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>Setting <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> 를 <ph id="ph2">`true`</ph> 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태 플러시되지 것입니다 있다는 것을 의미 합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">따라서 올바르게 문자의 다음 블록을 인코딩할 수 있도록 (부분 문자)의 상태를 유지 하기 위해 인코더 수 있습니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">이 시나리오는 u t f 8와 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩할만 수 있는 위치에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> named <ph id="ph2">`myTextListener`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> 라는 <ph id="ph2">`myTextListener`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source><ph id="ph1">`myTextListener`</ph> uses a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> called <ph id="ph3">`myFileStream`</ph> to write to a file named <ph id="ph4">`TestFile.txt`</ph>.</source>
          <target state="translated"><ph id="ph1">`myTextListener`</ph> 사용 하 여 한 <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> 호출 <ph id="ph3">`myFileStream`</ph> 라는 파일에 쓸 수 <ph id="ph4">`TestFile.txt`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Flush">
          <source>The example creates the stream, opens the file if it exists or creates a new one, writes one line of text to the file, and then flushes and closes the output.</source>
          <target state="translated">이 예제에서는 스트림을 만들고, 존재 또는 새 브러시를 만듭니다, 그리고 파일을 텍스트 한 줄에 기록한 다음 플러시하고 하 고 출력을 닫습니다 파일을 엽니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Indent">
          <source>Increases the current <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.IndentLevel" /&gt;</ph> by one.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.IndentLevel" /&gt;</ph>이 1씩 증가합니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Indent">
          <source>The following example sets the indent level and emits debugging messages.</source>
          <target state="translated">다음 예제에서는 들여쓰기 수준을 설정 하 고 디버깅 메시지를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Indent">
          <source>This example produces the following output:</source>
          <target state="translated">이 예제는 다음과 같은 출력을 생성합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>Gets or sets the indent level.</source>
          <target state="translated">들여쓰기 수준을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>The indent level.</source>
          <target state="translated">들여쓰기 수준입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>The default is 0.</source>
          <target state="translated">기본값은 0입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Debug.IndentLevel%2A&gt;</ph> property represents the number of times the indent of size <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> is applied.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.IndentLevel%2A&gt;</ph> 속성 크기의 들여쓰기 횟수를 나타내는 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>The following example sets the indent level and emits debugging messages.</source>
          <target state="translated">다음 예제에서는 들여쓰기 수준을 설정 하 고 디버깅 메시지를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentLevel">
          <source>This example produces the following output:</source>
          <target state="translated">이 예제는 다음과 같은 출력을 생성합니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>Gets or sets the number of spaces in an indent.</source>
          <target state="translated">들여쓰기의 공백 수를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>The number of spaces in an indent.</source>
          <target state="translated">들여쓰기의 공백 수입니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>The default is four.</source>
          <target state="translated">기본값은 4입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> interprets this number as spaces.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> 공백으로이 숫자를 해석 합니다.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>An <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> ignores this value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> 이 값을 무시 합니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>To set the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> for <ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>, you can also edit the configuration file corresponding to the name of your application.</source>
          <target state="translated">설정 하는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.AutoFlush%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.IndentSize%2A&gt;</ph> 에 대 한 <ph id="ph3">&lt;xref:System.Diagnostics.Debug&gt;</ph>, 응용 프로그램의 이름에 해당 하는 구성 파일을 편집할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.IndentSize">
          <source>The configuration file should be formatted as shown in the following example.</source>
          <target state="translated">다음 예제와 같이 구성 파일의 형식은 해야 합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.Debug.Listeners">
          <source>Gets the collection of listeners that is monitoring the debug output.</source>
          <target state="translated">디버그 출력을 모니터링하는 수신기 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListenerCollection" /&gt;</ph> representing a collection of type <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> that monitors the debug output.</source>
          <target state="translated">디버그 출력을 모니터링하는 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListenerCollection" /&gt;</ph> 형식의 컬렉션을 나타내는 <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>The listeners produce formatted output from the debug output.</source>
          <target state="translated">수신기는 디버그 출력에서 형식이 지정 된 출력을 만듭니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>By default, the collection contains an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> class.</source>
          <target state="translated">기본적으로 컬렉션의 인스턴스를 포함 된 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>To remove the default listener, call the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection.Remove%2A&gt;</ph> method, and pass it the instance of the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">기본 수신기를 제거 하려면 호출는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection.Remove%2A&gt;</ph> 메서드를 전달 하는 것의 인스턴스는 <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>To redirect output to the console window, add an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>.</source>
          <target state="translated">콘솔 창에 출력을 리디렉션할의 인스턴스를 추가 <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>To redirect output to a file or stream, add an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</source>
          <target state="translated">파일이 나 스트림에 출력을 리디렉션할의 인스턴스를 추가 <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection is shared by both the <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> and the <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph> classes; adding a trace listener to either class adds the listener to both.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션 모두에 의해 공유 되는 <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph> 클래스; 둘 다에 수신기를 추가 하는 클래스를 추적 수신기를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> that outputs to the console screen.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> 콘솔 화면에 출력 하 합니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>The code then adds the new listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">다음 추가를 새 수신기 코드는 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>for operating with unmanaged code.</source>
          <target state="translated">에 비관리 코드와 작동 합니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.Debug.Listeners">
          <source>Demand value <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; associated enumeration: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">요청 값 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>; 연관 된 열거형: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Writes a message followed by a line terminator to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 메시지를 쓰고 뒤에 줄 종결자를 붙입니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String)">
          <source>The message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String)">
          <source>Writes a message followed by a line terminator to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 메시지를 쓰고 뒤에 줄 종결자를 붙입니다.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Print(System.String)">
          <source>The default line terminator is a carriage return followed by a line feed.</source>
          <target state="translated">기본 줄 종결자는 캐리지 리턴 뒤에 줄 바꿈 합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Print(System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">기본적으로 출력 인스턴스에 기록 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 배열의 개체에 해당하는 0개 이상의 서식 항목과 결합된 텍스트를 포함하는 합성 서식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>An object array containing zero or more objects to format.</source>
          <target state="translated">형식을 지정할 개체를 0개 이상 포함하는 개체 배열입니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>Writes a formatted string followed by a line terminator to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 서식이 지정된 문자열을 쓰고 뒤에 줄 종결자를 붙입니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">이 메서드는 사용 된 개체의 값을 텍스트 표현으로 변환 표현을 문자열로에 포함 하는.NET Framework의 합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">기본적으로 출력 인스턴스에 기록 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph>이 잘못되었습니다.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>-or-</source>
          <target state="translated">또는</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
          <source>The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.</source>
          <target state="translated">형식을 지정할 인수를 나타내는 숫자가 0보다 작거나, 형식을 지정할 해당 개체의 수보다 크거나 같은 경우</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Unindent">
          <source>Decreases the current <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.IndentLevel" /&gt;</ph> by one.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.IndentLevel" /&gt;</ph>을 1씩 줄입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Unindent">
          <source>The following example sets the indent level and emits debugging messages.</source>
          <target state="translated">다음 예제에서는 들여쓰기 수준을 설정 하 고 디버깅 메시지를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Unindent">
          <source>This example produces the following output:</source>
          <target state="translated">이 예제는 다음과 같은 출력을 생성합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Writes information about the debug to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 디버그에 대한 정보를 씁니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>에 이름을 보낸 개체입니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 개체의 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 메서드 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">기본적으로 출력 인스턴스에 기록 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> 추적 수신기의 메서드.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> 라는 <ph id="ph2">`generalSwitch`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">이 스위치는 코드 샘플은 외부에서 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">스위치로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> 첫 번째 오류 메시지를 출력 이상 또는 <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">수신기를 추가에 대 한 내용은 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션 참조는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">그런 다음은 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> 로 설정 된 <ph id="ph2">`Verbose`</ph>,이 예제에서는 첫 번째 메시지와 같은 줄에 두 번째 오류 메시지를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">줄 종결자를 차례로 두 번째 메시지를 따릅니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>Writes a message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 메시지를 씁니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">기본적으로 출력 인스턴스에 기록 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> 추적 수신기의 메서드.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> 라는 <ph id="ph2">`generalSwitch`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">이 스위치는 코드 샘플은 외부에서 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">스위치로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> 첫 번째 오류 메시지를 출력 이상 또는 <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">수신기를 추가에 대 한 내용은 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션 참조는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">그런 다음은 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> 로 설정 된 <ph id="ph2">`Verbose`</ph>,이 예제에서는 첫 번째 메시지와 같은 줄에 두 번째 오류 메시지를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">줄 종결자를 차례로 두 번째 메시지를 따릅니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>에 이름을 보낸 개체입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">출력을 구성하는 데 사용되는 범주 이름입니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 범주 이름 및 개체의 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 메서드 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">기본적으로 출력 인스턴스에 기록 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>Use the <ph id="ph1">`category`</ph> parameter to group output messages.</source>
          <target state="translated">사용 된 <ph id="ph1">`category`</ph> 그룹에 대 한 매개 변수는 메시지를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> 추적 수신기의 메서드.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> 라는 <ph id="ph2">`generalSwitch`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">이 스위치는 코드 샘플은 외부에서 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">스위치로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> 첫 번째 오류 메시지를 출력 이상 또는 <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">수신기를 추가에 대 한 내용은 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션 참조는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">그런 다음은 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> 로 설정 된 <ph id="ph2">`Verbose`</ph>,이 예제에서는 첫 번째 메시지와 같은 줄에 두 번째 오류 메시지를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">줄 종결자를 차례로 두 번째 메시지를 따릅니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">출력을 구성하는 데 사용되는 범주 이름입니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 범주 이름 및 메시지를 씁니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">기본적으로 출력 인스턴스에 기록 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>Use the <ph id="ph1">`category`</ph> parameter to group output messages.</source>
          <target state="translated">사용 된 <ph id="ph1">`category`</ph> 그룹에 대 한 매개 변수는 메시지를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> 추적 수신기의 메서드.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> 라는 <ph id="ph2">`generalSwitch`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">이 스위치는 코드 샘플은 외부에서 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">스위치로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> 첫 번째 오류 메시지를 출력 이상 또는 <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">수신기를 추가에 대 한 내용은 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션 참조는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">그런 다음은 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> 로 설정 된 <ph id="ph2">`Verbose`</ph>,이 예제에서는 첫 번째 메시지와 같은 줄에 두 번째 오류 메시지를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.Write(System.String,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">줄 종결자를 차례로 두 번째 메시지를 따릅니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Writes information about the debug to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">조건이 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이면 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 디버그에 대한 정보를 씁니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">평가할 조건식입니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the value is written to the trace listeners in the collection.</source>
          <target state="translated">조건이 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 컬렉션의 추적 수신기에 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>에 이름을 보낸 개체입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">조건이 <ph id="ph3">&lt;see langword="true" /&gt;</ph>인 경우 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 개체의 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 메서드 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">기본적으로 출력 인스턴스에 기록 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> 추적 수신기의 메서드.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> 라는 <ph id="ph2">`generalSwitch`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">이 스위치는 코드 샘플은 외부에서 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first name of the value parameter to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">스위치로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> 이상에 값 매개 변수를 이름이 출력 또는 <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">수신기를 추가에 대 한 내용은 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션 참조는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs a message on the same line as the first message.</source>
          <target state="translated">그런 다음은 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> 로 설정 된 <ph id="ph2">`Verbose`</ph>,이 예제에서는 첫 번째 메시지와 같은 줄에 메시지를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">줄 종결자를 차례로 두 번째 메시지를 따릅니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">사용 하 여 응용 프로그램을 계측의 성능 저하를 최소화할 수 <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> 문을 사용 하는 대신 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> 문.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">다음 두 코드 예에서는 동일한 디버깅 메시지를 보냅니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>.</source>
          <target state="translated">그러나 첫 번째 예는 훨씬 더 빠르게 추적이 꺼져 때문에 경우 <bpt id="p1">&lt;c&gt;</bpt>기능<ept id="p1">&lt;/c&gt;</ept> 계산 <ph id="ph1">&lt;see langword="false" /&gt;</ph>를 호출 하지 않으면 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">두 번째 예에서는 항상 호출 <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>경우에, <bpt id="p1">&lt;c&gt;</bpt>기능<ept id="p1">&lt;/c&gt;</ept> 은 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 추적 출력이 생성 되 고 있습니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">이 인해 불필요 한 복잡 한 코드가 실행 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>First example:</source>
          <target state="translated">첫 번째 예의 경우:</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
          <source>Second example:</source>
          <target state="translated">두 번째 예의 경우:</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">평가할 조건식입니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the message is written to the trace listeners in the collection.</source>
          <target state="translated">조건이 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 컬렉션의 추적 수신기에 메시지를 씁니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>Writes a message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">조건이 <ph id="ph2">&lt;see langword="true" /&gt;</ph>인 경우 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 메시지를 씁니다.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">기본적으로 출력 인스턴스에 기록 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> 추적 수신기의 메서드.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> 라는 <ph id="ph2">`generalSwitch`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">이 스위치는 코드 샘플은 외부에서 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">스위치로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> 첫 번째 오류 메시지를 출력 이상 또는 <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>For information about adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">수신기를 추가 하는 방법에 대 한 내용은 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션 참조는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">그런 다음은 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> 로 설정 된 <ph id="ph2">`Verbose`</ph>,이 예제에서는 첫 번째 메시지와 같은 줄에 두 번째 오류 메시지를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">줄 종결자를 차례로 두 번째 메시지를 따릅니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">사용 하 여 응용 프로그램을 계측의 성능 저하를 최소화할 수 <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> 문을 사용 하는 대신 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> 문.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">다음 두 코드 예에서는 동일한 디버깅 메시지를 보냅니다.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>.</source>
          <target state="translated">그러나 첫 번째 예는 훨씬 더 빠르게 추적이 꺼져 때문에 경우 <bpt id="p1">&lt;c&gt;</bpt>기능<ept id="p1">&lt;/c&gt;</ept> 계산 <ph id="ph1">&lt;see langword="false" /&gt;</ph>를 호출 하지 않으면 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">두 번째 예에서는 항상 호출 <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>경우에, <bpt id="p1">&lt;c&gt;</bpt>기능<ept id="p1">&lt;/c&gt;</ept> 은 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 추적 출력이 생성 되 고 있습니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">이 인해 불필요 한 복잡 한 코드가 실행 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>First example:</source>
          <target state="translated">첫 번째 예의 경우:</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
          <source>Second example:</source>
          <target state="translated">두 번째 예의 경우:</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">평가할 조건식입니다.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the category name and value are written to the trace listeners in the collection.</source>
          <target state="translated">조건이 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 컬렉션의 추적 수신기에 범주 이름과 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>에 이름을 보낸 개체입니다.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">출력을 구성하는 데 사용되는 범주 이름입니다.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">조건이 <ph id="ph3">&lt;see langword="true" /&gt;</ph>인 경우 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 범주 이름 및 개체의 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 메서드 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">기본적으로 출력 인스턴스에 기록 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph> 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> 추적 수신기의 메서드.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> 라는 <ph id="ph2">`generalSwitch`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">이 스위치는 코드 샘플은 외부에서 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Verbose`</ph>, the example outputs the name of the <ph id="ph3">`myObject`</ph> and the <ph id="ph4">`category`</ph> to the <ph id="ph5">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">스위치로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Verbose`</ph>, 출력의 이름을 <ph id="ph3">`myObject`</ph> 및 <ph id="ph4">`category`</ph> 에 <ph id="ph5">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">수신기를 추가에 대 한 내용은 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션 참조는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Error`</ph> or higher, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">그런 다음은 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> 로 설정 된 <ph id="ph2">`Error`</ph> 이상에 예제에서는 첫 번째 메시지와 같은 줄에 두 번째 오류 메시지를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">줄 종결자를 차례로 두 번째 메시지를 따릅니다.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">사용 하 여 응용 프로그램을 계측의 성능 저하를 최소화할 수 <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> 문을 사용 하는 대신 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> 문.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">다음 두 코드 예에서는 동일한 디버깅 메시지를 보냅니다.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>.</source>
          <target state="translated">그러나 첫 번째 예는 훨씬 더 빠르게 추적이 꺼져 때문에 경우 <bpt id="p1">&lt;c&gt;</bpt>기능<ept id="p1">&lt;/c&gt;</ept> 계산 <ph id="ph1">&lt;see langword="false" /&gt;</ph>를 호출 하지 않으면 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">두 번째 예에서는 항상 호출 <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>경우에, <bpt id="p1">&lt;c&gt;</bpt>기능<ept id="p1">&lt;/c&gt;</ept> 은 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 추적 출력이 생성 되 고 있습니다.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">이 인해 불필요 한 복잡 한 코드가 실행 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>First example:</source>
          <target state="translated">첫 번째 예의 경우:</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
          <source>Second example:</source>
          <target state="translated">두 번째 예의 경우:</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">평가할 조건식입니다.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the category name and message are written to the trace listeners in the collection.</source>
          <target state="translated">조건이 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 컬렉션의 추적 수신기에 범주 이름과 메시지를 씁니다.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">출력을 구성하는 데 사용되는 범주 이름입니다.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">조건이 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이면 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 범주 이름 및 메시지를 씁니다.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">기본적으로 출력 인스턴스에 기록 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph> 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType&gt;</ph> method of the trace listener.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType&gt;</ph> 추적 수신기의 메서드.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> 라는 <ph id="ph2">`generalSwitch`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">이 스위치는 코드 샘플은 외부에서 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Verbose`</ph>, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">스위치로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Verbose`</ph>, 첫 번째 오류 메시지를 출력은 <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">수신기를 추가에 대 한 내용은 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션 참조는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Error`</ph> or higher, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">그런 다음은 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> 로 설정 된 <ph id="ph2">`Error`</ph> 이상에 예제에서는 첫 번째 메시지와 같은 줄에 두 번째 오류 메시지를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">줄 종결자를 차례로 두 번째 메시지를 따릅니다.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">사용 하 여 응용 프로그램을 계측의 성능 저하를 최소화할 수 <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> 문을 사용 하는 대신 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph> 문.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">다음 두 코드 예에서는 동일한 디버깅 메시지를 보냅니다.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>.</source>
          <target state="translated">그러나 첫 번째 예는 훨씬 더 빠르게 추적이 꺼져 때문에 경우 <bpt id="p1">&lt;c&gt;</bpt>기능<ept id="p1">&lt;/c&gt;</ept> 계산 <ph id="ph1">&lt;see langword="false" /&gt;</ph>를 호출 하지 않으면 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.Write(System.String)" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">두 번째 예에서는 항상 호출 <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /&gt;</ph>경우에, <bpt id="p1">&lt;c&gt;</bpt>기능<ept id="p1">&lt;/c&gt;</ept> 은 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 추적 출력이 생성 되 고 있습니다.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">이 인해 불필요 한 복잡 한 코드가 실행 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>First example:</source>
          <target state="translated">첫 번째 예의 경우:</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
          <source>Second example:</source>
          <target state="translated">두 번째 예의 경우:</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Writes information about the debug to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 디버그에 대한 정보를 씁니다.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>에 이름을 보낸 개체입니다.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 개체의 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 메서드 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">기본적으로 출력 인스턴스에 기록 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> 추적 수신기의 메서드.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> 라는 <ph id="ph2">`generalSwitch`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">이 스위치는 코드 샘플은 외부에서 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">스위치로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> 첫 번째 오류 메시지를 출력 이상 또는 <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">수신기를 추가에 대 한 내용은 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션 참조는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the name of the object on the same line as the first message.</source>
          <target state="translated">그런 다음은 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> 로 설정 된 <ph id="ph2">`Verbose`</ph>, 첫 번째 메시지와 같은 줄에 개체의 이름을 출력 합니다.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">줄 종결자를 차례로 두 번째 메시지를 따릅니다.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>Writes a message followed by a line terminator to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 메시지를 쓰고 뒤에 줄 종결자를 붙입니다.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">기본적으로 출력 인스턴스에 기록 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> 추적 수신기의 메서드.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> 라는 <ph id="ph2">`generalSwitch`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">이 스위치는 코드 샘플은 외부에서 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">스위치로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> 첫 번째 오류 메시지를 출력 이상 또는 <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">수신기를 추가에 대 한 내용은 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션 참조는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">그런 다음은 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> 로 설정 된 <ph id="ph2">`Verbose`</ph>,이 예제에서는 첫 번째 메시지와 같은 줄에 두 번째 오류 메시지를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">줄 종결자를 차례로 두 번째 메시지를 따릅니다.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>에 이름을 보낸 개체입니다.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">출력을 구성하는 데 사용되는 범주 이름입니다.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 범주 이름 및 개체의 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 메서드 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">기본적으로 출력 인스턴스에 기록 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph> 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> 추적 수신기의 메서드.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> 라는 <ph id="ph2">`generalSwitch`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">이 스위치는 코드 샘플은 외부에서 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">스위치로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> 첫 번째 오류 메시지를 출력 이상 또는 <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">수신기를 추가에 대 한 내용은 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션 참조는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">그런 다음은 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> 로 설정 된 <ph id="ph2">`Verbose`</ph>,이 예제에서는 첫 번째 메시지와 같은 줄에 두 번째 오류 메시지를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
          <source>The second message is followed by a line terminator.</source>
          <target state="translated">두 번째 메시지 줄 종결자를 차례로 나옵니다.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 배열의 개체에 해당하는 0개 이상의 서식 항목과 결합된 텍스트를 포함하는 합성 서식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>An object array that contains zero or more objects to format.</source>
          <target state="translated">형식을 지정할 개체를 0개 이상 포함하는 개체 배열입니다.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>Writes a formatted message followed by a line terminator to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 서식이 지정된 메시지를 쓰고 뒤에 줄 종결자를 붙입니다.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</source>
          <target state="translated">이 메서드는 사용 된 개체의 값을 텍스트 표현으로 변환 표현을 문자열로에 포함 하는.NET Framework의 합니다.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>The  keyword in the syntax for this method implies that the object array can be a single value.</source>
          <target state="translated">이 메서드에 대 한 구문에서 키워드는 개체 배열의 단일 값이 될 수 있는지를 의미 합니다.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>The exception to this is the <ph id="ph1">&lt;xref:System.String&gt;</ph> object.</source>
          <target state="translated">이에 대 한 예외는 <ph id="ph1">&lt;xref:System.String&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>Explicit overloads take precedence, so an <ph id="ph1">`arg`</ph> value of a single string will default to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> overload.</source>
          <target state="translated">명시적 오버 로드에 우선 하므로 <ph id="ph1">`arg`</ph> 단일 문자열의 값은 기본적으로 <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType&gt;</ph> 오버 로드 합니다.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">기본적으로 출력 인스턴스에 기록 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method of the trace listener.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 추적 수신기의 메서드.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">출력을 구성하는 데 사용되는 범주 이름입니다.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 범주 이름 및 메시지를 씁니다.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">기본적으로 출력 인스턴스에 기록 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph> 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> 추적 수신기의 메서드.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> 라는 <ph id="ph2">`generalSwitch`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">이 스위치는 코드 샘플은 외부에서 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">스위치로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> 첫 번째 오류 메시지를 출력 이상 또는 <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">수신기를 추가에 대 한 내용은 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션 참조는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message and the <ph id="ph3">`category`</ph> on the same line as the first message.</source>
          <target state="translated">그런 다음은 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> 로 설정 된 <ph id="ph2">`Verbose`</ph>, 두 번째 오류 메시지 출력 및 <ph id="ph3">`category`</ph> 첫 번째 메시지와 같은 줄에 합니다.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">줄 종결자를 차례로 두 번째 메시지를 따릅니다.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.Debug">
          <source>Writes information about the debug to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">조건이 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이면 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 디버그에 대한 정보를 씁니다.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">평가할 조건식입니다.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the value is written to the trace listeners in the collection.</source>
          <target state="translated">조건이 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 컬렉션의 추적 수신기에 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>에 이름을 보낸 개체입니다.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">조건이 <ph id="ph3">&lt;see langword="true" /&gt;</ph>인 경우 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 개체의 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 메서드 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">기본적으로 출력 인스턴스에 기록 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> 추적 수신기의 메서드.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> 라는 <ph id="ph2">`generalSwitch`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">이 스위치는 코드 샘플은 외부에서 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">스위치로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> 첫 번째 오류 메시지를 출력 이상 또는 <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">수신기를 추가에 대 한 내용은 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션 참조는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the name of the object on the same line as the first message.</source>
          <target state="translated">그런 다음은 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> 로 설정 된 <ph id="ph2">`Verbose`</ph>, 첫 번째 메시지와 같은 줄에 개체의 이름을 출력 합니다.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">줄 종결자를 차례로 두 번째 메시지를 따릅니다.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">사용 하 여 응용 프로그램을 계측의 성능 저하를 최소화할 수 <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> 문을 사용 하는 대신 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> 문.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">다음 두 코드 예에서는 동일한 디버깅 메시지를 보냅니다.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>.</source>
          <target state="translated">그러나 첫 번째 예는 훨씬 더 빠르게 추적이 꺼져 때문에 경우 <bpt id="p1">&lt;c&gt;</bpt>기능<ept id="p1">&lt;/c&gt;</ept> 계산 <ph id="ph1">&lt;see langword="false" /&gt;</ph>를 호출 하지 않으면 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">두 번째 예에서는 항상 호출 <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>경우에, <bpt id="p1">&lt;c&gt;</bpt>기능<ept id="p1">&lt;/c&gt;</ept> 은 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 추적 출력이 생성 되 고 있습니다.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">이 인해 불필요 한 복잡 한 코드가 실행 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>First example:</source>
          <target state="translated">첫 번째 예의 경우:</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
          <source>Second example:</source>
          <target state="translated">두 번째 예의 경우:</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">평가할 조건식입니다.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the message is written to the trace listeners in the collection.</source>
          <target state="translated">조건이 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 컬렉션의 추적 수신기에 메시지를 씁니다.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>Writes a message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">조건이 <ph id="ph2">&lt;see langword="true" /&gt;</ph>인 경우 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 메시지를 씁니다.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">기본적으로 출력 인스턴스에 기록 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method of the trace listener.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 추적 수신기의 메서드.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> 라는 <ph id="ph2">`generalSwitch`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">이 스위치는 코드 샘플은 외부에서 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">스위치로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> 첫 번째 오류 메시지를 출력 이상 또는 <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>For information about adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">수신기를 추가 하는 방법에 대 한 내용은 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션 참조는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">그런 다음은 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> 로 설정 된 <ph id="ph2">`Verbose`</ph>,이 예제에서는 첫 번째 메시지와 같은 줄에 두 번째 오류 메시지를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">줄 종결자를 차례로 두 번째 메시지를 따릅니다.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">사용 하 여 응용 프로그램을 계측의 성능 저하를 최소화할 수 <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> 문을 사용 하는 대신 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> 문.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">다음 두 코드 예에서는 동일한 디버깅 메시지를 보냅니다.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>.</source>
          <target state="translated">그러나 첫 번째 예는 훨씬 더 빠르게 추적이 꺼져 때문에 경우 <bpt id="p1">&lt;c&gt;</bpt>기능<ept id="p1">&lt;/c&gt;</ept> 계산 <ph id="ph1">&lt;see langword="false" /&gt;</ph>를 호출 하지 않으면 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">두 번째 예에서는 항상 호출 <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>경우에, <bpt id="p1">&lt;c&gt;</bpt>기능<ept id="p1">&lt;/c&gt;</ept> 은 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 추적 출력이 생성 되 고 있습니다.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">이 인해 불필요 한 복잡 한 코드가 실행 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>First example:</source>
          <target state="translated">첫 번째 예의 경우:</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
          <source>Second example:</source>
          <target state="translated">두 번째 예의 경우:</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The conditional expression to evaluate.</source>
          <target state="translated">평가할 조건식입니다.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>If the condition is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the category name and value are written to the trace listeners in the collection.</source>
          <target state="translated">조건이 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이면 컬렉션의 추적 수신기에 범주 이름과 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>An object whose name is sent to the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph>에 이름을 보낸 개체입니다.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">출력을 구성하는 데 사용되는 범주 이름입니다.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">조건이 <ph id="ph3">&lt;see langword="true" /&gt;</ph>인 경우 <ph id="ph2">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 범주 이름 및 개체의 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 메서드 값을 씁니다.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">기본적으로 출력 인스턴스에 기록 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph> 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> 추적 수신기의 메서드.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> 라는 <ph id="ph2">`generalSwitch`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">이 스위치는 코드 샘플은 외부에서 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">스위치로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> 첫 번째 오류 메시지를 출력 이상 또는 <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">수신기를 추가에 대 한 내용은 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션 참조는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message on the same line as the first message.</source>
          <target state="translated">그런 다음은 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> 로 설정 된 <ph id="ph2">`Verbose`</ph>,이 예제에서는 첫 번째 메시지와 같은 줄에 두 번째 오류 메시지를 출력 합니다.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">줄 종결자를 차례로 두 번째 메시지를 따릅니다.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">사용 하 여 응용 프로그램을 계측의 성능 저하를 최소화할 수 <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> 문을 사용 하는 대신 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> 문.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">다음 두 코드 예에서는 동일한 디버깅 메시지를 보냅니다.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>.</source>
          <target state="translated">그러나 첫 번째 예는 훨씬 더 빠르게 추적이 꺼져 때문에 경우 <bpt id="p1">&lt;c&gt;</bpt>기능<ept id="p1">&lt;/c&gt;</ept> 계산 <ph id="ph1">&lt;see langword="false" /&gt;</ph>를 호출 하지 않으면 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">두 번째 예에서는 항상 호출 <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>경우에, <bpt id="p1">&lt;c&gt;</bpt>기능<ept id="p1">&lt;/c&gt;</ept> 은 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 추적 출력이 생성 되 고 있습니다.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">이 인해 불필요 한 복잡 한 코드가 실행 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>First example:</source>
          <target state="translated">첫 번째 예의 경우:</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
          <source>Second example:</source>
          <target state="translated">두 번째 예의 경우:</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to cause a message to be written; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">메시지를 작성하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그러지 않으려면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">쓸 메시지입니다.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">출력을 구성하는 데 사용되는 범주 이름입니다.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> collection if a condition is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">조건이 <ph id="ph2">&lt;see langword="true" /&gt;</ph>이면 <ph id="ph1">&lt;see cref="P:System.Diagnostics.Debug.Listeners" /&gt;</ph> 컬렉션의 추적 수신기에 범주 이름 및 메시지를 씁니다.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">기본적으로 출력 인스턴스에 기록 <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
          <target state="translated"><ph id="ph1">`category`</ph> 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method of the trace listener.</source>
          <target state="translated">이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType&gt;</ph> 추적 수신기의 메서드.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> named <ph id="ph2">`generalSwitch`</ph>.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> 라는 <ph id="ph2">`generalSwitch`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>This switch is set outside of the code sample.</source>
          <target state="translated">이 스위치는 코드 샘플은 외부에서 설정 됩니다.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>If the switch is set to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph><ph id="ph2">`Error`</ph> or higher, the example outputs the first error message to the <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>.</source>
          <target state="translated">스위치로 설정 된 경우는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> <ph id="ph2">`Error`</ph> 첫 번째 오류 메시지를 출력 이상 또는 <ph id="ph3">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>For information on adding a listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> collection, see the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class.</source>
          <target state="translated">수신기를 추가에 대 한 내용은 <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A&gt;</ph> 컬렉션 참조는 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>Then, if the <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> is set to <ph id="ph2">`Verbose`</ph>, the example outputs the second error message and the <ph id="ph3">`category`</ph> on the same line as the first message.</source>
          <target state="translated">그런 다음은 <ph id="ph1">&lt;xref:System.Diagnostics.TraceLevel&gt;</ph> 로 설정 된 <ph id="ph2">`Verbose`</ph>, 두 번째 오류 메시지 출력 및 <ph id="ph3">`category`</ph> 첫 번째 메시지와 같은 줄에 합니다.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>A line terminator follows the second message.</source>
          <target state="translated">줄 종결자를 차례로 두 번째 메시지를 따릅니다.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>You can minimize the performance penalty of instrumenting your application by using <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> statements instead of using <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> statements.</source>
          <target state="translated">사용 하 여 응용 프로그램을 계측의 성능 저하를 최소화할 수 <ph id="ph1">&lt;see langword="If...Then" /&gt;</ph> 문을 사용 하는 대신 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph> 문.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>The following two code examples send the same debugging message.</source>
          <target state="translated">다음 두 코드 예에서는 동일한 디버깅 메시지를 보냅니다.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>However, the first example is much faster when tracing is off, because if <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> evaluates to <ph id="ph1">&lt;see langword="false" /&gt;</ph>, you do not call <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>.</source>
          <target state="translated">그러나 첫 번째 예는 훨씬 더 빠르게 추적이 꺼져 때문에 경우 <bpt id="p1">&lt;c&gt;</bpt>기능<ept id="p1">&lt;/c&gt;</ept> 계산 <ph id="ph1">&lt;see langword="false" /&gt;</ph>를 호출 하지 않으면 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>The second example always calls <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>, even when <bpt id="p1">&lt;c&gt;</bpt>mySwitch.TraceError<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="false" /&gt;</ph> and no tracing output is produced.</source>
          <target state="translated">두 번째 예에서는 항상 호출 <ph id="ph1">&lt;see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /&gt;</ph>경우에, <bpt id="p1">&lt;c&gt;</bpt>기능<ept id="p1">&lt;/c&gt;</ept> 은 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 추적 출력이 생성 되 고 있습니다.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>This can result in unnecessary execution of arbitrarily complex code.</source>
          <target state="translated">이 인해 불필요 한 복잡 한 코드가 실행 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>First example:</source>
          <target state="translated">첫 번째 예의 경우:</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
          <source>Second example:</source>
          <target state="translated">두 번째 예의 경우:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>