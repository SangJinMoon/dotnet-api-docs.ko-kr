<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="StackTrace.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae0584552111dbb266fdea14b49a674f0fec8c61c22827d8f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">111dbb266fdea14b49a674f0fec8c61c22827d8f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.StackTrace">
          <source>Represents a stack trace, which is an ordered collection of one or more stack frames.</source>
          <target state="translated">여러 스택 프레임의 정렬된 컬렉션에 해당하는 스택 추적을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackTrace">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> information will be most informative with Debug build configurations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> 정보는 디버그 빌드 구성을 통해 풍부한 정보를 제공 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackTrace">
          <source>By default, Debug builds include debug symbols, while Release builds do not.</source>
          <target state="translated">기본적으로 디버그 빌드는 디버그 기호를 포함 하지만 릴리스 빌드는 그렇지 않습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackTrace">
          <source>The debug symbols contain most of the file, method name, line number, and column information used in constructing <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> objects.</source>
          <target state="translated">대부분의 파일, 메서드 이름, 줄 번호 및 구성할 때 사용 되는 열 정보를 포함 하는 디버그 기호 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackTrace">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> might not report as many method calls as expected, due to code transformations that occur during optimization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> 최적화 하는 동안 발생 하는 코드 변환으로 인해 예상 만큼 많은 메서드 호출을 보고할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackTrace">
          <source>The following console application demonstrates how to create a simple <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> and iterate through its frames to obtain debugging and diagnostic information.</source>
          <target state="translated">다음 콘솔 응용 프로그램을 만드는 간단한 방법을 보여 줍니다 <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> 디버깅 및 진단 정보를 얻으려면 프레임을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackTrace">
          <source>for the ability of inheritors to access unmanaged code.</source>
          <target state="translated">상속자 참고 사항의 비관리 코드에 액세스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackTrace">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">연관된 열거형: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.StackTrace">
          <source>This class cannot be inherited by partially trusted code.</source>
          <target state="translated">부분적으로 신뢰할 수 있는 코드에서이 클래스는 상속 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.StackTrace">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class from the caller's frame.</source>
          <target state="translated">호출자 프레임에서 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> is created with the caller's current thread, and does not contain file name, line number, or column information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> 호출자의 현재 스레드를 사용 하 여 만든 및 파일 이름, 줄 번호 또는 열 정보를 포함 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor">
          <source>Use this default constructor when you want a complete trace with only summary method information about the call stack.</source>
          <target state="translated">호출 스택에 대 한 요약 방법 정보만 사용 하 여 전체 추적 하려는 경우에이 기본 생성자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor">
          <source>The following code example displays the first and last function calls in a stack trace.</source>
          <target state="translated">다음 코드 예제에서는 스택 추적에 첫 번째 및 마지막 함수 호출을 표시합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to capture the file name, line number, and column number; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">파일 이름, 줄 번호 및 열 번호를 캡처하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class from the caller's frame, optionally capturing source information.</source>
          <target state="translated">필요에 따라 소스 정보를 캡처하고 호출 프레임에서 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> is created with the caller's current thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> 호출자의 현재 스레드를 사용 하 여 만들어집니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)">
          <source>The following code example demonstrates various <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> constructor methods.</source>
          <target state="translated">다음 코드 예제에서는 다양 한 <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> 생성자 메서드.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)">
          <source>The frame that the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> object should contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 개체가 포함해야 하는 프레임입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class that contains a single frame.</source>
          <target state="translated">단일 프레임을 포함하는 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)">
          <source>Use this constructor when you do not want the overhead of a full stack trace.</source>
          <target state="translated">전체 스택 추적의 오버 헤드를 원하지 않는 경우이 생성자를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)">
          <source>The following code example writes stack trace information to an event log entry.</source>
          <target state="translated">다음 코드 예제에서는 쓰기 스택 추적 정보를 이벤트 로그 항목입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception)">
          <source>The exception object from which to construct the stack trace.</source>
          <target state="translated">스택 추적을 생성할 원본 예외 개체입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class using the provided exception object.</source>
          <target state="translated">제공된 예외 개체를 사용하여 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> is created with the caller's current thread, and does not contain file name, line number, or column information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> 호출자의 현재 스레드를 사용 하 여 만든 및 파일 이름, 줄 번호 또는 열 정보를 포함 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception)">
          <source>The resulting stack trace describes the stack at the time of the exception.</source>
          <target state="translated">스택 추적 결과 예외 발생 시 스택의 설명합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception)">
          <source>The parameter <ph id="ph1">&lt;paramref name="e" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수 <ph id="ph1">&lt;paramref name="e" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32)">
          <source>The number of frames up the stack from which to start the trace.</source>
          <target state="translated">추적할 스택 프레임의 개수입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class from the caller's frame, skipping the specified number of frames.</source>
          <target state="translated">지정된 수의 프레임을 건너뛰어 호출자 프레임에서 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> is created with the caller's current thread, and does not contain file name, line number, or column information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> 호출자의 현재 스레드를 사용 하 여 만든 및 파일 이름, 줄 번호 또는 열 정보를 포함 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32)">
          <source>If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> will contain no frames.</source>
          <target state="translated">건너뛸 프레임 수가 보다 크거나 같은 시간에 호출 스택 프레임의 총 수는 인스턴스를 만든 경우의 <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> 프레임이 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="skipFrames" /&gt;</ph> parameter is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="skipFrames" /&gt;</ph> 매개 변수가 음수인 경우</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
          <source>The exception object from which to construct the stack trace.</source>
          <target state="translated">스택 추적을 생성할 원본 예외 개체입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
          <source>The number of frames up the stack from which to start the trace.</source>
          <target state="translated">추적할 스택 프레임의 개수입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class using the provided exception object and skipping the specified number of frames.</source>
          <target state="translated">제공된 예외 개체를 사용하고 지정된 수의 프레임을 건너뛰어 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> does not contain file name, line number, or column information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> 파일 이름, 줄 번호 또는 열 정보를 포함 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
          <source>The resulting stack trace describes the stack at the time of the exception.</source>
          <target state="translated">스택 추적 결과 예외 발생 시 스택의 설명합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
          <source>If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> will contain no frames.</source>
          <target state="translated">건너뛸 프레임 수가 보다 크거나 같은 시간에 호출 스택 프레임의 총 수는 인스턴스를 만든 경우의 <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> 프레임이 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
          <source>The parameter <ph id="ph1">&lt;paramref name="e" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수 <ph id="ph1">&lt;paramref name="e" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="skipFrames" /&gt;</ph> parameter is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="skipFrames" /&gt;</ph> 매개 변수가 음수인 경우</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)">
          <source>The number of frames up the stack from which to start the trace.</source>
          <target state="translated">추적할 스택 프레임의 개수입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to capture the file name, line number, and column number; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">파일 이름, 줄 번호 및 열 번호를 캡처하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class from the caller's frame, skipping the specified number of frames and optionally capturing source information.</source>
          <target state="translated">지정된 수의 프레임을 건너뛰고 필요에 따라 소스 정보를 캡처하여 호출자 프레임에서 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)">
          <source>If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> will contain no frames.</source>
          <target state="translated">건너뛸 프레임 수가 보다 크거나 같은 시간에 호출 스택 프레임의 총 수는 인스턴스를 만든 경우의 <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> 프레임이 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)">
          <source>The following code example demonstrates various <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> constructor methods.</source>
          <target state="translated">다음 코드 예제에서는 다양 한 <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> 생성자 메서드.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="skipFrames" /&gt;</ph> parameter is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="skipFrames" /&gt;</ph> 매개 변수가 음수인 경우</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)">
          <source>The thread whose stack trace is requested.</source>
          <target state="translated">스택 추적이 필요한 스레드입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to capture the file name, line number, and column number; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">파일 이름, 줄 번호 및 열 번호를 캡처하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class for a specific thread, optionally capturing source information.</source>
          <target state="translated">필요에 따라 소스 정보를 캡처하고 특정 스레드에 대해 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)">
          <source>Do not use this constructor overload.</source>
          <target state="translated">이 생성자 오버로드를 사용하지 마십시오.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)">
          <source>Do not use this constructor.</source>
          <target state="translated">이 생성자를 사용하지 마세요.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)">
          <source>It is obsolete, and there is no recommended alternative.</source>
          <target state="translated">이전 및 권장 방법이 없습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)">
          <source>When you suspend a thread, you have no way of knowing what code it is executing, and deadlocks can occur very easily.</source>
          <target state="translated">스레드를 일시 중단 하면 해야 코드를 실행 하 고 교착 상태를 매우 쉽게 발생할 수 있습니다 알 수 없습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)">
          <source>For example, if you suspend a thread while it holds locks during a security permission evaluation, other threads in the <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> might be blocked.</source>
          <target state="translated">예를 들어 보안 권한 확인 하는 동안 잠금을 유지 하는 동안 스레드를 일시 중단, 기타의 스레드는 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> 차단 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)">
          <source>If you suspend a thread while it is executing a class constructor, other threads in the <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> that attempt to use that class are blocked.</source>
          <target state="translated">다른 스레드가 클래스 생성자를 실행 하는 동안 스레드를 일시 중단는 <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> 하는 클래스는 차단 사용 하려고 시도 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)">
          <source>The thread <ph id="ph1">&lt;paramref name="targetThread" /&gt;</ph> is not suspended.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetThread" /&gt;</ph> 스레드가 일시 중단되지 않는 경우</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
          <source>The exception object from which to construct the stack trace.</source>
          <target state="translated">스택 추적을 생성할 원본 예외 개체입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
          <source>The number of frames up the stack from which to start the trace.</source>
          <target state="translated">추적할 스택 프레임의 개수입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to capture the file name, line number, and column number; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">파일 이름, 줄 번호 및 열 번호를 캡처하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class using the provided exception object, skipping the specified number of frames and optionally capturing source information.</source>
          <target state="translated">지정된 수의 프레임을 건너뛰고 필요에 따라 소스 정보를 캡처하여 제공된 예외 개체로 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
          <source>The resulting stack trace describes the stack at the time of the exception.</source>
          <target state="translated">스택 추적 결과 예외 발생 시 스택의 설명합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
          <source>If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> will contain no frames.</source>
          <target state="translated">건너뛸 프레임 수가 보다 크거나 같은 시간에 호출 스택 프레임의 총 수는 인스턴스를 만든 경우의 <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> 프레임이 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
          <source>The parameter <ph id="ph1">&lt;paramref name="e" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수 <ph id="ph1">&lt;paramref name="e" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="skipFrames" /&gt;</ph> parameter is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="skipFrames" /&gt;</ph> 매개 변수가 음수인 경우</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)">
          <source>The exception object from which to construct the stack trace.</source>
          <target state="translated">스택 추적을 생성할 원본 예외 개체입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to capture the file name, line number, and column number; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">파일 이름, 줄 번호 및 열 번호를 캡처하려면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> class, using the provided exception object and optionally capturing source information.</source>
          <target state="translated">필요에 따라 소스 정보를 캡처하고 제공된 예외 개체를 사용하여 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackTrace" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)">
          <source>The resulting stack trace describes the stack at the time of the exception.</source>
          <target state="translated">스택 추적 결과 예외 발생 시 스택의 설명합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)">
          <source>The parameter <ph id="ph1">&lt;paramref name="e" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">매개 변수 <ph id="ph1">&lt;paramref name="e" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.StackTrace.FrameCount">
          <source>Gets the number of frames in the stack trace.</source>
          <target state="translated">스택 추적의 프레임 수를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.StackTrace.FrameCount">
          <source>The number of frames in the stack trace.</source>
          <target state="translated">스택 추적의 프레임 수입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.StackTrace.FrameCount">
          <source>The following code example displays the first and last function calls in a stack trace.</source>
          <target state="translated">다음 코드 예제에서는 스택 추적에 첫 번째 및 마지막 함수 호출을 표시합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)">
          <source>The index of the stack frame requested.</source>
          <target state="translated">요청한 스택 프레임의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)">
          <source>Gets the specified stack frame.</source>
          <target state="translated">지정된 스택 프레임을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)">
          <source>The specified stack frame.</source>
          <target state="translated">지정된 스택 프레임입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)">
          <source>Stack frames are numbered starting at 0, which is the last stack frame pushed.</source>
          <target state="translated">스택 프레임 푸시된 마지막 스택 프레임은 0에서 시작 하는 번호가 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)">
          <source>The following code example displays the first and last function calls in a stack trace.</source>
          <target state="translated">다음 코드 예제에서는 스택 추적에 첫 번째 및 마지막 함수 호출을 표시합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>Returns a copy of all stack frames in the current stack trace.</source>
          <target state="translated">현재 스택 추적에 있는 모든 스택 프레임의 복사본을 반환합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> representing the function calls in the stack trace.</source>
          <target state="translated">스택 추적의 함수 호출을 나타내는 <ph id="ph1">&lt;see cref="T:System.Diagnostics.StackFrame" /&gt;</ph> 형식의 배열입니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>Use the returned <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> array to enumerate and examine function calls in the <ph id="ph2">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>.</source>
          <target state="translated">사용 하 여 반환 된 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 열거 하 고 함수를 검사 하는 배열에서 호출 된 <ph id="ph2">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>The length of the returned array is equal to the <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace.FrameCount%2A&gt;</ph> property value.</source>
          <target state="translated">반환 된 배열의 길이는 <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace.FrameCount%2A&gt;</ph> 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> array elements are in reverse chronological order.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 시간 순서에 있는 배열 요소가 있습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> at array index 0 represents the most recent function call in the stack trace and the last frame pushed onto the call stack.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 인덱스 0 배열에 스택 추적 호출 스택에 밀어 넣은 마지막 프레임에서 가장 최근의 함수 호출을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> at array index <ph id="ph2">&lt;xref:System.Diagnostics.StackTrace.FrameCount%2A&gt;</ph> minus 1 represents the oldest function call in the stack trace and the first frame pushed onto the call stack.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 배열 인덱스에서 <ph id="ph2">&lt;xref:System.Diagnostics.StackTrace.FrameCount%2A&gt;</ph> 에서 1을 뺀 호출 스택에 밀어 넣은 첫 번째 프레임 및 스택 추적에서 가장 오래 된 함수 호출을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace.GetFrames%2A&gt;</ph> method to obtain all stack frames in a stack trace; use the <ph id="ph2">&lt;xref:System.Diagnostics.StackTrace.GetFrame%2A&gt;</ph> method to obtain a specific stack frame in a stack trace.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace.GetFrames%2A&gt;</ph> 모든 스택 프레임에서 스택 추적을 얻는 메서드를 사용 하 여는 <ph id="ph2">&lt;xref:System.Diagnostics.StackTrace.GetFrame%2A&gt;</ph> 메서드에서 스택 추적에 특정 스택 프레임을 가져오기 위해.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> indexes are ordered alike by the two methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 인덱스는 두 가지 방법으로 동일 하 게 정렬 됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>For example, the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> at index 0 in the array returned by <ph id="ph2">&lt;xref:System.Diagnostics.StackTrace.GetFrames%2A&gt;</ph> is equivalent to the <ph id="ph3">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> returned by <ph id="ph4">&lt;xref:System.Diagnostics.StackTrace.GetFrame%2A&gt;</ph> with an input index of 0.</source>
          <target state="translated">예를 들어는 <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 인덱스 0에서 반환 된 배열에 <ph id="ph2">&lt;xref:System.Diagnostics.StackTrace.GetFrames%2A&gt;</ph> 해당 하는 <ph id="ph3">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> 반환한 <ph id="ph4">&lt;xref:System.Diagnostics.StackTrace.GetFrame%2A&gt;</ph> 입력 인덱스 0입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.GetFrames">
          <source>The following code example demonstrates enumerating the frames in a <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>.</source>
          <target state="translated">다음 코드 예제에서는의 프레임을 열거 하는 방법을 보여 줍니다는 <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP">
          <source>Defines the default for the number of methods to omit from the stack trace.</source>
          <target state="translated">스택 추적에서 생략할 기본 메서드 수를 정의합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP">
          <source>This field is constant.</source>
          <target state="translated">이 필드는 상수입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP">
          <source>The default value for the number of methods to skip at the beginning of the stack trace.</source>
          <target state="translated">스택 추적의 시작 부분에서 건너뛸 방법의 수에 대 한 기본 값입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP">
          <source>The value of this constant is 0.</source>
          <target state="translated">이 상수의 값은 0입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.ToString">
          <source>Builds a readable representation of the stack trace.</source>
          <target state="translated">읽을 수 있도록 스택 추적을 만듭니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.StackTrace.ToString">
          <source>A readable representation of the stack trace.</source>
          <target state="translated">읽을 수 있도록 만든 스택 추적입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.StackTrace.ToString">
          <source>The following code example writes stack trace information to an event log entry.</source>
          <target state="translated">다음 코드 예제에서는 쓰기 스택 추적 정보를 이벤트 로그 항목입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>