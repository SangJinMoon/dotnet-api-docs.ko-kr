<Type Name="TraceSource" FullName="System.Diagnostics.TraceSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8248e0027c59728baa50c637257a74a4dce07bfc" />
    <Meta Name="ms.sourcegitcommit" Value="b15b8cf0f6dbc1504057c88969d9ef4b790891fe" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="05/11/2018" />
    <Meta Name="ms.locfileid" Value="34061517" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TraceSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceSource" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceSource" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="efe0c-101">코드 실행을 추적하고 추적 메시지를 소스와 연결하는 데 필요한 메서드 및 속성 집합을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="efe0c-101">Provides a set of methods and properties that enable applications to trace the execution of code and associate trace messages with their source.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe0c-102"><xref:System.Diagnostics.TraceSource> 클래스는 응용 프로그램과 연결될 수 있는 추적을 만들기 위해 응용 프로그램에서 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-102">The <xref:System.Diagnostics.TraceSource> class is used by applications to produce traces that can be associated with the application.</span></span> <span data-ttu-id="efe0c-103"><xref:System.Diagnostics.TraceSource>는 추적 이벤트, 추적 데이터 및 문제 정보 추적을 쉽게 할 수 있도록 추적 메서드를 제공합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-103"><xref:System.Diagnostics.TraceSource> provides tracing methods that allow you to easily trace events, trace data, and issue informational traces.</span></span> <span data-ttu-id="efe0c-104">추적 출력 <xref:System.Diagnostics.TraceSource> 구성 파일 설정으로 제어할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-104">Trace output from <xref:System.Diagnostics.TraceSource> can be controlled by configuration file settings.</span></span> <span data-ttu-id="efe0c-105">구성 파일은 응용 프로그램의 실행 폴더에 있으며 추가.config 파일 이름 확장명으로 응용 프로그램의 이름이 됩니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-105">The configuration file is located in the folder with the application executable and has the name of the application with the .config file name extension added.</span></span> <span data-ttu-id="efe0c-106">예를 들어 TraceSourceSample.exe에 대 한 구성 파일의 이름은 TraceSourceSample.exe.config를입니다. 구성 파일 보내야 하는 추적 정보 인 란 무엇 이며 수준의 작업 추적 하는 것을 확인 하려면 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-106">For example, the name of the configuration file for TraceSourceSample.exe is TraceSourceSample.exe.config. The configuration file can be used to determine where the trace information is to be sent and what levels of activity are to be traced.</span></span> <span data-ttu-id="efe0c-107">다음 예제에서는 샘플 응용 프로그램 구성 파일의 내용을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-107">The following example shows the contents of a sample application configuration file.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <sources>  
      <source name="TraceTest" switchName="SourceSwitch"   
        switchType="System.Diagnostics.SourceSwitch" >  
        <listeners>  
          <add name="console" />  
          <remove name ="Default" />  
        </listeners>  
      </source>  
    </sources>  
    <switches>  
      <!-- You can set the level at which tracing is to occur -->  
      <add name="SourceSwitch" value="Warning" />  
        <!-- You can turn tracing off -->  
        <!--add name="SourceSwitch" value="Off" -->  
    </switches>  
    <sharedListeners>  
      <add name="console"   
        type="System.Diagnostics.ConsoleTraceListener"   
        initializeData="false"/>  
    </sharedListeners>  
    <trace autoflush="true" indentsize="4">  
      <listeners>  
        <add name="console" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="efe0c-108"><xref:System.Diagnostics.TraceSource> 클래스 소스, 일반적으로 응용 프로그램의 이름의 이름으로 식별 됩니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-108">The <xref:System.Diagnostics.TraceSource> class is identified by the name of a source, typically the name of the application.</span></span>  <span data-ttu-id="efe0c-109">추적 메시지는 특정 구성 요소에서 들어오는 쉽게 식별할 수 해당 구성 요소에서 들어오는 모든 메시지를 허용 하 여 특정 추적 소스를 시작할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-109">The trace messages coming from a particular component can be initiated by a particular trace source, allowing all messages coming from that component to be easily identified.</span></span>  
  
 <span data-ttu-id="efe0c-110"><xref:System.Diagnostics.TraceSource> 추적 메서드를 정의 하지만 실제로 생성 및 추적 데이터를 저장 하기 위한 특정 메커니즘을 제공 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-110"><xref:System.Diagnostics.TraceSource> defines tracing methods but does not actually provide any specific mechanism for generating and storing tracing data.</span></span> <span data-ttu-id="efe0c-111">추적 데이터는 추적 소스에 의해 로드 될 수 있는 플러그 인은 추적 수신기에 의해 생성 됩니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-111">The tracing data is produced by trace listeners, which are plug-ins that can be loaded by trace sources.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efe0c-112">종료 하는 동안 추적 메서드를 호출 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-112">You should not call the tracing methods during finalization.</span></span> <span data-ttu-id="efe0c-113">사용 하면 발생할 수 있습니다는 <xref:System.ObjectDisposedException> throw 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-113">Doing so can result in an <xref:System.ObjectDisposedException> being thrown.</span></span>  
  
 <span data-ttu-id="efe0c-114">추가 하거나 제거 하 여 추적 출력의 대상 사용자를 지정할 수 있습니다 <xref:System.Diagnostics.TraceListener> 에 저장 된 컬렉션에서 인스턴스는 <xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-114">You can customize the tracing output's target by adding or removing <xref:System.Diagnostics.TraceListener> instances to or from the collection stored in the <xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="efe0c-115">기본적으로 추적 출력은의 인스턴스를 사용 하 여 <xref:System.Diagnostics.DefaultTraceListener> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-115">By default, trace output is produced using an instance of the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span> <span data-ttu-id="efe0c-116">앞의 구성 파일 예제를 제거 하는 방법을 보여 줍니다는 <xref:System.Diagnostics.DefaultTraceListener> 추가 하 고는 <xref:System.Diagnostics.ConsoleTraceListener> 추적 소스에 대 한 추적 출력을 생성 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-116">The preceding configuration file example demonstrates removing the <xref:System.Diagnostics.DefaultTraceListener> and adding a <xref:System.Diagnostics.ConsoleTraceListener> to produce the trace output for the trace source.</span></span> <span data-ttu-id="efe0c-117">자세한 내용은 참조 [ &lt;수신기&gt; ](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-source.md) 및 [ &lt;sharedListeners&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/sharedlisteners-element.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-117">For more information, see [&lt;listeners&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-source.md) and [&lt;sharedListeners&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/sharedlisteners-element.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efe0c-118">추적 수신기를 추가 <xref:System.Diagnostics.TraceSource.Listeners%2A> 컬렉션 추적 수신기에서 사용 되는 리소스를 사용할 수 없는 경우 추적을 동안 throw 된 예외를 일으킬 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-118">Adding a trace listener to the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</span></span> <span data-ttu-id="efe0c-119">조건 및 throw 된 예외 추적 수신기에 좌우 되며이 항목의 열거할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-119">The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</span></span> <span data-ttu-id="efe0c-120">전화를 걸 수 유용할 수 있습니다는 <xref:System.Diagnostics.TraceSource> 메서드 `try` / `catch` 블록 감지 하 고 추적 수신기에서 발생 한 예외를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-120">It may be useful to place calls to the <xref:System.Diagnostics.TraceSource> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.</span></span>  
  
 <span data-ttu-id="efe0c-121"><xref:System.Diagnostics.SourceSwitch> 클래스 동적으로 추적 출력을 제어 하는 방법을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-121">The <xref:System.Diagnostics.SourceSwitch> class provides the means to dynamically control the tracing output.</span></span> <span data-ttu-id="efe0c-122">위의 구성 파일 예는 추적 소스는 추적 수준에서 발생 하는 컨트롤에서 추적을 해제할 수 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-122">The preceding configuration file example shows how you can turn off tracing from a trace source and control the level at which tracing occurs.</span></span>  <span data-ttu-id="efe0c-123">응용 프로그램을 다시 컴파일하지 않고 소스 스위치 값을 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-123">You can modify the value of the source switch without recompiling your application.</span></span> <span data-ttu-id="efe0c-124">스위치를 설정 하는 구성 파일을 사용 하는 방법은 참조 하십시오. <xref:System.Diagnostics.Switch> 및 [하는 방법: 만들기, 초기화 및 추적 스위치 구성](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-124">For information on using the configuration file to set a switch, see <xref:System.Diagnostics.Switch> and [How to: Create, Initialize and Configure Trace Switches](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efe0c-125">응용 프로그램을 중지 했다가 다시 시작 응용 프로그램을 실행 하는 동안 구성 파일을 수정 하면 또는 <xref:System.Diagnostics.Trace.Refresh%2A> 새 설정을 적용 하려면 메서드를 호출 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-125">If you modify a configuration file while an application is executing, the application must be stopped and restarted or the <xref:System.Diagnostics.Trace.Refresh%2A> method must be called before the new settings take effect.</span></span>  
  
 <span data-ttu-id="efe0c-126"><xref:System.Diagnostics.TraceEventType> 열거형 추적 메시지 이벤트 유형을 정의 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-126">The <xref:System.Diagnostics.TraceEventType> enumeration is used to define the event type of the trace message.</span></span> <span data-ttu-id="efe0c-127">추적 필터를 사용 하 여는 <xref:System.Diagnostics.TraceEventType> 추적 수신기에서 추적 메시지를 만들어야 하는 경우를 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="efe0c-127">Trace filters use the <xref:System.Diagnostics.TraceEventType> to determine if a trace listener should produce the trace message.</span></span>  
  
 <span data-ttu-id="efe0c-128">추적 수신기 추적 필터를 통해 필터링의 추가 계층을 선택적으로 가질 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-128">The trace listeners can optionally have an additional layer of filtering through a trace filter.</span></span>  <span data-ttu-id="efe0c-129">수신기를 호출 하는 추적 수신기에 연결 된 필터를 하는 경우는 <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> 추적 정보를 생성 하는지 여부를 확인 하려면 해당 필터에 대 한 메서드.</span><span class="sxs-lookup"><span data-stu-id="efe0c-129">If a trace listener has an associated filter, the listener calls the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method on that filter to determine whether or not to produce the trace information.</span></span>  
  
 <span data-ttu-id="efe0c-130">값을 사용 하는 추적 수신기는 <xref:System.Diagnostics.Trace> 클래스 속성 <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, 및 <xref:System.Diagnostics.Trace.AutoFlush%2A> 추적 출력 형식에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-130">The trace listeners use the values of the <xref:System.Diagnostics.Trace> class properties <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, and <xref:System.Diagnostics.Trace.AutoFlush%2A> to format trace output.</span></span> <span data-ttu-id="efe0c-131">구성 파일 특성을 사용 하 여 설정 된 <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, 및 <xref:System.Diagnostics.Trace.AutoFlush%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="efe0c-131">You can use configuration file attributes to set the <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, and <xref:System.Diagnostics.Trace.AutoFlush%2A> properties.</span></span> <span data-ttu-id="efe0c-132">다음 예에서는 <xref:System.Diagnostics.Trace.AutoFlush%2A> 속성을 `false` 및 <xref:System.Diagnostics.Trace.IndentSize%2A> 속성을 3입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-132">The following example sets the <xref:System.Diagnostics.Trace.AutoFlush%2A> property to `false` and the <xref:System.Diagnostics.Trace.IndentSize%2A> property to 3.</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="efe0c-133">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Diagnostics.TraceSource> 추적 수신기에 전달 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-133">The following code example shows the use of the <xref:System.Diagnostics.TraceSource> class to forward traces to listeners.</span></span>  <span data-ttu-id="efe0c-134">스위치와 필터의 사용법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-134">The example also demonstrates switch and filter usage.</span></span>  
  
 [!code-cpp[System.Diagnostics.TraceSource2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CPP/tracesource2.cpp#1)]
 [!code-csharp[System.Diagnostics.TraceSource2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.TraceSource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="efe0c-135">이 형식은 스레드로부터 안전합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="efe0c-135">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="efe0c-136">
            <see cref="T:System.Diagnostics.TraceSource" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-136">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceSource" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSource (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSource(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="efe0c-137">소스의 이름이며, 이 이름은 대개 응용 프로그램의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-137">The name of the source (typically, the name of the application).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efe0c-138">지정된 소스 이름을 사용하여 <see cref="T:System.Diagnostics.TraceSource" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-138">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceSource" /> class, using the specified name for the source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe0c-139">추적을 식별 하는 소스 이름이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-139">The source name is used to identify traces.</span></span> <span data-ttu-id="efe0c-140">사용 되는 <xref:System.Diagnostics.SourceFilter> 추적 수신기에 추적을 생성 해야 하는지 여부를 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="efe0c-140">It is used by a <xref:System.Diagnostics.SourceFilter> to determine whether a trace listener should produce the trace.</span></span> <span data-ttu-id="efe0c-141">원본 이름에 대 한 응용 프로그램의 이름을 사용 하는 것이 좋습니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-141">The recommended practice is to use the name of the application for the source name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efe0c-142">새로 만들 필요는 없습니다 <xref:System.Diagnostics.TraceSource> 각 추적 요청에 대 한 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="efe0c-142">It is not necessary to create a new <xref:System.Diagnostics.TraceSource> instance for each trace request.</span></span> <span data-ttu-id="efe0c-143">만들 <xref:System.Diagnostics.TraceSource> 인스턴스 및 응용 프로그램에 대 한 모든 추적 요청에 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-143">Create one <xref:System.Diagnostics.TraceSource> instance and use it for all trace requests for the application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efe0c-144">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Diagnostics.TraceSource.%23ctor%2A> 생성자를 만들려면 새 <xref:System.Diagnostics.TraceSource> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-144">The following code example shows the use of the <xref:System.Diagnostics.TraceSource.%23ctor%2A> constructor to create a new <xref:System.Diagnostics.TraceSource> object.</span></span> <span data-ttu-id="efe0c-145">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.TraceSource> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-145">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#9)]
 [!code-vb[System.Diagnostics.TraceSource2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efe0c-146">
            <paramref name="name" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-146">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="efe0c-147">
            <paramref name="name" />가 빈 문자열("")인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-147">
              <paramref name="name" /> is an empty string ("").</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSource (string name, System.Diagnostics.SourceLevels defaultLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Diagnostics.SourceLevels defaultLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, defaultLevel As SourceLevels)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSource(System::String ^ name, System::Diagnostics::SourceLevels defaultLevel);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultLevel" Type="System.Diagnostics.SourceLevels" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="efe0c-148">소스의 이름이며, 이 이름은 대개 응용 프로그램의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-148">The name of the source, typically the name of the application.</span>
          </span>
        </param>
        <param name="defaultLevel">
          <span data-ttu-id="efe0c-149">추적할 기본 소스 수준을 지정하는 열거형 값의 비트 조합입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-149">A bitwise combination of the enumeration values that specifies the default source level at which to trace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efe0c-150">지정된 소스 이름과 추적이 발생할 기본 소스 수준을 사용하여 <see cref="T:System.Diagnostics.TraceSource" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-150">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceSource" /> class, using the specified name for the source and the default source level at which tracing is to occur.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe0c-151">추적을 식별 하는 소스 이름이 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-151">The source name is used to identify traces.</span></span> <span data-ttu-id="efe0c-152">사용할 수는 <xref:System.Diagnostics.SourceSwitch> 추적 되려면 인지 확인 하려면 및는 <xref:System.Diagnostics.SourceFilter> 추적 생성 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-152">It can be used by a <xref:System.Diagnostics.SourceSwitch> to determine if tracing is to occur and by a <xref:System.Diagnostics.SourceFilter> to determine whether to produce the trace.</span></span> <span data-ttu-id="efe0c-153">기본 소스 수준을에서 사용 되는 <xref:System.Diagnostics.EventTypeFilter> 추적할 메시지의 소스 수준에 따라 추적 되려면 인지 확인 하려면.</span><span class="sxs-lookup"><span data-stu-id="efe0c-153">The default source level is used by an <xref:System.Diagnostics.EventTypeFilter> to determine if tracing is to occur based on the source level of the message to be traced.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efe0c-154">새로 만들 필요는 없습니다 <xref:System.Diagnostics.TraceSource> 각 추적 요청에 대 한 인스턴스.</span><span class="sxs-lookup"><span data-stu-id="efe0c-154">It is not necessary to create a new <xref:System.Diagnostics.TraceSource> instance for each trace request.</span></span> <span data-ttu-id="efe0c-155">만들 <xref:System.Diagnostics.TraceSource> 인스턴스 및 응용 프로그램에 대 한 모든 추적 요청에 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-155">Create one <xref:System.Diagnostics.TraceSource> instance and use it for all trace requests for the application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efe0c-156">
            <paramref name="name" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-156">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="efe0c-157">
            <paramref name="name" />가 빈 문자열("")인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-157">
              <paramref name="name" /> is an empty string ("").</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Attributes { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efe0c-158">응용 프로그램 구성 파일에 정의된 사용자 지정 스위치 특성을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-158">Gets the custom switch attributes defined in the application configuration file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efe0c-159">추적 스위치의 사용자 지정 특성이 포함된 <see cref="T:System.Collections.Specialized.StringDictionary" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-159">A <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the custom attributes for the trace switch.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe0c-160"><xref:System.Diagnostics.TraceSource.Attributes%2A> 속성 응용 프로그램의 구성 파일에서 참조 하는 사용자 지정 특성을 식별 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-160">The <xref:System.Diagnostics.TraceSource.Attributes%2A> property identifies the custom attributes referenced in the application's configuration file.</span></span> <span data-ttu-id="efe0c-161">참조 되지 않은 사용자 지정 특성을 열거 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-161">Unreferenced custom attributes are not enumerated.</span></span> <span data-ttu-id="efe0c-162">클래스에서 상속 되는 <xref:System.Diagnostics.TraceSource> 클래스를 재정의 하 여 사용자 지정 특성을 추가할 수는 <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A?displayProperty=nameWithType> 메서드 및 사용자 지정 특성 이름의 문자열 배열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-162">Classes that inherit from the <xref:System.Diagnostics.TraceSource> class can add custom attributes by overriding the <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A?displayProperty=nameWithType> method and returning a string array of custom attribute names.</span></span>  
  
 <span data-ttu-id="efe0c-163">다음은 사용자 지정 특성을 지정 하는 추적 소스 요소의 샘플 `SecondTraceSourceAttribute`:</span><span class="sxs-lookup"><span data-stu-id="efe0c-163">The following is a sample of a trace source element specifying the custom attribute `SecondTraceSourceAttribute`:</span></span>  
  
```  
<sources>  
  <source name="TraceTest" switchName="TestSourceSwitch"   
    switchType="Testing.MySourceSwitch, TraceSample"   
    SecondTraceSourceAttribute="two">  
  </source>  
</sources>  
```  
  
   
  
## Examples  
 <span data-ttu-id="efe0c-164">에 대 한 사용자 지정 특성을 표시 하는 방법을 보여 주는 하는 다음 코드 예제는 <xref:System.Diagnostics.TraceSource>합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-164">The following code sample shows how to display the custom attributes for a <xref:System.Diagnostics.TraceSource>.</span></span>  <span data-ttu-id="efe0c-165">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.TraceSource> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-165">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#14)]
 [!code-vb[System.Diagnostics.TraceSource2#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="efe0c-166">추적 수신기 컬렉션에 있는 모든 추적 수신기를 닫습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-166">Closes all the trace listeners in the trace listener collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe0c-167"><xref:System.Diagnostics.TraceSource.Close%2A> 메서드 호출의 <xref:System.Diagnostics.TraceListener.Close%2A> 에서 각 추적 수신기의 메서드는 <xref:System.Diagnostics.TraceSource.Listeners%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-167">The <xref:System.Diagnostics.TraceSource.Close%2A> method calls the <xref:System.Diagnostics.TraceListener.Close%2A> method of each trace listener in the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efe0c-168">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Diagnostics.TraceSource.Close%2A> 메서드를 컬렉션에 있는 모든 수신기를 닫습니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-168">The following code example shows how you can use the <xref:System.Diagnostics.TraceSource.Close%2A> method to close all the listeners in the collection.</span></span> <span data-ttu-id="efe0c-169">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.TraceSource> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-169">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource2#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="efe0c-170">에 비관리 코드와 작동 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-170">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="efe0c-171">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-171">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="efe0c-172">추적 수신기 컬렉션에 있는 모든 추적 수신기를 플러시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-172">Flushes all the trace listeners in the trace listener collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe0c-173"><xref:System.Diagnostics.TraceSource.Flush%2A> 메서드 호출의 <xref:System.Diagnostics.TraceListener.Flush%2A> 에서 각 추적 수신기의 메서드는 <xref:System.Diagnostics.TraceSource.Listeners%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-173">The <xref:System.Diagnostics.TraceSource.Flush%2A> method calls the <xref:System.Diagnostics.TraceListener.Flush%2A> method of each trace listener in the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efe0c-174">다음 코드 예제에서는 사용 하는 방법을 보여 줍니다.는 <xref:System.Diagnostics.TraceSource.Flush%2A> 메서드를 컬렉션에 있는 모든 수신기를 플러시합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-174">The following code example shows how you can use the <xref:System.Diagnostics.TraceSource.Flush%2A> method to flush all the listeners in the collection.</span></span> <span data-ttu-id="efe0c-175">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.TraceSource> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-175">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource2#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="efe0c-176">종료하는 동안 이벤트를 추적하려고 했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-176">An attempt was made to trace an event during finalization.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected internal virtual string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="efe0c-177">추적 소스에서 지원하는 사용자 지정 특성을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-177">Gets the custom attributes supported by the trace source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="efe0c-178">추적 수신기에서 지원하는 사용자 지정 특성의 이름을 지정하는 문자열 배열을 반환하며, 사용자 지정 특성이 없으면 <see langword="null" />을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-178">A string array naming the custom attributes supported by the trace source, or <see langword="null" /> if there are no custom attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe0c-179">에 대 한 기본 구현은 <xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A> 반환 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-179">The default implementation for <xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A> returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efe0c-180">다음 코드 예제에서는 <xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A> 에 대 한 사용자 지정 특성을 식별 하는 메서드는 `MyTraceSource` 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-180">The following code example shows an override of the <xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A> method to identify the custom attributes for the `MyTraceSource` class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="efe0c-181">상속 된 경우는 <see cref="T:System.Diagnostics.TraceSource" /> 재정의할 수 클래스나 파생된 클래스는 <see cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" /> 메서드를 클래스에 대 한 사용자 지정 특성을 제공 합니다.</span>
            <span class="sxs-lookup">
              <span data-stu-id="efe0c-181">When inheriting from the <see cref="T:System.Diagnostics.TraceSource" /> class or a derived class, you can override the <see cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" /> method to provide custom attributes for your class.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efe0c-182">추적 소스에 대한 추적 수신기의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-182">Gets the collection of trace listeners for the trace source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efe0c-183">소스와 연관된 활성 추적 수신기를 포함하는 <see cref="T:System.Diagnostics.TraceListenerCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-183">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> that contains the active trace listeners associated with the source.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe0c-184">이 속성을 사용 하 여 액세스 하 고 추적 수신기에 대 한 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-184">Use this property to access and perform operations on the trace listeners.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="efe0c-185">에 비관리 코드와 작동 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-185">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="efe0c-186">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-186">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efe0c-187">추적 소스의 이름을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-187">Gets the name of the trace source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efe0c-188">추적 소스의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-188">The name of the trace source.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe0c-189">이름을 설정 하는는 `name` 매개 변수는 생성자에 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-189">The name is set by the `name` parameter passed to the constructor.</span></span> <span data-ttu-id="efe0c-190">사용 하 여 추적 소스를 참조할 수는 `name` 구성 파일에는 특성입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-190">You can refer to the trace source by using the `name` attribute in the configuration file.</span></span>  
  
 <span data-ttu-id="efe0c-191">다음 XML 요소 참조 하는 구성 파일에 추적 소스를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-191">The following XML element shows referring to a trace source in the configuration file.</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <sources>  
      <source name="TraceTest">  
      </source>  
    </sources>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="efe0c-192">다음 코드 예제에는 생성자 호출에 추적 소스 이름을 지정 하는 방법을 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-192">The following code sample shows how to name a trace source in the constructor call.</span></span>  <span data-ttu-id="efe0c-193">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.TraceSource> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-193">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#9)]
 [!code-vb[System.Diagnostics.TraceSource2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SourceSwitch Switch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.SourceSwitch Switch" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Switch" />
      <MemberSignature Language="VB.NET" Value="Public Property Switch As SourceSwitch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::SourceSwitch ^ Switch { System::Diagnostics::SourceSwitch ^ get(); void set(System::Diagnostics::SourceSwitch ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SourceSwitch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="efe0c-194">소스 스위치 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-194">Gets or sets the source switch value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="efe0c-195">소스 스위치 값을 나타내는 <see cref="T:System.Diagnostics.SourceSwitch" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-195">A <see cref="T:System.Diagnostics.SourceSwitch" /> object representing the source switch value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe0c-196"><xref:System.Diagnostics.TraceSource.Switch%2A> 속성 추적 소스에서 수신기를 호출 하기 전에 메시지 필터링을 허용 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-196">The <xref:System.Diagnostics.TraceSource.Switch%2A> property allows the filtering of messages before the trace source calls the listeners.</span></span>  
  
 <span data-ttu-id="efe0c-197">스위치 추적 호출을 생성 하거나 무시 확인을 위해 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-197">The switch is used to check whether trace calls should be generated or ignored.</span></span> <span data-ttu-id="efe0c-198">추적 메서드는 각각의 <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 의 메서드는 <xref:System.Diagnostics.SourceSwitch> 추적을 진행 여부를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-198">Each trace method calls the <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> method of the <xref:System.Diagnostics.SourceSwitch> to determine whether to proceed with the trace.</span></span> <span data-ttu-id="efe0c-199">호출에서 반환 하는 경우 `true`는 수신기가 호출 됩니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-199">If the call returns `true`, the listeners are called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efe0c-200">
            <see cref="P:System.Diagnostics.TraceSource.Switch" />이 <see langword="null" />로 설정됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-200">
              <see cref="P:System.Diagnostics.TraceSource.Switch" /> is set to <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="efe0c-201">에 비관리 코드와 작동 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-201">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="efe0c-202">요청 값: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; 연관 된 열거형: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-202">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="efe0c-203">
            <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 컬렉션의 추적 수신기에 추적 데이터를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-203">Writes trace data to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public void TraceData (System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceData (eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceData(System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventType">
          <span data-ttu-id="efe0c-204">추적 데이터의 이벤트를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-204">One of the enumeration values that specifies the event type of the trace data.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="efe0c-205">이벤트의 숫자 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-205">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="efe0c-206">추적 데이터입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-206">The trace data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efe0c-207">지정된 이벤트 형식, 이벤트 식별자 및 추적 데이터를 사용하여 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 컬렉션의 추적 수신기에 추적 데이터를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-207">Writes trace data to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection using the specified event type, event identifier, and trace data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe0c-208"><xref:System.Diagnostics.TraceSource.TraceData%2A> 메서드, like는 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> 메서드, 자동화 된 도구에 만들어졌으나 예외 인스턴스를 추적 하는 등의 추가 개체에 연결할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-208">The <xref:System.Diagnostics.TraceSource.TraceData%2A> method, like the <xref:System.Diagnostics.TraceSource.TraceEvent%2A> method, is intended for automated tools, but it also allows the attaching of an additional object, such as an exception instance, to the trace.</span></span>  
  
 <span data-ttu-id="efe0c-209"><xref:System.Diagnostics.TraceSource.TraceData%2A> 메서드 호출의 <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A?displayProperty=nameWithType> 의 메서드는 <xref:System.Diagnostics.SourceSwitch> 에서 반환 된 개체는 <xref:System.Diagnostics.TraceSource.Switch%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-209">The <xref:System.Diagnostics.TraceSource.TraceData%2A> method calls the <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A?displayProperty=nameWithType> method of the <xref:System.Diagnostics.SourceSwitch> object returned by the <xref:System.Diagnostics.TraceSource.Switch%2A> property.</span></span> <span data-ttu-id="efe0c-210">경우 <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 반환 `true`, <xref:System.Diagnostics.TraceSource.TraceData%2A> 해당 호출 <xref:System.Diagnostics.TraceListener.TraceData%2A> 모든 수신기에서 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-210">If <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> returns `true`, <xref:System.Diagnostics.TraceSource.TraceData%2A> calls the corresponding <xref:System.Diagnostics.TraceListener.TraceData%2A> method on all listeners.</span></span> <span data-ttu-id="efe0c-211">그렇지 않으면 <xref:System.Diagnostics.TraceSource.TraceData%2A> 의 메서드를 호출 하지 않고 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-211">Otherwise, <xref:System.Diagnostics.TraceSource.TraceData%2A> returns without calling the listeners' methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efe0c-212"><xref:System.Diagnostics.EventLogTraceListener> 개체는 최대 제한 `id` 65, 535 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-212">The <xref:System.Diagnostics.EventLogTraceListener> object is limited to a maximum `id` value of 65,535.</span></span> <span data-ttu-id="efe0c-213">경우는 `id` 지정 된 값이 65, 535 보다 큰는 <xref:System.Diagnostics.EventLogTraceListener> 개체가 65, 535 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-213">If the `id` value specified is greater than 65,535, the <xref:System.Diagnostics.EventLogTraceListener> object uses 65,535.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efe0c-214">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Diagnostics.TraceSource.TraceData%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.Object%29> 메서드를 필터링 하 고 수신기에 추적 메시지를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-214">The following code example shows the use of the <xref:System.Diagnostics.TraceSource.TraceData%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.Object%29> method to filter and forward a trace message to the listeners.</span></span> <span data-ttu-id="efe0c-215">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.TraceSource> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-215">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#28)]
 [!code-vb[System.Diagnostics.TraceSource2#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="efe0c-216">종료하는 동안 이벤트를 추적하려고 했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-216">An attempt was made to trace an event during finalization.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public void TraceData (System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceData (eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceData(System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">
          <span data-ttu-id="efe0c-217">추적 데이터의 이벤트를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-217">One of the enumeration values that specifies the event type of the trace data.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="efe0c-218">이벤트의 숫자 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-218">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="efe0c-219">추적 데이터를 포함하는 개체 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-219">An object array containing the trace data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efe0c-220">지정된 이벤트 형식, 이벤트 식별자 및 추적 데이터 배열을 사용하여 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 컬렉션의 추적 수신기에 추적 데이터를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-220">Writes trace data to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection using the specified event type, event identifier, and trace data array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe0c-221"><xref:System.Diagnostics.TraceSource.TraceData%2A> 메서드, like는 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> 메서드, 자동화 된 도구에 만들어졌으나 예외 인스턴스를 추적 하는 스택 추적 등의 추가 개체에 연결할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-221">The <xref:System.Diagnostics.TraceSource.TraceData%2A> method, like the <xref:System.Diagnostics.TraceSource.TraceEvent%2A> method, is intended for automated tools, but it also allows the attaching of additional objects, such as an exception instance and a stack trace, to the trace.</span></span>  
  
 <span data-ttu-id="efe0c-222"><xref:System.Diagnostics.TraceSource.TraceData%2A> 메서드 호출의 <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 의 메서드는 <xref:System.Diagnostics.SourceSwitch> 에서 반환 된 개체는 <xref:System.Diagnostics.TraceSource.Switch%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-222">The <xref:System.Diagnostics.TraceSource.TraceData%2A> method calls the <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> method of the <xref:System.Diagnostics.SourceSwitch> object returned by the <xref:System.Diagnostics.TraceSource.Switch%2A> property.</span></span> <span data-ttu-id="efe0c-223">경우 <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 반환 `true`, <xref:System.Diagnostics.TraceSource.TraceData%2A> 해당 호출 <xref:System.Diagnostics.TraceListener.TraceData%2A> 모든 수신기에서 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-223">If <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> returns `true`, <xref:System.Diagnostics.TraceSource.TraceData%2A> calls the corresponding <xref:System.Diagnostics.TraceListener.TraceData%2A> method on all listeners.</span></span> <span data-ttu-id="efe0c-224">그렇지 않으면 <xref:System.Diagnostics.TraceSource.TraceData%2A> 의 메서드를 호출 하지 않고 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-224">Otherwise, <xref:System.Diagnostics.TraceSource.TraceData%2A> returns without calling the listeners' methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efe0c-225"><xref:System.Diagnostics.EventLogTraceListener> 개체는 최대 제한 `id` 65, 535 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-225">The <xref:System.Diagnostics.EventLogTraceListener> object is limited to a maximum `id` value of 65,535.</span></span> <span data-ttu-id="efe0c-226">경우는 `id` 지정 된 값이 65, 535 보다 큰는 <xref:System.Diagnostics.EventLogTraceListener> 개체가 65, 535 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-226">If the `id` value specified is greater than 65,535, the <xref:System.Diagnostics.EventLogTraceListener> object uses 65,535.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="efe0c-227">종료하는 동안 이벤트를 추적하려고 했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-227">An attempt was made to trace an event during finalization.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="efe0c-228">
            <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 컬렉션의 추적 수신기에 추적 이벤트 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-228">Writes a trace event message to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventType">
          <span data-ttu-id="efe0c-229">추적 데이터의 이벤트를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-229">One of the enumeration values that specifies the event type of the trace data.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="efe0c-230">이벤트의 숫자 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-230">A numeric identifier for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efe0c-231">지정된 이벤트 형식 및 이벤트 식별자를 사용하여 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 컬렉션의 추적 수신기에 추적 이벤트 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-231">Writes a trace event message to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection using the specified event type and event identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe0c-232"><xref:System.Diagnostics.TraceSource.TraceEvent%2A> 도구에 의해 자동으로 처리할 수 있는 추적 이벤트에 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-232">The <xref:System.Diagnostics.TraceSource.TraceEvent%2A> method is intended to trace events that can be processed automatically by tools.</span></span> <span data-ttu-id="efe0c-233">예, 모니터링 도구는 특정 소스에서 특정 이벤트는 추적 하는 경우 관리자를 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-233">For example, a monitoring tool can notify an administrator if a specific event is traced by a specific source.</span></span>  
  
 <span data-ttu-id="efe0c-234"><xref:System.Diagnostics.TraceSource.TraceEvent%2A> 메서드 호출의 <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 의 메서드는 <xref:System.Diagnostics.SourceSwitch> 에서 반환 된 개체는 <xref:System.Diagnostics.TraceSource.Switch%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-234">The <xref:System.Diagnostics.TraceSource.TraceEvent%2A> method calls the <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> method of the <xref:System.Diagnostics.SourceSwitch> object returned by the <xref:System.Diagnostics.TraceSource.Switch%2A> property.</span></span> <span data-ttu-id="efe0c-235">경우 <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 반환 `true`, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> 해당 호출 <xref:System.Diagnostics.TraceListener.TraceEvent%2A> 각 수신기의 메서드.</span><span class="sxs-lookup"><span data-stu-id="efe0c-235">If <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> returns `true`, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> calls the corresponding <xref:System.Diagnostics.TraceListener.TraceEvent%2A> method of each listener.</span></span> <span data-ttu-id="efe0c-236">그렇지 않으면 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> 의 메서드를 호출 하지 않고 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-236">Otherwise, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> returns without calling the listeners' methods.</span></span>  
  
 <span data-ttu-id="efe0c-237">추적 콘텐츠는 수신기에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-237">The trace content is listener specific.</span></span> <span data-ttu-id="efe0c-238">메서드가 수신기 구현에 의해 재정의 되지 않으면, 기본 출력의 이름인 추적 소스, 해당 숫자 id 및 이벤트 유형입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-238">If the method is not overridden by the listener implementation, the default output is the name of the trace source, its numeric identity, and the event type.</span></span>  <span data-ttu-id="efe0c-239">추가 추적 수신기의 종속 된 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-239">Additional trace content is dependent upon the listener's <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efe0c-240"><xref:System.Diagnostics.EventLogTraceListener> 개체는 최대 제한 `id` 65, 535 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-240">The <xref:System.Diagnostics.EventLogTraceListener> object is limited to a maximum `id` value of 65,535.</span></span> <span data-ttu-id="efe0c-241">경우는 `id` 지정 된 값이 65, 535 보다 큰는 <xref:System.Diagnostics.EventLogTraceListener> 65, 535를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-241">If the `id` value specified is greater than 65,535, the <xref:System.Diagnostics.EventLogTraceListener> uses 65,535.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efe0c-242">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> 수신기에 추적 이벤트를 전달할 메서드.</span><span class="sxs-lookup"><span data-stu-id="efe0c-242">The following code example shows the use of the <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> method to pass a trace event to the listeners.</span></span> <span data-ttu-id="efe0c-243">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.TraceSource> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-243">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#17)]
 [!code-vb[System.Diagnostics.TraceSource2#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="efe0c-244">종료하는 동안 이벤트를 추적하려고 했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-244">An attempt was made to trace an event during finalization.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventType">
          <span data-ttu-id="efe0c-245">추적 데이터의 이벤트를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-245">One of the enumeration values that specifies the event type of the trace data.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="efe0c-246">이벤트의 숫자 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-246">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="efe0c-247">기록할 추적 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-247">The trace message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efe0c-248">지정된 이벤트 형식, 이벤트 식별자 및 메시지를 사용하여 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 컬렉션의 추적 수신기에 추적 이벤트 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-248">Writes a trace event message to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection using the specified event type, event identifier, and message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe0c-249"><xref:System.Diagnostics.TraceSource.TraceEvent%2A> 도구에 의해 자동으로 처리할 수 있는 추적 이벤트에 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-249">The <xref:System.Diagnostics.TraceSource.TraceEvent%2A> method is intended to trace events that can be processed automatically by tools.</span></span> <span data-ttu-id="efe0c-250">예, 모니터링 도구는 특정 소스에서 특정 이벤트는 추적 하는 경우 관리자를 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-250">For example, a monitoring tool can notify an administrator if a specific event is traced by a specific source.</span></span>  
  
 <span data-ttu-id="efe0c-251"><xref:System.Diagnostics.TraceSource.TraceEvent%2A> 메서드 호출의 <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 의 메서드는 <xref:System.Diagnostics.SourceSwitch> 에서 반환 된 개체는 <xref:System.Diagnostics.TraceSource.Switch%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-251">The <xref:System.Diagnostics.TraceSource.TraceEvent%2A> method calls the <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> method of the <xref:System.Diagnostics.SourceSwitch> object returned by the <xref:System.Diagnostics.TraceSource.Switch%2A> property.</span></span> <span data-ttu-id="efe0c-252">경우 <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 반환 `true`, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> 해당 호출 <xref:System.Diagnostics.TraceListener.TraceEvent%2A> 각 수신기의 메서드.</span><span class="sxs-lookup"><span data-stu-id="efe0c-252">If <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> returns `true`, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> calls the corresponding <xref:System.Diagnostics.TraceListener.TraceEvent%2A> method of each listener.</span></span> <span data-ttu-id="efe0c-253">그렇지 않으면 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> 의 메서드를 호출 하지 않고 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-253">Otherwise, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> returns without calling the listeners' methods.</span></span>  
  
 <span data-ttu-id="efe0c-254">추적 콘텐츠는 수신기에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-254">The trace content is listener specific.</span></span> <span data-ttu-id="efe0c-255">메서드가 수신기 구현에 의해 재정의 되지 않으면, 기본 출력은 추적 소스, 숫자 id, 이벤트 유형 및 메시지의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-255">If the method is not overridden by the listener implementation, the default output is the name of the trace source, its numeric identity, the event type, and the message.</span></span>  <span data-ttu-id="efe0c-256">추가 추적 수신기의 종속 된 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-256">Additional trace content is dependent upon the listener's <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efe0c-257"><xref:System.Diagnostics.EventLogTraceListener> 개체는 최대 제한 `id` 65, 535 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-257">The <xref:System.Diagnostics.EventLogTraceListener> object is limited to a maximum `id` value of 65,535.</span></span> <span data-ttu-id="efe0c-258">경우는 `id` 지정 된 값이 65, 535 보다 큰는 <xref:System.Diagnostics.EventLogTraceListener> 개체가 65, 535 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-258">If the `id` value specified is greater than 65,535, the <xref:System.Diagnostics.EventLogTraceListener> object uses 65,535.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efe0c-259">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> 수신기에 추적 이벤트를 전달할 메서드.</span><span class="sxs-lookup"><span data-stu-id="efe0c-259">The following code example shows the use of the <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> method to pass a trace event to the listeners.</span></span> <span data-ttu-id="efe0c-260">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.TraceSource> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-260">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#18)]
 [!code-vb[System.Diagnostics.TraceSource2#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="efe0c-261">종료하는 동안 이벤트를 추적하려고 했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-261">An attempt was made to trace an event during finalization.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">
          <span data-ttu-id="efe0c-262">추적 데이터의 이벤트를 지정하는 열거형 값 중 하나입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-262">One of the enumeration values that specifies the event type of the trace data.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="efe0c-263">이벤트의 숫자 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-263">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="efe0c-264">
            <c>args</c> 배열의 개체에 해당하는 0개 이상의 서식 항목과 결합된 텍스트를 포함하는 합성 서식 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-264">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="efe0c-265">형식을 지정할 개체가 0개 이상 포함된 <see langword="object" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-265">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efe0c-266">지정된 이벤트 형식, 이벤트 식별자, 인수 배열 및 형식을 사용하여 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 컬렉션의 추적 수신기에 추적 이벤트를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-266">Writes a trace event to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection using the specified event type, event identifier, and argument array and format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe0c-267">에 대 한 자세한 내용은 `format` 매개 변수를 참조 [합성 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-267">For more information about the `format` parameter, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
 <span data-ttu-id="efe0c-268"><xref:System.Diagnostics.TraceSource.TraceEvent%2A> 도구에 의해 자동으로 처리할 수 있는 추적 이벤트에 메서드를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-268">The <xref:System.Diagnostics.TraceSource.TraceEvent%2A> method is intended to trace events that can be processed automatically by tools.</span></span> <span data-ttu-id="efe0c-269">예, 모니터링 도구는 특정 소스에서 특정 이벤트는 추적 하는 경우 관리자를 받을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-269">For example, a monitoring tool can notify an administrator if a specific event is traced by a specific source.</span></span>  
  
 <span data-ttu-id="efe0c-270"><xref:System.Diagnostics.TraceSource.TraceEvent%2A> 메서드 호출의 <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 의 메서드는 <xref:System.Diagnostics.SourceSwitch> 에서 반환 된 개체는 <xref:System.Diagnostics.TraceSource.Switch%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-270">The <xref:System.Diagnostics.TraceSource.TraceEvent%2A> method calls the <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> method of the <xref:System.Diagnostics.SourceSwitch> object returned by the <xref:System.Diagnostics.TraceSource.Switch%2A> property.</span></span> <span data-ttu-id="efe0c-271">경우 <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> 반환 `true`, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> 해당 호출 <xref:System.Diagnostics.TraceListener.TraceEvent%2A> 각 수신기의 메서드.</span><span class="sxs-lookup"><span data-stu-id="efe0c-271">If <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> returns `true`, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> calls the corresponding <xref:System.Diagnostics.TraceListener.TraceEvent%2A> method of each listener.</span></span> <span data-ttu-id="efe0c-272">그렇지 않으면 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> 의 메서드를 호출 하지 않고 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-272">Otherwise, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> returns without calling the listeners' methods.</span></span>  
  
 <span data-ttu-id="efe0c-273">추적 콘텐츠는 수신기에 따라 다릅니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-273">The trace content is listener specific.</span></span> <span data-ttu-id="efe0c-274">기본 <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> 메서드는 소스 이름, 이벤트 유형 및 추적 헤더의 숫자 id는 다음 호출 기록는 <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> 전달 하는 메서드는 `format` 문자열 및 `args` 배열 및 사용 하 여는 <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType> 서식을 지정 하려면 속성의 메시지 출력 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-274">The default <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> method writes the source name, event type, and numeric identity in the trace header, then calls the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method, passing the `format` string and `args` array and using the <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType> property to format the string as the message output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="efe0c-275"><xref:System.Diagnostics.EventLogTraceListener> 개체는 최대 제한 `id` 65, 535 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-275">The <xref:System.Diagnostics.EventLogTraceListener> object is limited to a maximum `id` value of 65,535.</span></span> <span data-ttu-id="efe0c-276">경우는 `id` 지정 된 값이 65, 535 보다 큰는 <xref:System.Diagnostics.EventLogTraceListener> 개체가 65, 535 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-276">If the `id` value specified is greater than 65,535, the <xref:System.Diagnostics.EventLogTraceListener> object uses 65,535.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efe0c-277">다음 코드 예제에서는 사용을 보여 줍니다.는 <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> 수신기에 추적 이벤트를 전달할 메서드.</span><span class="sxs-lookup"><span data-stu-id="efe0c-277">The following code example shows the use of the <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> method to pass a trace event to the listeners.</span></span> <span data-ttu-id="efe0c-278">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.TraceSource> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-278">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#24)]
 [!code-vb[System.Diagnostics.TraceSource2#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efe0c-279">
            <paramref name="format" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-279">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efe0c-280">
            <paramref name="format" />이 잘못되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-280">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="efe0c-281">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-281">-or-</span>
          </span>
          <span data-ttu-id="efe0c-282">형식을 지정할 인수를 나타내는 숫자가 0보다 작거나, 형식을 지정할 해당 개체의 수보다 크거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-282">The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="efe0c-283">종료하는 동안 이벤트를 추적하려고 했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-283">An attempt was made to trace an event during finalization.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceInformation">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="efe0c-284">
            <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 컬렉션의 추적 수신기에 정보 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-284">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public void TraceInformation (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceInformation(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceInformation (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceInformation(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="efe0c-285">쓸 알림 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-285">The informative message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efe0c-286">지정된 메시지를 사용하여 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 컬렉션의 추적 수신기에 알림 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-286">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection using the specified message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe0c-287"><xref:System.Diagnostics.TraceSource.TraceInformation%2A> 메서드는 사용자 및 tools가 아니라 읽도록 정보 메시지를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-287">The <xref:System.Diagnostics.TraceSource.TraceInformation%2A> method provides an informational message intended to be read by users and not by tools.</span></span>  
  
 <span data-ttu-id="efe0c-288"><xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%29> 호출의 <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> 설정 메서드 `eventType` 를 <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType> 메시지 문자열로 알림 메시지를 전달 하 고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-288"><xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%29> calls the <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> method, setting `eventType` to <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType> and passing the informative message as the message string.</span></span> <span data-ttu-id="efe0c-289"><xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> 메서드 호출에서 <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> 각 추적 수신기의 메서드.</span><span class="sxs-lookup"><span data-stu-id="efe0c-289">The <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> method in turn calls the <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> method of each trace listener.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="efe0c-290">종료하는 동안 이벤트를 추적하려고 했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-290">An attempt was made to trace an event during finalization.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public void TraceInformation (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceInformation(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceInformation (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceInformation(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="efe0c-291">
            <c>args</c> 배열의 개체에 해당하는 0개 이상의 서식 항목과 결합된 텍스트를 포함하는 합성 서식 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-291">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="efe0c-292">형식을 지정할 개체가 0개 이상 포함된 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-292">An array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efe0c-293">지정된 개체 배열과 형식 지정 정보를 사용하여 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 컬렉션의 추적 수신기에 알림 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-293">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection using the specified object array and formatting information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe0c-294">에 대 한 자세한 내용은 `format` 매개 변수를 참조 [합성 서식 지정](~/docs/standard/base-types/composite-formatting.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-294">For more information about the `format` parameter, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
 <span data-ttu-id="efe0c-295"><xref:System.Diagnostics.TraceSource.TraceInformation%2A> 메서드는 사용자 및 tools가 아니라 읽도록 정보 메시지를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-295">The <xref:System.Diagnostics.TraceSource.TraceInformation%2A> method provides an informational message intended to be read by users and not by tools.</span></span>  
  
 <span data-ttu-id="efe0c-296"><xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%2CSystem.Object%5B%5D%29> 호출의 <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> 설정 메서드 `eventType` 를 <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType> 메시지 내용을 서식 정보를 개체 배열로 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-296"><xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%2CSystem.Object%5B%5D%29> calls the <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> method, setting `eventType` to <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType> and passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="efe0c-297"><xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> 메서드 호출에서 <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> 각 추적 수신기의 메서드.</span><span class="sxs-lookup"><span data-stu-id="efe0c-297">The <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> method in turn calls the <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> method of each trace listener.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="efe0c-298">
            <paramref name="format" />가 <see langword="null" />인 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-298">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="efe0c-299">
            <paramref name="format" />이 잘못되었습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-299">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="efe0c-300">또는</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-300">-or-</span>
          </span>
          <span data-ttu-id="efe0c-301">형식을 지정할 인수를 나타내는 숫자가 0보다 작거나, 형식을 지정할 해당 개체의 수보다 크거나 같은 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-301">The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="efe0c-302">종료하는 동안 이벤트를 추적하려고 했습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-302">An attempt was made to trace an event during finalization.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public void TraceTransfer (int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceTransfer(int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceTransfer (id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceTransfer(int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="efe0c-303">이벤트의 숫자 식별자입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-303">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="efe0c-304">기록할 추적 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-304">The trace message to write.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="efe0c-305">관련 동작을 식별하는 구조체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-305">A structure that identifies the related activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="efe0c-306">지정된 숫자 식별자, 메시지 및 관련 작업 식별자를 사용하여 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 컬렉션의 추적 수신기에 추적 전송 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="efe0c-306">Writes a trace transfer message to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection using the specified numeric identifier, message, and related activity identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe0c-307"><xref:System.Diagnostics.TraceSource.TraceTransfer%2A> 메서드 호출의 <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> 에서 각 추적 수신기의 메서드는 <xref:System.Diagnostics.TraceSource.Listeners%2A> 추적 정보를 쓸 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-307">The <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> method calls the <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> method of each trace listener in the <xref:System.Diagnostics.TraceSource.Listeners%2A> property to write the trace information.</span></span> <span data-ttu-id="efe0c-308">기본 <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> 자료에서 메서드 <xref:System.Diagnostics.TraceListener> 클래스가 호출은 <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType> 메서드를 설정 하는 호출을 처리 `eventType` 를 <xref:System.Diagnostics.TraceEventType.Transfer?displayProperty=nameWithType> 의 문자열 표현에 추가 하는 `relatedActivityId` GUID를 `message`합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-308">The default <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> method in the base <xref:System.Diagnostics.TraceListener> class calls the <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType> method to process the call, setting `eventType` to <xref:System.Diagnostics.TraceEventType.Transfer?displayProperty=nameWithType> and appending a string representation of the `relatedActivityId` GUID to `message`.</span></span>  
  
 <span data-ttu-id="efe0c-309"><xref:System.Diagnostics.TraceSource.TraceTransfer%2A> 논리 작업에 사용 하기에 적합 한 <xref:System.Diagnostics.CorrelationManager>합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-309"><xref:System.Diagnostics.TraceSource.TraceTransfer%2A> is intended to be used with the logical operations of a <xref:System.Diagnostics.CorrelationManager>.</span></span> <span data-ttu-id="efe0c-310">`relatedActivityId` 매개 변수 관련이 <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> 의 속성을 <xref:System.Diagnostics.CorrelationManager> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-310">The `relatedActivityId` parameter relates to the <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> property of a <xref:System.Diagnostics.CorrelationManager> object.</span></span> <span data-ttu-id="efe0c-311">호출 하 여 두 번째 활동 전송을 기록 논리 연산 한 작업에서 시작 하 간에 전송 하는 경우는 <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="efe0c-311">If a logical operation begins in one activity and transfers to another, the second activity logs the transfer by calling the <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> method.</span></span> <span data-ttu-id="efe0c-312"><xref:System.Diagnostics.TraceSource.TraceTransfer%2A> 호출 이전 id로 새 작업 id를 연결 합니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-312">The <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> call relates the new activity identity to the previous identity.</span></span> <span data-ttu-id="efe0c-313">이 기능은 가장 가능성이 높은 이벤트 알림의 소비자는 여러 활동을 포괄 하는 논리 연산을 보고할 수 있는 추적 뷰어입니다.</span><span class="sxs-lookup"><span data-stu-id="efe0c-313">The most likely consumer of this functionality is a trace viewer that can report logical operations that span multiple activities.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.XmlWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventSchemaTraceListener" />
        <altmember cref="T:System.Diagnostics.DelimitedListTraceListener" />
      </Docs>
    </Member>
  </Members>
</Type>