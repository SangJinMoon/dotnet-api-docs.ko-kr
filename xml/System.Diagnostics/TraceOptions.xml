<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TraceOptions.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b857fe3" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2eccf4de-4b1c-4706-8cb3-f46682ccfb7297332d5507d04089b3157670b4ff396f6d63d63a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">97332d5507d04089b3157670b4ff396f6d63d63a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b15b8cf0f6dbc1504057c88969d9ef4b790891fe</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/11/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceOptions">
          <source>Specifies trace data options to be written to the trace output.</source>
          <target state="translated">추적 출력에 쓸 추적 데이터 옵션을 지정합니다. </target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceOptions">
          <source>This enumeration is used by trace listeners to determine which options, or elements, should be included in the trace output.</source>
          <target state="translated">이 열거형은 옵션이 나 요소를 포함할지 추적 출력에서을 확인 하려면 추적 수신기에서 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceOptions">
          <source>Trace listeners store the trace options in the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated">추적 수신기에 추적 옵션을 저장는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceOptions">
          <source>The following example shows the use of the <ph id="ph1">`traceOutputOptions`</ph> attribute to specify the trace output options for a <ph id="ph2">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> that is enabled using a configuration file.</source>
          <target state="translated">다음 예제에서는 사용을 보여 줍니다.는 <ph id="ph1">`traceOutputOptions`</ph> 특성에 대 한 추적 출력 옵션을 지정 하는 <ph id="ph2">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> 사용할 수 있는 구성 파일을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceOptions">
          <source>For details about adding trace listeners to the application configuration file, see <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>listeners<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace.md)</ept>.</source>
          <target state="translated">응용 프로그램 구성 파일에 추적 수신기를 추가 하는 방법에 대 한 세부 정보를 참조 하십시오. <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>수신기<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceOptions">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions&gt;</ph> enumeration is not used by the following classes and methods:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions&gt;</ph> 열거형은 다음과 같은 클래스 및 메서드를 사용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceOptions">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> class, because it can cause a large volume of data to be written to the log.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> 클래스 수 있기 때문에 많은 양의 데이터를 로그에 기록 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceOptions">
          <source>The <ph id="ph1">`Write`</ph> and <ph id="ph2">`WriteLine`</ph> methods of the <ph id="ph3">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, and <ph id="ph5">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> classes.</source>
          <target state="translated"><ph id="ph1">`Write`</ph> 및 <ph id="ph2">`WriteLine`</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, 및 <ph id="ph5">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceOptions">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> methods of the <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> class when they are not overridden in a derived class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> 의 메서드는 <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> 클래스 파생된 클래스에서 재정의 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceOptions">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions&gt;</ph> enumeration to programmatically set the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property for a console trace listener.</source>
          <target state="translated">다음 코드 예제에서는 사용을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions&gt;</ph> 프로그래밍 방식으로 설정 하는 열거형은 <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> 콘솔 추적 수신기에 대 한 속성입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceOptions">
          <source>The console trace listener is one of the listeners enumerated in the <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.Listeners%2A&gt;</ph> property of a trace source.</source>
          <target state="translated">콘솔 추적 수신기가 수신기에 열거 중 하나는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.Listeners%2A&gt;</ph> 추적 소스의 속성입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceOptions">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> class.</source>
          <target state="translated">이 코드 예제는에 대해 제공 된 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.TraceOptions.Callstack">
          <source>Write the call stack, which is represented by the return value of the <ph id="ph1">&lt;see cref="P:System.Environment.StackTrace" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Environment.StackTrace" /&gt;</ph> 속성의 반환 값으로 표현되는 호출 스택을 씁니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.TraceOptions.DateTime">
          <source>Write the date and time.</source>
          <target state="translated">날짜와 시간을 씁니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.TraceOptions.LogicalOperationStack">
          <source>Write the logical operation stack, which is represented by the return value of the <ph id="ph1">&lt;see cref="P:System.Diagnostics.CorrelationManager.LogicalOperationStack" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.CorrelationManager.LogicalOperationStack" /&gt;</ph> 속성의 반환 값으로 표현되는 논리 작업 스택을 씁니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.TraceOptions.None">
          <source>Do not write any elements.</source>
          <target state="translated">어떤 요소도 쓰지 않습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.TraceOptions.ProcessId">
          <source>Write the process identity, which is represented by the return value of the <ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Diagnostics.Process.Id" /&gt;</ph> 속성의 반환 값으로 표현되는 프로세스 ID를 씁니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.TraceOptions.ThreadId">
          <source>Write the thread identity, which is represented by the return value of the <ph id="ph1">&lt;see cref="P:System.Threading.Thread.ManagedThreadId" /&gt;</ph> property for the current thread.</source>
          <target state="translated">현재 스레드에 대한 <ph id="ph1">&lt;see cref="P:System.Threading.Thread.ManagedThreadId" /&gt;</ph> 속성의 반환 값으로 표현되는 스레드 ID를 씁니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Diagnostics.TraceOptions.Timestamp">
          <source>Write the timestamp, which is represented by the return value of the <ph id="ph1">&lt;see cref="M:System.Diagnostics.Stopwatch.GetTimestamp" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Diagnostics.Stopwatch.GetTimestamp" /&gt;</ph> 메서드의 반환 값으로 표현되는 타임스탬프를 씁니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>