<Type Name="EventSourceCreationData" FullName="System.Diagnostics.EventSourceCreationData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc5fb64c08e7407b6912a57b42da416cf47201c6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventSourceCreationData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSourceCreationData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventSourceCreationData" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSourceCreationData" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSourceCreationData" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="47add-101">로컬 컴퓨터 또는 원격 컴퓨터에서 이벤트 로그 소스를 만드는 데 사용되는 구성 설정을 나타냅니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="47add-101">Represents the configuration settings used to create an event log source on the local computer or a remote computer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47add-102">사용 된 <xref:System.Diagnostics.EventSourceCreationData> 이벤트 로그에 지역화 된 엔트리를 쓰기 위한 새 원본을 구성 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-102">Use the <xref:System.Diagnostics.EventSourceCreationData> class to configure a new source for writing localized entries to an event log.</span></span> <span data-ttu-id="47add-103">이 클래스를 사용 하 여 이벤트 로그에서 읽을 필요는 없습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-103">It is not necessary to use this class to read from an event log.</span></span>  
  
 <span data-ttu-id="47add-104">이 클래스에는 새 이벤트 소스 및 관련된 이벤트 로그에 대 한 구성 설정을 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-104">This class defines the configuration settings for a new event source and its associated event log.</span></span> <span data-ttu-id="47add-105">관련된 이벤트 로그는 로컬 컴퓨터 또는 원격 컴퓨터에 있을 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-105">The associated event log can be on the local computer or a remote computer.</span></span> <span data-ttu-id="47add-106">로컬 컴퓨터에서 기존 또는 새 이벤트 로그에 대 한 새 원본을 만들려면이 설정의 <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> 및 <xref:System.Diagnostics.EventSourceCreationData.Source%2A> 의 속성은 <xref:System.Diagnostics.EventSourceCreationData> 호출는 <xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="47add-106">To create a new source for a new or existing event log on the local computer, set the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> and <xref:System.Diagnostics.EventSourceCreationData.Source%2A> properties of an <xref:System.Diagnostics.EventSourceCreationData> and call the <xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="47add-107">이 메서드가 만드는에서 지정한 이벤트 소스는 <xref:System.Diagnostics.EventSourceCreationData.Source%2A> 속성 및 레지스터에 지정 된 이벤트 로그에 <xref:System.Diagnostics.EventSourceCreationData.LogName%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-107">This method creates the event source you specify in the <xref:System.Diagnostics.EventSourceCreationData.Source%2A> property and registers it for the event log specified in <xref:System.Diagnostics.EventSourceCreationData.LogName%2A>.</span></span> <span data-ttu-id="47add-108">이 동작은 사용 방식과 비슷하지만 다음과 <xref:System.Diagnostics.EventLogInstaller> 이벤트 로그에 대 한 이벤트 소스를 등록 하는 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-108">This behavior is similar to using the <xref:System.Diagnostics.EventLogInstaller> class to register an event source for an event log.</span></span>  
  
 <span data-ttu-id="47add-109">사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 및 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 이벤트 로그에 이벤트를 쓰는 메서드가 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-109">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods to write events to an event log.</span></span> <span data-ttu-id="47add-110">이벤트를 작성 하는 이벤트 소스를 지정 해야 합니다. 만들 하며 소스와 첫 번째 항목을 기록 하기 전에 이벤트 소스를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-110">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="47add-111">응용 프로그램의 설치 하는 동안 새 이벤트 소스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="47add-111">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="47add-112">이렇게 하면 운영 체제 등록 된 이벤트 소스 목록과 해당 구성을 새로 고칠 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-112">This allows time for the operating system to refresh its list of registered event sources and their configurations.</span></span> <span data-ttu-id="47add-113">운영 체제에서 이벤트 소스 목록을 새로 고치지 않은 경우 새 소스를 사용 하 여 이벤트 쓰려고 쓰기 작업이 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-113">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="47add-114">사용 하 여 새 원본을 구성할 수 있습니다는 <xref:System.Diagnostics.EventLogInstaller>, 또는 사용 하는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="47add-114">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="47add-115">새 이벤트 소스를 만들려면 컴퓨터에 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-115">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="47add-116">기존 이벤트 로그 또는 새 이벤트 로그에 대 한 이벤트 소스를 만들 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-116">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="47add-117">새 이벤트 로그에 대 한 새 원본을 만들 때 해당 로그에 대 한 소스를 등록 하는 시스템 하지만 첫 번째 항목에 기록할 때 까지는 로그가 만들어지지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-117">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="47add-118">각 소스; 한 번에 하나의 이벤트 로그에 쓸 수만 그러나 응용 프로그램 여러 이벤트 로그에 쓸 여러 소스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-118">Each source can only write to one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="47add-119">예를 들어 응용 프로그램에 다른 이벤트 로그 또는 서로 다른 리소스 파일에 대해 구성 된 여러 소스가 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-119">For example, your application might need multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="47add-120">기존 소스 구성 세부 정보를 변경 하려면 소스를 삭제 하 고 새 구성으로 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="47add-120">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="47add-121">다른 응용 프로그램이 나 구성 요소는 기존 소스를 사용 하는 경우 기존 소스를 삭제 하는 대신 업데이트 된 구성으로 새 소스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="47add-121">If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</span></span>  
  
 <span data-ttu-id="47add-122">이벤트 범주, 메시지 문자열에 대 한 지역화 된 리소스가 포함 된 이벤트 소스를 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-122">You can register the event source with localized resources for your event category and message strings.</span></span> <span data-ttu-id="47add-123">응용 프로그램 이벤트 로그 항목에서는 실제 문자열을 지정 하지 않고 리소스 식별자를 사용 하 여 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-123">Your application can write event log entries using resource identifiers, rather than specifying the actual string.</span></span> <span data-ttu-id="47add-124">이벤트 뷰어에서 리소스 식별자를 사용 하 여을 찾아 현재 언어 설정에 따라 지역화 된 리소스 파일에서 해당 문자열을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-124">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span> <span data-ttu-id="47add-125">이벤트 범주, 메시지 및 매개 변수 삽입 문자열에 대 한 별도 파일을 등록할 수 있습니다 또는 모든 세 가지 유형의 문자열에 같은 리소스 파일을 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-125">You can register a separate file for event categories, messages, and parameter insertion strings, or you can register the same resource file for all three types of strings.</span></span> <span data-ttu-id="47add-126">사용 하 여는 <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>, <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>, 및 <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> 원본을 구성 하 여 이벤트 로그에 지역화 된 엔트리를 쓸 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-126">Use the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>, <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>, and <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> properties to configure the source to write localized entries to the event log.</span></span> <span data-ttu-id="47add-127">응용 프로그램 이벤트 로그에 직접 문자열 값을 쓰는, 이러한 속성을 설정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-127">If your application writes string values directly to the event log, you do not need to set these properties.</span></span>  
  
 <span data-ttu-id="47add-128">지역화 된 엔트리 또는 직접 문자열을 작성 하기 위한 소스를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-128">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="47add-129"><xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드 이벤트 로그에 직접 지정된 된 문자열을 씁니다; 지역화할 수 있는 메시지 리소스 파일을 사용 하지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-129">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="47add-130">사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드가 지역화 된 메시지 리소스 파일을 사용 하 여 이벤트를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-130">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="47add-131">리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 응용 프로그램을 두 개의 별도 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-131">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="47add-132">예를 들어 리소스 파일에 대해 하나의 소스를 구성 하 고 다음 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드가 이벤트 로그에 대 한 리소스 식별자를 사용 하 여 엔트리를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-132">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="47add-133">그런 다음 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 해당 소스를 사용 하 여 이벤트 로그에 직접 씁니다.</span><span class="sxs-lookup"><span data-stu-id="47add-133">Then create a different source without resource files and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47add-134">다음 코드 예제에서는 명령줄 인수에서 이벤트 소스에 대 한 구성 속성을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-134">The following code example sets the configuration properties for an event source from command-line arguments.</span></span> <span data-ttu-id="47add-135">입력된 인수는 이벤트 소스 이름, 이벤트 로그 이름, 컴퓨터 이름 및 이벤트 메시지 리소스 파일을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-135">The input arguments specify the event source name, event log name, computer name, and event message resource file.</span></span> <span data-ttu-id="47add-136">코드 예제에서는 확인 소스는 기존 이벤트 소스와 충돌 하지 않는 한 다음 지정된 된 이벤트 로그에 대 한 새 이벤트 소스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="47add-136">The code example verifies that the source does not conflict with an existing event source, and then creates the new event source for the specified event log.</span></span>  
  
 [!code-cpp[EventLog_EventSourceCreation_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CPP/source.cpp#1)]
 [!code-csharp[EventLog_EventSourceCreation_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CS/source.cs#1)]
 [!code-vb[EventLog_EventSourceCreation_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="47add-137">멤버를 호출 하는 것에 대 한 <see cref="T:System.Diagnostics.EventSourceCreationData" /> 완전 신뢰 수준으로 됩니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="47add-137">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span>
      </span>
      <span data-ttu-id="47add-138">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="47add-138">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
      </span>
    </permission>
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="T:System.Diagnostics.EventLogInstaller" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSourceCreationData (string source, string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string source, string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As String, logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSourceCreationData(System::String ^ source, System::String ^ logName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="47add-139">엔트리 소스로 이벤트 로그에 등록할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-139">The name to register with the event log as a source of entries.</span>
          </span>
        </param>
        <param name="logName">
          <span data-ttu-id="47add-140">소스 엔트리를 쓸 로그의 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-140">The name of the log to which entries from the source are written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="47add-141">지정된 이벤트 소스와 이벤트 로그 이름을 사용하여 <see cref="T:System.Diagnostics.EventSourceCreationData" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-141">Initializes a new instance of the <see cref="T:System.Diagnostics.EventSourceCreationData" /> class with a specified event source and event log name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47add-142">엔트리를 쓸 프로그램 이벤트 로그에 이벤트 로그에 대 한 이벤트 소스를 먼저 만들어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-142">To write entries to an event log, you must first create an event source for the event log.</span></span> <span data-ttu-id="47add-143">새 소스를 등록 하려면 초기화는 <xref:System.Diagnostics.EventSourceCreationData> 인스턴스를 응용 프로그램, 그리고 호출에 대 한 인스턴스 속성을 구성 된 <xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType> 메서드.</span><span class="sxs-lookup"><span data-stu-id="47add-143">To register a new source, initialize an <xref:System.Diagnostics.EventSourceCreationData> instance, configure the instance properties for your application, and call the <xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="47add-144">소스를 등록 한 후 항목을 사용 하 여 원본에서 작성할 수 있습니다는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 또는 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="47add-144">After the source is registered, you can write entries from the source using the <xref:System.Diagnostics.EventLog.WriteEvent%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods.</span></span>  
  
 <span data-ttu-id="47add-145">이벤트 범주, 메시지 문자열에 대 한 지역화 된 리소스가 포함 된 이벤트 소스를 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-145">You can register the event source with localized resources for your event category and message strings.</span></span> <span data-ttu-id="47add-146">응용 프로그램 이벤트 로그 항목에서는 실제 문자열을 지정 하지 않고 리소스 식별자를 사용 하 여 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-146">Your application can write event log entries using resource identifiers, rather than specifying the actual string.</span></span> <span data-ttu-id="47add-147">이벤트 뷰어에서 리소스 식별자를 사용 하 여을 찾아 현재 언어 설정에 따라 지역화 된 리소스 파일에서 해당 문자열을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-147">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span> <span data-ttu-id="47add-148">이벤트 범주, 메시지 및 매개 변수 삽입 문자열에 대 한 별도 파일을 등록할 수 있습니다 또는 모든 세 가지 유형의 문자열에 같은 리소스 파일을 등록할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-148">You can register a separate file for event categories, messages, and parameter insertion strings, or you can register the same resource file for all three types of strings.</span></span> <span data-ttu-id="47add-149">사용 하 여는 <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>, <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>, 및 <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> 원본을 구성 하 여 이벤트 로그에 지역화 된 엔트리를 쓸 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-149">Use the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>, <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>, and <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> properties to configure the source to write localized entries to the event log.</span></span> <span data-ttu-id="47add-150">응용 프로그램 이벤트 로그에 직접 문자열 값을 쓰는, 이러한 속성을 설정할 필요가 없습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-150">If your application writes string values directly to the event log, you do not need to set these properties.</span></span>  
  
 <span data-ttu-id="47add-151">지역화 된 엔트리 또는 직접 문자열을 작성 하기 위한 소스를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-151">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="47add-152">리소스 식별자와 문자열 값을 사용 하 여 항목을 기록 하는 응용 프로그램을 두 개의 별도 소스를 등록 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-152">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="47add-153">예를 들어 리소스 파일에 대해 하나의 소스를 구성 하 고 다음 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드가 이벤트 로그에 대 한 리소스 식별자를 사용 하 여 엔트리를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-153">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="47add-154">그런 다음 리소스 파일 없이 다른 소스를 만들고 해당 소스를 사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEntry%2A> 메서드를 이벤트 로그에 직접 씁니다.</span><span class="sxs-lookup"><span data-stu-id="47add-154">Then create a different source without resource files and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log.</span></span>  
  
 <span data-ttu-id="47add-155">다음 표에서에 대 한 초기 속성 값이 표시는 <xref:System.Diagnostics.EventSourceCreationData>합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-155">The following table shows initial property values for an <xref:System.Diagnostics.EventSourceCreationData>.</span></span>  
  
|<span data-ttu-id="47add-156">속성</span><span class="sxs-lookup"><span data-stu-id="47add-156">Property</span></span>|<span data-ttu-id="47add-157">초기 값</span><span class="sxs-lookup"><span data-stu-id="47add-157">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Diagnostics.EventSourceCreationData.Source%2A>|<span data-ttu-id="47add-158">`source` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-158">The `source` parameter.</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>|<span data-ttu-id="47add-159">`logName` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-159">The `logName` parameter.</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.MachineName%2A>|<span data-ttu-id="47add-160">로컬 컴퓨터 (".").</span><span class="sxs-lookup"><span data-stu-id="47add-160">The local computer (".").</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>|<span data-ttu-id="47add-161">0</span><span class="sxs-lookup"><span data-stu-id="47add-161">Zero</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>|<span data-ttu-id="47add-162">`null`(Visual Basic의 경우 `Nothing`)</span><span class="sxs-lookup"><span data-stu-id="47add-162">`null` (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>|<span data-ttu-id="47add-163">`null`(Visual Basic의 경우 `Nothing`)</span><span class="sxs-lookup"><span data-stu-id="47add-163">`null` (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A>|<span data-ttu-id="47add-164">`null`(Visual Basic의 경우 `Nothing`)</span><span class="sxs-lookup"><span data-stu-id="47add-164">`null` (`Nothing` in Visual Basic).</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="47add-165">다음 코드 예제에서는 이벤트 소스 이름을 지정 여부를 확인 `SampleApplicationSource` 로컬 컴퓨터에 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-165">The following code example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="47add-166">이벤트 소스가 없는 경우이 예제에서는 소스에 대 한 메시지 리소스 파일을 설정 하 고 새 이벤트 소스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="47add-166">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="47add-167">코드 예제에서는 리소스 식별자 값을 사용 하 여 이벤트 로그에 대 한 지역화 된 표시 이름을 설정 하는 마지막으로, `DisplayNameMsgId` 및 리소스 파일 경로에 `messageFile`합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-167">Finally, the code example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="47add-168">코드 예제에서는 리소스 라이브러리 EventLogMsgs.dll에 기본 제공 되는 다음 메시지 텍스트 파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-168">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="47add-169">메시지 텍스트 파일은 소스 메시지 리소스 파일이 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="47add-169">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="47add-170">메시지 텍스트 파일의 리소스 식별자와 범주, 이벤트 메시지 및 매개 변수 삽입 문자열에 대 한 텍스트를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-170">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="47add-171">멤버를 호출 하는 것에 대 한 <see cref="T:System.Diagnostics.EventSourceCreationData" /> 완전 신뢰 수준으로 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-171">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span>
          </span>
          <span data-ttu-id="47add-172">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-172">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.Source" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.LogName" />
      </Docs>
    </Member>
    <Member MemberName="CategoryCount">
      <MemberSignature Language="C#" Value="public int CategoryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CategoryCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.CategoryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CategoryCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47add-173">범주 리소스 파일에서 범주 수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-173">Gets or sets the number of categories in the category resource file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47add-174">범주 리소스 파일에 있는 범주 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-174">The number of categories in the category resource file.</span>
          </span>
          <span data-ttu-id="47add-175">기본값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-175">The default value is zero.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47add-176">사용 하 여는 <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> 및 <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> 지역화 된 범주 문자열 속성을 사용 하 여 이벤트를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-176">Use the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> and <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> properties to write events with localized category strings.</span></span> <span data-ttu-id="47add-177">이벤트 뷰어에서 이벤트를 쓸 때 범주를 제공 하는 경우 이벤트 항목에 대 한 범주를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-177">The Event Viewer displays the category for an event entry if you supply a category when you write the event.</span></span> <span data-ttu-id="47add-178">이벤트 로그 범주는 필터 이벤트 나 이벤트에 추가 정보를 제공 하는 응용 프로그램 정의 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-178">Event log categories are application-defined strings that help filter events, or provide further information on the event.</span></span> <span data-ttu-id="47add-179">예를 들어 응용 프로그램이 서로 다른 구성 요소 또는 여러 작업에 대 한 별도 범주를 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-179">For example, your application can define separate categories for different components or different operations.</span></span>  
  
 <span data-ttu-id="47add-180">이벤트 범주는 선택 사항입니다. 응용 프로그램 범주를 사용 하지 않는 경우 설정 하지 마십시오는 <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> 및 <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-180">Event categories are optional; if your application does not use categories, do not set the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> and <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> properties.</span></span>  
  
 <span data-ttu-id="47add-181">에 있는 Platform SDK 설명서의 "메시지 컴파일러" 항목을 참조 하는 이벤트 메시지를 정의 하 고 이벤트 리소스 파일을 작성 하는 방법에 대 한 세부 정보에 대 한 [ http://msdn.microsoft.com ](http://msdn.microsoft.com/)합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-181">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47add-182">다음 코드 예제에서는 이벤트 소스 이름을 지정 여부를 확인 `SampleApplicationSource` 로컬 컴퓨터에 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-182">The following code example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="47add-183">이벤트 소스가 없는 경우이 예제에서는 소스에 대 한 메시지 리소스 파일을 설정 하 고 새 이벤트 소스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="47add-183">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="47add-184">코드 예제에서는 리소스 식별자 값을 사용 하 여 이벤트 로그에 대 한 지역화 된 표시 이름을 설정 하는 마지막으로, `DisplayNameMsgId` 및 리소스 파일 경로에 `messageFile`합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-184">Finally, the code example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="47add-185">코드 예제에서는 리소스 라이브러리 EventLogMsgs.dll에 기본 제공 되는 다음 메시지 텍스트 파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-185">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="47add-186">메시지 텍스트 파일은 소스 메시지 리소스 파일이 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="47add-186">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="47add-187">메시지 텍스트 파일의 리소스 식별자와 범주, 이벤트 메시지 및 매개 변수 삽입 문자열에 대 한 텍스트를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-187">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="47add-188">속성이 음의 값이나 <see cref="F:System.UInt16.MaxValue" />보다 큰 값으로 설정된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-188">The property is set to a negative value or to a value larger than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="47add-189">멤버를 호출 하는 것에 대 한 <see cref="T:System.Diagnostics.EventSourceCreationData" /> 완전 신뢰 수준으로 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-189">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span>
          </span>
          <span data-ttu-id="47add-190">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-190">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CategoryResourceFile">
      <MemberSignature Language="C#" Value="public string CategoryResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47add-191">소스에 대한 범주 문자열이 들어 있는 리소스 파일의 경로를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-191">Gets or sets the path of the resource file that contains category strings for the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47add-192">범주 리소스 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-192">The path of the category resource file.</span>
          </span>
          <span data-ttu-id="47add-193">기본값은 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-193">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47add-194">사용 하 여는 <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> 및 <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> 지역화 된 범주 문자열 속성을 사용 하 여 이벤트를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-194">Use the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> and <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> properties to write events with localized category strings.</span></span> <span data-ttu-id="47add-195">이벤트 뷰어에서 이벤트를 쓸 때 범주를 제공 하는 경우 이벤트 항목에 대 한 범주를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-195">The Event Viewer displays the category for an event entry if you supply a category when you write the event.</span></span> <span data-ttu-id="47add-196">이벤트 로그 범주는 필터 이벤트 나 이벤트에 추가 정보를 제공 하는 응용 프로그램 정의 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-196">Event log categories are application-defined strings that help filter events, or provide further information on the event.</span></span> <span data-ttu-id="47add-197">예를 들어 응용 프로그램이 서로 다른 구성 요소 또는 여러 작업에 대 한 별도 범주를 정의할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-197">For example, your application can define separate categories for different components or different operations.</span></span>  
  
 <span data-ttu-id="47add-198">이벤트 범주는 선택 사항입니다. 응용 프로그램 범주를 사용 하지 않는 경우 설정 하지 마십시오는 <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> 및 <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-198">Event categories are optional; if your application does not use categories, do not set the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> and <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> properties.</span></span>  
  
 <span data-ttu-id="47add-199">에 있는 Platform SDK 설명서의 "메시지 컴파일러" 항목을 참조 하는 이벤트 메시지를 정의 하 고 이벤트 리소스 파일을 작성 하는 방법에 대 한 세부 정보에 대 한 [ http://msdn.microsoft.com ](http://msdn.microsoft.com/)합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-199">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47add-200">다음 코드 예제에서는 이벤트 소스 이름을 지정 여부를 확인 `SampleApplicationSource` 로컬 컴퓨터에 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-200">The following code example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="47add-201">이벤트 소스가 없는 경우이 예제에서는 소스에 대 한 메시지 리소스 파일을 설정 하 고 새 이벤트 소스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="47add-201">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="47add-202">코드 예제에서는 리소스 식별자 값을 사용 하 여 이벤트 로그에 대 한 지역화 된 표시 이름을 설정 하는 마지막으로, `DisplayNameMsgId` 및 리소스 파일 경로에 `messageFile`합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-202">Finally, the code example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="47add-203">코드 예제에서는 리소스 라이브러리 EventLogMsgs.dll에 기본 제공 되는 다음 메시지 텍스트 파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-203">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="47add-204">메시지 텍스트 파일은 소스 메시지 리소스 파일이 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="47add-204">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="47add-205">메시지 텍스트 파일의 리소스 식별자와 범주, 이벤트 메시지 및 매개 변수 삽입 문자열에 대 한 텍스트를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-205">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="47add-206">멤버를 호출 하는 것에 대 한 <see cref="T:System.Diagnostics.EventSourceCreationData" /> 완전 신뢰 수준으로 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-206">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span>
          </span>
          <span data-ttu-id="47add-207">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-207">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryCount" />
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="LogName">
      <MemberSignature Language="C#" Value="public string LogName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.LogName" />
      <MemberSignature Language="VB.NET" Value="Public Property LogName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47add-208">소스가 엔트리를 쓰는 이벤트 로그 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-208">Gets or sets the name of the event log to which the source writes entries.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47add-209">이벤트 로그 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-209">The name of the event log.</span>
          </span>
          <span data-ttu-id="47add-210">이 이름에는 응용 프로그램, 시스템 또는 사용자 지정 로그 이름을 사용할 수 있습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-210">This can be Application, System, or a custom log name.</span>
          </span>
          <span data-ttu-id="47add-211">기본값은 "Application"입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-211">The default value is "Application."</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47add-212">사용 된 <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> 응용 프로그램을 새 원본을 사용 하 여 항목을 기록 하는 이벤트 로그를 식별 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-212">Use the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property to identify the event log that your application writes entries to using the new source.</span></span> <span data-ttu-id="47add-213">이벤트 로그에는 새 로그 또는 기존 로그 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-213">The event log can be a new log or an existing log.</span></span> <span data-ttu-id="47add-214">응용 프로그램 및 서비스 응용 프로그램 로그 나 사용자 지정 로그에 써야 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-214">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="47add-215">장치 드라이버 시스템 로그에 써야 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-215">Device drivers should write to the System log.</span></span> <span data-ttu-id="47add-216">명시적으로 설정 하지 않은 경우는 <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> 속성, 이벤트 로그의 응용 프로그램 로그에 기본값입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-216">If you do not explicitly set the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property, the event log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47add-217">보안 로그에는 읽기 전용입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-217">The Security log is read-only.</span></span>  
  
 <span data-ttu-id="47add-218">새 원본에 대 한 기존 로그를 대상으로 설정 된 <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> 속성을 기존 이벤트 로그 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-218">To target an existing log for the new source, set the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property to the existing event log name.</span></span> <span data-ttu-id="47add-219">원본에 대 한 새 이벤트 로그를 만들려면 설정 해야 합니다는 <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-219">To create a new event log for the source, you must set the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property.</span></span> <span data-ttu-id="47add-220">이벤트 로그 이름은 인쇄할 수 있는 문자로 구성되어야 하며 '\*', '?' 또는 '\\'를 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-220">Event log names must consist of printable characters, and cannot include the characters '\*', '?', or '\\'.</span></span> <span data-ttu-id="47add-221">이벤트 로그 이름의 처음 8 자에서 지정된 된 컴퓨터에서 이벤트 로그의 기존 이름의 처음 8 자 달라 야 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-221">The first 8 characters of the event log name must be different from the first 8 characters of existing names of event logs on the specified computer.</span></span>  
  
 <span data-ttu-id="47add-222">운영 체제 이벤트 로그를 파일로 저장합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-222">The operating system stores event logs as files.</span></span> <span data-ttu-id="47add-223">사용 하는 경우 <xref:System.Diagnostics.EventLogInstaller> 또는 <xref:System.Diagnostics.EventLog.CreateEventSource%2A> 새 이벤트 로그를 연결된 된 파일을 만드는 메서드를 지정된 된 컴퓨터의 %SystemRoot%\System32\Config 디렉터리에 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="47add-223">When you use <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="47add-224">처음 8 자를 추가 하 여 파일 이름이 설정 되는 <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> ".evt" 파일 이름 확장명을 가진 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-224">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property with the ".evt" file name extension.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47add-225">다음 코드 예제에서는 명령줄 인수에서 이벤트 소스에 대 한 구성 속성을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-225">The following code example sets the configuration properties for an event source from command-line arguments.</span></span> <span data-ttu-id="47add-226">입력된 인수는 이벤트 소스 이름, 이벤트 로그 이름, 컴퓨터 이름 및 이벤트 메시지 리소스 파일을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-226">The input arguments specify the event source name, event log name, computer name, and event message resource file.</span></span> <span data-ttu-id="47add-227">이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.EventSourceCreationData> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-227">This example is part of a larger example provided for the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 [!code-cpp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CPP/source.cpp#2)]
 [!code-csharp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CS/source.cs#2)]
 [!code-vb[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="47add-228">멤버를 호출 하는 것에 대 한 <see cref="T:System.Diagnostics.EventSourceCreationData" /> 완전 신뢰 수준으로 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-228">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span>
          </span>
          <span data-ttu-id="47add-229">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-229">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.Log" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47add-230">이벤트 소스를 등록할 컴퓨터 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-230">Gets or sets the name of the computer on which to register the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47add-231">이벤트 소스를 등록할 시스템 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-231">The name of the system on which to register the event source.</span>
          </span>
          <span data-ttu-id="47add-232">기본값은 로컬 컴퓨터(".")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-232">The default is the local computer (".").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47add-233"><xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> 값에는 빈 문자열일 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-233">The <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> value cannot be an empty string.</span></span> <span data-ttu-id="47add-234">로컬 컴퓨터에 기본적으로 컴퓨터 이름을 명시적으로 설정 하지 않으면 (".").</span><span class="sxs-lookup"><span data-stu-id="47add-234">If the machine name is not explicitly set, it defaults to the local computer (".").</span></span>  
  
 <span data-ttu-id="47add-235">원격 컴퓨터에서 소스를 등록할 때 충분 한 권한이 있는 레지스트리 값을 쓸 해당 컴퓨터에서 관리자 권한이 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-235">When registering a source on a remote computer, you must have administrative rights on that computer to write the registry values with sufficient permissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47add-236">다음 코드 예제에서는 명령줄 인수에서 이벤트 소스에 대 한 구성 속성을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-236">The following code example sets the configuration properties for an event source from command-line arguments.</span></span> <span data-ttu-id="47add-237">입력된 인수는 이벤트 소스 이름, 이벤트 로그 이름, 컴퓨터 이름 및 이벤트 메시지 리소스 파일을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-237">The input arguments specify the event source name, event log name, computer name, and event message resource file.</span></span> <span data-ttu-id="47add-238">이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.EventSourceCreationData> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-238">This example is part of a larger example provided for the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 [!code-cpp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CPP/source.cpp#2)]
 [!code-csharp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CS/source.cs#2)]
 [!code-vb[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="47add-239">컴퓨터 이름이 잘못된 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-239">The computer name is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="47add-240">멤버를 호출 하는 것에 대 한 <see cref="T:System.Diagnostics.EventSourceCreationData" /> 완전 신뢰 수준으로 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-240">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span>
          </span>
          <span data-ttu-id="47add-241">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-241">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.Source" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MessageResourceFile">
      <MemberSignature Language="C#" Value="public string MessageResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47add-242">소스에 대한 메시지 서식 문자열이 들어 있는 메시지 리소스 파일의 경로를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-242">Gets or sets the path of the message resource file that contains message formatting strings for the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47add-243">메시지 리소스 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-243">The path of the message resource file.</span>
          </span>
          <span data-ttu-id="47add-244">기본값은 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-244">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47add-245">사용 하 여 <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> 지역화 된 이벤트 메시지를 쓰거나 이벤트 로그 소스를 구성 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-245">Use the <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> property to configure an event log source to write localized event messages.</span></span> <span data-ttu-id="47add-246">이벤트 메시지는 사용자에 게 이벤트를 설명 하는 응용 프로그램 정의 문자열입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-246">Event messages are application-defined strings that describe the event to the user.</span></span>  
  
 <span data-ttu-id="47add-247">응용 프로그램 리소스 식별자를 사용 하 여 이벤트 로그 항목을 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-247">Your application can write event log entries using resource identifiers.</span></span> <span data-ttu-id="47add-248">리소스 식별자 인덱스에 있는 메시지는 <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-248">A resource identifier indexes a message located in the <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>.</span></span> <span data-ttu-id="47add-249">이벤트 뷰어에서 리소스 식별자를 사용 하 여을 찾아 현재 언어 설정에 따라 지역화 된 메시지 리소스 파일에서 해당 문자열을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-249">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized message resource file based on current language settings.</span></span>  
  
 <span data-ttu-id="47add-250">지역화 된 엔트리 또는 직접 문자열을 작성 하기 위한 이벤트 소스를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-250">The event source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="47add-251">사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드가 메시지 리소스 파일을 사용 하 여 구성 하는 원본에 대 한 지역화 된 엔트리를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-251">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write localized entries for a source configured with a message resource file.</span></span>  
  
 <span data-ttu-id="47add-252">응용 프로그램이 문자열을 쓰는 이벤트 메시지를 직접 지역화 된 리소스 파일의 리소스 식별자를 사용 하는 대신 설정 하지 않으면는 <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-252">If your application writes event message strings directly, rather than using a resource identifier in a localized resource file, do not set the <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> property.</span></span>  
  
 <span data-ttu-id="47add-253">에 있는 Platform SDK 설명서의 "메시지 컴파일러" 항목을 참조 하는 이벤트 메시지를 정의 하 고 이벤트 리소스 파일을 작성 하는 방법에 대 한 세부 정보에 대 한 [ http://msdn.microsoft.com ](http://msdn.microsoft.com/)합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-253">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47add-254">다음 코드 예제에서는 이벤트 소스 이름을 지정 여부를 확인 `SampleApplicationSource` 로컬 컴퓨터에 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-254">The following code example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="47add-255">이벤트 소스가 없는 경우이 예제에서는 소스에 대 한 메시지 리소스 파일을 설정 하 고 새 이벤트 소스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="47add-255">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="47add-256">코드 예제에서는 리소스 식별자 값을 사용 하 여 이벤트 로그에 대 한 지역화 된 표시 이름을 설정 하는 마지막으로, `DisplayNameMsgId` 및 리소스 파일 경로에 `messageFile`합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-256">Finally, the code example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="47add-257">코드 예제에서는 리소스 라이브러리 EventLogMsgs.dll에 기본 제공 되는 다음 메시지 텍스트 파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-257">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="47add-258">메시지 텍스트 파일은 소스 메시지 리소스 파일이 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="47add-258">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="47add-259">메시지 텍스트 파일의 리소스 식별자와 범주, 이벤트 메시지 및 매개 변수 삽입 문자열에 대 한 텍스트를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-259">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="47add-260">멤버를 호출 하는 것에 대 한 <see cref="T:System.Diagnostics.EventSourceCreationData" /> 완전 신뢰 수준으로 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-260">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span>
          </span>
          <span data-ttu-id="47add-261">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-261">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="ParameterResourceFile">
      <MemberSignature Language="C#" Value="public string ParameterResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47add-262">소스에 대한 메시지 매개 변수 문자열이 들어 있는 리소스 파일의 경로를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-262">Gets or sets the path of the resource file that contains message parameter strings for the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47add-263">매개 변수 리소스 파일의 경로입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-263">The path of the parameter resource file.</span>
          </span>
          <span data-ttu-id="47add-264">기본값은 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-264">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47add-265">사용 하 여는 <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> 지역화 된 이벤트 메시지를 작성 하는 이벤트 로그 소스를 구성 하는 속성 매개 변수 문자열을 삽입 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-265">Use the <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> property to configure an event log source to write localized event messages with inserted parameter strings.</span></span> <span data-ttu-id="47add-266">에 지정 된 각 지역화 된 이벤트 메시지는 <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> 속성에는 입력 문자열에 대 한 자리 표시 자가 포함 될 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-266">Each localized event message specified in the <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> property can contain placeholders for insertion strings.</span></span> <span data-ttu-id="47add-267">이러한 자리 표시자 위치 이벤트 메시지 내에서 언어에 관계 없이 문자열에 대 한 리소스 식별자를 지정 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="47add-267">These placeholders are used to specify the position and resource identifier for a language-independent string within the event message.</span></span> <span data-ttu-id="47add-268">해당 문자열을 사용 하 여 자리 표시자를 채우고 이벤트 뷰어는 <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> 지역화 된 이벤트 항목에 대 한 이벤트 로그 메시지의 서식을 지정 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-268">The Event Viewer fills in the placeholders using the corresponding strings from the <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> and formats the event log message for the localized event entry.</span></span>  
  
 <span data-ttu-id="47add-269">예를 들어 메시지 텍스트 파일의 다음 섹션에는 문자열을 매개 변수 자리 표시자로 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-269">For example, the following section of a message text file defines a string with a parameter placeholder:</span></span>  
  
```  
  
MessageId = 1501  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_STARTING  
Language=English  
Component %%6050 is starting.  
.  
```  
  
 <span data-ttu-id="47add-270">아래와 같이 삽입 문자열 매개 변수 리소스 파일 내에서 자리 표시자에 해당 하는 리소스 식별자로 정의 해야 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-270">Within the parameter resource file, the insertion string must be defined with the resource identifier that corresponds to the placeholder, as shown below:</span></span>  
  
```  
MessageId = 6050  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_NAME_MSGID  
Language=English  
TRIGGER.EXE  
.  
```  
  
 <span data-ttu-id="47add-271">지역화 된 엔트리 또는 직접 문자열을 작성 하기 위한 이벤트 소스를 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-271">The event source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="47add-272">사용 하 여는 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 메서드가 메시지 리소스 파일을 사용 하 여 구성 하는 원본에 대 한 지역화 된 엔트리를 작성할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-272">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write localized entries for a source configured with a message resource file.</span></span>  
  
 <span data-ttu-id="47add-273">응용 프로그램 이벤트 로그에 직접 이벤트 메시지 문자열을 쓰는 경우 또는 경우 프로그램 <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> 속성에는 매개 변수 삽입 자리 표시자를 사용 하 여 메시지, 설정 하지 않으면는 <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-273">If your application writes event message strings directly to the event log, or if your <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> property does not contain messages with parameter insertion placeholders, do not set the <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> property.</span></span>  
  
 <span data-ttu-id="47add-274">에 있는 Platform SDK 설명서의 "메시지 컴파일러" 항목을 참조 하는 이벤트 메시지를 정의 하 고 이벤트 리소스 파일을 작성 하는 방법에 대 한 세부 정보에 대 한 [ http://msdn.microsoft.com ](http://msdn.microsoft.com/)합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-274">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47add-275">다음 코드 예제에서는 이벤트 소스 이름을 지정 여부를 확인 `SampleApplicationSource` 로컬 컴퓨터에 등록 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-275">The following code example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="47add-276">이벤트 소스가 없는 경우이 예제에서는 소스에 대 한 메시지 리소스 파일을 설정 하 고 새 이벤트 소스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="47add-276">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="47add-277">코드 예제에서는 리소스 식별자 값을 사용 하 여 이벤트 로그에 대 한 지역화 된 표시 이름을 설정 하는 마지막으로, `DisplayNameMsgId` 및 리소스 파일 경로에 `messageFile`합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-277">Finally, the code example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="47add-278">코드 예제에서는 리소스 라이브러리 EventLogMsgs.dll에 기본 제공 되는 다음 메시지 텍스트 파일을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-278">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="47add-279">메시지 텍스트 파일은 소스 메시지 리소스 파일이 만들어집니다.</span><span class="sxs-lookup"><span data-stu-id="47add-279">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="47add-280">메시지 텍스트 파일의 리소스 식별자와 범주, 이벤트 메시지 및 매개 변수 삽입 문자열에 대 한 텍스트를 정의합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-280">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span> <span data-ttu-id="47add-281">특히, 1004 리소스 식별자에 대해 정의 된 메시지는 리소스 식별자 5002에 대해 정의 된 매개 변수 문자열에 대 한 자리 표시자를 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-281">Specifically, the message defined for resource identifier 1004 uses a placeholder for a parameter string defined for resource identifier 5002.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="47add-282">멤버를 호출 하는 것에 대 한 <see cref="T:System.Diagnostics.EventSourceCreationData" /> 완전 신뢰 수준으로 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-282">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span>
          </span>
          <span data-ttu-id="47add-283">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-283">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="47add-284">이벤트 로그에 이벤트 소스로 등록할 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-284">Gets or sets the name to register with the event log as an event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="47add-285">엔트리 소스로 이벤트 로그에 등록할 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-285">The name to register with the event log as a source of entries.</span>
          </span>
          <span data-ttu-id="47add-286">기본값은 빈 문자열("")입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-286">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47add-287">응용 프로그램의 이름 또는 대형 응용 프로그램 내에서 구성 요소의 이름을 원본 이름은 종종입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-287">The source name is often the name of the application, or the name of a component within a large application.</span></span> <span data-ttu-id="47add-288"><xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType> 메서드는 <xref:System.Diagnostics.EventSourceCreationData.Source%2A>, <xref:System.Diagnostics.EventSourceCreationData.LogName%2A>, 및 <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> 속성을 새 소스 및 관련된 이벤트 로그에 대 한 대상 컴퓨터에서 레지스트리 값을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="47add-288">The <xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType> method uses the <xref:System.Diagnostics.EventSourceCreationData.Source%2A>, <xref:System.Diagnostics.EventSourceCreationData.LogName%2A>, and <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> properties to create registry values on the target computer for the new source and its associated event log.</span></span> <span data-ttu-id="47add-289">새 소스 이름이 기존 원본 이름 또는 대상 컴퓨터에서 기존 이벤트 로그 이름과 일치할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-289">A new source name cannot match an existing source name or an existing event log name on the target computer.</span></span>  
  
 <span data-ttu-id="47add-290">원본에 대 한 레지스트리 값을 생성 한 후 응용 프로그램 소스를 사용 하 여 구성된 된 이벤트 로그에 엔트리를 쓸 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-290">After the registry values for the source are created, your application can use the source to write entries to the configured event log.</span></span>  
  
 <span data-ttu-id="47add-291">각 소스; 한 번에 하나의 이벤트 로그에 쓸 수만 그러나 응용 프로그램 여러 이벤트 로그에 쓸 여러 소스를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-291">Each source can only write to one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="47add-292">예를 들어 응용 프로그램에 다른 이벤트 로그 또는 서로 다른 리소스 파일에 대해 구성 된 여러 소스가 필요할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="47add-292">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="47add-293">다음 코드 예제에서는 명령줄 인수에서 이벤트 소스에 대 한 구성 속성을 설정합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-293">The following code example sets the configuration properties for an event source from command-line arguments.</span></span> <span data-ttu-id="47add-294">입력된 인수는 이벤트 소스 이름, 이벤트 로그 이름, 컴퓨터 이름 및 이벤트 메시지 리소스 파일을 지정합니다.</span><span class="sxs-lookup"><span data-stu-id="47add-294">The input arguments specify the event source name, event log name, computer name, and event message resource file.</span></span> <span data-ttu-id="47add-295">이 예제는에 대해 제공 된 큰 예제의 일부는 <xref:System.Diagnostics.EventSourceCreationData> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="47add-295">This example is part of a larger example provided for the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 [!code-cpp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CPP/source.cpp#2)]
 [!code-csharp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CS/source.cs#2)]
 [!code-vb[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="47add-296">멤버를 호출 하는 것에 대 한 <see cref="T:System.Diagnostics.EventSourceCreationData" /> 완전 신뢰 수준으로 됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-296">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span>
          </span>
          <span data-ttu-id="47add-297">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="47add-297">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.Source" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>