<Type Name="Trace" FullName="System.Diagnostics.Trace">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e42fd94386357117b180964fe8e0ea782e8fcab0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36674306" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Trace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Trace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Trace" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Trace" />
  <TypeSignature Language="C++ CLI" Value="public ref class Trace sealed" />
  <TypeSignature Language="F#" Value="type Trace = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5059e-101">코드의 실행을 추적하는 데 도움이 되는 메서드와 속성 집합을 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5059e-101">Provides a set of methods and properties that help you trace the execution of your code.</span>
      </span>
      <span data-ttu-id="5059e-102">이 클래스는 상속될 수 없습니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5059e-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-103">메서드와 속성을 사용할 수 있습니다는 <xref:System.Diagnostics.Trace> 계측 릴리스 하는 클래스를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-103">You can use the properties and methods in the <xref:System.Diagnostics.Trace> class to instrument release builds.</span></span> <span data-ttu-id="5059e-104">계측을 사용 하면 실제 설정에서 실행 중인 응용 프로그램의 상태를 모니터링할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-104">Instrumentation allows you to monitor the health of your application running in real-life settings.</span></span> <span data-ttu-id="5059e-105">추적 기능을 이용 문제를 격리 하 고 실행 중인 시스템을 방해 하지 않고 수정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-105">Tracing helps you isolate problems and fix them without disturbing a running system.</span></span>  
  
 <span data-ttu-id="5059e-106">이 클래스는 표시 하는 메서드를 제공는 <xref:System.Diagnostics.Trace.Assert%2A> 대화 상자를 생성 하 고는 항상는 어설션을 내보내는 <xref:System.Diagnostics.Trace.Fail%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-106">This class provides methods to display an <xref:System.Diagnostics.Trace.Assert%2A> dialog box, and to emit an assertion that will always <xref:System.Diagnostics.Trace.Fail%2A>.</span></span> <span data-ttu-id="5059e-107">이 클래스는 다음과 같은 형태로 쓰기 메서드를 제공: <xref:System.Diagnostics.Trace.Write%2A>, <xref:System.Diagnostics.Trace.WriteLine%2A>, <xref:System.Diagnostics.Trace.WriteIf%2A>, 및 <xref:System.Diagnostics.Trace.WriteLineIf%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-107">This class provides write methods in the following variations: <xref:System.Diagnostics.Trace.Write%2A>, <xref:System.Diagnostics.Trace.WriteLine%2A>, <xref:System.Diagnostics.Trace.WriteIf%2A>, and <xref:System.Diagnostics.Trace.WriteLineIf%2A>.</span></span>  
  
 <span data-ttu-id="5059e-108"><xref:System.Diagnostics.BooleanSwitch> 및 <xref:System.Diagnostics.TraceSwitch> 클래스 동적으로 추적 출력을 제어 하는 수단을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-108">The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output.</span></span> <span data-ttu-id="5059e-109">응용 프로그램을 다시 컴파일하지 않고도 이러한 스위치의 값을 수정할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-109">You can modify the values of these switches without recompiling your application.</span></span> <span data-ttu-id="5059e-110">스위치를 설정 하는 구성 파일을 사용 하는 방법은 참조 하십시오.는 <xref:System.Diagnostics.Switch> 클래스 및 [하는 방법: 만들기, 초기화 및 추적 스위치 구성](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md) 항목입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-110">For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [How to: Create, Initialize and Configure Trace Switches](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md) topic.</span></span>  
  
 <span data-ttu-id="5059e-111">추적 출력 대상을 추가 하 여 사용자 지정할 수 있습니다 <xref:System.Diagnostics.TraceListener> 인스턴스 또는 인스턴스를 제거 하는 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-111">You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="5059e-112"><xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션 모두에 의해 공유 되는 <xref:System.Diagnostics.Debug> 및 <xref:System.Diagnostics.Trace> 클래스; 둘 다에 수신기를 추가 하는 클래스를 추적 수신기를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-112">The <xref:System.Diagnostics.Trace.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span> <span data-ttu-id="5059e-113">사용 하 여 추적 출력을 내보냅니다 하는 기본적으로는 <xref:System.Diagnostics.DefaultTraceListener> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-113">By default, trace output is emitted using the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5059e-114">추적 수신기를 추가 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션 추적 수신기에서 사용 되는 리소스를 사용할 수 없는 경우 추적을 동안 throw 된 예외를 일으킬 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-114">Adding a trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</span></span> <span data-ttu-id="5059e-115">조건 및 throw 된 예외 추적 수신기에 좌우 되며이 항목의 열거할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-115">The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</span></span> <span data-ttu-id="5059e-116">전화를 걸 수 유용할 수 있습니다는 <xref:System.Diagnostics.Trace> 메서드 `try` / `catch` 블록 감지 하 고 추적 수신기에서 발생 한 예외를 처리 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-116">It may be useful to place calls to the <xref:System.Diagnostics.Trace> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5059e-117">부분적으로 신뢰할 수 있는 코드에 추적 수신기를 추가 하는 경우 얻을 수 있습니다는 <xref:System.Security.SecurityException> 예외를 추적 수신기를 추가 하기 때문에 필요 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> 권한.</span><span class="sxs-lookup"><span data-stu-id="5059e-117">If you add trace listeners to partially trusted code, you will get a <xref:System.Security.SecurityException> exception, because adding trace listeners requires <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> permission.</span></span> <span data-ttu-id="5059e-118">Visual Studio에서 샌드박스에서 실행 되 고 부분적으로 신뢰할 수 있는 코드를 추적 하려면 추적 수신기를 추가 하지 마십시오.</span><span class="sxs-lookup"><span data-stu-id="5059e-118">To trace partially trusted code that is running in a sandbox in Visual Studio, do not add trace listeners.</span></span> <span data-ttu-id="5059e-119">대신 볼는 <xref:System.Diagnostics.Trace> 및 <xref:System.Diagnostics.Debug> 의 메시지는 **출력** 창.</span><span class="sxs-lookup"><span data-stu-id="5059e-119">Instead, view the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> messages in the **Output** window.</span></span>  
  
 <span data-ttu-id="5059e-120"><xref:System.Diagnostics.Trace> 클래스의 수준을 가져오거나 설정 하는 속성을 제공 <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, 것인지 <xref:System.Diagnostics.Trace.AutoFlush%2A> 쓴 후 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-120">The <xref:System.Diagnostics.Trace> class provides properties to get or set the level of <xref:System.Diagnostics.Trace.Indent%2A>, the <xref:System.Diagnostics.Trace.IndentSize%2A>, and whether to <xref:System.Diagnostics.Trace.AutoFlush%2A> after each write.</span></span>  
  
 <span data-ttu-id="5059e-121">설정 하는 <xref:System.Diagnostics.Trace.AutoFlush%2A> 및 <xref:System.Diagnostics.Trace.IndentSize%2A> 에 대 한 <xref:System.Diagnostics.Trace>, 응용 프로그램의 이름에 해당 하는 구성 파일을 편집할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-121">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="5059e-122">다음 예제와 같은 구성 파일의 형식은 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-122">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="5059e-123"><xref:System.Diagnostics.ConditionalAttribute> 의 메서드에 특성이 적용 되 <xref:System.Diagnostics.Trace>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-123">The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Trace>.</span></span> <span data-ttu-id="5059e-124">지 원하는 컴파일러 <xref:System.Diagnostics.ConditionalAttribute> "TRACE"으로 조건부 컴파일 기호가 정의 되어 있지 않으면 이러한 메서드 호출을 무시 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-124">Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless "TRACE" is defined as a conditional compilation symbol.</span></span> <span data-ttu-id="5059e-125">확인 하려면 컴파일러의 설명서를 참조 하는지 여부를 <xref:System.Diagnostics.ConditionalAttribute> 사용할 수 및 조건부 컴파일 기호를 정의 하기 위한 구문을 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-125">Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5059e-126">기본적으로 Visual Studio 프로젝트의 디버그 빌드에 대해 "디버그" 조건부 컴파일 기호가 정의 되어 하 고 모두 디버그 및 릴리스 빌드에 대해 "TRACE" 기호가 정의 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-126">In Visual Studio projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</span></span> <span data-ttu-id="5059e-127">이 동작을 사용 하지 않도록 설정 하는 방법에 대 한 정보를 Visual Studio 설명서를 참조 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-127">For information about how to disable this behavior, see the Visual Studio documentation.</span></span>  
  
 <span data-ttu-id="5059e-128">C#에서 "TRACE" 조건부 컴파일 기호를 정의 하려면 추가 `/d:TRACE` 명령줄을 사용 하 여 코드를 컴파일할 때 컴파일러 명령줄 옵션 또는 추가 `#define TRACE` 파일의 맨 위로 이동 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-128">To define the "TRACE" conditional compilation symbol in C#, add the `/d:TRACE` option to the compiler command line when you compile your code using a command line, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="5059e-129">Visual Basic의 추가 `/d:TRACE=True` 하려면 컴파일러 명령줄 옵션을 선택 하거나 추가 `#Const TRACE=True` 파일에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-129">In Visual Basic, add the `/d:TRACE=True` option to the compiler command line or add `#Const TRACE=True` to the file.</span></span>  
  
 <span data-ttu-id="5059e-130"><xref:System.Diagnostics.ConditionalAttribute> c + + 컴파일러에서 지원 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-130"><xref:System.Diagnostics.ConditionalAttribute> is not supported by the C++ compiler.</span></span> <span data-ttu-id="5059e-131">동일한 기능을 제공 하려면의 메서드를 호출 묶어야 <xref:System.Diagnostics.Trace> 에 `#if defined(TRACE) ... #endif` 을 차단 하 고 추가 `/DTRACE` 하려면 컴파일러 명령줄 옵션을 선택 하거나 추가 `#define TRACE` 파일에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-131">To provide equivalent functionality, you must enclose calls to the methods of <xref:System.Diagnostics.Trace> in an `#if defined(TRACE) ... #endif` block, and add the `/DTRACE` option to the compiler command line or add `#define TRACE` to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-132">다음 예제에서는 <xref:System.Diagnostics.Trace> 시작과 프로그램 실행의 끝을 나타냅니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-132">The following example uses <xref:System.Diagnostics.Trace> to indicate the beginning and the end of a program's execution.</span></span> <span data-ttu-id="5059e-133">또한이 예제에서는 <xref:System.Diagnostics.Trace.Indent%2A?displayProperty=nameWithType> 및 <xref:System.Diagnostics.Trace.Unindent%2A?displayProperty=nameWithType> 추적 출력을 구별 하는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-133">The example also uses the <xref:System.Diagnostics.Trace.Indent%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace.Unindent%2A?displayProperty=nameWithType> methods to distinguish the tracing output.</span></span> <span data-ttu-id="5059e-134">사용의 자세한 예제에 대 한 <xref:System.Diagnostics.Trace>, 참조 [하는 방법: 응용 프로그램 코드에 Trace 문 추가](~/docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md)합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-134">For a more complete example of the use of <xref:System.Diagnostics.Trace>, see [How to: Add Trace Statements to Application Code](~/docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md).</span></span>  
  
 [!code-cpp[Classic Trace Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace Example/CS/source.cs#1)]
 [!code-vb[Classic Trace Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="5059e-135">에 비관리 코드와 작동 합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5059e-135">for operating with unmanaged code.</span>
      </span>
      <span data-ttu-id="5059e-136">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5059e-136">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
      </span>
      <span data-ttu-id="5059e-137">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="5059e-137">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      </span>
    </permission>
    <threadsafe>
      <span data-ttu-id="5059e-138">이 형식은 스레드로부터 안전합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5059e-138">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TraceListenerCollection" />
    <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Assert">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5059e-139">조건을 확인합니다. 조건이 <see langword="false" />이면 메시지를 출력하고 호출 스택을 보여주는 메시지 상자를 표시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-139">Checks for a condition; if the condition is <see langword="false" />, outputs messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition);" />
      <MemberSignature Language="F#" Value="static member Assert : bool -&gt; unit" Usage="System.Diagnostics.Trace.Assert condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="5059e-140">평가할 조건식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-140">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="5059e-141">조건이 <see langword="true" />이면 실패 메시지가 전송되지 않고 메시지 상자가 표시되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-141">If the condition is <see langword="true" />, a failure message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-142">조건을 확인합니다. 조건이 <see langword="false" />이면 호출 스택을 보여주는 메시지 상자를 표시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-142">Checks for a condition; if the condition is <see langword="false" />, displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-143">사용 하 여는 <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> 릴리스에서 어설션을 수행 하려는 경우 메서드를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-143">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="5059e-144"><xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> 디버그 빌드에만 사용할 수 있는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-144">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="5059e-145">자세한 내용은 참조 [관리 코드에 어설션](/visualstudio/debugger/assertions-in-managed-code)합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-145">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="5059e-146">일반적으로 <xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> 메서드는 프로그램을 개발 하는 동안 논리 오류를 식별 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-146">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="5059e-147"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> 조건을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-147"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> evaluates the condition.</span></span> <span data-ttu-id="5059e-148">결과가 `false`, 오류 메시지를 보내는 것은 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-148">If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="5059e-149">추가 하 여이 동작을 사용자 지정할 수 있습니다는 <xref:System.Diagnostics.TraceListener> to, 제거 또는 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-149">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="5059e-150">사용자 인터페이스 모드로 실행 되는 응용 프로그램 파일 및 줄 번호가 있는 호출 스택을 표시 하는 메시지 상자가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-150">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="5059e-151">메시지 상자에 세 개의 단추가: **중단**, **을 다시 시도**, 및 **무시**합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-151">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="5059e-152">클릭 하 고 **중단** 단추는 응용 프로그램을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-152">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="5059e-153">클릭 하면 **을 다시 시도** 응용 프로그램에서 디버거를 실행 중인 되지 않았으면 디버거가 열려는 있는 경우 디버거에서 코드를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-153">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="5059e-154">클릭 하면 **무시** 코드의 다음 명령으로 계속 진행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-154">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5059e-155">메시지 상자의 표시의 존재 여부에 따라 달라 집니다는 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-155">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="5059e-156">경우는 <xref:System.Diagnostics.DefaultTraceListener> 에 속하지 않는 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션, 메시지 상자가 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-156">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="5059e-157"><xref:System.Diagnostics.DefaultTraceListener> 으로 제거할 수 있습니다는 [ &lt;지우기&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;제거&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), 또는 호출 하 여는 <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> 는 메서드<xref:System.Diagnostics.Trace.Listeners%2A> 속성 (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="5059e-157">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="5059e-158">동작을 변경할 수는 <xref:System.Diagnostics.DefaultTraceListener> 응용 프로그램의 이름에 해당 하는 구성 파일에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-158">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="5059e-159">이 파일에서 사용 하도록 설정 하 고 어설션 메시지 상자를 사용 하지 않도록 설정 하거나 설정할 수 있습니다는 <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-159">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="5059e-160">구성 파일 형식은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-160">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="5059e-161">다음 예제에서는 배열에 대 한 인덱스를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-161">The following example creates an index for an array.</span></span> <span data-ttu-id="5059e-162">그런 다음 인덱스의 값을 설정 하는 몇 가지 작업이 수행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-162">Then some action is performed that sets the value of the index.</span></span> <span data-ttu-id="5059e-163">다음 코드에서 호출 <xref:System.Diagnostics.Trace.Assert%2A> 인덱스를 확인 하려면 값이 유효 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-163">Next the code calls <xref:System.Diagnostics.Trace.Assert%2A> to verify the index value is valid.</span></span> <span data-ttu-id="5059e-164">를 사용할 수 없는 경우는 <xref:System.Diagnostics.Trace.Assert%2A> 호출 스택을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-164">If it is not valid, the <xref:System.Diagnostics.Trace.Assert%2A> outputs the call stack.</span></span>  
  
 [!code-cpp[Classic Trace.Assert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string -&gt; unit" Usage="System.Diagnostics.Trace.Assert (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="5059e-165">평가할 조건식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-165">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="5059e-166">조건이 <see langword="true" />이면 지정된 메시지가 전송되지 않고 메시지 상자가 표시되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-166">If the condition is <see langword="true" />, the specified message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="5059e-167">
            <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션으로 보낼 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-167">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-168">조건을 확인합니다. 조건이 <see langword="false" />이면 지정된 메시지를 출력하고 호출 스택을 보여주는 메시지 상자를 표시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-168">Checks for a condition; if the condition is <see langword="false" />, outputs a specified message and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-169">사용 하 여는 <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> 릴리스에서 어설션을 수행 하려는 경우 메서드를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-169">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="5059e-170"><xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> 디버그 빌드에만 사용할 수 있는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-170">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="5059e-171">자세한 내용은 참조 [관리 코드에 어설션](/visualstudio/debugger/assertions-in-managed-code)합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-171">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="5059e-172">일반적으로 <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> 메서드는 프로그램을 개발 하는 동안 논리 오류를 식별 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-172">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="5059e-173"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> 조건을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-173"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> evaluates the condition.</span></span> <span data-ttu-id="5059e-174">결과가 `false`, 지정된 된 진단 메시지를 보내는 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-174">If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="5059e-175">추가 하 여이 동작을 사용자 지정할 수 있습니다는 <xref:System.Diagnostics.TraceListener> to, 제거 또는 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-175">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="5059e-176">사용자 인터페이스 모드로 실행 되는 응용 프로그램 파일 및 줄 번호가 있는 호출 스택을 표시 하는 메시지 상자가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-176">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="5059e-177">메시지 상자에 세 개의 단추가: **중단**, **을 다시 시도**, 및 **무시**합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-177">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="5059e-178">클릭 하 고 **중단** 단추는 응용 프로그램을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-178">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="5059e-179">클릭 하면 **을 다시 시도** 응용 프로그램에서 디버거를 실행 중인 되지 않았으면 디버거가 열려는 있는 경우 디버거에서 코드를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-179">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="5059e-180">클릭 하면 **무시** 코드의 다음 명령으로 계속 진행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-180">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5059e-181">메시지 상자의 표시의 존재 여부에 따라 달라 집니다는 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-181">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="5059e-182">경우는 <xref:System.Diagnostics.DefaultTraceListener> 에 속하지 않는 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션, 메시지 상자가 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-182">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="5059e-183"><xref:System.Diagnostics.DefaultTraceListener> 으로 제거할 수 있습니다는 [ &lt;지우기&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;제거&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), 또는 호출 하 여는 <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> 는 메서드<xref:System.Diagnostics.Trace.Listeners%2A> 속성 (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="5059e-183">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="5059e-184">동작을 변경할 수는 <xref:System.Diagnostics.DefaultTraceListener> 응용 프로그램의 이름에 해당 하는 구성 파일에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-184">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="5059e-185">이 파일에서 사용 하도록 설정 하 고 어설션 메시지 상자를 사용 하지 않도록 설정 하거나 설정할 수 있습니다는 <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-185">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="5059e-186">구성 파일 형식은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-186">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="5059e-187">다음 예제에서 볼 수 있듯이 검사는 `type` 매개 변수는 유효 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-187">The following example checks to see that the `type` parameter is valid.</span></span> <span data-ttu-id="5059e-188">경우는 `type` 에 전달 된 `null`, <xref:System.Diagnostics.Trace.Assert%2A> 된 메시지를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-188">If the `type` passed in is `null`, the <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Trace.Assert1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string * string -&gt; unit" Usage="System.Diagnostics.Trace.Assert (condition, message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="5059e-189">평가할 조건식입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-189">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="5059e-190">조건이 <see langword="true" />이면 지정된 메시지가 전송되지 않고 메시지 상자가 표시되지 않습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-190">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="5059e-191">
            <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션으로 보낼 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-191">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="5059e-192">
            <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션으로 보낼 자세한 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-192">The detailed message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-193">조건을 확인합니다. 조건이 <see langword="false" />이면 지정된 2개의 메시지를 출력하고 호출 스택을 보여주는 메시지 상자를 표시합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-193">Checks for a condition; if the condition is <see langword="false" />, outputs two specified messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-194">사용 하 여는 <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> 릴리스에서 어설션을 수행 하려는 경우 메서드를 작성 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-194">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="5059e-195"><xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> 디버그 빌드에만 사용할 수 있는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-195">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="5059e-196">자세한 내용은 참조 [관리 코드에 어설션](/visualstudio/debugger/assertions-in-managed-code)합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-196">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="5059e-197">일반적으로 <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> 메서드는 프로그램을 개발 하는 동안 논리 오류를 식별 하는 데 사용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-197">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="5059e-198"><xref:System.Diagnostics.Trace.Assert%2A> 조건을 확인합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-198"><xref:System.Diagnostics.Trace.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="5059e-199">결과가 `false`, 지정 된 진단 메시지와 자세한 메시지를 보내는 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-199">If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="5059e-200">추가 하 여이 동작을 사용자 지정할 수 있습니다는 <xref:System.Diagnostics.TraceListener> to, 제거 또는 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-200">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="5059e-201">사용자 인터페이스 모드로 실행 되는 응용 프로그램 파일 및 줄 번호가 있는 호출 스택을 표시 하는 메시지 상자가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-201">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="5059e-202">메시지 상자에 세 개의 단추가: **중단**, **을 다시 시도**, 및 **무시**합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-202">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="5059e-203">클릭 하 고 **중단** 단추는 응용 프로그램을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-203">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="5059e-204">클릭 하면 **을 다시 시도** 응용 프로그램에서 디버거를 실행 중인 되지 않았으면 디버거가 열려는 있는 경우 디버거에서 코드를 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-204">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="5059e-205">클릭 하면 **무시** 코드의 다음 명령으로 계속 진행 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-205">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5059e-206">메시지 상자의 표시의 존재 여부에 따라 달라 집니다는 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-206">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="5059e-207">경우는 <xref:System.Diagnostics.DefaultTraceListener> 에 속하지 않는 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션, 메시지 상자가 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-207">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="5059e-208"><xref:System.Diagnostics.DefaultTraceListener> 으로 제거할 수 있습니다는 [ &lt;지우기&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;제거&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), 또는 호출 하 여는 <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> 는 메서드<xref:System.Diagnostics.Trace.Listeners%2A> 속성 (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="5059e-208">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="5059e-209">동작을 변경할 수는 <xref:System.Diagnostics.DefaultTraceListener> 응용 프로그램의 이름에 해당 하는 구성 파일에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-209">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="5059e-210">이 파일에서 사용 하도록 설정 하 고 어설션 메시지 상자를 사용 하지 않도록 설정 하거나 설정할 수 있습니다는 <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-210">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="5059e-211">구성 파일 형식은 다음과 같습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-211">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="5059e-212">다음 예제에서 볼 수 있듯이 검사는 `type` 매개 변수는 유효 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-212">The following example checks to see that the `type` parameter is valid.</span></span> <span data-ttu-id="5059e-213">경우는 `type` 에 전달 된 `null`, <xref:System.Diagnostics.Trace.Assert%2A> 된 메시지를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-213">If the `type` passed in is `null`, the <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Trace.Assert2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public static bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="System.Diagnostics.Trace.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5059e-214">매번 쓴 후에 <see cref="P:System.Diagnostics.Trace.Listeners" />에 대해 <see cref="M:System.Diagnostics.Trace.Flush" />를 호출해야 하는지 여부를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-214">Gets or sets whether <see cref="M:System.Diagnostics.Trace.Flush" /> should be called on the <see cref="P:System.Diagnostics.Trace.Listeners" /> after every write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5059e-215">매번 쓴 후에 <see cref="P:System.Diagnostics.Trace.Listeners" />에 대해 <see cref="M:System.Diagnostics.Trace.Flush" /> 호출되면 <see langword="true" />이고, 호출되지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-215">
              <see langword="true" /> if <see cref="M:System.Diagnostics.Trace.Flush" /> is called on the <see cref="P:System.Diagnostics.Trace.Listeners" /> after every write; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-216">기본값은 `false`입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-216">The default is `false`.</span></span>  
  
 <span data-ttu-id="5059e-217">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 <xref:System.Diagnostics.Trace.Flush%2A> 또는 <xref:System.Diagnostics.Trace.Close%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-217">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="5059e-218">설정 <xref:System.Diagnostics.Trace.AutoFlush%2A> 를 `true` 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태 플러시되지 것입니다 있다는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-218">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="5059e-219">따라서 올바르게 문자의 다음 블록을 인코딩할 수 있도록 (부분 문자)의 상태를 유지 하기 위해 인코더 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-219">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="5059e-220">이 시나리오는 u t f 8와 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩할만 수 있는 위치에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-220">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="5059e-221">설정 하는 <xref:System.Diagnostics.Trace.AutoFlush%2A> 및 <xref:System.Diagnostics.Trace.IndentSize%2A> 에 대 한 <xref:System.Diagnostics.Trace>, 응용 프로그램의 이름에 해당 하는 구성 파일을 편집할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-221">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="5059e-222">다음 예제와 같은 구성 파일의 형식은 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-222">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5059e-223">에 비관리 코드와 작동 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-223">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="5059e-224">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-224">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="5059e-225">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-225">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Close();" />
      <MemberSignature Language="F#" Value="static member Close : unit -&gt; unit" Usage="System.Diagnostics.Trace.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5059e-226">출력 버퍼를 플러시하고 <see cref="P:System.Diagnostics.Trace.Listeners" />를 닫습니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-226">Flushes the output buffer, and then closes the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-227">이 메서드를 사용 하 여 출력 하는 경우 파일에 같은 <xref:System.Diagnostics.TextWriterTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-227">Use this method when the output is going to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 <span data-ttu-id="5059e-228">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 <xref:System.Diagnostics.Trace.Flush%2A> 또는 <xref:System.Diagnostics.Trace.Close%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-228">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="5059e-229">설정 <xref:System.Diagnostics.Trace.AutoFlush%2A> 를 `true` 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태 플러시되지 것입니다 있다는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-229">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="5059e-230">따라서 올바르게 문자의 다음 블록을 인코딩할 수 있도록 (부분 문자)의 상태를 유지 하기 위해 인코더 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-230">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="5059e-231">이 시나리오는 u t f 8와 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩할만 수 있는 위치에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-231">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-232">다음 예제에서는 한 <xref:System.Diagnostics.TextWriterTraceListener> 라는 `myTextListener`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-232">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="5059e-233">`myTextListener` 사용 하 여 한 <xref:System.IO.StreamWriter> 호출 `myOutputWriter` 라는 파일에 쓸 수 `TestFile.txt`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-233">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="5059e-234">이 예제에서는 파일, 스트림 및 텍스트 기록기, 파일을 텍스트 한 줄을 씁니다 및 플러시합니다 만들고 닫습니다 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-234">The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Trace.Flush Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Flush Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Flush Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Flush Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5059e-235">에 비관리 코드와 작동 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-235">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="5059e-236">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-236">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="5059e-237">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-237">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CorrelationManager">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.CorrelationManager CorrelationManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.CorrelationManager CorrelationManager" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.CorrelationManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrelationManager As CorrelationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::CorrelationManager ^ CorrelationManager { System::Diagnostics::CorrelationManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrelationManager : System.Diagnostics.CorrelationManager" Usage="System.Diagnostics.Trace.CorrelationManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.CorrelationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5059e-238">이 추적에 대한 스레드의 상관 관계 관리자를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-238">Gets the correlation manager for the thread for this trace.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5059e-239">이 추적에 대한 스레드에 연결된 <see cref="T:System.Diagnostics.CorrelationManager" /> 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-239">The <see cref="T:System.Diagnostics.CorrelationManager" /> object associated with the thread for this trace.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5059e-240">이 고급 속성을 사용 하는 경우 대부분의 응용 프로그램에 없어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-240">This is an advanced property that most applications should not have occasion to use.</span></span>  
  
 <span data-ttu-id="5059e-241"><xref:System.Diagnostics.CorrelationManager> 클래스 스레드 바인딩 컨텍스트에서 논리 작업 id를 저장 하 고 자동으로 저장된 된 id 가진 스레드에 의해 생성 된 각 추적 이벤트 태그를 지정 하는 데 사용 되는 메서드를 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-241">The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5059e-242">에 비관리 코드와 작동 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-242">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="5059e-243">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-243">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="5059e-244">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-244">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.CorrelationManager" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5059e-245">오류 메시지를 내보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-245">Emits an error message.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Fail : string -&gt; unit" Usage="System.Diagnostics.Trace.Fail message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="5059e-246">내보낼 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-246">A message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-247">지정된 오류 메시지를 내보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-247">Emits the specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-248">기본 추적 수신기에 대 한 기본 동작은 출력 하는 `message` 사용자 인터페이스 모드로 응용 프로그램을 실행 하는 경우에 메시지 상자에 매개 변수는 <xref:System.Diagnostics.TraceListener> 인스턴스에 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-248">The default behavior for the default trace listener is to output the `message` parameter to a message box when the application runs in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5059e-249">메시지 상자의 표시의 존재 여부에 따라 달라 집니다.는 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-249">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="5059e-250">경우는 <xref:System.Diagnostics.DefaultTraceListener> 에 속하지 않는 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션, 메시지 상자가 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-250">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="5059e-251"><xref:System.Diagnostics.DefaultTraceListener> 으로 제거할 수 있습니다는 [ &lt;지우기&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;제거&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), 또는 호출 하 여는 <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> 는 메서드<xref:System.Diagnostics.Trace.Listeners%2A> 속성 (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="5059e-251">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="5059e-252">추가 하 여이 동작을 사용자 지정할 수 있습니다는 <xref:System.Diagnostics.TraceListener> 받는 사람 또는 제거 하 여,는 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-252">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or by removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-253">다음 예제에서는 <xref:System.Diagnostics.Trace.Fail%2A> 메서드 예외를 처리할 때 메시지 표시를 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-253">The following example uses the <xref:System.Diagnostics.Trace.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Trace.Fail Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Fail Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Fail Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail Example/VB/source.vb#1)]  
  
 <span data-ttu-id="5059e-254">사용할 수도 있습니다는 <xref:System.Diagnostics.Trace.Fail%2A> switch 문에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="5059e-254">You can also use the <xref:System.Diagnostics.Trace.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Trace.Fail Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Trace.Fail Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CS/source.cs#2)]
 [!code-vb[Classic Trace.Fail Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Fail : string * string -&gt; unit" Usage="System.Diagnostics.Trace.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="5059e-255">내보낼 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-255">A message to emit.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="5059e-256">내보낼 자세한 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-256">A detailed message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-257">오류 메시지와 자세한 오류 메시지를 내보냅니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-257">Emits an error message, and a detailed error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-258">출력에 기본 추적 수신기에 대 한 기본 동작은 `message` 매개 변수 및 `detailedMessage` 사용자 인터페이스 모드로 응용 프로그램을 실행 하는 경우에 메시지 상자에 매개 변수는 <xref:System.Diagnostics.TraceListener> 인스턴스에 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션 .</span><span class="sxs-lookup"><span data-stu-id="5059e-258">The default behavior is for the default trace listener to output the `message` parameter and the `detailedMessage` parameter to a message box when the application runs in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5059e-259">메시지 상자의 표시의 존재 여부에 따라 달라 집니다.는 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-259">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="5059e-260">경우는 <xref:System.Diagnostics.DefaultTraceListener> 에 속하지 않는 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션, 메시지 상자가 표시 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-260">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="5059e-261"><xref:System.Diagnostics.DefaultTraceListener> 으로 제거할 수 있습니다는 [ &lt;지우기&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;제거&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), 또는 호출 하 여는 <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> 는 메서드<xref:System.Diagnostics.Trace.Listeners%2A> 속성 (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="5059e-261">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="5059e-262">추가 하 여이 동작을 사용자 지정할 수 있습니다는 <xref:System.Diagnostics.TraceListener> 받는 사람 또는 제거 하 여,는 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-262">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or by removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-263">다음 예제에서는 <xref:System.Diagnostics.Trace.Fail%2A> 메서드 예외를 처리할 때 메시지 표시를 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-263">The following example uses the <xref:System.Diagnostics.Trace.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Trace.Fail1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Fail1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Fail1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="5059e-264">사용할 수도 있습니다는 <xref:System.Diagnostics.Trace.Fail%2A> switch 문에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="5059e-264">You can also use the <xref:System.Diagnostics.Trace.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Trace.Fail1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Trace.Fail1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CS/source.cs#2)]
 [!code-vb[Classic Trace.Fail1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberSignature Language="F#" Value="static member Flush : unit -&gt; unit" Usage="System.Diagnostics.Trace.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5059e-265">출력 버퍼를 플러시하고 버퍼링된 데이터가 <see cref="P:System.Diagnostics.Trace.Listeners" />에 작성되도록 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-265">Flushes the output buffer, and causes buffered data to be written to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-266">명시적으로 호출 하지 않으면 스트림을 내부 인코더가 플러시되지 것입니다 <xref:System.Diagnostics.Trace.Flush%2A> 또는 <xref:System.Diagnostics.Trace.Close%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-266">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="5059e-267">설정 <xref:System.Diagnostics.Trace.AutoFlush%2A> 를 `true` 스트림 버퍼에서 데이터를 플러시할 수는 있지만 인코더 상태 플러시되지 것입니다 있다는 것을 의미 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-267">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="5059e-268">따라서 올바르게 문자의 다음 블록을 인코딩할 수 있도록 (부분 문자)의 상태를 유지 하기 위해 인코더 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-268">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="5059e-269">이 시나리오는 u t f 8와 UTF7 인코더는 인접 한 문자를 받은 후 특정 문자를 인코딩할만 수 있는 위치에 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-269">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-270">다음 예제에서는 한 <xref:System.Diagnostics.TextWriterTraceListener> 라는 `myTextListener`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-270">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="5059e-271">`myTextListener` 사용 하 여 한 <xref:System.IO.StreamWriter> 호출 `myOutputWriter` 라는 파일에 쓸 수 `TestFile.txt`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-271">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="5059e-272">이 예제에서는 파일, 스트림 및 텍스트 기록기, 파일을 텍스트 한 줄을 씁니다 및 플러시합니다 만들고 닫습니다 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-272">The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Trace.Flush Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Flush Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Flush Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Flush Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public static void Indent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Indent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Indent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Indent();" />
      <MemberSignature Language="F#" Value="static member Indent : unit -&gt; unit" Usage="System.Diagnostics.Trace.Indent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5059e-273">현재 <see cref="P:System.Diagnostics.Trace.IndentLevel" />이 1씩 증가합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-273">Increases the current <see cref="P:System.Diagnostics.Trace.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5059e-274">다음 예제에서는 증가분과 감소 분 들여쓰기 수준을 내리고 추적 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-274">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="5059e-275">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-275">This example produces the following output:</span></span>  
  
```  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Trace.Unindent" />
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public static int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentLevel : int with get, set" Usage="System.Diagnostics.Trace.IndentLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5059e-276">들여쓰기 수준을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-276">Gets or sets the indent level.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5059e-277">들여쓰기 수준입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-277">The indent level.</span>
          </span>
          <span data-ttu-id="5059e-278">기본값은 0입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-278">The default is zero.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-279"><xref:System.Diagnostics.Trace.IndentLevel%2A> 속성 크기의 들여쓰기 횟수를 나타내는 <xref:System.Diagnostics.Trace.IndentSize%2A> 적용 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-279">The <xref:System.Diagnostics.Trace.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Trace.IndentSize%2A> is applied.</span></span> <span data-ttu-id="5059e-280">이 속성은 스레드/요청 별로 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-280">This property is stored on per-thread/per-request basis.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-281">다음 예제에서는 증가분과 감소 분 들여쓰기 수준을 내리고 추적 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-281">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="5059e-282">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-282">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public static int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentSize : int with get, set" Usage="System.Diagnostics.Trace.IndentSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5059e-283">들여쓰기의 공백 수를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-283">Gets or sets the number of spaces in an indent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5059e-284">들여쓰기의 공백 수입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-284">The number of spaces in an indent.</span>
          </span>
          <span data-ttu-id="5059e-285">기본값은 4입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-285">The default is four.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-286">A <xref:System.Diagnostics.TextWriterTraceListener> 공백으로이 숫자를 해석 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-286">A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces.</span></span> <span data-ttu-id="5059e-287"><xref:System.Diagnostics.EventLogTraceListener> 이 값을 무시 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-287">An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.</span></span>  
  
 <span data-ttu-id="5059e-288">이 속성은 스레드/요청 별로 저장 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-288">This property is stored on per-thread/per-request basis.</span></span>  
  
 <span data-ttu-id="5059e-289">설정 하는 <xref:System.Diagnostics.Trace.AutoFlush%2A> 및 <xref:System.Diagnostics.Trace.IndentSize%2A> 에 대 한 <xref:System.Diagnostics.Trace>, 응용 프로그램의 이름에 해당 하는 구성 파일을 편집할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-289">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="5059e-290">다음 예제와 같은 구성 파일의 형식은 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-290">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listeners : System.Diagnostics.TraceListenerCollection" Usage="System.Diagnostics.Trace.Listeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5059e-291">추적 출력을 모니터링하는 수신기의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-291">Gets the collection of listeners that is monitoring the trace output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5059e-292">추적 출력을 모니터링하는 <see cref="T:System.Diagnostics.TraceListener" /> 형식의 컬렉션을 나타내는 <see cref="T:System.Diagnostics.TraceListenerCollection" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-292">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> that represents a collection of type <see cref="T:System.Diagnostics.TraceListener" /> monitoring the trace output.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-293">수신기는 추적 출력에서 형식이 지정 된 출력을 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-293">The listeners produce formatted output from the trace output.</span></span> <span data-ttu-id="5059e-294">기본적으로 컬렉션의 인스턴스를 포함 된 <xref:System.Diagnostics.DefaultTraceListener> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-294">By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span> <span data-ttu-id="5059e-295">기본 수신기를 제거 하려는 경우 호출는 <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> 메서드를 전달 하는 것의 인스턴스는 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-295">If you want to remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="5059e-296">콘솔 창에 출력을 리디렉션할의 인스턴스를 추가 <xref:System.Diagnostics.ConsoleTraceListener> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-296">To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5059e-297"><xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션 모두에 의해 공유 되는 <xref:System.Diagnostics.Debug> 및 <xref:System.Diagnostics.Trace> 클래스; 둘 다에 수신기를 추가 하는 클래스를 추적 수신기를 추가 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-297">The <xref:System.Diagnostics.Trace.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-298">다음 예제에서는 한 <xref:System.Diagnostics.ConsoleTraceListener> 콘솔 화면에 출력 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-298">The following example creates a <xref:System.Diagnostics.ConsoleTraceListener> that outputs to the console screen.</span></span> <span data-ttu-id="5059e-299">다음 추가를 새 수신기 코드는 <xref:System.Diagnostics.Trace.Listeners%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-299">The code then adds the new listener to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span>  
  
 [!code-cpp[Classic Trace.Listeners Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Listeners Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Listeners Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5059e-300">에 비관리 코드와 작동 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-300">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="5059e-301">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-301">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="5059e-302">연결 된 열거형의 경우: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh();" />
      <MemberSignature Language="F#" Value="static member Refresh : unit -&gt; unit" Usage="System.Diagnostics.Trace.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5059e-303">추적 구성 데이터를 새로 고칩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-303">Refreshes the trace configuration data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-304">추적 데이터가 캡처되는 응용 프로그램이 시작 될 때 구성 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-304">Trace configuration data is captured when the application is started.</span></span> <span data-ttu-id="5059e-305">응용 프로그램이 시작 된 후에 구성 데이터가 변경 되 면 호출 된 <xref:System.Diagnostics.Trace.Refresh%2A> 추적 구성 데이터를 업데이트 하는 메서드.</span><span class="sxs-lookup"><span data-stu-id="5059e-305">If the configuration data is changed after the application is started, call the <xref:System.Diagnostics.Trace.Refresh%2A> method to update the trace configuration data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceError">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5059e-306">
            <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 오류 정보를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-306">Writes error information to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public static void TraceError (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceError(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceError (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceError(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member TraceError : string -&gt; unit" Usage="System.Diagnostics.Trace.TraceError message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="5059e-307">쓸 알림 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-307">The informative message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-308">지정된 메시지를 사용하여 <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 오류 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-308">Writes an error message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-309"><xref:System.Diagnostics.Trace.TraceError%2A> 호출 된 `TraceEvent` 추적 이벤트 유형으로 각 추적 수신기에 대 한 메서드 <xref:System.Diagnostics.TraceEventType.Error>, 메시지 문자열로 알림 메시지를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-309"><xref:System.Diagnostics.Trace.TraceError%2A> calls the `TraceEvent` method for each trace listener, with the trace event type <xref:System.Diagnostics.TraceEventType.Error>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public static void TraceError (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceError(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceError (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceError(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member TraceError : string * obj[] -&gt; unit" Usage="System.Diagnostics.Trace.TraceError (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="5059e-310">
            <c>args</c> 배열에 들어 있는 개체에 해당하는 0개 이상의 서식 항목이 포함된 서식 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-310">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="5059e-311">형식을 지정할 개체가 0개 이상 포함된 <see langword="object" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-311">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-312">지정된 개체 배열과 형식 지정 정보를 사용하여 <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 오류 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-312">Writes an error message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-313"><xref:System.Diagnostics.Trace.TraceError%2A> 호출 된 `TraceEvent` 추적 이벤트 유형으로의 추적 수신기의 메서드 <xref:System.Diagnostics.TraceEventType.Error>, 서식 정보를 개체 배열로 메시지 콘텐츠를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-313"><xref:System.Diagnostics.Trace.TraceError%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Error>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="5059e-314">참조는 <xref:System.String.Format%2A> 에 대 한 자세한 내용은 메서드는 `format` 및 `args` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-314">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceInformation">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5059e-315">
            <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 정보 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-315">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public static void TraceInformation (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceInformation(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceInformation (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceInformation(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member TraceInformation : string -&gt; unit" Usage="System.Diagnostics.Trace.TraceInformation message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="5059e-316">쓸 알림 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-316">The informative message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-317">지정된 메시지를 사용하여 <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 알림 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-317">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-318"><xref:System.Diagnostics.Trace.TraceInformation%2A> 호출 된 `TraceEvent` 추적 이벤트 유형으로 각 추적 수신기에 대 한 메서드 <xref:System.Diagnostics.TraceEventType.Information>, 메시지 문자열로 알림 메시지를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-318"><xref:System.Diagnostics.Trace.TraceInformation%2A> calls the `TraceEvent` method for each trace listener, with the trace event type <xref:System.Diagnostics.TraceEventType.Information>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public static void TraceInformation (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceInformation(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceInformation (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceInformation(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member TraceInformation : string * obj[] -&gt; unit" Usage="System.Diagnostics.Trace.TraceInformation (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="5059e-319">
            <c>args</c> 배열에 들어 있는 개체에 해당하는 0개 이상의 서식 항목이 포함된 서식 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-319">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="5059e-320">형식을 지정할 개체가 0개 이상 포함된 <see langword="object" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-320">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-321">지정된 개체 배열과 형식 지정 정보를 사용하여 <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 정보 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-321">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-322"><xref:System.Diagnostics.Trace.TraceInformation%2A> 호출 된 `TraceEvent` 추적 이벤트 유형으로의 추적 수신기의 메서드 <xref:System.Diagnostics.TraceEventType.Information>, 서식 정보를 개체 배열로 메시지 콘텐츠를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-322"><xref:System.Diagnostics.Trace.TraceInformation%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Information>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="5059e-323">참조는 <xref:System.String.Format%2A> 에 대 한 자세한 내용은 메서드는 `format` 및 `args` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-323">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceWarning">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5059e-324">
            <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 경고 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-324">Writes warning information to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public static void TraceWarning (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceWarning(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceWarning(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceWarning (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceWarning(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member TraceWarning : string -&gt; unit" Usage="System.Diagnostics.Trace.TraceWarning message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="5059e-325">쓸 알림 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-325">The informative message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-326">지정된 메시지를 사용하여 <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 경고 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-326">Writes a warning message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-327"><xref:System.Diagnostics.Trace.TraceWarning%2A> 호출 된 `TraceEvent` 추적 이벤트 유형으로 각 추적 수신기에 대 한 메서드 <xref:System.Diagnostics.TraceEventType.Warning>, 메시지 문자열로 알림 메시지를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-327"><xref:System.Diagnostics.Trace.TraceWarning%2A> calls the `TraceEvent` method for each trace listener with the trace event type <xref:System.Diagnostics.TraceEventType.Warning>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public static void TraceWarning (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceWarning(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceWarning (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceWarning(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member TraceWarning : string * obj[] -&gt; unit" Usage="System.Diagnostics.Trace.TraceWarning (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="5059e-328">
            <c>args</c> 배열에 들어 있는 개체에 해당하는 0개 이상의 서식 항목이 포함된 서식 문자열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-328">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="5059e-329">형식을 지정할 개체가 0개 이상 포함된 <see langword="object" /> 배열입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-329">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-330">지정된 개체 배열과 형식 지정 정보를 사용하여 <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 경고 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-330">Writes a warning message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-331"><xref:System.Diagnostics.Trace.TraceWarning%2A> 호출 된 `TraceEvent` 추적 이벤트 유형으로의 추적 수신기의 메서드 <xref:System.Diagnostics.TraceEventType.Warning>, 서식 정보를 개체 배열로 메시지 콘텐츠를 전달 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-331"><xref:System.Diagnostics.Trace.TraceWarning%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Warning>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="5059e-332">참조는 <xref:System.String.Format%2A> 에 대 한 자세한 내용은 메서드는 `format` 및 `args` 매개 변수입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-332">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Unindent">
      <MemberSignature Language="C#" Value="public static void Unindent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unindent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Unindent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unindent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unindent();" />
      <MemberSignature Language="F#" Value="static member Unindent : unit -&gt; unit" Usage="System.Diagnostics.Trace.Unindent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5059e-333">현재 <see cref="P:System.Diagnostics.Trace.IndentLevel" />을 1씩 줄입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-333">Decreases the current <see cref="P:System.Diagnostics.Trace.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5059e-334">다음 예제에서는 증가분과 감소 분 들여쓰기 수준을 내리고 추적 메시지입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-334">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="5059e-335">이 예제는 다음과 같은 출력을 생성합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-335">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Trace.Indent" />
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="UseGlobalLock">
      <MemberSignature Language="C#" Value="public static bool UseGlobalLock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseGlobalLock" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.UseGlobalLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UseGlobalLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UseGlobalLock { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseGlobalLock : bool with get, set" Usage="System.Diagnostics.Trace.UseGlobalLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5059e-336">전역 잠금을 사용해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-336">Gets or sets a value indicating whether the global lock should be used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5059e-337">전역 잠금을 사용해야 하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-337">
              <see langword="true" /> if the global lock is to be used; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5059e-338">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-338">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-339">추적 수신기가 스레드로부터 안전 하지,의 값에 관계 없이 하는 경우에 항상 전역 잠금을 사용 됩니다 <xref:System.Diagnostics.Trace.UseGlobalLock%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-339">The global lock is always used if the trace listener is not thread safe, regardless of the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</span></span> <span data-ttu-id="5059e-340"><xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> 속성을 사용 하는 수신기가 스레드로부터 안전 하 게 보호 하는 경우를 결정 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-340">The <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> property is used to determine if the listener is thread safe.</span></span> <span data-ttu-id="5059e-341">경우에 전역 잠금을 사용 되지 않습니다 값 <xref:System.Diagnostics.Trace.UseGlobalLock%2A> 은 `false` 의 값과 <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> 은 `true`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-341">The global lock is not used only if the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A> is `false` and the value of <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> is `true`.</span></span> <span data-ttu-id="5059e-342">기본 동작은 전역 잠금을 사용 하는 것입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-342">The default behavior is to use the global lock.</span></span>  
  
 <span data-ttu-id="5059e-343">설정 하는 <xref:System.Diagnostics.Trace.UseGlobalLock%2A> 에 대 한 <xref:System.Diagnostics.Trace>, 응용 프로그램의 이름에 해당 하는 구성 파일을 편집할 수도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-343">To set the <xref:System.Diagnostics.Trace.UseGlobalLock%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="5059e-344">다음 예제와 같은 구성 파일의 형식은 같아야 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-344">The configuration file should be formatted like the following example:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <trace useGlobalLock="false" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="5059e-345">에 비관리 코드와 작동 합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-345">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="5059e-346">보안 동작: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-346">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="5059e-347">연결 된 열거형의 경우:  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-347">Associated enumeration:  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5059e-348">
            <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 추적에 대한 정보를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-348">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : obj -&gt; unit" Usage="System.Diagnostics.Trace.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5059e-349">이름이 <see cref="P:System.Diagnostics.Trace.Listeners" />에 전송되는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-349">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-350">
            <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 개체의 <see cref="M:System.Object.ToString" /> 메서드 값을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-350">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-351">기본적으로 출력 인스턴스에 기록 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-351">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="5059e-352">이 메서드를 호출는 <xref:System.Diagnostics.TraceListener.Write%2A> 추적 수신기의 메서드.</span><span class="sxs-lookup"><span data-stu-id="5059e-352">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5059e-353">ASP.NET 웹 페이지에 맞게 조정 된 추적 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-353">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="5059e-354">사용 하 여 ASP.NET 페이지에서 추적 메시지를 작성 하는 <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-354">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="5059e-355">기본적으로 ASP.NET 웹 페이지, 문은 연결 된 코드에서 `Trace.Write("...")` 에 대 한 호출에서 <xref:System.Web.TraceContext.Write%2A> 의 메서드는 <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-355">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="5059e-356">사용 하 여 <xref:System.Diagnostics.Trace?displayProperty=nameWithType> 클래스에 웹 페이지를 포함 해야는 네임 스페이스 예를 들어 `System.Diagnostics.Trace.Write("...")`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-356">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-357">다음 예제에서는 한 <xref:System.Diagnostics.TraceSwitch> 라는 `generalSwitch`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-357">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="5059e-358">이 스위치는 외부 코드 샘플은 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-358">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="5059e-359">스위치로 설정 된 경우는 <xref:System.Diagnostics.TraceLevel> `Error` 의 이름이 출력 이상 또는 `value` 매개 변수를는 <xref:System.Diagnostics.Trace.Listeners%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-359">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the `value` parameter to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="5059e-360">수신기를 추가에 대 한 내용은 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션 참조는 <xref:System.Diagnostics.TraceListenerCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-360">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="5059e-361">그런 다음은 <xref:System.Diagnostics.TraceLevel> 로 설정 된 `Verbose`,이 예제에서는 첫 번째 메시지와 같은 줄에 메시지를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-361">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="5059e-362">두 번째 메시지 줄 종결자를 차례로 나옵니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-362">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Write : string -&gt; unit" Usage="System.Diagnostics.Trace.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="5059e-363">쓸 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-363">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-364">
            <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-364">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-365">기본적으로 출력 인스턴스에 기록 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-365">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="5059e-366">이 메서드를 호출는 <xref:System.Diagnostics.TraceListener.Write%2A> 추적 수신기의 메서드.</span><span class="sxs-lookup"><span data-stu-id="5059e-366">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5059e-367">ASP.NET 웹 페이지에 맞게 조정 된 추적 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-367">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="5059e-368">사용 하 여 ASP.NET 페이지에서 추적 메시지를 작성 하는 <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-368">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="5059e-369">기본적으로 ASP.NET 웹 페이지, 문은 연결 된 코드에서 `Trace.Write("...")` 에 대 한 호출에서 <xref:System.Web.TraceContext.Write%2A> 의 메서드는 <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-369">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="5059e-370">사용 하 여 <xref:System.Diagnostics.Trace?displayProperty=nameWithType> 클래스에 웹 페이지를 포함 해야는 네임 스페이스 예를 들어 `System.Diagnostics.Trace.Write("...")`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-370">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-371">다음 예제에서는 한 <xref:System.Diagnostics.TraceSwitch> 라는 `generalSwitch`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-371">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="5059e-372">이 스위치는 외부 코드 샘플은 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-372">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="5059e-373">스위치로 설정 된 경우는 <xref:System.Diagnostics.TraceLevel> `Error` 첫 번째 오류 메시지를 출력 이상 또는 <xref:System.Diagnostics.Trace.Listeners%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-373">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="5059e-374">수신기를 추가에 대 한 내용은 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션 참조는 <xref:System.Diagnostics.TraceListenerCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-374">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="5059e-375">그런 다음은 <xref:System.Diagnostics.TraceLevel> 로 설정 된 `Verbose`,이 예제에서는 첫 번째 메시지와 같은 줄에 두 번째 오류 메시지를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-375">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="5059e-376">줄 종결자를 차례로 두 번째 메시지를 따릅니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-376">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Trace.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : obj * string -&gt; unit" Usage="System.Diagnostics.Trace.Write (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5059e-377">
            <see cref="T:System.Object" /> 이름이 <see cref="P:System.Diagnostics.Trace.Listeners" />로 전송됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-377">An <see cref="T:System.Object" /> name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="5059e-378">출력을 구성하는 데 사용되는 범주 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-378">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-379">
            <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 범주 이름 및 개체의 <see cref="M:System.Object.ToString" /> 메서드 값을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-379">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-380">기본적으로 출력 인스턴스에 기록 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-380">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="5059e-381">`category` 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-381">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="5059e-382">이 메서드를 호출는 <xref:System.Diagnostics.TraceListener.Write%2A> 추적 수신기의 메서드.</span><span class="sxs-lookup"><span data-stu-id="5059e-382">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5059e-383">ASP.NET 웹 페이지에 맞게 조정 된 추적 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-383">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="5059e-384">사용 하 여 ASP.NET 페이지에서 추적 메시지를 작성 하는 <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-384">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="5059e-385">기본적으로 ASP.NET 웹 페이지, 문은 연결 된 코드에서 `Trace.Write("...")` 에 대 한 호출에서 <xref:System.Web.TraceContext.Write%2A> 의 메서드는 <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-385">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="5059e-386">사용 하 여 <xref:System.Diagnostics.Trace?displayProperty=nameWithType> 클래스에 웹 페이지를 포함 해야는 네임 스페이스 예를 들어 `System.Diagnostics.Trace.Write("...")`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-386">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-387">다음 예제에서는 한 <xref:System.Diagnostics.TraceSwitch> 라는 `generalSwitch`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-387">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="5059e-388">이 스위치는 외부 코드 샘플은 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-388">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="5059e-389">스위치로 설정 된 경우는 <xref:System.Diagnostics.TraceLevel> `Verbose`, 출력의 이름을 `myObject` 및 `category` 에 <xref:System.Diagnostics.Trace.Listeners%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-389">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="5059e-390">수신기를 추가에 대 한 내용은 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션 참조는 <xref:System.Diagnostics.TraceListenerCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-390">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="5059e-391">그런 다음은 <xref:System.Diagnostics.TraceLevel> 로 설정 된 `Error` 이상에 예제에서는 첫 번째 메시지와 같은 줄에 두 번째 오류 메시지를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-391">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="5059e-392">두 번째 메시지 줄 종결자를 차례로 나옵니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-392">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : string * string -&gt; unit" Usage="System.Diagnostics.Trace.Write (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="5059e-393">쓸 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-393">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="5059e-394">출력을 구성하는 데 사용되는 범주 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-394">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-395">
            <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 범주 이름 및 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-395">Writes a category name and a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-396">기본적으로 출력 인스턴스에 기록 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-396">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="5059e-397">`category` 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-397">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="5059e-398">이 메서드를 호출는 <xref:System.Diagnostics.TraceListener.Write%2A> 추적 수신기의 메서드.</span><span class="sxs-lookup"><span data-stu-id="5059e-398">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5059e-399">ASP.NET 웹 페이지에 맞게 조정 된 추적 기능을 제공 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-399">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="5059e-400">사용 하 여 ASP.NET 페이지에서 추적 메시지를 작성 하는 <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-400">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="5059e-401">기본적으로 ASP.NET 웹 페이지, 문은 연결 된 코드에서 `Trace.Write("...")` 에 대 한 호출에서 <xref:System.Web.TraceContext.Write%2A> 의 메서드는 <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-401">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="5059e-402">사용 하 여 <xref:System.Diagnostics.Trace?displayProperty=nameWithType> 클래스에 웹 페이지를 포함 해야는 네임 스페이스 예를 들어 `System.Diagnostics.Trace.Write("...")`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-402">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-403">다음 예제에서는 한 <xref:System.Diagnostics.TraceSwitch> 라는 `generalSwitch`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-403">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="5059e-404">이 스위치는 외부 코드 샘플은 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-404">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="5059e-405">스위치로 설정 된 경우는 <xref:System.Diagnostics.TraceLevel> `Verbose`, 첫 번째 오류 메시지를 출력은 <xref:System.Diagnostics.Trace.Listeners%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-405">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="5059e-406">수신기를 추가에 대 한 내용은 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션 참조는 <xref:System.Diagnostics.TraceListenerCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-406">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="5059e-407">그런 다음은 <xref:System.Diagnostics.TraceLevel> 로 설정 된 `Error` 이상에 예제에서는 첫 번째 메시지와 같은 줄에 두 번째 오류 메시지를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-407">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="5059e-408">두 번째 메시지 줄 종결자를 차례로 나옵니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-408">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5059e-409">조건이 <see langword="true" />이면 <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 추적에 대한 정보를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-409">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="5059e-410">메시지를 작성하려면 <see langword="true" />이고, 그러지 않으려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-410">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5059e-411">이름이 <see cref="P:System.Diagnostics.Trace.Listeners" />에 전송되는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-411">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-412">조건이 <see langword="true" />인 경우 <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 개체의 <see cref="M:System.Object.ToString" /> 메서드 값을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-412">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-413">기본적으로 출력 인스턴스에 기록 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-413">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="5059e-414">이 메서드를 호출는 <xref:System.Diagnostics.TraceListener.Write%2A> 추적 수신기의 메서드.</span><span class="sxs-lookup"><span data-stu-id="5059e-414">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-415">다음 예제에서는 한 <xref:System.Diagnostics.TraceSwitch> 라는 `generalSwitch`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-415">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="5059e-416">이 스위치는 외부 코드 샘플은 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-416">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="5059e-417">스위치로 설정 된 경우는 <xref:System.Diagnostics.TraceLevel> `Error` 이상에 값 매개 변수를 이름이 출력 또는 <xref:System.Diagnostics.Trace.Listeners%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-417">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the value parameter to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="5059e-418">수신기를 추가에 대 한 내용은 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션 참조는 <xref:System.Diagnostics.TraceListenerCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-418">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="5059e-419">그런 다음은 <xref:System.Diagnostics.TraceLevel> 로 설정 된 `Verbose`,이 예제에서는 첫 번째 메시지와 같은 줄에 메시지를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-419">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="5059e-420">두 번째 메시지 줄 종결자를 차례로 나옵니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-420">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5059e-421">
            <para>사용 하 여 응용 프로그램을 계측의 성능 저하를 최소화할 수 <see langword="If...Then" /> 문을 사용 하는 대신 <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> 문. 다음 두 코드 예에서는 동일한 디버깅 메시지를 보냅니다. 그러나 첫 번째 예에서는 훨씬 속도가 빨라집니다 추적이 꺼져 있을 때는 경우 <c>기능</c> 계산 <see langword="false" /> 호출 하지 않으면 <see cref="M:System.Diagnostics.Trace.Write(System.String)" />합니다. 두 번째 예에서는 항상 호출 <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />경우에, <c>기능</c> 은 <see langword="false" /> 추적 출력이 생성 되 고 있습니다. 이 인해 불필요 한 복잡 한 코드가 실행 될 수 있습니다.  \* \* 첫 번째 예제에서는 \* \* ' ' if(mySwitch.TraceError) Trace.Write ("보다 =" + 보다 + "범위를 벗어났습니다."); ' ' \* \* 예 \* \*의 두 번째 ' ' Trace.WriteIf (기능, "보다 =" + 보다 + "범위를 벗어났습니다."); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-421">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.Write("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="5059e-422">메시지를 작성하려면 <see langword="true" />이고, 그러지 않으려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-422">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="5059e-423">쓸 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-423">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-424">조건이 <see langword="true" />인 경우 <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-424">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-425">기본적으로 출력 인스턴스에 기록 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-425">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="5059e-426">이 메서드를 호출는 <xref:System.Diagnostics.TraceListener.Write%2A> 추적 수신기의 메서드.</span><span class="sxs-lookup"><span data-stu-id="5059e-426">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-427">다음 예제에서는 한 <xref:System.Diagnostics.TraceSwitch> 라는 `generalSwitch`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-427">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="5059e-428">이 스위치는 외부 코드 샘플은 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-428">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="5059e-429">스위치로 설정 된 경우는 <xref:System.Diagnostics.TraceLevel> `Error` 첫 번째 오류 메시지를 출력 이상 또는 <xref:System.Diagnostics.Trace.Listeners%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-429">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="5059e-430">수신기를 추가에 대 한 내용은 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션 참조는 <xref:System.Diagnostics.TraceListenerCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-430">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="5059e-431">그런 다음은 <xref:System.Diagnostics.TraceLevel> 로 설정 된 `Verbose`,이 예제에서는 첫 번째 메시지와 같은 줄에 두 번째 오류 메시지를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-431">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="5059e-432">두 번째 메시지 줄 종결자를 차례로 나옵니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-432">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5059e-433">
            <para>사용 하 여 응용 프로그램을 계측의 성능 저하를 최소화할 수 <see langword="If...Then" /> 문을 사용 하는 대신 <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> 문. 다음 두 코드 예에서는 동일한 디버깅 메시지를 보냅니다. 그러나 첫 번째 예에서는 훨씬 속도가 빨라집니다 추적이 꺼져 있을 때는 경우 <c>기능</c> 계산 <see langword="false" /> 호출 하지 않으면 <see cref="M:System.Diagnostics.Trace.Write(System.String)" />합니다. 두 번째 예에서는 항상 호출 <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />경우에, <c>기능</c> 은 <see langword="false" /> 추적 출력이 생성 되 고 있습니다. 이 인해 불필요 한 복잡 한 코드가 실행 될 수 있습니다.  \* \* 첫 번째 예제에서는 \* \* ' ' if(mySwitch.TraceError) Trace.Write ("보다 =" + 보다 + "범위를 벗어났습니다."); ' ' \* \* 예 \* \*의 두 번째 ' ' Trace.WriteIf (기능, "보다 =" + 보다 + "범위를 벗어났습니다."); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-433">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.Write("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="5059e-434">메시지를 작성하려면 <see langword="true" />이고, 그러지 않으려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-434">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5059e-435">이름이 <see cref="P:System.Diagnostics.Trace.Listeners" />에 전송되는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-435">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="5059e-436">출력을 구성하는 데 사용되는 범주 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-436">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-437">조건이 <see langword="true" />인 경우 <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 범주 이름 및 개체의 <see cref="M:System.Object.ToString" /> 메서드 값을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-437">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-438">기본적으로 출력 인스턴스에 기록 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-438">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="5059e-439">`category` 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-439">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="5059e-440">이 메서드를 호출는 <xref:System.Diagnostics.TraceListener.Write%2A> 추적 수신기의 메서드.</span><span class="sxs-lookup"><span data-stu-id="5059e-440">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-441">다음 예제에서는 한 <xref:System.Diagnostics.TraceSwitch> 라는 `generalSwitch`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-441">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="5059e-442">이 스위치는 외부 코드 샘플은 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-442">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="5059e-443">스위치로 설정 된 경우는 <xref:System.Diagnostics.TraceLevel> `Verbose`, 출력의 이름을 `myObject` 및 `category` 에 <xref:System.Diagnostics.Trace.Listeners%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-443">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="5059e-444">수신기를 추가에 대 한 내용은 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션 참조는 <xref:System.Diagnostics.TraceListenerCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-444">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="5059e-445">그런 다음은 <xref:System.Diagnostics.TraceLevel> 로 설정 된 `Error` 이상에 예제에서는 첫 번째 메시지와 같은 줄에 두 번째 오류 메시지를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-445">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="5059e-446">두 번째 메시지 줄 종결자를 차례로 나옵니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-446">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5059e-447">
            <para>사용 하 여 응용 프로그램을 계측의 성능 저하를 최소화할 수 <see langword="If...Then" /> 문을 사용 하는 대신 <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> 문. 다음 두 코드 예에서는 동일한 디버깅 메시지를 보냅니다. 그러나 첫 번째 예에서는 훨씬 속도가 빨라집니다 추적이 꺼져 있을 때는 경우 <c>기능</c> 계산 <see langword="false" /> 호출 하지 않으면 <see cref="M:System.Diagnostics.Trace.Write(System.String)" />합니다. 두 번째 예에서는 항상 호출 <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />경우에, <c>기능</c> 은 <see langword="false" /> 추적 출력이 생성 되 고 있습니다. 이 인해 불필요 한 복잡 한 코드가 실행 될 수 있습니다.  \* \* 첫 번째 예제에서는 \* \* ' ' if(mySwitch.TraceError) Trace.Write ("보다 =" + 보다 + "범위를 벗어났습니다."); ' ' \* \* 예 \* \*의 두 번째 ' ' Trace.WriteIf (기능, "보다 =" + 보다 + "범위를 벗어났습니다."); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-447">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.Write("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="5059e-448">메시지를 작성하려면 <see langword="true" />이고, 그러지 않으려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-448">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="5059e-449">쓸 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-449">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="5059e-450">출력을 구성하는 데 사용되는 범주 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-450">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-451">조건이 <see langword="true" />이면 <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 범주 이름 및 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-451">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-452">기본적으로 출력 인스턴스에 기록 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-452">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="5059e-453">`category` 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-453">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="5059e-454">이 메서드를 호출는 <xref:System.Diagnostics.TraceListener.Write%2A> 추적 수신기의 메서드.</span><span class="sxs-lookup"><span data-stu-id="5059e-454">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-455">다음 예제에서는 한 <xref:System.Diagnostics.TraceSwitch> 라는 `generalSwitch`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-455">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="5059e-456">이 스위치는 외부 코드 샘플은 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-456">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="5059e-457">스위치로 설정 된 경우는 <xref:System.Diagnostics.TraceLevel> `Verbose`, 첫 번째 오류 메시지를 출력은 <xref:System.Diagnostics.Trace.Listeners%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-457">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="5059e-458">수신기를 추가에 대 한 내용은 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션 참조는 <xref:System.Diagnostics.TraceListenerCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-458">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="5059e-459">그런 다음은 <xref:System.Diagnostics.TraceLevel> 로 설정 된 `Error` 이상에 예제에서는 첫 번째 메시지와 같은 줄에 두 번째 오류 메시지를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-459">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="5059e-460">두 번째 메시지 줄 종결자를 차례로 나옵니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-460">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5059e-461">
            <para>사용 하 여 응용 프로그램을 계측의 성능 저하를 최소화할 수 <see langword="If...Then" /> 문을 사용 하는 대신 <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> 문. 다음 두 코드 예에서는 동일한 디버깅 메시지를 보냅니다. 그러나 첫 번째 예에서는 훨씬 속도가 빨라집니다 추적이 꺼져 있을 때는 경우 <c>기능</c> 계산 <see langword="false" /> 호출 하지 않으면 <see cref="M:System.Diagnostics.Trace.Write(System.String)" />합니다. 두 번째 예에서는 항상 호출 <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />경우에, <c>기능</c> 은 <see langword="false" /> 추적 출력이 생성 되 고 있습니다. 이 인해 불필요 한 복잡 한 코드가 실행 될 수 있습니다.  \* \* 첫 번째 예제에서는 \* \* ' ' if(mySwitch.TraceError) Trace.Write ("보다 =" + 보다 + "범위를 벗어났습니다."); ' ' \* \* 예 \* \*의 두 번째 ' ' Trace.WriteIf (기능, "보다 =" + 보다 + "범위를 벗어났습니다."); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-461">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.Write("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5059e-462">
            <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 추적에 대한 정보를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-462">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5059e-463">이름이 <see cref="P:System.Diagnostics.Trace.Listeners" />에 전송되는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-463">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-464">
            <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 개체의 <see cref="M:System.Object.ToString" /> 메서드 값을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-464">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-465">기본적으로 출력 인스턴스에 기록 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-465">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="5059e-466">이 메서드를 호출는 <xref:System.Diagnostics.TraceListener.WriteLine%2A> 추적 수신기의 메서드.</span><span class="sxs-lookup"><span data-stu-id="5059e-466">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-467">다음 예제에서는 한 <xref:System.Diagnostics.TraceSwitch> 라는 `generalSwitch`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-467">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="5059e-468">이 스위치는 외부 코드 샘플은 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-468">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="5059e-469">스위치로 설정 된 경우는 <xref:System.Diagnostics.TraceLevel> `Error` 첫 번째 오류 메시지를 출력 이상 또는 <xref:System.Diagnostics.Trace.Listeners%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-469">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="5059e-470">수신기를 추가에 대 한 내용은 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션 참조는 <xref:System.Diagnostics.TraceListenerCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-470">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="5059e-471">그런 다음은 <xref:System.Diagnostics.TraceLevel> 로 설정 된 `Verbose`, 첫 번째 메시지와 같은 줄에 개체의 이름을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-471">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="5059e-472">두 번째 메시지 줄 종결자를 차례로 나옵니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-472">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="5059e-473">쓸 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-473">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-474">
            <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-474">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-475">기본적으로 출력 인스턴스에 기록 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-475">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="5059e-476">이 메서드를 호출는 <xref:System.Diagnostics.TraceListener.WriteLine%2A> 추적 수신기의 메서드.</span><span class="sxs-lookup"><span data-stu-id="5059e-476">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-477">다음 예제에서는 한 <xref:System.Diagnostics.TraceSwitch> 라는 `generalSwitch`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-477">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="5059e-478">이 스위치는 외부 코드 샘플은 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-478">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="5059e-479">스위치로 설정 된 경우는 <xref:System.Diagnostics.TraceLevel> `Error` 첫 번째 오류 메시지를 출력 이상 또는 <xref:System.Diagnostics.Trace.Listeners%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-479">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="5059e-480">수신기를 추가에 대 한 내용은 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션 참조는 <xref:System.Diagnostics.TraceListenerCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-480">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="5059e-481">그런 다음은 <xref:System.Diagnostics.TraceLevel> 로 설정 된 `Verbose`,이 예제에서는 첫 번째 메시지와 같은 줄에 두 번째 오류 메시지를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-481">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="5059e-482">두 번째 메시지 줄 종결자를 차례로 나옵니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-482">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5059e-483">이름이 <see cref="P:System.Diagnostics.Trace.Listeners" />에 전송되는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-483">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="5059e-484">출력을 구성하는 데 사용되는 범주 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-484">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-485">
            <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 범주 이름 및 개체의 <see cref="M:System.Object.ToString" /> 메서드 값을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-485">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-486">기본적으로 출력 인스턴스에 기록 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-486">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="5059e-487">`category` 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-487">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="5059e-488">이 메서드를 호출는 <xref:System.Diagnostics.TraceListener.WriteLine%2A> 추적 수신기의 메서드.</span><span class="sxs-lookup"><span data-stu-id="5059e-488">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-489">다음 예제에서는 한 <xref:System.Diagnostics.TraceSwitch> 라는 `generalSwitch`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-489">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="5059e-490">이 스위치는 외부 코드 샘플은 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-490">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="5059e-491">스위치로 설정 된 경우는 <xref:System.Diagnostics.TraceLevel> `Error` 첫 번째 오류 메시지를 출력 이상 또는 <xref:System.Diagnostics.Trace.Listeners%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-491">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="5059e-492">수신기를 추가에 대 한 내용은 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션 참조는 <xref:System.Diagnostics.TraceListenerCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-492">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="5059e-493">그런 다음은 <xref:System.Diagnostics.TraceLevel> 로 설정 된 `Verbose`,이 예제에서는 첫 번째 메시지와 같은 줄에 두 번째 오류 메시지를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-493">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="5059e-494">두 번째 메시지 줄 종결자를 차례로 나옵니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-494">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="5059e-495">쓸 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-495">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="5059e-496">출력을 구성하는 데 사용되는 범주 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-496">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-497">
            <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 범주 이름 및 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-497">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-498">기본적으로 출력 인스턴스에 기록 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-498">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="5059e-499">`category` 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-499">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="5059e-500">이 메서드를 호출는 <xref:System.Diagnostics.TraceListener.WriteLine%2A> 추적 수신기의 메서드.</span><span class="sxs-lookup"><span data-stu-id="5059e-500">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-501">다음 예제에서는 한 <xref:System.Diagnostics.TraceSwitch> 라는 `generalSwitch`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-501">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="5059e-502">이 스위치는 외부 코드 샘플은 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-502">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="5059e-503">스위치로 설정 된 경우는 <xref:System.Diagnostics.TraceLevel> `Error` 첫 번째 오류 메시지를 출력 이상 또는 <xref:System.Diagnostics.Trace.Listeners%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-503">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="5059e-504">수신기를 추가에 대 한 내용은 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션 참조는 <xref:System.Diagnostics.TraceListenerCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-504">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="5059e-505">그런 다음은 <xref:System.Diagnostics.TraceLevel> 로 설정 된 `Verbose`, 두 번째 오류 메시지 출력 및 `category` 첫 번째 메시지와 같은 줄에 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-505">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="5059e-506">두 번째 메시지 줄 종결자를 차례로 나옵니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-506">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5059e-507">조건이 <see langword="true" />이면 <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 추적에 대한 정보를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-507">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="5059e-508">메시지를 작성하려면 <see langword="true" />이고, 그러지 않으려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-508">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5059e-509">이름이 <see cref="P:System.Diagnostics.Trace.Listeners" />에 전송되는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-509">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-510">조건이 <see langword="true" />인 경우 <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 개체의 <see cref="M:System.Object.ToString" /> 메서드 값을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-510">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-511">기본적으로 출력 인스턴스에 기록 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-511">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="5059e-512">이 메서드를 호출는 <xref:System.Diagnostics.TraceListener.WriteLine%2A> 추적 수신기의 메서드.</span><span class="sxs-lookup"><span data-stu-id="5059e-512">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-513">다음 예제에서는 한 <xref:System.Diagnostics.TraceSwitch> 라는 `generalSwitch`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-513">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="5059e-514">이 스위치는 외부 코드 샘플은 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-514">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="5059e-515">스위치로 설정 된 경우는 <xref:System.Diagnostics.TraceLevel> `Error` 첫 번째 오류 메시지를 출력 이상 또는 <xref:System.Diagnostics.Trace.Listeners%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-515">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="5059e-516">수신기를 추가에 대 한 내용은 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션 참조는 <xref:System.Diagnostics.TraceListenerCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-516">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="5059e-517">그런 다음은 <xref:System.Diagnostics.TraceLevel> 로 설정 된 `Verbose`, 첫 번째 메시지와 같은 줄에 개체의 이름을 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-517">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="5059e-518">두 번째 메시지 줄 종결자를 차례로 나옵니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-518">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5059e-519">
            <para>사용 하 여 응용 프로그램을 계측의 성능 저하를 최소화할 수 <see langword="If...Then" /> 문을 사용 하는 대신 <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> 문. 다음 두 코드 예에서는 동일한 디버깅 메시지를 보냅니다. 그러나 첫 번째 예에서는 훨씬 속도가 빨라집니다 추적이 꺼져 있을 때는 경우 <c>기능</c> 계산 <see langword="false" /> 호출 하지 않으면 <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />합니다. 두 번째 예에서는 항상 호출 <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />경우에, <c>기능</c> 은 <see langword="false" /> 추적 출력이 생성 되 고 있습니다. 이 인해 불필요 한 복잡 한 코드가 실행 될 수 있습니다.  \* \* 첫 번째 예제에서는 \* \* ' ' if(mySwitch.TraceError) Trace.WriteLine ("보다 =" + 보다 + "범위를 벗어났습니다."); ' ' \* \* 예 \* \*의 두 번째 ' ' Trace.WriteLineIf (기능, "보다 =" + 보다 + "범위를 벗어났습니다."); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-519">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.WriteLine("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="5059e-520">메시지를 작성하려면 <see langword="true" />이고, 그러지 않으려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-520">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="5059e-521">쓸 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-521">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-522">조건이 <see langword="true" />인 경우 <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-522">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-523">기본적으로 출력 인스턴스에 기록 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-523">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="5059e-524">이 메서드를 호출는 <xref:System.Diagnostics.TraceListener.WriteLine%2A> 추적 수신기의 메서드.</span><span class="sxs-lookup"><span data-stu-id="5059e-524">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-525">다음 예제에서는 한 <xref:System.Diagnostics.TraceSwitch> 라는 `generalSwitch`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-525">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="5059e-526">이 스위치는 외부 코드 샘플은 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-526">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="5059e-527">스위치로 설정 된 경우는 <xref:System.Diagnostics.TraceLevel> `Error` 첫 번째 오류 메시지를 출력 이상 또는 <xref:System.Diagnostics.Trace.Listeners%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-527">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="5059e-528">수신기를 추가에 대 한 내용은 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션 참조는 <xref:System.Diagnostics.TraceListenerCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-528">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="5059e-529">그런 다음은 <xref:System.Diagnostics.TraceLevel> 로 설정 된 `Verbose`,이 예제에서는 첫 번째 메시지와 같은 줄에 두 번째 오류 메시지를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-529">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="5059e-530">두 번째 메시지 줄 종결자를 차례로 나옵니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-530">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5059e-531">
            <para>사용 하 여 응용 프로그램을 계측의 성능 저하를 최소화할 수 <see langword="If...Then" /> 문을 사용 하는 대신 <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> 문. 다음 두 코드 예에서는 동일한 디버깅 메시지를 보냅니다. 그러나 첫 번째 예에서는 훨씬 속도가 빨라집니다 추적이 꺼져 있을 때는 경우 <c>기능</c> 계산 <see langword="false" /> 호출 하지 않으면 <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />합니다. 두 번째 예에서는 항상 호출 <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />경우에, <c>기능</c> 은 <see langword="false" /> 추적 출력이 생성 되 고 있습니다. 이 인해 불필요 한 복잡 한 코드가 실행 될 수 있습니다.  \* \* 첫 번째 예제에서는 \* \* ' ' if(mySwitch.TraceError) Trace.WriteLine ("보다 =" + 보다 + "범위를 벗어났습니다."); ' ' \* \* 예 \* \*의 두 번째 ' ' Trace.WriteLineIf (기능, "보다 =" + 보다 + "범위를 벗어났습니다."); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-531">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.WriteLine("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="5059e-532">메시지를 작성하려면 <see langword="true" />이고, 그러지 않으려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-532">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="5059e-533">이름이 <see cref="P:System.Diagnostics.Trace.Listeners" />에 전송되는 <see cref="T:System.Object" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-533">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="5059e-534">출력을 구성하는 데 사용되는 범주 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-534">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-535">조건이 <see langword="true" />인 경우 <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 범주 이름 및 개체의 <see cref="M:System.Object.ToString" /> 메서드 값을 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-535">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-536">기본적으로 출력 인스턴스에 기록 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-536">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="5059e-537">`category` 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-537">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="5059e-538">이 메서드를 호출는 <xref:System.Diagnostics.TraceListener.WriteLine%2A> 추적 수신기의 메서드.</span><span class="sxs-lookup"><span data-stu-id="5059e-538">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-539">다음 예제에서는 한 <xref:System.Diagnostics.TraceSwitch> 라는 `generalSwitch`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-539">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="5059e-540">이 스위치는 외부 코드 샘플은 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-540">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="5059e-541">스위치로 설정 된 경우는 <xref:System.Diagnostics.TraceLevel> `Error` 첫 번째 오류 메시지를 출력 이상 또는 <xref:System.Diagnostics.Trace.Listeners%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-541">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="5059e-542">수신기를 추가에 대 한 내용은 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션 참조는 <xref:System.Diagnostics.TraceListenerCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-542">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="5059e-543">그런 다음은 <xref:System.Diagnostics.TraceLevel> 로 설정 된 `Verbose`,이 예제에서는 첫 번째 메시지와 같은 줄에 두 번째 오류 메시지를 출력 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-543">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="5059e-544">두 번째 메시지 줄 종결자를 차례로 나옵니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-544">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5059e-545">
            <para>사용 하 여 응용 프로그램을 계측의 성능 저하를 최소화할 수 <see langword="If...Then" /> 문을 사용 하는 대신 <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> 문. 다음 두 코드 예에서는 동일한 디버깅 메시지를 보냅니다. 그러나 첫 번째 예에서는 훨씬 속도가 빨라집니다 추적이 꺼져 있을 때는 경우 <c>기능</c> 계산 <see langword="false" /> 호출 하지 않으면 <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />합니다. 두 번째 예에서는 항상 호출 <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />경우에, <c>기능</c> 은 <see langword="false" /> 추적 출력이 생성 되 고 있습니다. 이 인해 불필요 한 복잡 한 코드가 실행 될 수 있습니다.  \* \* 첫 번째 예제에서는 \* \* ' ' if(mySwitch.TraceError) Trace.WriteLine ("보다 =" + 보다 + "범위를 벗어났습니다."); ' ' \* \* 예 \* \*의 두 번째 ' ' Trace.WriteLineIf (기능, "보다 =" + 보다 + "범위를 벗어났습니다."); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-545">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.WriteLine("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="5059e-546">메시지를 작성하려면 <see langword="true" />이고, 그러지 않으려면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-546">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="5059e-547">쓸 메시지입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-547">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="5059e-548">출력을 구성하는 데 사용되는 범주 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-548">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5059e-549">조건이 <see langword="true" />이면 <see cref="P:System.Diagnostics.Trace.Listeners" /> 컬렉션의 추적 수신기에 범주 이름 및 메시지를 씁니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-549">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5059e-550">기본적으로 출력 인스턴스에 기록 <xref:System.Diagnostics.DefaultTraceListener>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-550">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="5059e-551">`category` 매개 변수를 사용 하 여 출력 메시지를 그룹화 할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-551">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="5059e-552">이 메서드를 호출는 <xref:System.Diagnostics.TraceListener.WriteLine%2A> 추적 수신기의 메서드.</span><span class="sxs-lookup"><span data-stu-id="5059e-552">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5059e-553">다음 예제에서는 한 <xref:System.Diagnostics.TraceSwitch> 라는 `generalSwitch`합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-553">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="5059e-554">이 스위치는 외부 코드 샘플은 설정 됩니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-554">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="5059e-555">스위치로 설정 된 경우는 <xref:System.Diagnostics.TraceLevel> `Error` 첫 번째 오류 메시지를 출력 이상 또는 <xref:System.Diagnostics.Trace.Listeners%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-555">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="5059e-556">수신기를 추가에 대 한 내용은 <xref:System.Diagnostics.Trace.Listeners%2A> 컬렉션 참조는 <xref:System.Diagnostics.TraceListenerCollection> 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-556">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="5059e-557">그런 다음은 <xref:System.Diagnostics.TraceLevel> 로 설정 된 `Verbose`, 두 번째 오류 메시지 출력 및 `category` 첫 번째 메시지와 같은 줄에 합니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-557">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="5059e-558">두 번째 메시지 줄 종결자를 차례로 나옵니다.</span><span class="sxs-lookup"><span data-stu-id="5059e-558">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5059e-559">
            <para>사용 하 여 응용 프로그램을 계측의 성능 저하를 최소화할 수 <see langword="If...Then" /> 문을 사용 하는 대신 <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> 문. 다음 두 코드 예에서는 동일한 디버깅 메시지를 보냅니다. 그러나 첫 번째 예에서는 훨씬 속도가 빨라집니다 추적이 꺼져 있을 때는 경우 <c>기능</c> 계산 <see langword="false" /> 호출 하지 않으면 <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />합니다. 두 번째 예에서는 항상 호출 <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />경우에, <c>기능</c> 은 <see langword="false" /> 추적 출력이 생성 되 고 있습니다. 이 인해 불필요 한 복잡 한 코드가 실행 될 수 있습니다.  \* \* 첫 번째 예제에서는 \* \* ' ' if(mySwitch.TraceError) Trace.WriteLine ("보다 =" + 보다 + "범위를 벗어났습니다."); ' ' \* \* 예 \* \*의 두 번째 ' ' Trace.WriteLineIf (기능, "보다 =" + 보다 + "범위를 벗어났습니다."); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5059e-559">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.WriteLine("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>