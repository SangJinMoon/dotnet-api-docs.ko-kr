<Type Name="RelativeSource" FullName="System.Windows.Data.RelativeSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e6a921dc7e65c07f67917cc3cc0c05d494cf8c56" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30629777" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RelativeSource : System.Windows.Markup.MarkupExtension, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelativeSource extends System.Windows.Markup.MarkupExtension implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.RelativeSource" />
  <TypeSignature Language="VB.NET" Value="Public Class RelativeSource&#xA;Inherits MarkupExtension&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class RelativeSource : System::Windows::Markup::MarkupExtension, System::ComponentModel::ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Windows.Data.RelativeSource))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>바인딩 대상의 위치를 기준으로 하여 바인딩 소스 위치를 설명하는 태그 확장을 구현합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 바인딩 소스를 지정 하는 방법 중 하나를 사용 하는 것은 <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType> 속성입니다. 해당 속성의 속성 형식입니다. <xref:System.Windows.Data.RelativeSource> 태그 확장 구현 하며 데이터 개체 동시에 합니다. 확장 자체 반환 될 때 (참조 <xref:System.Windows.Data.RelativeSource.ProvideValue%2A>), 데이터에 관련 정보가 포함 됩니다. 태그 확장의 주요 목적은 특성 형태로 가변 인수 생성자 구문을 허용 하는 것 있도록는 <xref:System.Windows.Data.RelativeSourceMode.FindAncestor> 모드 상위 유형 및 다른 모드 필요 없는 수준에 대 한 두 개의 추가 인수와 인라인으로 정의 될 수 있습니다.  
  
 에 대 한 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정보 참조 [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md)합니다.  
  
## Examples  
 다음 예에서는 스타일 트리거를 만드는 <xref:System.Windows.Controls.ToolTip> 유효성 검사 오류 메시지를 보고 하 합니다. 사용 하 여는 <xref:System.Windows.Data.Binding.RelativeSource%2A> 속성 setter의 값의 현재 오류 내용에 바인딩합니다 <xref:System.Windows.Controls.TextBox> (의 <xref:System.Windows.Controls.TextBox> 스타일을 사용 하 여). 이 예제에 대 한 자세한 내용은 참조 하십시오. [하는 방법: 구현 바인딩 유효성 검사](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)합니다.  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 다음 예제와 <xref:System.Windows.Style> 정의 사용자 지정 컨트롤의 라는 `NumericUpDown`합니다. <xref:System.Windows.Controls.TextBlock.Text%2A> 속성은 <xref:System.Windows.Controls.TextBlock> 에 바인딩된는 `Value` 관련 된 개체의는 `TemplatedParent`, 변수인는 `NumericUpDown` 이 제어 <xref:System.Windows.Style> 이 경우에 적용 됩니다.  
  
 [!code-xaml[CustomControlNumericUpDown#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDown/CSharp/CustomControlLibrary/themes/generic.xaml#relativesource)]  
  
 전체 샘플을 참조 하십시오. [테마와 UI 자동화 지원 샘플이 있는 NumericUpDown 사용자 지정 컨트롤](http://go.microsoft.com/fwlink/?LinkID=160025)합니다.  
  
 다음 두 번째 반환 <xref:System.Windows.Controls.ItemsControl> 바인딩 대상 요소에서 시작 하는 상향 경로에서 발생 합니다.  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.RelativeSource" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Data.RelativeSource" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelativeSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Data.RelativeSource" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeSource (System.Windows.Data.RelativeSourceMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Data.RelativeSourceMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mode As RelativeSourceMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelativeSource(System::Windows::Data::RelativeSourceMode mode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="System.Windows.Data.RelativeSourceMode" />
      </Parameters>
      <Docs>
        <param name="mode">
          <see cref="T:System.Windows.Data.RelativeSourceMode" /> 값 중 하나입니다.</param>
        <summary>초기 모드로 <see cref="T:System.Windows.Data.RelativeSource" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeSource (System.Windows.Data.RelativeSourceMode mode, Type ancestorType, int ancestorLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Data.RelativeSourceMode mode, class System.Type ancestorType, int32 ancestorLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode,System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mode As RelativeSourceMode, ancestorType As Type, ancestorLevel As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelativeSource(System::Windows::Data::RelativeSourceMode mode, Type ^ ancestorType, int ancestorLevel);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="System.Windows.Data.RelativeSourceMode" />
        <Parameter Name="ancestorType" Type="System.Type" />
        <Parameter Name="ancestorLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mode">
          <see cref="T:System.Windows.Data.RelativeSourceMode" /> 값 중 하나입니다. 이 시그니처와 관련되게 하려면 이 값이 <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" />여야 합니다.</param>
        <param name="ancestorType">찾을 상위 항목의 <see cref="T:System.Type" />입니다.</param>
        <param name="ancestorLevel">지정된 형식의 모든 상위 항목 중 원하는 상위 항목의 위치입니다.</param>
        <summary>초기 모드 및 원하는 상대 소스를 찾는 데 사용할 수 있는 추가 트리 탐색 한정자로 <see cref="T:System.Windows.Data.RelativeSource" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ancestorType` 및 `ancestorLevel` 아무런 관계가 없습니다에 대 한 매개 변수로 제공 된 경우는 `mode` 이외의 <xref:System.Windows.Data.RelativeSourceMode.FindAncestor>합니다. 다른 작업에 대 한이 서명을 사용 하지 않는 <xref:System.Windows.Data.RelativeSourceMode> 값입니다.  
  
   
  
## Examples  
 다음 두 번째 반환 <xref:System.Windows.Controls.ItemsControl> 바인딩 대상 요소에서 시작 하는 상향 경로에서 발생 합니다.  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AncestorLevel">
      <MemberSignature Language="C#" Value="public int AncestorLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AncestorLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.AncestorLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AncestorLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AncestorLevel { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> 모드에서 찾을 상위 항목의 수준을 가져오거나 설정합니다. 1은 바인딩 대상 요소에 가장 가까운 항목을 나타냅니다.</summary>
        <value>상위 항목 수준입니다. 1은 바인딩 대상 요소에 가장 가까운 항목을 나타냅니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Data.RelativeSource.Mode%2A> 속성이 설정 되지 않은 명시적으로 설정 된 <xref:System.Windows.Data.RelativeSource.AncestorType%2A> 또는 <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A> 속성 암시적으로 잠깁니다는 <xref:System.Windows.Data.RelativeSource.Mode%2A> 속성 값을 <xref:System.Windows.Data.RelativeSourceMode.FindAncestor>합니다.  
  
<a name="xamlTextUsage_AncestorLevel"></a>   
## <a name="xaml-text-usage"></a>XAML 텍스트 사용  
 에 대 한 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정보 참조 [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md)합니다.  
  
   
  
## Examples  
 다음 두 번째 반환 <xref:System.Windows.Controls.ItemsControl> 바인딩 대상 요소에서 시작 하는 상향 경로에서 발생 합니다.  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="AncestorType">
      <MemberSignature Language="C#" Value="public Type AncestorType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AncestorType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.AncestorType" />
      <MemberSignature Language="VB.NET" Value="Public Property AncestorType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AncestorType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>찾을 상위 항목의 형식을 가져오거나 설정합니다.</summary>
        <value>상위 항목의 형식입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우는 <xref:System.Windows.Data.RelativeSource.Mode%2A> 속성이 설정 되지 않은 명시적으로 설정 된 <xref:System.Windows.Data.RelativeSource.AncestorType%2A> 또는 <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A> 속성 암시적으로 잠깁니다는 <xref:System.Windows.Data.RelativeSource.Mode%2A> 속성 값을 <xref:System.Windows.Data.RelativeSourceMode.FindAncestor>합니다.  
  
<a name="xamlTextUsage_AncestorType"></a>   
## <a name="xaml-text-usage"></a>XAML 텍스트 사용  
 에 대 한 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정보 참조 [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md)합니다.  
  
   
  
## Examples  
 다음 두 번째 반환 <xref:System.Windows.Controls.ItemsControl> 바인딩 대상 요소에서 시작 하는 상향 경로에서 발생 합니다.  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Windows.Data.RelativeSource" />가 <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> 모드가 아닌 경우</exception>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="P:System.Windows.Data.RelativeSource.AncestorLevel" />
        <altmember cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.RelativeSourceMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.RelativeSourceMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As RelativeSourceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::RelativeSourceMode Mode { System::Windows::Data::RelativeSourceMode get(); void set(System::Windows::Data::RelativeSourceMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.ConstructorArgument("mode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSourceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>바인딩 대상의 위치를 기준으로 하여 바인딩 소스 위치를 설명하는 <see cref="T:System.Windows.Data.RelativeSourceMode" /> 값을 가져오거나 설정합니다.</summary>
        <value>
          <see cref="T:System.Windows.Data.RelativeSourceMode" /> 값 중 하나입니다. 기본값은 <see langword="null" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 속성에는 초기화 된 후 읽기 전용입니다. 이 속성을 명시적으로 설정 하지 않으면, 설정 된 <xref:System.Windows.Data.RelativeSource.AncestorType%2A> 또는 <xref:System.Windows.Data.RelativeSource.AncestorType%2A> 및 <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A> 속성에서이 속성 값을 암시적으로 잠깁니다 <xref:System.Windows.Data.RelativeSourceMode.FindAncestor>합니다.  
  
<a name="xamlTextUsage_Mode"></a>   
## <a name="xaml-text-usage"></a>XAML 텍스트 사용  
 에 대 한 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정보 참조 [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md)합니다.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">초기화 이후 이 속성은 변경할 수 없습니다. 이 인스턴스에서 <see cref="P:System.Windows.Data.RelativeSource.Mode" />를 변경하는 대신 새 <see cref="T:System.Windows.Data.RelativeSource" />를 만들거나 다른 static 인스턴스를 사용하십시오.</exception>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="PreviousData">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.RelativeSource PreviousData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.RelativeSource PreviousData" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.PreviousData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PreviousData As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Data::RelativeSource ^ PreviousData { System::Windows::Data::RelativeSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Data.RelativeSource" /> 모드에 대해 생성된 <see cref="F:System.Windows.Data.RelativeSourceMode.PreviousData" />를 반환하는 데 사용되는 정적 값을 가져옵니다.</summary>
        <value>정적 <see cref="T:System.Windows.Data.RelativeSource" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 네 가지 중 3 개 <xref:System.Windows.Data.RelativeSourceMode> 값을 <xref:System.Windows.Data.RelativeSourceMode.PreviousData>, <xref:System.Windows.Data.RelativeSourceMode.Self>, 또는 <xref:System.Windows.Data.RelativeSourceMode.TemplatedParent>를 생성할 수 있습니다는 <xref:System.Windows.Data.RelativeSource> 완전히 정적인 고유한 개인 값입니다. 정적 속성의 사용 되는 모든 각 사용에 대 한 별도 개체를 할당할 필요가 없도록 동일한 개체를 공유할 수 있습니다. 따라서 정적 속성을 사용 하 여 메모리 사용량을 줄입니다.  
  
<a name="xamlTextUsage_PreviousData"></a>   
## <a name="xaml-text-usage"></a>XAML 텍스트 사용  
 에 대 한 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정보 참조 [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">태그 확장명 서비스를 제공할 수 있는 개체입니다. 이 구현에서 이 매개 변수는 <see langword="null" />일 수 있습니다.</param>
        <summary>이 태그 확장의 대상 개체 속성에 대한 값으로 설정해야 하는 개체를 반환합니다. <see cref="T:System.Windows.Data.RelativeSource" />의 경우 이 개체는 지정한 모드에 적절한 소스를 사용하는 다른 <see cref="T:System.Windows.Data.RelativeSource" />입니다.</summary>
        <returns>다른 <see cref="T:System.Windows.Data.RelativeSource" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.RelativeSource> 태그 확장 구현 하며 데이터 개체 동시에 합니다. 확장 자체를 반환 하는 경우 데이터에 관련 정보가 포함 됩니다. 태그 확장의 주요 목적은 특성 형태로 가변 인수 생성자 구문을 허용 하는 것 있도록는 <xref:System.Windows.Data.RelativeSourceMode.FindAncestor> 모드 상위 유형 및 다른 모드 필요 없는 수준에 대 한 두 개의 추가 인수와 인라인으로 정의 될 수 있습니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Self">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.RelativeSource Self { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.RelativeSource Self" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.Self" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Self As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Data::RelativeSource ^ Self { System::Windows::Data::RelativeSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Data.RelativeSource" /> 모드에 대해 생성된 <see cref="F:System.Windows.Data.RelativeSourceMode.Self" />를 반환하는 데 사용되는 정적 값을 가져옵니다.</summary>
        <value>정적 <see cref="T:System.Windows.Data.RelativeSource" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 네 가지 중 3 개 <xref:System.Windows.Data.RelativeSourceMode> 값을 <xref:System.Windows.Data.RelativeSourceMode.PreviousData>, <xref:System.Windows.Data.RelativeSourceMode.Self>, 또는 <xref:System.Windows.Data.RelativeSourceMode.TemplatedParent>를 생성할 수 있습니다는 <xref:System.Windows.Data.RelativeSource> 완전히 정적인 고유한 개인 값입니다. 정적 속성의 사용 되는 모든 각 사용에 대 한 별도 개체를 할당할 필요가 없도록 동일한 개체를 공유할 수 있습니다. 따라서 정적 속성을 사용 하 여 메모리 사용량을 줄입니다.  
  
<a name="xamlTextUsage_Self"></a>   
## <a name="xaml-text-usage"></a>XAML 텍스트 사용  
 에 대 한 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정보 참조 [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md)합니다.  
  
   
  
## Examples  
 다음 예에서는 스타일 트리거를 만드는 <xref:System.Windows.Controls.ToolTip> 유효성 검사 오류 메시지를 보고 하 합니다. Setter의 값이 현재 오류 내용을에 바인딩합니다 <xref:System.Windows.Controls.TextBox> (의 <xref:System.Windows.Controls.TextBox> 스타일을 사용 하 여)를 사용 하 여는 <xref:System.Windows.Data.Binding.RelativeSource%2A> 속성입니다. 참조 [하는 방법: 구현 바인딩 유효성 검사](~/docs/framework/wpf/data/how-to-implement-binding-validation.md) 이 예제에 대 한 자세한 내용은 합니다.  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAncestorLevel">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeAncestorLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeAncestorLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeAncestorLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeAncestorLevel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Data.RelativeSource.AncestorLevel" /> 속성을 지속해야 하는지 여부를 나타냅니다.</summary>
        <returns>
          속성 값이 기본값에서 변경되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 `ShouldSerialize` 메서드가 때문에 제공 되는 <xref:System.Windows.Data.RelativeSource.AncestorLevel%2A> 속성 간단한 기본 값이 없는 합니다. 이 메서드는 속성이 기본값에서 변경 되었는지 여부를 나타냅니다. 에 대 한 디자이너를 하거나 개발 하는 경우 일반적으로이 메서드를 호출는 <xref:System.Windows.Data.RelativeSource> 포함 하는 사용자 고유의 컨트롤을 개발 하거나는 <xref:System.Windows.Data.RelativeSource>합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAncestorType">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeAncestorType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeAncestorType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorType" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeAncestorType () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeAncestorType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Data.RelativeSource.AncestorType" /> 속성을 지속해야 하는지 여부를 나타냅니다.</summary>
        <returns>
          속성 값이 기본값에서 변경되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 `ShouldSerialize` 메서드가 때문에 제공 되는 <xref:System.Windows.Data.RelativeSource.AncestorType%2A> 속성 간단한 기본 값이 없는 합니다. 이 메서드는 속성이 기본값에서 변경 되었는지 여부를 나타냅니다. 에 대 한 디자이너를 하거나 개발 하는 경우 일반적으로이 메서드를 호출는 <xref:System.Windows.Data.RelativeSource> 포함 하는 사용자 고유의 컨트롤을 개발 하거나는 <xref:System.Windows.Data.RelativeSource>합니다.  
  
 자세한 내용은 참조 [ShouldSerialize 및 다시 설정 하는 메서드를 사용 하 여 기본 값 정의](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md)합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 멤버는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 멤버는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatedParent">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.RelativeSource TemplatedParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.RelativeSource TemplatedParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.TemplatedParent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TemplatedParent As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Data::RelativeSource ^ TemplatedParent { System::Windows::Data::RelativeSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Data.RelativeSource" /> 모드에 대해 생성된 <see cref="F:System.Windows.Data.RelativeSourceMode.TemplatedParent" />를 반환하는 데 사용되는 정적 값을 가져옵니다.</summary>
        <value>정적 <see cref="T:System.Windows.Data.RelativeSource" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 네 가지 중 3 개 <xref:System.Windows.Data.RelativeSourceMode> 값을 <xref:System.Windows.Data.RelativeSourceMode.PreviousData>, <xref:System.Windows.Data.RelativeSourceMode.Self>, 또는 <xref:System.Windows.Data.RelativeSourceMode.TemplatedParent>를 생성할 수 있습니다는 <xref:System.Windows.Data.RelativeSource> 완전히 정적인 고유한 개인 값입니다. 정적 속성의 사용 되는 모든 각 사용에 대 한 별도 개체를 할당할 필요가 없도록 동일한 개체를 공유할 수 있습니다. 따라서 정적 속성을 사용 하 여 메모리 사용량을 줄입니다.  
  
<a name="xamlTextUsage_TemplatedParent"></a>   
## <a name="xaml-text-usage"></a>XAML 텍스트 사용  
 에 대 한 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 정보 참조 [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md)합니다.  
  
   
  
## Examples  
 다음 예제와 <xref:System.Windows.Style> 정의 사용자 지정 컨트롤의 라는 `NumericUpDown`합니다. <xref:System.Windows.Controls.TextBlock.Text%2A> 속성은 <xref:System.Windows.Controls.TextBlock> 에 바인딩된는 `Value` 관련 된 개체의는 `TemplatedParent`, 변수인는 `NumericUpDown` 이 제어 <xref:System.Windows.Style> 이 경우에 적용 됩니다.  
  
 [!code-xaml[CustomControlNumericUpDown#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDown/CSharp/CustomControlLibrary/themes/generic.xaml#relativesource)]  
  
 전체 샘플을 참조 하십시오. [테마와 UI 자동화 지원 샘플이 있는 NumericUpDown 사용자 지정 컨트롤](http://go.microsoft.com/fwlink/?LinkID=160025)합니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
  </Members>
</Type>