<Type Name="BindingGroup" FullName="System.Windows.Data.BindingGroup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f649b391903f2bb1a09092568b00a0d61d647d4a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36365137" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BindingGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type BindingGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ae93f-101">개체의 유효성을 검사하는 데 사용되는 <see cref="T:System.Windows.Controls.ValidationRule" /> 개체 및 바인딩의 컬렉션을 포함합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ae93f-101">Contains a collection of bindings and <see cref="T:System.Windows.Controls.ValidationRule" /> objects that are used to validate an object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae93f-102">A <xref:System.Windows.Data.BindingGroup> 유효성을 검사 하 고 함께 업데이트할 수 있는 여러 바인딩 간의 관계를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-102">A <xref:System.Windows.Data.BindingGroup> creates a relationship between multiple bindings, which can be validated and updated together.</span></span> <span data-ttu-id="ae93f-103">예를 들어 응용 프로그램 주소를 입력 하 라는 메시지를 표시 하는 것으로 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-103">For example, suppose that an application prompts the user to enter an address.</span></span> <span data-ttu-id="ae93f-104">그런 다음 응용 프로그램 형식의 개체를 채웁니다 `Address`, 속성이 있는, `Street`, `City`, `ZipCode`, 및 `Country`, 사용자가 제공한 값을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-104">The application then populates an object of type `Address`, which has the properties, `Street`, `City`, `ZipCode`, and `Country`, with the values that the user provided.</span></span> <span data-ttu-id="ae93f-105">응용 프로그램에 4 개를 포함 하는 패널 <xref:System.Windows.Controls.TextBox> 된 개체의 속성 중 하나에 바인딩된 데이터 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-105">The application has a panel that contains four <xref:System.Windows.Controls.TextBox> controls, each of which is data bound to one of the object’s properties.</span></span> <span data-ttu-id="ae93f-106">사용할 수 있습니다는 <xref:System.Windows.Controls.ValidationRule> 에 <xref:System.Windows.Data.BindingGroup> 유효성을 검사 하 여 `Address` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-106">You can use a <xref:System.Windows.Controls.ValidationRule> in a <xref:System.Windows.Data.BindingGroup> to validate the `Address` object.</span></span> <span data-ttu-id="ae93f-107">같은 바인딩에 참여 하는 경우 <xref:System.Windows.Data.BindingGroup>, 우편 번호 주소 국가 대 한 유효한 되는지 확인할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-107">If the bindings participate in the same <xref:System.Windows.Data.BindingGroup>, you can ensure that the zip-code is valid for the country of the address.</span></span>  
  
 <span data-ttu-id="ae93f-108">설정한는 <xref:System.Windows.FrameworkElement.BindingGroup%2A> 속성 <xref:System.Windows.FrameworkElement> 또는 <xref:System.Windows.FrameworkContentElement>합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-108">You set the <xref:System.Windows.FrameworkElement.BindingGroup%2A> property on <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="ae93f-109">자식 요소를 상속 된 <xref:System.Windows.Data.BindingGroup> 다른 상속 가능한 속성 경우와 마찬가지로, 부모 요소 로부터 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-109">Child elements inherit the <xref:System.Windows.Data.BindingGroup> from their parent elements, just as with any other inheritable property.</span></span> <span data-ttu-id="ae93f-110">하위 요소에 바인딩을에 추가 <xref:System.Windows.Data.BindingGroup> 다음과 같은 상황 중 하나가 발생 하는 경우:</span><span class="sxs-lookup"><span data-stu-id="ae93f-110">A binding on a descendent element is added to a <xref:System.Windows.Data.BindingGroup> if one of the following situations occurs:</span></span>  
  
-   <span data-ttu-id="ae93f-111">바인딩의 소스 및 <xref:System.Windows.FrameworkElement.DataContext%2A> 가 요소의 <xref:System.Windows.Data.BindingGroup> 가 같은 개체 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 속성이 설정 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-111">The binding's source and the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> are the same object and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="ae93f-112"><xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 바인딩의 속성은에 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> 없고 명시적으로 설정 되지 않은 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-112">The <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of the binding is equal to the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> and they are not explicitly set to `null`.</span></span>  
  
 <span data-ttu-id="ae93f-113">주소의 예에서 되었다고 가정은 <xref:System.Windows.FrameworkElement.DataContext%2A> 의 <xref:System.Windows.Controls.Panel> 유형의 개체에 설정 되어 `Address`합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-113">In the example of the address, suppose that the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.Panel> is set to the object of type `Address`.</span></span> <span data-ttu-id="ae93f-114">각각에 대 한 바인딩을 <xref:System.Windows.Controls.TextBox> 에 추가 되 고 <xref:System.Windows.Data.BindingGroup> 패널의 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-114">The binding for each <xref:System.Windows.Controls.TextBox> is added to the <xref:System.Windows.Data.BindingGroup> of the panel.</span></span>  
  
 <span data-ttu-id="ae93f-115">추가한 <xref:System.Windows.Controls.ValidationRule> 개체는 <xref:System.Windows.Data.BindingGroup>합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-115">You add <xref:System.Windows.Controls.ValidationRule> objects to a <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="ae93f-116"><xref:System.Windows.Data.BindingGroup> 의 첫 번째 매개 변수로 전달 되는 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드 때는 <xref:System.Windows.Controls.ValidationRule> 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-116">The <xref:System.Windows.Data.BindingGroup> is passed as the first parameter of the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method when the <xref:System.Windows.Controls.ValidationRule> runs.</span></span> <span data-ttu-id="ae93f-117">사용할 수는 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 또는 <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 메서드를 <xref:System.Windows.Data.BindingGroup> 개체의 제안 된 값을 가져오는 및 <xref:System.Windows.Data.BindingGroup.Items%2A> 바인딩의 소스인 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-117">You can use the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> or <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method on that <xref:System.Windows.Data.BindingGroup> to get the proposed values of the object, and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the sources of the bindings.</span></span>  
  
 <span data-ttu-id="ae93f-118">A <xref:System.Windows.Data.BindingGroup> 개별적으로 업데이트 되 고 각 바인딩에 대신 동시에 바인딩 소스를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-118">A <xref:System.Windows.Data.BindingGroup> updates the sources of the binding at the same time instead of each binding being updated separately.</span></span> <span data-ttu-id="ae93f-119">데이터 유효성 검사 방법 중 하나를 호출 하면 (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>, <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>, 또는 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>), 각각에 대 한 바인딩을 <xref:System.Windows.Controls.TextBox> 에 예제에서는 유효성이 검사 되 고 잠재적으로 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-119">When you call one of the methods to validate the data (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>, <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>, or <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>), the binding for each <xref:System.Windows.Controls.TextBox> in the example is validated and potentially updated.</span></span> <span data-ttu-id="ae93f-120">바인딩을의 일부인 경우는 <xref:System.Windows.Data.BindingGroup>를 호출할 때까지 바인딩 소스 업데이트 되지 않습니다 <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> 또는 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 에 <xref:System.Windows.Data.BindingGroup>명시적으로 설정 하지 않는 한는 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="ae93f-120">When a binding is part of a <xref:System.Windows.Data.BindingGroup>, the source of the binding is not updated until you call <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> or <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> on the <xref:System.Windows.Data.BindingGroup>, unless you explicitly set the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae93f-121">다음 예제에서는 항목의 가격과 설명을 입력 하 라는 메시지를 표시 하는 응용 프로그램 및 제공이 만료 되는 날짜를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-121">The following examples create an application that prompts the user to enter the description and price of an item and the date that the offer expires.</span></span> <span data-ttu-id="ae93f-122">응용 프로그램 폼 아래 항목에 대 한 현재 정보를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-122">The application displays the current information for the item below the form.</span></span> <span data-ttu-id="ae93f-123">사용자 제출 하거나 변경 내용을 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-123">The user can submit or cancel the changes.</span></span>  
  
 <span data-ttu-id="ae93f-124">응용 프로그램이이 동작을 얻기 위해 다음 작업을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-124">The application does the following to achieve this behavior.</span></span>  
  
-   <span data-ttu-id="ae93f-125">만듭니다는 <xref:System.Windows.Data.BindingGroup> 루트 추가 <xref:System.Windows.Controls.StackPanel> 를 만들 때의 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 응용 프로그램의 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-125">Creates a <xref:System.Windows.Data.BindingGroup> and adds it the root <xref:System.Windows.Controls.StackPanel> when it creates the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] of the application.</span></span>  
  
-   <span data-ttu-id="ae93f-126">호출 <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>, 및 <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> 사용할 수 있도록 응용 프로그램의 논리에 변경 내용을 롤백하고 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-126">Calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>, and <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> in the application's logic to enable rolling back changes.</span></span>  
  
-   <span data-ttu-id="ae93f-127">호출 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 에 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드를 사용자의 입력을 가져오고 다음 7 일 이상 동안 100 달러가 넘는 항목을 사용할 수 있는지를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-127">Calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> in a <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the user's input and then check that an item over 100 dollars is available for at least seven days.</span></span>  
  
 <span data-ttu-id="ae93f-128">다음 예제에서는 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 응용 프로그램의 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-128">The following example creates the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] of the application.</span></span> <span data-ttu-id="ae93f-129">루트 <xref:System.Windows.Controls.StackPanel> 에 <xref:System.Windows.Data.BindingGroup> 를 포함 하는 <xref:System.Windows.Controls.ValidationRule> 를 확인 하는 항목을 앞에서 설명한 대로 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-129">The root <xref:System.Windows.Controls.StackPanel> has a <xref:System.Windows.Data.BindingGroup> that contains a <xref:System.Windows.Controls.ValidationRule> that validates the item, as described previously.</span></span> <span data-ttu-id="ae93f-130">바인딩 개체에는 `Price` 속성 및 `OfferExpires` 속성 될 부분의 <xref:System.Windows.Data.BindingGroup> 각 바인딩에 및는 <xref:System.Windows.Controls.ValidationRule> 되는지 확인 하는 가격 및 날짜, 각각 유효한 값입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-130">The binding objects on the `Price` property and the `OfferExpires` property become part of the <xref:System.Windows.Data.BindingGroup> and each binding has a <xref:System.Windows.Controls.ValidationRule> to make sure that price and date, respectively, are valid values.</span></span> <span data-ttu-id="ae93f-131">개별 속성에 대 한 유효성 검사 규칙을 실행 하기 전에 <xref:System.Windows.Controls.ValidationRule> 에 <xref:System.Windows.Data.BindingGroup>합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-131">The validation rules for the individual properties run before the <xref:System.Windows.Controls.ValidationRule> on the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 <span data-ttu-id="ae93f-132">다음 예제에서는 응용 프로그램에 대 한 이벤트 처리기를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-132">The following example shows the event handlers for the application.</span></span> <span data-ttu-id="ae93f-133">제출 단추를 클릭 하면 응용 프로그램 호출 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 모두 실행 하려면 <xref:System.Windows.Controls.ValidationRule> 와 연결 된는 <xref:System.Windows.Data.BindingGroup>합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-133">When the user clicks the Submit button, the application calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to run each <xref:System.Windows.Controls.ValidationRule> that is associated with the <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="ae93f-134">각 경우 <xref:System.Windows.Controls.ValidationRule> 성공 하면 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 편집 트랜잭션을 끝내 고 개체에 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-134">If each <xref:System.Windows.Controls.ValidationRule> succeeds, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> saves the values to the object and ends the edit transaction.</span></span> <span data-ttu-id="ae93f-135">경우 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 가 성공 하면 응용 프로그램이 다른 편집 트랜잭션을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-135">If <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> is successful, the application begins another edit transaction.</span></span> <span data-ttu-id="ae93f-136">때는 <xref:System.Windows.Controls.ValidationRule> 실패는 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 이벤트 응용 프로그램 설정 때문에 발생 <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> 를 `true` 에 <xref:System.Windows.Data.BindingGroup> (앞의 예에서).</span><span class="sxs-lookup"><span data-stu-id="ae93f-136">When a <xref:System.Windows.Controls.ValidationRule> fails, the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event occurs because the application set <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` on the <xref:System.Windows.Data.BindingGroup> (in the previous example).</span></span> <span data-ttu-id="ae93f-137">`ItemError` 핸들의 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 사용자에 게 유효성 검사 오류에 대 한 이벤트와 표시 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-137">`ItemError` handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event and displays information about the validation error to the user.</span></span> <span data-ttu-id="ae93f-138">이 예제에서는 또한 처리는 <xref:System.Windows.FrameworkElement.Loaded> 에 대 한 이벤트는 <xref:System.Windows.Controls.StackPanel> 및 <xref:System.Windows.Controls.Primitives.ButtonBase.Click> 에 대 한 이벤트는 **취소** 단추 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-138">The example also handles the <xref:System.Windows.FrameworkElement.Loaded> event for the <xref:System.Windows.Controls.StackPanel> and the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event for the **Cancel** button.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#WindowLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#windowlogic)]
 [!code-vb[BindingGroupSnippets#WindowLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#windowlogic)]  
  
 <span data-ttu-id="ae93f-139">다음 예제에서는 사용자 지정 <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`에 추가한는 <xref:System.Windows.Data.BindingGroup> 첫 번째 예제에서입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-139">The following example shows the custom <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`, which was added to the <xref:System.Windows.Data.BindingGroup> in the first example.</span></span> <span data-ttu-id="ae93f-140"><xref:System.Windows.Controls.ValidationRule> 사용 하 여는 <xref:System.Windows.Data.BindingGroup> 에 해당 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 검사는 100 달러 넘는 항목을 사용 하는 경우 사용할 수 있습니다 7 일 이상에 대 한 고, 폼에 입력 한 값을 가져오려면 메서드.</span><span class="sxs-lookup"><span data-stu-id="ae93f-140">The <xref:System.Windows.Controls.ValidationRule> uses the <xref:System.Windows.Data.BindingGroup> in its <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ae93f-141">
            <see cref="T:System.Windows.Data.BindingGroup" /> 클래스의 새 인스턴스를 초기화합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-141">Initializes a new instance of the <see cref="T:System.Windows.Data.BindingGroup" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="bindingGroup.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ae93f-142">
            <see cref="T:System.Windows.Data.BindingGroup" />의 소스에 대한 편집 트랜잭션을 시작합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-142">Begins an edit transaction on the sources in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae93f-143">경우에 소스는 <xref:System.Windows.Data.BindingGroup> 보류 중인 변경 내용 취소 지원, 호출할 수 있습니다 <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 편집 트랜잭션을 시작, 호출 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 보류 중인 변경 내용을 저장 하려면 호출 <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> 보류 중인 변경 내용을 취소 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-143">If the sources in the <xref:System.Windows.Data.BindingGroup> support discarding pending changes, you can call <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to begin the edit transaction, call <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to save the pending changes, call <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> to discard the pending changes.</span></span>  
  
 <span data-ttu-id="ae93f-144">각 개체에 대해 <xref:System.Windows.Data.BindingGroup.Items%2A> 를 구현 하는 <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 호출 <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ae93f-144">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> calls <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae93f-145">다음 예제에서는 <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 편집 트랜잭션을 시작 하는 창이 로드 될 때입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-145">The following example calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> when a window loads to begin the edit transaction.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt; BindingExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; BindingExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingExpressions As Collection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ BindingExpressions { System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingExpressions : System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;" Usage="System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae93f-146">
            <see cref="T:System.Windows.Data.BindingExpression" />의 각 바인딩에 대한 정보가 들어 있는 <see cref="T:System.Windows.Data.BindingGroup" /> 개체의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-146">Gets a collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects that contains information for each Binding in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae93f-147">
            <see cref="T:System.Windows.Data.BindingExpression" />의 각 바인딩에 대한 정보가 들어 있는 <see cref="T:System.Windows.Data.BindingGroup" /> 개체의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-147">A collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects that contains information for each binding in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae93f-148">A <xref:System.Windows.Data.BindingExpression> 속한는 <xref:System.Windows.Data.BindingGroup> 다음 경우 중 하나가 발생 하는 경우:</span><span class="sxs-lookup"><span data-stu-id="ae93f-148">A <xref:System.Windows.Data.BindingExpression> belongs to a <xref:System.Windows.Data.BindingGroup> if one of the following cases occurs:</span></span>  
  
-   <span data-ttu-id="ae93f-149">바인딩의 소스 및 <xref:System.Windows.FrameworkElement.DataContext%2A> 가 요소의 <xref:System.Windows.Data.BindingGroup> 가 같은 개체 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 설정 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-149">The binding's source and the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> are the same object and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is not set.</span></span>  
  
-   <span data-ttu-id="ae93f-150"><xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 바인딩의 속성 및 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.Data.BindingGroup> 동일한 null이 아닌 값으로 설정 되어 및 <xref:System.Windows.Data.BindingGroup> 는 바인딩 대상 요소의 부모 요소에 속합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-150">The <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of the binding and the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> are set to the same non-null value and the <xref:System.Windows.Data.BindingGroup> belongs to a parent element of the binding's target element.</span></span>  
  
-   <span data-ttu-id="ae93f-151">추가한는 <xref:System.Windows.Data.BindingExpression> 를 <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-151">You add a <xref:System.Windows.Data.BindingExpression> to <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="bindingGroup.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ae93f-152">편집 트랜잭션을 끝내고 보류 중인 변경 내용을 삭제합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-152">Ends the edit transaction and discards the pending changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae93f-153">이 메서드를 사용 하면 소스 삭제 보류 중인 변경 내용을 원본 개체는 그러한 작업의 수 및 편집 트랜잭션을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-153">This method causes the sources to discard the pending changes, if a source object is capable of doing so and end the edit transaction.</span></span> <span data-ttu-id="ae93f-154">다음 메서드는 저장 된 소스 값으로 대상 속성을 업데이트합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-154">Then the method updates the target properties with the saved source values.</span></span>  
  
 <span data-ttu-id="ae93f-155">각 개체에 대해 <xref:System.Windows.Data.BindingGroup.Items%2A> 를 구현 하는 <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> 호출 <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ae93f-155">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> calls <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae93f-156">다음 예제에서는 <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> 보류 중인 변경 내용 및 다음 호출을 취소 하 <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 소스를 다시 편집 된 준비를 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-156">The following example calls <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> to discard the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[BindingGroupSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRestoreValues">
      <MemberSignature Language="C#" Value="public bool CanRestoreValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRestoreValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRestoreValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRestoreValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRestoreValues : bool" Usage="System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae93f-157">바인딩의 각 소스에서 보류 중인 변경 내용을 삭제하고 원래 값을 복원할 수 있는지 여부를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-157">Gets whether each source in the binding can discard pending changes and restore the original values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae93f-158">바인딩의 각 소스에서 보류 중인 변경 내용을 삭제하고 원래 값을 복원할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-158">
              <see langword="true" /> if each source in the binding can discard pending changes and restore the original values; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae93f-159">구현 하는 경우 소스는 보류 중인 변경 내용을 취소할 수 <xref:System.ComponentModel.IEditableObject>합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-159">A source can discard pending changes if it implements <xref:System.ComponentModel.IEditableObject>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public bool CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function CommitEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CommitEdit();" />
      <MemberSignature Language="F#" Value="member this.CommitEdit : unit -&gt; bool" Usage="bindingGroup.CommitEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ae93f-160">모든 <see cref="T:System.Windows.Controls.ValidationRule" /> 개체를 실행하고 모든 유효성 검사 규칙이 성공하는 경우 바인딩 소스를 업데이트합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-160">Runs all the <see cref="T:System.Windows.Controls.ValidationRule" /> objects and updates the binding sources if all validation rules succeed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae93f-161">모든 <see cref="T:System.Windows.Controls.ValidationRule" />이 성공하고 값이 소스에 커밋되면 sources;<see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-161">
              <see langword="true" /> if every <see cref="T:System.Windows.Controls.ValidationRule" /> succeeds and the values are committed to the sources; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae93f-162">모든 경우 <xref:System.Windows.Controls.ValidationRule> 성공 하면 원본 개체에 따른 수 있다면이 방법을 사용 하면 보류 중인 변경 내용을 커밋하고 편집 트랜잭션을 종료 하는 원본입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-162">If every <xref:System.Windows.Controls.ValidationRule> succeeds, this method causes the sources to commit the pending changes and end the edit transaction, if a source object is capable of doing so.</span></span>  
  
 <span data-ttu-id="ae93f-163">각 개체에 대해 <xref:System.Windows.Data.BindingGroup.Items%2A> 를 구현 하는 <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 호출 <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ae93f-163">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> calls <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae93f-164">다음 예제에서는 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 보류 중인 변경 내용 및 다음 호출을 저장 하려면 <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 소스를 다시 편집 된 준비를 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-164">The following example calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to save the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object item, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(object item, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (item As Object, propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ item, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetValue : obj * string -&gt; obj" Usage="bindingGroup.GetValue (item, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="ae93f-165">지정된 속성을 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-165">The object that contains the specified property.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="ae93f-166">제안된 값을 가져올 속성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-166">The property whose proposed value to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae93f-167">지정된 속성 및 항목에 대해 제안된 값을 반환합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-167">Returns the proposed value for the specified property and item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae93f-168">제안된 속성 값입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-168">The proposed property value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae93f-169">이 메서드를 사용 하 여는 <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> 메서드는 소스에 커밋할 수 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-169">Use this method in the <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> method to get the value to be committed to the source.</span></span> <span data-ttu-id="ae93f-170">반환 값의 형식은 하는 단계에 따라 다릅니다.는 <xref:System.Windows.Controls.ValidationRule> 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-170">The type of the return value depends on the stage at which the <xref:System.Windows.Controls.ValidationRule> occurs.</span></span> <span data-ttu-id="ae93f-171">예를 들어 경우는 <xref:System.Windows.Controls.TextBox> 정수 형식의 속성에 바인딩된 데이터 및 <xref:System.Windows.Controls.ValidationRule> 호출 하는 <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 가 해당 <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> 로 설정 <xref:System.Windows.Controls.ValidationStep.RawProposedValue>, 메서드는 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-171">For example, if a <xref:System.Windows.Controls.TextBox> is data bound to a property of type integer and the <xref:System.Windows.Controls.ValidationRule> that calls <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.RawProposedValue>, the method returns a string.</span></span> <span data-ttu-id="ae93f-172">경우는 <xref:System.Windows.Controls.ValidationRule> 가 해당 <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> 로 설정 <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, 메서드는 바인딩의 변환기에서 반환 되는 형식에 관계 없이 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-172">If the <xref:System.Windows.Controls.ValidationRule> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, the method returns whatever type that is returned by the binding's converter.</span></span> <span data-ttu-id="ae93f-173">이 예제에서는 <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 일반적으로 정수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-173">In this example, <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> usually returns an integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae93f-174">다음 예제는 사용자 여러 고객을 입력 하 고 각 고객을 영업 담당자를 할당 하도록 요청 하는 응용 프로그램의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-174">The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer.</span></span> <span data-ttu-id="ae93f-175">응용 프로그램에서 영업 담당자와 고객이 동일한 지역에 속해 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-175">The application checks that the sales representative and the customer belong to the same region.</span></span> <span data-ttu-id="ae93f-176">예제에 나와 있는 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드를 사용 하는 <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 메서드를 입력 한 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-176">The example shows the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, which uses the <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method to get values that the customer entered.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#itembindgroupvalidationrule)]
 [!code-vb[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#itembindgroupvalidationrule)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ae93f-177">지정된 항목 및 속성에 대한 바인딩이 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-177">There is not a binding for the specified item and property.</span>
          </span>
        </exception>
        <exception cref="T:System.Windows.Data.ValueUnavailableException">
          <span data-ttu-id="ae93f-178">변환 오류나 이전의 유효성 검사 규칙 실패로 인해 지정된 속성 값을 사용할 수 없는 경우</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-178">The value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasValidationError">
      <MemberSignature Language="C#" Value="public bool HasValidationError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidationError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidationError : bool" Usage="System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae93f-179">
            <see cref="T:System.Windows.Data.BindingGroup" />에 실패한 유효성 검사 규칙이 있는지 여부를 나타내는 값을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-179">Gets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> has a failed validation rule.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae93f-180">
            <see cref="T:System.Windows.Data.BindingGroup" />에 실패한 유효성 검사 규칙이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-180">
              <see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> has a failed validation rule; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Windows.Data.BindingGroup.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae93f-181">
            <see cref="T:System.Windows.Data.BindingGroup" />이 소스에 기록되지 않은 제안된 값을 포함하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-181">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> contains a proposed value that has not been written to the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae93f-182">
            <see cref="T:System.Windows.Data.BindingGroup" />에 소스에 작성되지 않은 제안 값이 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-182">
              <see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> contains a proposed value that has not been written to the source; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.IList Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Items { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.IList" Usage="System.Windows.Data.BindingGroup.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae93f-183">
            <see cref="T:System.Windows.Data.BindingGroup" />의 바인딩 개체에 사용되는 소스를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-183">Gets the sources that are used by the Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae93f-184">
            <see cref="T:System.Windows.Data.BindingGroup" />의 바인딩 개체에 사용되는 소스입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-184">The sources that are used by the Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae93f-185">소스에 추가 됨에 따라 사용 되는 각 개체는 <xref:System.Windows.Data.BindingGroup.Items%2A> 속성은 한 번, 여러 바인딩을 개체는 원본으로 사용 되는 경우에 마찬가지입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-185">Each object that is used as a source is added into the <xref:System.Windows.Data.BindingGroup.Items%2A> property once, even if the object is used as the source for multiple bindings.</span></span> <span data-ttu-id="ae93f-186">대개는 단지 하나의 항목 <xref:System.Windows.Data.BindingGroup.Items%2A>, 관련 된 개체는는 <xref:System.Windows.FrameworkElement.DataContext%2A> 를 사용 하는 요소는 <xref:System.Windows.Data.BindingGroup>합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-186">Often, there is just one item in <xref:System.Windows.Data.BindingGroup.Items%2A>, which is the object that is the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that uses the <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="ae93f-187">그러나에 대 한 수는 <xref:System.Windows.Data.BindingGroup> 가 여러 소스에 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-187">It is possible for a <xref:System.Windows.Data.BindingGroup> to have multiple sources, however.</span></span> <span data-ttu-id="ae93f-188">예를 들어, 동일한 바인딩 개체 공유 하는 경우 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 다른 소스 개체를 사용 하 여, 원본으로 사용 되는 각 개체에는 있지만 <xref:System.Windows.Data.BindingGroup.Items%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-188">For example, if Binding objects share the same <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> but use different source objects, each object that is used as a source is in <xref:System.Windows.Data.BindingGroup.Items%2A>.</span></span>  
  
 <span data-ttu-id="ae93f-189">여러 개체에 있을 수 있습니다 <xref:System.Windows.Data.BindingGroup.Items%2A> 소스의 중첩된 속성에 바인딩의 경로가 확인 되는 경우.</span><span class="sxs-lookup"><span data-stu-id="ae93f-189">There can also be multiple objects in <xref:System.Windows.Data.BindingGroup.Items%2A> if the path of a Binding resolves to a nested property of the source.</span></span> <span data-ttu-id="ae93f-190">예를 들어 한 <xref:System.Windows.Controls.TextBox> 컨트롤의 바인딩의 일부인는 <xref:System.Windows.Data.BindingGroup> 및 해당 <xref:System.Windows.FrameworkElement.DataContext%2A> 는 `Customer` 형식의 속성이 있는 개체 `Address`합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-190">For example, suppose a <xref:System.Windows.Controls.TextBox> control's binding is a part of a <xref:System.Windows.Data.BindingGroup> and its <xref:System.Windows.FrameworkElement.DataContext%2A> is a `Customer` object, which has a property of type `Address`.</span></span> <span data-ttu-id="ae93f-191">경우는 <xref:System.Windows.Data.Binding.Path%2A> 의 <xref:System.Windows.Data.Binding> 는 `Address.ZipCode` 속성을는 `Address` 에 추가 되는 <xref:System.Windows.Data.BindingGroup.Items%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-191">If the <xref:System.Windows.Data.Binding.Path%2A> of the <xref:System.Windows.Data.Binding> is the `Address.ZipCode` property, the `Address` is added to the <xref:System.Windows.Data.BindingGroup.Items%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae93f-192">다음 예제는 사용자가을 동일한 값으로 두 개체의 속성을 설정 하는지 여부를 확인 하는 응용 프로그램의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-192">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="ae93f-193">첫 번째 예에서는 두 개의 <xref:System.Windows.Controls.TextBox> 각각은 서로 다른 소스에 바인딩된 데이터 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-193">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source.</span></span> <span data-ttu-id="ae93f-194">첫 번째 바인딩 <xref:System.Windows.Controls.TextBox> 해당 소스를 가져옵니다 `object1`에서 <xref:System.Windows.FrameworkElement.DataContext%2A> 의 <xref:System.Windows.Controls.TextBox> 컨트롤의 부모 요소 (의 <xref:System.Windows.Controls.StackPanel>).</span><span class="sxs-lookup"><span data-stu-id="ae93f-194">The binding of the first <xref:System.Windows.Controls.TextBox> gets its source, `object1`, from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.TextBox> control's parent element (the <xref:System.Windows.Controls.StackPanel>).</span></span> <span data-ttu-id="ae93f-195">두 번째 <xref:System.Windows.Controls.TextBox>, 바인딩의 소스로 설정 되어 `object2`합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-195">On the second <xref:System.Windows.Controls.TextBox>, the source of the binding is set to `object2`.</span></span> <span data-ttu-id="ae93f-196">이 예에서는 또한 만듭니다는 <xref:System.Windows.Controls.Label> 유효성 검사 오류를 표시 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-196">The example also creates a <xref:System.Windows.Controls.Label> that displays validation errors.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 <span data-ttu-id="ae93f-197">다음 예제와 <xref:System.Windows.Controls.ValidationRule> 이전 예제에서 사용 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-197">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span> <span data-ttu-id="ae93f-198">에 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드를 예제에서 각 원본 개체를 가져오고는 <xref:System.Windows.Data.BindingGroup> 개체의 속성이 같은지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-198">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Data.BindingGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae93f-199">
            <see cref="T:System.Windows.Data.BindingGroup" />에서 바인딩 개체를 포함하거나 제외하는 데 사용할 수 있는 <see cref="T:System.Windows.Data.BindingGroup" />을 식별하는 이름을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-199">Gets or sets the name that identifies the <see cref="T:System.Windows.Data.BindingGroup" />, which can be used to include and exclude Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae93f-200">
            <see cref="T:System.Windows.Data.BindingGroup" />을 식별하는 이름입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-200">The name that identifies the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae93f-201">경우 <xref:System.Windows.Data.BindingGroup.Name%2A> 은 `null`, 원본와 같은 개체에 포함 된 바인딩이 <xref:System.Windows.FrameworkElement.DataContext%2A> 가 요소의 <xref:System.Windows.Data.BindingGroup> 에 참여는 <xref:System.Windows.Data.BindingGroup>합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-201">If <xref:System.Windows.Data.BindingGroup.Name%2A> is `null`, bindings that have a source that is the same object as the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> participate in the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 <span data-ttu-id="ae93f-202">과 다른 소스 있는 바인딩을 포함할 수 있습니다는 <xref:System.Windows.FrameworkElement.DataContext%2A> 가 부모 요소의 <xref:System.Windows.Data.BindingGroup> 설정 하 여 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.Data.BindingGroup> 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 동일한 값에 대 한 바인딩의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-202">You can include bindings that have a source that is different from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to the same value.</span></span> <span data-ttu-id="ae93f-203">같은 원본으로 포함 된 바인딩이 제외할 수 <xref:System.Windows.FrameworkElement.DataContext%2A> 가 부모 요소의 <xref:System.Windows.Data.BindingGroup> 설정 하 여 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.Data.BindingGroup> 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 서로 다른 값에 대 한 바인딩의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-203">You can exclude bindings that have the same source as <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to different values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae93f-204">다음 예제는 사용자가을 동일한 값으로 두 개체의 속성을 설정 하는지 여부를 확인 하는 응용 프로그램의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-204">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="ae93f-205">첫 번째 예에서는 두 개의 <xref:System.Windows.Controls.TextBox> 각각은 서로 다른 소스에 바인딩된 데이터 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-205">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source.</span></span> <span data-ttu-id="ae93f-206">첫 번째 바인딩 <xref:System.Windows.Controls.TextBox> 의 일부는 <xref:System.Windows.Data.BindingGroup> 때문에 <xref:System.Windows.Controls.TextBox> 상속는 <xref:System.Windows.FrameworkElement.DataContext%2A> 및 <xref:System.Windows.Data.BindingGroup> 부모에서 <xref:System.Windows.Controls.StackPanel>합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-206">The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel>.</span></span>  
  
 <span data-ttu-id="ae93f-207">두 번째 바인딩 <xref:System.Windows.Controls.TextBox> 의 일부는 <xref:System.Windows.Data.BindingGroup> 때문에 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.Data.BindingGroup> 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 의 <xref:System.Windows.Data.Binding> 으로 설정 되어 `bindingGroup`합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-207">The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 <span data-ttu-id="ae93f-208">다음 예제와 <xref:System.Windows.Controls.ValidationRule> 이전 예제에서 사용 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-208">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span> <span data-ttu-id="ae93f-209">에 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드를 예제에서 각 원본 개체를 가져오고는 <xref:System.Windows.Data.BindingGroup> 개체의 속성이 같은지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-209">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae93f-210">
            <see cref="E:System.Windows.Controls.Validation.Error" />의 상태가 변경될 때 <see cref="T:System.Windows.Controls.ValidationRule" /> 이벤트가 발생하는지 여부를 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-210">Gets or sets whether the <see cref="E:System.Windows.Controls.Validation.Error" /> event occurs when the state of a <see cref="T:System.Windows.Controls.ValidationRule" /> changes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae93f-211">
            <see cref="E:System.Windows.Controls.Validation.Error" />의 상태가 변경될 때 <see cref="T:System.Windows.Controls.ValidationRule" /> 이벤트가 발생하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-211">
              <see langword="true" /> if the <see cref="E:System.Windows.Controls.Validation.Error" /> event occurs when the state of a <see cref="T:System.Windows.Controls.ValidationRule" /> changes; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ae93f-212">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-212">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae93f-213"><xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 를 가진 요소를 연결 된 이벤트가 발생 된 <xref:System.Windows.Data.BindingGroup>합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-213">The <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> attached event occurs on the element that has the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae93f-214">다음 예제에서는 한 <xref:System.Windows.Data.BindingGroup> 설정 <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> 를 `true` 응용 프로그램에서 처리할 수 있도록는 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 이벤트 때는 <xref:System.Windows.Controls.ValidationRule> 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-214">The following example creates a <xref:System.Windows.Data.BindingGroup> and sets <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` so that the application can handle the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event when a <xref:System.Windows.Controls.ValidationRule> fails.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 <span data-ttu-id="ae93f-215">다음 예제에서는 핸들의 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-215">The following example handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ErrorHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#errorhandler)]
 [!code-vb[BindingGroupSnippets#ErrorHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#errorhandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Owner { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.DependencyObject" Usage="System.Windows.Data.BindingGroup.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae93f-216">이 <see cref="T:System.Windows.Data.BindingGroup" />이 할당되는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-216">Gets the object that this <see cref="T:System.Windows.Data.BindingGroup" /> is assigned to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae93f-217">이 <see cref="T:System.Windows.Data.BindingGroup" />이 할당되는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-217">The object that this <see cref="T:System.Windows.Data.BindingGroup" /> is assigned to.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharesProposedValues">
      <MemberSignature Language="C#" Value="public bool SharesProposedValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SharesProposedValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SharesProposedValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SharesProposedValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SharesProposedValues : bool with get, set" Usage="System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae93f-218">
            <see cref="T:System.Windows.Data.BindingGroup" />에서 소스에 커밋되지 않은 대상 값을 다시 사용할지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-218">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> reuses target values that have not been committed to the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae93f-219">
            <see cref="T:System.Windows.Data.BindingGroup" />에서 소스에 커밋되지 않은 대상 값을 다시 사용하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-219">
              <see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> reuses target values that have not been committed to the source; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ae93f-220">기본값은 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-220">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae93f-221">제안 된 값은 바인딩 대상에서 변경 되어 있지만 소스에 커밋되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-221">A proposed value is a value that has been changed on the target of a binding, but has not been committed to the source.</span></span> <span data-ttu-id="ae93f-222">예를 들어, 한지를 양방향 바인딩으로 <xref:System.Windows.Controls.TextBox> 및 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 속성이 <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-222">For example, suppose that there is a two-way binding on a <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property is set to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>.</span></span> <span data-ttu-id="ae93f-223">사용자의 값을 변경 하는 경우는 <xref:System.Windows.Controls.TextBox>, 제안 된 값은에 있는 값의 <xref:System.Windows.Controls.TextBox> 원본에 커밋되기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-223">If the user changes the value of the <xref:System.Windows.Controls.TextBox>, the proposed value is the value that is in the <xref:System.Windows.Controls.TextBox> before it is committed to source.</span></span>  
  
 <span data-ttu-id="ae93f-224">때 <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> 은 `true`, <xref:System.Windows.Data.BindingGroup> 바인딩이 두 개는 BindingGroup 유지 하 고 동일한 소스와 다른 바인딩에 BindingGroup 조인 하는 경우 제안 된 값을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-224">When <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> is `true`, the <xref:System.Windows.Data.BindingGroup> uses the proposed value when one binding leaves the BindingGroup and another Binding with the same source joins the BindingGroup.</span></span>  <span data-ttu-id="ae93f-225">예를 들어 응용 프로그램 사용자를 여러 필드를 편집 하 고 단추를 클릭 하 여 원본 개체를 업데이트할 수 있음을 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-225">For example, suppose that an application enables a user to edit multiple fields and update the source object by clicking a button.</span></span> <span data-ttu-id="ae93f-226">필드 편집 되지 않는 경우 응용 프로그램에 표시 된 <xref:System.Windows.Controls.TextBlock>합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-226">When a field is not being edited, the application displays it in a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="ae93f-227">필드 편집 하려면 사용자가 응용 프로그램 대체는 <xref:System.Windows.Controls.TextBlock> 와 <xref:System.Windows.Controls.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-227">When the user begins to edit a field, the application replaces the <xref:System.Windows.Controls.TextBlock> with a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="ae93f-228">사용자가 해당 필드의 편집을 마치면 응용 프로그램 대체는 <xref:System.Windows.Controls.TextBox> 와 <xref:System.Windows.Controls.TextBlock>합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-228">When the user finishes editing that field, the application replaces the <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="ae93f-229">에 대 한 방법이 있어야 소스는 단추를 클릭할 때까지 업데이트 되지 때문에 <xref:System.Windows.Controls.TextBlock> 제안 된 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-229">Because the source is not updated until the user clicks the button, there must be a way for the <xref:System.Windows.Controls.TextBlock> to display the proposed value.</span></span> <span data-ttu-id="ae93f-230">설정 하 여 <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> 를 `true`, 소스 업데이트 되지 않은 경우에 응용 프로그램 필드에 사용자의 변경 내용이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-230">By setting <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> to `true`, the application will display the user's changes to a field even when the source has not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (object item, string propertyName, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(object item, string propertyName, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (item As Object, propertyName As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(System::Object ^ item, System::String ^ propertyName, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : obj * string *  -&gt; bool" Usage="bindingGroup.TryGetValue (item, propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="ae93f-231">지정된 속성을 포함하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-231">The object that contains the specified property.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="ae93f-232">제안된 값을 가져올 속성입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-232">The property whose proposed value to get.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ae93f-233">이 메서드의 반환 값에는 제안된 속성 값을 나타내는 개체가 포함됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-233">When this method returns, contains an object that represents the proposed property value.</span>
          </span>
          <span data-ttu-id="ae93f-234">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-234">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae93f-235">지정된 속성 및 항목에 대해 제안된 값을 가져오려고 시도합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-235">Attempts to get the proposed value for the specified property and item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae93f-236">값이 지정된 속성에 제안된 값이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-236">
              <see langword="true" /> if value is the proposed value for the specified property; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae93f-237"><xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 반환 `false` 없는 경우 지정 된 항목 및 속성에 대 한 바인딩 또는 지정된 된 속성의 값을 변환 오류로 인해 사용할 수 없는 경우 또는 이전 유효성 검사 규칙에 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-237"><xref:System.Windows.Data.BindingGroup.TryGetValue%2A> returns `false` if there is not a binding for the specified item and property or if the value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</span></span>  
  
 <span data-ttu-id="ae93f-238">이 메서드를 사용 하 여는 <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> 메서드는 소스에 커밋할 수 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-238">Use this method in the <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> method to get the value to be committed to the source.</span></span> <span data-ttu-id="ae93f-239">형식 `value` 하는 단계에 따라 달라 집니다는 <xref:System.Windows.Controls.ValidationRule> 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-239">The type `value` depends on the stage at which the <xref:System.Windows.Controls.ValidationRule> occurs.</span></span> <span data-ttu-id="ae93f-240">예를 들어 경우는 <xref:System.Windows.Controls.TextBox> 정수 형식의 속성에 바인딩된 데이터 `value` 문자열인 경우는 <xref:System.Windows.Controls.ValidationRule> 호출 하는 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 가 해당 <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> 로 설정 <xref:System.Windows.Controls.ValidationStep.RawProposedValue>합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-240">For example, if a <xref:System.Windows.Controls.TextBox> is data bound to a property of type integer, `value` is a string if the <xref:System.Windows.Controls.ValidationRule> that calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.RawProposedValue>.</span></span> <span data-ttu-id="ae93f-241">경우는 <xref:System.Windows.Controls.ValidationRule> 가 해당 <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> 로 설정 <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, 유형의 `value` 바인딩의 변환기에서 반환 되는 모든 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-241">If the <xref:System.Windows.Controls.ValidationRule> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, the type of `value` is whatever type that is returned by the binding's converter.</span></span> <span data-ttu-id="ae93f-242">이 예제에서는 `value` 는 일반적으로 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-242">In this example, `value` is usually an integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae93f-243">다음 예제에서는 사용자 지정 <xref:System.Windows.Controls.ValidationRule> 라는 `ValidateDateAndPrice`합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-243">The following example creates a custom <xref:System.Windows.Controls.ValidationRule> named `ValidateDateAndPrice`.</span></span> <span data-ttu-id="ae93f-244">에 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드를 사용 하 여는 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 메서드 및 <xref:System.Windows.Data.BindingGroup.Items%2A> 속성을 사용자가 폼에 입력 한 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-244">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example uses the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> method and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the values the user entered into the form.</span></span> <span data-ttu-id="ae93f-245">다음 예제는 100 달러 넘는 항목을 사용 하는 경우 사용할 수 있습니다 7 일 이상에 대 한 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-245">Then the example checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span> <span data-ttu-id="ae93f-246">이 예제는에 보다 큰 예제의 일부는 <xref:System.Windows.Data.BindingGroup> 클래스</span><span class="sxs-lookup"><span data-stu-id="ae93f-246">This example is part of a larger example on the <xref:System.Windows.Data.BindingGroup> class</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSources">
      <MemberSignature Language="C#" Value="public bool UpdateSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UpdateSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.UpdateSources" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateSources () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UpdateSources();" />
      <MemberSignature Language="F#" Value="member this.UpdateSources : unit -&gt; bool" Usage="bindingGroup.UpdateSources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ae93f-247">
            <see cref="T:System.Windows.Controls.ValidationRule" /> 속성이 <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" />, <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> 또는 <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />로 설정된 <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> 개체 및 바인딩에 대해 변환기를 실행하고 모든 유효성 검사 규칙이 성공하는 경우 대상의 값을 소스 개체에 저장합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-247">Runs the converter on the binding and the <see cref="T:System.Windows.Controls.ValidationRule" /> objects that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />, <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />, or <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> and saves the values of the targets to the source objects if all the validation rules succeed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae93f-248">모든 유효성 검사 규칙이 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-248">
              <see langword="true" /> if all validation rules succeed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae93f-249">이 메서드는 모든 소스를 업데이트 <xref:System.Windows.Controls.ValidationRule> 성공 하면 소스입니다. 보류 중인 변경 내용을 커밋하고 편집 트랜잭션을 종료 시 키 지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-249">This method updates the source if every <xref:System.Windows.Controls.ValidationRule> succeeds, but it does not cause the sources to commit the pending changes and end the edit transaction.</span></span> <span data-ttu-id="ae93f-250">즉, 원본 개체를 구현 하는 경우 <xref:System.ComponentModel.IEditableObject>합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-250">That is, if the source object implements <xref:System.ComponentModel.IEditableObject>.</span></span> <span data-ttu-id="ae93f-251">이 메서드에서 발생 하지 않습니다 호출 <xref:System.ComponentModel.IEditableObject.EndEdit%2A> 를 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-251">Calling this method does not cause <xref:System.ComponentModel.IEditableObject.EndEdit%2A> to be called.</span></span> <span data-ttu-id="ae93f-252">사용 하 여는 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 메서드를 사용 하려면 소스 보류 중인 변경 내용을 커밋합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-252">Use the <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> method to have the sources commit the pending changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae93f-253">다음 예제는 사용자 여러 고객을 입력 하 고 각 고객을 영업 담당자를 할당 하도록 요청 하는 응용 프로그램의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-253">The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer.</span></span> <span data-ttu-id="ae93f-254">응용 프로그램에서 영업 담당자와 고객이 동일한 지역에 속해 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-254">The application checks that the sales representative and the customer belong to the same region.</span></span> <span data-ttu-id="ae93f-255">예제에서는 호출 <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> 하는 바인딩 유효성을 검사 하 고 모든 유효성 검사 규칙이 성공 하는 경우 원본에 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-255">The example calls <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> to validate the bindings and save the values to the source if all the validation rules succeed.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#UpdateSources](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#updatesources)]
 [!code-vb[BindingGroupSnippets#UpdateSources](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#updatesources)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataError">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataError : bool with get, set" Usage="System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae93f-256">
            <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />을 포함할지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-256">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae93f-257">
            <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />을 포함하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-257">
              <see langword="true" /> to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ae93f-258">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-258">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae93f-259">때 <xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A> 은 `true`, 바인딩을 확인 하 고 구현 하는 데이터 원본에 의해 발생 하는 오류를 보고 <xref:System.ComponentModel.INotifyDataErrorInfo>합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-259">When <xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A> is `true`, the binding checks for and reports errors that are raised by a data source that implements <xref:System.ComponentModel.INotifyDataErrorInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateWithoutUpdate">
      <MemberSignature Language="C#" Value="public bool ValidateWithoutUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateWithoutUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateWithoutUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateWithoutUpdate();" />
      <MemberSignature Language="F#" Value="member this.ValidateWithoutUpdate : unit -&gt; bool" Usage="bindingGroup.ValidateWithoutUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ae93f-260">
            <see cref="T:System.Windows.Controls.ValidationRule" /> 속성이 <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> 또는 <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />로 설정된 <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> 개체 및 바인딩에 대해 변환기를 실행합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-260">Runs the converter on the binding and the <see cref="T:System.Windows.Controls.ValidationRule" /> objects that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> or <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae93f-261">유효성 검사 규칙이 성공하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-261">
              <see langword="true" /> if the validation rules succeed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae93f-262">이 메서드를 호출 하는 경우에 소스 업데이트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-262">The sources are not updated when you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt; ValidationErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Controls.ValidationError&gt; ValidationErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationErrors As ReadOnlyCollection(Of ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ ValidationErrors { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationErrors : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;" Usage="System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae93f-263">
            <see cref="T:System.Windows.Controls.ValidationError" />을 유효하지 않게 만든 <see cref="T:System.Windows.Data.BindingGroup" /> 개체의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-263">Gets a collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects that caused the <see cref="T:System.Windows.Data.BindingGroup" /> to be invalid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae93f-264">
            <see cref="T:System.Windows.Controls.ValidationError" />을 유효하지 않게 만든 <see cref="T:System.Windows.Data.BindingGroup" /> 개체의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-264">A collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects that caused <see cref="T:System.Windows.Data.BindingGroup" /> to be invalid.</span>
          </span>
          <span data-ttu-id="ae93f-265">오류가 없을 경우 이 값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-265">The value is <see langword="null" /> if there are no errors.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae93f-266">
            <see cref="T:System.Windows.Controls.ValidationRule" />에서 소스 개체의 유효성을 검사하는 <see cref="T:System.Windows.Data.BindingGroup" /> 개체의 컬렉션을 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-266">Gets a collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects that validate the source objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae93f-267">
            <see cref="T:System.Windows.Controls.ValidationRule" />에서 소스 개체의 유효성을 검사하는 <see cref="T:System.Windows.Data.BindingGroup" /> 개체의 컬렉션입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae93f-267">A collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects that validate the source objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae93f-268">경우는 <xref:System.Windows.Controls.ValidationRule> 에 추가 되는 <xref:System.Windows.Data.BindingGroup>, <xref:System.Windows.Data.BindingGroup> 의 첫 번째 매개 변수로 전달 됩니다는 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ae93f-268">When a <xref:System.Windows.Controls.ValidationRule> is added to a <xref:System.Windows.Data.BindingGroup>, the <xref:System.Windows.Data.BindingGroup> is passed in as the first parameter of the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method.</span></span> <span data-ttu-id="ae93f-269">사용 하 여 개체의 제안 된 값을 가져올 수는 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 또는 <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="ae93f-269">You can get the proposed values of the object by using the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> or <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method.</span></span> <span data-ttu-id="ae93f-270">바인딩의 원본인 개체를 가져올 수는 <xref:System.Windows.Data.BindingGroup.Items%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-270">You can get the objects that are the sources of the bindings from the <xref:System.Windows.Data.BindingGroup.Items%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae93f-271">다음 예제에서는 사용자 지정 <xref:System.Windows.Controls.ValidationRule>, `ValidateDateAndPrice`을 <xref:System.Windows.Data.BindingGroup>합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-271">The following example adds the custom <xref:System.Windows.Controls.ValidationRule>, `ValidateDateAndPrice`, to the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 <span data-ttu-id="ae93f-272">다음 예제에서는 `ValidateDateAndPrice` 클래스를 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-272">The following example shows the `ValidateDateAndPrice` class.</span></span> <span data-ttu-id="ae93f-273"><xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드는 <xref:System.Windows.Data.BindingGroup> 검사는 100 달러 넘는 항목을 사용 하는 경우 사용할 수 있습니다 7 일 이상에 대 한 고, 폼에 입력 한 값을 가져오도록 합니다.</span><span class="sxs-lookup"><span data-stu-id="ae93f-273">The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method uses the <xref:System.Windows.Data.BindingGroup> to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>