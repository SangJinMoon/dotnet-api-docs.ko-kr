<Type Name="BindingGroup" FullName="System.Windows.Data.BindingGroup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b826e7069b0044a7213adf25c03adbfe354c267b" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ko-KR" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52603298" /></Metadata><TypeSignature Language="C#" Value="public class BindingGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type BindingGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="59da6-101">바인딩의 컬렉션을 포함 하 고 <see cref="T:System.Windows.Controls.ValidationRule" /> 개체의 유효성을 검사 하는 데 사용 되는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-101">Contains a collection of bindings and <see cref="T:System.Windows.Controls.ValidationRule" /> objects that are used to validate an object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59da6-102"><xref:System.Windows.Data.BindingGroup> 유효성을 검사 하 고 함께 업데이트할 수 있는 여러 바인딩 간의 관계를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-102">A <xref:System.Windows.Data.BindingGroup> creates a relationship between multiple bindings, which can be validated and updated together.</span></span> <span data-ttu-id="59da6-103">예를 들어, 응용 프로그램 주소를 입력 하 라는 메시지가 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-103">For example, suppose that an application prompts the user to enter an address.</span></span> <span data-ttu-id="59da6-104">그런 다음 응용 프로그램 형식의 개체를 채웁니다 `Address`에 속성이 `Street`, `City`, `ZipCode`, 및 `Country`, 사용자가 제공한 값을 사용 하 여 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-104">The application then populates an object of type `Address`, which has the properties, `Street`, `City`, `ZipCode`, and `Country`, with the values that the user provided.</span></span> <span data-ttu-id="59da6-105">응용 프로그램에 4 개를 포함 하는 패널 <xref:System.Windows.Controls.TextBox> 컨트롤을 각각 데이터가 개체의 속성 중 하나에 바인딩됩니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-105">The application has a panel that contains four <xref:System.Windows.Controls.TextBox> controls, each of which is data bound to one of the object's properties.</span></span> <span data-ttu-id="59da6-106">사용할 수는 <xref:System.Windows.Controls.ValidationRule> 에 <xref:System.Windows.Data.BindingGroup> 유효성을 검사 하는 `Address` 개체.</span><span class="sxs-lookup"><span data-stu-id="59da6-106">You can use a <xref:System.Windows.Controls.ValidationRule> in a <xref:System.Windows.Data.BindingGroup> to validate the `Address` object.</span></span> <span data-ttu-id="59da6-107">동일한 바인딩에 참여 하는 경우 <xref:System.Windows.Data.BindingGroup>, 주소의 국가 대 한 우편 번호가 올바른지 확인 하십시오.</span><span class="sxs-lookup"><span data-stu-id="59da6-107">If the bindings participate in the same <xref:System.Windows.Data.BindingGroup>, you can ensure that the zip-code is valid for the country of the address.</span></span>  
  
 <span data-ttu-id="59da6-108">설정 된 <xref:System.Windows.FrameworkElement.BindingGroup%2A> 속성을 <xref:System.Windows.FrameworkElement> 또는 <xref:System.Windows.FrameworkContentElement>합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-108">You set the <xref:System.Windows.FrameworkElement.BindingGroup%2A> property on <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="59da6-109">자식 요소에서 상속 된 <xref:System.Windows.Data.BindingGroup> 다른 상속 가능한 속성에서와 마찬가지로 해당 부모 요소에서.</span><span class="sxs-lookup"><span data-stu-id="59da6-109">Child elements inherit the <xref:System.Windows.Data.BindingGroup> from their parent elements, just as with any other inheritable property.</span></span> <span data-ttu-id="59da6-110">에 하위 요소를 바인딩에 추가 되는 <xref:System.Windows.Data.BindingGroup> 다음 상황 중 하나가 발생 하는 경우:</span><span class="sxs-lookup"><span data-stu-id="59da6-110">A binding on a descendent element is added to a <xref:System.Windows.Data.BindingGroup> if one of the following situations occurs:</span></span>  
  
-   <span data-ttu-id="59da6-111">바인딩의 소스 및 <xref:System.Windows.FrameworkElement.DataContext%2A> 있는 요소를 <xref:System.Windows.Data.BindingGroup> 가 같은 개체 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 속성이 설정 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-111">The binding's source and the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> are the same object and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="59da6-112"><xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 바인딩의 속성 값과 같음 합니다 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> 명시적으로 설정 되지 않은 및 `null`합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-112">The <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of the binding is equal to the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> and they are not explicitly set to `null`.</span></span>  
  
 <span data-ttu-id="59da6-113">주소의 예 된다고 가정 합니다 <xref:System.Windows.FrameworkElement.DataContext%2A> 의 <xref:System.Windows.Controls.Panel> 형식의 개체로 설정 됩니다 `Address`합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-113">In the example of the address, suppose that the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.Panel> is set to the object of type `Address`.</span></span> <span data-ttu-id="59da6-114">각각에 대 한 바인딩을 <xref:System.Windows.Controls.TextBox> 에 추가 되는 <xref:System.Windows.Data.BindingGroup> 패널의 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-114">The binding for each <xref:System.Windows.Controls.TextBox> is added to the <xref:System.Windows.Data.BindingGroup> of the panel.</span></span>  
  
 <span data-ttu-id="59da6-115">추가한 <xref:System.Windows.Controls.ValidationRule> 개체는 <xref:System.Windows.Data.BindingGroup>합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-115">You add <xref:System.Windows.Controls.ValidationRule> objects to a <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="59da6-116">합니다 <xref:System.Windows.Data.BindingGroup> 의 첫 번째 매개 변수로 전달 되는 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드 때는 <xref:System.Windows.Controls.ValidationRule> 실행 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-116">The <xref:System.Windows.Data.BindingGroup> is passed as the first parameter of the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method when the <xref:System.Windows.Controls.ValidationRule> runs.</span></span> <span data-ttu-id="59da6-117">사용할 수는 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 또는 <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 메서드를 <xref:System.Windows.Data.BindingGroup> 개체의 제안 된 값을 가져옵니다 및 <xref:System.Windows.Data.BindingGroup.Items%2A> 바인딩의 소스를 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-117">You can use the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> or <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method on that <xref:System.Windows.Data.BindingGroup> to get the proposed values of the object, and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the sources of the bindings.</span></span>  
  
 <span data-ttu-id="59da6-118"><xref:System.Windows.Data.BindingGroup> 개별적으로 업데이트 되 고 각 바인딩하는 대신 동시 바인딩 소스를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-118">A <xref:System.Windows.Data.BindingGroup> updates the sources of the binding at the same time instead of each binding being updated separately.</span></span> <span data-ttu-id="59da6-119">데이터의 유효성을 검사 하는 방법 중 하나를 호출 하는 경우 (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>, <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>, 또는 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>), 각각에 대 한 바인딩을 <xref:System.Windows.Controls.TextBox> 의 예에서는 유효성 검사 및 잠재적으로 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-119">When you call one of the methods to validate the data (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>, <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>, or <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>), the binding for each <xref:System.Windows.Controls.TextBox> in the example is validated and potentially updated.</span></span> <span data-ttu-id="59da6-120">바인딩을의 일부인 경우는 <xref:System.Windows.Data.BindingGroup>를 바인딩 소스를 호출할 때까지 업데이트 되지 않습니다 <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> 또는 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 에 <xref:System.Windows.Data.BindingGroup>명시적으로 설정 되지 않은 경우는 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="59da6-120">When a binding is part of a <xref:System.Windows.Data.BindingGroup>, the source of the binding is not updated until you call <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> or <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> on the <xref:System.Windows.Data.BindingGroup>, unless you explicitly set the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59da6-121">다음 예제에서는 항목의 가격 및 설명을 입력 하 라는 메시지를 표시 하는 응용 프로그램 및 제품이 만료 날짜를 만듭니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-121">The following examples create an application that prompts the user to enter the description and price of an item and the date that the offer expires.</span></span> <span data-ttu-id="59da6-122">응용 프로그램 폼 아래 항목에 대 한 현재 정보를 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-122">The application displays the current information for the item below the form.</span></span> <span data-ttu-id="59da6-123">사용자는 제출 하거나 변경 내용을 취소할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-123">The user can submit or cancel the changes.</span></span>  
  
 <span data-ttu-id="59da6-124">응용 프로그램에는이 동작을 달성 하려면 다음을 수행 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-124">The application does the following to achieve this behavior.</span></span>  
  
-   <span data-ttu-id="59da6-125">만듭니다는 <xref:System.Windows.Data.BindingGroup> 루트 추가 <xref:System.Windows.Controls.StackPanel> 를 만들 때의 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 응용 프로그램의 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-125">Creates a <xref:System.Windows.Data.BindingGroup> and adds it the root <xref:System.Windows.Controls.StackPanel> when it creates the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] of the application.</span></span>  
  
-   <span data-ttu-id="59da6-126">호출 <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>, 및 <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> 사용 하도록 설정 하는 응용 프로그램의 논리가 변경 내용 롤백.</span><span class="sxs-lookup"><span data-stu-id="59da6-126">Calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>, and <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> in the application's logic to enable rolling back changes.</span></span>  
  
-   <span data-ttu-id="59da6-127">호출 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 에 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드를 사용자의 입력을 가져오고 다음 7 일 이상 100 달러가 넘는 항목을 사용할 수를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-127">Calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> in a <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the user's input and then check that an item over 100 dollars is available for at least seven days.</span></span>  
  
 <span data-ttu-id="59da6-128">다음 예제에서는 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 응용 프로그램입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-128">The following example creates the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] of the application.</span></span> <span data-ttu-id="59da6-129">루트 <xref:System.Windows.Controls.StackPanel> 에 <xref:System.Windows.Data.BindingGroup> 포함 하는 <xref:System.Windows.Controls.ValidationRule> 앞에서 설명한 대로 항목을 유효성을 검사 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-129">The root <xref:System.Windows.Controls.StackPanel> has a <xref:System.Windows.Data.BindingGroup> that contains a <xref:System.Windows.Controls.ValidationRule> that validates the item, as described previously.</span></span> <span data-ttu-id="59da6-130">바인딩 개체를 `Price` 속성 및 `OfferExpires` 될 속성 부분 합니다 <xref:System.Windows.Data.BindingGroup> 각 바인딩에 및를 <xref:System.Windows.Controls.ValidationRule> 있는지 가격 및 날짜를 각각 유효한 값을 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-130">The binding objects on the `Price` property and the `OfferExpires` property become part of the <xref:System.Windows.Data.BindingGroup> and each binding has a <xref:System.Windows.Controls.ValidationRule> to make sure that price and date, respectively, are valid values.</span></span> <span data-ttu-id="59da6-131">개별 속성에 대 한 유효성 검사 규칙을 실행 하기 전에 합니다 <xref:System.Windows.Controls.ValidationRule> 에 <xref:System.Windows.Data.BindingGroup>합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-131">The validation rules for the individual properties run before the <xref:System.Windows.Controls.ValidationRule> on the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 <span data-ttu-id="59da6-132">다음 예제에서는 응용 프로그램에 대 한 이벤트 처리기를 보여 줍니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-132">The following example shows the event handlers for the application.</span></span> <span data-ttu-id="59da6-133">사용자가 제출 단추를 클릭 하면 응용 프로그램 호출 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 개의 실행 하려면 <xref:System.Windows.Controls.ValidationRule> 연관 된는 <xref:System.Windows.Data.BindingGroup>합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-133">When the user clicks the Submit button, the application calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to run each <xref:System.Windows.Controls.ValidationRule> that is associated with the <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="59da6-134">경우 각 <xref:System.Windows.Controls.ValidationRule> 성공 하면 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 편집 트랜잭션을 끝내 고 개체에 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-134">If each <xref:System.Windows.Controls.ValidationRule> succeeds, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> saves the values to the object and ends the edit transaction.</span></span> <span data-ttu-id="59da6-135">경우 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 가 성공 하면 응용 프로그램이 다른 편집 트랜잭션을 시작 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-135">If <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> is successful, the application begins another edit transaction.</span></span> <span data-ttu-id="59da6-136">경우는 <xref:System.Windows.Controls.ValidationRule> 실패 하면를 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 응용 프로그램 설정 때문에 이벤트가 발생 <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> 를 `true` 에 <xref:System.Windows.Data.BindingGroup> (이전 예제의).</span><span class="sxs-lookup"><span data-stu-id="59da6-136">When a <xref:System.Windows.Controls.ValidationRule> fails, the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event occurs because the application set <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` on the <xref:System.Windows.Data.BindingGroup> (in the previous example).</span></span> <span data-ttu-id="59da6-137">`ItemError` 핸들을 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 사용자에 게 유효성 검사 오류에 대 한 이벤트 및 표시 정보입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-137">`ItemError` handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event and displays information about the validation error to the user.</span></span> <span data-ttu-id="59da6-138">예제도 처리를 <xref:System.Windows.FrameworkElement.Loaded> 에 대 한 이벤트를 <xref:System.Windows.Controls.StackPanel> 및 <xref:System.Windows.Controls.Primitives.ButtonBase.Click> 에 대 한 이벤트를 **취소** 단추.</span><span class="sxs-lookup"><span data-stu-id="59da6-138">The example also handles the <xref:System.Windows.FrameworkElement.Loaded> event for the <xref:System.Windows.Controls.StackPanel> and the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event for the **Cancel** button.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#WindowLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#windowlogic)]
 [!code-vb[BindingGroupSnippets#WindowLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#windowlogic)]  
  
 <span data-ttu-id="59da6-139">다음 예제에서는 사용자 지정 <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`에 추가 됨을 <xref:System.Windows.Data.BindingGroup> 첫 번째 예제에서입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-139">The following example shows the custom <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`, which was added to the <xref:System.Windows.Data.BindingGroup> in the first example.</span></span> <span data-ttu-id="59da6-140"><xref:System.Windows.Controls.ValidationRule> 사용 하 여는 <xref:System.Windows.Data.BindingGroup> 에서 해당 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드 양식과 100 달러 개 항목을 사용 하는 경우이 수 있는 최소 7 일 동안 확인에 입력 한 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-140">The <xref:System.Windows.Controls.ValidationRule> uses the <xref:System.Windows.Data.BindingGroup> in its <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59da6-141"><see cref="T:System.Windows.Data.BindingGroup" /> 클래스의 새 인스턴스를 초기화합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-141">Initializes a new instance of the <see cref="T:System.Windows.Data.BindingGroup" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="bindingGroup.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59da6-142">원본에 대 한 편집 트랜잭션을 시작 합니다 <see cref="T:System.Windows.Data.BindingGroup" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-142">Begins an edit transaction on the sources in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59da6-143">경우 원본에는 <xref:System.Windows.Data.BindingGroup> 보류 중인 변경 내용 취소 지원, 호출할 수 있습니다 <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 편집 트랜잭션을 시작 하려면 호출 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 보류 중인 변경 내용을 저장 하려면 호출 <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> 보류 중인 변경 내용을 취소 하 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-143">If the sources in the <xref:System.Windows.Data.BindingGroup> support discarding pending changes, you can call <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to begin the edit transaction, call <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to save the pending changes, call <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> to discard the pending changes.</span></span>  
  
 <span data-ttu-id="59da6-144">각 개체에 대해 <xref:System.Windows.Data.BindingGroup.Items%2A> 구현 하는 <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 호출 <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="59da6-144">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> calls <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59da6-145">다음 예제에서는 <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 편집 트랜잭션을 시작 하는 창이 로드 되는 경우.</span><span class="sxs-lookup"><span data-stu-id="59da6-145">The following example calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> when a window loads to begin the edit transaction.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt; BindingExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; BindingExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingExpressions As Collection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ BindingExpressions { System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingExpressions : System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;" Usage="System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59da6-146">컬렉션을 가져옵니다 <see cref="T:System.Windows.Data.BindingExpression" /> 개체의 각 바인딩에 대 한 정보를 포함 하는 <see cref="T:System.Windows.Data.BindingGroup" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-146">Gets a collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects that contains information for each Binding in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <value><span data-ttu-id="59da6-147">컬렉션인 <see cref="T:System.Windows.Data.BindingExpression" /> 개체의 각 바인딩에 대 한 정보를 포함 하는 <see cref="T:System.Windows.Data.BindingGroup" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-147">A collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects that contains information for each binding in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59da6-148">A <xref:System.Windows.Data.BindingExpression> 속한는 <xref:System.Windows.Data.BindingGroup> 다음 경우 중 하나가 발생 하는 경우:</span><span class="sxs-lookup"><span data-stu-id="59da6-148">A <xref:System.Windows.Data.BindingExpression> belongs to a <xref:System.Windows.Data.BindingGroup> if one of the following cases occurs:</span></span>  
  
-   <span data-ttu-id="59da6-149">바인딩의 소스 및 <xref:System.Windows.FrameworkElement.DataContext%2A> 에 요소는 <xref:System.Windows.Data.BindingGroup> 가 같은 개체 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 설정 되지 않았습니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-149">The binding's source and the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> are the same object and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is not set.</span></span>  
  
-   <span data-ttu-id="59da6-150"><xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 바인딩의 속성 및 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.Data.BindingGroup> 동일한 null이 아닌 값으로 설정 됩니다 및 <xref:System.Windows.Data.BindingGroup> 바인딩의 대상 요소의 부모 요소에 속합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-150">The <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of the binding and the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> are set to the same non-null value and the <xref:System.Windows.Data.BindingGroup> belongs to a parent element of the binding's target element.</span></span>  
  
-   <span data-ttu-id="59da6-151">추가 된 <xref:System.Windows.Data.BindingExpression> 에 <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-151">You add a <xref:System.Windows.Data.BindingExpression> to <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="bindingGroup.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59da6-152">편집 트랜잭션을 끝내 고 보류 중인 변경 내용을 취소 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-152">Ends the edit transaction and discards the pending changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59da6-153">이 메서드는 소스를입니다. 원본 개체를 계속할 수 있는 경우 보류 중인 변경 내용을 취소 하 고 편집 트랜잭션을 종료 시킵니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-153">This method causes the sources to discard the pending changes, if a source object is capable of doing so and end the edit transaction.</span></span> <span data-ttu-id="59da6-154">다음 메서드는 저장 된 원본 값을 사용 하 여 대상 속성을 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-154">Then the method updates the target properties with the saved source values.</span></span>  
  
 <span data-ttu-id="59da6-155">각 개체에 대해 <xref:System.Windows.Data.BindingGroup.Items%2A> 구현 하는 <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> 호출 <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="59da6-155">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> calls <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59da6-156">다음 예제에서는 <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> 보류 중인 변경 내용 및 다음 호출을 삭제 하려면 <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 소스를 다시 편집할 준비를 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-156">The following example calls <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> to discard the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[BindingGroupSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRestoreValues">
      <MemberSignature Language="C#" Value="public bool CanRestoreValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRestoreValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRestoreValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRestoreValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRestoreValues : bool" Usage="System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59da6-157">바인딩의 각 소스에서 보류 중인 변경 내용을 삭제 하 고 원래 값을 복원할 수 있는지 여부를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-157">Gets whether each source in the binding can discard pending changes and restore the original values.</span></span></summary>
        <value><span data-ttu-id="59da6-158"><see langword="true" /> 바인딩의 각 소스에서 보류 중인 변경 내용을 취소 하 고 원래 값을 복원할 수 있으면 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-158"><see langword="true" /> if each source in the binding can discard pending changes and restore the original values; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59da6-159">구현 하는 경우 원본 보류 중인 변경 내용을 취소할 수 <xref:System.ComponentModel.IEditableObject>입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-159">A source can discard pending changes if it implements <xref:System.ComponentModel.IEditableObject>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public bool CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function CommitEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CommitEdit();" />
      <MemberSignature Language="F#" Value="member this.CommitEdit : unit -&gt; bool" Usage="bindingGroup.CommitEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59da6-160">모든 실행을 <see cref="T:System.Windows.Controls.ValidationRule" /> 개체 및 모든 유효성 검사 규칙이 성공 하는 경우 바인딩 소스를 업데이트 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-160">Runs all the <see cref="T:System.Windows.Controls.ValidationRule" /> objects and updates the binding sources if all validation rules succeed.</span></span></summary>
        <returns><span data-ttu-id="59da6-161"><see langword="true" /> 모든 경우 <see cref="T:System.Windows.Controls.ValidationRule" /> 성공 하면 값이 고, 그렇지 않으면에 커밋되면 sources 및 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-161"><see langword="true" /> if every <see cref="T:System.Windows.Controls.ValidationRule" /> succeeds and the values are committed to the sources; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59da6-162">모든 경우 <xref:System.Windows.Controls.ValidationRule> 성공 하면 원본 개체를 계속할 수 있는 경우이 방법을 사용 하면 소스입니다. 보류 중인 변경 내용을 커밋하고 편집 트랜잭션을 종료 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-162">If every <xref:System.Windows.Controls.ValidationRule> succeeds, this method causes the sources to commit the pending changes and end the edit transaction, if a source object is capable of doing so.</span></span>  
  
 <span data-ttu-id="59da6-163">각 개체에 대해 <xref:System.Windows.Data.BindingGroup.Items%2A> 구현 하는 <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 호출 <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="59da6-163">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> calls <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59da6-164">다음 예제에서는 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 보류 중인 변경 내용 및 다음 호출을 저장 하려면 <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> 소스를 다시 편집할 준비를 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-164">The following example calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to save the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object item, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(object item, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (item As Object, propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ item, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetValue : obj * string -&gt; obj" Usage="bindingGroup.GetValue (item, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="59da6-165">지정된 된 속성을 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-165">The object that contains the specified property.</span></span></param>
        <param name="propertyName"><span data-ttu-id="59da6-166">속성을 가져올 제안 된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-166">The property whose proposed value to get.</span></span></param>
        <summary><span data-ttu-id="59da6-167">지정 된 속성 및 항목에 대 한 제안 된 값을 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-167">Returns the proposed value for the specified property and item.</span></span></summary>
        <returns><span data-ttu-id="59da6-168">제안 된 속성 값입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-168">The proposed property value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59da6-169">이 메서드를 사용 합니다 <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> 메서드는 소스에 커밋할 수 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-169">Use this method in the <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> method to get the value to be committed to the source.</span></span> <span data-ttu-id="59da6-170">반환 값 유형의 하는 단계에 따라 달라 집니다는 <xref:System.Windows.Controls.ValidationRule> 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-170">The type of the return value depends on the stage at which the <xref:System.Windows.Controls.ValidationRule> occurs.</span></span> <span data-ttu-id="59da6-171">예를 들어 경우는 <xref:System.Windows.Controls.TextBox> 정수 형식의 속성에 바인딩된 데이터 및 <xref:System.Windows.Controls.ValidationRule> 를 호출 하는 <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 에 해당 <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> 로 <xref:System.Windows.Controls.ValidationStep.RawProposedValue>, 메서드는 문자열을 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-171">For example, if a <xref:System.Windows.Controls.TextBox> is data bound to a property of type integer and the <xref:System.Windows.Controls.ValidationRule> that calls <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.RawProposedValue>, the method returns a string.</span></span> <span data-ttu-id="59da6-172">경우는 <xref:System.Windows.Controls.ValidationRule> 에 해당 <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> 로 <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, 메서드가 바인딩의 변환기에서 반환 되는 형식에 관계 없이 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-172">If the <xref:System.Windows.Controls.ValidationRule> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, the method returns whatever type that is returned by the binding's converter.</span></span> <span data-ttu-id="59da6-173">이 예제에서는 <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 일반적으로 정수를 반환 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-173">In this example, <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> usually returns an integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59da6-174">다음 예제는 여러 고객을 입력 하 고 각 고객에 게는 영업 담당자를 할당 하 라는 메시지는 응용 프로그램의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-174">The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer.</span></span> <span data-ttu-id="59da6-175">응용 프로그램 판매 담당자와 고객 동일한 지역에 속해 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-175">The application checks that the sales representative and the customer belong to the same region.</span></span> <span data-ttu-id="59da6-176">예제에 나와 있는 합니다 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드를 사용 하는 <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 고객이 입력 한 값을 가져오는 방법입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-176">The example shows the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, which uses the <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method to get values that the customer entered.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#itembindgroupvalidationrule)]
 [!code-vb[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#itembindgroupvalidationrule)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="59da6-177">지정 된 항목 및 속성에 대 한 바인딩을 아닙니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-177">There is not a binding for the specified item and property.</span></span></exception>
        <exception cref="T:System.Windows.Data.ValueUnavailableException"><span data-ttu-id="59da6-178">지정된 된 속성의 값이 변환 오류로 인해 사용할 수 없거나 유효성 검사 규칙을 이전에 실패 했습니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-178">The value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasValidationError">
      <MemberSignature Language="C#" Value="public bool HasValidationError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidationError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidationError : bool" Usage="System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59da6-179">나타내는 값을 가져옵니다 여부는 <see cref="T:System.Windows.Data.BindingGroup" /> 실패 한 유효성 검사 규칙이 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-179">Gets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> has a failed validation rule.</span></span></summary>
        <value><span data-ttu-id="59da6-180"><see langword="true" /> 경우는 <see cref="T:System.Windows.Data.BindingGroup" /> 실패 한 유효성 검사 규칙이 고, 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-180"><see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> has a failed validation rule; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Windows.Data.BindingGroup.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59da6-181">지정 하는 값을 가져오거나 설정 합니다. 여부를 <see cref="T:System.Windows.Data.BindingGroup" /> 소스에 기록 되지 않은 제안 된 값을 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-181">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> contains a proposed value that has not been written to the source.</span></span></summary>
        <value><span data-ttu-id="59da6-182"><see langword="true" /> 경우는 <see cref="T:System.Windows.Data.BindingGroup" /> 고, 그렇지 않으면 소스에 작성 되지 않은 제안된 값이 들어 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-182"><see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> contains a proposed value that has not been written to the source; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.IList Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Items { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.IList" Usage="System.Windows.Data.BindingGroup.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59da6-183">바인딩 개체에 사용 되는 소스를 가져옵니다는 <see cref="T:System.Windows.Data.BindingGroup" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-183">Gets the sources that are used by the Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <value><span data-ttu-id="59da6-184">바인딩 개체에 사용 되는 소스를 <see cref="T:System.Windows.Data.BindingGroup" />입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-184">The sources that are used by the Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59da6-185">원본에 추가 됨에 따라 사용 되는 각 개체는 <xref:System.Windows.Data.BindingGroup.Items%2A> 속성을 한 번에 여러 바인딩에 대 한 개체를 원본으로 사용 되는 경우에 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-185">Each object that is used as a source is added into the <xref:System.Windows.Data.BindingGroup.Items%2A> property once, even if the object is used as the source for multiple bindings.</span></span> <span data-ttu-id="59da6-186">종종 항목이 하나만에서 <xref:System.Windows.Data.BindingGroup.Items%2A>는 개체인를 <xref:System.Windows.FrameworkElement.DataContext%2A> 를 사용 하는 요소는 <xref:System.Windows.Data.BindingGroup>.</span><span class="sxs-lookup"><span data-stu-id="59da6-186">Often, there is just one item in <xref:System.Windows.Data.BindingGroup.Items%2A>, which is the object that is the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that uses the <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="59da6-187">하지만 이기는 <xref:System.Windows.Data.BindingGroup> 여러 원본에 있어야 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-187">It is possible for a <xref:System.Windows.Data.BindingGroup> to have multiple sources, however.</span></span> <span data-ttu-id="59da6-188">예를 들어 동일한 바인딩 개체 공유 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 다양 한 원본 개체를 사용 하지만 원본으로 사용 되는 각 개체에는 <xref:System.Windows.Data.BindingGroup.Items%2A>합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-188">For example, if Binding objects share the same <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> but use different source objects, each object that is used as a source is in <xref:System.Windows.Data.BindingGroup.Items%2A>.</span></span>  
  
 <span data-ttu-id="59da6-189">여러 개체에 있을 수도 있습니다 <xref:System.Windows.Data.BindingGroup.Items%2A> 원본의 중첩 된 속성에 바인딩 경로 확인 하는 경우.</span><span class="sxs-lookup"><span data-stu-id="59da6-189">There can also be multiple objects in <xref:System.Windows.Data.BindingGroup.Items%2A> if the path of a Binding resolves to a nested property of the source.</span></span> <span data-ttu-id="59da6-190">예를 들어를 <xref:System.Windows.Controls.TextBox> 컨트롤의 바인딩의 일부인를 <xref:System.Windows.Data.BindingGroup> 및 해당 <xref:System.Windows.FrameworkElement.DataContext%2A> 가 `Customer` 형식의 속성이 있는 개체 `Address`합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-190">For example, suppose a <xref:System.Windows.Controls.TextBox> control's binding is a part of a <xref:System.Windows.Data.BindingGroup> and its <xref:System.Windows.FrameworkElement.DataContext%2A> is a `Customer` object, which has a property of type `Address`.</span></span> <span data-ttu-id="59da6-191">경우는 <xref:System.Windows.Data.Binding.Path%2A> 의 <xref:System.Windows.Data.Binding> 는 `Address.ZipCode` 속성인을 `Address` 에 추가 됩니다는 <xref:System.Windows.Data.BindingGroup.Items%2A> 속성.</span><span class="sxs-lookup"><span data-stu-id="59da6-191">If the <xref:System.Windows.Data.Binding.Path%2A> of the <xref:System.Windows.Data.Binding> is the `Address.ZipCode` property, the `Address` is added to the <xref:System.Windows.Data.BindingGroup.Items%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59da6-192">다음 예제는 사용자가 값과 동일 하 게 두 개체의 속성을 설정 하는지 여부를 확인 하는 응용 프로그램의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-192">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="59da6-193">첫 번째 예제에서는 두 개의 <xref:System.Windows.Controls.TextBox> 각각은 서로 다른 소스에 바인딩된 데이터 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-193">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source.</span></span> <span data-ttu-id="59da6-194">첫 번째의 바인딩을 <xref:System.Windows.Controls.TextBox> 해당 소스를 가져옵니다 `object1`에서 <xref:System.Windows.FrameworkElement.DataContext%2A> 의 <xref:System.Windows.Controls.TextBox> 컨트롤의 부모 요소 (의 <xref:System.Windows.Controls.StackPanel>).</span><span class="sxs-lookup"><span data-stu-id="59da6-194">The binding of the first <xref:System.Windows.Controls.TextBox> gets its source, `object1`, from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.TextBox> control's parent element (the <xref:System.Windows.Controls.StackPanel>).</span></span> <span data-ttu-id="59da6-195">두 번째 <xref:System.Windows.Controls.TextBox>, 바인딩 소스를로 `object2`합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-195">On the second <xref:System.Windows.Controls.TextBox>, the source of the binding is set to `object2`.</span></span> <span data-ttu-id="59da6-196">예제에서는 <xref:System.Windows.Controls.Label> 유효성 검사 오류를 표시 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-196">The example also creates a <xref:System.Windows.Controls.Label> that displays validation errors.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 <span data-ttu-id="59da6-197">다음 예제는 <xref:System.Windows.Controls.ValidationRule> 앞의 예제를 사용 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-197">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span> <span data-ttu-id="59da6-198">에 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드를 예제에서 각 원본 개체를 가져옵니다는 <xref:System.Windows.Data.BindingGroup> 개체 속성이 같은지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-198">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Data.BindingGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59da6-199">식별 하는 이름을 가져오거나 설정 합니다.는 <see cref="T:System.Windows.Data.BindingGroup" />, 포함 및 제외에서 바인딩 개체를 사용할 수 있는 <see cref="T:System.Windows.Data.BindingGroup" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-199">Gets or sets the name that identifies the <see cref="T:System.Windows.Data.BindingGroup" />, which can be used to include and exclude Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <value><span data-ttu-id="59da6-200">식별 하는 이름은 <see cref="T:System.Windows.Data.BindingGroup" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-200">The name that identifies the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59da6-201">경우 <xref:System.Windows.Data.BindingGroup.Name%2A> 는 `null`, 소스와 같은 개체를 바인딩이 <xref:System.Windows.FrameworkElement.DataContext%2A> 있는 요소의 <xref:System.Windows.Data.BindingGroup> 참여할는 <xref:System.Windows.Data.BindingGroup>.</span><span class="sxs-lookup"><span data-stu-id="59da6-201">If <xref:System.Windows.Data.BindingGroup.Name%2A> is `null`, bindings that have a source that is the same object as the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> participate in the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 <span data-ttu-id="59da6-202">다른 소스가 있는 바인딩을 포함할 수 있습니다는 <xref:System.Windows.FrameworkElement.DataContext%2A> 있는 부모 요소의 합니다 <xref:System.Windows.Data.BindingGroup> 설정 하 여 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.Data.BindingGroup> 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 동일한 값에 대 한 바인딩의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-202">You can include bindings that have a source that is different from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to the same value.</span></span> <span data-ttu-id="59da6-203">동일한 소스에 있는 바인딩을 제외할 수 있습니다 <xref:System.Windows.FrameworkElement.DataContext%2A> 있는 부모 요소의 합니다 <xref:System.Windows.Data.BindingGroup> 설정 하 여 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.Data.BindingGroup> 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 서로 다른 값에 대 한 바인딩의 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-203">You can exclude bindings that have the same source as <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to different values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59da6-204">다음 예제는 사용자가 값과 동일 하 게 두 개체의 속성을 설정 하는지 여부를 확인 하는 응용 프로그램의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-204">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="59da6-205">첫 번째 예제에서는 두 개의 <xref:System.Windows.Controls.TextBox> 각각은 서로 다른 소스에 바인딩된 데이터 컨트롤입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-205">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source.</span></span> <span data-ttu-id="59da6-206">첫 번째 바인딩 <xref:System.Windows.Controls.TextBox> 의 일부인 합니다 <xref:System.Windows.Data.BindingGroup> 때문에 <xref:System.Windows.Controls.TextBox> 상속를 <xref:System.Windows.FrameworkElement.DataContext%2A> 및 <xref:System.Windows.Data.BindingGroup> 부모 로부터 <xref:System.Windows.Controls.StackPanel>합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-206">The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel>.</span></span>  
  
 <span data-ttu-id="59da6-207">두 번째 바인딩 <xref:System.Windows.Controls.TextBox> 의 일부인 합니다 <xref:System.Windows.Data.BindingGroup> 때문에 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.Data.BindingGroup> 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 의 <xref:System.Windows.Data.Binding> 로 설정 됩니다 `bindingGroup`합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-207">The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 <span data-ttu-id="59da6-208">다음 예제는 <xref:System.Windows.Controls.ValidationRule> 앞의 예제를 사용 하는 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-208">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span> <span data-ttu-id="59da6-209">에 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드를 예제에서 각 원본 개체를 가져옵니다는 <xref:System.Windows.Data.BindingGroup> 개체 속성이 같은지 여부를 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-209">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59da6-210">가져오거나 설정 여부를 <see cref="E:System.Windows.Controls.Validation.Error" /> 이벤트가 발생할 때의 상태를 <see cref="T:System.Windows.Controls.ValidationRule" /> 변경 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-210">Gets or sets whether the <see cref="E:System.Windows.Controls.Validation.Error" /> event occurs when the state of a <see cref="T:System.Windows.Controls.ValidationRule" /> changes.</span></span></summary>
        <value><span data-ttu-id="59da6-211"><see langword="true" /> 경우는 <see cref="E:System.Windows.Controls.Validation.Error" /> 이벤트가 발생할 때의 상태를 <see cref="T:System.Windows.Controls.ValidationRule" /> 변경;이 고, 그렇지 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-211"><see langword="true" /> if the <see cref="E:System.Windows.Controls.Validation.Error" /> event occurs when the state of a <see cref="T:System.Windows.Controls.ValidationRule" /> changes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="59da6-212">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-212">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59da6-213">합니다 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 있는 요소에서 연결 된 이벤트가 발생 된 <xref:System.Windows.Data.BindingGroup>합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-213">The <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> attached event occurs on the element that has the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59da6-214">다음 예제에서는 <xref:System.Windows.Data.BindingGroup> 설정 및 <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> 에 `true` 응용 프로그램에서 처리할 수 있도록 합니다 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 이벤트 때를 <xref:System.Windows.Controls.ValidationRule> 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-214">The following example creates a <xref:System.Windows.Data.BindingGroup> and sets <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` so that the application can handle the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event when a <xref:System.Windows.Controls.ValidationRule> fails.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 <span data-ttu-id="59da6-215">다음 예제에서는 처리 된 <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-215">The following example handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ErrorHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#errorhandler)]
 [!code-vb[BindingGroupSnippets#ErrorHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#errorhandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Owner { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.DependencyObject" Usage="System.Windows.Data.BindingGroup.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59da6-216">개체를 가져와이 <see cref="T:System.Windows.Data.BindingGroup" /> 에 할당 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-216">Gets the object that this <see cref="T:System.Windows.Data.BindingGroup" /> is assigned to.</span></span></summary>
        <value><span data-ttu-id="59da6-217">개체가이 <see cref="T:System.Windows.Data.BindingGroup" /> 에 할당 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-217">The object that this <see cref="T:System.Windows.Data.BindingGroup" /> is assigned to.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharesProposedValues">
      <MemberSignature Language="C#" Value="public bool SharesProposedValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SharesProposedValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SharesProposedValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SharesProposedValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SharesProposedValues : bool with get, set" Usage="System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59da6-218">지정 하는 값을 가져오거나 설정 합니다. 여부는 <see cref="T:System.Windows.Data.BindingGroup" /> 대상 소스에 커밋되지 않은 값을 다시 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-218">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> reuses target values that have not been committed to the source.</span></span></summary>
        <value><span data-ttu-id="59da6-219"><see langword="true" /> 경우는 <see cref="T:System.Windows.Data.BindingGroup" /> 대상 고, 그렇지 않으면 소스에 커밋되지 않은 값을 다시 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-219"><see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> reuses target values that have not been committed to the source; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="59da6-220">기본값은 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-220">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59da6-221">제안 된 값에 바인딩의 대상 쪽에서 변경 되었지만 소스에 커밋되지 않은 하는 값이입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-221">A proposed value is a value that has been changed on the target of a binding, but has not been committed to the source.</span></span> <span data-ttu-id="59da6-222">예를 들어, 한지를 양방향 바인딩으로 <xref:System.Windows.Controls.TextBox> 하며 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 속성이 <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-222">For example, suppose that there is a two-way binding on a <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property is set to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>.</span></span> <span data-ttu-id="59da6-223">사용자의 값을 변경 하는 경우는 <xref:System.Windows.Controls.TextBox>, 제안된 된 값에 있는 값이는 <xref:System.Windows.Controls.TextBox> 원본에 커밋되기 전에 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-223">If the user changes the value of the <xref:System.Windows.Controls.TextBox>, the proposed value is the value that is in the <xref:System.Windows.Controls.TextBox> before it is committed to source.</span></span>  
  
 <span data-ttu-id="59da6-224">때 <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> 됩니다 `true`는 <xref:System.Windows.Data.BindingGroup> 바인딩이 두 개는 BindingGroup 떠나고 같은 소스를 사용 하 여 다른 바인딩 BindingGroup를 조인 하는 경우 제안 된 값을 사용 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-224">When <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> is `true`, the <xref:System.Windows.Data.BindingGroup> uses the proposed value when one binding leaves the BindingGroup and another Binding with the same source joins the BindingGroup.</span></span>  <span data-ttu-id="59da6-225">예를 들어, 응용 프로그램을 통해 여러 필드를 편집 하 고 단추를 클릭 하 여 원본 개체를 업데이트 하는 사용자 수 있음을 가정 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-225">For example, suppose that an application enables a user to edit multiple fields and update the source object by clicking a button.</span></span> <span data-ttu-id="59da6-226">응용 프로그램에서 표시 하는 필드를 편집 되지 않는 경우는 <xref:System.Windows.Controls.TextBlock>합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-226">When a field is not being edited, the application displays it in a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="59da6-227">사용자 필드 편집을 시작 하는 경우 응용 프로그램 대체 합니다 <xref:System.Windows.Controls.TextBlock> 사용 하 여는 <xref:System.Windows.Controls.TextBox>합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-227">When the user begins to edit a field, the application replaces the <xref:System.Windows.Controls.TextBlock> with a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="59da6-228">사용자가 해당 필드의 편집을 마치면 응용 프로그램을 대체 합니다 <xref:System.Windows.Controls.TextBox> 사용 하 여를 <xref:System.Windows.Controls.TextBlock>입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-228">When the user finishes editing that field, the application replaces the <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="59da6-229">에 대 한 방법이 있어야 하므로 사용자가 단추를 클릭할 때까지 소스를 업데이트 하지 않으면는 <xref:System.Windows.Controls.TextBlock> 제안 된 값을 표시 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-229">Because the source is not updated until the user clicks the button, there must be a way for the <xref:System.Windows.Controls.TextBlock> to display the proposed value.</span></span> <span data-ttu-id="59da6-230">설정 하 여 <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> 에 `true`를 소스 업데이트 되지 않은 경우에 응용 프로그램 필드에 사용자의 변경 내용이 표시 됩니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-230">By setting <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> to `true`, the application will display the user's changes to a field even when the source has not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (object item, string propertyName, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(object item, string propertyName, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (item As Object, propertyName As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(System::Object ^ item, System::String ^ propertyName, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : obj * string *  -&gt; bool" Usage="bindingGroup.TryGetValue (item, propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="59da6-231">지정된 된 속성을 포함 하는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-231">The object that contains the specified property.</span></span></param>
        <param name="propertyName"><span data-ttu-id="59da6-232">속성을 가져올 제안 된 값입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-232">The property whose proposed value to get.</span></span></param>
        <param name="value"><span data-ttu-id="59da6-233">이 메서드가 반환 하는 경우 제안 된 속성 값을 나타내는 개체를 포함 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-233">When this method returns, contains an object that represents the proposed property value.</span></span> <span data-ttu-id="59da6-234">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-234">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="59da6-235">지정 된 속성 및 항목에 대 한 제안 된 값을 가져오려고 시도 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-235">Attempts to get the proposed value for the specified property and item.</span></span></summary>
        <returns><span data-ttu-id="59da6-236"><see langword="true" /> 값이 지정 된 속성에 대 한 제안 된 값 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-236"><see langword="true" /> if value is the proposed value for the specified property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59da6-237"><xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 반환 `false` 지정한 항목 및 속성에 대 한 바인딩이 없는 경우 지정된 된 속성의 값을 변환 오류로 인해 사용할 수 없는 경우 또는 이전 유효성 검사 규칙을 실패 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-237"><xref:System.Windows.Data.BindingGroup.TryGetValue%2A> returns `false` if there is not a binding for the specified item and property or if the value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</span></span>  
  
 <span data-ttu-id="59da6-238">이 메서드를 사용 합니다 <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> 메서드는 소스에 커밋할 수 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-238">Use this method in the <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> method to get the value to be committed to the source.</span></span> <span data-ttu-id="59da6-239">형식 `value` 하는 단계에 따라 달라 집니다는 <xref:System.Windows.Controls.ValidationRule> 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-239">The type `value` depends on the stage at which the <xref:System.Windows.Controls.ValidationRule> occurs.</span></span> <span data-ttu-id="59da6-240">예를 들어 경우는 <xref:System.Windows.Controls.TextBox> 정수 형식의 속성에 바인딩된 데이터가 `value` 문자열인 경우를 <xref:System.Windows.Controls.ValidationRule> 호출 하는 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 에 해당 <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> 로 <xref:System.Windows.Controls.ValidationStep.RawProposedValue>합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-240">For example, if a <xref:System.Windows.Controls.TextBox> is data bound to a property of type integer, `value` is a string if the <xref:System.Windows.Controls.ValidationRule> that calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.RawProposedValue>.</span></span> <span data-ttu-id="59da6-241">경우는 <xref:System.Windows.Controls.ValidationRule> 에 해당 <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> 로 설정 <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, 형식의 `value` 바인딩의 변환기에서 반환 되는 모든 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-241">If the <xref:System.Windows.Controls.ValidationRule> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, the type of `value` is whatever type that is returned by the binding's converter.</span></span> <span data-ttu-id="59da6-242">이 예제에서는 `value` 는 일반적으로 정수입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-242">In this example, `value` is usually an integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59da6-243">다음 예제에서는 사용자 지정 <xref:System.Windows.Controls.ValidationRule> 라는 `ValidateDateAndPrice`합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-243">The following example creates a custom <xref:System.Windows.Controls.ValidationRule> named `ValidateDateAndPrice`.</span></span> <span data-ttu-id="59da6-244">에 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드를 사용 하 여 합니다 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 메서드 및 <xref:System.Windows.Data.BindingGroup.Items%2A> 사용자가 양식에 입력 한 값을 가져올 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-244">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example uses the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> method and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the values the user entered into the form.</span></span> <span data-ttu-id="59da6-245">다음 예제에서는 100 달러 개 항목을 사용 하는 경우이 수 있는 최소 7 일 동안 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-245">Then the example checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span> <span data-ttu-id="59da6-246">이 예제는에서 더 큰 예제의 일부는 <xref:System.Windows.Data.BindingGroup> 클래스</span><span class="sxs-lookup"><span data-stu-id="59da6-246">This example is part of a larger example on the <xref:System.Windows.Data.BindingGroup> class</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSources">
      <MemberSignature Language="C#" Value="public bool UpdateSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UpdateSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.UpdateSources" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateSources () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UpdateSources();" />
      <MemberSignature Language="F#" Value="member this.UpdateSources : unit -&gt; bool" Usage="bindingGroup.UpdateSources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59da6-247">바인딩에 대해 변환기를 실행 및 <see cref="T:System.Windows.Controls.ValidationRule" /> 있는 개체를 <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> 속성이로 설정 <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />를 <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />, 또는 <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> 모든 유효성 검사 규칙이 성공 하는 경우 원본 개체를 대상의 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-247">Runs the converter on the binding and the <see cref="T:System.Windows.Controls.ValidationRule" /> objects that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />, <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />, or <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> and saves the values of the targets to the source objects if all the validation rules succeed.</span></span></summary>
        <returns><span data-ttu-id="59da6-248"><see langword="true" /> 모든 유효성 검사 규칙이 성공 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-248"><see langword="true" /> if all validation rules succeed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59da6-249">이 메서드는 모든 경우의 소스를 업데이트 <xref:System.Windows.Controls.ValidationRule> 성공 하면 소스입니다. 보류 중인 변경 내용을 커밋하고 편집 트랜잭션을 종료 시 키 지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-249">This method updates the source if every <xref:System.Windows.Controls.ValidationRule> succeeds, but it does not cause the sources to commit the pending changes and end the edit transaction.</span></span> <span data-ttu-id="59da6-250">즉, 원본 개체를 구현 하는 경우 <xref:System.ComponentModel.IEditableObject>합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-250">That is, if the source object implements <xref:System.ComponentModel.IEditableObject>.</span></span> <span data-ttu-id="59da6-251">이 메서드에서 발생 하지 않습니다 호출 <xref:System.ComponentModel.IEditableObject.EndEdit%2A> 호출할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-251">Calling this method does not cause <xref:System.ComponentModel.IEditableObject.EndEdit%2A> to be called.</span></span> <span data-ttu-id="59da6-252">사용 된 <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> 메서드를 사용 하려면 소스 보류 중인 변경 내용을 커밋합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-252">Use the <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> method to have the sources commit the pending changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59da6-253">다음 예제는 여러 고객을 입력 하 고 각 고객에 게는 영업 담당자를 할당 하 라는 메시지는 응용 프로그램의 일부입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-253">The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer.</span></span> <span data-ttu-id="59da6-254">응용 프로그램 판매 담당자와 고객 동일한 지역에 속해 있는지 확인 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-254">The application checks that the sales representative and the customer belong to the same region.</span></span> <span data-ttu-id="59da6-255">예제에서는 <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> 바인딩을 유효성을 검사 하 여 모든 유효성 검사 규칙이 성공 하는 경우 원본에 값을 저장 합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-255">The example calls <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> to validate the bindings and save the values to the source if all the validation rules succeed.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#UpdateSources](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#updatesources)]
 [!code-vb[BindingGroupSnippets#UpdateSources](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#updatesources)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataError">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataError : bool with get, set" Usage="System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59da6-256">포함할지 여부를 나타내는 값을 가져오거나 설정 합니다.는 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-256">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</span></span></summary>
        <value><span data-ttu-id="59da6-257"><see langword="true" /> 포함 된 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />이 고, 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-257"><see langword="true" /> to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="59da6-258">기본값은 <see langword="true" />입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-258">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59da6-259">때 <xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A> 됩니다 `true`, 바인딩을 확인 하 고 구현 하는 데이터 소스에 의해 발생 하는 오류를 보고 <xref:System.ComponentModel.INotifyDataErrorInfo>합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-259">When <xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A> is `true`, the binding checks for and reports errors that are raised by a data source that implements <xref:System.ComponentModel.INotifyDataErrorInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateWithoutUpdate">
      <MemberSignature Language="C#" Value="public bool ValidateWithoutUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateWithoutUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateWithoutUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateWithoutUpdate();" />
      <MemberSignature Language="F#" Value="member this.ValidateWithoutUpdate : unit -&gt; bool" Usage="bindingGroup.ValidateWithoutUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59da6-260">바인딩에 대해 변환기를 실행 하며 <see cref="T:System.Windows.Controls.ValidationRule" /> 있는 개체를 <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> 속성으로 설정 <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> 또는 <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-260">Runs the converter on the binding and the <see cref="T:System.Windows.Controls.ValidationRule" /> objects that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> or <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />.</span></span></summary>
        <returns><span data-ttu-id="59da6-261"><see langword="true" /> 유효성 검사 규칙이 성공 하는 경우 그렇지 않으면 <see langword="false" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-261"><see langword="true" /> if the validation rules succeed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59da6-262">이 메서드를 호출 하는 경우에 소스 업데이트 되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-262">The sources are not updated when you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt; ValidationErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Controls.ValidationError&gt; ValidationErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationErrors As ReadOnlyCollection(Of ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ ValidationErrors { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationErrors : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;" Usage="System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59da6-263">컬렉션을 가져옵니다 <see cref="T:System.Windows.Controls.ValidationError" /> 발생 한 개체는 <see cref="T:System.Windows.Data.BindingGroup" /> 유효 하지 않은 것입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-263">Gets a collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects that caused the <see cref="T:System.Windows.Data.BindingGroup" /> to be invalid.</span></span></summary>
        <value><span data-ttu-id="59da6-264">컬렉션인 <see cref="T:System.Windows.Controls.ValidationError" /> 개체를 발생 시킨 <see cref="T:System.Windows.Data.BindingGroup" /> 유효 하지 않은 것입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-264">A collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects that caused <see cref="T:System.Windows.Data.BindingGroup" /> to be invalid.</span></span>  <span data-ttu-id="59da6-265">값은 <see langword="null" /> 오류가 없는 경우.</span><span class="sxs-lookup"><span data-stu-id="59da6-265">The value is <see langword="null" /> if there are no errors.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59da6-266">컬렉션을 가져옵니다 <see cref="T:System.Windows.Controls.ValidationRule" /> 에서 소스 개체의 유효성을 검사 하는 개체는 <see cref="T:System.Windows.Data.BindingGroup" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-266">Gets a collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects that validate the source objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <value><span data-ttu-id="59da6-267">컬렉션인 <see cref="T:System.Windows.Controls.ValidationRule" /> 에서 소스 개체의 유효성을 검사 하는 개체는 <see cref="T:System.Windows.Data.BindingGroup" />합니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-267">A collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects that validate the source objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59da6-268">경우는 <xref:System.Windows.Controls.ValidationRule> 에 추가 됩니다을 <xref:System.Windows.Data.BindingGroup>의 <xref:System.Windows.Data.BindingGroup> 의 첫 번째 매개 변수로 전달 됩니다는 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드.</span><span class="sxs-lookup"><span data-stu-id="59da6-268">When a <xref:System.Windows.Controls.ValidationRule> is added to a <xref:System.Windows.Data.BindingGroup>, the <xref:System.Windows.Data.BindingGroup> is passed in as the first parameter of the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method.</span></span> <span data-ttu-id="59da6-269">사용 하 여 개체의 제안 된 값을 가져올 수는 <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 또는 <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> 메서드.</span><span class="sxs-lookup"><span data-stu-id="59da6-269">You can get the proposed values of the object by using the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> or <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method.</span></span> <span data-ttu-id="59da6-270">바인딩 소스 개체를 가져올 수 있습니다는 <xref:System.Windows.Data.BindingGroup.Items%2A> 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-270">You can get the objects that are the sources of the bindings from the <xref:System.Windows.Data.BindingGroup.Items%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="59da6-271">다음 예제에서는 사용자 지정 <xref:System.Windows.Controls.ValidationRule>, `ValidateDateAndPrice`를 <xref:System.Windows.Data.BindingGroup>입니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-271">The following example adds the custom <xref:System.Windows.Controls.ValidationRule>, `ValidateDateAndPrice`, to the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 <span data-ttu-id="59da6-272">다음 예제에서는 `ValidateDateAndPrice` 클래스를 보여줍니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-272">The following example shows the `ValidateDateAndPrice` class.</span></span> <span data-ttu-id="59da6-273">합니다 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드는 <xref:System.Windows.Data.BindingGroup> 양식과 100 달러 개 항목을 사용 하는 경우이 수 있는 최소 7 일 동안 확인에 입력 한 값을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="59da6-273">The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method uses the <xref:System.Windows.Data.BindingGroup> to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>