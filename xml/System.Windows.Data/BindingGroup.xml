<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BindingGroup.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac575e5aedb20ccf9bd83f94de09ef1c9ab7f3863a2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">75e5aedb20ccf9bd83f94de09ef1c9ab7f3863a2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Data.BindingGroup">
          <source>Contains a collection of bindings and <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph> objects that are used to validate an object.</source>
          <target state="translated">개체의 유효성을 검사하는 데 사용되는 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph> 개체 및 바인딩의 컬렉션을 포함합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> creates a relationship between multiple bindings, which can be validated and updated together.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 유효성을 검사 하 고 함께 업데이트할 수 있는 여러 바인딩 간의 관계를 만듭니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>For example, suppose that an application prompts the user to enter an address.</source>
          <target state="translated">예를 들어 응용 프로그램 주소를 입력 하 라는 메시지를 표시 하는 것으로 가정 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>The application then populates an object of type <ph id="ph1">`Address`</ph>, which has the properties, <ph id="ph2">`Street`</ph>, <ph id="ph3">`City`</ph>, <ph id="ph4">`ZipCode`</ph>, and <ph id="ph5">`Country`</ph>, with the values that the user provided.</source>
          <target state="translated">그런 다음 응용 프로그램 형식의 개체를 채웁니다 <ph id="ph1">`Address`</ph>, 속성이 있는, <ph id="ph2">`Street`</ph>, <ph id="ph3">`City`</ph>, <ph id="ph4">`ZipCode`</ph>, 및 <ph id="ph5">`Country`</ph>, 사용자가 제공한 값을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>The application has a panel that contains four <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> controls, each of which is data bound to one of the object’s properties.</source>
          <target state="translated">응용 프로그램에 4 개를 포함 하는 패널 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 된 개체의 속성 중 하나에 바인딩된 데이터 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>You can use a <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> in a <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> to validate the <ph id="ph3">`Address`</ph> object.</source>
          <target state="translated">사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 유효성을 검사 하 여 <ph id="ph3">`Address`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>If the bindings participate in the same <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>, you can ensure that the zip-code is valid for the country of the address.</source>
          <target state="translated">같은 바인딩에 참여 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>, 우편 번호 주소 국가 대 한 유효한 되는지 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>You set the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.BindingGroup%2A&gt;</ph> property on <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>.</source>
          <target state="translated">설정한는 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.BindingGroup%2A&gt;</ph> 속성 <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>Child elements inherit the <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> from their parent elements, just as with any other inheritable property.</source>
          <target state="translated">자식 요소를 상속 된 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 다른 상속 가능한 속성 경우와 마찬가지로, 부모 요소 로부터 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>A binding on a descendent element is added to a <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> if one of the following situations occurs:</source>
          <target state="translated">하위 요소에 바인딩을에 추가 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 다음과 같은 상황 중 하나가 발생 하는 경우:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>The binding's source and the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the element that has the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> are the same object and the <ph id="ph3">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> property is not set.</source>
          <target state="translated">바인딩의 소스 및 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> 가 요소의 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 가 같은 개체 및 <ph id="ph3">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> 속성이 설정 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> property of the binding is equal to the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement.BindingGroup%2A&gt;</ph> and they are not explicitly set to <ph id="ph4">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> 바인딩의 속성은에 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> 의 <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement.BindingGroup%2A&gt;</ph> 없고 명시적으로 설정 되지 않은 <ph id="ph4">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>In the example of the address, suppose that the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Controls.Panel&gt;</ph> is set to the object of type <ph id="ph3">`Address`</ph>.</source>
          <target state="translated">주소의 예에서 되었다고 가정은 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> 의 <ph id="ph2">&lt;xref:System.Windows.Controls.Panel&gt;</ph> 유형의 개체에 설정 되어 <ph id="ph3">`Address`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>The binding for each <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> of the panel.</source>
          <target state="translated">각각에 대 한 바인딩을 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 에 추가 되 고 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 패널의 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>You add <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> objects to a <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>.</source>
          <target state="translated">추가한 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 개체는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> is passed as the first parameter of the <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> method when the <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> runs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 의 첫 번째 매개 변수로 전달 되는 <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> 메서드 때는 <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 실행 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.TryGetValue%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29&gt;</ph> method on that <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> to get the proposed values of the object, and the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> property to get the sources of the bindings.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.TryGetValue%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29&gt;</ph> 메서드를 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 개체의 제안 된 값을 가져오는 및 <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> 바인딩의 소스인 가져올 속성입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> updates the sources of the binding at the same time instead of each binding being updated separately.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 개별적으로 업데이트 되 고 각 바인딩에 대신 동시에 바인딩 소스를 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>When you call one of the methods to validate the data (<ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.UpdateSources%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph>), the binding for each <ph id="ph4">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> in the example is validated and potentially updated.</source>
          <target state="translated">데이터 유효성 검사 방법 중 하나를 호출 하면 (<ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.UpdateSources%2A&gt;</ph>, 또는 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph>), 각각에 대 한 바인딩을 <ph id="ph4">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 에 예제에서는 유효성이 검사 되 고 잠재적으로 업데이트 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>When a binding is part of a <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>, the source of the binding is not updated until you call <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.UpdateSources%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph> on the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>, unless you explicitly set the <ph id="ph5">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> property.</source>
          <target state="translated">바인딩을의 일부인 경우는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>를 호출할 때까지 바인딩 소스 업데이트 되지 않습니다 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.UpdateSources%2A&gt;</ph> 또는 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph> 에 <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>명시적으로 설정 하지 않는 한는 <ph id="ph5">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> 속성.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>The following examples create an application that prompts the user to enter the description and price of an item and the date that the offer expires.</source>
          <target state="translated">다음 예제에서는 항목의 가격과 설명을 입력 하 라는 메시지를 표시 하는 응용 프로그램 및 제공이 만료 되는 날짜를 만듭니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>The application displays the current information for the item below the form.</source>
          <target state="translated">응용 프로그램 폼 아래 항목에 대 한 현재 정보를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>The user can submit or cancel the changes.</source>
          <target state="translated">사용자 제출 하거나 변경 내용을 취소 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>The application does the following to achieve this behavior.</source>
          <target state="translated">응용 프로그램이이 동작을 얻기 위해 다음 작업을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>Creates a <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and adds it the root <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> when it creates the <ph id="ph3">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> of the application.</source>
          <target state="translated">만듭니다는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 루트 추가 <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> 를 만들 때의 <ph id="ph3">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> 응용 프로그램의 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>Calls <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.BeginEdit%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.CancelEdit%2A&gt;</ph> in the application's logic to enable rolling back changes.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.BeginEdit%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.CancelEdit%2A&gt;</ph> 사용할 수 있도록 응용 프로그램의 논리에 변경 내용을 롤백하고 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>Calls <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.TryGetValue%2A&gt;</ph> in a <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> method to get the user's input and then check that an item over 100 dollars is available for at least seven days.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.TryGetValue%2A&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> 메서드를 사용자의 입력을 가져오고 다음 7 일 이상 동안 100 달러가 넘는 항목을 사용할 수 있는지를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>The following example creates the <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> of the application.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> 응용 프로그램의 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>The root <ph id="ph1">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> has a <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> that contains a <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> that validates the item, as described previously.</source>
          <target state="translated">루트 <ph id="ph1">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 를 포함 하는 <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 를 확인 하는 항목을 앞에서 설명한 대로 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>The binding objects on the <ph id="ph1">`Price`</ph> property and the <ph id="ph2">`OfferExpires`</ph> property become part of the <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and each binding has a <ph id="ph4">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> to make sure that price and date, respectively, are valid values.</source>
          <target state="translated">바인딩 개체에는 <ph id="ph1">`Price`</ph> 속성 및 <ph id="ph2">`OfferExpires`</ph> 속성 될 부분의 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 각 바인딩에 및는 <ph id="ph4">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 되는지 확인 하는 가격 및 날짜, 각각 유효한 값입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>The validation rules for the individual properties run before the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> on the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>.</source>
          <target state="translated">개별 속성에 대 한 유효성 검사 규칙을 실행 하기 전에 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>The following example shows the event handlers for the application.</source>
          <target state="translated">다음 예제에서는 응용 프로그램에 대 한 이벤트 처리기를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>When the user clicks the Submit button, the application calls <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph> to run each <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> that is associated with the <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>.</source>
          <target state="translated">제출 단추를 클릭 하면 응용 프로그램 호출 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph> 모두 실행 하려면 <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 와 연결 된는 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>If each <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> succeeds, <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph> saves the values to the object and ends the edit transaction.</source>
          <target state="translated">각 경우 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 성공 하면 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph> 편집 트랜잭션을 끝내 고 개체에 값을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph> is successful, the application begins another edit transaction.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph> 가 성공 하면 응용 프로그램이 다른 편집 트랜잭션을 시작 합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> fails, the <ph id="ph2">&lt;xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType&gt;</ph> event occurs because the application set <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A&gt;</ph> to <ph id="ph4">`true`</ph> on the <ph id="ph5">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> (in the previous example).</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 실패는 <ph id="ph2">&lt;xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType&gt;</ph> 이벤트 응용 프로그램 설정 때문에 발생 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A&gt;</ph> 를 <ph id="ph4">`true`</ph> 에 <ph id="ph5">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> (앞의 예에서).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source><ph id="ph1">`ItemError`</ph> handles the <ph id="ph2">&lt;xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType&gt;</ph> event and displays information about the validation error to the user.</source>
          <target state="translated"><ph id="ph1">`ItemError`</ph> 핸들의 <ph id="ph2">&lt;xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType&gt;</ph> 사용자에 게 유효성 검사 오류에 대 한 이벤트와 표시 정보입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>The example also handles the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> event for the <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> and the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event for the <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> button.</source>
          <target state="translated">이 예제에서는 또한 처리는 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> 에 대 한 이벤트는 <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> 에 대 한 이벤트는 <bpt id="p1">**</bpt>취소<ept id="p1">**</ept> 단추 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>The following example shows the custom <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> <ph id="ph2">`ValidateDateAndPrice`</ph>, which was added to the <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> in the first example.</source>
          <target state="translated">다음 예제에서는 사용자 지정 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> <ph id="ph2">`ValidateDateAndPrice`</ph>에 추가한는 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 첫 번째 예제에서입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingGroup">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> in its <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> method to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 사용 하 여는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 에 해당 <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> 검사는 100 달러 넘는 항목을 사용 하는 경우 사용할 수 있습니다 7 일 이상에 대 한 고, 폼에 입력 한 값을 가져오려면 메서드.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingGroup.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingGroup.BeginEdit">
          <source>Begins an edit transaction on the sources in the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>의 소스에 대한 편집 트랜잭션을 시작합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.BeginEdit">
          <source>If the sources in the <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> support discarding pending changes, you can call <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.BeginEdit%2A&gt;</ph> to begin the edit transaction, call <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph> to save the pending changes, call <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup.CancelEdit%2A&gt;</ph> to discard the pending changes.</source>
          <target state="translated">경우에 소스는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 보류 중인 변경 내용 취소 지원, 호출할 수 있습니다 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.BeginEdit%2A&gt;</ph> 편집 트랜잭션을 시작, 호출 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph> 보류 중인 변경 내용을 저장 하려면 호출 <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup.CancelEdit%2A&gt;</ph> 보류 중인 변경 내용을 취소 하 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.BeginEdit">
          <source>For each object in <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> that implements <ph id="ph2">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.BeginEdit%2A&gt;</ph> calls <ph id="ph4">&lt;xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">각 개체에 대해 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> 를 구현 하는 <ph id="ph2">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.BeginEdit%2A&gt;</ph> 호출 <ph id="ph4">&lt;xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.BeginEdit">
          <source>The following example calls <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.BeginEdit%2A&gt;</ph> when a window loads to begin the edit transaction.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.BeginEdit%2A&gt;</ph> 편집 트랜잭션을 시작 하는 창이 로드 될 때입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingGroup.BindingExpressions">
          <source>Gets a collection of <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> objects that contains information for each Binding in the <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph>의 각 바인딩에 대한 정보가 들어 있는 <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> 개체의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.BindingExpressions">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> objects that contains information for each binding in the <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph>의 각 바인딩에 대한 정보가 들어 있는 <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.BindingExpressions">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> belongs to a <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> if one of the following cases occurs:</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> 속한는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 다음 경우 중 하나가 발생 하는 경우:</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.BindingExpressions">
          <source>The binding's source and the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the element that has the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> are the same object and the <ph id="ph3">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> is not set.</source>
          <target state="translated">바인딩의 소스 및 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> 가 요소의 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 가 같은 개체 및 <ph id="ph3">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> 설정 되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.BindingExpressions">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> property of the binding and the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> are set to the same non-null value and the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> belongs to a parent element of the binding's target element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> 바인딩의 속성 및 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> 의 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 동일한 null이 아닌 값으로 설정 되어 및 <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 는 바인딩 대상 요소의 부모 요소에 속합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.BindingExpressions">
          <source>You add a <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.BindingExpressions%2A&gt;</ph>.</source>
          <target state="translated">추가한는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> 를 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.BindingExpressions%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingGroup.CancelEdit">
          <source>Ends the edit transaction and discards the pending changes.</source>
          <target state="translated">편집 트랜잭션을 끝내고 보류 중인 변경 내용을 삭제합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.CancelEdit">
          <source>This method causes the sources to discard the pending changes, if a source object is capable of doing so and end the edit transaction.</source>
          <target state="translated">이 메서드를 사용 하면 소스 삭제 보류 중인 변경 내용을 원본 개체는 그러한 작업의 수 및 편집 트랜잭션을 종료 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.CancelEdit">
          <source>Then the method updates the target properties with the saved source values.</source>
          <target state="translated">다음 메서드는 저장 된 소스 값으로 대상 속성을 업데이트합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.CancelEdit">
          <source>For each object in <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> that implements <ph id="ph2">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.CancelEdit%2A&gt;</ph> calls <ph id="ph4">&lt;xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">각 개체에 대해 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> 를 구현 하는 <ph id="ph2">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.CancelEdit%2A&gt;</ph> 호출 <ph id="ph4">&lt;xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.CancelEdit">
          <source>The following example calls <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.CancelEdit%2A&gt;</ph> to discard the pending changes and then calls <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.BeginEdit%2A&gt;</ph> to prepare the source to be re-edited.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.CancelEdit%2A&gt;</ph> 보류 중인 변경 내용 및 다음 호출을 취소 하 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.BeginEdit%2A&gt;</ph> 소스를 다시 편집 된 준비를 합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingGroup.CanRestoreValues">
          <source>Gets whether each source in the binding can discard pending changes and restore the original values.</source>
          <target state="translated">바인딩의 각 소스에서 보류 중인 변경 내용을 삭제하고 원래 값을 복원할 수 있는지 여부를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.CanRestoreValues">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if each source in the binding can discard pending changes and restore the original values; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">바인딩의 각 소스에서 보류 중인 변경 내용을 삭제하고 원래 값을 복원할 수 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.CanRestoreValues">
          <source>A source can discard pending changes if it implements <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph>.</source>
          <target state="translated">구현 하는 경우 소스는 보류 중인 변경 내용을 취소할 수 <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingGroup.CommitEdit">
          <source>Runs all the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph> objects and updates the binding sources if all validation rules succeed.</source>
          <target state="translated">모든 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph> 개체를 실행하고 모든 유효성 검사 규칙이 성공하는 경우 바인딩 소스를 업데이트합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingGroup.CommitEdit">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if every <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph> succeeds and the values are committed to the sources; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">모든 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph>이 성공하고 값이 소스에 커밋되면 sources;<ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.CommitEdit">
          <source>If every <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> succeeds, this method causes the sources to commit the pending changes and end the edit transaction, if a source object is capable of doing so.</source>
          <target state="translated">모든 경우 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 성공 하면 원본 개체에 따른 수 있다면이 방법을 사용 하면 보류 중인 변경 내용을 커밋하고 편집 트랜잭션을 종료 하는 원본입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.CommitEdit">
          <source>For each object in <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> that implements <ph id="ph2">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph> calls <ph id="ph4">&lt;xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">각 개체에 대해 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> 를 구현 하는 <ph id="ph2">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph> 호출 <ph id="ph4">&lt;xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.CommitEdit">
          <source>The following example calls <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph> to save the pending changes and then calls <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.BeginEdit%2A&gt;</ph> to prepare the source to be re-edited.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph> 보류 중인 변경 내용 및 다음 호출을 저장 하려면 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.BeginEdit%2A&gt;</ph> 소스를 다시 편집 된 준비를 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)">
          <source>The object that contains the specified property.</source>
          <target state="translated">지정된 속성을 포함하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)">
          <source>The property whose proposed value to get.</source>
          <target state="translated">제안된 값을 가져올 속성입니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)">
          <source>Returns the proposed value for the specified property and item.</source>
          <target state="translated">지정된 속성 및 항목에 대해 제안된 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)">
          <source>The proposed property value.</source>
          <target state="translated">제안된 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)">
          <source>Use this method in the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType&gt;</ph> method to get the value to be committed to the source.</source>
          <target state="translated">이 메서드를 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType&gt;</ph> 메서드는 소스에 커밋할 수 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)">
          <source>The type of the return value depends on the stage at which the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> occurs.</source>
          <target state="translated">반환 값의 형식은 하는 단계에 따라 다릅니다.는 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 발생 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> is data bound to a property of type integer and the <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> that calls <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29&gt;</ph> has its <ph id="ph4">&lt;xref:System.Windows.Controls.ValidationRule.ValidationStep%2A&gt;</ph> set to <ph id="ph5">&lt;xref:System.Windows.Controls.ValidationStep.RawProposedValue&gt;</ph>, the method returns a string.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 정수 형식의 속성에 바인딩된 데이터 및 <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 호출 하는 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29&gt;</ph> 가 해당 <ph id="ph4">&lt;xref:System.Windows.Controls.ValidationRule.ValidationStep%2A&gt;</ph> 로 설정 <ph id="ph5">&lt;xref:System.Windows.Controls.ValidationStep.RawProposedValue&gt;</ph>, 메서드는 문자열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> has its <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule.ValidationStep%2A&gt;</ph> set to <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue&gt;</ph>, the method returns whatever type that is returned by the binding's converter.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 가 해당 <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule.ValidationStep%2A&gt;</ph> 로 설정 <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue&gt;</ph>, 메서드는 바인딩의 변환기에서 반환 되는 형식에 관계 없이 반환 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)">
          <source>In this example, <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29&gt;</ph> usually returns an integer.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29&gt;</ph> 일반적으로 정수를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)">
          <source>The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer.</source>
          <target state="translated">다음 예제는 사용자 여러 고객을 입력 하 고 각 고객을 영업 담당자를 할당 하도록 요청 하는 응용 프로그램의 일부입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)">
          <source>The application checks that the sales representative and the customer belong to the same region.</source>
          <target state="translated">응용 프로그램에서 영업 담당자와 고객이 동일한 지역에 속해 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)">
          <source>The example shows the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> method, which uses the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29&gt;</ph> method to get values that the customer entered.</source>
          <target state="translated">예제에 나와 있는 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> 메서드를 사용 하는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29&gt;</ph> 메서드를 입력 한 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)">
          <source>There is not a binding for the specified item and property.</source>
          <target state="translated">지정된 항목 및 속성에 대한 바인딩이 없는 경우</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)">
          <source>The value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</source>
          <target state="translated">변환 오류나 이전의 유효성 검사 규칙 실패로 인해 지정된 속성 값을 사용할 수 없는 경우</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingGroup.HasValidationError">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> has a failed validation rule.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>에 실패한 유효성 검사 규칙이 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.HasValidationError">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> has a failed validation rule; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>에 실패한 유효성 검사 규칙이 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingGroup.IsDirty">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> contains a proposed value that has not been written to the source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>이 소스에 기록되지 않은 제안된 값을 포함하는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.IsDirty">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> contains a proposed value that has not been written to the source; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>에 소스에 작성되지 않은 제안 값이 들어 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingGroup.Items">
          <source>Gets the sources that are used by the Binding objects in the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>의 바인딩 개체에 사용되는 소스를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Items">
          <source>The sources that are used by the Binding objects in the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>의 바인딩 개체에 사용되는 소스입니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Items">
          <source>Each object that is used as a source is added into the <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> property once, even if the object is used as the source for multiple bindings.</source>
          <target state="translated">소스에 추가 됨에 따라 사용 되는 각 개체는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> 속성은 한 번, 여러 바인딩을 개체는 원본으로 사용 되는 경우에 마찬가지입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Items">
          <source>Often, there is just one item in <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph>, which is the object that is the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the element that uses the <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>.</source>
          <target state="translated">대개는 단지 하나의 항목 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph>, 관련 된 개체는는 <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> 를 사용 하는 요소는 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Items">
          <source>It is possible for a <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> to have multiple sources, however.</source>
          <target state="translated">그러나에 대 한 수는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 가 여러 소스에 있습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Items">
          <source>For example, if Binding objects share the same <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> but use different source objects, each object that is used as a source is in <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph>.</source>
          <target state="translated">예를 들어, 동일한 바인딩 개체 공유 하는 경우 <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> 다른 소스 개체를 사용 하 여, 원본으로 사용 되는 각 개체에는 있지만 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Items">
          <source>There can also be multiple objects in <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> if the path of a Binding resolves to a nested property of the source.</source>
          <target state="translated">여러 개체에 있을 수 있습니다 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> 소스의 중첩된 속성에 바인딩의 경로가 확인 되는 경우.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Items">
          <source>For example, suppose a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> control's binding is a part of a <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and its <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> is a <ph id="ph4">`Customer`</ph> object, which has a property of type <ph id="ph5">`Address`</ph>.</source>
          <target state="translated">예를 들어 한 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 컨트롤의 바인딩의 일부인는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 및 해당 <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> 는 <ph id="ph4">`Customer`</ph> 형식의 속성이 있는 개체 <ph id="ph5">`Address`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Items">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> is the <ph id="ph3">`Address.ZipCode`</ph> property, the <ph id="ph4">`Address`</ph> is added to the <ph id="ph5">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> property.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> 의 <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> 는 <ph id="ph3">`Address.ZipCode`</ph> 속성을는 <ph id="ph4">`Address`</ph> 에 추가 되는 <ph id="ph5">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Items">
          <source>The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</source>
          <target state="translated">다음 예제는 사용자가을 동일한 값으로 두 개체의 속성을 설정 하는지 여부를 확인 하는 응용 프로그램의 일부입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Items">
          <source>The first example creates two <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> controls, each of which are data bound to a different source.</source>
          <target state="translated">첫 번째 예에서는 두 개의 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 각각은 서로 다른 소스에 바인딩된 데이터 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Items">
          <source>The binding of the first <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> gets its source, <ph id="ph2">`object1`</ph>, from the <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> control's parent element (the <ph id="ph5">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph>).</source>
          <target state="translated">첫 번째 바인딩 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 해당 소스를 가져옵니다 <ph id="ph2">`object1`</ph>에서 <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> 의 <ph id="ph4">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 컨트롤의 부모 요소 (의 <ph id="ph5">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Items">
          <source>On the second <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>, the source of the binding is set to <ph id="ph2">`object2`</ph>.</source>
          <target state="translated">두 번째 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>, 바인딩의 소스로 설정 되어 <ph id="ph2">`object2`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Items">
          <source>The example also creates a <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> that displays validation errors.</source>
          <target state="translated">이 예에서는 또한 만듭니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> 유효성 검사 오류를 표시 하는 합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Items">
          <source>The following example shows the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> that the previous example uses.</source>
          <target state="translated">다음 예제와 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 이전 예제에서 사용 하 합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Items">
          <source>In the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> method, the example gets each source object from the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and checks whether the properties of the objects are equal.</source>
          <target state="translated">에 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> 메서드를 예제에서 각 원본 개체를 가져오고는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 개체의 속성이 같은지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingGroup.Name">
          <source>Gets or sets the name that identifies the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>, which can be used to include and exclude Binding objects in the <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>에서 바인딩 개체를 포함하거나 제외하는 데 사용할 수 있는 <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>을 식별하는 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Name">
          <source>The name that identifies the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>을 식별하는 이름입니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Name">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> is <ph id="ph2">`null`</ph>, bindings that have a source that is the same object as the <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the element that has the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> participate in the <ph id="ph5">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> 은 <ph id="ph2">`null`</ph>, 원본와 같은 개체에 포함 된 바인딩이 <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> 가 요소의 <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 에 참여는 <ph id="ph5">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Name">
          <source>You can include bindings that have a source that is different from the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the parent element that has the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> by setting <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and the <ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> property of a binding to the same value.</source>
          <target state="translated">과 다른 소스 있는 바인딩을 포함할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> 가 부모 요소의 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 설정 하 여 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> 의 <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> 동일한 값에 대 한 바인딩의 속성입니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Name">
          <source>You can exclude bindings that have the same source as <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the parent element that has the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> by setting <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and the <ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> property of a binding to different values.</source>
          <target state="translated">같은 원본으로 포함 된 바인딩이 제외할 수 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> 가 부모 요소의 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 설정 하 여 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> 의 <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> 서로 다른 값에 대 한 바인딩의 속성입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Name">
          <source>The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</source>
          <target state="translated">다음 예제는 사용자가을 동일한 값으로 두 개체의 속성을 설정 하는지 여부를 확인 하는 응용 프로그램의 일부입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Name">
          <source>The first example creates two <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> controls, each of which are data bound to a different source.</source>
          <target state="translated">첫 번째 예에서는 두 개의 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 각각은 서로 다른 소스에 바인딩된 데이터 컨트롤입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Name">
          <source>The binding of the first <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> is part of the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> because the <ph id="ph3">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> inherits the <ph id="ph4">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> from its parent <ph id="ph6">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph>.</source>
          <target state="translated">첫 번째 바인딩 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 의 일부는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 때문에 <ph id="ph3">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 상속는 <ph id="ph4">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 부모에서 <ph id="ph6">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Name">
          <source>The binding on the second <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> is part of the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> because the <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and the <ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> of the <ph id="ph6">&lt;xref:System.Windows.Data.Binding&gt;</ph> are both set to <ph id="ph7">`bindingGroup`</ph>.</source>
          <target state="translated">두 번째 바인딩 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 의 일부는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 때문에 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> 의 <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> 의 <ph id="ph6">&lt;xref:System.Windows.Data.Binding&gt;</ph> 으로 설정 되어 <ph id="ph7">`bindingGroup`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Name">
          <source>The following example shows the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> that the previous example uses.</source>
          <target state="translated">다음 예제와 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 이전 예제에서 사용 하 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Name">
          <source>In the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> method, the example gets each source object from the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and checks whether the properties of the objects are equal.</source>
          <target state="translated">에 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> 메서드를 예제에서 각 원본 개체를 가져오고는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 개체의 속성이 같은지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingGroup.NotifyOnValidationError">
          <source>Gets or sets whether the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.Validation.Error" /&gt;</ph> event occurs when the state of a <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph> changes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.Validation.Error" /&gt;</ph>의 상태가 변경될 때 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph> 이벤트가 발생하는지 여부를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.NotifyOnValidationError">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="E:System.Windows.Controls.Validation.Error" /&gt;</ph> event occurs when the state of a <ph id="ph3">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph> changes; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Windows.Controls.Validation.Error" /&gt;</ph>의 상태가 변경될 때 <ph id="ph3">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph> 이벤트가 발생하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph4">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.NotifyOnValidationError">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.NotifyOnValidationError">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType&gt;</ph> attached event occurs on the element that has the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType&gt;</ph> 를 가진 요소를 연결 된 이벤트가 발생 된 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.NotifyOnValidationError">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and sets <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A&gt;</ph> to <ph id="ph3">`true`</ph> so that the application can handle the <ph id="ph4">&lt;xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType&gt;</ph> event when a <ph id="ph5">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> fails.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 설정 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A&gt;</ph> 를 <ph id="ph3">`true`</ph> 응용 프로그램에서 처리할 수 있도록는 <ph id="ph4">&lt;xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType&gt;</ph> 이벤트 때는 <ph id="ph5">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 실패 합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.NotifyOnValidationError">
          <source>The following example handles the <ph id="ph1">&lt;xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">다음 예제에서는 핸들의 <ph id="ph1">&lt;xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType&gt;</ph> 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingGroup.Owner">
          <source>Gets the object that this <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> is assigned to.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>이 할당되는 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.Owner">
          <source>The object that this <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> is assigned to.</source>
          <target state="translated">이 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>이 할당되는 개체입니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingGroup.SharesProposedValues">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> reuses target values that have not been committed to the source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>에서 소스에 커밋되지 않은 대상 값을 다시 사용할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.SharesProposedValues">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> reuses target values that have not been committed to the source; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>에서 소스에 커밋되지 않은 대상 값을 다시 사용하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.SharesProposedValues">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.SharesProposedValues">
          <source>A proposed value is a value that has been changed on the target of a binding, but has not been committed to the source.</source>
          <target state="translated">제안 된 값은 바인딩 대상에서 변경 되어 있지만 소스에 커밋되지 않았습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.SharesProposedValues">
          <source>For example, suppose that there is a two-way binding on a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Windows.Data.UpdateSourceTrigger.Explicit&gt;</ph>.</source>
          <target state="translated">예를 들어, 한지를 양방향 바인딩으로 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> 속성이 <ph id="ph3">&lt;xref:System.Windows.Data.UpdateSourceTrigger.Explicit&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.SharesProposedValues">
          <source>If the user changes the value of the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>, the proposed value is the value that is in the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> before it is committed to source.</source>
          <target state="translated">사용자의 값을 변경 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>, 제안 된 값은에 있는 값의 <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 원본에 커밋되기 전에 합니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.SharesProposedValues">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> uses the proposed value when one binding leaves the BindingGroup and another Binding with the same source joins the BindingGroup.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 바인딩이 두 개는 BindingGroup 유지 하 고 동일한 소스와 다른 바인딩에 BindingGroup 조인 하는 경우 제안 된 값을 사용 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.SharesProposedValues">
          <source>For example, suppose that an application enables a user to edit multiple fields and update the source object by clicking a button.</source>
          <target state="translated">예를 들어 응용 프로그램 사용자를 여러 필드를 편집 하 고 단추를 클릭 하 여 원본 개체를 업데이트할 수 있음을 가정 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.SharesProposedValues">
          <source>When a field is not being edited, the application displays it in a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>.</source>
          <target state="translated">필드 편집 되지 않는 경우 응용 프로그램에 표시 된 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.SharesProposedValues">
          <source>When the user begins to edit a field, the application replaces the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>.</source>
          <target state="translated">필드 편집 하려면 사용자가 응용 프로그램 대체는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.SharesProposedValues">
          <source>When the user finishes editing that field, the application replaces the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>.</source>
          <target state="translated">사용자가 해당 필드의 편집을 마치면 응용 프로그램 대체는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 와 <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.SharesProposedValues">
          <source>Because the source is not updated until the user clicks the button, there must be a way for the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> to display the proposed value.</source>
          <target state="translated">에 대 한 방법이 있어야 소스는 단추를 클릭할 때까지 업데이트 되지 때문에 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> 제안 된 값을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.SharesProposedValues">
          <source>By setting <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A&gt;</ph> to <ph id="ph2">`true`</ph>, the application will display the user's changes to a field even when the source has not been updated.</source>
          <target state="translated">설정 하 여 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A&gt;</ph> 를 <ph id="ph2">`true`</ph>, 소스 업데이트 되지 않은 경우에 응용 프로그램 필드에 사용자의 변경 내용이 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
          <source>The object that contains the specified property.</source>
          <target state="translated">지정된 속성을 포함하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
          <source>The property whose proposed value to get.</source>
          <target state="translated">제안된 값을 가져올 속성입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
          <source>When this method returns, contains an object that represents the proposed property value.</source>
          <target state="translated">이 메서드의 반환 값에는 제안된 속성 값을 나타내는 개체가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
          <source>Attempts to get the proposed value for the specified property and item.</source>
          <target state="translated">지정된 속성 및 항목에 대해 제안된 값을 가져오려고 시도합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if value is the proposed value for the specified property; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">값이 지정된 속성에 제안된 값이면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.TryGetValue%2A&gt;</ph> returns <ph id="ph2">`false`</ph> if there is not a binding for the specified item and property or if the value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.TryGetValue%2A&gt;</ph> 반환 <ph id="ph2">`false`</ph> 없는 경우 지정 된 항목 및 속성에 대 한 바인딩 또는 지정된 된 속성의 값을 변환 오류로 인해 사용할 수 없는 경우 또는 이전 유효성 검사 규칙에 실패 합니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
          <source>Use this method in the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType&gt;</ph> method to get the value to be committed to the source.</source>
          <target state="translated">이 메서드를 사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType&gt;</ph> 메서드는 소스에 커밋할 수 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
          <source>The type <ph id="ph1">`value`</ph> depends on the stage at which the <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> occurs.</source>
          <target state="translated">형식 <ph id="ph1">`value`</ph> 하는 단계에 따라 달라 집니다는 <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 발생 합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> is data bound to a property of type integer, <ph id="ph2">`value`</ph> is a string if the <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> that calls <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup.TryGetValue%2A&gt;</ph> has its <ph id="ph5">&lt;xref:System.Windows.Controls.ValidationRule.ValidationStep%2A&gt;</ph> set to <ph id="ph6">&lt;xref:System.Windows.Controls.ValidationStep.RawProposedValue&gt;</ph>.</source>
          <target state="translated">예를 들어 경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 정수 형식의 속성에 바인딩된 데이터 <ph id="ph2">`value`</ph> 문자열인 경우는 <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 호출 하는 <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup.TryGetValue%2A&gt;</ph> 가 해당 <ph id="ph5">&lt;xref:System.Windows.Controls.ValidationRule.ValidationStep%2A&gt;</ph> 로 설정 <ph id="ph6">&lt;xref:System.Windows.Controls.ValidationStep.RawProposedValue&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> has its <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule.ValidationStep%2A&gt;</ph> set to <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue&gt;</ph>, the type of <ph id="ph4">`value`</ph> is whatever type that is returned by the binding's converter.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 가 해당 <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule.ValidationStep%2A&gt;</ph> 로 설정 <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue&gt;</ph>, 유형의 <ph id="ph4">`value`</ph> 바인딩의 변환기에서 반환 되는 모든 형식입니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
          <source>In this example, <ph id="ph1">`value`</ph> is usually an integer.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">`value`</ph> 는 일반적으로 정수입니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
          <source>The following example creates a custom <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> named <ph id="ph2">`ValidateDateAndPrice`</ph>.</source>
          <target state="translated">다음 예제에서는 사용자 지정 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 라는 <ph id="ph2">`ValidateDateAndPrice`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
          <source>In the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> method, the example uses the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.TryGetValue%2A&gt;</ph> method and the <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> property to get the values the user entered into the form.</source>
          <target state="translated">에 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> 메서드를 사용 하 여는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.TryGetValue%2A&gt;</ph> 메서드 및 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> 속성을 사용자가 폼에 입력 한 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
          <source>Then the example checks that if an item is over 100 dollars, it will be available for at least seven days.</source>
          <target state="translated">다음 예제는 100 달러 넘는 항목을 사용 하는 경우 사용할 수 있습니다 7 일 이상에 대 한 확인 합니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
          <source>This example is part of a larger example on the <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> class</source>
          <target state="translated">이 예제는에 보다 큰 예제의 일부는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 클래스</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingGroup.UpdateSources">
          <source>Runs the converter on the binding and the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph> objects that have the <ph id="ph2">&lt;see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /&gt;</ph> property set to <ph id="ph3">&lt;see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /&gt;</ph>, <ph id="ph4">&lt;see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /&gt;</ph>, or <ph id="ph5">&lt;see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /&gt;</ph> and saves the values of the targets to the source objects if all the validation rules succeed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /&gt;</ph> 또는 <ph id="ph4">&lt;see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /&gt;</ph>로 설정된 <ph id="ph5">&lt;see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /&gt;</ph> 개체 및 바인딩에 대해 변환기를 실행하고 모든 유효성 검사 규칙이 성공하는 경우 대상의 값을 소스 개체에 저장합니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingGroup.UpdateSources">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if all validation rules succeed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">모든 유효성 검사 규칙이 성공하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.UpdateSources">
          <source>This method updates the source if every <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> succeeds, but it does not cause the sources to commit the pending changes and end the edit transaction.</source>
          <target state="translated">이 메서드는 모든 소스를 업데이트 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 성공 하면 소스입니다. 보류 중인 변경 내용을 커밋하고 편집 트랜잭션을 종료 시 키 지 않습니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.UpdateSources">
          <source>That is, if the source object implements <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph>.</source>
          <target state="translated">즉, 원본 개체를 구현 하는 경우 <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.UpdateSources">
          <source>Calling this method does not cause <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject.EndEdit%2A&gt;</ph> to be called.</source>
          <target state="translated">이 메서드에서 발생 하지 않습니다 호출 <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject.EndEdit%2A&gt;</ph> 를 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.UpdateSources">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph> method to have the sources commit the pending changes.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.CommitEdit%2A&gt;</ph> 메서드를 사용 하려면 소스 보류 중인 변경 내용을 커밋합니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.UpdateSources">
          <source>The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer.</source>
          <target state="translated">다음 예제는 사용자 여러 고객을 입력 하 고 각 고객을 영업 담당자를 할당 하도록 요청 하는 응용 프로그램의 일부입니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.UpdateSources">
          <source>The application checks that the sales representative and the customer belong to the same region.</source>
          <target state="translated">응용 프로그램에서 영업 담당자와 고객이 동일한 지역에 속해 있는지 확인 합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.UpdateSources">
          <source>The example calls <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.UpdateSources%2A&gt;</ph> to validate the bindings and save the values to the source if all the validation rules succeed.</source>
          <target state="translated">예제에서는 호출 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.UpdateSources%2A&gt;</ph> 하는 바인딩 유효성을 검사 하 고 모든 유효성 검사 규칙이 성공 하는 경우 원본에 값을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError">
          <source>Gets or sets a value that indicates whether to include the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /&gt;</ph>을 포함할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /&gt;</ph>을 포함하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the binding checks for and reports errors that are raised by a data source that implements <ph id="ph3">&lt;xref:System.ComponentModel.INotifyDataErrorInfo&gt;</ph>.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, 바인딩을 확인 하 고 구현 하는 데이터 원본에 의해 발생 하는 오류를 보고 <ph id="ph3">&lt;xref:System.ComponentModel.INotifyDataErrorInfo&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate">
          <source>Runs the converter on the binding and the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph> objects that have the <ph id="ph2">&lt;see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /&gt;</ph> property set to <ph id="ph3">&lt;see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /&gt;</ph> or <ph id="ph4">&lt;see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph> 속성이 <ph id="ph2">&lt;see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /&gt;</ph> 또는 <ph id="ph3">&lt;see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /&gt;</ph>로 설정된 <ph id="ph4">&lt;see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /&gt;</ph> 개체 및 바인딩에 대해 변환기를 실행합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the validation rules succeed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">유효성 검사 규칙이 성공하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate">
          <source>The sources are not updated when you call this method.</source>
          <target state="translated">이 메서드를 호출 하는 경우에 소스 업데이트 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingGroup.ValidationErrors">
          <source>Gets a collection of <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ValidationError" /&gt;</ph> objects that caused the <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> to be invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.ValidationError" /&gt;</ph>을 유효하지 않게 만든 <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> 개체의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.ValidationErrors">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ValidationError" /&gt;</ph> objects that caused <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> to be invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.ValidationError" /&gt;</ph>을 유효하지 않게 만든 <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.ValidationErrors">
          <source>The value is <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there are no errors.</source>
          <target state="translated">오류가 없을 경우 이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingGroup.ValidationRules">
          <source>Gets a collection of <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph> objects that validate the source objects in the <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph>에서 소스 개체의 유효성을 검사하는 <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> 개체의 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.ValidationRules">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph> objects that validate the source objects in the <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph>에서 소스 개체의 유효성을 검사하는 <ph id="ph2">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.ValidationRules">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> is added to a <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> is passed in as the first parameter of the <ph id="ph4">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> method.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 에 추가 되는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 의 첫 번째 매개 변수로 전달 됩니다는 <ph id="ph4">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.ValidationRules">
          <source>You can get the proposed values of the object by using the <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.TryGetValue%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29&gt;</ph> method.</source>
          <target state="translated">사용 하 여 개체의 제안 된 값을 가져올 수는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.TryGetValue%2A&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.ValidationRules">
          <source>You can get the objects that are the sources of the bindings from the <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> property.</source>
          <target state="translated">바인딩의 원본인 개체를 가져올 수는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Items%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.ValidationRules">
          <source>The following example adds the custom <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph>, <ph id="ph2">`ValidateDateAndPrice`</ph>, to the <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 사용자 지정 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph>, <ph id="ph2">`ValidateDateAndPrice`</ph>을 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.ValidationRules">
          <source>The following example shows the <ph id="ph1">`ValidateDateAndPrice`</ph> class.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`ValidateDateAndPrice`</ph> 클래스를 보여줍니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingGroup.ValidationRules">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> 메서드는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 검사는 100 달러 넘는 항목을 사용 하는 경우 사용할 수 있습니다 7 일 이상에 대 한 고, 폼에 입력 한 값을 가져오도록 합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>