<Type Name="FilterEventArgs" FullName="System.Windows.Data.FilterEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fdadb4ab63c9fa7da789fe9f598c2e897995cfdb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30625017" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FilterEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FilterEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.FilterEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FilterEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FilterEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="21cef-101">
        <see cref="E:System.Windows.Data.CollectionViewSource.Filter" /> 이벤트와 연결된 정보 및 이벤트 데이터를 제공합니다.</span>
      <span class="sxs-lookup">
        <span data-stu-id="21cef-101">Provides information and event data that is associated with the <see cref="E:System.Windows.Data.CollectionViewSource.Filter" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="21cef-102">에 대 한 이벤트 처리기를 설정 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Data.CollectionViewSource.Filter?displayProperty=nameWithType> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="21cef-102">The following example shows how to set an event handler for the <xref:System.Windows.Data.CollectionViewSource.Filter?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="21cef-103">이 예제에서는 `listingDataView` 의 인스턴스가 <xref:System.Windows.Data.CollectionViewSource>합니다.</span><span class="sxs-lookup"><span data-stu-id="21cef-103">In this example, `listingDataView` is an instance of <xref:System.Windows.Data.CollectionViewSource>.</span></span>  
  
 [!code-csharp[DataBindingLab#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#10)]
 [!code-vb[DataBindingLab#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#10)]  
  
 <span data-ttu-id="21cef-104">다음 예에서는 예의 구현을 보여 줍니다. `ShowOnlyBargainsFilter` 필터 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="21cef-104">The following example shows the implementation of the example `ShowOnlyBargainsFilter` filter event handler.</span></span> <span data-ttu-id="21cef-105">이 이벤트 처리기를 사용 하 여는 <xref:System.Windows.Data.FilterEventArgs.Accepted%2A?displayProperty=nameWithType> 속성을 필터링 할 `AuctionItem` 있는 개체는 `CurrentPrice` $25.00 이상.</span><span class="sxs-lookup"><span data-stu-id="21cef-105">This event handler uses the <xref:System.Windows.Data.FilterEventArgs.Accepted%2A?displayProperty=nameWithType> property to filter out `AuctionItem` objects that have a `CurrentPrice` of $25.00 or greater.</span></span>  
  
 [!code-csharp[DataBindingLab#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#5)]
 [!code-vb[DataBindingLab#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#5)]  
  
 <span data-ttu-id="21cef-106">전체 예제를 참조 하십시오. [데이터 바인딩 데모](http://go.microsoft.com/fwlink/?LinkID=163703)합니다.</span><span class="sxs-lookup"><span data-stu-id="21cef-106">For the complete example, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Windows.Data.CollectionViewSource.Filter" />
  </Docs>
  <Members>
    <Member MemberName="Accepted">
      <MemberSignature Language="C#" Value="public bool Accepted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Accepted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.FilterEventArgs.Accepted" />
      <MemberSignature Language="VB.NET" Value="Public Property Accepted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Accepted { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21cef-107">항목이 필터를 통과하는지 여부를 나타내는 값을 가져오거나 설정합니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21cef-107">Gets or sets a value that indicates whether the item passes the filter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="21cef-108">항목이 필터를 통과하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21cef-108">
              <see langword="true" /> if the item passes the filter; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="21cef-109">기본값은 <see langword="true" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21cef-109">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="21cef-110">에 대 한 이벤트 처리기를 설정 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Data.CollectionViewSource.Filter?displayProperty=nameWithType> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="21cef-110">The following example shows how to set an event handler for the <xref:System.Windows.Data.CollectionViewSource.Filter?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="21cef-111">이 예제에서는 `listingDataView` 의 인스턴스가 <xref:System.Windows.Data.CollectionViewSource>합니다.</span><span class="sxs-lookup"><span data-stu-id="21cef-111">In this example, `listingDataView` is an instance of <xref:System.Windows.Data.CollectionViewSource>.</span></span>  
  
 [!code-csharp[DataBindingLab#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#10)]
 [!code-vb[DataBindingLab#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#10)]  
  
 <span data-ttu-id="21cef-112">다음 예에서는 예의 구현을 보여 줍니다. `ShowOnlyBargainsFilter` 필터 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="21cef-112">The following example shows the implementation of the example `ShowOnlyBargainsFilter` filter event handler.</span></span> <span data-ttu-id="21cef-113">이 이벤트 처리기를 사용 하 여는 <xref:System.Windows.Data.FilterEventArgs.Accepted%2A?displayProperty=nameWithType> 속성을 필터링 할 `AuctionItem` 있는 개체는 `CurrentPrice` $25.00 이상.</span><span class="sxs-lookup"><span data-stu-id="21cef-113">This event handler uses the <xref:System.Windows.Data.FilterEventArgs.Accepted%2A?displayProperty=nameWithType> property to filter out `AuctionItem` objects that have a `CurrentPrice` of $25.00 or greater.</span></span>  
  
 [!code-csharp[DataBindingLab#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#5)]
 [!code-vb[DataBindingLab#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#5)]  
  
 <span data-ttu-id="21cef-114">전체 예제를 참조 하십시오. [데이터 바인딩 데모](http://go.microsoft.com/fwlink/?LinkID=163703)합니다.</span><span class="sxs-lookup"><span data-stu-id="21cef-114">For the complete example, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Data.CollectionViewSource.Filter" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.FilterEventArgs.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="21cef-115">필터로 테스트해야 하는 개체를 가져옵니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21cef-115">Gets the object that the filter should test.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="21cef-116">필터로 테스트해야 하는 개체입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21cef-116">The object that the filter should test.</span>
          </span>
          <span data-ttu-id="21cef-117">기본값은 <see langword="null" />입니다.</span>
          <span class="sxs-lookup">
            <span data-stu-id="21cef-117">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="21cef-118">에 대 한 이벤트 처리기를 설정 하는 방법을 보여 주는 다음 예제는 <xref:System.Windows.Data.CollectionViewSource.Filter?displayProperty=nameWithType> 이벤트입니다.</span><span class="sxs-lookup"><span data-stu-id="21cef-118">The following example shows how to set an event handler for the <xref:System.Windows.Data.CollectionViewSource.Filter?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="21cef-119">이 예제에서는 `listingDataView` 의 인스턴스가 <xref:System.Windows.Data.CollectionViewSource>합니다.</span><span class="sxs-lookup"><span data-stu-id="21cef-119">In this example, `listingDataView` is an instance of <xref:System.Windows.Data.CollectionViewSource>.</span></span>  
  
 [!code-csharp[DataBindingLab#10](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#10)]
 [!code-vb[DataBindingLab#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#10)]  
  
 <span data-ttu-id="21cef-120">다음 예에서는 예의 구현을 보여 줍니다. `ShowOnlyBargainsFilter` 필터 이벤트 처리기입니다.</span><span class="sxs-lookup"><span data-stu-id="21cef-120">The following example shows the implementation of the example `ShowOnlyBargainsFilter` filter event handler.</span></span> <span data-ttu-id="21cef-121">이 이벤트 처리기를 사용 하 여는 <xref:System.Windows.Data.FilterEventArgs.Accepted%2A?displayProperty=nameWithType> 속성을 필터링 할 `AuctionItem` 있는 개체는 `CurrentPrice` $25.00 이상.</span><span class="sxs-lookup"><span data-stu-id="21cef-121">This event handler uses the <xref:System.Windows.Data.FilterEventArgs.Accepted%2A?displayProperty=nameWithType> property to filter out `AuctionItem` objects that have a `CurrentPrice` of $25.00 or greater.</span></span>  
  
 [!code-csharp[DataBindingLab#5](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml.cs#5)]
 [!code-vb[DataBindingLab#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataBindingLab/VisualBasic/MainWindow.xaml.vb#5)]  
  
 <span data-ttu-id="21cef-122">전체 예제를 참조 하십시오. [데이터 바인딩 데모](http://go.microsoft.com/fwlink/?LinkID=163703)합니다.</span><span class="sxs-lookup"><span data-stu-id="21cef-122">For the complete example, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Data.CollectionViewSource.Filter" />
      </Docs>
    </Member>
  </Members>
</Type>