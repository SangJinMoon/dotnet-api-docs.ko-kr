<Type Name="BindingExpression" FullName="System.Windows.Data.BindingExpression">
  <TypeSignature Language="C#" Value="public sealed class BindingExpression : System.Windows.Data.BindingExpressionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BindingExpression extends System.Windows.Data.BindingExpressionBase implements class System.Windows.IWeakEventListener" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BindingExpression&#xA;Inherits BindingExpressionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingExpression sealed : System::Windows::Data::BindingExpressionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingExpressionBase</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary><span data-ttu-id="3c1de-101"><see cref="T:System.Windows.Data.Binding" />의 단일 인스턴스에 대한 정보를 포함합니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-101">Contains information about a single instance of a <see cref="T:System.Windows.Data.Binding" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c1de-102"><xref:System.Windows.Data.Binding> 클래스는 바인딩 선언에 대 한 높은 수준의 클래스입니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-102">The <xref:System.Windows.Data.Binding> class is the high-level class for the declaration of a binding.</span></span> <span data-ttu-id="3c1de-103"><xref:System.Windows.Data.BindingExpression> 클래스는 바인딩 소스에서 바인딩 대상 사이의 연결을 유지 관리 하는 기본 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-103">The <xref:System.Windows.Data.BindingExpression> class is the underlying object that maintains the connection between the binding source and the binding target.</span></span> <span data-ttu-id="3c1de-104">A <xref:System.Windows.Data.Binding> 를 몇 개의 공유할 수 있는 모든 정보를 포함 <xref:System.Windows.Data.BindingExpression> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-104">A <xref:System.Windows.Data.Binding> contains all the information that can be shared across several <xref:System.Windows.Data.BindingExpression> objects.</span></span> <span data-ttu-id="3c1de-105">A <xref:System.Windows.Data.BindingExpression> 인스턴스 식에서 공유할 수 없는 있고에 대 한 모든 인스턴스 정보를 포함 하는 <xref:System.Windows.Data.Binding>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-105">A <xref:System.Windows.Data.BindingExpression> is an instance expression that cannot be shared and that contains all the instance information about the <xref:System.Windows.Data.Binding>.</span></span>  
  
 <span data-ttu-id="3c1de-106">예를 들어 다음을 있는 `myDataObject` 의 인스턴스가 `MyData` 클래스 `myBinding` 원본인 <xref:System.Windows.Data.Binding> 개체를 및 `MyData` 클래스는 문자열 속성을 포함 하는 정의 된 클래스 `MyDataProperty`합니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-106">For example, consider the following, where `myDataObject` is an instance of the `MyData` class, `myBinding` is the source <xref:System.Windows.Data.Binding> object, and `MyData` class is a defined class that contains a string property named `MyDataProperty`.</span></span> <span data-ttu-id="3c1de-107">텍스트 내용을 바인딩하는이 예제 `mytext`의 인스턴스인 <xref:System.Windows.Controls.TextBlock>을 `MyDataProperty`입니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-107">This example binds the text content of `mytext`, which is an instance of <xref:System.Windows.Controls.TextBlock>, to `MyDataProperty`.</span></span>  
  
 [!code-csharp[CodeOnlyBinding#1](~/samples/snippets/csharp/VS_Snippets_Wpf/CodeOnlyBinding/CSharp/binding.cs#1)]
 [!code-vb[CodeOnlyBinding#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CodeOnlyBinding/VisualBasic/App.vb#1)]  
  
 <span data-ttu-id="3c1de-108">동일한를 사용할 수 있습니다 `myBinding` 다른 바인딩을 만들 수 있는 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-108">You can use the same `myBinding` object to create other bindings.</span></span> <span data-ttu-id="3c1de-109">예를 들어, 사용할 수는 `myBinding` 하려면 확인란의 텍스트 콘텐츠를 `MyDataProperty`합니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-109">For example, you might use the `myBinding` object to bind the text content of a check box to `MyDataProperty`.</span></span> <span data-ttu-id="3c1de-110">이 시나리오의 두 인스턴스 됩니다 <xref:System.Windows.Data.BindingExpression> 해당 공유는 `myBinding` 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-110">In that scenario, there will be two instances of <xref:System.Windows.Data.BindingExpression> that share the `myBinding` object.</span></span>  
  
 <span data-ttu-id="3c1de-111">가져올 수는 <xref:System.Windows.Data.BindingExpression> 사용 하 여 개체는 <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> 메서드 또는 <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> 데이터 바인딩된 개체에서 메서드.</span><span class="sxs-lookup"><span data-stu-id="3c1de-111">You can obtain a <xref:System.Windows.Data.BindingExpression> object by using the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method or the <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> method on a data-bound object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c1de-112">이 <see cref="T:System.Windows.Data.BindingExpression" />이 사용하는 바인딩 소스 개체를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-112">Gets the binding source object that this <see cref="T:System.Windows.Data.BindingExpression" /> uses.</span></span></summary>
        <value><span data-ttu-id="3c1de-113">이 <see cref="T:System.Windows.Data.BindingExpression" />이 사용하는 바인딩 소스 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-113">The binding source object that this <see cref="T:System.Windows.Data.BindingExpression" /> uses.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3c1de-114">다음 예제에서는 구현은 <xref:System.Windows.Controls.Primitives.ButtonBase.Click> 이벤트 처리기를 사용 하는 <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> 를 얻는 메서드를는 <xref:System.Windows.Data.BindingExpression> 를 호출 하는 <xref:System.Windows.Data.BindingExpression.DataItem%2A> 바인딩 소스 개체에 액세스 하는 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-114">The following example shows the implementation of a <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler that uses the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method to obtain the <xref:System.Windows.Data.BindingExpression> and then calls the <xref:System.Windows.Data.BindingExpression.DataItem%2A> property to access the binding source object.</span></span>  
  
 <span data-ttu-id="3c1de-115"><xref:System.Windows.Controls.TextBlock> `SavingsText` 는 바인딩 대상 개체 및 해당 <xref:System.Windows.Controls.TextBlock.Text%2A> 속성은 바인딩 대상 속성입니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-115">The <xref:System.Windows.Controls.TextBlock> `SavingsText` is the binding target object, and its <xref:System.Windows.Controls.TextBlock.Text%2A> property is the binding target property.</span></span>  
  
 [!code-csharp[DirectionalBinding#OnRentRaise](~/samples/snippets/csharp/VS_Snippets_Wpf/DirectionalBinding/CSharp/Page1.xaml.cs#onrentraise)]
 [!code-vb[DirectionalBinding#OnRentRaise](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DirectionalBinding/VisualBasic/DirectionalBinding.vb#onrentraise)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentBinding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.Binding ParentBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.Binding ParentBinding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ParentBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::Binding ^ ParentBinding { System::Windows::Data::Binding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c1de-116">현재 <see cref="T:System.Windows.Data.Binding" />의 <see cref="T:System.Windows.Data.BindingExpression" /> 개체를 반환합니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-116">Returns the <see cref="T:System.Windows.Data.Binding" /> object of the current <see cref="T:System.Windows.Data.BindingExpression" />.</span></span></summary>
        <value><span data-ttu-id="3c1de-117">현재 바인딩 식의 <see cref="T:System.Windows.Data.Binding" /> 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-117">The <see cref="T:System.Windows.Data.Binding" /> object of the current binding expression.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvedSource">
      <MemberSignature Language="C#" Value="public object ResolvedSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResolvedSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ResolvedSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResolvedSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ResolvedSource { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c1de-118">이 <see cref="T:System.Windows.Data.BindingExpression" />에 대한 바인딩 소스를 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-118">Gets the binding source object for this <see cref="T:System.Windows.Data.BindingExpression" />.</span></span></summary>
        <value><span data-ttu-id="3c1de-119">이 <see cref="T:System.Windows.Data.BindingExpression" />에 대한 바인딩 소스입니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-119">The binding source object for this <see cref="T:System.Windows.Data.BindingExpression" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvedSourcePropertyName">
      <MemberSignature Language="C#" Value="public string ResolvedSourcePropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResolvedSourcePropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ResolvedSourcePropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResolvedSourcePropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResolvedSourcePropertyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c1de-120">이 <see cref="T:System.Windows.Data.BindingExpression" />에 대한 바인딩 소스 속성의 이름을 가져옵니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-120">Gets the name of the binding source property for this <see cref="T:System.Windows.Data.BindingExpression" />.</span></span></summary>
        <value><span data-ttu-id="3c1de-121">이 <see cref="T:System.Windows.Data.BindingExpression" />에 대한 바인딩 소스 속성의 이름입니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-121">The name of the binding source property for this <see cref="T:System.Windows.Data.BindingExpression" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.IWeakEventListener.ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.IWeakEventListener.ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Function ReceiveWeakEvent (managerType As Type, sender As Object, e As EventArgs) As Boolean Implements IWeakEventListener.ReceiveWeakEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.IWeakEventListener.ReceiveWeakEvent(Type ^ managerType, System::Object ^ sender, EventArgs ^ e) = System::Windows::IWeakEventListener::ReceiveWeakEvent;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType"><span data-ttu-id="3c1de-122">이 메서드를 호출하는 <see cref="T:System.Windows.WeakEventManager" />의 형식입니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-122">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method.</span></span> <span data-ttu-id="3c1de-123">이 형식은 <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" /> 형식의 관리자 개체만 인식합니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-123">This only recognizes manager objects of type <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</span></span></param>
        <param name="sender"><span data-ttu-id="3c1de-124">이벤트를 발생시킨 개체입니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-124">Object that originated the event.</span></span></param>
        <param name="e"><span data-ttu-id="3c1de-125">이벤트 데이터입니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-125">Event data.</span></span></param>
        <summary><span data-ttu-id="3c1de-126">이 멤버는 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-126">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns>
          <span data-ttu-id="3c1de-127">수신기가 이벤트를 처리했으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-127"><see langword="true" /> if the listener handled the event; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSource">
      <MemberSignature Language="C#" Value="public override void UpdateSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.UpdateSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateSource ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c1de-128"><see cref="F:System.Windows.Data.BindingMode.TwoWay" /> 또는 <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> 바인딩의 바인딩 소스 속성에 현재 바인딩 대상 값을 보냅니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-128">Sends the current binding target value to the binding source property in <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> or <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> bindings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c1de-129">이 메서드는 아무 작업도 수행 때는 <xref:System.Windows.Data.Binding.Mode%2A> 바인딩의 않습니다 <xref:System.Windows.Data.BindingMode.TwoWay> 또는 <xref:System.Windows.Data.BindingMode.OneWayToSource>합니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-129">This method does nothing when the <xref:System.Windows.Data.Binding.Mode%2A> of the binding is not <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource>.</span></span>  
  
 <span data-ttu-id="3c1de-130">경우는 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 바인딩의 값으로 설정 됩니다 <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>를 호출 해야 합니다는 <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> 소스에 다시 메서드 또는 변경 내용을 전파 하지 것입니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-130">If the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of your binding is set to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, you must call the <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> method or the changes will not propagate back to the source.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3c1de-131">바인딩이 해당 대상에서 분리되었습니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-131">The binding has been detached from its target.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      </Docs>
    </Member>
    <Member MemberName="UpdateTarget">
      <MemberSignature Language="C#" Value="public override void UpdateTarget ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateTarget() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateTarget ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateTarget();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c1de-132">바인딩 소스 속성에서 바인딩 대상 속성으로 데이터를 강제로 전송합니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-132">Forces a data transfer from the binding source property to the binding target property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c1de-133">이 메서드를 사용 하면 대상 속성에 source 속성에서 데이터 전송을 강제로 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-133">This method enables you to force a data transfer from the source property to the target property.</span></span> <span data-ttu-id="3c1de-134">소스 개체와 같은 적절 한 속성 변경 알림 메커니즘을 구현 하는 경우 <xref:System.ComponentModel.INotifyPropertyChanged>를 대상으로 업데이트는 자동으로 발생 합니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-134">If your source object implements a proper property-changed notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>, target updates happen automatically.</span></span> <span data-ttu-id="3c1de-135">그러나 소스 개체가 적절 한 속성 변경 알림을 제공 하지 않는 경우에 명시적으로 대상 속성을 업데이트 하려면이 방법을 사용 하려면 옵션도 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-135">However, you have the option to use this method to update the target property explicitly in cases where your source object does not provide the proper property-changed notifications.</span></span> <span data-ttu-id="3c1de-136">응용 프로그램을 정기적으로 대상 속성을 업데이트 해야 하는 경우에이 메서드를 사용할 수 있습니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-136">You can also use this method if your application needs to update the target properties periodically.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3c1de-137">바인딩이 해당 대상에서 분리되었습니다.</span><span class="sxs-lookup"><span data-stu-id="3c1de-137">The binding has been detached from its target.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
      </Docs>
    </Member>
  </Members>
</Type>