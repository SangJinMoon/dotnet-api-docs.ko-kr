<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BindingMode.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f7efa130d47e93e47c5ffa25e3ec13df70e2af9c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7efa130d47e93e47c5ffa25e3ec13df70e2af9c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Data.BindingMode">
          <source>Describes the direction of the data flow in a binding.</source>
          <target state="translated">바인딩의 데이터 흐름 방향을 설명합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.BindingMode.Default">
          <source>Uses the default <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Mode" /&gt;</ph> value of the binding target.</source>
          <target state="translated">바인딩 대상의 기본 <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Mode" /&gt;</ph> 값을 사용합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.BindingMode.Default">
          <source>The default value varies for each dependency property.</source>
          <target state="translated">기본값은 각 종속성 속성에 따라 다릅니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.BindingMode.Default">
          <source>In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.</source>
          <target state="translated">일반적으로 텍스트 상자 및 확인란 속성처럼 사용자가 편집 가능한 컨트롤 속성의 기본값은 양방향 바인딩으로 설정되지만 대부분의 다른 속성 기본값은 단방향 바인딩으로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.BindingMode.Default">
          <source>A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <ph id="ph1">&lt;see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /&gt;</ph> and then check the Boolean value of the <ph id="ph2">&lt;see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /&gt;</ph> property.</source>
          <target state="translated">종속성 속성이 기본적으로 단방향 또는 양방향으로 바인드되는지를 프로그래밍 방식으로 결정하려면 <ph id="ph1">&lt;see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /&gt;</ph>를 사용하여 속성의 속성 메타데이터를 가져온 후 <ph id="ph2">&lt;see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /&gt;</ph> 속성의 부울 값을 확인합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.BindingMode.OneTime">
          <source>Updates the binding target when the application starts or when the data context changes.</source>
          <target state="translated">응용 프로그램이 시작되거나 데이터 컨텍스트가 변경될 때 바인딩 대상을 업데이트합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.BindingMode.OneTime">
          <source>This type of binding is appropriate if you are using data where either a snapshot of the current state is appropriate to use or the data is truly static.</source>
          <target state="translated">이 바인딩 유형은 현재 상태의 스냅숏이 사용하기에 적절하거나 데이터가 실제로 정적인 상황에서 데이터를 사용하는 경우에 적합합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.BindingMode.OneTime">
          <source>This type of binding is also useful if you want to initialize your target property with some value from a source property and the data context is not known in advance.</source>
          <target state="translated">또한 이 바인딩 유형은 원본 속성의 일부 값으로 대상 속성을 초기화하려고 하며 데이터 컨텍스트가 사전에 알려지지 않은 경우에도 유용합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.BindingMode.OneTime">
          <source>This is essentially a simpler form of <ph id="ph1">&lt;see cref="F:System.Windows.Data.BindingMode.OneWay" /&gt;</ph> binding that provides better performance in cases where the source value does not change.</source>
          <target state="translated">이는 기본적으로 원본 값이 변경되지 않은 경우에 더 나은 성능을 제공하는 <ph id="ph1">&lt;see cref="F:System.Windows.Data.BindingMode.OneWay" /&gt;</ph> 바인딩의 더 간단한 형태입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.BindingMode.OneWay">
          <source>Updates the binding target (target) property when the binding source (source) changes.</source>
          <target state="translated">바인딩 소스(원본)가 변경되면 바인딩 대상(대상) 속성이 업데이트됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.BindingMode.OneWay">
          <source>This type of binding is appropriate if the control being bound is implicitly read-only.</source>
          <target state="translated">이 바인딩 유형은 바인드되는 컨트롤이 암시적으로 읽기 전용인 경우에 적합합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.BindingMode.OneWay">
          <source>For instance, you may bind to a source such as a stock ticker.</source>
          <target state="translated">예를 들어 주식 시세표시기와 같은 원본에 바인드할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.BindingMode.OneWay">
          <source>Or perhaps your target property has no control interface provided for making changes, such as a data-bound background color of a table.</source>
          <target state="translated">또는 대상 속성에는 테이블의 데이터 바인딩된 배경색과 같이 변경을 위해 제공된 컨트롤 인터페이스가 없을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.BindingMode.OneWay">
          <source>If there is no need to monitor the changes of the target property, using the <ph id="ph1">&lt;see cref="F:System.Windows.Data.BindingMode.OneWay" /&gt;</ph> binding mode avoids the overhead of the <ph id="ph2">&lt;see cref="F:System.Windows.Data.BindingMode.TwoWay" /&gt;</ph> binding mode.</source>
          <target state="translated">대상 속성의 변경 내용을 모니터링할 필요가 없는 경우 <ph id="ph1">&lt;see cref="F:System.Windows.Data.BindingMode.OneWay" /&gt;</ph> 바인딩 모드를 사용하면 <ph id="ph2">&lt;see cref="F:System.Windows.Data.BindingMode.TwoWay" /&gt;</ph> 바인딩 모드의 오버헤드가 방지됩니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.BindingMode.OneWayToSource">
          <source>Updates the source property when the target property changes.</source>
          <target state="translated">대상 속성이 변경될 때 원본 속성을 업데이트합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.BindingMode.TwoWay">
          <source>Causes changes to either the source property or the target property to automatically update the other.</source>
          <target state="translated">원본 속성 또는 대상 속성이 변경되면 다른 항목이 자동으로 업데이트되도록 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.BindingMode.TwoWay">
          <source>This type of binding is appropriate for editable forms or other fully-interactive <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> scenarios.</source>
          <target state="translated">이 바인딩 유형은 편집 가능한 폼이나 기타 완전한 대화형 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 시나리오에 적합합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>