<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Binding.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86cb494c904e9e37c94748406bd0f7931b61046db17.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b494c904e9e37c94748406bd0f7931b61046db17</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Data.Binding">
          <source>Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, WPF elements), and any data source (for example, a database, an XML file, or any object that contains data).</source>
          <target state="translated">바인딩의 정의에 고급 액세스를 제공하여 바인딩 대상 개체의 속성(일반적으로 WPF 요소), 임의 데이터 원본(예: 데이터베이스, XML 파일 또는 데이터가 포함된 개체)을 연결합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> data binding provides a simple and consistent way for applications to present and interact with data.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> 데이터 바인딩은 응용 프로그램이 데이터를 제공하고 상호 작용할 수 있는 간단하고 일관된 방법을 제공합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>Data binding enables you to synchronize the values of the properties of two different objects.</source>
          <target state="translated">데이터 바인딩을 사용 하면 두 개의 다른 개체의 속성 값을 동기화 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>To establish a binding, use the <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> class or one of the other classes that inherit <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase&gt;</ph>.</source>
          <target state="translated">사용 하 여 바인딩을 설정 하는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> 클래스 또는 상속 하는 다른 클래스 중 하나 <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>Regardless of what object you are binding and the nature of your data source, each binding follows the model illustrated by the following figure.</source>
          <target state="translated">바인딩 개체에 관계 없이 및 데이터 원본의 특성, 각 바인딩에 다음 그림에서 설명 하는 모델을 따릅니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source><bpt id="p1">![</bpt>Basic data binding diagram<ept id="p1">]</ept><bpt id="p2">(~/add/media/databindingmostbasic.png "</bpt>Basic data binding diagram<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>기본 데이터 바인딩 다이어그램<ept id="p1">]</ept><bpt id="p2">(~/add/media/databindingmostbasic.png "</bpt>기본 데이터 바인딩 다이어그램<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>The figure demonstrates the following fundamental <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> data binding concepts.</source>
          <target state="translated">이 그림에서는 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 데이터 바인딩 개념입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>Each binding typically has these four components: a binding target object, a target property, a binding source, and a <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> to the value in the binding source to use.</source>
          <target state="translated">일반적으로 각 바인딩에 이러한 네 가지 구성 요소: 대상 속성 바인딩 대상 개체, 바인딩 소스 및 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> 사용할 바인딩 소스에서 값으로.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>For example, if you want to bind the content of a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> to the Name property of an Employee object, your target object is the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>, the target property is the <ph id="ph3">&lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;</ph> property, the value to use is Name, and the source object is the Employee object.</source>
          <target state="translated">예를 들어의 콘텐츠를 바인딩할 경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 대상 개체는 Employee 개체의 Name 속성에는 <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>, target 속성이 <ph id="ph3">&lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;</ph> 속성을 사용 하는 값은 이름 및 원본 개체는 직원 개체입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>The target property must be a dependency property.</source>
          <target state="translated">대상 속성은 종속성 속성이어야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>This also means that you cannot bind a field.</source>
          <target state="translated">즉, 필드를 바인딩할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>Most properties of <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> objects are dependency properties and most dependency properties, except read-only ones, support data binding by default.</source>
          <target state="translated">속성을 대부분 <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> 개체는 종속성 속성 및 읽기 전용 것을 제외한 대부분의 종속성 속성을 기본적으로 데이터 바인딩을 지원 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>(Only <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> types can define dependency properties and all <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> objects derive from <ph id="ph3">&lt;xref:System.Windows.DependencyObject&gt;</ph>.)</source>
          <target state="translated">(만 <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> 종속성 속성 및 모든 형식을 정의할 수 <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> 개체에서 파생 <ph id="ph3">&lt;xref:System.Windows.DependencyObject&gt;</ph>.)</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>Although not specified in the figure, it should be noted that the binding source object is not restricted to being a custom <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> object.</source>
          <target state="translated">그림에는 지정되지 않았지만 바인딩 소스 개체는 사용자 지정 <ph id="ph1">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> 개체로 제한되지 않습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> data binding supports data in the form of <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> objects and <ph id="ph3">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 데이터 바인딩은 <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> 개체 및 <ph id="ph3">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> 형식의 데이터를 지원합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>To provide some examples, your binding source may be a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>, any list object, a <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> object that is associated with <ph id="ph3">[!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)]</ph> data or Web Services, or an XmlNode that contains your <ph id="ph4">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> data.</source>
          <target state="translated">바인딩 소스 몇 가지 예를 제공 하는 것을 <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>, 목록 개체는 <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> 연결 된 개체에 <ph id="ph3">[!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)]</ph> 데이터 또는 웹 서비스 또는 들어 있는 XmlNode 프로그램 <ph id="ph4">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> 데이터입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;</ph> property to specify the direction of the data flow.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;</ph> 속성을 통해 데이터 흐름의 방향을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>To detect source changes in one-way or two-way bindings, the source must implement a suitable property change notification mechanism such as <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>.</source>
          <target state="translated">단방향 또는 양방향 바인딩이 소스 변경 내용을 검색 하려면 원본 적절 한 속성 변경 알림 메커니즘을와 같은 구현 해야 <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Implement Property Change Notification<ept id="p1">](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 속성 변경 알림을 구현<ept id="p1">](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> property specifies the timing of source updates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> 속성 소스 업데이트의 타이밍을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>For more information, see "Basic Data Binding Concepts" in <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">자세한 내용은의 "기본 데이터 바인딩 개념" 참조 <bpt id="p1">[</bpt>데이터 바인딩 개요<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>XAML Attribute Usage</source>
          <target state="translated">XAML 특성 사용</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>XAML Values</source>
          <target state="translated">XAML 값</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source><bpt id="p1">*</bpt>declaration<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>declaration<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>Zero or more attribute-assignment clauses separated by commas (,).</source>
          <target state="translated">쉼표 (,)로 구분 된 0 개 이상의 할당 특성 클래스입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.Binding">
          <source>For more information, see <bpt id="p1">[</bpt>Binding Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/binding-markup-extension.md)</ept> or <bpt id="p2">[</bpt>Binding Declarations Overview<ept id="p2">](~/docs/framework/wpf/data/binding-declarations-overview.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>바인딩 태그 확장<ept id="p1">](~/docs/framework/wpf/advanced/binding-markup-extension.md)</ept> 또는 <bpt id="p2">[</bpt>바인딩 선언 개요<ept id="p2">](~/docs/framework/wpf/data/binding-declarations-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.Windows.Data.Binding">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.#ctor(System.String)">
          <source>The initial <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Path" /&gt;</ph> for the binding.</source>
          <target state="translated">바인딩에 사용할 초기 <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Path" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> class with an initial path.</source>
          <target state="translated">초기 경로를 사용하여 <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to the event.</source>
          <target state="translated">이벤트를 수신 대기하는 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>The handler to add.</source>
          <target state="translated">추가할 처리기입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.SourceUpdated" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.SourceUpdated" /&gt;</ph> 연결된 이벤트에 대한 처리기를 추가합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>This method supports attached event usage in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">이 메서드는 지원에 연결 된 이벤트 사용 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to the event.</source>
          <target state="translated">이벤트를 수신 대기하는 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>The handler to add.</source>
          <target state="translated">추가할 처리기입니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>Adds a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.TargetUpdated" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.TargetUpdated" /&gt;</ph> 연결된 이벤트에 대한 처리기를 추가합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>This method supports attached event usage in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">이 메서드는 지원에 연결 된 이벤트 사용 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.AsyncState">
          <source>Gets or sets opaque data passed to the asynchronous data dispatcher.</source>
          <target state="translated">비동기 데이터 디스패처로 전달된 불투명 데이터를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.AsyncState">
          <source>Data passed to the asynchronous data dispatcher.</source>
          <target state="translated">비동기 데이터 디스패처로 전달된 데이터입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.BindsDirectlyToSource">
          <source>Gets or sets a value that indicates whether to evaluate the <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Path" /&gt;</ph> relative to the data item or the <ph id="ph2">&lt;see cref="T:System.Windows.Data.DataSourceProvider" /&gt;</ph> object.</source>
          <target state="translated">데이터 항목 또는 <ph id="ph2">&lt;see cref="T:System.Windows.Data.DataSourceProvider" /&gt;</ph> 개체를 기준으로 <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Path" /&gt;</ph>를 평가할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.BindsDirectlyToSource">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> to evaluate the path relative to the data item itself; otherwise, <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">데이터 항목 자체를 기준으로 경로를 평가하려면 <ph id="ph1">&lt;see langword="false" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.BindsDirectlyToSource">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.BindsDirectlyToSource">
          <source>The normal behavior (when this property is <ph id="ph1">`false`</ph>) includes special treatment for <ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> objects.</source>
          <target state="translated">일반적인 동작 (이 속성이 <ph id="ph1">`false`</ph>)에 대 한 특별 한 취급 포함 <ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.BindsDirectlyToSource">
          <source>In this case, the binding engine evaluates the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> relative to the object obtained from the <ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph> property.</source>
          <target state="translated">바인딩 엔진 평가 하는 경우에 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> 에서 가져온 개체를 기준으로 <ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.BindsDirectlyToSource">
          <source>In addition, the binding listens for the <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</ph> event and reacts accordingly.</source>
          <target state="translated">에 대 한 바인딩을 수신 대기 하는 또한는 <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</ph> 이벤트와 그에 따라 반응 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.BindsDirectlyToSource">
          <source>Setting this property to <ph id="ph1">`true`</ph> overrides this behavior and gives the binding access to properties of the <ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> object itself.</source>
          <target state="translated">이 속성을 설정 <ph id="ph1">`true`</ph> 의 속성에 바인딩 파일에 대 한 액세스를 제공 하 고이 동작 재정의 <ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> 개체 자체입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.Converter">
          <source>Gets or sets the converter to use.</source>
          <target state="translated">사용할 변환기를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Windows.Data.IValueConverter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.IValueConverter" /&gt;</ph> 형식의 값입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>A binding implicitly uses a default converter that tries to do a type conversion between the source value and the target value.</source>
          <target state="translated">바인딩 소스 값과 대상 값 사이의 형식 변환 수행 하려고 하는 기본 변환기를 암시적으로 사용 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>If a conversion cannot be made, the default converter returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">변환을 만들 수 없는 경우 기본 변환기는 <ph id="ph1">`null`</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>If you want to associate a custom value converter with a binding, you should create a class that implements the <ph id="ph1">&lt;xref:System.Windows.Data.IValueConverter&gt;</ph> interface and supply implementations for the <ph id="ph2">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph> methods.</source>
          <target state="translated">구현 하는 클래스 사용자 지정 값 변환기는 바인딩으로 연결 하려는 경우 만든는 <ph id="ph1">&lt;xref:System.Windows.Data.IValueConverter&gt;</ph> 인터페이스에 대 한 구현을 제공 하 고는 <ph id="ph2">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>Value converters can change data from one type to another, translate between cultural details such as character sets, or modify other aspects of their presentation.</source>
          <target state="translated">값 변환기 형식 간에 데이터 변경, 문자 집합을 같은 문화권 정보 사이 변환 하거나 프레젠테이션의 다른 기능을 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>For examples of typical conversion scenarios, see "Data Conversion" in the <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">"데이터 변환" 참조 일반적인 변환 시나리오의 예는 <bpt id="p1">[</bpt>데이터 바인딩 개요<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>XAML Attribute Usage</source>
          <target state="translated">XAML 특성 사용</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>XAML Values</source>
          <target state="translated">XAML 값</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source><bpt id="p1">*</bpt>myConverter<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>myConverter<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>A resource reference to a class that implements the <ph id="ph1">&lt;xref:System.Windows.Data.IValueConverter&gt;</ph> interface, which includes implementations of the <ph id="ph2">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph> methods.</source>
          <target state="translated">구현 하는 클래스에 대 한 리소스 참조는 <ph id="ph1">&lt;xref:System.Windows.Data.IValueConverter&gt;</ph> 구현이 포함 된 인터페이스는 <ph id="ph2">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Converter">
          <source>To refer to a value converter, use the <bpt id="p1">[</bpt>StaticResource Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</ept>.</source>
          <target state="translated">값 변환기를 참조 하려면 사용 된 <bpt id="p1">[</bpt>StaticResource 태그 확장<ept id="p1">](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.ConverterCulture">
          <source>Gets or sets the culture in which to evaluate the converter.</source>
          <target state="translated">변환기를 평가할 문화권을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterCulture">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterCulture">
          <source>If you do not set this property, the binding engine uses the <ph id="ph1">`Language`</ph> property of the binding target object.</source>
          <target state="translated">이 속성을 설정 하지 않으면 바인딩 엔진에서 사용 된 <ph id="ph1">`Language`</ph> 바인딩 대상 개체의 속성입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterCulture">
          <source>In <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> this defaults to "en-US" or inherits the value from the root element (or any element) of the page, if one has been explicitly set.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> "EN-US"를 기본값으로 사용 하거나 속성을 명시적으로 설정 된 경우 페이지의 루트 요소 (또는 요소)에서 값이 상속 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterCulture">
          <source>For information about data conversion, see the Data Conversion section in the <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">데이터 변환에 대 한 내용은의 데이터 변환 섹션을 참조 하십시오.는 <bpt id="p1">[</bpt>데이터 바인딩 개요<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.ConverterParameter">
          <source>Gets or sets the parameter to pass to the <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Converter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Converter" /&gt;</ph>에 전달할 매개 변수를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterParameter">
          <source>The parameter to pass to the <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Converter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Converter" /&gt;</ph>에 전달할 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterParameter">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterParameter">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ConverterParameter%2A&gt;</ph> property to specify how an object is converted.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ConverterParameter%2A&gt;</ph> 속성을 개체로 변환 하는 방법을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterParameter">
          <source>This property passes additional information to a converter that you use on a binding.</source>
          <target state="translated">이 속성은 바인딩에서 사용 하는 변환기를 추가 정보를 전달 합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterParameter">
          <source>When you specify a <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ConverterParameter%2A&gt;</ph>, the value is passed to the <ph id="ph2">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph> methods as the <ph id="ph4">`parameter`</ph> parameter.</source>
          <target state="translated">지정 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ConverterParameter%2A&gt;</ph>, 값이 전달 되는 <ph id="ph2">&lt;xref:System.Windows.Data.IValueConverter.Convert%2A&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Data.IValueConverter.ConvertBack%2A&gt;</ph> 와 메서드는 <ph id="ph4">`parameter`</ph> 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterParameter">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Produce a Value Based on a List of Bound Items<ept id="p1">](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md)</ept>.</source>
          <target state="translated">예를 들어 참조 <bpt id="p1">[</bpt>하는 방법: 생성 된 항목의 목록 바인딩된에 따라 값<ept id="p1">](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ConverterParameter">
          <source>That example shows an implementation of an <ph id="ph1">&lt;xref:System.Windows.Data.IMultiValueConverter&gt;</ph> but the usage still applies.</source>
          <target state="translated">그 예에서의 구현을 보여 줍니다.는 <ph id="ph1">&lt;xref:System.Windows.Data.IMultiValueConverter&gt;</ph> 않지만 여전히 사용에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.Binding.DoNothing">
          <source>Used as a returned value to instruct the binding engine not to perform any action.</source>
          <target state="translated">바인딩 엔진에 작업을 수행하지 않도록 지시하기 위해 반환된 값으로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Data.Binding.DoNothing">
          <source>A binding source property or a converter can return <ph id="ph1">&lt;xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType&gt;</ph> to instruct the binding engine not to perform any action.</source>
          <target state="translated">바인딩 소스 속성 또는 변환기로 돌아오십시오 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType&gt;</ph> 동작을 수행 하려면 하지 바인딩 엔진에 지시 하 합니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Windows.Data.Binding.DoNothing">
          <source>For example, to instruct the binding engine not to transfer a value to the binding target, not to move to the next <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> in a <ph id="ph2">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, or not to use the <ph id="ph3">`FallBackValue`</ph> or default value.</source>
          <target state="translated">바인딩 엔진을 다음으로 이동 하지 바인딩 대상 값을 전송 하지 않도록 지시 하기 위해 <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, 또는를 사용 하지 않는 <ph id="ph3">`FallBackValue`</ph> 값 또는 기본값입니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.ElementName">
          <source>Gets or sets the name of the element to use as the binding source object.</source>
          <target state="translated">바인딩 소스 개체로 사용할 요소의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>The value of the <ph id="ph1">&lt;see langword="Name" /&gt;</ph> property or <bpt id="p1">[</bpt>x:Name Directive<ept id="p1">](~/docs/framework/xaml-services/x-name-directive.md)</ept> of the element of interest.</source>
          <target state="translated">값은 <ph id="ph1">&lt;see langword="Name" /&gt;</ph> 속성 또는 <bpt id="p1">[</bpt>X:name 지시문<ept id="p1">](~/docs/framework/xaml-services/x-name-directive.md)</ept> 원하는 요소입니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>You can refer to elements in code only if they are registered to the appropriate <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> through <ph id="ph2">&lt;see langword="RegisterName" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see langword="RegisterName" /&gt;</ph>을 통해 적절한 <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>에 등록된 경우에만 코드의 요소를 참조할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>For more information, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>WPF XAML 이름 범위<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>This property is useful when you want to bind to the property of another element in your application.</source>
          <target state="translated">이 속성은 응용 프로그램에서 다른 요소의 속성에 바인딩할 때 유용 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>For example, if you want to use a <ph id="ph1">&lt;xref:System.Windows.Controls.Slider&gt;</ph> to control the height of another control in your application, or if you want to bind the <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> of your control to the <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A&gt;</ph> property of your <ph id="ph4">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> control.</source>
          <target state="translated">예를 들어, 사용 하려는 경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.Slider&gt;</ph> 응용 프로그램에서 다른 컨트롤의 높이 제어 하 바인딩할 경우 또는 <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> 사용자 컨트롤의는 <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A&gt;</ph> 속성의 프로그램 <ph id="ph4">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> 제어 합니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>By default, bindings inherit the data context specified by the <ph id="ph1">`DataContext`</ph> property, if one has been set.</source>
          <target state="translated">기본적으로 바인딩은 상속으로 지정 된 데이터 컨텍스트는 <ph id="ph1">`DataContext`</ph> 속성에 설정 된 경우.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>However, the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph> property is one of the ways you can explicitly set the source of a <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> and override the inherited data context.</source>
          <target state="translated">그러나는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph> 속성은의 원본을 명시적으로 설정할 수는 방법 중 하나는 <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> 상속 된 데이터 컨텍스트를 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Specify the Binding Source<ept id="p1">](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 바인딩 소스를 지정<ept id="p1">](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Data.Binding&gt;</ph> class also enable you to set the source of the binding explicitly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph> 의 속성은 <ph id="ph3">&lt;xref:System.Windows.Data.Binding&gt;</ph> 클래스도 설정할 수 있도록는 바인딩 소스를 명시적으로 합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>However, only one of the three properties, <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>, should be set for each binding, or a conflict might occur.</source>
          <target state="translated">그러나 세 개의 속성 중 하나만 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>집합 각각에 대 한 바인딩 해야, 또는 충돌이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ElementName">
          <source>This property throws an exception if there is a binding source conflict.</source>
          <target state="translated">바인딩 소스 충돌 하는 경우이 속성에서 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
          <source>The object from which to get namespace information.</source>
          <target state="translated">네임스페이스 정보를 가져올 개체입니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
          <source>Returns an <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> namespace manager object used by the binding attached to the specified object.</source>
          <target state="translated">지정된 개체에 연결된 바인딩에 사용되는 <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> 네임스페이스 관리자 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
          <source>A returned object used for viewing <ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> namespaces that relate to the binding on the passed object element.</source>
          <target state="translated">전달된 개체 요소의 바인딩과 관련된 <ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> 네임스페이스를 보는 데 사용되는 반환 개체입니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
          <source>This object should be cast as <ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph>.</source>
          <target state="translated">이 개체는 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph>로 캐스팅되어야 합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
          <source>This method supports attached property usage for the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;</ph> attached property.</source>
          <target state="translated">이 메서드는 연결된 속성의 사용에 대 한 지원의 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;</ph> 연결 된 속성입니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> namespace managers are relevant only if the data in the binding came from an <ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> binding source (<ph id="ph3">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph> object).</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> 네임 스페이스 관리자 바인딩에 데이터에서 제공 하는 경우에 적용 되는 <ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph> 바인딩 소스 (<ph id="ph3">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph> 개체).</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
          <source>If a namespace manager was not specifically applied either in the original data source creation or by subsequently calling <ph id="ph1">&lt;xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A&gt;</ph> on the binding, then this method will return <ph id="ph2">`null`</ph>.</source>
          <target state="translated">네임 스페이스 관리자는 원래 데이터 소스를 만들 또는 이후에 호출 하 여 구체적으로 적용 되지 않은 경우 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A&gt;</ph> 바인딩에 대 한 다음이 메서드는 반환 <ph id="ph2">`null`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
          <source>This method will always return <ph id="ph1">`null`</ph> if the data behind the binding is not <ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph>.</source>
          <target state="translated">이 메서드는 항상 반환 <ph id="ph1">`null`</ph> 바인딩에 데이터가 없으면 <ph id="ph2">[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 매개 변수는 <ph id="ph2">&lt;see langword="null" /&gt;</ph>일 수 없습니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.Binding.IndexerName">
          <source>Used as the <ph id="ph1">&lt;see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.ComponentModel.PropertyChangedEventArgs" /&gt;</ph> to indicate that an indexer property has changed.</source>
          <target state="translated">인덱서 속성이 변경되었음을 나타내는 <ph id="ph1">&lt;see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /&gt;</ph>의 <ph id="ph2">&lt;see cref="T:System.ComponentModel.PropertyChangedEventArgs" /&gt;</ph>으로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.IsAsync">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph> should get and set values asynchronously.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>이 비동기적으로 값을 가져오고 설정해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.IsAsync">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.IsAsync">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.IsAsync%2A&gt;</ph> property when the <ph id="ph2">`get`</ph> accessor of your binding source property might take a long time.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.IsAsync%2A&gt;</ph> 속성 때는 <ph id="ph2">`get`</ph> 바인딩 소스 속성의 접근자에는 시간이 오래 걸릴 수 있습니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.IsAsync">
          <source>One example is an image property with a <ph id="ph1">`get`</ph> accessor that downloads from the Web.</source>
          <target state="translated">한 가지 예는 있는 이미지 속성을는 <ph id="ph1">`get`</ph> 는 웹에서 다운로드 하는 접근자입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.IsAsync">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Data.Binding.IsAsync%2A&gt;</ph> to <ph id="ph2">`true`</ph> avoids blocking the <ph id="ph3">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> while the download occurs.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.IsAsync%2A&gt;</ph> 를 <ph id="ph2">`true`</ph> 차단 되지 않습니다는 <ph id="ph3">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 다운로드 하는 동안 합니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.IsAsync">
          <source>While waiting for the value to arrive, the binding reports the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph>, if one is available, or the default value of the binding target property.</source>
          <target state="translated">바인딩 값을 받을 기다리는 동안 보고는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph>가능한 경우 기본값인 바인딩 대상 속성입니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.IsAsync">
          <source>However, there should not be many scenarios where you need to use the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.IsAsync%2A&gt;</ph> property.</source>
          <target state="translated">그러나 있어서는 안 사용 해야 하는 다양 한 시나리오는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.IsAsync%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.IsAsync">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)]</ph> guidelines recommend against defining properties that are orders of magnitude slower than a field set would be.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)]</ph> 지침 속성 필드 집합 보다 더 느린 대량 주문 인을 정의 하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.IsAsync">
          <source>When you are creating your class, consider handling extremely slow operations outside of the <ph id="ph1">`get`</ph> accessor and caching the result.</source>
          <target state="translated">클래스를 만들 때 고려 너무 느린 작업 외부의 처리는 <ph id="ph1">`get`</ph> 접근자 및 결과 캐시 합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.IsAsync">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Choosing Between Properties and Methods<ept id="p1">](http://msdn.microsoft.com/library/55825e8f-7e2e-448a-9505-7217cc91b1af)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>NIB: 메서드와 속성 사이의 선택<ept id="p1">](http://msdn.microsoft.com/library/55825e8f-7e2e-448a-9505-7217cc91b1af)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.Mode">
          <source>Gets or sets a value that indicates the direction of the data flow in the binding.</source>
          <target state="translated">바인딩에서 데이터 흐름의 방향을 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Mode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingMode" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Mode">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Data.BindingMode.Default" /&gt;</ph>, which returns the default binding mode value of the target dependency property.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Data.BindingMode.Default" /&gt;</ph>, 대상 종속성 속성의 기본 바인딩 모드 값을 반환 하 합니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Mode">
          <source>However, the default value varies for each dependency property.</source>
          <target state="translated">그러나 기본값은 각 종속성 속성에 따라 다릅니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Mode">
          <source>In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.</source>
          <target state="translated">일반적으로 텍스트 상자 및 확인란 속성처럼 사용자가 편집 가능한 컨트롤 속성의 기본값은 양방향 바인딩으로 설정되지만 대부분의 다른 속성 기본값은 단방향 바인딩으로 설정됩니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Mode">
          <source>A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <ph id="ph1">&lt;see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /&gt;</ph> and then check the Boolean value of the <ph id="ph2">&lt;see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /&gt;</ph> property.</source>
          <target state="translated">종속성 속성이 기본적으로 단방향 또는 양방향으로 바인드되는지를 프로그래밍 방식으로 결정하려면 <ph id="ph1">&lt;see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /&gt;</ph>를 사용하여 속성의 속성 메타데이터를 가져온 후 <ph id="ph2">&lt;see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /&gt;</ph> 속성의 부울 값을 확인합니다.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Mode">
          <source>To support <ph id="ph1">&lt;xref:System.Windows.Data.BindingMode.OneWay&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> bindings, the underlying data must implement <ph id="ph3">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>.</source>
          <target state="translated">지원 하기 위해 <ph id="ph1">&lt;xref:System.Windows.Data.BindingMode.OneWay&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> 기본 데이터 바인딩 구현 해야 <ph id="ph3">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Mode">
          <source>For details, see <bpt id="p1">[</bpt>How to: Implement Property Change Notification<ept id="p1">](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 속성 변경 알림을 구현<ept id="p1">](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Mode">
          <source>For <ph id="ph1">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Data.BindingMode.OneWayToSource&gt;</ph> bindings, you can control the target-to-source updates by setting the <ph id="ph3">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> property.</source>
          <target state="translated">에 대 한 <ph id="ph1">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingMode.OneWayToSource&gt;</ph> 바인딩을 설정 하 여 대상 소스로 업데이트를 제어할 수는 <ph id="ph3">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Mode">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Mode">
          <source>For more information on the different binding modes, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">서로 다른 바인딩 모드에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>데이터 바인딩 개요<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.NotifyOnSourceUpdated">
          <source>Gets or sets a value that indicates whether to raise the <ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.SourceUpdated" /&gt;</ph> event when a value is transferred from the binding target to the binding source.</source>
          <target state="translated">값이 바인딩 대상에서 바인딩 소스로 전송되는 경우 <ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.SourceUpdated" /&gt;</ph> 이벤트를 발생시킬지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnSourceUpdated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="E:System.Windows.Data.Binding.SourceUpdated" /&gt;</ph> event should be raised when the binding source value is updated; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 경우는 <ph id="ph2">&lt;see cref="E:System.Windows.Data.Binding.SourceUpdated" /&gt;</ph> 바인딩 소스 값이 고, 그렇지 않으면 업데이트 된 경우 이벤트를 발생 하도록 <ph id="ph3">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnSourceUpdated">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.NotifyOnTargetUpdated">
          <source>Gets or sets a value that indicates whether to raise the <ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.TargetUpdated" /&gt;</ph> event when a value is transferred from the binding source to the binding target.</source>
          <target state="translated">값이 바인딩 소스에서 바인딩 대상으로 전송될 때 <ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.TargetUpdated" /&gt;</ph> 이벤트를 발생시킬지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnTargetUpdated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="E:System.Windows.Data.Binding.TargetUpdated" /&gt;</ph> event should be raised when the binding target value is updated; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 경우는 <ph id="ph2">&lt;see cref="E:System.Windows.Data.Binding.TargetUpdated" /&gt;</ph> 바인딩 대상 값이 고, 그렇지 않으면 업데이트 된 경우 이벤트를 발생 하도록 <ph id="ph3">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnTargetUpdated">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.NotifyOnValidationError">
          <source>Gets or sets a value that indicates whether to raise the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.Validation.Error" /&gt;</ph> attached event on the bound object.</source>
          <target state="translated">바인딩된 개체에서 <ph id="ph1">&lt;see cref="E:System.Windows.Controls.Validation.Error" /&gt;</ph> 연결된 이벤트를 발생시킬지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnValidationError">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="E:System.Windows.Controls.Validation.Error" /&gt;</ph> attached event should be raised on the bound object when there is a validation error during source updates; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 경우는 <ph id="ph2">&lt;see cref="E:System.Windows.Controls.Validation.Error" /&gt;</ph> 연결 된 이벤트는 고, 그렇지 않으면 원본 업데이트 중에 유효성 검사 오류가 있을 때 바인딩된 개체에서 발생 해야 <ph id="ph3">&lt;see langword="false" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnValidationError">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnValidationError">
          <source>If the binding has <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;</ph> associated with it, the binding engine checks each rule each time it transfers the target property value to the source property.</source>
          <target state="translated">바인딩에 다음과 같은 경우 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;</ph> 연결 된 바인딩 엔진 검사 때마다 각 규칙 source 속성을 대상 속성 값을 전송 합니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnValidationError">
          <source>If a rule invalidates a value, the binding engine creates a <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph> object and adds it to the <ph id="ph2">&lt;xref:System.Windows.Controls.Validation&gt;</ph>.<ph id="ph3">&lt;xref:System.Windows.Controls.Validation.Errors%2A&gt;</ph></source>
          <target state="translated">규칙 값을 무효화 하는 경우 바인딩 엔진 만듭니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph> 개체를에 추가 <ph id="ph2">&lt;xref:System.Windows.Controls.Validation&gt;</ph>합니다.<ph id="ph3">&lt;xref:System.Windows.Controls.Validation.Errors%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnValidationError">
          <source>collection of the bound object.</source>
          <target state="translated">바인딩된 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnValidationError">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType&gt;</ph> property is not empty, the <ph id="ph2">&lt;xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType&gt;</ph> attached property of the object is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType&gt;</ph> 속성이 비어는 <ph id="ph2">&lt;xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType&gt;</ph> 개체의 연결된 속성이로 설정 되어 <ph id="ph3">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnValidationError">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.NotifyOnValidationError%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> is set to <ph id="ph3">`true`</ph>, then the binding engine raises the <ph id="ph4">&lt;xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType&gt;</ph> attached event on the object.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.NotifyOnValidationError%2A&gt;</ph> 속성의는 <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> 로 설정 되어 <ph id="ph3">`true`</ph>, 바인딩 엔진에서 발생 한 후는 <ph id="ph4">&lt;xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType&gt;</ph> 연결 된 개체에는 이벤트입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.NotifyOnValidationError">
          <source>For a detailed discussion of the validation process, see the Data Validation section in the <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">유효성 검사 프로세스를 대 한 자세한 내용은 데이터 유효성 검사 섹션을 참조 하십시오.는 <bpt id="p1">[</bpt>데이터 바인딩 개요<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.Path">
          <source>Gets or sets the path to the binding source property.</source>
          <target state="translated">바인딩 소스 속성의 경로를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>The path to the binding source.</source>
          <target state="translated">바인딩 소스의 경로입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>Each binding typically has these four components: a binding target object, a target property, a binding source, and a path to the value in the binding source to use.</source>
          <target state="translated">일반적으로 각 바인딩에 이러한 네 가지 구성 요소: 바인딩 대상 개체, 대상 속성, 바인딩 소스 및 사용 하는 바인딩 원본의 값에 대 한 경로입니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For more information about these data binding concepts, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">이러한 데이터 바인딩 개념에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>데이터 바인딩 개요<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> property to specify the source value you want to bind to:</source>
          <target state="translated">사용 하 여는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> 속성에 바인딩할 소스 값을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>In the simplest case, the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> property value is the name of the property of the source object to use for the binding, such as <ph id="ph2">`Path=PropertyName`</ph>.</source>
          <target state="translated">가장 단순한 경우는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> 속성 값은 바인딩의 경우와 같은 사용할 소스 개체의 속성 이름 <ph id="ph2">`Path=PropertyName`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>Subproperties of a property can be specified by a syntax similar to that used in C#.</source>
          <target state="translated">C#에서 사용한 것과 비슷한 구문을 사용 하 여 속성의 하위 속성을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For instance, the clause <ph id="ph1">`Path=ShoppingCart.Order`</ph> sets the binding to the subproperty <ph id="ph2">`Order`</ph> of the object or property <ph id="ph3">`ShoppingCart`</ph>.</source>
          <target state="translated">예를 들어 <ph id="ph1">`Path=ShoppingCart.Order`</ph> 절은 개체 또는 속성 <ph id="ph3">`ShoppingCart`</ph>의 하위 속성 <ph id="ph2">`Order`</ph>에 대한 바인딩을 설정합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>To bind to an attached property, place parentheses around the attached property.</source>
          <target state="translated">연결된 속성에 바인딩하려면 연결된 속성을 괄호로 묶습니다.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For example, to bind to the attached property <ph id="ph1">&lt;xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType&gt;</ph>, the syntax is <ph id="ph2">`Path=(DockPanel.Dock)`</ph>.</source>
          <target state="translated">예를 들어, 연결된 된 속성에 바인딩할 <ph id="ph1">&lt;xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType&gt;</ph>, 구문은 <ph id="ph2">`Path=(DockPanel.Dock)`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>Indexers of a property can be specified within square brackets following the property name where the indexer is applied.</source>
          <target state="translated">속성의 인덱서는 인덱서가 적용되는 속성 이름 뒤에 대괄호로 묶어서 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For instance, the clause <ph id="ph1">`Path=ShoppingCart[0]`</ph> sets the binding to the index that corresponds to how your property's internal indexing handles the literal string "0".</source>
          <target state="translated">예를 들어 <ph id="ph1">`Path=ShoppingCart[0]`</ph> 절은 속성의 내부 인덱싱에서 리터럴 문자열 "0"을 처리하는 방법에 해당하는 인덱스에 대한 바인딩을 설정합니다.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>Multiple indexers are also supported.</source>
          <target state="translated">여러 인덱서가 지원 됩니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>Indexers and subproperties can be mixed in a <ph id="ph1">`Path`</ph> clause; for example, <ph id="ph2">`Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</ph></source>
          <target state="translated"><ph id="ph2">`Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</ph>와 같이 <ph id="ph1">`Path`</ph> 절에서 인덱서와 하위 속성을 혼합할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>Inside indexers you can have multiple indexer parameters separated by commas (,).</source>
          <target state="translated">여러 인덱서 매개 변수를 쉼표(,)로 구분하여 인덱서 안에 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>The type of each parameter can be specified with parentheses.</source>
          <target state="translated">각 매개 변수의 형식은 괄호를 사용하여 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For example, you can have <ph id="ph1">`Path="[(sys:Int32)42,(sys:Int32)24]"`</ph>, where <ph id="ph2">`sys`</ph> is mapped to the <ph id="ph3">`System`</ph> namespace.</source>
          <target state="translated">예를 들어 <ph id="ph1">`Path="[(sys:Int32)42,(sys:Int32)24]"`</ph>를 사용할 수 있으며 여기서 <ph id="ph2">`sys`</ph>는 <ph id="ph3">`System`</ph> 네임스페이스에 매핑됩니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>When the source is a collection view, the current item can be specified with a slash (/).</source>
          <target state="translated">소스가 컬렉션 뷰인 경우 슬래시(/)를 사용하여 현재 항목을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For example, the clause <ph id="ph1">`Path=/`</ph> sets the binding to the current item in the view.</source>
          <target state="translated">예를 들어 <ph id="ph1">`Path=/`</ph> 절은 뷰의 현재 항목에 대한 바인딩을 설정합니다.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>When the source is a collection, this syntax specifies the current item of the default collection view.</source>
          <target state="translated">소스가 컬렉션인 경우 이 구문은 기본 컬렉션 뷰의 현재 항목을 지정합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>Property names and slashes can be combined to traverse properties that are collections.</source>
          <target state="translated">속성 이름과 슬래시를 결합하여 컬렉션인 속성을 트래버스할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For example, <ph id="ph1">`Path=/Offices/ManagerName`</ph> specifies the current item of the source collection, which contains an <ph id="ph2">`Offices`</ph> property that is also a collection.</source>
          <target state="translated">예를 들어 <ph id="ph1">`Path=/Offices/ManagerName`</ph>은 소스 컬렉션의 현재 항목을 지정하며 여기에는 컬렉션인 <ph id="ph2">`Offices`</ph> 속성이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>Its current item is an object that contains a <ph id="ph1">`ManagerName`</ph> property.</source>
          <target state="translated">현재 항목은 <ph id="ph1">`ManagerName`</ph> 속성을 포함하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>Optionally, a period (.) path can be used to bind to the current source.</source>
          <target state="translated">필요에 따라 마침표(.) 경로를 사용하여 현재 소스에 바인딩할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For example, <ph id="ph1">`Text="{Binding}"`</ph> is equivalent to <ph id="ph2">`Text="{Binding Path=.}"`</ph>.</source>
          <target state="translated">예를 들어 <ph id="ph1">`Text="{Binding}"`</ph>은 <ph id="ph2">`Text="{Binding Path=.}"`</ph>와 같습니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For information about path syntax, see <bpt id="p1">[</bpt>Binding Declarations Overview<ept id="p1">](~/docs/framework/wpf/data/binding-declarations-overview.md)</ept> or <bpt id="p2">[</bpt>PropertyPath XAML Syntax<ept id="p2">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>.</source>
          <target state="translated">경로 구문에 대 한 정보를 참조 하십시오. <bpt id="p1">[</bpt>바인딩 선언 개요<ept id="p1">](~/docs/framework/wpf/data/binding-declarations-overview.md)</ept> 또는 <bpt id="p2">[</bpt>PropertyPath XAML 구문<ept id="p2">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> bindings, see the <ph id="ph2">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> property.</source>
          <target state="translated">에 대 한 <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> 바인딩 참조는 <ph id="ph2">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>To bind to an entire object, you do not need to specify the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> property.</source>
          <target state="translated">를 전체 개체에 바인딩하려면 않아도 지정 하는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For more information, see "Specifying the Path to the Value" in <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">자세한 내용은의 "를 지정 하는 경로 값에" 참조 <bpt id="p1">[</bpt>데이터 바인딩 개요<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>The following example shows a style trigger that creates a <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> that reports a validation error message.</source>
          <target state="translated">다음 예에서는 스타일 트리거를 만드는 <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> 유효성 검사 오류 메시지를 보고 하 합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>The value of the setter binds to the error content of the current <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> (the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> using the style) using the <ph id="ph3">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph> property.</source>
          <target state="translated">Setter의 값이 현재 오류 내용을에 바인딩합니다 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> (의 <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 스타일을 사용 하 여)를 사용 하 여는 <ph id="ph3">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Path">
          <source>For more information on this example, see <bpt id="p1">[</bpt>How to: Implement Binding Validation<ept id="p1">](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)</ept>.</source>
          <target state="translated">이 예제에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>하는 방법: 구현 바인딩 유효성 검사<ept id="p1">](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>Gets or sets the binding source by specifying its location relative to the position of the binding target.</source>
          <target state="translated">바인딩 대상의 위치를 기준으로 해당 위치를 지정하여 바인딩 소스를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Data.RelativeSource" /&gt;</ph> object specifying the relative location of the binding source to use.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Windows.Data.RelativeSource" /&gt;</ph> 사용할 바인딩 소스의 상대 위치를 지정 하는 개체입니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>This property is commonly used to bind one property of an object to another property of the same object, or to define a binding in a style or template.</source>
          <target state="translated">이 속성은 동일한 개체의 다른 속성에 속성 개체 중 하나를 바인딩할 하거나 스타일이 나 템플릿을에서 바인딩을 정의 하는 데 주로 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>By default, bindings inherit the data context specified by the <ph id="ph1">`DataContext`</ph> property, if one has been set.</source>
          <target state="translated">기본적으로 바인딩은 상속으로 지정 된 데이터 컨텍스트는 <ph id="ph1">`DataContext`</ph> 속성에 설정 된 경우.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>However, the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph> property is one of the ways you can explicitly set the source of a <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> and override the inherited data context.</source>
          <target state="translated">그러나는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph> 속성은의 원본을 명시적으로 설정할 수는 방법 중 하나는 <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> 상속 된 데이터 컨텍스트를 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Specify the Binding Source<ept id="p1">](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 바인딩 소스를 지정<ept id="p1">](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType&gt;</ph> properties also enable you to set the source of the binding explicitly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType&gt;</ph> 속성도 설정할 수 있도록는 바인딩 소스를 명시적으로 합니다.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>However, only one of the three properties, <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>, should be set for each binding, or a conflict can occur.</source>
          <target state="translated">그러나 세 개의 속성 중 하나만 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>집합 각각에 대 한 바인딩 해야, 또는 충돌이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>This property throws an exception if there is a binding source conflict.</source>
          <target state="translated">바인딩 소스 충돌 하는 경우이 속성에서 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> information, see <bpt id="p1">[</bpt>RelativeSource MarkupExtension<ept id="p1">](~/docs/framework/wpf/advanced/relativesource-markupextension.md)</ept>.</source>
          <target state="translated">에 대 한 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> 정보 참조 <bpt id="p1">[</bpt>RelativeSource MarkupExtension<ept id="p1">](~/docs/framework/wpf/advanced/relativesource-markupextension.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>The following example shows a style trigger that creates a <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> that reports a validation error message.</source>
          <target state="translated">다음 예에서는 스타일 트리거를 만드는 <ph id="ph1">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> 유효성 검사 오류 메시지를 보고 하 합니다.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>The value of the setter binds to the error content of the current <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> (the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> using the style) using the <ph id="ph3">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph> property.</source>
          <target state="translated">Setter의 값이 현재 오류 내용을에 바인딩합니다 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> (의 <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 스타일을 사용 하 여)를 사용 하 여는 <ph id="ph3">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>For more information on this example, see <bpt id="p1">[</bpt>How to: Implement Binding Validation<ept id="p1">](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)</ept>.</source>
          <target state="translated">이 예제에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>하는 방법: 구현 바인딩 유효성 검사<ept id="p1">](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.RelativeSource">
          <source>To see the full example, see <bpt id="p1">[</bpt>Binding Validation Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159972)</ept>.</source>
          <target state="translated">전체 예제를 보려면 <bpt id="p1">[</bpt>바인딩 유효성 검사 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159972)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to the event.</source>
          <target state="translated">이벤트를 수신 대기하는 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>The handler to remove.</source>
          <target state="translated">제거할 처리기입니다.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.SourceUpdated" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.SourceUpdated" /&gt;</ph> 연결된 이벤트에 대한 처리기를 제거합니다.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>This method supports attached event usage in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">이 메서드는 지원에 연결 된 이벤트 사용 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph> that listens to the event.</source>
          <target state="translated">이벤트를 수신 대기하는 <ph id="ph1">&lt;see cref="T:System.Windows.UIElement" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="T:System.Windows.ContentElement" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>The handler to remove.</source>
          <target state="translated">제거할 처리기입니다.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>Removes a handler for the <ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.TargetUpdated" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.TargetUpdated" /&gt;</ph> 연결된 이벤트에 대한 처리기를 제거합니다.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
          <source>This method supports attached event usage in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">이 메서드는 지원에 연결 된 이벤트 사용 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)">
          <source>The object from which to get namespace information.</source>
          <target state="translated">네임스페이스 정보를 가져올 개체입니다.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph> to use for namespace evaluation in the passed element.</source>
          <target state="translated">전달된 요소의 네임스페이스 계산에 사용할 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNamespaceManager" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)">
          <source>Sets a namespace manager object used by the binding attached to the provided element.</source>
          <target state="translated">지정된 요소에 연결된 바인딩에 사용되는 네임스페이스 관리자 개체를 설정합니다.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)">
          <source>This method supports attached property usage for the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;</ph> attached property.</source>
          <target state="translated">이 메서드는 연결된 속성의 사용에 대 한 지원의 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.XmlNamespaceManager%2A&gt;</ph> 연결 된 속성입니다.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph>가 <ph id="ph2">&lt;see langword="null" /&gt;</ph>인 경우</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.ShouldSerializePath">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Path" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Path" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.ShouldSerializePath">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.ShouldSerializePath">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> property does not have a simple default value.</source>
          <target state="translated">이 <ph id="ph1">`ShouldSerialize`</ph> 메서드가 때문에 제공 되는 <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> 속성 간단한 기본 값이 없는 합니다.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.ShouldSerializePath">
          <source>This method indicates whether the property has changed from its default value.</source>
          <target state="translated">이 메서드는 속성이 기본값에서 변경 되었는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.ShouldSerializePath">
          <source>You typically invoke this method if you are either developing a designer for the <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> or developing your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 하거나 개발 하는 경우 일반적으로이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 개발 하거나는 <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.ShouldSerializeSource">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Source" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.Source" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.ShouldSerializeSource">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.ShouldSerializeSource">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph> property does not have a simple default value.</source>
          <target state="translated">이 <ph id="ph1">`ShouldSerialize`</ph> 메서드가 때문에 제공 되는 <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph> 속성 간단한 기본 값이 없는 합니다.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.ShouldSerializeSource">
          <source>This method indicates whether the property has changed from its default value.</source>
          <target state="translated">이 메서드는 속성이 기본값에서 변경 되었는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.ShouldSerializeSource">
          <source>You typically invoke this method if you are either developing a designer for the <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> or developing your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 하거나 개발 하는 경우 일반적으로이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 개발 하거나는 <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.ShouldSerializeValidationRules">
          <source>Indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.ValidationRules" /&gt;</ph> property should be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.ValidationRules" /&gt;</ph> 속성을 지속해야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.Binding.ShouldSerializeValidationRules">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has changed from its default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">속성 값이 기본값에서 변경되었으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.ShouldSerializeValidationRules">
          <source>This <ph id="ph1">`ShouldSerialize`</ph> method is provided because the <ph id="ph2">&lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;</ph> property does not have a simple default value.</source>
          <target state="translated">이 <ph id="ph1">`ShouldSerialize`</ph> 메서드가 때문에 제공 되는 <ph id="ph2">&lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;</ph> 속성 간단한 기본 값이 없는 합니다.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.ShouldSerializeValidationRules">
          <source>This method indicates whether the property has changed from its default value.</source>
          <target state="translated">이 메서드는 속성이 기본값에서 변경 되었는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.Binding.ShouldSerializeValidationRules">
          <source>You typically invoke this method if you are either developing a designer for the <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> or developing your own control incorporating the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>.</source>
          <target state="translated">에 대 한 디자이너를 하거나 개발 하는 경우 일반적으로이 메서드를 호출는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> 포함 하는 사용자 고유의 컨트롤을 개발 하거나는 <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.Source">
          <source>Gets or sets the object to use as the binding source.</source>
          <target state="translated">바인딩 소스로 사용할 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>The object to use as the binding source.</source>
          <target state="translated">바인딩 소스로 사용할 개체입니다.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>By default, bindings inherit the data context specified by the <ph id="ph1">`DataContext`</ph> property, if one has been set.</source>
          <target state="translated">기본적으로 바인딩은 상속으로 지정 된 데이터 컨텍스트는 <ph id="ph1">`DataContext`</ph> 속성에 설정 된 경우.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>However, the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph> property is one of the ways you can explicitly set the source of a <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> and override the inherited data context.</source>
          <target state="translated">그러나는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph> 속성은의 원본을 명시적으로 설정할 수는 방법 중 하나는 <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> 상속 된 데이터 컨텍스트를 재정의 합니다.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>If you do not need the functionality of establishing a scope in which several properties inherit the same data context, you can use the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph> property instead of the <ph id="ph2">`DataContext`</ph> property.</source>
          <target state="translated">범위를 설정 하는 기능이 필요 하지 않은 경우 동일한 데이터 컨텍스트를 상속 하는 여러 가지 속성을 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph> 속성 대신는 <ph id="ph2">`DataContext`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType&gt;</ph> properties also enable you to set the source of the binding explicitly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType&gt;</ph> 속성도 설정할 수 있도록는 바인딩 소스를 명시적으로 합니다.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>However, only one of the three properties, <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>, should be set for each binding, or a conflict can occur.</source>
          <target state="translated">그러나 세 개의 속성 중 하나만 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ElementName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph>, 및 <ph id="ph3">&lt;xref:System.Windows.Data.Binding.RelativeSource%2A&gt;</ph>집합 각각에 대 한 바인딩 해야, 또는 충돌이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>This property throws an exception if there is a binding source conflict.</source>
          <target state="translated">바인딩 소스 충돌 하는 경우이 속성에서 예외를 throw 합니다.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>To clear this property, set it to <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">이 속성을 지우려면로 설정 <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>XAML Attribute Usage</source>
          <target state="translated">XAML 특성 사용</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>XAML Values</source>
          <target state="translated">XAML 값</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source><bpt id="p1">*</bpt>object<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>object<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>An existing object.</source>
          <target state="translated">기존 개체입니다.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>To refer to an existing object, use the <bpt id="p1">[</bpt>StaticResource Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</ept></source>
          <target state="translated">기존 개체를 참조 하려면 사용 된 <bpt id="p1">[</bpt>StaticResource 태그 확장<ept id="p1">](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</ept></target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>The following example uses a <ph id="ph1">`Person`</ph> object with a string property named <ph id="ph2">`PersonName`</ph> that is defined in the <ph id="ph3">`SDKSample`</ph> namespace, as the first highlighted line shows.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">`Person`</ph> 라는 문자열 속성이 있는 개체 <ph id="ph2">`PersonName`</ph> 에 정의 된는 <ph id="ph3">`SDKSample`</ph> 강조 표시 된 줄은 첫 번째와 같이 네임 스페이스입니다.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>In the highlighted line that contains the <ph id="ph1">`&lt;src&gt;`</ph> element, it instantiates the <ph id="ph2">`Person`</ph> object with a <ph id="ph3">`PersonName`</ph> property value of <ph id="ph4">`Joe`</ph>.</source>
          <target state="translated">포함 하는 강조 표시 된 줄에는 <ph id="ph1">`&lt;src&gt;`</ph> 인스턴스화하여 요소는 <ph id="ph2">`Person`</ph> 개체는 <ph id="ph3">`PersonName`</ph> 의 속성 값 <ph id="ph4">`Joe`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>This is done in the <ph id="ph1">`Resources`</ph> section and assigned an <ph id="ph2">`x:Key`</ph>.</source>
          <target state="translated">이 작업은 <ph id="ph1">`Resources`</ph> 섹션 및 할당 된 <ph id="ph2">`x:Key`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>The highlighted line that contains the <ph id="ph1">`&lt;TextBlock&gt;`</ph> elements shows how to bind to the <ph id="ph2">`PersonName`</ph> property.</source>
          <target state="translated">포함 하는 강조 표시 된 줄은 <ph id="ph1">`&lt;TextBlock&gt;`</ph> 요소에 바인딩하는 방법을 보여 줍니다는 <ph id="ph2">`PersonName`</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>As a result, the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> control appears with the value "Joe".</source>
          <target state="translated">결과적으로 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> 컨트롤 "Joe" 값으로 나타납니다.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>In the following example, the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph> values of the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> objects are set to the <ph id="ph3">`static`</ph> property <ph id="ph4">&lt;xref:System.Windows.Application.Current%2A?displayProperty=nameWithType&gt;</ph>:</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Source%2A&gt;</ph> 의 값은 <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> 개체가으로 설정 됩니다는 <ph id="ph3">`static`</ph> 속성 <ph id="ph4">&lt;xref:System.Windows.Application.Current%2A?displayProperty=nameWithType&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.Source">
          <source>For the full example, see <bpt id="p1">[</bpt>Data Binding Demo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=163703)</ept>.</source>
          <target state="translated">전체 예제를 보려면 <bpt id="p1">[</bpt>데이터 바인딩 데모<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=163703)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.Binding.SourceUpdatedEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.SourceUpdated" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.SourceUpdated" /&gt;</ph> 연결된 이벤트를 식별합니다.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.Binding.TargetUpdatedEvent">
          <source>Identifies the <ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.TargetUpdated" /&gt;</ph> attached event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Data.Binding.TargetUpdated" /&gt;</ph> 연결된 이벤트를 식별합니다.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</source>
          <target state="translated">바인딩 소스 값을 업데이트하는 동안 바인딩 엔진에서 발생하는 예외를 처리하기 위한 사용자 지정 논리를 제공하는 데 사용할 수 있는 처리기를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>This is only applicable if you have associated an <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ExceptionValidationRule" /&gt;</ph> with your binding.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.ExceptionValidationRule" /&gt;</ph>을 바인딩에 연결한 경우에만 이 내용이 적용됩니다.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</source>
          <target state="translated">바인딩 소스 값을 업데이트하는 동안 바인딩 엔진에서 발생하는 예외를 처리하기 위한 사용자 지정 논리를 제공하는 메서드입니다.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> is a built-in validation rule that checks for exceptions thrown during the update of the binding source property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> 바인딩 소스 속성을 업데이트 하는 동안 발생 한 예외를 검사 하는 기본 제공 유효성 검사 규칙입니다.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>If you have associated the <ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> with your <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> object, you can use this property to set a handler to provide custom logic for handling these exceptions.</source>
          <target state="translated">연결한 경우는 <ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> 와 프로그램 <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> 개체를 이러한 예외를 처리 하기 위한 사용자 지정 논리를 제공 하는 처리기를 설정 하려면이 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>If an <ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A&gt;</ph> is not specified on the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>, the binding engine creates a <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph> with the exception and adds it to the <ph id="ph4">&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType&gt;</ph> collection of the bound element.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A&gt;</ph> 에 지정 되어 있지는 <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>, 바인딩 엔진을 만듭니다는 <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph> 예외와에 추가 <ph id="ph4">&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType&gt;</ph> 바인딩된 요소의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;</ph> property of the following <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> is data-bound to a source property <ph id="ph3">`Age3`</ph> that is of type <ph id="ph4">`int`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;</ph> 다음의 속성 <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 소스 속성에 데이터 바인딩된 <ph id="ph3">`Age3`</ph> 형식의 <ph id="ph4">`int`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> checks for exceptions that are thrown during the update of the source property (such as when the user enters a value that cannot be converted to an integer).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> source 속성 (예: 사용자가을 정수로 변환할 수 없는 값)을 업데이트 중에 throw 된 예외에 대해 검사 합니다.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>You can provide custom logic to handle those exceptions.</source>
          <target state="translated">이러한 예외를 처리 하기 위한 사용자 지정 논리를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A&gt;</ph> property to set an <ph id="ph2">&lt;xref:System.Windows.Data.UpdateSourceExceptionFilterCallback&gt;</ph>.</source>
          <target state="translated">사용 하는 방법을 보여 주는 다음 예제는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A&gt;</ph> 속성을 설정 하려면 프로그램 <ph id="ph2">&lt;xref:System.Windows.Data.UpdateSourceExceptionFilterCallback&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>The following is an example implementation of an <ph id="ph1">&lt;xref:System.Windows.Data.UpdateSourceExceptionFilterCallback&gt;</ph>.</source>
          <target state="translated">다음은의 예제 구현은 <ph id="ph1">&lt;xref:System.Windows.Data.UpdateSourceExceptionFilterCallback&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.UpdateSourceExceptionFilterCallback&gt;</ph> can also return <ph id="ph2">`null`</ph>, the exception itself, or a <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.UpdateSourceExceptionFilterCallback&gt;</ph> 반환할 수도 <ph id="ph2">`null`</ph>, 예외, 자체 또는 <ph id="ph3">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Data.UpdateSourceExceptionFilterCallback&gt;</ph>.</source>
          <target state="translated">자세한 내용은 <ph id="ph1">&lt;xref:System.Windows.Data.UpdateSourceExceptionFilterCallback&gt;</ph>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Binding Validation Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159972)</ept>.</source>
          <target state="translated">전체 샘플을 참조 하십시오. <bpt id="p1">[</bpt>바인딩 유효성 검사 샘플<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159972)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>Gets or sets a value that determines the timing of binding source updates.</source>
          <target state="translated">바인딩 소스 업데이트의 타이밍을 결정하는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.UpdateSourceTrigger" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.UpdateSourceTrigger" /&gt;</ph> 값 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" /&gt;</ph>, which returns the default <ph id="ph2">&lt;see cref="T:System.Windows.Data.UpdateSourceTrigger" /&gt;</ph> value of the target dependency property.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" /&gt;</ph>, 기본값을 반환 하는 <ph id="ph2">&lt;see cref="T:System.Windows.Data.UpdateSourceTrigger" /&gt;</ph> 대상 종속성 속성의 값입니다.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>However, the default value for most dependency properties is <ph id="ph1">&lt;see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" /&gt;</ph>, while the <ph id="ph2">&lt;see cref="P:System.Windows.Controls.TextBox.Text" /&gt;</ph> property has a default value of <ph id="ph3">&lt;see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" /&gt;</ph>.</source>
          <target state="translated">그러나 대부분의 종속성 속성에 대 한 기본 값은 <ph id="ph1">&lt;see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" /&gt;</ph>, 동안는 <ph id="ph2">&lt;see cref="P:System.Windows.Controls.TextBox.Text" /&gt;</ph> 속성의 기본값은 <ph id="ph3">&lt;see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" /&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>A programmatic way to determine the default <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /&gt;</ph> value of a dependency property is to get the property metadata of the property using <ph id="ph2">&lt;see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /&gt;</ph> and then check the value of the <ph id="ph3">&lt;see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /&gt;</ph> property.</source>
          <target state="translated">기본값을 결정 하는 프로그래밍 방법을 <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /&gt;</ph> 종속성 속성의 값을 사용 하 여 속성의 속성 메타 데이터를 얻는 것 <ph id="ph2">&lt;see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /&gt;</ph> 다음 값을 확인 하 고는 <ph id="ph3">&lt;see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>Bindings that are <ph id="ph1">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Data.BindingMode.OneWayToSource&gt;</ph> listen for changes in the target property and propagate them back to the source.</source>
          <target state="translated">바인딩 <ph id="ph1">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> 또는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingMode.OneWayToSource&gt;</ph> 대상 속성에 대 한 변경 내용을 수신 대기 하 고 소스 전파 합니다.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>This is known as updating the source.</source>
          <target state="translated">이를 소스 업데이트라고 합니다.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>Usually, these updates happen whenever the target property changes.</source>
          <target state="translated">일반적으로 이러한 업데이트는 대상 속성이 변경 될 때마다 발생 합니다.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>This is fine for check boxes and other simple controls, but it is usually not appropriate for text fields.</source>
          <target state="translated">다른 단순 컨트롤 및 확인란에 대 한 문제가 것만 일반적으로 텍스트 필드에 적합 합니다.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>Updating after every keystroke can diminish performance and it denies the user the usual opportunity to backspace and fix typing errors before committing to the new value.</source>
          <target state="translated">업데이트 하면 새 값을 커밋하기 전에 입력 오류를 수정 하 고 백스페이스를 일반적인 기회 사용자 거부 하 고 모든 키 입력에는 성능이 저하 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>Therefore, the default <ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> value of the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;</ph> property is <ph id="ph3">&lt;xref:System.Windows.Data.UpdateSourceTrigger.LostFocus&gt;</ph> and not <ph id="ph4">&lt;xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged&gt;</ph>.</source>
          <target state="translated">따라서 기본 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> 의 값은 <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox.Text%2A&gt;</ph> 속성은 <ph id="ph3">&lt;xref:System.Windows.Data.UpdateSourceTrigger.LostFocus&gt;</ph> 아닌 <ph id="ph4">&lt;xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.UpdateSourceTrigger">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> value to <ph id="ph2">&lt;xref:System.Windows.Data.UpdateSourceTrigger.Explicit&gt;</ph>, you must call the <ph id="ph3">&lt;xref:System.Windows.Data.BindingExpression.UpdateSource%2A&gt;</ph> method or the changes will not propagate back to the source.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> 값을 <ph id="ph2">&lt;xref:System.Windows.Data.UpdateSourceTrigger.Explicit&gt;</ph>를 호출 해야 합니다는 <ph id="ph3">&lt;xref:System.Windows.Data.BindingExpression.UpdateSource%2A&gt;</ph> 소스에 다시 메서드 또는 변경 내용을 전파 하지 것입니다.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source>Gets or sets a value that indicates whether to include the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.DataErrorValidationRule" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.DataErrorValidationRule" /&gt;</ph>을 포함할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.DataErrorValidationRule" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Controls.DataErrorValidationRule" /&gt;</ph>을 포함하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source>Setting this property provides an alternative to using the <ph id="ph1">&lt;xref:System.Windows.Controls.DataErrorValidationRule&gt;</ph> element explicitly.</source>
          <target state="translated">사용 하는 대신 제공이 속성은 <ph id="ph1">&lt;xref:System.Windows.Controls.DataErrorValidationRule&gt;</ph> 요소 명시적으로 합니다.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.DataErrorValidationRule&gt;</ph> is a built-in validation rule that checks for errors that are raised by the <ph id="ph2">&lt;xref:System.ComponentModel.IDataErrorInfo&gt;</ph> implementation of the source object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.DataErrorValidationRule&gt;</ph> 에 의해 발생 하는 오류를 검사 하는 기본 제공 유효성 검사 규칙은 <ph id="ph2">&lt;xref:System.ComponentModel.IDataErrorInfo&gt;</ph> 소스 개체의 구현입니다.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source>If an error is raised, the binding engine creates a <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph> with the error and adds it to the <ph id="ph2">&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType&gt;</ph> collection of the bound element.</source>
          <target state="translated">오류가 발생 하는 경우 바인딩 엔진 만듭니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph> 오류로 추가 <ph id="ph2">&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType&gt;</ph> 바인딩된 요소의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source>The lack of an error clears this validation feedback, unless another rule raises a validation issue.</source>
          <target state="translated">오류가 없는 다른 규칙 유효성 검사 문제를 발생 하지 않는 한이 유효성 검사 피드백을 지웁니다.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A&gt;</ph> .NET Framework 버전 3.5에서에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source>For more information, see <bpt id="p1">[</bpt>.NET Framework Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>.NET Framework 버전 및 종속성<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source>The following examples uses <ph id="ph1">&lt;xref:System.ComponentModel.IDataErrorInfo&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A&gt;</ph> to validate user input in a <ph id="ph3">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.ComponentModel.IDataErrorInfo&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A&gt;</ph> 에서 사용자 입력의 유효성을 검사 하는 <ph id="ph3">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source>The first example creates a data type that implements <ph id="ph1">&lt;xref:System.ComponentModel.IDataErrorInfo&gt;</ph> to report validation errors.</source>
          <target state="translated">첫 번째 예에서는 구현 하는 데이터 형식을 생성 <ph id="ph1">&lt;xref:System.ComponentModel.IDataErrorInfo&gt;</ph> 유효성 검사 오류를 보고 합니다.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source>The following example binds the <ph id="ph1">`Age`</ph> property to the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and sets <ph id="ph3">&lt;xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A&gt;</ph> to <ph id="ph4">`true`</ph> on the <ph id="ph5">&lt;xref:System.Windows.Data.Binding&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Age`</ph> 속성을는 <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 설정 <ph id="ph3">&lt;xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A&gt;</ph> 를 <ph id="ph4">`true`</ph> 에 <ph id="ph5">&lt;xref:System.Windows.Data.Binding&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
          <source>When the user enters an invalid value, a red border appears in the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> reports the error message.</source>
          <target state="translated">사용자가 잘못 된 값을 입력에 빨간색 테두리가 나타납니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> 오류 메시지를 보고 합니다.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source>Gets or sets a value that indicates whether to include the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ExceptionValidationRule" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.ExceptionValidationRule" /&gt;</ph>을 포함할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.ExceptionValidationRule" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Controls.ExceptionValidationRule" /&gt;</ph>을 포함하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source>Setting this property provides an alternative to using the <ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> element explicitly.</source>
          <target state="translated">사용 하는 대신 제공이 속성은 <ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> 요소 명시적으로 합니다.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> is a built-in validation rule that checks for exceptions that are thrown during the update of the source property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> source 속성을 업데이트 하는 동안 throw 된 예외를 확인 하는 기본 제공 유효성 검사 규칙입니다.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source>If an exception is thrown, the binding engine creates a <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph> with the exception and adds it to the <ph id="ph2">&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType&gt;</ph> collection of the bound element.</source>
          <target state="translated">예외가 발생 하는 경우 바인딩 엔진 만듭니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationError&gt;</ph> 예외와에 추가 <ph id="ph2">&lt;xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType&gt;</ph> 바인딩된 요소의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source>The lack of an error clears this validation feedback, unless another rule raises a validation issue.</source>
          <target state="translated">오류가 없는 다른 규칙 유효성 검사 문제를 발생 하지 않는 한이 유효성 검사 피드백을 지웁니다.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A&gt;</ph> .NET Framework 버전 3.5에서에서 도입 되었습니다.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source>For more information, see <bpt id="p1">[</bpt>.NET Framework Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>.NET Framework 버전 및 종속성<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>을 참조하십시오.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source>The following examples use <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A&gt;</ph> to validate user input in a <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>.</source>
          <target state="translated">다음 예에서는 사용 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A&gt;</ph> 에서 사용자 입력의 유효성을 검사 하는 <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source>The first example creates a data type that throws an exception when the <ph id="ph1">`Age`</ph> property is set to an invalid property.</source>
          <target state="translated">첫 번째 예제에서는 예외를 throw 하는 데이터 형식을 생성 때는 <ph id="ph1">`Age`</ph> 속성이 잘못 된 속성으로 설정 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source>The following example binds the <ph id="ph1">`Age`</ph> property to the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and sets <ph id="ph3">&lt;xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A&gt;</ph> to <ph id="ph4">`true`</ph> on the <ph id="ph5">&lt;xref:System.Windows.Data.Binding&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Age`</ph> 속성을는 <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 설정 <ph id="ph3">&lt;xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A&gt;</ph> 를 <ph id="ph4">`true`</ph> 에 <ph id="ph5">&lt;xref:System.Windows.Data.Binding&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnExceptions">
          <source>When the user enters an invalid value, a red border appears in the <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> reports the error message.</source>
          <target state="translated">사용자가 잘못 된 값을 입력에 빨간색 테두리가 나타납니다는 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Controls.ToolTip&gt;</ph> 오류 메시지를 보고 합니다.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors">
          <source>Gets or sets a value that indicates whether to include the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /&gt;</ph>을 포함할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" /&gt;</ph>을 포함하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the binding checks for and reports errors that are raised by a data source that implements <ph id="ph3">&lt;xref:System.ComponentModel.INotifyDataErrorInfo&gt;</ph>.</source>
          <target state="translated">때 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A&gt;</ph> 은 <ph id="ph2">`true`</ph>, 바인딩을 확인 하 고 구현 하는 데이터 원본에 의해 발생 하는 오류를 보고 <ph id="ph3">&lt;xref:System.ComponentModel.INotifyDataErrorInfo&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>Gets a collection of rules that check the validity of the user input.</source>
          <target state="translated">사용자 입력의 유효성을 검사하는 규칙 컬렉션을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.ValidationRule" /&gt;</ph> 개체의 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> data binding model enables you to associate <ph id="ph2">&lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;</ph> with your <ph id="ph3">&lt;xref:System.Windows.Data.Binding&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 데이터 바인딩 모델을 사용 하면 연결할 수 <ph id="ph2">&lt;xref:System.Windows.Data.Binding.ValidationRules%2A&gt;</ph> 와 프로그램 <ph id="ph3">&lt;xref:System.Windows.Data.Binding&gt;</ph> 또는 <ph id="ph4">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>You can create custom rules by deriving from the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> class and implementing the <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> method, or you can use the built-in <ph id="ph3">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph>, which invalidates a value if there are exceptions during source updates.</source>
          <target state="translated">파생 하 여 사용자 지정 규칙을 만들 수는 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 클래스 및 구현는 <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> 메서드를 하거나 사용할 수 있습니다는 기본 제공 <ph id="ph3">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph>, 원본 업데이트 중에 예외가 있는 경우 값을 무효화 하는 합니다.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>The binding engine checks each <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> associated with a binding each time an input value (the binding target property value) is transferred to the binding source property.</source>
          <target state="translated">바인딩 엔진에서는 각 검사 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 될 때마다 바인딩 소스 속성에는 입력된 값 (바인딩 대상 속성 값)을 전송 되는 바인딩과 연결 된 합니다.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>For a detailed discussion of the validation process, see the Data Validation section in the <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">유효성 검사 프로세스를 대 한 자세한 내용은 데이터 유효성 검사 섹션을 참조 하십시오.는 <bpt id="p1">[</bpt>데이터 바인딩 개요<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>This property can be set in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> only by using the collection syntax shown, or by accessing the collection object and using its various methods, such as <ph id="ph2">`Add`</ph>.</source>
          <target state="translated">이 속성 설정할 수 있습니다 <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> 표시 된 컬렉션 구문을 사용 하거나 컬렉션 개체에 액세스 하 고와 같은 여러 메서드를 사용 하 여 <ph id="ph2">`Add`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>The property to access the collection object is read-only, whereas the collection itself is read-write.</source>
          <target state="translated">컬렉션 개체에 액세스 하려면 속성은 읽기 전용 컬렉션 자체는 읽기 / 쓰기 이지만 합니다.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>XAML Property Element Usage</source>
          <target state="translated">XAML 속성 요소 사용</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>XAML Values</source>
          <target state="translated">XAML 값</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source><bpt id="p1">*</bpt>oneOrMoreValidationRules<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>oneOrMoreValidationRules<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>One or more <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> objects.</source>
          <target state="translated">하나 이상의 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.ValidationRules">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> class or create custom rules by subclassing the <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> class.</source>
          <target state="translated">사용할 수는 <ph id="ph1">&lt;xref:System.Windows.Controls.ExceptionValidationRule&gt;</ph> 클래스 또는 서브 클래스 생성 하 여 사용자 지정 규칙을 만들는 <ph id="ph2">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /&gt;</ph> attached property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /&gt;</ph> 연결된 속성을 식별합니다.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.Binding.XPath">
          <source>Gets or sets an <ph id="ph1">&lt;see langword="XPath" /&gt;</ph> query that returns the value on the <ph id="ph2">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> binding source to use.</source>
          <target state="translated">사용할 <ph id="ph2">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> 바인딩 소스에서 값을 반환하는 <ph id="ph1">&lt;see langword="XPath" /&gt;</ph> 쿼리를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.XPath">
          <source>The <ph id="ph1">&lt;see langword="XPath" /&gt;</ph> query.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XPath" /&gt;</ph> 쿼리입니다.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.XPath">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.XPath">
          <source>When the binding source is <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> data instead of a <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> object, the <ph id="ph3">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> property is used instead of the <ph id="ph4">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> property to indicate the path to the value on the binding source to use.</source>
          <target state="translated">바인딩 소스 <ph id="ph1">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> 대신 데이터는 <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> 개체를는 <ph id="ph3">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> 속성 대신 사용 되는 <ph id="ph4">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> 의 경로를 사용 하 여 바인딩 소스에 값을 나타내는 속성을 합니다.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.XPath">
          <source>By setting the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> property, you are creating an <ph id="ph2">`XPath`</ph> query to select a node or a collection of nodes (<ph id="ph3">&lt;xref:System.Xml.XmlElement?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.Xml.XmlAttribute?displayProperty=nameWithType&gt;</ph> both derive from <ph id="ph5">&lt;xref:System.Xml.XmlNode?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">설정 하 여는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> 속성을 만들면는 <ph id="ph2">`XPath`</ph> 노드 또는 노드의 컬렉션을 선택 하는 쿼리 (<ph id="ph3">&lt;xref:System.Xml.XmlElement?displayProperty=nameWithType&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Xml.XmlAttribute?displayProperty=nameWithType&gt;</ph> 에서 파생 되 <ph id="ph5">&lt;xref:System.Xml.XmlNode?displayProperty=nameWithType&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.XPath">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlNode?displayProperty=nameWithType&gt;</ph> is a <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> object, which means you can bind to its properties using the <ph id="ph3">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlNode?displayProperty=nameWithType&gt;</ph> 이 <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> 개체를 사용 하 여 해당 속성에 바인딩할 수 있습니다는 <ph id="ph3">&lt;xref:System.Windows.Data.Binding.Path%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.XPath">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph> method handles the <ph id="ph2">`XPath`</ph> expressions from the <ph id="ph3">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph> 메서드 핸들의 <ph id="ph2">`XPath`</ph> 에서 식의 <ph id="ph3">&lt;xref:System.Windows.Data.Binding.XPath%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.XPath">
          <source><ph id="ph1">`XPath`</ph> functions are not supported.</source>
          <target state="translated"><ph id="ph1">`XPath`</ph> 함수는 지원 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.XPath">
          <source>For <ph id="ph1">`XPath`</ph> expression information, see the <ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectNodes%2A&gt;</ph> documentation and some examples provided in the Example section.</source>
          <target state="translated">에 대 한 <ph id="ph1">`XPath`</ph> 식 정보 참조는 <ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectNodes%2A&gt;</ph> 설명서 및 "예" 섹션에 제공 된 몇 가지 예입니다.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.XPath">
          <source>LINQ to XML objects <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> do not use <ph id="ph3">`XPath`</ph>.</source>
          <target state="translated">LINQ to XML 개체 <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> 사용 하지 않는 <ph id="ph3">`XPath`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.Binding.XPath">
          <source>For details, see <bpt id="p1">[</bpt>How to: Bind to XDocument, XElement, or LINQ for XML Query Results<ept id="p1">](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: XML 쿼리 결과 대 한 XDocument, XElement, 또는 LINQ를 바인딩할<ept id="p1">](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md)</ept>합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>