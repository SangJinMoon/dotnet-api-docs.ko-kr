<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BindingBase.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56871bcc8808192513fe5930b08bd4db0522bbb17.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6871bcc8808192513fe5930b08bd4db0522bbb17</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Data.BindingBase">
          <source>Defines the common characteristics of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph>, and <ph id="ph3">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> classes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.Binding" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Windows.Data.PriorityBinding" /&gt;</ph> 및 <ph id="ph3">&lt;see cref="T:System.Windows.Data.MultiBinding" /&gt;</ph> 클래스에 공통되는 특징을 정의합니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.BindingBase">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType&gt;</ph> method is sealed, a custom binding class that derives from <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> will not function correctly as a <ph id="ph3">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> markup extension.</source>
          <target state="translated">때문에 <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType&gt;</ph> 메서드는 봉인 클래스에서 파생 되는 사용자 지정 바인딩 클래스 <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> 으로 제대로 작동 하지 것입니다는 <ph id="ph3">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> 태그 확장 합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>Gets or sets the name of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> to which this binding belongs.</source>
          <target state="translated">이 바인딩이 속하는 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>의 이름을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph> to which this binding belongs.</source>
          <target state="translated">이 바인딩이 속하는 <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingGroup" /&gt;</ph>의 이름입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> is not set, the binding belongs to a <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> only if the binding's source and the <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the parent element that has the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> are the same object.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> 바인딩이 속한를 설정 하지 않으면는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 경우에만 바인딩 소스 및 <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> 가 부모 요소의 <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 가 같은 개체입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> is set to a value, the binding belongs to a <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> if the following conditions are true:</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> 설정 된 바인딩이 속한를 값으로는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 다음 조건이 true 인 경우:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> are equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> 의 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> 동일 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> belongs to a parent element of the binding's target element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 는 바인딩 대상 요소의 부모 요소에 속합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> is set to <ph id="ph2">`null`</ph>, the binding is never a part of a <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>.</source>
          <target state="translated">경우 <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> 로 설정 된 <ph id="ph2">`null`</ph>, 바인딩이의 일부인 하지는 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>You can include bindings that have a source that is different from the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the parent element that has the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> by setting <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and the <ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> property of a binding to the same value.</source>
          <target state="translated">과 다른 소스 있는 바인딩을 포함할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> 가 부모 요소의 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 설정 하 여 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> 의 <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> 동일한 값에 대 한 바인딩의 속성입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>You can exclude bindings that have the same source as <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> of the parent element that has the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> by setting <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and the <ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> property of a binding to different values.</source>
          <target state="translated">같은 원본으로 포함 된 바인딩이 제외할 수 <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> 가 부모 요소의 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 설정 하 여 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> 의 <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> 서로 다른 값에 대 한 바인딩의 속성입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</source>
          <target state="translated">다음 예제는 사용자가을 동일한 값으로 두 개체의 속성을 설정 하는지 여부를 확인 하는 응용 프로그램의 일부입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>The first example creates two <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> controls, each of which is data bound to a different source: The binding of the first <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> is part of the <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> because the <ph id="ph4">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> inherits the <ph id="ph5">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> from its parent <ph id="ph7">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph></source>
          <target state="translated">첫 번째 예에서는 두 개의 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 각각은 서로 다른 소스에 바인딩된 데이터 컨트롤: 첫 번째 바인딩 <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 의 일부는 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 때문에 <ph id="ph4">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 상속는 <ph id="ph5">&lt;xref:System.Windows.FrameworkElement.DataContext%2A&gt;</ph> 및 <ph id="ph6">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 에서 해당 부모 <ph id="ph7">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>The binding on the second <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> is part of the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> because the <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and the <ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> of the <ph id="ph6">&lt;xref:System.Windows.Data.Binding&gt;</ph> are both set to <ph id="ph7">`bindingGroup`</ph>.</source>
          <target state="translated">두 번째 바인딩 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 의 일부는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 때문에 <ph id="ph3">&lt;xref:System.Windows.Data.BindingGroup.Name%2A&gt;</ph> 의 <ph id="ph4">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 및 <ph id="ph5">&lt;xref:System.Windows.Data.BindingBase.BindingGroupName%2A&gt;</ph> 의 <ph id="ph6">&lt;xref:System.Windows.Data.Binding&gt;</ph> 으로 설정 되어 <ph id="ph7">`bindingGroup`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>The following example shows the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> that the previous example uses.</source>
          <target state="translated">다음 예제와 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule&gt;</ph> 이전 예제에서 사용 하 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.BindingGroupName">
          <source>In the <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> method, the example gets each source object from the <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> and checks whether the properties of the objects are equal.</source>
          <target state="translated">에 <ph id="ph1">&lt;xref:System.Windows.Controls.ValidationRule.Validate%2A&gt;</ph> 메서드를 예제에서 각 원본 개체를 가져오고는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingGroup&gt;</ph> 개체의 속성이 같은지 여부를 확인 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>Gets or sets the amount of time, in milliseconds, to wait before updating the binding source after the value on the target changes.</source>
          <target state="translated">대상의 값이 변경된 후 바인딩 소스를 업데이트하기 전에 대기할 시간(밀리초)을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>The amount of time, in milliseconds, to wait before updating the binding source.</source>
          <target state="translated">바인딩 소스를 업데이트하기 전까지 대기하는 시간(밀리초)입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>When you use a binding to update the binding source whenever the value of the property changes on the target, you set the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> and the <ph id="ph3">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> to <ph id="ph4">&lt;xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged&gt;</ph>.</source>
          <target state="translated">바인딩 대상 속성의 값이 변경 될 때마다 바인딩 소스 업데이트를 사용 하 여 설정한는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;</ph> 속성을 <ph id="ph2">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> 및 <ph id="ph3">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> 를 <ph id="ph4">&lt;xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>In this situation, you can use the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.Delay%2A&gt;</ph> property to specify whether there should be a time delay between when the target is changed and when the source is updated.</source>
          <target state="translated">이러한 상황에서 사용할 수 있습니다는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.Delay%2A&gt;</ph> 속성을 통해 대상이 변경 된 경우 소스를 업데이트 하는 경우 사이의 시간 지연 되어야 하는지 여부를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>This is useful when you want to enable users to change a property on a source object but you don't want each change to be immediately committed to the source.</source>
          <target state="translated">즉시 소스에 커밋할 수를 변경할 때마다 원하는 하지만 사용자가 원본 개체에서 속성을 변경할 수 있도록 하려는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>For example, suppose that you have a text box that is data two-way bound to a property of a data object.</source>
          <target state="translated">예를 들어 양방향 데이터 개체의 속성에 바인딩된 데이터의 텍스트 상자에 있다고 가정 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>When the user changes the value in the text box, the source gets updated.</source>
          <target state="translated">사용자가 텍스트 상자에 값을 변경 해도 소스가 업데이트 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>To enable this scenario, you set the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;</ph> property on the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> to <ph id="ph3">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> and the <ph id="ph4">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> to <ph id="ph5">&lt;xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged&gt;</ph>.</source>
          <target state="translated">이 시나리오를 사용 하려면 설정는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> 를 <ph id="ph3">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> 및 <ph id="ph4">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> 를 <ph id="ph5">&lt;xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.Delay">
          <source>To avoid updating the source object with every keystroke, set the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.Delay%2A&gt;</ph> property to a reasonable value to cause the binding to update only after that amount of time has elapsed since the user stopped typing.</source>
          <target state="translated">모든 키 입력으로 소스 개체 업데이트를 방지 하려면 설정는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.Delay%2A&gt;</ph> 바인딩도 사용자 입력을 중지 하는 후 1 시간 경과 된 후에 업데이트를 적절 한 값 속성입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>Gets or sets the value to use when the binding is unable to return a value.</source>
          <target state="translated">바인딩에서 값을 반환할 수 없는 경우 사용할 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>A binding returns a value successfully if:</source>
          <target state="translated">바인딩을 경우 성공적으로 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>The path to the binding source resolves successfully.</source>
          <target state="translated">바인딩 소스 경로 성공적으로 확인합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>The value converter, if any, is able to convert the resulting value.</source>
          <target state="translated">값 변환기 있는 경우는 결과 값을 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>The resulting value is valid for the binding target (target) property.</source>
          <target state="translated">결과 값은 바인딩 대상 (대상) 속성에 유효 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>If 1 and 2 return <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType&gt;</ph>, the target property is set to the value of the <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph>, if one is available.</source>
          <target state="translated">1과 2를 반환 하는 경우 <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType&gt;</ph>, 대상 속성의 값으로 설정 됩니다는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph>, 사용 가능한 경우.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>If there is no <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph>, the default value of the target property is used.</source>
          <target state="translated">없는 경우 없는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph>, 대상 속성의 기본값이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>The value <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType&gt;</ph> is not considered a successful return value.</source>
          <target state="translated">값 <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType&gt;</ph> 성공적인 반환 값으로 간주 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>XAML Text Usage</source>
          <target state="translated">XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source><bpt id="p1">**</bpt>- or –<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>-또는-<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>XAML Values</source>
          <target state="translated">XAML 값</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source><bpt id="p1">*</bpt>fallbackValue<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fallbackValue<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>An attribute or object element value of the same type as the target property.</source>
          <target state="translated">특성 또는 개체 요소 값 대상 속성으로 동일한 형식의 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>See that type's documentation for XAML usage information.</source>
          <target state="translated">XAML 사용 정보에 대 한 해당 형식의 설명서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>That type may or may not support attribute syntax for its values, or may or may not support object element syntax (which requires a default constructor on that type).</source>
          <target state="translated">해당 형식의 수 또는 해당 값에 대 한 특성 구문을 지원 하지 않을 수 있습니다 또는 수도 있습니다 개체 요소 구문 (이 위해서는 해당 형식에 기본 생성자)를 지원 하지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.FallbackValue">
          <source>The target property type will therefore influence which syntax you use for the value of the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph> property.</source>
          <target state="translated">대상 속성 형식에 대 한 값을 사용 하는 구문이 영향을 미치는 따라서는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.FallbackValue%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>The object that can provide services for the markup extension.</source>
          <target state="translated">태그 확장명 서비스를 제공할 수 있는 개체입니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>May be <ph id="ph1">&lt;see langword="null" /&gt;</ph>;</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>Returns an object that should be set on the property where this binding and extension are applied.</source>
          <target state="translated">이 바인딩 및 확장이 적용되는 속성에 설정해야 하는 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>The value to set on the binding target property.</source>
          <target state="translated">바인딩 대상 속성에 설정할 값입니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>This implementation provides the base syntax support for binding through <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> for all provided practical derived classes (<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>).</source>
          <target state="translated">이 구현은 통해 바인딩에 대 한 기본 구문 지원을 제공 <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> 모두 제공 실제 파생된 클래스에 대 한 (<ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, 및 <ph id="ph4">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> class implementation of this method is expected to return an expression object that is the result of a binding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> 클래스가 메서드의 구현은 바인딩의 결과로 생성 되는 식 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>Binding a property works by targeting a given <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph> on a given <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>.</source>
          <target state="translated">대상으로 하 여 작동 하는 속성을 바인딩하는 주어진 <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph> 에 주어진 <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>These two pieces of information are transmitted by querying for an <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> implementation on the <ph id="ph2">`serviceProvider`</ph>, which the <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> <ph id="ph4">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> reader makes available during parsing of a binding.</source>
          <target state="translated">이 두 가지 정보에 대 한 쿼리를 통해 전송 되는 <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> 구현에는 <ph id="ph2">`serviceProvider`</ph>되는 <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> <ph id="ph4">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> 바인딩을 구문 분석 하는 동안 판독기를 사용할 수 있게 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>This base class implementation is responsible for checking for a valid <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>.</source>
          <target state="translated">올바른 검사에 대 한이 기본 클래스 구현을 담당 <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>If these are found, the actual implementation of returning a binding expression falls to various derived classes, as implemented by having the base class call an internal abstract method.</source>
          <target state="translated">이러한 발견 되 면 바인딩 식을 반환의 실제 구현에는 기본 클래스는 내부 추상 메서드를 호출 하 여 구현 된 대로 다양 한 파생 클래스 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>Otherwise, the extension returns the binding object itself.</source>
          <target state="translated">그렇지 않으면 확장 바인딩 개체 자체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>Returning the binding itself results in a type mismatch error, but this should not occur under normal circumstances.</source>
          <target state="translated">형식 불일치 오류가 발생 바인딩 자체를 반환 하지만이 일반적인 환경에서 발생 하지 않습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
          <source>Because the syntax for binding through <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> as implemented in this method relies on implementing an internal override, and because <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType&gt;</ph> itself is sealed, a custom binding class that derives from <ph id="ph3">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> will not function correctly as a <ph id="ph4">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> markup extension.</source>
          <target state="translated">때문에 통해 바인딩에 대 한 구문 <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> 에서 구현 될 때이 메서드는 내부 재정의 구현 합니다. 사용 하 고 <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType&gt;</ph> 자체는 날인이 찍에서 파생 되는 사용자 지정 바인딩 클래스 <ph id="ph3">&lt;xref:System.Windows.Data.BindingBase&gt;</ph> 으로 제대로 작동 하지 것입니다는 <ph id="ph4">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> 태그 확장 합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue">
          <source>Returns a value that indicates whether serialization processes should serialize the effective value of the <ph id="ph1">&lt;see cref="P:System.Windows.Data.BindingBase.FallbackValue" /&gt;</ph> property on instances of this class.</source>
          <target state="translated">이 클래스의 인스턴스에서 serialization 프로세스를 통해 <ph id="ph1">&lt;see cref="P:System.Windows.Data.BindingBase.FallbackValue" /&gt;</ph> 속성의 유효 값을 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Windows.Data.BindingBase.FallbackValue" /&gt;</ph> property value should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Windows.Data.BindingBase.FallbackValue" /&gt;</ph> 속성 값을 serialize해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue">
          <source>Returns a value that indicates whether the <ph id="ph1">&lt;see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /&gt;</ph> property should be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /&gt;</ph> 속성이 serialize되어야 하는지 여부를 나타내는 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /&gt;</ph> property should be serialized; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /&gt;</ph> 속성을 serialize해야 하면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>Gets or sets a string that specifies how to format the binding if it displays the bound value as a string.</source>
          <target state="translated">바인딩된 값을 문자열로 표시하는 경우 바인딩의 형식을 지정하는 방법을 지정하는 문자열을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>A string that specifies how to format the binding if it displays the bound value as a string.</source>
          <target state="translated">바인딩된 값을 문자열로 표시하는 경우 바인딩의 형식을 지정하는 방법을 지정하는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> can be a predefined, composite, or custom string format.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> 미리 정의 된 복합, 또는 사용자 지정 문자열 형식이 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>For more information about string formats, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">문자열 형식에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>형식 지정<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Converter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> properties, the converter is applied to the data value first, and then the <ph id="ph3">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> is applied.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Converter%2A&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> 속성 변환기 데이터 값에 먼저 적용 한 다음은 <ph id="ph3">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>When you set the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> to a composite string format, you can specify only one parameter.</source>
          <target state="translated">설정 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> 에 <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> 복합 문자열 형식으로 매개 변수를 하나만 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>When you use a <ph id="ph1">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> property applies only when it is set on the <ph id="ph3">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> 속성에 설정 된 경우에 적용 되는 <ph id="ph3">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>The value of <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> that is set on any child <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> objects is ignored.</source>
          <target state="translated">값 <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> 모든 자식에 설정 된 <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph> 개체는 무시 됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>The number of parameters in a composite string format cannot exceed the number of child <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>.</source>
          <target state="translated">복합 문자열 형식의 매개 변수 개수 자식 수를 초과할 수 없습니다 <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> 개체에 <ph id="ph2">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>When you use a <ph id="ph1">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, you can set the <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>, on child binding objects, or both.</source>
          <target state="translated">사용 하는 경우는 <ph id="ph1">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>를 설정할 수 있습니다는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> 에 <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph>자식 바인딩 개체 중 하나 또는 둘 모두에서 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> is set on the child binding that is applied, that value is used.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> 자식 즉 바인딩에 설정 된 적용 된 값이 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> is not set on the child binding that is applied, the <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph> is applied if it is set.</source>
          <target state="translated">경우는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> 적용 되는 자식 바인딩에 설정 되어 있지는 <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> 의 <ph id="ph3">&lt;xref:System.Windows.Data.PriorityBinding&gt;</ph> 설정 된 경우 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> property to convert <ph id="ph2">`Price`</ph>, which is a <ph id="ph3">&lt;xref:System.Double&gt;</ph>, to a string that represents a currency.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> 변환 하는 속성 <ph id="ph2">`Price`</ph>, 되는 <ph id="ph3">&lt;xref:System.Double&gt;</ph>에 통화를 나타내는 문자열입니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.StringFormat">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> property on a <ph id="ph2">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> to build a string that includes the <ph id="ph3">`Description`</ph> and <ph id="ph4">`Price`</ph> of each item in a <ph id="ph5">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">&lt;xref:System.Windows.Data.BindingBase.StringFormat%2A&gt;</ph> 속성에는 <ph id="ph2">&lt;xref:System.Windows.Data.MultiBinding&gt;</ph> 포함 하는 문자열을 작성 하는 <ph id="ph3">`Description`</ph> 및 <ph id="ph4">`Price`</ph> 의 각 항목의는 <ph id="ph5">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>Gets or sets the value that is used in the target when the value of the source is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">소스 값이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 때 대상에서 사용되는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>The value that is used in the target when the value of the source is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">소스 값이 <ph id="ph1">&lt;see langword="null" /&gt;</ph>일 때 대상에서 사용되는 값입니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>XAML Text Usage</source>
          <target state="translated">XAML 텍스트 사용</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source><bpt id="p1">**</bpt>- or –<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>-또는-<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>XAML Values</source>
          <target state="translated">XAML 값</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source><bpt id="p1">*</bpt>nullValue<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>nullValue<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>An attribute or object element value of the same type as the target property.</source>
          <target state="translated">특성 또는 개체 요소 값 대상 속성으로 동일한 형식의 합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>See that type's documentation for XAML usage information.</source>
          <target state="translated">XAML 사용 정보에 대 한 해당 형식의 설명서를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>That type may or may not support attribute syntax for its values, or may or may not support object element syntax (which requires a default constructor on that type).</source>
          <target state="translated">해당 형식의 수 또는 해당 값에 대 한 특성 구문을 지원 하지 않을 수 있습니다 또는 수도 있습니다 개체 요소 구문 (이 위해서는 해당 형식에 기본 생성자)를 지원 하지 않을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>The following example binds a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> to a property of an object.</source>
          <target state="translated">다음 예제에서는 한 <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 개체의 속성에 있습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.BindingBase.TargetNullValue">
          <source>If the property is <ph id="ph1">`null`</ph>, the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> displays "please enter a string."</source>
          <target state="translated">속성이 <ph id="ph1">`null`</ph>, <ph id="ph2">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> 표시 "문자열을 입력 하십시오."</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>