<Type Name="BindingBase" FullName="System.Windows.Data.BindingBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8ae5e1af86693b71cb8941b8cc1b0912429b6b12" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ko-KR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36564617" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BindingBase : System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BindingBase extends System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingBase&#xA;Inherits MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingBase abstract : System::Windows::Markup::MarkupExtension" />
  <TypeSignature Language="F#" Value="type BindingBase = class&#xA;    inherit MarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Object))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.PriorityBinding" /> 및 <see cref="T:System.Windows.Data.MultiBinding" /> 클래스에 공통되는 특징을 정의합니다.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 때문에 <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> 메서드는 봉인 클래스에서 파생 되는 사용자 지정 바인딩 클래스 <xref:System.Windows.Data.BindingBase> 으로 제대로 작동 하지 것입니다는 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 태그 확장 합니다.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BindingGroupName">
      <MemberSignature Language="C#" Value="public string BindingGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BindingGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property BindingGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BindingGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindingGroupName : string with get, set" Usage="System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>이 바인딩이 속하는 <see cref="T:System.Windows.Data.BindingGroup" />의 이름을 가져오거나 설정합니다.</summary>
        <value>이 바인딩이 속하는 <see cref="T:System.Windows.Data.BindingGroup" />의 이름입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 경우 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 바인딩이 속한를 설정 하지 않으면는 <xref:System.Windows.Data.BindingGroup> 경우에만 바인딩 소스 및 <xref:System.Windows.FrameworkElement.DataContext%2A> 가 부모 요소의 <xref:System.Windows.Data.BindingGroup> 가 같은 개체입니다.  
  
 경우 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 설정 된 바인딩이 속한를 값으로는 <xref:System.Windows.Data.BindingGroup> 다음 조건이 true 인 경우:  
  
-   <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.Data.BindingGroup> 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 동일 합니다.  
  
-   <xref:System.Windows.Data.BindingGroup> 는 바인딩 대상 요소의 부모 요소에 속합니다.  
  
 경우 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 로 설정 된 `null`, 바인딩이의 일부인 하지는 <xref:System.Windows.Data.BindingGroup>합니다.  
  
 과 다른 소스 있는 바인딩을 포함할 수 있습니다는 <xref:System.Windows.FrameworkElement.DataContext%2A> 가 부모 요소의 <xref:System.Windows.Data.BindingGroup> 설정 하 여 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.Data.BindingGroup> 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 동일한 값에 대 한 바인딩의 속성입니다.  같은 원본으로 포함 된 바인딩이 제외할 수 <xref:System.Windows.FrameworkElement.DataContext%2A> 가 부모 요소의 <xref:System.Windows.Data.BindingGroup> 설정 하 여 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.Data.BindingGroup> 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 서로 다른 값에 대 한 바인딩의 속성입니다.  
  
   
  
## Examples  
 다음 예제는 사용자가을 동일한 값으로 두 개체의 속성을 설정 하는지 여부를 확인 하는 응용 프로그램의 일부입니다. 첫 번째 예에서는 두 개의 <xref:System.Windows.Controls.TextBox> 각각은 서로 다른 소스에 바인딩된 데이터 컨트롤: 첫 번째 바인딩 <xref:System.Windows.Controls.TextBox> 의 일부는 <xref:System.Windows.Data.BindingGroup> 때문에 <xref:System.Windows.Controls.TextBox> 상속는 <xref:System.Windows.FrameworkElement.DataContext%2A> 및 <xref:System.Windows.Data.BindingGroup> 에서 해당 부모 <xref:System.Windows.Controls.StackPanel>  
  
 두 번째 바인딩 <xref:System.Windows.Controls.TextBox> 의 일부는 <xref:System.Windows.Data.BindingGroup> 때문에 <xref:System.Windows.Data.BindingGroup.Name%2A> 의 <xref:System.Windows.Data.BindingGroup> 및 <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> 의 <xref:System.Windows.Data.Binding> 으로 설정 되어 `bindingGroup`합니다.  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 다음 예제와 <xref:System.Windows.Controls.ValidationRule> 이전 예제에서 사용 하 합니다.  에 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 메서드를 예제에서 각 원본 개체를 가져오고는 <xref:System.Windows.Data.BindingGroup> 개체의 속성이 같은지 여부를 확인 합니다.  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delay">
      <MemberSignature Language="C#" Value="public int Delay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.Delay" />
      <MemberSignature Language="VB.NET" Value="Public Property Delay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Delay : int with get, set" Usage="System.Windows.Data.BindingBase.Delay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>대상의 값이 변경된 후 바인딩 소스를 업데이트하기 전에 대기할 시간(밀리초)을 가져오거나 설정합니다.</summary>
        <value>바인딩 소스를 업데이트하기 전까지 대기하는 시간(밀리초)입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 바인딩 대상 속성의 값이 변경 될 때마다 바인딩 소스 업데이트를 사용 하 여 설정한는 <xref:System.Windows.Data.Binding.Mode%2A> 속성을 <xref:System.Windows.Data.BindingMode.TwoWay> 및 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 를 <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>합니다.  이러한 상황에서 사용할 수 있습니다는 <xref:System.Windows.Data.BindingBase.Delay%2A> 속성을 통해 대상이 변경 된 경우 소스를 업데이트 하는 경우 사이의 시간 지연 되어야 하는지 여부를 지정 합니다.  즉시 소스에 커밋할 수를 변경할 때마다 원하는 하지만 사용자가 원본 개체에서 속성을 변경할 수 있도록 하려는 경우에 유용 합니다.  예를 들어 양방향 데이터 개체의 속성에 바인딩된 데이터의 텍스트 상자에 있다고 가정 합니다.  사용자가 텍스트 상자에 값을 변경 해도 소스가 업데이트 됩니다.  이 시나리오를 사용 하려면 설정는 <xref:System.Windows.Data.Binding.Mode%2A> 속성에는 <xref:System.Windows.Data.Binding> 를 <xref:System.Windows.Data.BindingMode.TwoWay> 및 <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> 를 <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>합니다.  모든 키 입력으로 소스 개체 업데이트를 방지 하려면 설정는 <xref:System.Windows.Data.BindingBase.Delay%2A> 바인딩도 사용자 입력을 중지 하는 후 1 시간 경과 된 후에 업데이트를 적절 한 값 속성입니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FallbackValue">
      <MemberSignature Language="C#" Value="public object FallbackValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FallbackValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.FallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Property FallbackValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FallbackValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FallbackValue : obj with get, set" Usage="System.Windows.Data.BindingBase.FallbackValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>바인딩에서 값을 반환할 수 없는 경우 사용할 값을 가져오거나 설정합니다.</summary>
        <value>기본값은 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 바인딩을 경우 성공적으로 값을 반환 합니다.  
  
1.  바인딩 소스 경로 성공적으로 확인합니다.  
  
2.  값 변환기 있는 경우는 결과 값을 변환할 수 있습니다.  
  
3.  결과 값은 바인딩 대상 (대상) 속성에 유효 합니다.  
  
 1과 2를 반환 하는 경우 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>, 대상 속성의 값으로 설정 됩니다는 <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, 사용 가능한 경우. 없는 경우 없는 <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, 대상 속성의 기본값이 사용 됩니다.  
  
 값 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> 성공적인 반환 값으로 간주 되지 않습니다.  
  
<a name="xamlTextUsage_FallbackValue"></a>   
## <a name="xaml-text-usage"></a>XAML 텍스트 사용  
  
```  
<object FallbackValue="fallbackValue" />  
```  
  
 **-또는-**  
  
```  
<object>  
  <object.FallbackValue>  
    fallbackValue  
    </object.FallbackValue>  
</object>  
```  
  
<a name="xamlValues_FallbackValue"></a>   
## <a name="xaml-values"></a>XAML 값  
 *fallbackValue*  
 특성 또는 개체 요소 값 대상 속성으로 동일한 형식의 합니다. XAML 사용 정보에 대 한 해당 형식의 설명서를 참조 하십시오. 해당 형식의 수 또는 해당 값에 대 한 특성 구문을 지원 하지 않을 수 있습니다 또는 수도 있습니다 개체 요소 구문 (이 위해서는 해당 형식에 기본 생성자)를 지원 하지 않을 수 있습니다. 대상 속성 형식에 대 한 값을 사용 하는 구문이 영향을 미치는 따라서는 <xref:System.Windows.Data.BindingBase.FallbackValue%2A> 속성입니다.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override sealed object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.ProvideValue : IServiceProvider -&gt; obj" Usage="bindingBase.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">태그 확장명 서비스를 제공할 수 있는 개체입니다. <see langword="null" />일 수 있습니다.</param>
        <summary>이 바인딩 및 확장이 적용되는 속성에 설정해야 하는 개체를 반환합니다.</summary>
        <returns>바인딩 대상 속성에 설정할 값입니다.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 이 구현은 통해 바인딩에 대 한 기본 구문 지원을 제공 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 모두 제공 실제 파생된 클래스에 대 한 (<xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, 및 <xref:System.Windows.Data.MultiBinding>).  
  
 <xref:System.Windows.Data.BindingBase> 클래스가 메서드의 구현은 바인딩의 결과로 생성 되는 식 개체를 반환 합니다. 대상으로 하 여 작동 하는 속성을 바인딩하는 주어진 <xref:System.Windows.DependencyProperty> 에 주어진 <xref:System.Windows.DependencyObject>합니다. 이 두 가지 정보에 대 한 쿼리를 통해 전송 되는 <xref:System.Windows.Markup.IProvideValueTarget> 구현에는 `serviceProvider`되는 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 바인딩을 구문 분석 하는 동안 판독기를 사용할 수 있게 합니다. 올바른 검사에 대 한이 기본 클래스 구현을 담당 <xref:System.Windows.DependencyProperty> 및 <xref:System.Windows.DependencyObject>합니다. 이러한 발견 되 면 바인딩 식을 반환의 실제 구현에는 기본 클래스는 내부 추상 메서드를 호출 하 여 구현 된 대로 다양 한 파생 클래스 포함 됩니다. 그렇지 않으면 확장 바인딩 개체 자체를 반환 합니다. 형식 불일치 오류가 발생 바인딩 자체를 반환 하지만이 일반적인 환경에서 발생 하지 않습니다.  
  
> [!IMPORTANT]
>  때문에 통해 바인딩에 대 한 구문 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 에서 구현 될 때이 메서드는 내부 재정의 구현 합니다. 사용 하 고 <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> 자체는 날인이 찍에서 파생 되는 사용자 지정 바인딩 클래스 <xref:System.Windows.Data.BindingBase> 으로 제대로 작동 하지 것입니다는 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 태그 확장 합니다.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeFallbackValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeFallbackValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeFallbackValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeFallbackValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeFallbackValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeFallbackValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeFallbackValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>이 클래스의 인스턴스에서 serialization 프로세스를 통해 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> 속성의 유효 값을 serialize해야 하는지 여부를 나타내는 값을 반환합니다.</summary>
        <returns>
          <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> 속성 값을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTargetNullValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTargetNullValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTargetNullValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTargetNullValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTargetNullValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTargetNullValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeTargetNullValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> 속성이 serialize되어야 하는지 여부를 나타내는 값을 반환합니다.</summary>
        <returns>
          <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> 속성을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringFormat">
      <MemberSignature Language="C#" Value="public string StringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.StringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property StringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StringFormat : string with get, set" Usage="System.Windows.Data.BindingBase.StringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>바인딩된 값을 문자열로 표시하는 경우 바인딩의 형식을 지정하는 방법을 지정하는 문자열을 가져오거나 설정합니다.</summary>
        <value>바인딩된 값을 문자열로 표시하는 경우 바인딩의 형식을 지정하는 방법을 지정하는 문자열입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 미리 정의 된 복합, 또는 사용자 지정 문자열 형식이 될 수 있습니다. 문자열 형식에 대 한 자세한 내용은 참조 [형식 지정](~/docs/standard/base-types/formatting-types.md)합니다.  
  
 설정 하는 경우는 <xref:System.Windows.Data.Binding.Converter%2A> 및 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 속성 변환기 데이터 값에 먼저 적용 한 다음은 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 적용 됩니다.  
  
 설정 하는 경우는 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 에 <xref:System.Windows.Data.Binding> 복합 문자열 형식으로 매개 변수를 하나만 지정할 수 있습니다.  
  
 사용 하는 경우는 <xref:System.Windows.Data.MultiBinding>, <xref:System.Windows.Data.BindingBase.StringFormat%2A> 속성에 설정 된 경우에 적용 되는 <xref:System.Windows.Data.MultiBinding>합니다.  값 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 모든 자식에 설정 된 <xref:System.Windows.Data.Binding> 개체는 무시 됩니다.  복합 문자열 형식의 매개 변수 개수 자식 수를 초과할 수 없습니다 <xref:System.Windows.Data.Binding> 개체에 <xref:System.Windows.Data.MultiBinding>합니다.  
  
 사용 하는 경우는 <xref:System.Windows.Data.PriorityBinding>를 설정할 수 있습니다는 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 에 <xref:System.Windows.Data.PriorityBinding>자식 바인딩 개체 중 하나 또는 둘 모두에서 합니다.  경우는 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 자식 즉 바인딩에 설정 된 적용 된 값이 사용 됩니다.  경우는 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 적용 되는 자식 바인딩에 설정 되어 있지는 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 의 <xref:System.Windows.Data.PriorityBinding> 설정 된 경우 적용 됩니다.  
  
   
  
## Examples  
 다음 예제에서는 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 변환 하는 속성 `Price`, 되는 <xref:System.Double>에 통화를 나타내는 문자열입니다.  
  
 [!code-xaml[ContentStringSnippets#Binding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#binding)]  
  
 다음 예제에서는 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 속성에는 <xref:System.Windows.Data.MultiBinding> 포함 하는 문자열을 작성 하는 `Description` 및 `Price` 의 각 항목의는 <xref:System.Windows.Controls.ListBox>합니다.  
  
 [!code-xaml[ContentStringSnippets#MultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#multibinding)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNullValue">
      <MemberSignature Language="C#" Value="public object TargetNullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetNullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetNullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetNullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetNullValue : obj with get, set" Usage="System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>소스 값이 <see langword="null" />일 때 대상에서 사용되는 값을 가져오거나 설정합니다.</summary>
        <value>소스 값이 <see langword="null" />일 때 대상에서 사용되는 값입니다.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_TargetNullValue"></a>   
## <a name="xaml-text-usage"></a>XAML 텍스트 사용  
  
```  
<object TargetNullValue="nullValue" />  
```  
  
 **-또는-**  
  
```  
<object>  
  <object.TargetNullValue>  
    nullValue  
    </object.TargetNullValue>  
</object>  
```  
  
<a name="xamlValues_TargetNullValue"></a>   
## <a name="xaml-values"></a>XAML 값  
 *nullValue*  
 특성 또는 개체 요소 값 대상 속성으로 동일한 형식의 합니다. XAML 사용 정보에 대 한 해당 형식의 설명서를 참조 하십시오. 해당 형식의 수 또는 해당 값에 대 한 특성 구문을 지원 하지 않을 수 있습니다 또는 수도 있습니다 개체 요소 구문 (이 위해서는 해당 형식에 기본 생성자)를 지원 하지 않을 수 있습니다.  
  
   
  
## Examples  
 다음 예제에서는 한 <xref:System.Windows.Controls.TextBox> 개체의 속성에 있습니다.  속성이 `null`, <xref:System.Windows.Controls.TextBox> 표시 "문자열을 입력 하십시오."  
  
 [!code-xaml[BindingGroupSnippets#TargetNullValue](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#targetnullvalue)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>