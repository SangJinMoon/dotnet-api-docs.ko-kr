<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataSourceProvider.xml" source-language="en-US" target-language="ko-KR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c8901b2eb2becfce561cfc077fab8345a8939579.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c8901b2eb2becfce561cfc077fab8345a8939579</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Data.DataSourceProvider">
          <source>Common base class and contract for <ph id="ph1">&lt;see cref="T:System.Windows.Data.DataSourceProvider" /&gt;</ph> objects, which are factories that execute some queries to produce a single object or a list of objects that you can use as binding source objects.</source>
          <target state="translated">일부 쿼리를 실행하여 바인딩 소스 개체로 사용할 수 있는 단일 개체 또는 개체 목록을 생성하는 팩터리인 <ph id="ph1">&lt;see cref="T:System.Windows.Data.DataSourceProvider" /&gt;</ph> 개체에 대한 공통 기본 클래스 및 계약입니다.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.DataSourceProvider">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> is a convenience wrapper around an existing data model; it does not replace any data model.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> 기존 데이터 모델; 사용 되는 편리한 래퍼 모든 데이터 모델을 대체 하지는 않습니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.DataSourceProvider">
          <source>A data provider does not attempt to condense the complexity and versatility of a data model such as <ph id="ph1">[!INCLUDE[TLA2#tla_ado](~/includes/tla2sharptla-ado-md.md)]</ph> into one single object with a few properties.</source>
          <target state="translated">데이터 공급자와 같은 복잡 하 고 다양 한 데이터 모델 축소 하려고 하지 <ph id="ph1">[!INCLUDE[TLA2#tla_ado](~/includes/tla2sharptla-ado-md.md)]</ph> 몇 가지 속성을 사용 하는 단일 개체에 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.DataSourceProvider">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> is an abstract class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph>는 추상 클래스입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.DataSourceProvider">
          <source>Use one of the derived classes, which are <ph id="ph1">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Data.ObjectDataProvider&gt;</ph>.</source>
          <target state="translated">파생된 클래스는 중 하나를 사용 하 여 <ph id="ph1">&lt;xref:System.Windows.Data.XmlDataProvider&gt;</ph> 및 <ph id="ph2">&lt;xref:System.Windows.Data.ObjectDataProvider&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.DataSourceProvider">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> is aware of the <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> threading and dispatcher model.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> 인식는 <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> 스레딩 및 발송자 모델입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.DataSourceProvider">
          <source>It assumes the thread at creation time to be the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> thread.</source>
          <target state="translated">스레드를 만들 때 가정은 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 스레드입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Data.DataSourceProvider">
          <source>Events will get marshaled from a worker thread to the UI thread of the application.</source>
          <target state="translated">이벤트 마샬링됩니다 작업자 스레드에서 응용 프로그램의 UI 스레드로 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Data.DataSourceProvider" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Data.DataSourceProvider" /&gt;</ph> 클래스의 새 인스턴스를 초기화합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.#ctor">
          <source>This is a protected constructor.</source>
          <target state="translated">이 생성자는 protected 생성자입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.BeginInit">
          <source>Indicates that initialization of this object is about to begin; no implicit <ph id="ph1">&lt;see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /&gt;</ph> occurs until the matched <ph id="ph2">&lt;see cref="M:System.Windows.Data.DataSourceProvider.EndInit" /&gt;</ph> method is called.</source>
          <target state="translated">이 개체의 초기화가 시작되려고 함을 나타냅니다. 짝을 이루는 <ph id="ph1">&lt;see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /&gt;</ph> 메서드가 호출될 때까지 암시적인 <ph id="ph2">&lt;see cref="M:System.Windows.Data.DataSourceProvider.EndInit" /&gt;</ph>가 발생하지 않습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.BeginQuery">
          <source>When overridden in a derived class, this base class calls this method when <ph id="ph1">&lt;see cref="M:System.Windows.Data.DataSourceProvider.InitialLoad" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /&gt;</ph> has been called.</source>
          <target state="translated">파생 클래스에서 재정의되는 경우 이 기본 클래스에서 <ph id="ph1">&lt;see cref="M:System.Windows.Data.DataSourceProvider.InitialLoad" /&gt;</ph> 또는 <ph id="ph2">&lt;see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /&gt;</ph>가 호출되었을 때 이 메서드를 호출합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.BeginQuery">
          <source>The base class delays the call if refresh is deferred or initial load is disabled.</source>
          <target state="translated">새로 고침이 지연되거나 초기 로드가 비활성화된 경우 기본 클래스에서 호출을 지연합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.BeginQuery">
          <source><bpt id="p1">**</bpt>Notes to Implementers:<ept id="p1">**</ept> You can choose to execute the query on the same thread or on a background thread or using <ph id="ph1">`IsAsynchronous`</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>구현자 참고 사항:<ept id="p1">**</ept> 동일한 스레드에서 하거나 백그라운드에서 쿼리를 실행 하도록 선택할 수 있습니다 스레드 또는 사용 하 여 <ph id="ph1">`IsAsynchronous`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.BeginQuery">
          <source>When the query is complete, call <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.OnQueryFinished%2A&gt;</ph> to have the public properties updated.</source>
          <target state="translated">쿼리가 완료 되 면 호출 <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.OnQueryFinished%2A&gt;</ph> 공용 속성을 업데이트 해야 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.DataSourceProvider.Data">
          <source>Gets the underlying data object.</source>
          <target state="translated">기본 데이터 개체를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.Data">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that is the underlying data object.</source>
          <target state="translated">기본 데이터 개체인 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 형식의 값입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.Data">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> is used as the source of a binding, this is the resulting binding source object.</source>
          <target state="translated">때는 <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> 사용 바인딩 소스로 결과 바인딩 소스 개체입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="E:System.Windows.Data.DataSourceProvider.DataChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Data.DataSourceProvider.Data" /&gt;</ph> property has a new value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Data.DataSourceProvider.Data" /&gt;</ph> 속성에 새 값을 사용하면 발생합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Data.DataSourceProvider.DataChanged">
          <source><bpt id="p1">**</bpt>Notes to implementers:<ept id="p1">**</ept> Raise this event when a new data object becomes available on the <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph> property.</source>
          <target state="translated"><bpt id="p1">**</bpt>구현자 참고 사항:<ept id="p1">**</ept> 이 이벤트는 새 데이터 개체에서 사용 가능 해지면 발생는 <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph> 속성입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
          <source>Enters a defer cycle that you can use to change properties of the provider and delay automatic refresh.</source>
          <target state="translated">공급자 속성을 변경하고 자동 새로 고침을 지연하는 데 사용할 수 있는 지연 주기를 입력합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
          <source>An <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> object that you can use to dispose of the calling object.</source>
          <target state="translated">호출하는 개체를 삭제하는 데 사용할 수 있는 <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
          <source>The typical usage is to create a <ph id="ph1">`using`</ph> scope with this method and then place multiple property changes within the scope.</source>
          <target state="translated">일반적인 사용법은 만들려는 <ph id="ph1">`using`</ph> 이 방법으로 범위가 지정 되 고 다음 범위 내에서 여러 속성 변경 내용을 배치 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
          <source>This delays automatic refresh until the defer cycle is exited.</source>
          <target state="translated">이 지연 주기가 종료 될 때까지 자동 새로 고침을 지연 됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.DataSourceProvider.Dispatcher">
          <source>Gets or sets the current <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> object to the <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> thread to use.</source>
          <target state="translated">사용할 <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 스레드에 대한 현재 <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> 개체를 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.Dispatcher">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> object to the <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> thread to use.</source>
          <target state="translated">현재 <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> 개체는 <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 스레드를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.Dispatcher">
          <source>By default, this is the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> object that is associated with the thread on which this instance was created.</source>
          <target state="translated">이 개체는 기본적으로 인스턴스를 만든 스레드에 연결되는 <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.EndInit">
          <source>Indicates that the initialization of this object has completed; this causes a <ph id="ph1">&lt;see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /&gt;</ph> if no other <ph id="ph2">&lt;see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /&gt;</ph> is outstanding.</source>
          <target state="translated">이 개체의 초기화가 완료되었음을 나타냅니다. 처리 중인 다른 <ph id="ph1">&lt;see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /&gt;</ph>가 없으면 <ph id="ph2">&lt;see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /&gt;</ph>가 발생합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.DataSourceProvider.Error">
          <source>Gets the error of the last query operation.</source>
          <target state="translated">마지막 쿼리 작업의 오류를 가져옵니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.Error">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that is the error of the last query operation, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there was no error.</source>
          <target state="translated">마지막 쿼리 작업의 오류인 <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> 형식의 값입니다. 오류가 없는 경우 <ph id="ph2">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.InitialLoad">
          <source>Starts the initial query to the underlying data model.</source>
          <target state="translated">기본 데이터 모델에 대한 초기 쿼리를 시작합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.InitialLoad">
          <source>The result is returned on the <ph id="ph1">&lt;see cref="P:System.Windows.Data.DataSourceProvider.Data" /&gt;</ph> property.</source>
          <target state="translated">결과는 <ph id="ph1">&lt;see cref="P:System.Windows.Data.DataSourceProvider.Data" /&gt;</ph> 속성에 반환됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.InitialLoad">
          <source>This method is typically called by the binding engine when dependent data bindings are activated.</source>
          <target state="translated">종속 데이터 바인딩을 활성화 될 때이 메서드는 일반적으로 바인딩 엔진에 의해 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.InitialLoad">
          <source>Set <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled%2A&gt;</ph> to <ph id="ph2">`false`</ph> to prevent or delay the automatic loading of data.</source>
          <target state="translated">설정 <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled%2A&gt;</ph> 를 <ph id="ph2">`false`</ph> 을 방지 하거나 데이터의 자동 로드를 지연 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.InitialLoad">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A&gt;</ph> method can be called multiple times.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A&gt;</ph> 메서드가 여러 번 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.InitialLoad">
          <source>The provider ignores subsequent calls once it is busy executing the initial query; the provider does not restart an already running query when <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A&gt;</ph> is called again.</source>
          <target state="translated">공급자; 초기 쿼리를 실행 중이면 후속 호출은 무시 공급자 이미 실행 중인 다시 시작 되지 않으면 쿼리할 때 <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A&gt;</ph> 를 다시 호출 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.InitialLoad">
          <source>When the query finishes successfully, any <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A&gt;</ph> call still does not re-query data.</source>
          <target state="translated">쿼리가 완료 되 면 성공적으로 모든 <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A&gt;</ph> 호출 여전히 다시 쿼리하지 않습니다 데이터입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.InitialLoad">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A&gt;</ph> operation is typically asynchronous, a <ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</ph> event is raised when the <ph id="ph3">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph> property assumed a new value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A&gt;</ph> 작업은 일반적으로 비동기는 <ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</ph> 이벤트가 발생할 때는 <ph id="ph3">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph> 속성에 새 값이 사용 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.InitialLoad">
          <source>The application calls <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</ph> to cause a refresh of the data.</source>
          <target state="translated">응용 프로그램 호출 <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</ph> 에 데이터를 새로 고칩니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
          <source>Gets or sets a value that indicates whether to prevent or delay the automatic loading of data.</source>
          <target state="translated">데이터 자동 로드를 방해하거나 지연할지 여부를 나타내는 값을 가져오거나 설정합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> to prevent or delay the automatic loading of data; otherwise, <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">데이터 자동 로드를 방해하거나 지연하면 <ph id="ph1">&lt;see langword="false" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph2">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">&lt;see langword="true" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
          <source>Typically the <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> runs its query and sets its <ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph> property the first time it is used by a binding or a <ph id="ph3">&lt;xref:System.Windows.Data.CollectionViewSource&gt;</ph>.</source>
          <target state="translated">일반적으로 <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider&gt;</ph> 해당 쿼리를 실행 하 고 설정의 <ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph> 속성 바인딩에 이미 사용 되는 처음 또는 <ph id="ph3">&lt;xref:System.Windows.Data.CollectionViewSource&gt;</ph>합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
          <source>You can omit this step by setting the <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">설정 하 여이 단계를 생략할 수는 <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled%2A&gt;</ph> 속성을 <ph id="ph2">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
          <source>In this case, the application must explicitly call <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</ph> to cause the provider to obtain its data.</source>
          <target state="translated">이 경우 응용 프로그램이 명시적으로 호출 해야 <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</ph> 해당 데이터를 가져오는 경우 공급자를 합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred">
          <source>Gets a value that indicates whether there is an outstanding <ph id="ph1">&lt;see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /&gt;</ph> in use.</source>
          <target state="translated">사용하고 있는 처리 중인 <ph id="ph1">&lt;see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /&gt;</ph>가 있는지 여부를 나타내는 값을 가져옵니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there is an outstanding <ph id="ph2">&lt;see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /&gt;</ph> in use; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">사용하고 있는 처리 중인 <ph id="ph2">&lt;see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /&gt;</ph>가 있으면 <ph id="ph1">&lt;see langword="true" /&gt;</ph>이고, 그렇지 않으면 <ph id="ph3">&lt;see langword="false" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred">
          <source><bpt id="p1">**</bpt>Notes to implementers:<ept id="p1">**</ept> To get the best use out of refresh deferral, do not call <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</ph> when this property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>구현자 참고 사항:<ept id="p1">**</ept> 를 새로 고침 deferral는 최상의 이용을 호출 하지 마십시오 <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</ph> 이 속성이 <ph id="ph2">`true`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Arguments of the event being raised.</source>
          <target state="translated">발생하는 이벤트의 인수입니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Data.DataSourceProvider.PropertyChanged" /&gt;</ph> event with the provided arguments.</source>
          <target state="translated">제공된 인수를 사용하여 <ph id="ph1">&lt;see cref="E:System.Windows.Data.DataSourceProvider.PropertyChanged" /&gt;</ph> 이벤트를 발생시킵니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="T:System.Windows.Data.DataSourceProvider">
          <source>Derived classes call this method to indicate that a query has finished.</source>
          <target state="translated">파생 클래스는 이 메서드를 호출하여 쿼리가 완료되었음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
          <source>The data that is the result of the query.</source>
          <target state="translated">쿼리 결과인 데이터입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
          <source>Derived classes call this method to indicate that a query has finished.</source>
          <target state="translated">파생 클래스는 이 메서드를 호출하여 쿼리가 완료되었음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
          <source>This callback can be called from any thread.</source>
          <target state="translated">이 콜백은 모든 스레드에서 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
          <source>This implementation marshals back the result to the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> thread before setting any of the public properties and before raising any events.</source>
          <target state="translated">이 구현은 다시 결과를 마샬링합니다.는 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 공용 속성을 설정 하기 전에 및 모든 이벤트를 발생 시키기 전에 스레드입니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
          <source>The data that is the result of the query.</source>
          <target state="translated">쿼리 결과인 데이터입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
          <source>The error that occurred while running the query.</source>
          <target state="translated">쿼리를 실행하는 동안 발생한 오류입니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
          <source>This value is <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no error.</source>
          <target state="translated">오류가 없는 경우 이 값은 <ph id="ph1">&lt;see langword="null" /&gt;</ph>입니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
          <source>Optional delegate that is used to execute completion work on the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> thread, for example, to set additional properties.</source>
          <target state="translated">추가 속성 설정 등 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 스레드에서 완성 기능을 실행하는 데 사용되는 선택적 대리자입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
          <source>Optional arguments to send as a parameter with the <bpt id="p1">&lt;c&gt;</bpt>completionWork<ept id="p1">&lt;/c&gt;</ept> delegate.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>completionWork<ept id="p1">&lt;/c&gt;</ept> 대리자와 함께 매개 변수로 전송할 선택적 인수입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
          <source>Derived classes call this method to indicate that a query has finished.</source>
          <target state="translated">파생 클래스는 이 메서드를 호출하여 쿼리가 완료되었음을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
          <source>This callback can be called from any thread.</source>
          <target state="translated">이 콜백은 모든 스레드에서 호출할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
          <source>This implementation marshals back the result to the <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> thread before setting any of the public properties and before raising any events.</source>
          <target state="translated">이 구현은 다시 결과를 마샬링합니다.는 <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> 공용 속성을 설정 하기 전에 및 모든 이벤트를 발생 시키기 전에 스레드입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="E:System.Windows.Data.DataSourceProvider.PropertyChanged">
          <source>Occurs when a property value changes.</source>
          <target state="translated">속성 값이 변경될 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.Refresh">
          <source>Initiates a refresh operation to the underlying data model.</source>
          <target state="translated">기본 데이터 모델의 새로 고침 작업을 초기화합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.Refresh">
          <source>The result is returned on the <ph id="ph1">&lt;see cref="P:System.Windows.Data.DataSourceProvider.Data" /&gt;</ph> property.</source>
          <target state="translated">결과는 <ph id="ph1">&lt;see cref="P:System.Windows.Data.DataSourceProvider.Data" /&gt;</ph> 속성에 반환됩니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.Refresh">
          <source>A refresh operation is typically asynchronous, a <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</ph> event is raised when the <ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph> property assumed a new value.</source>
          <target state="translated">새로 고침 작업은 일반적으로 비동기는 <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</ph> 이벤트가 발생할 때는 <ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph> 속성에 새 값이 사용 합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.Refresh">
          <source>If the refresh operation fails, the <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph> property is set to <ph id="ph2">`null`</ph>; the <ph id="ph3">&lt;xref:System.Windows.Data.DataSourceProvider.Error%2A&gt;</ph> property is set with the error exception.</source>
          <target state="translated">새로 고침 작업이 실패 하면는 <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Data%2A&gt;</ph> 속성이 <ph id="ph2">`null`</ph>; <ph id="ph3">&lt;xref:System.Windows.Data.DataSourceProvider.Error%2A&gt;</ph> 오류 예외로 속성을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.Refresh">
          <source>The application can call <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</ph> while a previous refresh is still underway.</source>
          <target state="translated">응용 프로그램에서 호출할 수 <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</ph> 이전 새로 고침을 계속 진행 하는 동안 합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Data.DataSourceProvider.Refresh">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</ph> twice raises the <ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</ph> event twice.</source>
          <target state="translated">호출 <ph id="ph1">&lt;xref:System.Windows.Data.DataSourceProvider.Refresh%2A&gt;</ph> 를 두 번 발생는 <ph id="ph2">&lt;xref:System.Windows.Data.DataSourceProvider.DataChanged&gt;</ph> 이벤트를 두 번입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 멤버는 <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">이 멤버는 <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>